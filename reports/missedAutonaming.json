{
  "aws-native:acmpca:Certificate": {
    "cfTypeName": "AWS::ACMPCA::Certificate",
    "properties": {
      "apiPassthrough": {
        "$ref": "#/types/aws-native:acmpca:CertificateApiPassthrough",
        "description": "Specifies X.509 certificate information to be included in the issued certificate. An ``APIPassthrough`` or ``APICSRPassthrough`` template variant must be selected, or else this parameter is ignored."
      },
      "certificateAuthorityArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the private CA issues the certificate."
      },
      "certificateSigningRequest": {
        "type": "string",
        "description": "The certificate signing request (CSR) for the certificate."
      },
      "signingAlgorithm": {
        "type": "string",
        "description": "The name of the algorithm that will be used to sign the certificate to be issued. \n This parameter should not be confused with the ``SigningAlgorithm`` parameter used to sign a CSR in the ``CreateCertificateAuthority`` action.\n  The specified signing algorithm family (RSA or ECDSA) must match the algorithm family of the CA's secret key."
      },
      "templateArn": {
        "type": "string",
        "description": "Specifies a custom configuration template to use when issuing a certificate. If this parameter is not provided, PCAshort defaults to the ``EndEntityCertificate/V1`` template. For more information about PCAshort templates, see [Using Templates](https://docs.aws.amazon.com/privateca/latest/userguide/UsingTemplates.html)."
      },
      "validity": {
        "$ref": "#/types/aws-native:acmpca:CertificateValidity",
        "description": "The period of time during which the certificate will be valid."
      },
      "validityNotBefore": {
        "$ref": "#/types/aws-native:acmpca:CertificateValidity",
        "description": "Information describing the start of the validity period of the certificate. This parameter sets the \"Not Before\" date for the certificate.\n By default, when issuing a certificate, PCAshort sets the \"Not Before\" date to the issuance time minus 60 minutes. This compensates for clock inconsistencies across computer systems. The ``ValidityNotBefore`` parameter can be used to customize the \"Not Before\" value. \n Unlike the ``Validity`` parameter, the ``ValidityNotBefore`` parameter is optional.\n The ``ValidityNotBefore`` value is expressed as an explicit date and time, using the ``Validity`` type value ``ABSOLUTE``."
      }
    }
  },
  "aws-native:acmpca:CertificateAuthority": {
    "cfTypeName": "AWS::ACMPCA::CertificateAuthority",
    "properties": {
      "csrExtensions": {
        "$ref": "#/types/aws-native:acmpca:CertificateAuthorityCsrExtensions",
        "description": "Structure that contains CSR pass through extension information used by the CreateCertificateAuthority action."
      },
      "keyAlgorithm": {
        "type": "string",
        "description": "Public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate."
      },
      "keyStorageSecurityStandard": {
        "type": "string",
        "description": "KeyStorageSecurityStadard defines a cryptographic key management compliance standard used for handling CA keys."
      },
      "revocationConfiguration": {
        "$ref": "#/types/aws-native:acmpca:CertificateAuthorityRevocationConfiguration",
        "description": "Certificate revocation information used by the CreateCertificateAuthority and UpdateCertificateAuthority actions."
      },
      "signingAlgorithm": {
        "type": "string",
        "description": "Algorithm your CA uses to sign certificate requests."
      },
      "subject": {
        "$ref": "#/types/aws-native:acmpca:CertificateAuthoritySubject",
        "description": "Structure that contains X.500 distinguished name information for your CA."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Key-value pairs that will be attached to the new private CA. You can associate up to 50 tags with a private CA. For information using tags with IAM to manage permissions, see [Controlling Access Using IAM Tags](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html) ."
      },
      "type": {
        "type": "string",
        "description": "The type of the certificate authority."
      },
      "usageMode": {
        "type": "string",
        "description": "Usage mode of the ceritificate authority."
      }
    }
  },
  "aws-native:acmpca:CertificateAuthorityActivation": {
    "cfTypeName": "AWS::ACMPCA::CertificateAuthorityActivation",
    "properties": {
      "certificate": {
        "type": "string",
        "description": "Certificate Authority certificate that will be installed in the Certificate Authority."
      },
      "certificateAuthorityArn": {
        "type": "string",
        "description": "Arn of the Certificate Authority."
      },
      "certificateChain": {
        "type": "string",
        "description": "Certificate chain for the Certificate Authority certificate."
      },
      "status": {
        "type": "string",
        "description": "The status of the Certificate Authority."
      }
    }
  },
  "aws-native:acmpca:Permission": {
    "cfTypeName": "AWS::ACMPCA::Permission",
    "properties": {
      "actions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The actions that the specified AWS service principal can use. Actions IssueCertificate, GetCertificate and ListPermissions must be provided."
      },
      "certificateAuthorityArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the Private Certificate Authority that grants the permission."
      },
      "principal": {
        "type": "string",
        "description": "The AWS service or identity that receives the permission. At this time, the only valid principal is acm.amazonaws.com."
      },
      "sourceAccount": {
        "type": "string",
        "description": "The ID of the calling account."
      }
    }
  },
  "aws-native:apigateway:Account": {
    "cfTypeName": "AWS::ApiGateway::Account",
    "properties": {
      "cloudWatchRoleArn": {
        "type": "string",
        "description": "The ARN of an Amazon CloudWatch role for the current Account."
      }
    }
  },
  "aws-native:apigateway:BasePathMapping": {
    "cfTypeName": "AWS::ApiGateway::BasePathMapping",
    "properties": {
      "basePath": {
        "type": "string",
        "description": "The base path name that callers of the API must provide as part of the URL after the domain name."
      },
      "domainName": {
        "type": "string",
        "description": "The domain name of the BasePathMapping resource to be described."
      },
      "restApiId": {
        "type": "string",
        "description": "The string identifier of the associated RestApi."
      },
      "stage": {
        "type": "string",
        "description": "The name of the associated stage."
      }
    }
  },
  "aws-native:apigateway:BasePathMappingV2": {
    "cfTypeName": "AWS::ApiGateway::BasePathMappingV2",
    "properties": {
      "basePath": {
        "type": "string",
        "description": "The base path name that callers of the API must provide in the URL after the domain name."
      },
      "domainNameArn": {
        "type": "string",
        "description": "The Arn of an AWS::ApiGateway::DomainNameV2 resource."
      },
      "restApiId": {
        "type": "string",
        "description": "The ID of the API."
      },
      "stage": {
        "type": "string",
        "description": "The name of the API's stage."
      }
    }
  },
  "aws-native:apigateway:ClientCertificate": {
    "cfTypeName": "AWS::ApiGateway::ClientCertificate",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description of the client certificate."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The collection of tags. Each tag element is associated with a given resource."
      }
    }
  },
  "aws-native:apigateway:Deployment": {
    "cfTypeName": "AWS::ApiGateway::Deployment",
    "properties": {
      "deploymentCanarySettings": {
        "$ref": "#/types/aws-native:apigateway:DeploymentCanarySettings",
        "description": "The input configuration for a canary deployment."
      },
      "description": {
        "type": "string",
        "description": "The description for the Deployment resource to create."
      },
      "restApiId": {
        "type": "string",
        "description": "The string identifier of the associated RestApi."
      },
      "stageDescription": {
        "$ref": "#/types/aws-native:apigateway:DeploymentStageDescription",
        "description": "The description of the Stage resource for the Deployment resource to create. To specify a stage description, you must also provide a stage name."
      },
      "stageName": {
        "type": "string",
        "description": "The name of the Stage resource for the Deployment resource to create."
      }
    }
  },
  "aws-native:apigateway:DocumentationPart": {
    "cfTypeName": "AWS::ApiGateway::DocumentationPart",
    "properties": {
      "location": {
        "$ref": "#/types/aws-native:apigateway:DocumentationPartLocation",
        "description": "The location of the targeted API entity of the to-be-created documentation part."
      },
      "properties": {
        "type": "string",
        "description": "The new documentation content map of the targeted API entity. Enclosed key-value pairs are API-specific, but only OpenAPI-compliant key-value pairs can be exported and, hence, published."
      },
      "restApiId": {
        "type": "string",
        "description": "The string identifier of the associated RestApi."
      }
    }
  },
  "aws-native:apigateway:DocumentationVersion": {
    "cfTypeName": "AWS::ApiGateway::DocumentationVersion",
    "properties": {
      "description": {
        "type": "string",
        "description": "A description about the new documentation snapshot."
      },
      "documentationVersion": {
        "type": "string",
        "description": "The version identifier of the to-be-updated documentation version.",
        "language": {
          "csharp": {
            "name": "DocumentationVersionValue"
          }
        }
      },
      "restApiId": {
        "type": "string",
        "description": "The string identifier of the associated RestApi."
      }
    }
  },
  "aws-native:apigateway:DomainName": {
    "cfTypeName": "AWS::ApiGateway::DomainName",
    "properties": {
      "certificateArn": {
        "type": "string",
        "description": "The reference to an AWS -managed certificate that will be used by edge-optimized endpoint or private endpoint for this domain name. AWS Certificate Manager is the only supported source."
      },
      "domainName": {
        "type": "string",
        "description": "The custom domain name as an API host name, for example, `my-api.example.com` .",
        "language": {
          "csharp": {
            "name": "DomainNameValue"
          }
        }
      },
      "endpointConfiguration": {
        "$ref": "#/types/aws-native:apigateway:DomainNameEndpointConfiguration",
        "description": "The endpoint configuration of this DomainName showing the endpoint types and IP address types of the domain name."
      },
      "mutualTlsAuthentication": {
        "$ref": "#/types/aws-native:apigateway:DomainNameMutualTlsAuthentication",
        "description": "The mutual TLS authentication configuration for a custom domain name. If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API."
      },
      "ownershipVerificationCertificateArn": {
        "type": "string",
        "description": "The ARN of the public certificate issued by ACM to validate ownership of your custom domain. Only required when configuring mutual TLS and using an ACM imported or private CA certificate ARN as the RegionalCertificateArn."
      },
      "regionalCertificateArn": {
        "type": "string",
        "description": "The reference to an AWS -managed certificate that will be used for validating the regional domain name. AWS Certificate Manager is the only supported source."
      },
      "securityPolicy": {
        "type": "string",
        "description": "The Transport Layer Security (TLS) version + cipher suite for this DomainName. The valid values are `TLS_1_0` and `TLS_1_2` ."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The collection of tags. Each tag element is associated with a given resource."
      }
    }
  },
  "aws-native:apigateway:DomainNameAccessAssociation": {
    "cfTypeName": "AWS::ApiGateway::DomainNameAccessAssociation",
    "properties": {
      "accessAssociationSource": {
        "type": "string",
        "description": "The source of the domain name access association resource."
      },
      "accessAssociationSourceType": {
        "$ref": "#/types/aws-native:apigateway:DomainNameAccessAssociationAccessAssociationSourceType",
        "description": "The source type of the domain name access association resource."
      },
      "domainNameArn": {
        "type": "string",
        "description": "The amazon resource name (ARN) of the domain name resource."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "An array of arbitrary tags (key-value pairs) to associate with the domainname access association."
      }
    }
  },
  "aws-native:apigateway:DomainNameV2": {
    "cfTypeName": "AWS::ApiGateway::DomainNameV2",
    "properties": {
      "certificateArn": {
        "type": "string",
        "description": "The reference to an AWS -managed certificate that will be used by the private endpoint for this domain name. AWS Certificate Manager is the only supported source."
      },
      "domainName": {
        "type": "string",
        "description": "Represents a custom domain name as a user-friendly host name of an API (RestApi)."
      },
      "endpointConfiguration": {
        "$ref": "#/types/aws-native:apigateway:DomainNameV2EndpointConfiguration",
        "description": "The endpoint configuration to indicate the types of endpoints an API (RestApi) or its custom domain name (DomainName) has and the IP address types that can invoke it."
      },
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "A stringified JSON policy document that applies to the `execute-api` service for this DomainName regardless of the caller and Method configuration. You can use `Fn::ToJsonString` to enter your `policy` . For more information, see [Fn::ToJsonString](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ToJsonString.html) .\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ApiGateway::DomainNameV2` for more information about the expected schema for this property."
      },
      "securityPolicy": {
        "type": "string",
        "description": "The Transport Layer Security (TLS) version + cipher suite for this DomainName. Only `TLS_1_2` is supported."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The collection of tags. Each tag element is associated with a given resource."
      }
    }
  },
  "aws-native:apigateway:GatewayResponse": {
    "cfTypeName": "AWS::ApiGateway::GatewayResponse",
    "properties": {
      "responseParameters": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Response parameters (paths, query strings and headers) of the GatewayResponse as a string-to-string map of key-value pairs."
      },
      "responseTemplates": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Response templates of the GatewayResponse as a string-to-string map of key-value pairs."
      },
      "responseType": {
        "type": "string",
        "description": "The response type of the associated GatewayResponse."
      },
      "restApiId": {
        "type": "string",
        "description": "The string identifier of the associated RestApi."
      },
      "statusCode": {
        "type": "string",
        "description": "The HTTP status code for this GatewayResponse."
      }
    }
  },
  "aws-native:apigateway:Method": {
    "cfTypeName": "AWS::ApiGateway::Method",
    "properties": {
      "apiKeyRequired": {
        "type": "boolean",
        "description": "A boolean flag specifying whether a valid ApiKey is required to invoke this method."
      },
      "authorizationScopes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of authorization scopes configured on the method. The scopes are used with a `COGNITO_USER_POOLS` authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes."
      },
      "authorizationType": {
        "type": "string",
        "description": "The method's authorization type. This parameter is required. For valid values, see [Method](https://docs.aws.amazon.com/apigateway/latest/api/API_Method.html) in the *API Gateway API Reference*.\n  If you specify the ``AuthorizerId`` property, specify ``CUSTOM`` or ``COGNITO_USER_POOLS`` for this property."
      },
      "authorizerId": {
        "type": "string",
        "description": "The identifier of an authorizer to use on this method. The method's authorization type must be `CUSTOM` or `COGNITO_USER_POOLS` ."
      },
      "httpMethod": {
        "type": "string",
        "description": "The method's HTTP verb."
      },
      "integration": {
        "$ref": "#/types/aws-native:apigateway:MethodIntegration",
        "description": "Represents an `HTTP` , `HTTP_PROXY` , `AWS` , `AWS_PROXY` , or Mock integration."
      },
      "methodResponses": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:apigateway:MethodResponse"
        },
        "description": "Gets a method response associated with a given HTTP status code."
      },
      "operationName": {
        "type": "string",
        "description": "A human-friendly operation identifier for the method. For example, you can assign the `operationName` of `ListPets` for the `GET /pets` method in the `PetStore` example."
      },
      "requestModels": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A key-value map specifying data schemas, represented by Model resources, (as the mapped value) of the request payloads of given content types (as the mapping key)."
      },
      "requestParameters": {
        "type": "object",
        "additionalProperties": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "description": "A key-value map defining required or optional method request parameters that can be accepted by API Gateway. A key is a method request parameter name matching the pattern of `method.request.{location}.{name}` , where `location` is `querystring` , `path` , or `header` and `name` is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required ( `true` ) or optional ( `false` ). The method request parameter names defined here are available in Integration to be mapped to integration request parameters or templates."
      },
      "requestValidatorId": {
        "type": "string",
        "description": "The identifier of a RequestValidator for request validation."
      },
      "resourceId": {
        "type": "string",
        "description": "The Resource identifier for the MethodResponse resource."
      },
      "restApiId": {
        "type": "string",
        "description": "The string identifier of the associated RestApi."
      }
    }
  },
  "aws-native:apigateway:Resource": {
    "cfTypeName": "AWS::ApiGateway::Resource",
    "properties": {
      "parentId": {
        "type": "string",
        "description": "The parent resource's identifier."
      },
      "pathPart": {
        "type": "string",
        "description": "The last path segment for this resource."
      },
      "restApiId": {
        "type": "string",
        "description": "The string identifier of the associated RestApi."
      }
    }
  },
  "aws-native:apigateway:UsagePlanKey": {
    "cfTypeName": "AWS::ApiGateway::UsagePlanKey",
    "properties": {
      "keyId": {
        "type": "string",
        "description": "The Id of the UsagePlanKey resource."
      },
      "keyType": {
        "$ref": "#/types/aws-native:apigateway:UsagePlanKeyKeyType",
        "description": "The type of a UsagePlanKey resource for a plan customer."
      },
      "usagePlanId": {
        "type": "string",
        "description": "The Id of the UsagePlan resource representing the usage plan containing the UsagePlanKey resource representing a plan customer."
      }
    }
  },
  "aws-native:apigatewayv2:ApiMapping": {
    "cfTypeName": "AWS::ApiGatewayV2::ApiMapping",
    "properties": {
      "apiId": {
        "type": "string",
        "description": "The identifier of the API."
      },
      "apiMappingKey": {
        "type": "string",
        "description": "The API mapping key."
      },
      "domainName": {
        "type": "string",
        "description": "The domain name."
      },
      "stage": {
        "type": "string",
        "description": "The API stage."
      }
    }
  },
  "aws-native:apigatewayv2:Deployment": {
    "cfTypeName": "AWS::ApiGatewayV2::Deployment",
    "properties": {
      "apiId": {
        "type": "string",
        "description": "The API identifier."
      },
      "description": {
        "type": "string",
        "description": "The description for the deployment resource."
      },
      "stageName": {
        "type": "string",
        "description": "The name of an existing stage to associate with the deployment."
      }
    }
  },
  "aws-native:apigatewayv2:DomainName": {
    "cfTypeName": "AWS::ApiGatewayV2::DomainName",
    "properties": {
      "domainName": {
        "type": "string",
        "description": "The custom domain name for your API in Amazon API Gateway. Uppercase letters and the underscore (``_``) character are not supported.",
        "language": {
          "csharp": {
            "name": "DomainNameValue"
          }
        }
      },
      "domainNameConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:apigatewayv2:DomainNameConfiguration"
        },
        "description": "The domain name configurations."
      },
      "mutualTlsAuthentication": {
        "$ref": "#/types/aws-native:apigatewayv2:DomainNameMutualTlsAuthentication",
        "description": "The mutual TLS authentication configuration for a custom domain name."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The collection of tags associated with a domain name."
      }
    }
  },
  "aws-native:apigatewayv2:Integration": {
    "cfTypeName": "AWS::ApiGatewayV2::Integration",
    "properties": {
      "apiId": {
        "type": "string",
        "description": "The API identifier."
      },
      "connectionId": {
        "type": "string",
        "description": "The ID of the VPC link for a private integration. Supported only for HTTP APIs."
      },
      "connectionType": {
        "type": "string",
        "description": "The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET."
      },
      "contentHandlingStrategy": {
        "type": "string",
        "description": "Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT."
      },
      "credentialsArn": {
        "type": "string",
        "description": "Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, don't specify this parameter."
      },
      "description": {
        "type": "string",
        "description": "The description of the integration."
      },
      "integrationMethod": {
        "type": "string",
        "description": "Specifies the integration's HTTP method type."
      },
      "integrationSubtype": {
        "type": "string",
        "description": "Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS service action to invoke."
      },
      "integrationType": {
        "type": "string",
        "description": "The integration type of an integration."
      },
      "integrationUri": {
        "type": "string",
        "description": "For a Lambda integration, specify the URI of a Lambda function. For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service."
      },
      "passthroughBehavior": {
        "type": "string",
        "description": "Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs."
      },
      "payloadFormatVersion": {
        "type": "string",
        "description": "Specifies the format of the payload sent to an integration. Required for HTTP APIs. For HTTP APIs, supported values for Lambda proxy integrations are 1.0 and 2.0 For all other integrations, 1.0 is the only supported value."
      },
      "requestParameters": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A key-value map specifying parameters."
      },
      "requestTemplates": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client."
      },
      "responseParameters": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:apigatewayv2:IntegrationResponseParameterMap"
        },
        "description": "Parameters that transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs."
      },
      "templateSelectionExpression": {
        "type": "string",
        "description": "The template selection expression for the integration. Supported only for WebSocket APIs."
      },
      "timeoutInMillis": {
        "type": "integer",
        "description": "Custom timeout between 50 and 29000 milliseconds for WebSocket APIs and between 50 and 30000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs."
      },
      "tlsConfig": {
        "$ref": "#/types/aws-native:apigatewayv2:IntegrationTlsConfig",
        "description": "The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs."
      }
    }
  },
  "aws-native:apigatewayv2:IntegrationResponse": {
    "cfTypeName": "AWS::ApiGatewayV2::IntegrationResponse",
    "properties": {
      "apiId": {
        "type": "string",
        "description": "The API identifier."
      },
      "contentHandlingStrategy": {
        "type": "string",
        "description": "Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are ``CONVERT_TO_BINARY`` and ``CONVERT_TO_TEXT``, with the following behaviors:\n  ``CONVERT_TO_BINARY``: Converts a response payload from a Base64-encoded string to the corresponding binary blob.\n  ``CONVERT_TO_TEXT``: Converts a response payload from a binary blob to a Base64-encoded string.\n If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification."
      },
      "integrationId": {
        "type": "string",
        "description": "The integration ID."
      },
      "integrationResponseKey": {
        "type": "string",
        "description": "The integration response key."
      },
      "responseParameters": {
        "$ref": "pulumi.json#/Any",
        "description": "A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of ``method.response.header.{name}``, where name is a valid and unique header name. The mapped non-static value must match the pattern of ``integration.response.header.{name}`` or ``integration.response.body.{JSON-expression}``, where ``{name}`` is a valid and unique response header name and ``{JSON-expression}`` is a valid JSON expression without the ``$`` prefix.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ApiGatewayV2::IntegrationResponse` for more information about the expected schema for this property."
      },
      "responseTemplates": {
        "$ref": "pulumi.json#/Any",
        "description": "The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ApiGatewayV2::IntegrationResponse` for more information about the expected schema for this property."
      },
      "templateSelectionExpression": {
        "type": "string",
        "description": "The template selection expression for the integration response. Supported only for WebSocket APIs."
      }
    }
  },
  "aws-native:apigatewayv2:Route": {
    "cfTypeName": "AWS::ApiGatewayV2::Route",
    "properties": {
      "apiId": {
        "type": "string",
        "description": "The API identifier."
      },
      "apiKeyRequired": {
        "type": "boolean",
        "description": "Specifies whether an API key is required for the route. Supported only for WebSocket APIs."
      },
      "authorizationScopes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The authorization scopes supported by this route."
      },
      "authorizationType": {
        "type": "string",
        "description": "The authorization type for the route. For WebSocket APIs, valid values are ``NONE`` for open access, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer. For HTTP APIs, valid values are ``NONE`` for open access, ``JWT`` for using JSON Web Tokens, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer."
      },
      "authorizerId": {
        "type": "string",
        "description": "The identifier of the ``Authorizer`` resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer."
      },
      "modelSelectionExpression": {
        "type": "string",
        "description": "The model selection expression for the route. Supported only for WebSocket APIs."
      },
      "operationName": {
        "type": "string",
        "description": "The operation name for the route."
      },
      "requestModels": {
        "$ref": "pulumi.json#/Any",
        "description": "The request models for the route. Supported only for WebSocket APIs.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ApiGatewayV2::Route` for more information about the expected schema for this property."
      },
      "requestParameters": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:apigatewayv2:RouteParameterConstraints"
        },
        "description": "The request parameters for the route. Supported only for WebSocket APIs."
      },
      "routeKey": {
        "type": "string",
        "description": "The route key for the route. For HTTP APIs, the route key can be either ``$default``, or a combination of an HTTP method and resource path, for example, ``GET /pets``."
      },
      "routeResponseSelectionExpression": {
        "type": "string",
        "description": "The route response selection expression for the route. Supported only for WebSocket APIs."
      },
      "target": {
        "type": "string",
        "description": "The target for the route."
      }
    }
  },
  "aws-native:apigatewayv2:RouteResponse": {
    "cfTypeName": "AWS::ApiGatewayV2::RouteResponse",
    "properties": {
      "apiId": {
        "type": "string",
        "description": "The API identifier."
      },
      "modelSelectionExpression": {
        "type": "string",
        "description": "The model selection expression for the route response. Supported only for WebSocket APIs."
      },
      "responseModels": {
        "$ref": "pulumi.json#/Any",
        "description": "The response models for the route response.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ApiGatewayV2::RouteResponse` for more information about the expected schema for this property."
      },
      "responseParameters": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:apigatewayv2:RouteResponseParameterConstraints"
        },
        "description": "The route response parameters."
      },
      "routeId": {
        "type": "string",
        "description": "The route ID."
      },
      "routeResponseKey": {
        "type": "string",
        "description": "The route response key."
      }
    }
  },
  "aws-native:appconfig:Deployment": {
    "cfTypeName": "AWS::AppConfig::Deployment",
    "properties": {
      "applicationId": {
        "type": "string",
        "description": "The application ID."
      },
      "configurationProfileId": {
        "type": "string",
        "description": "The configuration profile ID."
      },
      "configurationVersion": {
        "type": "string",
        "description": "The configuration version to deploy. If deploying an AWS AppConfig hosted configuration version, you can specify either the version number or version label. For all other configurations, you must specify the version number."
      },
      "deploymentStrategyId": {
        "type": "string",
        "description": "The deployment strategy ID."
      },
      "description": {
        "type": "string",
        "description": "A description of the deployment."
      },
      "dynamicExtensionParameters": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:appconfig:DeploymentDynamicExtensionParameters"
        },
        "description": "A map of dynamic extension parameter names to values to pass to associated extensions with `PRE_START_DEPLOYMENT` actions."
      },
      "environmentId": {
        "type": "string",
        "description": "The environment ID."
      },
      "kmsKeyIdentifier": {
        "type": "string",
        "description": "The AWS Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:appconfig:ExtensionAssociation": {
    "cfTypeName": "AWS::AppConfig::ExtensionAssociation",
    "properties": {
      "extensionIdentifier": {
        "type": "string",
        "description": "The name, the ID, or the Amazon Resource Name (ARN) of the extension."
      },
      "extensionVersionNumber": {
        "type": "integer",
        "description": "The version number of the extension. If not specified, AWS AppConfig uses the maximum version of the extension."
      },
      "parameters": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The parameter names and values defined in the extensions. Extension parameters marked `Required` must be entered for this field."
      },
      "resourceIdentifier": {
        "type": "string",
        "description": "The ARN of an application, configuration profile, or environment."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:appconfig:HostedConfigurationVersion": {
    "cfTypeName": "AWS::AppConfig::HostedConfigurationVersion",
    "properties": {
      "applicationId": {
        "type": "string",
        "description": "The application ID."
      },
      "configurationProfileId": {
        "type": "string",
        "description": "The configuration profile ID."
      },
      "content": {
        "type": "string",
        "description": "The content of the configuration or the configuration data."
      },
      "contentType": {
        "type": "string",
        "description": "A standard MIME type describing the format of the configuration content."
      },
      "description": {
        "type": "string",
        "description": "A description of the hosted configuration version."
      },
      "latestVersionNumber": {
        "type": "integer",
        "description": "An optional locking token used to prevent race conditions from overwriting configuration updates when creating a new version. To ensure your data is not overwritten when creating multiple hosted configuration versions in rapid succession, specify the version number of the latest hosted configuration version."
      },
      "versionLabel": {
        "type": "string",
        "description": "A user-defined label for an AWS AppConfig hosted configuration version."
      }
    }
  },
  "aws-native:appflow:Connector": {
    "cfTypeName": "AWS::AppFlow::Connector",
    "properties": {
      "connectorLabel": {
        "type": "string",
        "description": " The name of the connector. The name is unique for each ConnectorRegistration in your AWS account."
      },
      "connectorProvisioningConfig": {
        "$ref": "#/types/aws-native:appflow:ConnectorProvisioningConfig",
        "description": "Contains information about the configuration of the connector being registered."
      },
      "connectorProvisioningType": {
        "type": "string",
        "description": "The provisioning type of the connector. Currently the only supported value is LAMBDA. "
      },
      "description": {
        "type": "string",
        "description": "A description about the connector that's being registered."
      }
    }
  },
  "aws-native:applicationautoscaling:ScalableTarget": {
    "cfTypeName": "AWS::ApplicationAutoScaling::ScalableTarget",
    "properties": {
      "maxCapacity": {
        "type": "integer",
        "description": "The maximum value that you plan to scale out to. When a scaling policy is in effect, Application Auto Scaling can scale out (expand) as needed to the maximum capacity limit in response to changing demand."
      },
      "minCapacity": {
        "type": "integer",
        "description": "The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand."
      },
      "resourceId": {
        "type": "string",
        "description": "The identifier of the resource associated with the scalable target. This string consists of the resource type and unique identifier.\n  +  ECS service - The resource type is ``service`` and the unique identifier is the cluster name and service name. Example: ``service/my-cluster/my-service``.\n  +  Spot Fleet - The resource type is ``spot-fleet-request`` and the unique identifier is the Spot Fleet request ID. Example: ``spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE``.\n  +  EMR cluster - The resource type is ``instancegroup`` and the unique identifier is the cluster ID and instance group ID. Example: ``instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0``.\n  +  AppStream 2.0 fleet - The resource type is ``fleet`` and the unique identifier is the fleet name. Example: ``fleet/sample-fleet``.\n  +  DynamoDB table - The resource type is ``table`` and the unique identifier is the table name. Example: ``table/my-table``.\n  +  DynamoDB global secondary index - The resource type is ``index`` and the unique identifier is the index name. Example: ``table/my-table/index/my-table-index``.\n  +  Aurora DB cluster - The resource type is ``cluster`` and the unique identifier is the cluster name. Example: ``cluster:my-db-cluster``.\n  +  SageMaker endpoint variant - The resource type is ``variant`` and the unique identifier is the resource ID. Example: ``endpoint/my-end-point/variant/KMeansClustering``.\n  +  Custom resources are not supported with a resource type. This parameter must specify the ``OutputValue`` from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://docs.aws.amazon.com/https://github.com/aws/aws-auto-scaling-custom-resource).\n  +  Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: ``arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE``.\n  +  Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: ``arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE``.\n  +  Lambda provisioned concurrency - The resource type is ``function`` and the unique identifier is the function name with a function version or alias name suffix that is not ``$LATEST``. Example: ``function:my-function:prod`` or ``function:my-function:1``.\n  +  Amazon Keyspaces table - The resource type is ``table`` and the unique identifier is the table name. Example: ``keyspace/mykeyspace/table/mytable``.\n  +  Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: ``arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5``.\n  +  Amazon ElastiCache replication group - The resource type is ``replication-group`` and the unique identifier is the replication group name. Example: ``replication-group/mycluster``.\n  +  Neptune cluster - The resource type is ``cluster`` and the unique identifier is the cluster name. Example: ``cluster:mycluster``.\n  +  SageMaker serverless endpoint - The resource type is ``variant`` and the unique identifier is the resource ID. Example: ``endpoint/my-end-point/variant/KMeansClustering``.\n  +  SageMaker inference component - The resource type is ``inference-component`` and the unique identifier is the resource ID. Example: ``inference-component/my-inference-component``."
      },
      "roleArn": {
        "type": "string",
        "description": "Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf. This can be either an IAM service role that Application Auto Scaling can assume to make calls to other AWS resources on your behalf, or a service-linked role for the specified service. For more information, see [How Application Auto Scaling works with IAM](https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html) in the *Application Auto Scaling User Guide*.\n To automatically create a service-linked role (recommended), specify the full ARN of the service-linked role in your stack template. To find the exact ARN of the service-linked role for your AWS or custom resource, see the [Service-linked roles](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-service-linked-roles.html) topic in the *Application Auto Scaling User Guide*. Look for the ARN in the table at the bottom of the page."
      },
      "scalableDimension": {
        "type": "string",
        "description": "The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property.\n  +   ``ecs:service:DesiredCount`` - The desired task count of an ECS service.\n  +   ``elasticmapreduce:instancegroup:InstanceCount`` - The instance count of an EMR Instance Group.\n  +   ``ec2:spot-fleet-request:TargetCapacity`` - The target capacity of a Spot Fleet.\n  +   ``appstream:fleet:DesiredCapacity`` - The desired capacity of an AppStream 2.0 fleet.\n  +   ``dynamodb:table:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB table.\n  +   ``dynamodb:table:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB table.\n  +   ``dynamodb:index:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB global secondary index.\n  +   ``dynamodb:index:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB global secondary index.\n  +   ``rds:cluster:ReadReplicaCount`` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.\n  +   ``sagemaker:variant:DesiredInstanceCount`` - The number of EC2 instances for a SageMaker model endpoint variant.\n  +   ``custom-resource:ResourceType:Property`` - The scalable dimension for a custom resource provided by your own application or service.\n  +   ``comprehend:document-classifier-endpoint:DesiredInferenceUnits`` - The number of inference units for an Amazon Comprehend document classification endpoint.\n  +   ``comprehend:entity-recognizer-endpoint:DesiredInferenceUnits`` - The number of inference units for an Amazon Comprehend entity recognizer endpoint.\n  +   ``lambda:function:ProvisionedConcurrency`` - The provisioned concurrency for a Lambda function.\n  +   ``cassandra:table:ReadCapacityUnits`` - The provisioned read capacity for an Amazon Keyspaces table.\n  +   ``cassandra:table:WriteCapacityUnits`` - The provisioned write capacity for an Amazon Keyspaces table.\n  +   ``kafka:broker-storage:VolumeSize`` - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.\n  +   ``elasticache:replication-group:NodeGroups`` - The number of node groups for an Amazon ElastiCache replication group.\n  +   ``elasticache:replication-group:Replicas`` - The number of replicas per node group for an Amazon ElastiCache replication group.\n  +   ``neptune:cluster:ReadReplicaCount`` - The count of read replicas in an Amazon Neptune DB cluster.\n  +   ``sagemaker:variant:DesiredProvisionedConcurrency`` - The provisioned concurrency for a SageMaker serverless endpoint.\n  +   ``sagemaker:inference-component:DesiredCopyCount`` - The number of copies across an endpoint for a SageMaker inference component."
      },
      "scheduledActions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:applicationautoscaling:ScalableTargetScheduledAction"
        },
        "description": "The scheduled actions for the scalable target. Duplicates aren't allowed."
      },
      "serviceNamespace": {
        "type": "string",
        "description": "The namespace of the AWS service that provides the resource, or a ``custom-resource``."
      },
      "suspendedState": {
        "$ref": "#/types/aws-native:applicationautoscaling:ScalableTargetSuspendedState",
        "description": "An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to ``true`` suspends the specified scaling activities. Setting it to ``false`` (default) resumes the specified scaling activities. \n  *Suspension Outcomes* \n  +  For ``DynamicScalingInSuspended``, while a suspension is in effect, all scale-in activities that are triggered by a scaling policy are suspended.\n  +  For ``DynamicScalingOutSuspended``, while a suspension is in effect, all scale-out activities that are triggered by a scaling policy are suspended.\n  +  For ``ScheduledScalingSuspended``, while a suspension is in effect, all scaling activities that involve scheduled actions are suspended."
      }
    }
  },
  "aws-native:applicationinsights:Application": {
    "cfTypeName": "AWS::ApplicationInsights::Application",
    "properties": {
      "attachMissingPermission": {
        "type": "boolean",
        "description": "If set to true, the managed policies for SSM and CW will be attached to the instance roles if they are missing"
      },
      "autoConfigurationEnabled": {
        "type": "boolean",
        "description": "If set to true, application will be configured with recommended monitoring configuration."
      },
      "componentMonitoringSettings": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:applicationinsights:ApplicationComponentMonitoringSetting"
        },
        "description": "The monitoring settings of the components."
      },
      "customComponents": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:applicationinsights:ApplicationCustomComponent"
        },
        "description": "The custom grouped components."
      },
      "cweMonitorEnabled": {
        "type": "boolean",
        "description": "Indicates whether Application Insights can listen to CloudWatch events for the application resources."
      },
      "groupingType": {
        "$ref": "#/types/aws-native:applicationinsights:ApplicationGroupingType",
        "description": "The grouping type of the application"
      },
      "logPatternSets": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:applicationinsights:ApplicationLogPatternSet"
        },
        "description": "The log pattern sets."
      },
      "opsCenterEnabled": {
        "type": "boolean",
        "description": "When set to true, creates opsItems for any problems detected on an application."
      },
      "opsItemSnsTopicArn": {
        "type": "string",
        "description": "The SNS topic provided to Application Insights that is associated to the created opsItem."
      },
      "resourceGroupName": {
        "type": "string",
        "description": "The name of the resource group."
      },
      "snsNotificationArn": {
        "type": "string",
        "description": "Application Insights sends notifications to this SNS topic whenever there is a problem update in the associated application."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags of Application Insights application."
      }
    }
  },
  "aws-native:applicationsignals:Discovery": {
    "cfTypeName": "AWS::ApplicationSignals::Discovery",
    "properties": {}
  },
  "aws-native:appstream:ApplicationEntitlementAssociation": {
    "cfTypeName": "AWS::AppStream::ApplicationEntitlementAssociation",
    "properties": {
      "applicationIdentifier": {
        "type": "string",
        "description": "The identifier of the application."
      },
      "entitlementName": {
        "type": "string",
        "description": "The name of the entitlement."
      },
      "stackName": {
        "type": "string",
        "description": "The name of the stack."
      }
    }
  },
  "aws-native:appstream:ApplicationFleetAssociation": {
    "cfTypeName": "AWS::AppStream::ApplicationFleetAssociation",
    "properties": {
      "applicationArn": {
        "type": "string",
        "description": "The ARN of the application."
      },
      "fleetName": {
        "type": "string",
        "description": "The name of the fleet."
      }
    }
  },
  "aws-native:appstream:DirectoryConfig": {
    "cfTypeName": "AWS::AppStream::DirectoryConfig",
    "properties": {
      "certificateBasedAuthProperties": {
        "$ref": "#/types/aws-native:appstream:DirectoryConfigCertificateBasedAuthProperties",
        "description": "The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances."
      },
      "directoryName": {
        "type": "string",
        "description": "The fully qualified name of the directory (for example, corp.example.com)."
      },
      "organizationalUnitDistinguishedNames": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The distinguished names of the organizational units for computer accounts."
      },
      "serviceAccountCredentials": {
        "$ref": "#/types/aws-native:appstream:DirectoryConfigServiceAccountCredentials",
        "description": "The credentials for the service account used by the streaming instance to connect to the directory. Do not use this parameter directly. Use `ServiceAccountCredentials` as an input parameter with `noEcho` as shown in the [Parameters](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html) . For best practices information, see [Do Not Embed Credentials in Your Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best-practices.html#creds) ."
      }
    }
  },
  "aws-native:appsync:DomainName": {
    "cfTypeName": "AWS::AppSync::DomainName",
    "properties": {
      "certificateArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the certificate. This will be an AWS Certificate Manager certificate."
      },
      "description": {
        "type": "string",
        "description": "The decription for your domain name."
      },
      "domainName": {
        "type": "string",
        "description": "The domain name.",
        "language": {
          "csharp": {
            "name": "DomainNameValue"
          }
        }
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A set of tags (key-value pairs) for this domain name."
      }
    }
  },
  "aws-native:appsync:DomainNameApiAssociation": {
    "cfTypeName": "AWS::AppSync::DomainNameApiAssociation",
    "properties": {
      "apiId": {
        "type": "string",
        "description": "The API ID."
      },
      "domainName": {
        "type": "string",
        "description": "The domain name."
      }
    }
  },
  "aws-native:appsync:Resolver": {
    "cfTypeName": "AWS::AppSync::Resolver",
    "properties": {
      "apiId": {
        "type": "string",
        "description": "The APSYlong GraphQL API to which you want to attach this resolver."
      },
      "cachingConfig": {
        "$ref": "#/types/aws-native:appsync:ResolverCachingConfig",
        "description": "The caching configuration for the resolver."
      },
      "code": {
        "type": "string",
        "description": "The ``resolver`` code that contains the request and response functions. When code is used, the ``runtime`` is required. The runtime value must be ``APPSYNC_JS``."
      },
      "codeS3Location": {
        "type": "string",
        "description": "The Amazon S3 endpoint."
      },
      "dataSourceName": {
        "type": "string",
        "description": "The resolver data source name."
      },
      "fieldName": {
        "type": "string",
        "description": "The GraphQL field on a type that invokes the resolver."
      },
      "kind": {
        "type": "string",
        "description": "The resolver type.\n  +   *UNIT*: A UNIT resolver type. A UNIT resolver is the default resolver type. You can use a UNIT resolver to run a GraphQL query against a single data source.\n  +   *PIPELINE*: A PIPELINE resolver type. You can use a PIPELINE resolver to invoke a series of ``Function`` objects in a serial manner. You can use a pipeline resolver to run a GraphQL query against multiple data sources."
      },
      "maxBatchSize": {
        "type": "integer",
        "description": "The maximum number of resolver request inputs that will be sent to a single LAMlong function in a ``BatchInvoke`` operation."
      },
      "metricsConfig": {
        "$ref": "#/types/aws-native:appsync:ResolverMetricsConfig",
        "description": "Enables or disables enhanced resolver metrics for specified resolvers. Note that ``MetricsConfig`` won't be used unless the ``resolverLevelMetricsBehavior`` value is set to ``PER_RESOLVER_METRICS``. If the ``resolverLevelMetricsBehavior`` is set to ``FULL_REQUEST_RESOLVER_METRICS`` instead, ``MetricsConfig`` will be ignored. However, you can still set its value."
      },
      "pipelineConfig": {
        "$ref": "#/types/aws-native:appsync:ResolverPipelineConfig",
        "description": "Functions linked with the pipeline resolver."
      },
      "requestMappingTemplate": {
        "type": "string",
        "description": "The request mapping template.\n Request mapping templates are optional when using a Lambda data source. For all other data sources, a request mapping template is required."
      },
      "requestMappingTemplateS3Location": {
        "type": "string",
        "description": "The location of a request mapping template in an S3 bucket. Use this if you want to provision with a template file in S3 rather than embedding it in your CFNshort template."
      },
      "responseMappingTemplate": {
        "type": "string",
        "description": "The response mapping template."
      },
      "responseMappingTemplateS3Location": {
        "type": "string",
        "description": "The location of a response mapping template in an S3 bucket. Use this if you want to provision with a template file in S3 rather than embedding it in your CFNshort template."
      },
      "runtime": {
        "$ref": "#/types/aws-native:appsync:ResolverAppSyncRuntime",
        "description": "Describes a runtime used by an APSYlong resolver or APSYlong function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified."
      },
      "syncConfig": {
        "$ref": "#/types/aws-native:appsync:ResolverSyncConfig",
        "description": "The ``SyncConfig`` for a resolver attached to a versioned data source."
      },
      "typeName": {
        "type": "string",
        "description": "The GraphQL type that invokes this resolver."
      }
    }
  },
  "aws-native:appsync:SourceApiAssociation": {
    "cfTypeName": "AWS::AppSync::SourceApiAssociation",
    "properties": {
      "description": {
        "type": "string",
        "description": "Description of the SourceApiAssociation."
      },
      "mergedApiIdentifier": {
        "type": "string",
        "description": "Identifier of the Merged GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN"
      },
      "sourceApiAssociationConfig": {
        "$ref": "#/types/aws-native:appsync:SourceApiAssociationConfig",
        "description": "Customized configuration for SourceApiAssociation."
      },
      "sourceApiIdentifier": {
        "type": "string",
        "description": "Identifier of the Source GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN"
      }
    }
  },
  "aws-native:aps:Scraper": {
    "cfTypeName": "AWS::APS::Scraper",
    "properties": {
      "alias": {
        "type": "string",
        "description": "Scraper alias."
      },
      "destination": {
        "$ref": "#/types/aws-native:aps:ScraperDestination",
        "description": "The Amazon Managed Service for Prometheus workspace the scraper sends metrics to."
      },
      "roleConfiguration": {
        "$ref": "#/types/aws-native:aps:ScraperRoleConfiguration"
      },
      "scrapeConfiguration": {
        "$ref": "#/types/aws-native:aps:ScraperScrapeConfiguration",
        "description": "The configuration in use by the scraper."
      },
      "source": {
        "$ref": "#/types/aws-native:aps:ScraperSource",
        "description": "The Amazon EKS cluster from which the scraper collects metrics."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:aps:Workspace": {
    "cfTypeName": "AWS::APS::Workspace",
    "properties": {
      "alertManagerDefinition": {
        "type": "string",
        "description": "The AMP Workspace alert manager definition data"
      },
      "alias": {
        "type": "string",
        "description": "AMP Workspace alias."
      },
      "kmsKeyArn": {
        "type": "string",
        "description": "KMS Key ARN used to encrypt and decrypt AMP workspace data."
      },
      "loggingConfiguration": {
        "$ref": "#/types/aws-native:aps:WorkspaceLoggingConfiguration",
        "description": "Contains information about the logging configuration for the workspace."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "workspaceConfiguration": {
        "$ref": "#/types/aws-native:aps:WorkspaceConfiguration",
        "description": "Use this structure to define label sets and the ingestion limits for time series that match label sets, and to specify the retention period of the workspace."
      }
    }
  },
  "aws-native:arczonalshift:AutoshiftObserverNotificationStatus": {
    "cfTypeName": "AWS::ARCZonalShift::AutoshiftObserverNotificationStatus",
    "properties": {
      "status": {
        "$ref": "#/types/aws-native:arczonalshift:AutoshiftObserverNotificationStatusEnum"
      }
    }
  },
  "aws-native:arczonalshift:ZonalAutoshiftConfiguration": {
    "cfTypeName": "AWS::ARCZonalShift::ZonalAutoshiftConfiguration",
    "properties": {
      "practiceRunConfiguration": {
        "$ref": "#/types/aws-native:arczonalshift:ZonalAutoshiftConfigurationPracticeRunConfiguration",
        "description": "A practice run configuration for a resource includes the Amazon CloudWatch alarms that you've specified for a practice run, as well as any blocked dates or blocked windows for the practice run. When a resource has a practice run configuration, ARC shifts traffic for the resource weekly for practice runs.\n\nPractice runs are required for zonal autoshift. The zonal shifts that ARC starts for practice runs help you to ensure that shifting away traffic from an Availability Zone during an autoshift is safe for your application.\n\nYou can update or delete a practice run configuration. Before you delete a practice run configuration, you must disable zonal autoshift for the resource. A practice run configuration is required when zonal autoshift is enabled."
      },
      "resourceIdentifier": {
        "type": "string",
        "description": "The identifier for the resource that AWS shifts traffic for. The identifier is the Amazon Resource Name (ARN) for the resource.\n\nAt this time, supported resources are Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off."
      },
      "zonalAutoshiftStatus": {
        "$ref": "#/types/aws-native:arczonalshift:ZonalAutoshiftConfigurationZonalAutoshiftStatus",
        "description": "When zonal autoshift is `ENABLED` , you authorize AWS to shift away resource traffic for an application from an Availability Zone during events, on your behalf, to help reduce time to recovery. Traffic is also shifted away for the required weekly practice runs."
      }
    }
  },
  "aws-native:autoscaling:ScalingPolicy": {
    "cfTypeName": "AWS::AutoScaling::ScalingPolicy",
    "properties": {
      "adjustmentType": {
        "type": "string",
        "description": "Specifies how the scaling adjustment is interpreted. The valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity."
      },
      "autoScalingGroupName": {
        "type": "string",
        "description": "The name of the Auto Scaling group."
      },
      "cooldown": {
        "type": "string",
        "description": "The duration of the policy's cooldown period, in seconds. When a cooldown period is specified here, it overrides the default cooldown period defined for the Auto Scaling group."
      },
      "estimatedInstanceWarmup": {
        "type": "integer",
        "description": "The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. If not provided, the default is to use the value from the default cooldown period for the Auto Scaling group. Valid only if the policy type is TargetTrackingScaling or StepScaling."
      },
      "metricAggregationType": {
        "type": "string",
        "description": "The aggregation type for the CloudWatch metrics. The valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average. Valid only if the policy type is StepScaling."
      },
      "minAdjustmentMagnitude": {
        "type": "integer",
        "description": "The minimum value to scale by when the adjustment type is PercentChangeInCapacity. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a MinAdjustmentMagnitude of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a MinAdjustmentMagnitude of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances."
      },
      "policyType": {
        "type": "string",
        "description": "One of the following policy types: TargetTrackingScaling, StepScaling, SimpleScaling (default), PredictiveScaling"
      },
      "predictiveScalingConfiguration": {
        "$ref": "#/types/aws-native:autoscaling:ScalingPolicyPredictiveScalingConfiguration",
        "description": "A predictive scaling policy. Includes support for predefined metrics only."
      },
      "scalingAdjustment": {
        "type": "integer",
        "description": "The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value. Required if the policy type is SimpleScaling. (Not used with any other policy type.)"
      },
      "stepAdjustments": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:autoscaling:ScalingPolicyStepAdjustment"
        },
        "description": "A set of adjustments that enable you to scale based on the size of the alarm breach. Required if the policy type is StepScaling. (Not used with any other policy type.)"
      },
      "targetTrackingConfiguration": {
        "$ref": "#/types/aws-native:autoscaling:ScalingPolicyTargetTrackingConfiguration",
        "description": "A target tracking scaling policy. Includes support for predefined or customized metrics."
      }
    }
  },
  "aws-native:autoscaling:ScheduledAction": {
    "cfTypeName": "AWS::AutoScaling::ScheduledAction",
    "properties": {
      "autoScalingGroupName": {
        "type": "string",
        "description": "The name of the Auto Scaling group."
      },
      "desiredCapacity": {
        "type": "integer",
        "description": "The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain."
      },
      "endTime": {
        "type": "string",
        "description": "The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored."
      },
      "maxSize": {
        "type": "integer",
        "description": "The minimum size of the Auto Scaling group."
      },
      "minSize": {
        "type": "integer",
        "description": "The minimum size of the Auto Scaling group."
      },
      "recurrence": {
        "type": "string",
        "description": "The recurring schedule for the action, in Unix cron syntax format. When StartTime and EndTime are specified with Recurrence , they form the boundaries of when the recurring action starts and stops."
      },
      "startTime": {
        "type": "string",
        "description": "The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored."
      },
      "timeZone": {
        "type": "string",
        "description": "The time zone for the cron expression."
      }
    }
  },
  "aws-native:autoscaling:WarmPool": {
    "cfTypeName": "AWS::AutoScaling::WarmPool",
    "properties": {
      "autoScalingGroupName": {
        "type": "string",
        "description": "The name of the Auto Scaling group."
      },
      "instanceReusePolicy": {
        "$ref": "#/types/aws-native:autoscaling:WarmPoolInstanceReusePolicy",
        "description": "Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in."
      },
      "maxGroupPreparedCapacity": {
        "type": "integer",
        "description": "Specifies the maximum number of instances that are allowed to be in the warm pool or in any state except `Terminated` for the Auto Scaling group. This is an optional property. Specify it only if you do not want the warm pool size to be determined by the difference between the group's maximum capacity and its desired capacity.\n\n\u003e If a value for `MaxGroupPreparedCapacity` is not specified, Amazon EC2 Auto Scaling launches and maintains the difference between the group's maximum capacity and its desired capacity. If you specify a value for `MaxGroupPreparedCapacity` , Amazon EC2 Auto Scaling uses the difference between the `MaxGroupPreparedCapacity` and the desired capacity instead.\n\u003e \n\u003e The size of the warm pool is dynamic. Only when `MaxGroupPreparedCapacity` and `MinSize` are set to the same value does the warm pool have an absolute size. \n\nIf the desired capacity of the Auto Scaling group is higher than the `MaxGroupPreparedCapacity` , the capacity of the warm pool is 0, unless you specify a value for `MinSize` . To remove a value that you previously set, include the property but specify -1 for the value."
      },
      "minSize": {
        "type": "integer",
        "description": "Specifies the minimum number of instances to maintain in the warm pool. This helps you to ensure that there is always a certain number of warmed instances available to handle traffic spikes. Defaults to 0 if not specified."
      },
      "poolState": {
        "type": "string",
        "description": "Sets the instance state to transition to after the lifecycle actions are complete. Default is `Stopped` ."
      }
    }
  },
  "aws-native:backup:BackupPlan": {
    "cfTypeName": "AWS::Backup::BackupPlan",
    "properties": {
      "backupPlan": {
        "$ref": "#/types/aws-native:backup:BackupPlanResourceType",
        "description": "Uniquely identifies the backup plan to be associated with the selection of resources.",
        "language": {
          "csharp": {
            "name": "BackupPlanValue"
          }
        }
      },
      "backupPlanTags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The tags to assign to the backup plan."
      }
    }
  },
  "aws-native:backup:BackupSelection": {
    "cfTypeName": "AWS::Backup::BackupSelection",
    "properties": {
      "backupPlanId": {
        "type": "string",
        "description": "Uniquely identifies a backup plan."
      },
      "backupSelection": {
        "$ref": "#/types/aws-native:backup:BackupSelectionResourceType",
        "description": "Specifies the body of a request to assign a set of resources to a backup plan.\n\nIt includes an array of resources, an optional array of patterns to exclude resources, an optional role to provide access to the AWS service the resource belongs to, and an optional array of tags used to identify a set of resources.",
        "language": {
          "csharp": {
            "name": "BackupSelectionValue"
          }
        }
      }
    }
  },
  "aws-native:bedrock:FlowVersion": {
    "cfTypeName": "AWS::Bedrock::FlowVersion",
    "properties": {
      "description": {
        "type": "string",
        "description": "Description of the flow version"
      },
      "flowArn": {
        "type": "string",
        "description": "Arn representation of the Flow"
      }
    }
  },
  "aws-native:bedrock:GuardrailVersion": {
    "cfTypeName": "AWS::Bedrock::GuardrailVersion",
    "properties": {
      "description": {
        "type": "string",
        "description": "Description of the Guardrail version"
      },
      "guardrailIdentifier": {
        "type": "string",
        "description": "Identifier (GuardrailId or GuardrailArn) for the guardrail"
      }
    }
  },
  "aws-native:bedrock:PromptVersion": {
    "cfTypeName": "AWS::Bedrock::PromptVersion",
    "properties": {
      "description": {
        "type": "string",
        "description": "Description for a prompt version resource."
      },
      "promptArn": {
        "type": "string",
        "description": "ARN of a prompt resource possibly with a version"
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A map of tags attached to the prompt version and their values."
      }
    }
  },
  "aws-native:budgets:BudgetsAction": {
    "cfTypeName": "AWS::Budgets::BudgetsAction",
    "properties": {
      "actionThreshold": {
        "$ref": "#/types/aws-native:budgets:BudgetsActionActionThreshold",
        "description": "The trigger threshold of the action."
      },
      "actionType": {
        "$ref": "#/types/aws-native:budgets:BudgetsActionActionType",
        "description": "The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition."
      },
      "approvalModel": {
        "$ref": "#/types/aws-native:budgets:BudgetsActionApprovalModel",
        "description": "This specifies if the action needs manual or automatic approval."
      },
      "budgetName": {
        "type": "string",
        "description": "A string that represents the budget name. \":\" and \"\\\" characters aren't allowed."
      },
      "definition": {
        "$ref": "#/types/aws-native:budgets:BudgetsActionDefinition",
        "description": "Specifies all of the type-specific parameters."
      },
      "executionRoleArn": {
        "type": "string",
        "description": "The role passed for action execution and reversion. Roles and actions must be in the same account."
      },
      "notificationType": {
        "$ref": "#/types/aws-native:budgets:BudgetsActionNotificationType",
        "description": "The type of a notification."
      },
      "resourceTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An optional list of tags to associate with the specified budget action. Each tag consists of a key and a value, and each key must be unique for the resource."
      },
      "subscribers": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:budgets:BudgetsActionSubscriber"
        },
        "description": "A list of subscribers."
      }
    }
  },
  "aws-native:certificatemanager:Account": {
    "cfTypeName": "AWS::CertificateManager::Account",
    "properties": {
      "expiryEventsConfiguration": {
        "$ref": "#/types/aws-native:certificatemanager:AccountExpiryEventsConfiguration",
        "description": "Object containing expiration events options associated with an AWS account . For more information, see [ExpiryEventsConfiguration](https://docs.aws.amazon.com/acm/latest/APIReference/API_ExpiryEventsConfiguration.html) in the API reference."
      }
    }
  },
  "aws-native:cleanrooms:Membership": {
    "cfTypeName": "AWS::CleanRooms::Membership",
    "properties": {
      "collaborationIdentifier": {
        "type": "string",
        "description": "The unique ID for the associated collaboration."
      },
      "defaultJobResultConfiguration": {
        "$ref": "#/types/aws-native:cleanrooms:MembershipProtectedJobResultConfiguration",
        "description": "The default job result configuration for the membership."
      },
      "defaultResultConfiguration": {
        "$ref": "#/types/aws-native:cleanrooms:MembershipProtectedQueryResultConfiguration",
        "description": "The default protected query result configuration as specified by the member who can receive results."
      },
      "jobLogStatus": {
        "$ref": "#/types/aws-native:cleanrooms:MembershipJobLogStatus",
        "description": "An indicator as to whether job logging has been enabled or disabled for the collaboration.\n\nWhen `ENABLED` , AWS Clean Rooms logs details about jobs run within this collaboration and those logs can be viewed in Amazon CloudWatch Logs. The default value is `DISABLED` ."
      },
      "paymentConfiguration": {
        "$ref": "#/types/aws-native:cleanrooms:MembershipPaymentConfiguration",
        "description": "The payment responsibilities accepted by the collaboration member."
      },
      "queryLogStatus": {
        "$ref": "#/types/aws-native:cleanrooms:MembershipQueryLogStatus",
        "description": "An indicator as to whether query logging has been enabled or disabled for the membership.\n\nWhen `ENABLED` , AWS Clean Rooms logs details about queries run within this collaboration and those logs can be viewed in Amazon CloudWatch Logs. The default value is `DISABLED` ."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An arbitrary set of tags (key-value pairs) for this cleanrooms membership."
      }
    }
  },
  "aws-native:cleanrooms:PrivacyBudgetTemplate": {
    "cfTypeName": "AWS::CleanRooms::PrivacyBudgetTemplate",
    "properties": {
      "autoRefresh": {
        "$ref": "#/types/aws-native:cleanrooms:PrivacyBudgetTemplateAutoRefresh",
        "description": "How often the privacy budget refreshes.\n\n\u003e If you plan to regularly bring new data into the collaboration, use `CALENDAR_MONTH` to automatically get a new privacy budget for the collaboration every calendar month. Choosing this option allows arbitrary amounts of information to be revealed about rows of the data when repeatedly queried across refreshes. Avoid choosing this if the same rows will be repeatedly queried between privacy budget refreshes."
      },
      "membershipIdentifier": {
        "type": "string",
        "description": "The identifier for a membership resource."
      },
      "parameters": {
        "$ref": "#/types/aws-native:cleanrooms:ParametersProperties",
        "description": "Specifies the epsilon and noise parameters for the privacy budget template."
      },
      "privacyBudgetType": {
        "$ref": "#/types/aws-native:cleanrooms:PrivacyBudgetTemplatePrivacyBudgetType",
        "description": "Specifies the type of the privacy budget template."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An arbitrary set of tags (key-value pairs) for this cleanrooms privacy budget template."
      }
    }
  },
  "aws-native:cloudformation:GuardHook": {
    "cfTypeName": "AWS::CloudFormation::GuardHook",
    "properties": {
      "alias": {
        "type": "string",
        "description": "The typename alias for the hook."
      },
      "executionRole": {
        "type": "string",
        "description": "The execution role ARN assumed by hooks to read Guard rules from S3 and write Guard outputs to S3."
      },
      "failureMode": {
        "$ref": "#/types/aws-native:cloudformation:GuardHookFailureMode",
        "description": "Attribute to specify CloudFormation behavior on hook failure."
      },
      "hookStatus": {
        "$ref": "#/types/aws-native:cloudformation:GuardHookHookStatus",
        "description": "Attribute to specify which stacks this hook applies to or should get invoked for"
      },
      "logBucket": {
        "type": "string",
        "description": "S3 Bucket where the guard validate report will be uploaded to"
      },
      "options": {
        "$ref": "#/types/aws-native:cloudformation:OptionsProperties",
        "description": "Specifies the S3 location of your input parameters."
      },
      "ruleLocation": {
        "$ref": "#/types/aws-native:cloudformation:GuardHookS3Location",
        "description": "Specifies the S3 location of your Guard rules."
      },
      "stackFilters": {
        "$ref": "#/types/aws-native:cloudformation:StackFiltersProperties",
        "description": "Filters to allow hooks to target specific stack attributes"
      },
      "targetFilters": {
        "oneOf": [
          {
            "$ref": "#/types/aws-native:cloudformation:TargetFilters0Properties"
          },
          {
            "$ref": "#/types/aws-native:cloudformation:TargetFilters1Properties"
          }
        ],
        "description": "Attribute to specify which targets should invoke the hook"
      },
      "targetOperations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:cloudformation:GuardHookTargetOperation"
        },
        "description": "Which operations should this Hook run against? Resource changes, stacks or change sets."
      }
    }
  },
  "aws-native:cloudformation:HookDefaultVersion": {
    "cfTypeName": "AWS::CloudFormation::HookDefaultVersion",
    "properties": {
      "typeName": {
        "type": "string",
        "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
      },
      "typeVersionArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the type version."
      },
      "versionId": {
        "type": "string",
        "description": "The ID of an existing version of the hook to set as the default."
      }
    }
  },
  "aws-native:cloudformation:HookTypeConfig": {
    "cfTypeName": "AWS::CloudFormation::HookTypeConfig",
    "properties": {
      "configuration": {
        "type": "string",
        "description": "The configuration data for the extension, in this account and region."
      },
      "configurationAlias": {
        "$ref": "#/types/aws-native:cloudformation:HookTypeConfigConfigurationAlias",
        "description": "An alias by which to refer to this extension configuration data."
      },
      "typeArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the type without version number."
      },
      "typeName": {
        "type": "string",
        "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
      }
    }
  },
  "aws-native:cloudformation:HookVersion": {
    "cfTypeName": "AWS::CloudFormation::HookVersion",
    "properties": {
      "executionRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials."
      },
      "loggingConfig": {
        "$ref": "#/types/aws-native:cloudformation:HookVersionLoggingConfig",
        "description": "Specifies logging configuration information for a type."
      },
      "schemaHandlerPackage": {
        "type": "string",
        "description": "A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.\n\nFor information on generating a schema handler package for the type you want to register, see submit in the CloudFormation CLI User Guide."
      },
      "typeName": {
        "type": "string",
        "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
      }
    }
  },
  "aws-native:cloudformation:LambdaHook": {
    "cfTypeName": "AWS::CloudFormation::LambdaHook",
    "properties": {
      "alias": {
        "type": "string",
        "description": "The typename alias for the hook."
      },
      "executionRole": {
        "type": "string",
        "description": "The execution role ARN assumed by Hooks to invoke Lambda."
      },
      "failureMode": {
        "$ref": "#/types/aws-native:cloudformation:LambdaHookFailureMode",
        "description": "Attribute to specify CloudFormation behavior on hook failure."
      },
      "hookStatus": {
        "$ref": "#/types/aws-native:cloudformation:LambdaHookHookStatus",
        "description": "Attribute to specify which stacks this hook applies to or should get invoked for"
      },
      "lambdaFunction": {
        "type": "string",
        "description": "Amazon Resource Name (ARN), Partial ARN, name, version, or alias of the Lambda function to invoke with this hook."
      },
      "stackFilters": {
        "$ref": "#/types/aws-native:cloudformation:StackFiltersProperties",
        "description": "Filters to allow hooks to target specific stack attributes"
      },
      "targetFilters": {
        "oneOf": [
          {
            "$ref": "#/types/aws-native:cloudformation:TargetFilters0Properties"
          },
          {
            "$ref": "#/types/aws-native:cloudformation:TargetFilters1Properties"
          }
        ],
        "description": "Attribute to specify which targets should invoke the hook"
      },
      "targetOperations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:cloudformation:LambdaHookTargetOperation"
        },
        "description": "Which operations should this Hook run against? Resource changes, stacks or change sets."
      }
    }
  },
  "aws-native:cloudformation:ModuleDefaultVersion": {
    "cfTypeName": "AWS::CloudFormation::ModuleDefaultVersion",
    "properties": {
      "arn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the module version to set as the default version."
      },
      "moduleName": {
        "type": "string",
        "description": "The name of a module existing in the registry."
      },
      "versionId": {
        "type": "string",
        "description": "The ID of an existing version of the named module to set as the default."
      }
    }
  },
  "aws-native:cloudformation:ModuleVersion": {
    "cfTypeName": "AWS::CloudFormation::ModuleVersion",
    "properties": {
      "moduleName": {
        "type": "string",
        "description": "The name of the module being registered.\n\nRecommended module naming pattern: company_or_organization::service::type::MODULE."
      },
      "modulePackage": {
        "type": "string",
        "description": "The url to the S3 bucket containing the schema and template fragment for the module you want to register."
      }
    }
  },
  "aws-native:cloudformation:PublicTypeVersion": {
    "cfTypeName": "AWS::CloudFormation::PublicTypeVersion",
    "properties": {
      "arn": {
        "type": "string",
        "description": "The Amazon Resource Number (ARN) of the extension."
      },
      "logDeliveryBucket": {
        "type": "string",
        "description": "A url to the S3 bucket where logs for the testType run will be available"
      },
      "publicVersionNumber": {
        "type": "string",
        "description": "The version number of a public third-party extension"
      },
      "type": {
        "$ref": "#/types/aws-native:cloudformation:PublicTypeVersionType",
        "description": "The kind of extension"
      },
      "typeName": {
        "type": "string",
        "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
      }
    }
  },
  "aws-native:cloudformation:Publisher": {
    "cfTypeName": "AWS::CloudFormation::Publisher",
    "properties": {
      "acceptTermsAndConditions": {
        "type": "boolean",
        "description": "Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions can be found at https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf"
      },
      "connectionArn": {
        "type": "string",
        "description": "If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account."
      }
    }
  },
  "aws-native:cloudformation:ResourceDefaultVersion": {
    "cfTypeName": "AWS::CloudFormation::ResourceDefaultVersion",
    "properties": {
      "typeName": {
        "type": "string",
        "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
      },
      "typeVersionArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the type version."
      },
      "versionId": {
        "type": "string",
        "description": "The ID of an existing version of the resource to set as the default."
      }
    }
  },
  "aws-native:cloudformation:ResourceVersion": {
    "cfTypeName": "AWS::CloudFormation::ResourceVersion",
    "properties": {
      "executionRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials."
      },
      "loggingConfig": {
        "$ref": "#/types/aws-native:cloudformation:ResourceVersionLoggingConfig",
        "description": "Specifies logging configuration information for a type."
      },
      "schemaHandlerPackage": {
        "type": "string",
        "description": "A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.\n\nFor information on generating a schema handler package for the type you want to register, see submit in the CloudFormation CLI User Guide."
      },
      "typeName": {
        "type": "string",
        "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
      }
    }
  },
  "aws-native:cloudformation:TypeActivation": {
    "cfTypeName": "AWS::CloudFormation::TypeActivation",
    "properties": {
      "autoUpdate": {
        "type": "boolean",
        "description": "Whether to automatically update the extension in this account and region when a new minor version is published by the extension publisher. Major versions released by the publisher must be manually updated."
      },
      "executionRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials."
      },
      "loggingConfig": {
        "$ref": "#/types/aws-native:cloudformation:TypeActivationLoggingConfig",
        "description": "Specifies logging configuration information for a type."
      },
      "majorVersion": {
        "type": "string",
        "description": "The Major Version of the type you want to enable"
      },
      "publicTypeArn": {
        "type": "string",
        "description": "The Amazon Resource Number (ARN) assigned to the public extension upon publication"
      },
      "publisherId": {
        "type": "string",
        "description": "The reserved publisher id for this type, or the publisher id assigned by CloudFormation for publishing in this region."
      },
      "type": {
        "$ref": "#/types/aws-native:cloudformation:TypeActivationType",
        "description": "The kind of extension"
      },
      "typeName": {
        "type": "string",
        "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
      },
      "typeNameAlias": {
        "type": "string",
        "description": "An alias to assign to the public extension in this account and region. If you specify an alias for the extension, you must then use the alias to refer to the extension in your templates."
      },
      "versionBump": {
        "$ref": "#/types/aws-native:cloudformation:TypeActivationVersionBump",
        "description": "Manually updates a previously-enabled type to a new major or minor version, if available. You can also use this parameter to update the value of AutoUpdateEnabled"
      }
    }
  },
  "aws-native:cloudfront:CachePolicy": {
    "cfTypeName": "AWS::CloudFront::CachePolicy",
    "properties": {
      "cachePolicyConfig": {
        "$ref": "#/types/aws-native:cloudfront:CachePolicyConfig",
        "description": "The cache policy configuration."
      }
    }
  },
  "aws-native:cloudfront:CloudFrontOriginAccessIdentity": {
    "cfTypeName": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    "properties": {
      "cloudFrontOriginAccessIdentityConfig": {
        "$ref": "#/types/aws-native:cloudfront:CloudFrontOriginAccessIdentityConfig",
        "description": "The current configuration information for the identity."
      }
    }
  },
  "aws-native:cloudfront:ContinuousDeploymentPolicy": {
    "cfTypeName": "AWS::CloudFront::ContinuousDeploymentPolicy",
    "properties": {
      "continuousDeploymentPolicyConfig": {
        "$ref": "#/types/aws-native:cloudfront:ContinuousDeploymentPolicyConfig",
        "description": "Contains the configuration for a continuous deployment policy."
      }
    }
  },
  "aws-native:cloudfront:Distribution": {
    "cfTypeName": "AWS::CloudFront::Distribution",
    "properties": {
      "distributionConfig": {
        "$ref": "#/types/aws-native:cloudfront:DistributionConfig",
        "description": "The distribution's configuration."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A complex type that contains zero or more ``Tag`` elements."
      }
    }
  },
  "aws-native:cloudfront:KeyGroup": {
    "cfTypeName": "AWS::CloudFront::KeyGroup",
    "properties": {
      "keyGroupConfig": {
        "$ref": "#/types/aws-native:cloudfront:KeyGroupConfig",
        "description": "The key group configuration."
      }
    }
  },
  "aws-native:cloudfront:MonitoringSubscription": {
    "cfTypeName": "AWS::CloudFront::MonitoringSubscription",
    "properties": {
      "distributionId": {
        "type": "string",
        "description": "The ID of the distribution that you are enabling metrics for."
      },
      "monitoringSubscription": {
        "$ref": "#/types/aws-native:cloudfront:MonitoringSubscription",
        "description": "A subscription configuration for additional CloudWatch metrics.",
        "language": {
          "csharp": {
            "name": "MonitoringSubscriptionValue"
          }
        }
      }
    }
  },
  "aws-native:cloudfront:OriginAccessControl": {
    "cfTypeName": "AWS::CloudFront::OriginAccessControl",
    "properties": {
      "originAccessControlConfig": {
        "$ref": "#/types/aws-native:cloudfront:OriginAccessControlConfig",
        "description": "The origin access control."
      }
    }
  },
  "aws-native:cloudfront:OriginRequestPolicy": {
    "cfTypeName": "AWS::CloudFront::OriginRequestPolicy",
    "properties": {
      "originRequestPolicyConfig": {
        "$ref": "#/types/aws-native:cloudfront:OriginRequestPolicyConfig",
        "description": "The origin request policy configuration."
      }
    }
  },
  "aws-native:cloudfront:PublicKey": {
    "cfTypeName": "AWS::CloudFront::PublicKey",
    "properties": {
      "publicKeyConfig": {
        "$ref": "#/types/aws-native:cloudfront:PublicKeyConfig",
        "description": "Configuration information about a public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html), or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html)."
      }
    }
  },
  "aws-native:cloudfront:ResponseHeadersPolicy": {
    "cfTypeName": "AWS::CloudFront::ResponseHeadersPolicy",
    "properties": {
      "responseHeadersPolicyConfig": {
        "$ref": "#/types/aws-native:cloudfront:ResponseHeadersPolicyConfig",
        "description": "A response headers policy configuration."
      }
    }
  },
  "aws-native:cloudfront:VpcOrigin": {
    "cfTypeName": "AWS::CloudFront::VpcOrigin",
    "properties": {
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A complex type that contains zero or more ``Tag`` elements."
      },
      "vpcOriginEndpointConfig": {
        "$ref": "#/types/aws-native:cloudfront:VpcOriginEndpointConfig",
        "description": "The VPC origin endpoint configuration."
      }
    }
  },
  "aws-native:cloudtrail:ResourcePolicy": {
    "cfTypeName": "AWS::CloudTrail::ResourcePolicy",
    "properties": {
      "resourceArn": {
        "type": "string",
        "description": "The ARN of the AWS CloudTrail resource to which the policy applies."
      },
      "resourcePolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document containing permissions to add to the specified resource. In IAM, you must provide policy documents in JSON format. However, in CloudFormation you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::CloudTrail::ResourcePolicy` for more information about the expected schema for this property.",
        "language": {
          "csharp": {
            "name": "ResourcePolicyValue"
          }
        }
      }
    }
  },
  "aws-native:codeartifact:PackageGroup": {
    "cfTypeName": "AWS::CodeArtifact::PackageGroup",
    "properties": {
      "contactInfo": {
        "type": "string",
        "description": "The contact info of the package group."
      },
      "description": {
        "type": "string",
        "description": "The text description of the package group."
      },
      "domainName": {
        "type": "string",
        "description": "The name of the domain that contains the package group."
      },
      "domainOwner": {
        "type": "string",
        "description": "The 12-digit account ID of the AWS account that owns the domain."
      },
      "originConfiguration": {
        "$ref": "#/types/aws-native:codeartifact:PackageGroupOriginConfiguration",
        "description": "The package origin configuration of the package group."
      },
      "pattern": {
        "type": "string",
        "description": "The package group pattern that is used to gather packages."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to the package group."
      }
    }
  },
  "aws-native:codepipeline:CustomActionType": {
    "cfTypeName": "AWS::CodePipeline::CustomActionType",
    "properties": {
      "category": {
        "type": "string",
        "description": "The category of the custom action, such as a build action or a test action."
      },
      "configurationProperties": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:codepipeline:CustomActionTypeConfigurationProperties"
        },
        "description": "The configuration properties for the custom action."
      },
      "inputArtifactDetails": {
        "$ref": "#/types/aws-native:codepipeline:CustomActionTypeArtifactDetails",
        "description": "The details of the input artifact for the action, such as its commit ID."
      },
      "outputArtifactDetails": {
        "$ref": "#/types/aws-native:codepipeline:CustomActionTypeArtifactDetails",
        "description": "The details of the output artifact of the action, such as its commit ID."
      },
      "provider": {
        "type": "string",
        "description": "The provider of the service used in the custom action, such as AWS CodeDeploy."
      },
      "settings": {
        "$ref": "#/types/aws-native:codepipeline:CustomActionTypeSettings",
        "description": "URLs that provide users information about this custom action."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags assigned to the custom action."
      },
      "version": {
        "type": "string",
        "description": "The version identifier of the custom action."
      }
    }
  },
  "aws-native:codestarconnections:RepositoryLink": {
    "cfTypeName": "AWS::CodeStarConnections::RepositoryLink",
    "properties": {
      "connectionArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the CodeStarConnection. The ARN is used as the connection reference when the connection is shared between AWS services."
      },
      "encryptionKeyArn": {
        "type": "string",
        "description": "The ARN of the KMS key that the customer can optionally specify to use to encrypt RepositoryLink properties. If not specified, a default key will be used."
      },
      "ownerId": {
        "type": "string",
        "description": "the ID of the entity that owns the repository."
      },
      "repositoryName": {
        "type": "string",
        "description": "The repository for which the link is being created."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Specifies the tags applied to a RepositoryLink."
      }
    }
  },
  "aws-native:codestarconnections:SyncConfiguration": {
    "cfTypeName": "AWS::CodeStarConnections::SyncConfiguration",
    "properties": {
      "branch": {
        "type": "string",
        "description": "The name of the branch of the repository from which resources are to be synchronized,"
      },
      "configFile": {
        "type": "string",
        "description": "The source provider repository path of the sync configuration file of the respective SyncType."
      },
      "publishDeploymentStatus": {
        "$ref": "#/types/aws-native:codestarconnections:SyncConfigurationPublishDeploymentStatus",
        "description": "Whether to enable or disable publishing of deployment status to source providers."
      },
      "repositoryLinkId": {
        "type": "string",
        "description": "A UUID that uniquely identifies the RepositoryLink that the SyncConfig is associated with."
      },
      "resourceName": {
        "type": "string",
        "description": "The name of the resource that is being synchronized to the repository."
      },
      "roleArn": {
        "type": "string",
        "description": "The IAM Role that allows AWS to update CloudFormation stacks based on content in the specified repository."
      },
      "syncType": {
        "type": "string",
        "description": "The type of resource synchronization service that is to be configured, for example, CFN_STACK_SYNC."
      },
      "triggerResourceUpdateOn": {
        "$ref": "#/types/aws-native:codestarconnections:SyncConfigurationTriggerResourceUpdateOn",
        "description": "When to trigger Git sync to begin the stack update."
      }
    }
  },
  "aws-native:cognito:IdentityPoolPrincipalTag": {
    "cfTypeName": "AWS::Cognito::IdentityPoolPrincipalTag",
    "properties": {
      "identityPoolId": {
        "type": "string",
        "description": "The identity pool that you want to associate with this principal tag map."
      },
      "identityProviderName": {
        "type": "string",
        "description": "The identity pool identity provider (IdP) that you want to associate with this principal tag map."
      },
      "principalTags": {
        "$ref": "pulumi.json#/Any",
        "description": "A JSON-formatted list of user claims and the principal tags that you want to associate with them. When Amazon Cognito requests credentials, it sets the value of the principal tag to the value of the user's claim.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::IdentityPoolPrincipalTag` for more information about the expected schema for this property."
      },
      "useDefaults": {
        "type": "boolean",
        "description": "Use a default set of mappings between claims and tags for this provider, instead of a custom map."
      }
    }
  },
  "aws-native:cognito:IdentityPoolRoleAttachment": {
    "cfTypeName": "AWS::Cognito::IdentityPoolRoleAttachment",
    "properties": {
      "identityPoolId": {
        "type": "string",
        "description": "An identity pool ID in the format `REGION:GUID` ."
      },
      "roleMappings": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:cognito:IdentityPoolRoleAttachmentRoleMapping"
        },
        "description": "How users for a specific identity provider are mapped to roles. This is a string to the `RoleMapping` object map. The string identifies the identity provider. For example: `graph.facebook.com` or `cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id` .\n\nIf the `IdentityProvider` field isn't provided in this object, the string is used as the identity provider name.\n\nFor more information, see the [RoleMapping property](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html) ."
      },
      "roles": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The map of the roles associated with this pool. For a given role, the key is either \"authenticated\" or \"unauthenticated\". The value is the role ARN."
      }
    }
  },
  "aws-native:cognito:LogDeliveryConfiguration": {
    "cfTypeName": "AWS::Cognito::LogDeliveryConfiguration",
    "properties": {
      "logConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:cognito:LogDeliveryConfigurationLogConfiguration"
        },
        "description": "A logging destination of a user pool. User pools can have multiple logging destinations for message-delivery and user-activity logs."
      },
      "userPoolId": {
        "type": "string",
        "description": "The ID of the user pool where you configured logging."
      }
    }
  },
  "aws-native:cognito:ManagedLoginBranding": {
    "cfTypeName": "AWS::Cognito::ManagedLoginBranding",
    "properties": {
      "assets": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:cognito:ManagedLoginBrandingAssetType"
        },
        "description": "An array of image files that you want to apply to roles like backgrounds, logos, and icons. Each object must also indicate whether it is for dark mode, light mode, or browser-adaptive mode."
      },
      "clientId": {
        "type": "string",
        "description": "The app client that's assigned to the branding style that you want more information about."
      },
      "returnMergedResources": {
        "type": "boolean",
        "description": "When `true` , returns values for branding options that are unchanged from Amazon Cognito defaults. When `false` or when you omit this parameter, returns only values that you customized in your branding style."
      },
      "settings": {
        "$ref": "pulumi.json#/Any",
        "description": "A JSON file, encoded as a `Document` type, with the the settings that you want to apply to your style.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::ManagedLoginBranding` for more information about the expected schema for this property."
      },
      "useCognitoProvidedValues": {
        "type": "boolean",
        "description": "When true, applies the default branding style options. This option reverts to default style options that are managed by Amazon Cognito. You can modify them later in the branding designer.\n\nWhen you specify `true` for this option, you must also omit values for `Settings` and `Assets` in the request."
      },
      "userPoolId": {
        "type": "string",
        "description": "The user pool where the branding style is assigned."
      }
    }
  },
  "aws-native:cognito:UserPoolDomain": {
    "cfTypeName": "AWS::Cognito::UserPoolDomain",
    "properties": {
      "customDomainConfig": {
        "$ref": "#/types/aws-native:cognito:UserPoolDomainCustomDomainConfigType",
        "description": "The configuration for a custom domain that hosts the sign-up and sign-in pages for your application. Use this object to specify an SSL certificate that is managed by ACM.\n\nWhen you create a custom domain, the passkey RP ID defaults to the custom domain. If you had a prefix domain active, this will cause passkey integration for your prefix domain to stop working due to a mismatch in RP ID. To keep the prefix domain passkey integration working, you can explicitly set RP ID to the prefix domain."
      },
      "domain": {
        "type": "string",
        "description": "The name of the domain that you want to update. For custom domains, this is the fully-qualified domain name, for example `auth.example.com` . For prefix domains, this is the prefix alone, such as `myprefix` ."
      },
      "managedLoginVersion": {
        "type": "integer",
        "description": "A version number that indicates the state of managed login for your domain. Version `1` is hosted UI (classic). Version `2` is the newer managed login with the branding designer. For more information, see [Managed login](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-managed-login.html) ."
      },
      "userPoolId": {
        "type": "string",
        "description": "The ID of the user pool that is associated with the domain you're updating."
      }
    }
  },
  "aws-native:cognito:UserPoolRiskConfigurationAttachment": {
    "cfTypeName": "AWS::Cognito::UserPoolRiskConfigurationAttachment",
    "properties": {
      "accountTakeoverRiskConfiguration": {
        "$ref": "#/types/aws-native:cognito:UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType",
        "description": "The settings for automated responses and notification templates for adaptive authentication with threat protection."
      },
      "clientId": {
        "type": "string",
        "description": "The app client where this configuration is applied. When this parameter isn't present, the risk configuration applies to all user pool app clients that don't have client-level settings."
      },
      "compromisedCredentialsRiskConfiguration": {
        "$ref": "#/types/aws-native:cognito:UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType",
        "description": "Settings for compromised-credentials actions and authentication types with threat protection in full-function `ENFORCED` mode."
      },
      "riskExceptionConfiguration": {
        "$ref": "#/types/aws-native:cognito:UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType",
        "description": "Exceptions to the risk evaluation configuration, including always-allow and always-block IP address ranges."
      },
      "userPoolId": {
        "type": "string",
        "description": "The ID of the user pool that has the risk configuration applied."
      }
    }
  },
  "aws-native:cognito:UserPoolUiCustomizationAttachment": {
    "cfTypeName": "AWS::Cognito::UserPoolUICustomizationAttachment",
    "properties": {
      "clientId": {
        "type": "string",
        "description": "The app client ID for your UI customization. When this value isn't present, the customization applies to all user pool app clients that don't have client-level settings.."
      },
      "css": {
        "type": "string",
        "description": "A plaintext CSS file that contains the custom fields that you want to apply to your user pool or app client. To download a template, go to the Amazon Cognito console. Navigate to your user pool *App clients* tab, select *Login pages* , edit *Hosted UI (classic) style* , and select the link to `CSS template.css` ."
      },
      "userPoolId": {
        "type": "string",
        "description": "The ID of the user pool where you want to apply branding to the classic hosted UI."
      }
    }
  },
  "aws-native:cognito:UserPoolUserToGroupAttachment": {
    "cfTypeName": "AWS::Cognito::UserPoolUserToGroupAttachment",
    "properties": {
      "groupName": {
        "type": "string",
        "description": "The name of the group that you want to add your user to."
      },
      "userPoolId": {
        "type": "string",
        "description": "The ID of the user pool that contains the group that you want to add the user to."
      },
      "username": {
        "type": "string",
        "description": "The user's username."
      }
    }
  },
  "aws-native:configuration:AggregationAuthorization": {
    "cfTypeName": "AWS::Config::AggregationAuthorization",
    "properties": {
      "authorizedAccountId": {
        "type": "string",
        "description": "The 12-digit account ID of the account authorized to aggregate data."
      },
      "authorizedAwsRegion": {
        "type": "string",
        "description": "The region authorized to collect aggregated data."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the AggregationAuthorization."
      }
    }
  },
  "aws-native:connect:ApprovedOrigin": {
    "cfTypeName": "AWS::Connect::ApprovedOrigin",
    "properties": {
      "instanceId": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the instance.\n\n*Minimum* : `1`\n\n*Maximum* : `100`"
      },
      "origin": {
        "type": "string",
        "description": "Domain name to be added to the allow-list of the instance.\n\n*Maximum* : `267`"
      }
    }
  },
  "aws-native:connect:ContactFlowVersion": {
    "cfTypeName": "AWS::Connect::ContactFlowVersion",
    "properties": {
      "contactFlowId": {
        "type": "string",
        "description": "The ARN of the contact flow this version is tied to."
      },
      "description": {
        "type": "string",
        "description": "The description of the version."
      }
    }
  },
  "aws-native:connect:EmailAddress": {
    "cfTypeName": "AWS::Connect::EmailAddress",
    "properties": {
      "description": {
        "type": "string",
        "description": "A description for the email address."
      },
      "displayName": {
        "type": "string",
        "description": "The display name for the email address."
      },
      "emailAddress": {
        "type": "string",
        "description": "Email address to be created for this instance",
        "language": {
          "csharp": {
            "name": "EmailAddressValue"
          }
        }
      },
      "instanceArn": {
        "type": "string",
        "description": "The identifier of the Amazon Connect instance."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "One or more tags."
      }
    }
  },
  "aws-native:connect:EvaluationForm": {
    "cfTypeName": "AWS::Connect::EvaluationForm",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description of the evaluation form.\n  *Length Constraints*: Minimum length of 0. Maximum length of 1024."
      },
      "instanceArn": {
        "type": "string",
        "description": "The identifier of the Amazon Connect instance."
      },
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:connect:EvaluationFormBaseItem"
        },
        "description": "Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.\n  *Minimum size*: 1\n  *Maximum size*: 100"
      },
      "scoringStrategy": {
        "$ref": "#/types/aws-native:connect:EvaluationFormScoringStrategy",
        "description": "A scoring strategy of the evaluation form."
      },
      "status": {
        "$ref": "#/types/aws-native:connect:EvaluationFormStatus",
        "description": "The status of the evaluation form.\n  *Allowed values*: ``DRAFT`` | ``ACTIVE``"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }."
      },
      "title": {
        "type": "string",
        "description": "A title of the evaluation form."
      }
    }
  },
  "aws-native:connect:Instance": {
    "cfTypeName": "AWS::Connect::Instance",
    "properties": {
      "attributes": {
        "$ref": "#/types/aws-native:connect:InstanceAttributes",
        "description": "The attributes for the instance."
      },
      "directoryId": {
        "type": "string",
        "description": "Existing directoryId user wants to map to the new Connect instance."
      },
      "identityManagementType": {
        "$ref": "#/types/aws-native:connect:InstanceIdentityManagementType",
        "description": "Specifies the type of directory integration for new instance."
      },
      "instanceAlias": {
        "type": "string",
        "description": "Alias of the new directory created as part of new instance creation."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:connect:InstanceStorageConfig": {
    "cfTypeName": "AWS::Connect::InstanceStorageConfig",
    "properties": {
      "instanceArn": {
        "type": "string",
        "description": "Connect Instance ID with which the storage config will be associated"
      },
      "kinesisFirehoseConfig": {
        "$ref": "#/types/aws-native:connect:InstanceStorageConfigKinesisFirehoseConfig",
        "description": "The configuration of the Kinesis Firehose delivery stream."
      },
      "kinesisStreamConfig": {
        "$ref": "#/types/aws-native:connect:InstanceStorageConfigKinesisStreamConfig",
        "description": "The configuration of the Kinesis data stream."
      },
      "kinesisVideoStreamConfig": {
        "$ref": "#/types/aws-native:connect:InstanceStorageConfigKinesisVideoStreamConfig",
        "description": "The configuration of the Kinesis video stream."
      },
      "resourceType": {
        "$ref": "#/types/aws-native:connect:InstanceStorageConfigInstanceStorageResourceType",
        "description": "A valid resource type. Following are the valid resource types: `CHAT_TRANSCRIPTS` | `CALL_RECORDINGS` | `SCHEDULED_REPORTS` | `MEDIA_STREAMS` | `CONTACT_TRACE_RECORDS` | `AGENT_EVENTS`"
      },
      "s3Config": {
        "$ref": "#/types/aws-native:connect:InstanceStorageConfigS3Config",
        "description": "The S3 bucket configuration."
      },
      "storageType": {
        "$ref": "#/types/aws-native:connect:InstanceStorageConfigStorageType",
        "description": "A valid storage type."
      }
    }
  },
  "aws-native:connect:IntegrationAssociation": {
    "cfTypeName": "AWS::Connect::IntegrationAssociation",
    "properties": {
      "instanceId": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the instance.\n\n*Minimum* : `1`\n\n*Maximum* : `100`"
      },
      "integrationArn": {
        "type": "string",
        "description": "ARN of the integration being associated with the instance.\n\n*Minimum* : `1`\n\n*Maximum* : `140`"
      },
      "integrationType": {
        "$ref": "#/types/aws-native:connect:IntegrationAssociationIntegrationType",
        "description": "Specifies the integration type to be associated with the instance.\n\n*Allowed Values* : `LEX_BOT` | `LAMBDA_FUNCTION`"
      }
    }
  },
  "aws-native:connect:PhoneNumber": {
    "cfTypeName": "AWS::Connect::PhoneNumber",
    "properties": {
      "countryCode": {
        "type": "string",
        "description": "The phone number country code."
      },
      "description": {
        "type": "string",
        "description": "The description of the phone number."
      },
      "prefix": {
        "type": "string",
        "description": "The phone number prefix."
      },
      "sourcePhoneNumberArn": {
        "type": "string",
        "description": "The source phone number arn."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "One or more tags."
      },
      "targetArn": {
        "type": "string",
        "description": "The ARN of the target the phone number is claimed to."
      },
      "type": {
        "type": "string",
        "description": "The phone number type"
      }
    }
  },
  "aws-native:connect:SecurityKey": {
    "cfTypeName": "AWS::Connect::SecurityKey",
    "properties": {
      "instanceId": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the instance.\n\n*Minimum* : `1`\n\n*Maximum* : `100`"
      },
      "key": {
        "type": "string",
        "description": "A valid security key in PEM format. For example:\n\n`\"-----BEGIN PUBLIC KEY-----\\ [a lot of characters] ----END PUBLIC KEY-----\"`\n\n*Minimum* : `1`\n\n*Maximum* : `1024`"
      }
    }
  },
  "aws-native:connect:UserHierarchyStructure": {
    "cfTypeName": "AWS::Connect::UserHierarchyStructure",
    "properties": {
      "instanceArn": {
        "type": "string",
        "description": "The identifier of the Amazon Connect instance."
      },
      "userHierarchyStructure": {
        "$ref": "#/types/aws-native:connect:UserHierarchyStructureProperties",
        "description": "Information about the hierarchy structure.",
        "language": {
          "csharp": {
            "name": "UserHierarchyStructureValue"
          }
        }
      }
    }
  },
  "aws-native:connect:ViewVersion": {
    "cfTypeName": "AWS::Connect::ViewVersion",
    "properties": {
      "versionDescription": {
        "type": "string",
        "description": "The description for the view version."
      },
      "viewArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the view for which a version is being created."
      },
      "viewContentSha256": {
        "type": "string",
        "description": "The view content hash to be checked."
      }
    }
  },
  "aws-native:controltower:EnabledBaseline": {
    "cfTypeName": "AWS::ControlTower::EnabledBaseline",
    "properties": {
      "baselineIdentifier": {
        "type": "string",
        "description": "The specific `Baseline` enabled as part of the `EnabledBaseline` resource."
      },
      "baselineVersion": {
        "type": "string",
        "description": "The enabled version of the `Baseline` ."
      },
      "parameters": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:controltower:EnabledBaselineParameter"
        },
        "description": "Shows the parameters that are applied when enabling this `Baseline` ."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        }
      },
      "targetIdentifier": {
        "type": "string",
        "description": "The target on which to enable the `Baseline` ."
      }
    }
  },
  "aws-native:controltower:EnabledControl": {
    "cfTypeName": "AWS::ControlTower::EnabledControl",
    "properties": {
      "controlIdentifier": {
        "type": "string",
        "description": "Arn of the control."
      },
      "parameters": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:controltower:EnabledControlParameter"
        },
        "description": "Parameters to configure the enabled control behavior."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A set of tags to assign to the enabled control."
      },
      "targetIdentifier": {
        "type": "string",
        "description": "Arn for Organizational unit to which the control needs to be applied"
      }
    }
  },
  "aws-native:controltower:LandingZone": {
    "cfTypeName": "AWS::ControlTower::LandingZone",
    "properties": {
      "manifest": {
        "$ref": "pulumi.json#/Any",
        "description": "The landing zone manifest JSON text file that specifies the landing zone configurations.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ControlTower::LandingZone` for more information about the expected schema for this property."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags to be applied to the landing zone."
      },
      "version": {
        "type": "string",
        "description": "The landing zone's current deployed version."
      }
    }
  },
  "aws-native:customerprofiles:CalculatedAttributeDefinition": {
    "cfTypeName": "AWS::CustomerProfiles::CalculatedAttributeDefinition",
    "properties": {
      "attributeDetails": {
        "$ref": "#/types/aws-native:customerprofiles:CalculatedAttributeDefinitionAttributeDetails",
        "description": "Mathematical expression and a list of attribute items specified in that expression."
      },
      "calculatedAttributeName": {
        "type": "string",
        "description": "The name of an attribute defined in a profile object type."
      },
      "conditions": {
        "$ref": "#/types/aws-native:customerprofiles:CalculatedAttributeDefinitionConditions",
        "description": "The conditions including range, object count, and threshold for the calculated attribute."
      },
      "description": {
        "type": "string",
        "description": "The description of the calculated attribute."
      },
      "displayName": {
        "type": "string",
        "description": "The display name of the calculated attribute."
      },
      "domainName": {
        "type": "string",
        "description": "The unique name of the domain."
      },
      "statistic": {
        "$ref": "#/types/aws-native:customerprofiles:CalculatedAttributeDefinitionStatistic",
        "description": "The aggregation operation to perform for the calculated attribute."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:customerprofiles:Integration": {
    "cfTypeName": "AWS::CustomerProfiles::Integration",
    "properties": {
      "domainName": {
        "type": "string",
        "description": "The unique name of the domain."
      },
      "eventTriggerNames": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of unique names for active event triggers associated with the integration."
      },
      "flowDefinition": {
        "$ref": "#/types/aws-native:customerprofiles:IntegrationFlowDefinition",
        "description": "The configuration that controls how Customer Profiles retrieves data from the source."
      },
      "objectTypeName": {
        "type": "string",
        "description": "The name of the ObjectType defined for the 3rd party data in Profile Service"
      },
      "objectTypeNames": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:customerprofiles:IntegrationObjectTypeMapping"
        },
        "description": "The mapping between 3rd party event types and ObjectType names"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags (keys and values) associated with the integration"
      },
      "uri": {
        "type": "string",
        "description": "The URI of the S3 bucket or any other type of data source."
      }
    }
  },
  "aws-native:datasync:LocationAzureBlob": {
    "cfTypeName": "AWS::DataSync::LocationAzureBlob",
    "properties": {
      "agentArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Names (ARNs) of agents to use for an Azure Blob Location."
      },
      "azureAccessTier": {
        "$ref": "#/types/aws-native:datasync:LocationAzureBlobAzureAccessTier",
        "description": "Specifies an access tier for the objects you're transferring into your Azure Blob Storage container."
      },
      "azureBlobAuthenticationType": {
        "$ref": "#/types/aws-native:datasync:LocationAzureBlobAzureBlobAuthenticationType",
        "description": "The specific authentication type that you want DataSync to use to access your Azure Blob Container."
      },
      "azureBlobContainerUrl": {
        "type": "string",
        "description": "The URL of the Azure Blob container that was described."
      },
      "azureBlobSasConfiguration": {
        "$ref": "#/types/aws-native:datasync:LocationAzureBlobAzureBlobSasConfiguration",
        "description": "Specifies the SAS configuration that allows DataSync to access your Azure Blob Storage."
      },
      "azureBlobType": {
        "$ref": "#/types/aws-native:datasync:LocationAzureBlobAzureBlobType",
        "description": "Specifies a blob type for the objects you're transferring into your Azure Blob Storage container."
      },
      "subdirectory": {
        "type": "string",
        "description": "The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:datasync:LocationEfs": {
    "cfTypeName": "AWS::DataSync::LocationEFS",
    "properties": {
      "accessPointArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system."
      },
      "ec2Config": {
        "$ref": "#/types/aws-native:datasync:LocationEfsEc2Config",
        "description": "Specifies the subnet and security groups DataSync uses to connect to one of your Amazon EFS file system's [mount targets](https://docs.aws.amazon.com/efs/latest/ug/accessing-fs.html) ."
      },
      "efsFilesystemArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the Amazon EFS file system."
      },
      "fileSystemAccessRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system."
      },
      "inTransitEncryption": {
        "$ref": "#/types/aws-native:datasync:LocationEfsInTransitEncryption",
        "description": "Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system."
      },
      "subdirectory": {
        "type": "string",
        "description": "A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:datasync:LocationFSxLustre": {
    "cfTypeName": "AWS::DataSync::LocationFSxLustre",
    "properties": {
      "fsxFilesystemArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the FSx for Lustre file system."
      },
      "securityGroupArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The ARNs of the security groups that are to use to configure the FSx for Lustre file system."
      },
      "subdirectory": {
        "type": "string",
        "description": "A subdirectory in the location's path."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:datasync:LocationFSxOntap": {
    "cfTypeName": "AWS::DataSync::LocationFSxONTAP",
    "properties": {
      "protocol": {
        "$ref": "#/types/aws-native:datasync:LocationFSxOntapProtocol",
        "description": "Specifies the data transfer protocol that DataSync uses to access your Amazon FSx file system."
      },
      "securityGroupArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The ARNs of the security groups that are to use to configure the FSx ONTAP file system."
      },
      "storageVirtualMachineArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the FSx ONTAP SVM."
      },
      "subdirectory": {
        "type": "string",
        "description": "A subdirectory in the location's path."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:datasync:LocationFSxOpenZfs": {
    "cfTypeName": "AWS::DataSync::LocationFSxOpenZFS",
    "properties": {
      "fsxFilesystemArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the FSx OpenZFS file system."
      },
      "protocol": {
        "$ref": "#/types/aws-native:datasync:LocationFSxOpenZfsProtocol",
        "description": "The type of protocol that AWS DataSync uses to access your file system."
      },
      "securityGroupArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The ARNs of the security groups that are to use to configure the FSx OpenZFS file system."
      },
      "subdirectory": {
        "type": "string",
        "description": "A subdirectory in the location's path."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:datasync:LocationFSxWindows": {
    "cfTypeName": "AWS::DataSync::LocationFSxWindows",
    "properties": {
      "domain": {
        "type": "string",
        "description": "The name of the Windows domain that the FSx for Windows server belongs to."
      },
      "fsxFilesystemArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the FSx for Windows file system."
      },
      "password": {
        "type": "string",
        "description": "The password of the user who has the permissions to access files and folders in the FSx for Windows file system."
      },
      "securityGroupArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The ARNs of the security groups that are to use to configure the FSx for Windows file system."
      },
      "subdirectory": {
        "type": "string",
        "description": "A subdirectory in the location's path."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "user": {
        "type": "string",
        "description": "The user who has the permissions to access files and folders in the FSx for Windows file system."
      }
    }
  },
  "aws-native:datasync:LocationHdfs": {
    "cfTypeName": "AWS::DataSync::LocationHDFS",
    "properties": {
      "agentArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "ARN(s) of the agent(s) to use for an HDFS location."
      },
      "authenticationType": {
        "$ref": "#/types/aws-native:datasync:LocationHdfsAuthenticationType",
        "description": "The authentication mode used to determine identity of user."
      },
      "blockSize": {
        "type": "integer",
        "description": "Size of chunks (blocks) in bytes that the data is divided into when stored in the HDFS cluster."
      },
      "kerberosKeytab": {
        "type": "string",
        "description": "The Base64 string representation of the Keytab file."
      },
      "kerberosKrb5Conf": {
        "type": "string",
        "description": "The string representation of the Krb5Conf file, or the presigned URL to access the Krb5.conf file within an S3 bucket."
      },
      "kerberosPrincipal": {
        "type": "string",
        "description": "The unique identity, or principal, to which Kerberos can assign tickets."
      },
      "kmsKeyProviderUri": {
        "type": "string",
        "description": "The identifier for the Key Management Server where the encryption keys that encrypt data inside HDFS clusters are stored."
      },
      "nameNodes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:datasync:LocationHdfsNameNode"
        },
        "description": "An array of Name Node(s) of the HDFS location."
      },
      "qopConfiguration": {
        "$ref": "#/types/aws-native:datasync:LocationHdfsQopConfiguration",
        "description": "The Quality of Protection (QOP) configuration specifies the Remote Procedure Call (RPC) and data transfer protection settings configured on the Hadoop Distributed File System (HDFS) cluster. If `QopConfiguration` isn't specified, `RpcProtection` and `DataTransferProtection` default to `PRIVACY` . If you set `RpcProtection` or `DataTransferProtection` , the other parameter assumes the same value."
      },
      "replicationFactor": {
        "type": "integer",
        "description": "Number of copies of each block that exists inside the HDFS cluster."
      },
      "simpleUser": {
        "type": "string",
        "description": "The user name that has read and write permissions on the specified HDFS cluster."
      },
      "subdirectory": {
        "type": "string",
        "description": "The subdirectory in HDFS that is used to read data from the HDFS source location or write data to the HDFS destination."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:datasync:LocationNfs": {
    "cfTypeName": "AWS::DataSync::LocationNFS",
    "properties": {
      "mountOptions": {
        "$ref": "#/types/aws-native:datasync:LocationNfsMountOptions",
        "description": "Specifies the options that DataSync can use to mount your NFS file server."
      },
      "onPremConfig": {
        "$ref": "#/types/aws-native:datasync:LocationNfsOnPremConfig",
        "description": "Specifies the Amazon Resource Name (ARN) of the DataSync agent that can connect to your NFS file server.\n\nYou can specify more than one agent. For more information, see [Using multiple DataSync agents](https://docs.aws.amazon.com/datasync/latest/userguide/do-i-need-datasync-agent.html#multiple-agents) ."
      },
      "serverHostname": {
        "type": "string",
        "description": "The name of the NFS server. This value is the IP address or DNS name of the NFS server."
      },
      "subdirectory": {
        "type": "string",
        "description": "The subdirectory in the NFS file system that is used to read data from the NFS source location or write data to the NFS destination."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:datasync:LocationObjectStorage": {
    "cfTypeName": "AWS::DataSync::LocationObjectStorage",
    "properties": {
      "accessKey": {
        "type": "string",
        "description": "Optional. The access key is used if credentials are required to access the self-managed object storage server."
      },
      "agentArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Name (ARN) of the agents associated with the self-managed object storage server location."
      },
      "bucketName": {
        "type": "string",
        "description": "The name of the bucket on the self-managed object storage server."
      },
      "secretKey": {
        "type": "string",
        "description": "Optional. The secret key is used if credentials are required to access the self-managed object storage server."
      },
      "serverCertificate": {
        "type": "string",
        "description": "X.509 PEM content containing a certificate authority or chain to trust."
      },
      "serverHostname": {
        "type": "string",
        "description": "The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server."
      },
      "serverPort": {
        "type": "integer",
        "description": "The port that your self-managed server accepts inbound network traffic on."
      },
      "serverProtocol": {
        "$ref": "#/types/aws-native:datasync:LocationObjectStorageServerProtocol",
        "description": "The protocol that the object storage server uses to communicate."
      },
      "subdirectory": {
        "type": "string",
        "description": "The subdirectory in the self-managed object storage server that is used to read data from."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:datasync:LocationS3": {
    "cfTypeName": "AWS::DataSync::LocationS3",
    "properties": {
      "s3BucketArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the Amazon S3 bucket."
      },
      "s3Config": {
        "$ref": "#/types/aws-native:datasync:LocationS3s3Config",
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that is used to access an Amazon S3 bucket.\n\nFor detailed information about using such a role, see [Creating a Location for Amazon S3](https://docs.aws.amazon.com/datasync/latest/userguide/working-with-locations.html#create-s3-location) in the *AWS DataSync User Guide* ."
      },
      "s3StorageClass": {
        "$ref": "#/types/aws-native:datasync:LocationS3S3StorageClass",
        "description": "The Amazon S3 storage class you want to store your files in when this location is used as a task destination."
      },
      "subdirectory": {
        "type": "string",
        "description": "A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location or write data to the S3 destination."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:datasync:LocationSmb": {
    "cfTypeName": "AWS::DataSync::LocationSMB",
    "properties": {
      "agentArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location."
      },
      "authenticationType": {
        "$ref": "#/types/aws-native:datasync:LocationSmbAuthenticationType",
        "description": "The authentication mode used to determine identity of user."
      },
      "dnsIpAddresses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specifies the IPv4 addresses for the DNS servers that your SMB file server belongs to. This parameter applies only if AuthenticationType is set to KERBEROS. If you have multiple domains in your environment, configuring this parameter makes sure that DataSync connects to the right SMB file server."
      },
      "domain": {
        "type": "string",
        "description": "The name of the Windows domain that the SMB server belongs to."
      },
      "kerberosKeytab": {
        "type": "string",
        "description": "The Base64 string representation of the Keytab file. Specifies your Kerberos key table (keytab) file, which includes mappings between your service principal name (SPN) and encryption keys. To avoid task execution errors, make sure that the SPN in the keytab file matches exactly what you specify for KerberosPrincipal and in your krb5.conf file."
      },
      "kerberosKrb5Conf": {
        "type": "string",
        "description": "The string representation of the Krb5Conf file, or the presigned URL to access the Krb5.conf file within an S3 bucket. Specifies a Kerberos configuration file (krb5.conf) that defines your Kerberos realm configuration. To avoid task execution errors, make sure that the service principal name (SPN) in the krb5.conf file matches exactly what you specify for KerberosPrincipal and in your keytab file."
      },
      "kerberosPrincipal": {
        "type": "string",
        "description": "Specifies a service principal name (SPN), which is an identity in your Kerberos realm that has permission to access the files, folders, and file metadata in your SMB file server. SPNs are case sensitive and must include a prepended cifs/. For example, an SPN might look like cifs/kerberosuser@EXAMPLE.COM. Your task execution will fail if the SPN that you provide for this parameter doesn't match exactly what's in your keytab or krb5.conf files."
      },
      "mountOptions": {
        "$ref": "#/types/aws-native:datasync:LocationSmbMountOptions",
        "description": "Specifies the version of the SMB protocol that DataSync uses to access your SMB file server."
      },
      "password": {
        "type": "string",
        "description": "The password of the user who can mount the share and has the permissions to access files and folders in the SMB share."
      },
      "serverHostname": {
        "type": "string",
        "description": "The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server."
      },
      "subdirectory": {
        "type": "string",
        "description": "The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "user": {
        "type": "string",
        "description": "The user who can mount the share, has the permissions to access files and folders in the SMB share."
      }
    }
  },
  "aws-native:datazone:EnvironmentBlueprintConfiguration": {
    "cfTypeName": "AWS::DataZone::EnvironmentBlueprintConfiguration",
    "properties": {
      "domainIdentifier": {
        "type": "string",
        "description": "The identifier of the Amazon DataZone domain in which an environment blueprint exists."
      },
      "enabledRegions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The enabled AWS Regions specified in a blueprint configuration."
      },
      "environmentBlueprintIdentifier": {
        "type": "string",
        "description": "The identifier of the environment blueprint.\n\nIn the current release, only the following values are supported: `DefaultDataLake` and `DefaultDataWarehouse` ."
      },
      "manageAccessRoleArn": {
        "type": "string",
        "description": "The ARN of the manage access role."
      },
      "provisioningRoleArn": {
        "type": "string",
        "description": "The ARN of the provisioning role."
      },
      "regionalParameters": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:datazone:EnvironmentBlueprintConfigurationRegionalParameter"
        },
        "description": "The regional parameters of the environment blueprint."
      }
    }
  },
  "aws-native:datazone:GroupProfile": {
    "cfTypeName": "AWS::DataZone::GroupProfile",
    "properties": {
      "domainIdentifier": {
        "type": "string",
        "description": "The identifier of the Amazon DataZone domain in which the group profile would be created."
      },
      "groupIdentifier": {
        "type": "string",
        "description": "The ID of the group."
      },
      "status": {
        "$ref": "#/types/aws-native:datazone:GroupProfileStatus",
        "description": "The status of a group profile."
      }
    }
  },
  "aws-native:datazone:ProjectMembership": {
    "cfTypeName": "AWS::DataZone::ProjectMembership",
    "properties": {
      "designation": {
        "$ref": "#/types/aws-native:datazone:ProjectMembershipUserDesignation",
        "description": "The designated role of a project member."
      },
      "domainIdentifier": {
        "type": "string",
        "description": "The ID of the Amazon DataZone domain in which project membership is created."
      },
      "member": {
        "oneOf": [
          {
            "$ref": "#/types/aws-native:datazone:ProjectMembershipMember0Properties"
          },
          {
            "$ref": "#/types/aws-native:datazone:ProjectMembershipMember1Properties"
          }
        ],
        "description": "The details about a project member."
      },
      "projectIdentifier": {
        "type": "string",
        "description": "The ID of the project for which this project membership was created."
      }
    }
  },
  "aws-native:datazone:UserProfile": {
    "cfTypeName": "AWS::DataZone::UserProfile",
    "properties": {
      "domainIdentifier": {
        "type": "string",
        "description": "The identifier of the Amazon DataZone domain in which the user profile would be created."
      },
      "status": {
        "$ref": "#/types/aws-native:datazone:UserProfileStatus",
        "description": "The status of the user profile."
      },
      "userIdentifier": {
        "type": "string",
        "description": "The ID of the user."
      },
      "userType": {
        "$ref": "#/types/aws-native:datazone:UserProfileUserType",
        "description": "The user type of the user for which the user profile is created."
      }
    }
  },
  "aws-native:deadline:Farm": {
    "cfTypeName": "AWS::Deadline::Farm",
    "properties": {
      "description": {
        "type": "string",
        "description": "A description of the farm that helps identify what the farm is used for.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "displayName": {
        "type": "string",
        "description": "The display name of the farm.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "kmsKeyArn": {
        "type": "string",
        "description": "The ARN for the KMS key."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:deadline:Fleet": {
    "cfTypeName": "AWS::Deadline::Fleet",
    "properties": {
      "configuration": {
        "oneOf": [
          {
            "$ref": "#/types/aws-native:deadline:FleetConfiguration0Properties"
          },
          {
            "$ref": "#/types/aws-native:deadline:FleetConfiguration1Properties"
          }
        ],
        "description": "The configuration details for the fleet."
      },
      "description": {
        "type": "string",
        "description": "A description that helps identify what the fleet is used for.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "displayName": {
        "type": "string",
        "description": "The display name of the fleet summary to update.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "farmId": {
        "type": "string",
        "description": "The farm ID."
      },
      "maxWorkerCount": {
        "type": "integer",
        "description": "The maximum number of workers specified in the fleet."
      },
      "minWorkerCount": {
        "type": "integer",
        "description": "The minimum number of workers in the fleet."
      },
      "roleArn": {
        "type": "string",
        "description": "The IAM role that workers in the fleet use when processing jobs."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:deadline:LicenseEndpoint": {
    "cfTypeName": "AWS::Deadline::LicenseEndpoint",
    "properties": {
      "securityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The identifier of the Amazon EC2 security group that controls access to the license endpoint."
      },
      "subnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identifies the VPC subnets that can connect to a license endpoint."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "vpcId": {
        "type": "string",
        "description": "The VCP(virtual private cloud) ID associated with the license endpoint."
      }
    }
  },
  "aws-native:deadline:Limit": {
    "cfTypeName": "AWS::Deadline::Limit",
    "properties": {
      "amountRequirementName": {
        "type": "string",
        "description": "The value that you specify as the `name` in the `amounts` field of the `hostRequirements` in a step of a job template to declare the limit requirement."
      },
      "description": {
        "type": "string",
        "description": "A description of the limit. A clear description helps you identify the purpose of the limit.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "displayName": {
        "type": "string",
        "description": "The name of the limit used in lists to identify the limit.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "farmId": {
        "type": "string",
        "description": "The unique identifier of the farm that contains the limit."
      },
      "maxCount": {
        "type": "integer",
        "description": "The maximum number of resources constrained by this limit. When all of the resources are in use, steps that require the limit won't be scheduled until the resource is available.\n\nThe `maxValue` must not be 0. If the value is -1, there is no restriction on the number of resources that can be acquired for this limit."
      }
    }
  },
  "aws-native:deadline:MeteredProduct": {
    "cfTypeName": "AWS::Deadline::MeteredProduct",
    "properties": {
      "licenseEndpointId": {
        "type": "string",
        "description": "The Amazon EC2 identifier of the license endpoint."
      },
      "productId": {
        "type": "string",
        "description": "The product ID."
      }
    }
  },
  "aws-native:deadline:Monitor": {
    "cfTypeName": "AWS::Deadline::Monitor",
    "properties": {
      "displayName": {
        "type": "string",
        "description": "The name of the monitor that displays on the Deadline Cloud console.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "identityCenterInstanceArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM Identity Center instance responsible for authenticating monitor users."
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM role for the monitor. Users of the monitor use this role to access Deadline Cloud resources."
      },
      "subdomain": {
        "type": "string",
        "description": "The subdomain used for the monitor URL. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com."
      }
    }
  },
  "aws-native:deadline:Queue": {
    "cfTypeName": "AWS::Deadline::Queue",
    "properties": {
      "allowedStorageProfileIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The identifiers of the storage profiles that this queue can use to share assets between workers using different operating systems."
      },
      "defaultBudgetAction": {
        "$ref": "#/types/aws-native:deadline:QueueDefaultQueueBudgetAction",
        "description": "The default action taken on a queue summary if a budget wasn't configured."
      },
      "description": {
        "type": "string",
        "description": "A description of the queue that helps identify what the queue is used for.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "displayName": {
        "type": "string",
        "description": "The display name of the queue summary to update.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "farmId": {
        "type": "string",
        "description": "The farm ID."
      },
      "jobAttachmentSettings": {
        "$ref": "#/types/aws-native:deadline:QueueJobAttachmentSettings",
        "description": "The job attachment settings. These are the Amazon S3 bucket name and the Amazon S3 prefix."
      },
      "jobRunAsUser": {
        "$ref": "#/types/aws-native:deadline:QueueJobRunAsUser",
        "description": "Identifies the user for a job."
      },
      "requiredFileSystemLocationNames": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The file system location that the queue uses."
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM role that workers use when running jobs in this queue."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:deadline:QueueEnvironment": {
    "cfTypeName": "AWS::Deadline::QueueEnvironment",
    "properties": {
      "farmId": {
        "type": "string",
        "description": "The identifier assigned to the farm that contains the queue."
      },
      "priority": {
        "type": "integer",
        "description": "The queue environment's priority."
      },
      "queueId": {
        "type": "string",
        "description": "The unique identifier of the queue that contains the environment."
      },
      "template": {
        "type": "string",
        "description": "A JSON or YAML template that describes the processing environment for the queue."
      },
      "templateType": {
        "$ref": "#/types/aws-native:deadline:QueueEnvironmentEnvironmentTemplateType",
        "description": "Specifies whether the template for the queue environment is JSON or YAML."
      }
    }
  },
  "aws-native:deadline:QueueFleetAssociation": {
    "cfTypeName": "AWS::Deadline::QueueFleetAssociation",
    "properties": {
      "farmId": {
        "type": "string",
        "description": "The identifier of the farm that contains the queue and the fleet."
      },
      "fleetId": {
        "type": "string",
        "description": "The fleet ID."
      },
      "queueId": {
        "type": "string",
        "description": "The queue ID."
      }
    }
  },
  "aws-native:deadline:QueueLimitAssociation": {
    "cfTypeName": "AWS::Deadline::QueueLimitAssociation",
    "properties": {
      "farmId": {
        "type": "string",
        "description": "The unique identifier of the farm that contains the queue-limit association."
      },
      "limitId": {
        "type": "string",
        "description": "The unique identifier of the limit in the association."
      },
      "queueId": {
        "type": "string",
        "description": "The unique identifier of the queue in the association."
      }
    }
  },
  "aws-native:deadline:StorageProfile": {
    "cfTypeName": "AWS::Deadline::StorageProfile",
    "properties": {
      "displayName": {
        "type": "string",
        "description": "The display name of the storage profile summary to update.\n\n\u003e This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field."
      },
      "farmId": {
        "type": "string",
        "description": "The unique identifier of the farm that contains the storage profile."
      },
      "fileSystemLocations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:deadline:StorageProfileFileSystemLocation"
        },
        "description": "Operating system specific file system path to the storage location."
      },
      "osFamily": {
        "$ref": "#/types/aws-native:deadline:StorageProfileOperatingSystemFamily",
        "description": "The operating system (OS) family."
      }
    }
  },
  "aws-native:detective:Graph": {
    "cfTypeName": "AWS::Detective::Graph",
    "properties": {
      "autoEnableMembers": {
        "type": "boolean",
        "description": "Indicates whether to automatically enable new organization accounts as member accounts in the organization behavior graph."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tag values to assign to the new behavior graph."
      }
    }
  },
  "aws-native:detective:MemberInvitation": {
    "cfTypeName": "AWS::Detective::MemberInvitation",
    "properties": {
      "disableEmailNotification": {
        "type": "boolean",
        "description": "When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect."
      },
      "graphArn": {
        "type": "string",
        "description": "The ARN of the graph to which the member account will be invited"
      },
      "memberEmailAddress": {
        "type": "string",
        "description": "The root email address for the account to be invited, for validation. Updating this field has no effect."
      },
      "memberId": {
        "type": "string",
        "description": "The AWS account ID to be invited to join the graph as a member"
      },
      "message": {
        "type": "string",
        "description": "A message to be included in the email invitation sent to the invited account. Updating this field has no effect."
      }
    }
  },
  "aws-native:detective:OrganizationAdmin": {
    "cfTypeName": "AWS::Detective::OrganizationAdmin",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The account ID of the account that should be registered as your Organization's delegated administrator for Detective"
      }
    }
  },
  "aws-native:devopsguru:LogAnomalyDetectionIntegration": {
    "cfTypeName": "AWS::DevOpsGuru::LogAnomalyDetectionIntegration",
    "properties": {}
  },
  "aws-native:devopsguru:NotificationChannel": {
    "cfTypeName": "AWS::DevOpsGuru::NotificationChannel",
    "properties": {
      "config": {
        "$ref": "#/types/aws-native:devopsguru:NotificationChannelConfig",
        "description": "A `NotificationChannelConfig` object that contains information about configured notification channels."
      }
    }
  },
  "aws-native:devopsguru:ResourceCollection": {
    "cfTypeName": "AWS::DevOpsGuru::ResourceCollection",
    "properties": {
      "resourceCollectionFilter": {
        "$ref": "#/types/aws-native:devopsguru:ResourceCollectionFilter",
        "description": "Information about a filter used to specify which AWS resources are analyzed for anomalous behavior by DevOps Guru."
      }
    }
  },
  "aws-native:dms:ReplicationConfig": {
    "cfTypeName": "AWS::DMS::ReplicationConfig",
    "properties": {
      "computeConfig": {
        "$ref": "#/types/aws-native:dms:ReplicationConfigComputeConfig",
        "description": "Configuration parameters for provisioning an AWS DMS Serverless replication."
      },
      "replicationConfigIdentifier": {
        "type": "string",
        "description": "A unique identifier of replication configuration"
      },
      "replicationSettings": {
        "$ref": "pulumi.json#/Any",
        "description": "JSON settings for Servereless replications that are provisioned using this replication configuration\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::DMS::ReplicationConfig` for more information about the expected schema for this property."
      },
      "replicationType": {
        "$ref": "#/types/aws-native:dms:ReplicationConfigReplicationType",
        "description": "The type of AWS DMS Serverless replication to provision using this replication configuration"
      },
      "resourceIdentifier": {
        "type": "string",
        "description": "A unique value or name that you get set for a given resource that can be used to construct an Amazon Resource Name (ARN) for that resource"
      },
      "sourceEndpointArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the source endpoint for this AWS DMS Serverless replication configuration"
      },
      "supplementalSettings": {
        "$ref": "pulumi.json#/Any",
        "description": "JSON settings for specifying supplemental data\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::DMS::ReplicationConfig` for more information about the expected schema for this property."
      },
      "tableMappings": {
        "$ref": "pulumi.json#/Any",
        "description": "JSON table mappings for AWS DMS Serverless replications that are provisioned using this replication configuration\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::DMS::ReplicationConfig` for more information about the expected schema for this property."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the dataset.\u003c/p\u003e"
      },
      "targetEndpointArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the target endpoint for this AWS DMS Serverless replication configuration"
      }
    }
  },
  "aws-native:dsql:Cluster": {
    "cfTypeName": "AWS::DSQL::Cluster",
    "properties": {
      "deletionProtectionEnabled": {
        "type": "boolean",
        "description": "Whether deletion protection is enabled in this cluster."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        }
      }
    }
  },
  "aws-native:ec2:CapacityReservation": {
    "cfTypeName": "AWS::EC2::CapacityReservation",
    "properties": {
      "availabilityZone": {
        "type": "string",
        "description": "The Availability Zone in which to create the Capacity Reservation."
      },
      "availabilityZoneId": {
        "type": "string",
        "description": "The Availability Zone ID of the Capacity Reservation."
      },
      "ebsOptimized": {
        "type": "boolean",
        "description": "Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance."
      },
      "endDate": {
        "type": "string",
        "description": "The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to `expired` when it reaches its end date and time.\n\nYou must provide an `EndDate` value if `EndDateType` is `limited` . Omit `EndDate` if `EndDateType` is `unlimited` .\n\nIf the `EndDateType` is `limited` , the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.\n\nIf you are requesting a future-dated Capacity Reservation, you can't specify an end date and time that is within the commitment duration."
      },
      "endDateType": {
        "type": "string",
        "description": "Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:\n\n- `unlimited` - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an `EndDate` if the `EndDateType` is `unlimited` .\n- `limited` - The Capacity Reservation expires automatically at a specified date and time. You must provide an `EndDate` value if the `EndDateType` value is `limited` ."
      },
      "ephemeralStorage": {
        "type": "boolean",
        "description": "*Deprecated.*"
      },
      "instanceCount": {
        "type": "integer",
        "description": "The number of instances for which to reserve capacity.\n\n\u003e You can request future-dated Capacity Reservations for an instance count with a minimum of 100 vCPUs. For example, if you request a future-dated Capacity Reservation for `m5.xlarge` instances, you must request at least 25 instances ( *25 * m5.xlarge = 100 vCPUs* ). \n\nValid range: 1 - 1000"
      },
      "instanceMatchCriteria": {
        "type": "string",
        "description": "Indicates the type of instance launches that the Capacity Reservation accepts. The options include:\n\n- `open` - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.\n- `targeted` - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.\n\n\u003e If you are requesting a future-dated Capacity Reservation, you must specify `targeted` . \n\nDefault: `open`"
      },
      "instancePlatform": {
        "type": "string",
        "description": "The type of operating system for which to reserve capacity."
      },
      "instanceType": {
        "type": "string",
        "description": "The instance type for which to reserve capacity.\n\n\u003e You can request future-dated Capacity Reservations for instance types in the C, M, R, I, and T instance families only. \n\nFor more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide* ."
      },
      "outPostArn": {
        "type": "string",
        "description": "\u003e Not supported for future-dated Capacity Reservations. \n\nThe Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation."
      },
      "placementGroupArn": {
        "type": "string",
        "description": "\u003e Not supported for future-dated Capacity Reservations. \n\nThe Amazon Resource Name (ARN) of the cluster placement group in which to create the Capacity Reservation. For more information, see [Capacity Reservations for cluster placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html) in the *Amazon EC2 User Guide* ."
      },
      "tagSpecifications": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:CapacityReservationTagSpecification"
        },
        "description": "The tags to apply to the Capacity Reservation during launch."
      },
      "tenancy": {
        "type": "string",
        "description": "Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:\n\n- `default` - The Capacity Reservation is created on hardware that is shared with other AWS accounts .\n- `dedicated` - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account ."
      },
      "unusedReservationBillingOwnerId": {
        "type": "string",
        "description": "The ID of the AWS account to which to assign billing of the unused capacity of the Capacity Reservation. A request will be sent to the specified account. That account must accept the request for the billing to be assigned to their account. For more information, see [Billing assignment for shared Amazon EC2 Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/assign-billing.html) .\n\nYou can assign billing only for shared Capacity Reservations. To share a Capacity Reservation, you must add it to a resource share. For more information, see [AWS::RAM::ResourceShare](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html) ."
      }
    }
  },
  "aws-native:ec2:CapacityReservationFleet": {
    "cfTypeName": "AWS::EC2::CapacityReservationFleet",
    "properties": {
      "allocationStrategy": {
        "type": "string",
        "description": "The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use. Currently, only the `prioritized` allocation strategy is supported. For more information, see [Allocation strategy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#allocation-strategy) in the *Amazon EC2 User Guide* .\n\nValid values: `prioritized`"
      },
      "endDate": {
        "type": "string",
        "description": "The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to `expired` and all of the Capacity Reservations in the Fleet expire.\n\nThe Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify `5/31/2019` , `13:30:55` , the Capacity Reservation Fleet is guaranteed to expire between `13:30:55` and `14:30:55` on `5/31/2019` ."
      },
      "instanceMatchCriteria": {
        "$ref": "#/types/aws-native:ec2:CapacityReservationFleetInstanceMatchCriteria",
        "description": "Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.\n\nCurrently, Capacity Reservation Fleets support `open` instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity."
      },
      "instanceTypeSpecifications": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:CapacityReservationFleetInstanceTypeSpecification"
        },
        "description": "Information about the instance types for which to reserve the capacity."
      },
      "noRemoveEndDate": {
        "type": "boolean",
        "description": "Used to add an end date to a Capacity Reservation Fleet that has no end date and time. To add an end date to a Capacity Reservation Fleet, specify `true` for this paramater and specify the end date and time (in UTC time format) for the *EndDate* parameter."
      },
      "removeEndDate": {
        "type": "boolean",
        "description": "Used to remove an end date from a Capacity Reservation Fleet that is configured to end automatically at a specific date and time. To remove the end date from a Capacity Reservation Fleet, specify `true` for this paramater and omit the *EndDate* parameter."
      },
      "tagSpecifications": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:CapacityReservationFleetTagSpecification"
        },
        "description": "The tags to assign to the Capacity Reservation Fleet. The tags are automatically assigned to the Capacity Reservations in the Fleet."
      },
      "tenancy": {
        "$ref": "#/types/aws-native:ec2:CapacityReservationFleetTenancy",
        "description": "Indicates the tenancy of the Capacity Reservation Fleet. All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:\n\n- `default` - The Capacity Reservation Fleet is created on hardware that is shared with other AWS accounts .\n- `dedicated` - The Capacity Reservations are created on single-tenant hardware that is dedicated to a single AWS account ."
      },
      "totalTargetCapacity": {
        "type": "integer",
        "description": "The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the *Amazon EC2 User Guide* ."
      }
    }
  },
  "aws-native:ec2:CarrierGateway": {
    "cfTypeName": "AWS::EC2::CarrierGateway",
    "properties": {
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the carrier gateway."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:ec2:CustomerGateway": {
    "cfTypeName": "AWS::EC2::CustomerGateway",
    "properties": {
      "bgpAsn": {
        "type": "integer",
        "description": "For customer gateway devices that support BGP, specify the device's ASN. You must specify either ``BgpAsn`` or ``BgpAsnExtended`` when creating the customer gateway. If the ASN is larger than ``2,147,483,647``, you must use ``BgpAsnExtended``.\n Default: 65000\n Valid values: ``1`` to ``2,147,483,647``"
      },
      "bgpAsnExtended": {
        "type": "number",
        "description": "For customer gateway devices that support BGP, specify the device's ASN. You must specify either ``BgpAsn`` or ``BgpAsnExtended`` when creating the customer gateway. If the ASN is larger than ``2,147,483,647``, you must use ``BgpAsnExtended``.\n Valid values: ``2,147,483,648`` to ``4,294,967,295``"
      },
      "certificateArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the customer gateway certificate."
      },
      "deviceName": {
        "type": "string",
        "description": "The name of customer gateway device."
      },
      "ipAddress": {
        "type": "string",
        "description": "IPv4 address for the customer gateway device's outside interface. The address must be static. If ``OutsideIpAddressType`` in your VPN connection options is set to ``PrivateIpv4``, you can use an RFC6598 or RFC1918 private IPv4 address. If ``OutsideIpAddressType`` is set to ``PublicIpv4``, you can use a public IPv4 address."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "One or more tags for the customer gateway."
      },
      "type": {
        "type": "string",
        "description": "The type of VPN connection that this customer gateway supports (``ipsec.1``)."
      }
    }
  },
  "aws-native:ec2:DhcpOptions": {
    "cfTypeName": "AWS::EC2::DHCPOptions",
    "properties": {
      "domainName": {
        "type": "string",
        "description": "This value is used to complete unqualified DNS hostnames."
      },
      "domainNameServers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IPv4 addresses of up to four domain name servers, or AmazonProvidedDNS."
      },
      "ipv6AddressPreferredLeaseTime": {
        "type": "integer",
        "description": "The preferred Lease Time for ipV6 address in seconds."
      },
      "netbiosNameServers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IPv4 addresses of up to four NetBIOS name servers."
      },
      "netbiosNodeType": {
        "type": "integer",
        "description": "The NetBIOS node type (1, 2, 4, or 8)."
      },
      "ntpServers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IPv4 addresses of up to four Network Time Protocol (NTP) servers."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags assigned to the DHCP options set."
      }
    }
  },
  "aws-native:ec2:Ec2Fleet": {
    "cfTypeName": "AWS::EC2::EC2Fleet",
    "properties": {
      "context": {
        "type": "string",
        "description": "Reserved."
      },
      "excessCapacityTerminationPolicy": {
        "$ref": "#/types/aws-native:ec2:Ec2FleetExcessCapacityTerminationPolicy",
        "description": "Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.\n\nSupported only for fleets of type `maintain` ."
      },
      "launchTemplateConfigs": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:Ec2FleetFleetLaunchTemplateConfigRequest"
        },
        "description": "The configuration for the EC2 Fleet."
      },
      "onDemandOptions": {
        "$ref": "#/types/aws-native:ec2:Ec2FleetOnDemandOptionsRequest",
        "description": "Describes the configuration of On-Demand Instances in an EC2 Fleet."
      },
      "replaceUnhealthyInstances": {
        "type": "boolean",
        "description": "Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type `maintain` . For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the *Amazon EC2 User Guide* ."
      },
      "spotOptions": {
        "$ref": "#/types/aws-native:ec2:Ec2FleetSpotOptionsRequest",
        "description": "Describes the configuration of Spot Instances in an EC2 Fleet."
      },
      "tagSpecifications": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:Ec2FleetTagSpecification"
        },
        "description": "The key-value pair for tagging the EC2 Fleet request on creation. For more information, see [Tag your resources](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources) .\n\nIf the fleet type is `instant` , specify a resource type of `fleet` to tag the fleet or `instance` to tag the instances at launch.\n\nIf the fleet type is `maintain` or `request` , specify a resource type of `fleet` to tag the fleet. You cannot specify a resource type of `instance` . To tag instances at launch, specify the tags in a [launch template](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template) ."
      },
      "targetCapacitySpecification": {
        "$ref": "#/types/aws-native:ec2:Ec2FleetTargetCapacitySpecificationRequest",
        "description": "The number of units to request."
      },
      "terminateInstancesWithExpiration": {
        "type": "boolean",
        "description": "Indicates whether running instances should be terminated when the EC2 Fleet expires."
      },
      "type": {
        "$ref": "#/types/aws-native:ec2:Ec2FleetType",
        "description": "The fleet type. The default value is `maintain` .\n\n- `maintain` - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.\n- `request` - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.\n- `instant` - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.\n\nFor more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the *Amazon EC2 User Guide* ."
      },
      "validFrom": {
        "type": "string",
        "description": "The start date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). The default is to start fulfilling the request immediately."
      },
      "validUntil": {
        "type": "string",
        "description": "The end date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it."
      }
    }
  },
  "aws-native:ec2:EgressOnlyInternetGateway": {
    "cfTypeName": "AWS::EC2::EgressOnlyInternetGateway",
    "properties": {
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC for which to create the egress-only internet gateway."
      }
    }
  },
  "aws-native:ec2:Eip": {
    "cfTypeName": "AWS::EC2::EIP",
    "properties": {
      "address": {
        "type": "string",
        "description": "An Elastic IP address or a carrier IP address in a Wavelength Zone."
      },
      "domain": {
        "type": "string",
        "description": "The network (``vpc``).\n If you define an Elastic IP address and associate it with a VPC that is defined in the same template, you must declare a dependency on the VPC-gateway attachment by using the [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) on this resource."
      },
      "instanceId": {
        "type": "string",
        "description": "The ID of the instance.\n  Updates to the ``InstanceId`` property may require *some interruptions*. Updates on an EIP reassociates the address on its associated resource."
      },
      "ipamPoolId": {
        "type": "string",
        "description": "The ID of an IPAM pool which has an Amazon-provided or BYOIP public IPv4 CIDR provisioned to it. For more information, see [Allocate sequential Elastic IP addresses from an IPAM pool](https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-eip-pool.html) in the *Amazon VPC IPAM User Guide* ."
      },
      "networkBorderGroup": {
        "type": "string",
        "description": "A unique set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses. Use this parameter to limit the IP address to this location. IP addresses cannot move between network border groups.\n Use [DescribeAvailabilityZones](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html) to view the network border groups."
      },
      "publicIpv4Pool": {
        "type": "string",
        "description": "The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.\n  Updates to the ``PublicIpv4Pool`` property may require *some interruptions*. Updates on an EIP reassociates the address on its associated resource."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags assigned to the Elastic IP address.\n  Updates to the ``Tags`` property may require *some interruptions*. Updates on an EIP reassociates the address on its associated resource."
      },
      "transferAddress": {
        "type": "string",
        "description": "The Elastic IP address you are accepting for transfer. You can only accept one transferred address. For more information on Elastic IP address transfers, see [Transfer Elastic IP addresses](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-eips.html#transfer-EIPs-intro) in the *Amazon Virtual Private Cloud User Guide*."
      }
    }
  },
  "aws-native:ec2:EipAssociation": {
    "cfTypeName": "AWS::EC2::EIPAssociation",
    "properties": {
      "allocationId": {
        "type": "string",
        "description": "The allocation ID. This is required."
      },
      "eip": {
        "type": "string"
      },
      "instanceId": {
        "type": "string",
        "description": "The ID of the instance. The instance must have exactly one attached network interface. You can specify either the instance ID or the network interface ID, but not both."
      },
      "networkInterfaceId": {
        "type": "string",
        "description": "The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.\n You can specify either the instance ID or the network interface ID, but not both."
      },
      "privateIpAddress": {
        "type": "string",
        "description": "The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address."
      }
    }
  },
  "aws-native:ec2:EnclaveCertificateIamRoleAssociation": {
    "cfTypeName": "AWS::EC2::EnclaveCertificateIamRoleAssociation",
    "properties": {
      "certificateArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the ACM certificate with which to associate the IAM role."
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate."
      }
    }
  },
  "aws-native:ec2:FlowLog": {
    "cfTypeName": "AWS::EC2::FlowLog",
    "properties": {
      "deliverCrossAccountRole": {
        "type": "string",
        "description": "The ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts."
      },
      "deliverLogsPermissionArn": {
        "type": "string",
        "description": "The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName."
      },
      "destinationOptions": {
        "$ref": "#/types/aws-native:ec2:DestinationOptionsProperties",
        "description": "The destination options."
      },
      "logDestination": {
        "type": "string",
        "description": "Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group, an Amazon S3 bucket, or a Kinesis Firehose stream. The value specified for this parameter depends on the value specified for LogDestinationType."
      },
      "logDestinationType": {
        "$ref": "#/types/aws-native:ec2:FlowLogLogDestinationType",
        "description": "Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3."
      },
      "logFormat": {
        "type": "string",
        "description": "The fields to include in the flow log record, in the order in which they should appear."
      },
      "logGroupName": {
        "type": "string",
        "description": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName."
      },
      "maxAggregationInterval": {
        "type": "integer",
        "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes)."
      },
      "resourceId": {
        "type": "string",
        "description": "The ID of the subnet, network interface, or VPC for which you want to create a flow log."
      },
      "resourceType": {
        "$ref": "#/types/aws-native:ec2:FlowLogResourceType",
        "description": "The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to apply to the flow logs."
      },
      "trafficType": {
        "$ref": "#/types/aws-native:ec2:FlowLogTrafficType",
        "description": "The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic."
      }
    }
  },
  "aws-native:ec2:GatewayRouteTableAssociation": {
    "cfTypeName": "AWS::EC2::GatewayRouteTableAssociation",
    "properties": {
      "gatewayId": {
        "type": "string",
        "description": "The ID of the gateway."
      },
      "routeTableId": {
        "type": "string",
        "description": "The ID of the route table."
      }
    }
  },
  "aws-native:ec2:Host": {
    "cfTypeName": "AWS::EC2::Host",
    "properties": {
      "assetId": {
        "type": "string",
        "description": "The ID of the Outpost hardware asset."
      },
      "autoPlacement": {
        "type": "string",
        "description": "Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID."
      },
      "availabilityZone": {
        "type": "string",
        "description": "The Availability Zone in which to allocate the Dedicated Host."
      },
      "hostMaintenance": {
        "type": "string",
        "description": "Automatically allocates a new dedicated host and moves your instances on to it if a degradation is detected on your current host."
      },
      "hostRecovery": {
        "type": "string",
        "description": "Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default."
      },
      "instanceFamily": {
        "type": "string",
        "description": "Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family."
      },
      "instanceType": {
        "type": "string",
        "description": "Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only."
      },
      "outpostArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which to allocate the Dedicated Host."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags assigned to the Host."
      }
    }
  },
  "aws-native:ec2:Instance": {
    "cfTypeName": "AWS::EC2::Instance",
    "properties": {
      "additionalInfo": {
        "type": "string",
        "description": "This property is reserved for internal use. If you use it, the stack fails with this error: Bad property set: [Testing this property] (Service: AmazonEC2; Status Code: 400; Error Code: InvalidParameterCombination; Request ID: 0XXXXXX-49c7-4b40-8bcc-76885dcXXXXX)."
      },
      "affinity": {
        "$ref": "#/types/aws-native:ec2:InstanceAffinity",
        "description": "Indicates whether the instance is associated with a dedicated host. If you want the instance to always restart on the same host on which it was launched, specify host. If you want the instance to restart on any available host, but try to launch onto the last host it ran on (on a best-effort basis), specify default."
      },
      "availabilityZone": {
        "type": "string",
        "description": "The Availability Zone of the instance."
      },
      "blockDeviceMappings": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:InstanceBlockDeviceMapping"
        },
        "description": "The block device mapping entries that defines the block devices to attach to the instance at launch."
      },
      "cpuOptions": {
        "$ref": "#/types/aws-native:ec2:CpuOptionsProperties",
        "description": "The CPU options for the instance."
      },
      "creditSpecification": {
        "$ref": "#/types/aws-native:ec2:CreditSpecificationProperties",
        "description": "The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited."
      },
      "disableApiTermination": {
        "type": "boolean",
        "description": "If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can."
      },
      "ebsOptimized": {
        "type": "boolean",
        "description": "Indicates whether the instance is optimized for Amazon EBS I/O."
      },
      "elasticGpuSpecifications": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:InstanceElasticGpuSpecification"
        },
        "description": "An elastic GPU to associate with the instance."
      },
      "elasticInferenceAccelerators": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:InstanceElasticInferenceAccelerator"
        },
        "description": "An elastic inference accelerator to associate with the instance."
      },
      "enclaveOptions": {
        "$ref": "#/types/aws-native:ec2:EnclaveOptionsProperties",
        "description": "Indicates whether the instance is enabled for AWS Nitro Enclaves."
      },
      "hibernationOptions": {
        "$ref": "#/types/aws-native:ec2:HibernationOptionsProperties",
        "description": "Indicates whether an instance is enabled for hibernation."
      },
      "hostId": {
        "type": "string",
        "description": "If you specify host for the Affinity property, the ID of a dedicated host that the instance is associated with. If you don't specify an ID, Amazon EC2 launches the instance onto any available, compatible dedicated host in your account."
      },
      "hostResourceGroupArn": {
        "type": "string",
        "description": "The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host."
      },
      "iamInstanceProfile": {
        "type": "string",
        "description": "The IAM instance profile."
      },
      "imageId": {
        "type": "string",
        "description": "The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template."
      },
      "instanceInitiatedShutdownBehavior": {
        "type": "string",
        "description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)."
      },
      "instanceType": {
        "type": "string",
        "description": "The instance type."
      },
      "ipv6AddressCount": {
        "type": "integer",
        "description": "[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet."
      },
      "ipv6Addresses": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:InstanceIpv6Address"
        },
        "description": "[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface."
      },
      "kernelId": {
        "type": "string",
        "description": "The ID of the kernel."
      },
      "keyName": {
        "type": "string",
        "description": "The name of the key pair."
      },
      "launchTemplate": {
        "$ref": "#/types/aws-native:ec2:InstanceLaunchTemplateSpecification",
        "description": "The launch template to use to launch the instances."
      },
      "licenseSpecifications": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:InstanceLicenseSpecification"
        },
        "description": "The license configurations."
      },
      "monitoring": {
        "type": "boolean",
        "description": "Specifies whether detailed monitoring is enabled for the instance."
      },
      "networkInterfaces": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:InstanceNetworkInterface"
        },
        "description": "The network interfaces to associate with the instance."
      },
      "placementGroupName": {
        "type": "string",
        "description": "The name of an existing placement group that you want to launch the instance into (cluster | partition | spread)."
      },
      "privateDnsNameOptions": {
        "$ref": "#/types/aws-native:ec2:InstancePrivateDnsNameOptions",
        "description": "The options for the instance hostname."
      },
      "privateIpAddress": {
        "type": "string",
        "description": "[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet."
      },
      "propagateTagsToVolumeOnCreation": {
        "type": "boolean",
        "description": "Indicates whether to assign the tags from the instance to all of the volumes attached to the instance at launch. If you specify true and you assign tags to the instance, those tags are automatically assigned to all of the volumes that you attach to the instance at launch. If you specify false, those tags are not assigned to the attached volumes."
      },
      "ramdiskId": {
        "type": "string",
        "description": "The ID of the RAM disk to select."
      },
      "securityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of the security groups."
      },
      "securityGroups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "the names of the security groups. For a nondefault VPC, you must use security group IDs instead."
      },
      "sourceDestCheck": {
        "type": "boolean",
        "description": "Specifies whether to enable an instance launched in a VPC to perform NAT."
      },
      "ssmAssociations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:InstanceSsmAssociation"
        },
        "description": "The SSM document and parameter values in AWS Systems Manager to associate with this instance."
      },
      "subnetId": {
        "type": "string",
        "description": "[EC2-VPC] The ID of the subnet to launch the instance into.\n\n"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the instance."
      },
      "tenancy": {
        "type": "string",
        "description": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware."
      },
      "userData": {
        "type": "string",
        "description": "The user data to make available to the instance."
      },
      "volumes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:InstanceVolume"
        },
        "description": "The volumes to attach to the instance."
      }
    }
  },
  "aws-native:ec2:InstanceConnectEndpoint": {
    "cfTypeName": "AWS::EC2::InstanceConnectEndpoint",
    "properties": {
      "clientToken": {
        "type": "string",
        "description": "The client token of the instance connect endpoint."
      },
      "preserveClientIp": {
        "type": "boolean",
        "description": "If true, the address of the instance connect endpoint client is preserved when connecting to the end resource"
      },
      "securityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The security group IDs of the instance connect endpoint."
      },
      "subnetId": {
        "type": "string",
        "description": "The subnet id of the instance connect endpoint"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags of the instance connect endpoint."
      }
    }
  },
  "aws-native:ec2:InternetGateway": {
    "cfTypeName": "AWS::EC2::InternetGateway",
    "properties": {
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags to assign to the internet gateway."
      }
    }
  },
  "aws-native:ec2:Ipam": {
    "cfTypeName": "AWS::EC2::IPAM",
    "properties": {
      "defaultResourceDiscoveryOrganizationalUnitExclusions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:IpamOrganizationalUnitExclusion"
        },
        "description": "A set of organizational unit (OU) exclusions for the default resource discovery, created with this IPAM."
      },
      "description": {
        "type": "string",
        "description": "The description for the IPAM."
      },
      "enablePrivateGua": {
        "type": "boolean",
        "description": "Enable provisioning of GUA space in private pools."
      },
      "operatingRegions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:IpamOperatingRegion"
        },
        "description": "The regions IPAM is enabled for. Allows pools to be created in these regions, as well as enabling monitoring"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "tier": {
        "$ref": "#/types/aws-native:ec2:IpamTier",
        "description": "The tier of the IPAM."
      }
    }
  },
  "aws-native:ec2:IpamAllocation": {
    "cfTypeName": "AWS::EC2::IPAMAllocation",
    "properties": {
      "cidr": {
        "type": "string",
        "description": "The CIDR you would like to allocate from the IPAM pool. Note the following:\n\n- If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.\n- If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.\n\nPossible values: Any available IPv4 or IPv6 CIDR."
      },
      "description": {
        "type": "string",
        "description": "A description for the allocation."
      },
      "ipamPoolId": {
        "type": "string",
        "description": "Id of the IPAM Pool."
      },
      "netmaskLength": {
        "type": "integer",
        "description": "The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it."
      }
    }
  },
  "aws-native:ec2:IpamPool": {
    "cfTypeName": "AWS::EC2::IPAMPool",
    "properties": {
      "addressFamily": {
        "type": "string",
        "description": "The address family of the address space in this pool. Either IPv4 or IPv6."
      },
      "allocationDefaultNetmaskLength": {
        "type": "integer",
        "description": "The default netmask length for allocations made from this pool. This value is used when the netmask length of an allocation isn't specified."
      },
      "allocationMaxNetmaskLength": {
        "type": "integer",
        "description": "The maximum allowed netmask length for allocations made from this pool."
      },
      "allocationMinNetmaskLength": {
        "type": "integer",
        "description": "The minimum allowed netmask length for allocations made from this pool."
      },
      "allocationResourceTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:IpamPoolTag"
        },
        "description": "When specified, an allocation will not be allowed unless a resource has a matching set of tags."
      },
      "autoImport": {
        "type": "boolean",
        "description": "Determines what to do if IPAM discovers resources that haven't been assigned an allocation. If set to true, an allocation will be made automatically."
      },
      "awsService": {
        "$ref": "#/types/aws-native:ec2:IpamPoolAwsService",
        "description": "Limits which service in Amazon Web Services that the pool can be used in."
      },
      "description": {
        "type": "string",
        "description": "The description of the IPAM pool."
      },
      "ipamScopeId": {
        "type": "string",
        "description": "The Id of the scope this pool is a part of."
      },
      "locale": {
        "type": "string",
        "description": "The region of this pool. If not set, this will default to \"None\" which will disable non-custom allocations. If the locale has been specified for the source pool, this value must match."
      },
      "provisionedCidrs": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:IpamPoolProvisionedCidr"
        },
        "description": "A list of cidrs representing the address space available for allocation in this pool."
      },
      "publicIpSource": {
        "$ref": "#/types/aws-native:ec2:IpamPoolPublicIpSource",
        "description": "The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Default is `byoip`."
      },
      "publiclyAdvertisable": {
        "type": "boolean",
        "description": "Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is IPv6."
      },
      "sourceIpamPoolId": {
        "type": "string",
        "description": "The Id of this pool's source. If set, all space provisioned in this pool must be free space provisioned in the parent pool."
      },
      "sourceResource": {
        "$ref": "#/types/aws-native:ec2:IpamPoolSourceResource",
        "description": "The resource used to provision CIDRs to a resource planning pool."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:ec2:IpamPoolCidr": {
    "cfTypeName": "AWS::EC2::IPAMPoolCidr",
    "properties": {
      "cidr": {
        "type": "string",
        "description": "Represents a single IPv4 or IPv6 CIDR"
      },
      "ipamPoolId": {
        "type": "string",
        "description": "Id of the IPAM Pool."
      },
      "netmaskLength": {
        "type": "integer",
        "description": "The desired netmask length of the provision. If set, IPAM will choose a block of free space with this size and return the CIDR representing it."
      }
    }
  },
  "aws-native:ec2:IpamResourceDiscovery": {
    "cfTypeName": "AWS::EC2::IPAMResourceDiscovery",
    "properties": {
      "description": {
        "type": "string",
        "description": "The resource discovery description."
      },
      "operatingRegions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:IpamResourceDiscoveryIpamOperatingRegion"
        },
        "description": "The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring"
      },
      "organizationalUnitExclusions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:IpamResourceDiscoveryOrganizationalUnitExclusion"
        },
        "description": "A set of organizational unit (OU) exclusions for this resource."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:ec2:IpamResourceDiscoveryAssociation": {
    "cfTypeName": "AWS::EC2::IPAMResourceDiscoveryAssociation",
    "properties": {
      "ipamId": {
        "type": "string",
        "description": "The Id of the IPAM this Resource Discovery is associated to."
      },
      "ipamResourceDiscoveryId": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IPAM Resource Discovery Association."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:ec2:IpamScope": {
    "cfTypeName": "AWS::EC2::IPAMScope",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description of the scope."
      },
      "ipamId": {
        "type": "string",
        "description": "The Id of the IPAM this scope is a part of."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:ec2:KeyPair": {
    "cfTypeName": "AWS::EC2::KeyPair",
    "properties": {
      "keyFormat": {
        "$ref": "#/types/aws-native:ec2:KeyPairKeyFormat",
        "description": "The format of the key pair.\n Default: ``pem``"
      },
      "keyName": {
        "type": "string",
        "description": "A unique name for the key pair.\n Constraints: Up to 255 ASCII characters"
      },
      "keyType": {
        "$ref": "#/types/aws-native:ec2:KeyPairKeyType",
        "description": "The type of key pair. Note that ED25519 keys are not supported for Windows instances.\n If the ``PublicKeyMaterial`` property is specified, the ``KeyType`` property is ignored, and the key type is inferred from the ``PublicKeyMaterial`` value.\n Default: ``rsa``"
      },
      "publicKeyMaterial": {
        "type": "string",
        "description": "The public key material. The ``PublicKeyMaterial`` property is used to import a key pair. If this property is not specified, then a new key pair will be created."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "The tags to apply to the key pair."
      }
    }
  },
  "aws-native:ec2:LocalGatewayRoute": {
    "cfTypeName": "AWS::EC2::LocalGatewayRoute",
    "properties": {
      "destinationCidrBlock": {
        "type": "string",
        "description": "The CIDR block used for destination matches."
      },
      "localGatewayRouteTableId": {
        "type": "string",
        "description": "The ID of the local gateway route table."
      },
      "localGatewayVirtualInterfaceGroupId": {
        "type": "string",
        "description": "The ID of the virtual interface group."
      },
      "networkInterfaceId": {
        "type": "string",
        "description": "The ID of the network interface."
      }
    }
  },
  "aws-native:ec2:LocalGatewayRouteTable": {
    "cfTypeName": "AWS::EC2::LocalGatewayRouteTable",
    "properties": {
      "localGatewayId": {
        "type": "string",
        "description": "The ID of the local gateway."
      },
      "mode": {
        "type": "string",
        "description": "The mode of the local gateway route table."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the local gateway route table."
      }
    }
  },
  "aws-native:ec2:LocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
    "cfTypeName": "AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
    "properties": {
      "localGatewayRouteTableId": {
        "type": "string",
        "description": "The ID of the local gateway route table."
      },
      "localGatewayVirtualInterfaceGroupId": {
        "type": "string",
        "description": "The ID of the local gateway route table virtual interface group."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the local gateway route table virtual interface group association."
      }
    }
  },
  "aws-native:ec2:LocalGatewayRouteTableVpcAssociation": {
    "cfTypeName": "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
    "properties": {
      "localGatewayRouteTableId": {
        "type": "string",
        "description": "The ID of the local gateway route table."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the association."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:ec2:NatGateway": {
    "cfTypeName": "AWS::EC2::NatGateway",
    "properties": {
      "allocationId": {
        "type": "string",
        "description": "[Public NAT gateway only] The allocation ID of the Elastic IP address that's associated with the NAT gateway. This property is required for a public NAT gateway and cannot be specified with a private NAT gateway."
      },
      "connectivityType": {
        "type": "string",
        "description": "Indicates whether the NAT gateway supports public or private connectivity. The default is public connectivity."
      },
      "maxDrainDurationSeconds": {
        "type": "integer",
        "description": "The maximum amount of time to wait (in seconds) before forcibly releasing the IP addresses if connections are still in progress. Default value is 350 seconds."
      },
      "privateIpAddress": {
        "type": "string",
        "description": "The private IPv4 address to assign to the NAT gateway. If you don't provide an address, a private IPv4 address will be automatically assigned."
      },
      "secondaryAllocationIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Secondary EIP allocation IDs. For more information, see [Create a NAT gateway](https://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-working-with.html) in the *Amazon VPC User Guide*."
      },
      "secondaryPrivateIpAddressCount": {
        "type": "integer",
        "description": "[Private NAT gateway only] The number of secondary private IPv4 addresses you want to assign to the NAT gateway. For more information about secondary addresses, see [Create a NAT gateway](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-creating) in the *Amazon Virtual Private Cloud User Guide*.\n  ``SecondaryPrivateIpAddressCount`` and ``SecondaryPrivateIpAddresses`` cannot be set at the same time."
      },
      "secondaryPrivateIpAddresses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Secondary private IPv4 addresses. For more information about secondary addresses, see [Create a NAT gateway](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-creating) in the *Amazon Virtual Private Cloud User Guide*.\n  ``SecondaryPrivateIpAddressCount`` and ``SecondaryPrivateIpAddresses`` cannot be set at the same time."
      },
      "subnetId": {
        "type": "string",
        "description": "The ID of the subnet in which the NAT gateway is located."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the NAT gateway."
      }
    }
  },
  "aws-native:ec2:NetworkAcl": {
    "cfTypeName": "AWS::EC2::NetworkAcl",
    "properties": {
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the network ACL."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC for the network ACL."
      }
    }
  },
  "aws-native:ec2:NetworkInsightsAccessScope": {
    "cfTypeName": "AWS::EC2::NetworkInsightsAccessScope",
    "properties": {
      "excludePaths": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:NetworkInsightsAccessScopeAccessScopePathRequest"
        },
        "description": "The paths to exclude."
      },
      "matchPaths": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:NetworkInsightsAccessScopeAccessScopePathRequest"
        },
        "description": "The paths to match."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags."
      }
    }
  },
  "aws-native:ec2:NetworkInsightsAccessScopeAnalysis": {
    "cfTypeName": "AWS::EC2::NetworkInsightsAccessScopeAnalysis",
    "properties": {
      "networkInsightsAccessScopeId": {
        "type": "string",
        "description": "The ID of the Network Access Scope."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags."
      }
    }
  },
  "aws-native:ec2:NetworkInsightsAnalysis": {
    "cfTypeName": "AWS::EC2::NetworkInsightsAnalysis",
    "properties": {
      "additionalAccounts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The member accounts that contain resources that the path can traverse."
      },
      "filterInArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Names (ARN) of the resources that the path must traverse."
      },
      "networkInsightsPathId": {
        "type": "string",
        "description": "The ID of the path."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to apply."
      }
    }
  },
  "aws-native:ec2:NetworkInsightsPath": {
    "cfTypeName": "AWS::EC2::NetworkInsightsPath",
    "properties": {
      "destination": {
        "type": "string",
        "description": "The ID or ARN of the destination. If the resource is in another account, you must specify an ARN."
      },
      "destinationIp": {
        "type": "string",
        "description": "The IP address of the destination."
      },
      "destinationPort": {
        "type": "integer",
        "description": "The destination port."
      },
      "filterAtDestination": {
        "$ref": "#/types/aws-native:ec2:NetworkInsightsPathPathFilter",
        "description": "Scopes the analysis to network paths that match specific filters at the destination. If you specify this parameter, you can't specify the parameter for the destination IP address."
      },
      "filterAtSource": {
        "$ref": "#/types/aws-native:ec2:NetworkInsightsPathPathFilter",
        "description": "Scopes the analysis to network paths that match specific filters at the source. If you specify this parameter, you can't specify the parameters for the source IP address or the destination port."
      },
      "protocol": {
        "$ref": "#/types/aws-native:ec2:NetworkInsightsPathProtocol",
        "description": "The protocol."
      },
      "source": {
        "type": "string",
        "description": "The ID or ARN of the source. If the resource is in another account, you must specify an ARN."
      },
      "sourceIp": {
        "type": "string",
        "description": "The IP address of the source."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the path."
      }
    }
  },
  "aws-native:ec2:NetworkInterface": {
    "cfTypeName": "AWS::EC2::NetworkInterface",
    "properties": {
      "connectionTrackingSpecification": {
        "$ref": "#/types/aws-native:ec2:NetworkInterfaceConnectionTrackingSpecification",
        "description": "A connection tracking specification for the network interface."
      },
      "description": {
        "type": "string",
        "description": "A description for the network interface."
      },
      "enablePrimaryIpv6": {
        "type": "boolean",
        "description": "If you have instances or ENIs that rely on the IPv6 address not changing, to avoid disrupting traffic to instances or ENIs, you can enable a primary IPv6 address. Enable this option to automatically assign an IPv6 associated with the ENI attached to your instance to be the primary IPv6 address. When you enable an IPv6 address to be a primary IPv6, you cannot disable it. Traffic will be routed to the primary IPv6 address until the instance is terminated or the ENI is detached. If you have multiple IPv6 addresses associated with an ENI and you enable a primary IPv6 address, the first IPv6 address associated with the ENI becomes the primary IPv6 address."
      },
      "groupSet": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of security group IDs associated with this network interface."
      },
      "interfaceType": {
        "type": "string",
        "description": "Indicates the type of network interface."
      },
      "ipv4PrefixCount": {
        "type": "integer",
        "description": "The number of IPv4 prefixes to assign to a network interface. When you specify a number of IPv4 prefixes, Amazon EC2 selects these prefixes from your existing subnet CIDR reservations, if available, or from free spaces in the subnet. By default, these will be /28 prefixes. You can't specify a count of IPv4 prefixes if you've specified one of the following: specific IPv4 prefixes, specific private IPv4 addresses, or a count of private IPv4 addresses."
      },
      "ipv4Prefixes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:NetworkInterfaceIpv4PrefixSpecification"
        },
        "description": "Assigns a list of IPv4 prefixes to the network interface. If you want EC2 to automatically assign IPv4 prefixes, use the Ipv4PrefixCount property and do not specify this property. Presently, only /28 prefixes are supported. You can't specify IPv4 prefixes if you've specified one of the following: a count of IPv4 prefixes, specific private IPv4 addresses, or a count of private IPv4 addresses."
      },
      "ipv6AddressCount": {
        "type": "integer",
        "description": "The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the Ipv6Addresses property and don't specify this property."
      },
      "ipv6Addresses": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:NetworkInterfaceInstanceIpv6Address"
        },
        "description": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface. If you're specifying a number of IPv6 addresses, use the Ipv6AddressCount property and don't specify this property."
      },
      "ipv6PrefixCount": {
        "type": "integer",
        "description": "The number of IPv6 prefixes to assign to a network interface. When you specify a number of IPv6 prefixes, Amazon EC2 selects these prefixes from your existing subnet CIDR reservations, if available, or from free spaces in the subnet. By default, these will be /80 prefixes. You can't specify a count of IPv6 prefixes if you've specified one of the following: specific IPv6 prefixes, specific IPv6 addresses, or a count of IPv6 addresses."
      },
      "ipv6Prefixes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:NetworkInterfaceIpv6PrefixSpecification"
        },
        "description": "Assigns a list of IPv6 prefixes to the network interface. If you want EC2 to automatically assign IPv6 prefixes, use the Ipv6PrefixCount property and do not specify this property. Presently, only /80 prefixes are supported. You can't specify IPv6 prefixes if you've specified one of the following: a count of IPv6 prefixes, specific IPv6 addresses, or a count of IPv6 addresses."
      },
      "privateIpAddress": {
        "type": "string",
        "description": "Assigns a single private IP address to the network interface, which is used as the primary private IP address. If you want to specify multiple private IP address, use the PrivateIpAddresses property. "
      },
      "privateIpAddresses": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:NetworkInterfacePrivateIpAddressSpecification"
        },
        "description": "Assigns a list of private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the Primary property to true in the PrivateIpAddressSpecification property. If you want EC2 to automatically assign private IP addresses, use the SecondaryPrivateIpAddressCount property and do not specify this property."
      },
      "secondaryPrivateIpAddressCount": {
        "type": "integer",
        "description": "The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using privateIpAddresses"
      },
      "sourceDestCheck": {
        "type": "boolean",
        "description": "Indicates whether traffic to or from the instance is validated."
      },
      "subnetId": {
        "type": "string",
        "description": "The ID of the subnet to associate with the network interface."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An arbitrary set of tags (key-value pairs) for this network interface."
      }
    }
  },
  "aws-native:ec2:NetworkInterfaceAttachment": {
    "cfTypeName": "AWS::EC2::NetworkInterfaceAttachment",
    "properties": {
      "deleteOnTermination": {
        "type": "boolean",
        "description": "Whether to delete the network interface when the instance terminates. By default, this value is set to ``true``."
      },
      "deviceIndex": {
        "type": "string",
        "description": "The network interface's position in the attachment order. For example, the first attached network interface has a ``DeviceIndex`` of 0."
      },
      "enaSrdSpecification": {
        "$ref": "#/types/aws-native:ec2:NetworkInterfaceAttachmentEnaSrdSpecification",
        "description": "Configures ENA Express for the network interface that this action attaches to the instance."
      },
      "instanceId": {
        "type": "string",
        "description": "The ID of the instance to which you will attach the ENI."
      },
      "networkInterfaceId": {
        "type": "string",
        "description": "The ID of the ENI that you want to attach."
      }
    }
  },
  "aws-native:ec2:NetworkPerformanceMetricSubscription": {
    "cfTypeName": "AWS::EC2::NetworkPerformanceMetricSubscription",
    "properties": {
      "destination": {
        "type": "string",
        "description": "The target Region or Availability Zone for the metric to subscribe to."
      },
      "metric": {
        "type": "string",
        "description": "The metric type to subscribe to."
      },
      "source": {
        "type": "string",
        "description": "The starting Region or Availability Zone for metric to subscribe to."
      },
      "statistic": {
        "type": "string",
        "description": "The statistic to subscribe to."
      }
    }
  },
  "aws-native:ec2:PlacementGroup": {
    "cfTypeName": "AWS::EC2::PlacementGroup",
    "properties": {
      "partitionCount": {
        "type": "integer",
        "description": "The number of partitions. Valid only when **Strategy** is set to `partition`"
      },
      "spreadLevel": {
        "type": "string",
        "description": "The Spread Level of Placement Group is an enum where it accepts either host or rack when strategy is spread"
      },
      "strategy": {
        "type": "string",
        "description": "The placement strategy."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:ec2:Route": {
    "cfTypeName": "AWS::EC2::Route",
    "properties": {
      "carrierGatewayId": {
        "type": "string",
        "description": "The ID of the carrier gateway.\n You can only use this option when the VPC contains a subnet which is associated with a Wavelength Zone."
      },
      "coreNetworkArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the core network."
      },
      "destinationCidrBlock": {
        "type": "string",
        "description": "The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match. We modify the specified CIDR block to its canonical form; for example, if you specify ``100.68.0.18/18``, we modify it to ``100.68.0.0/18``."
      },
      "destinationIpv6CidrBlock": {
        "type": "string",
        "description": "The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match."
      },
      "destinationPrefixListId": {
        "type": "string",
        "description": "The ID of a prefix list used for the destination match."
      },
      "egressOnlyInternetGatewayId": {
        "type": "string",
        "description": "[IPv6 traffic only] The ID of an egress-only internet gateway."
      },
      "gatewayId": {
        "type": "string",
        "description": "The ID of an internet gateway or virtual private gateway attached to your VPC."
      },
      "instanceId": {
        "type": "string",
        "description": "The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached."
      },
      "localGatewayId": {
        "type": "string",
        "description": "The ID of the local gateway."
      },
      "natGatewayId": {
        "type": "string",
        "description": "[IPv4 traffic only] The ID of a NAT gateway."
      },
      "networkInterfaceId": {
        "type": "string",
        "description": "The ID of a network interface."
      },
      "routeTableId": {
        "type": "string",
        "description": "The ID of the route table for the route."
      },
      "transitGatewayId": {
        "type": "string",
        "description": "The ID of a transit gateway."
      },
      "vpcEndpointId": {
        "type": "string",
        "description": "The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only."
      },
      "vpcPeeringConnectionId": {
        "type": "string",
        "description": "The ID of a VPC peering connection."
      }
    }
  },
  "aws-native:ec2:RouteServer": {
    "cfTypeName": "AWS::EC2::RouteServer",
    "properties": {
      "amazonSideAsn": {
        "type": "integer",
        "description": "The Amazon-side ASN of the Route Server."
      },
      "persistRoutes": {
        "$ref": "#/types/aws-native:ec2:RouteServerPersistRoutes",
        "description": "Whether to enable persistent routes"
      },
      "persistRoutesDuration": {
        "type": "integer",
        "description": "The duration of persistent routes in minutes"
      },
      "snsNotificationsEnabled": {
        "type": "boolean",
        "description": "Whether to enable SNS notifications"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:ec2:RouteServerAssociation": {
    "cfTypeName": "AWS::EC2::RouteServerAssociation",
    "properties": {
      "routeServerId": {
        "type": "string",
        "description": "Route Server ID"
      },
      "vpcId": {
        "type": "string",
        "description": "VPC ID"
      }
    }
  },
  "aws-native:ec2:RouteServerEndpoint": {
    "cfTypeName": "AWS::EC2::RouteServerEndpoint",
    "properties": {
      "routeServerId": {
        "type": "string",
        "description": "Route Server ID"
      },
      "subnetId": {
        "type": "string",
        "description": "Subnet ID"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:ec2:RouteServerPeer": {
    "cfTypeName": "AWS::EC2::RouteServerPeer",
    "properties": {
      "bgpOptions": {
        "$ref": "#/types/aws-native:ec2:RouteServerPeerBgpOptions",
        "description": "The BGP configuration options for this peer, including ASN (Autonomous System Number) and BFD (Bidrectional Forwarding Detection) settings."
      },
      "peerAddress": {
        "type": "string",
        "description": "IP address of the Route Server Peer"
      },
      "routeServerEndpointId": {
        "type": "string",
        "description": "Route Server Endpoint ID"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:ec2:RouteServerPropagation": {
    "cfTypeName": "AWS::EC2::RouteServerPropagation",
    "properties": {
      "routeServerId": {
        "type": "string",
        "description": "Route Server ID"
      },
      "routeTableId": {
        "type": "string",
        "description": "Route Table ID"
      }
    }
  },
  "aws-native:ec2:RouteTable": {
    "cfTypeName": "AWS::EC2::RouteTable",
    "properties": {
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags assigned to the route table."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:ec2:SecurityGroupEgress": {
    "cfTypeName": "AWS::EC2::SecurityGroupEgress",
    "properties": {
      "cidrIp": {
        "type": "string",
        "description": "The IPv4 address range, in CIDR format.\n You must specify exactly one of the following: ``CidrIp``, ``CidrIpv6``, ``DestinationPrefixListId``, or ``DestinationSecurityGroupId``.\n For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *User Guide*."
      },
      "cidrIpv6": {
        "type": "string",
        "description": "The IPv6 address range, in CIDR format.\n You must specify exactly one of the following: ``CidrIp``, ``CidrIpv6``, ``DestinationPrefixListId``, or ``DestinationSecurityGroupId``.\n For examples of rules that you can add to security groups for specific access scenarios, see [Security group rules for different use cases](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html) in the *User Guide*."
      },
      "description": {
        "type": "string",
        "description": "The description of an egress (outbound) security group rule.\n Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
      },
      "destinationPrefixListId": {
        "type": "string",
        "description": "The prefix list IDs for an AWS service. This is the AWS service to access through a VPC endpoint from instances associated with the security group.\n You must specify exactly one of the following: ``CidrIp``, ``CidrIpv6``, ``DestinationPrefixListId``, or ``DestinationSecurityGroupId``."
      },
      "destinationSecurityGroupId": {
        "type": "string",
        "description": "The ID of the security group.\n You must specify exactly one of the following: ``CidrIp``, ``CidrIpv6``, ``DestinationPrefixListId``, or ``DestinationSecurityGroupId``."
      },
      "fromPort": {
        "type": "integer",
        "description": "If the protocol is TCP or UDP, this is the start of the port range. If the protocol is ICMP or ICMPv6, this is the ICMP type or -1 (all ICMP types)."
      },
      "groupId": {
        "type": "string",
        "description": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID."
      },
      "ipProtocol": {
        "type": "string",
        "description": "The IP protocol name (``tcp``, ``udp``, ``icmp``, ``icmpv6``) or number (see [Protocol Numbers](https://docs.aws.amazon.com/http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)).\n Use ``-1`` to specify all protocols. When authorizing security group rules, specifying ``-1`` or a protocol number other than ``tcp``, ``udp``, ``icmp``, or ``icmpv6`` allows traffic on all ports, regardless of any port range you specify. For ``tcp``, ``udp``, and ``icmp``, you must specify a port range. For ``icmpv6``, the port range is optional; if you omit the port range, traffic for all types and codes is allowed."
      },
      "toPort": {
        "type": "integer",
        "description": "If the protocol is TCP or UDP, this is the end of the port range. If the protocol is ICMP or ICMPv6, this is the ICMP code or -1 (all ICMP codes). If the start port is -1 (all ICMP types), then the end port must be -1 (all ICMP codes)."
      }
    }
  },
  "aws-native:ec2:SecurityGroupIngress": {
    "cfTypeName": "AWS::EC2::SecurityGroupIngress",
    "properties": {
      "cidrIp": {
        "type": "string",
        "description": "The IPv4 ranges"
      },
      "cidrIpv6": {
        "type": "string",
        "description": "[VPC only] The IPv6 ranges"
      },
      "description": {
        "type": "string",
        "description": "Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously"
      },
      "fromPort": {
        "type": "integer",
        "description": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUse this for ICMP and any protocol that uses ports."
      },
      "groupId": {
        "type": "string",
        "description": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.\n\nYou must specify the GroupName property or the GroupId property. For security groups that are in a VPC, you must use the GroupId property."
      },
      "groupName": {
        "type": "string",
        "description": "The name of the security group."
      },
      "ipProtocol": {
        "type": "string",
        "description": "The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers).\n\n[VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp, udp, icmp, or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp, udp, and icmp, you must specify a port range. For icmpv6, the port range is optional; if you omit the port range, traffic for all types and codes is allowed."
      },
      "sourcePrefixListId": {
        "type": "string",
        "description": "[EC2-VPC only] The ID of a prefix list.\n\n"
      },
      "sourceSecurityGroupId": {
        "type": "string",
        "description": "The ID of the security group. You must specify either the security group ID or the security group name. For security groups in a nondefault VPC, you must specify the security group ID."
      },
      "sourceSecurityGroupName": {
        "type": "string",
        "description": "[EC2-Classic, default VPC] The name of the source security group.\n\nYou must specify the GroupName property or the GroupId property. For security groups that are in a VPC, you must use the GroupId property."
      },
      "sourceSecurityGroupOwnerId": {
        "type": "string",
        "description": "[nondefault VPC] The AWS account ID that owns the source security group. You can't specify this property with an IP address range.\n\nIf you specify SourceSecurityGroupName or SourceSecurityGroupId and that security group is owned by a different account than the account creating the stack, you must specify the SourceSecurityGroupOwnerId; otherwise, this property is optional."
      },
      "toPort": {
        "type": "integer",
        "description": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes for the specified ICMP type. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUse this for ICMP and any protocol that uses ports."
      }
    }
  },
  "aws-native:ec2:SecurityGroupVpcAssociation": {
    "cfTypeName": "AWS::EC2::SecurityGroupVpcAssociation",
    "properties": {
      "groupId": {
        "type": "string",
        "description": "The group ID of the specified security group."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC in the security group vpc association."
      }
    }
  },
  "aws-native:ec2:SnapshotBlockPublicAccess": {
    "cfTypeName": "AWS::EC2::SnapshotBlockPublicAccess",
    "properties": {
      "state": {
        "$ref": "#/types/aws-native:ec2:SnapshotBlockPublicAccessState",
        "description": "The state of EBS Snapshot Block Public Access."
      }
    }
  },
  "aws-native:ec2:SpotFleet": {
    "cfTypeName": "AWS::EC2::SpotFleet",
    "properties": {
      "spotFleetRequestConfigData": {
        "$ref": "#/types/aws-native:ec2:SpotFleetRequestConfigData",
        "description": "Describes the configuration of a Spot Fleet request."
      }
    }
  },
  "aws-native:ec2:Subnet": {
    "cfTypeName": "AWS::EC2::Subnet",
    "properties": {
      "assignIpv6AddressOnCreation": {
        "type": "boolean",
        "description": "Indicates whether a network interface created in this subnet receives an IPv6 address. The default value is ``false``.\n If you specify ``AssignIpv6AddressOnCreation``, you must also specify an IPv6 CIDR block."
      },
      "availabilityZone": {
        "type": "string",
        "description": "The Availability Zone of the subnet.\n If you update this property, you must also update the ``CidrBlock`` property."
      },
      "availabilityZoneId": {
        "type": "string",
        "description": "The AZ ID of the subnet."
      },
      "cidrBlock": {
        "type": "string",
        "description": "The IPv4 CIDR block assigned to the subnet.\n If you update this property, we create a new subnet, and then delete the existing one."
      },
      "enableDns64": {
        "type": "boolean",
        "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations.\n  You must first configure a NAT gateway in a public subnet (separate from the subnet containing the IPv6-only workloads). For example, the subnet containing the NAT gateway should have a ``0.0.0.0/0`` route pointing to the internet gateway. For more information, see [Configure DNS64 and NAT64](https://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-nat64-dns64.html#nat-gateway-nat64-dns64-walkthrough) in the *User Guide*."
      },
      "enableLniAtDeviceIndex": {
        "type": "integer",
        "description": "Indicates the device position for local network interfaces in this subnet. For example, ``1`` indicates local network interfaces in this subnet are the secondary network interface (eth1)."
      },
      "ipv4IpamPoolId": {
        "type": "string",
        "description": "An IPv4 IPAM pool ID for the subnet."
      },
      "ipv4NetmaskLength": {
        "type": "integer",
        "description": "An IPv4 netmask length for the subnet."
      },
      "ipv6CidrBlock": {
        "type": "string",
        "description": "The IPv6 CIDR block.\n If you specify ``AssignIpv6AddressOnCreation``, you must also specify an IPv6 CIDR block."
      },
      "ipv6IpamPoolId": {
        "type": "string",
        "description": "An IPv6 IPAM pool ID for the subnet."
      },
      "ipv6Native": {
        "type": "boolean",
        "description": "Indicates whether this is an IPv6 only subnet. For more information, see [Subnet basics](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#subnet-basics) in the *User Guide*."
      },
      "ipv6NetmaskLength": {
        "type": "integer",
        "description": "An IPv6 netmask length for the subnet."
      },
      "mapPublicIpOnLaunch": {
        "type": "boolean",
        "description": "Indicates whether instances launched in this subnet receive a public IPv4 address. The default value is ``false``.\n  AWS charges for all public IPv4 addresses, including public IPv4 addresses associated with running instances and Elastic IP addresses. For more information, see the *Public IPv4 Address* tab on the [VPC pricing page](https://docs.aws.amazon.com/vpc/pricing/)."
      },
      "outpostArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the Outpost."
      },
      "privateDnsNameOptionsOnLaunch": {
        "$ref": "#/types/aws-native:ec2:PrivateDnsNameOptionsOnLaunchProperties",
        "description": "The hostname type for EC2 instances launched into this subnet and how DNS A and AAAA record queries to the instances should be handled. For more information, see [Amazon EC2 instance hostname types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) in the *User Guide*.\n Available options:\n  +  EnableResourceNameDnsAAAARecord (true | false)\n  +  EnableResourceNameDnsARecord (true | false)\n  +  HostnameType (ip-name | resource-name)"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags assigned to the subnet."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC the subnet is in.\n If you update this property, you must also update the ``CidrBlock`` property."
      }
    }
  },
  "aws-native:ec2:SubnetCidrBlock": {
    "cfTypeName": "AWS::EC2::SubnetCidrBlock",
    "properties": {
      "ipv6CidrBlock": {
        "type": "string",
        "description": "The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length"
      },
      "ipv6IpamPoolId": {
        "type": "string",
        "description": "The ID of an IPv6 Amazon VPC IP Address Manager (IPAM) pool from which to allocate, to get the subnet's CIDR"
      },
      "ipv6NetmaskLength": {
        "type": "integer",
        "description": "The netmask length of the IPv6 CIDR to allocate to the subnet from an IPAM pool"
      },
      "subnetId": {
        "type": "string",
        "description": "The ID of the subnet"
      }
    }
  },
  "aws-native:ec2:SubnetNetworkAclAssociation": {
    "cfTypeName": "AWS::EC2::SubnetNetworkAclAssociation",
    "properties": {
      "networkAclId": {
        "type": "string",
        "description": "The ID of the network ACL"
      },
      "subnetId": {
        "type": "string",
        "description": "The ID of the subnet"
      }
    }
  },
  "aws-native:ec2:SubnetRouteTableAssociation": {
    "cfTypeName": "AWS::EC2::SubnetRouteTableAssociation",
    "properties": {
      "routeTableId": {
        "type": "string",
        "description": "The ID of the route table.\n The physical ID changes when the route table ID is changed."
      },
      "subnetId": {
        "type": "string",
        "description": "The ID of the subnet."
      }
    }
  },
  "aws-native:ec2:TransitGateway": {
    "cfTypeName": "AWS::EC2::TransitGateway",
    "properties": {
      "amazonSideAsn": {
        "type": "integer",
        "description": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs. The default is 64512."
      },
      "associationDefaultRouteTableId": {
        "type": "string",
        "description": "The ID of the default association route table."
      },
      "autoAcceptSharedAttachments": {
        "type": "string",
        "description": "Enable or disable automatic acceptance of attachment requests. Disabled by default."
      },
      "defaultRouteTableAssociation": {
        "type": "string",
        "description": "Enable or disable automatic association with the default association route table. Enabled by default."
      },
      "defaultRouteTablePropagation": {
        "type": "string",
        "description": "Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default."
      },
      "description": {
        "type": "string",
        "description": "The description of the transit gateway."
      },
      "dnsSupport": {
        "type": "string",
        "description": "Enable or disable DNS support. Enabled by default."
      },
      "multicastSupport": {
        "type": "string",
        "description": "Indicates whether multicast is enabled on the transit gateway"
      },
      "propagationDefaultRouteTableId": {
        "type": "string",
        "description": "The ID of the default propagation route table."
      },
      "securityGroupReferencingSupport": {
        "type": "string",
        "description": "Enables you to reference a security group across VPCs attached to a transit gateway (TGW). Use this option to simplify security group management and control of instance-to-instance traffic across VPCs that are connected by transit gateway. You can also use this option to migrate from VPC peering (which was the only option that supported security group referencing) to transit gateways (which now also support security group referencing). This option is disabled by default and there are no additional costs to use this feature.\n\nFor important information about this feature, see [Create a transit gateway](https://docs.aws.amazon.com/vpc/latest/tgw/tgw-transit-gateways.html#create-tgw) in the *AWS Transit Gateway Guide* ."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the transit gateway."
      },
      "transitGatewayCidrBlocks": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The transit gateway CIDR blocks."
      },
      "vpnEcmpSupport": {
        "type": "string",
        "description": "Enable or disable Equal Cost Multipath Protocol support. Enabled by default."
      }
    }
  },
  "aws-native:ec2:TransitGatewayAttachment": {
    "cfTypeName": "AWS::EC2::TransitGatewayAttachment",
    "properties": {
      "options": {
        "$ref": "#/types/aws-native:ec2:OptionsProperties",
        "description": "The options for the transit gateway vpc attachment."
      },
      "subnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the attachment."
      },
      "transitGatewayId": {
        "type": "string",
        "description": "The ID of the transit gateway."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:ec2:TransitGatewayConnect": {
    "cfTypeName": "AWS::EC2::TransitGatewayConnect",
    "properties": {
      "options": {
        "$ref": "#/types/aws-native:ec2:TransitGatewayConnectOptions",
        "description": "The Connect attachment options."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the attachment."
      },
      "transportTransitGatewayAttachmentId": {
        "type": "string",
        "description": "The ID of the attachment from which the Connect attachment was created."
      }
    }
  },
  "aws-native:ec2:TransitGatewayMulticastDomain": {
    "cfTypeName": "AWS::EC2::TransitGatewayMulticastDomain",
    "properties": {
      "options": {
        "$ref": "#/types/aws-native:ec2:OptionsProperties",
        "description": "The options for the transit gateway multicast domain."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the transit gateway multicast domain."
      },
      "transitGatewayId": {
        "type": "string",
        "description": "The ID of the transit gateway."
      }
    }
  },
  "aws-native:ec2:TransitGatewayMulticastDomainAssociation": {
    "cfTypeName": "AWS::EC2::TransitGatewayMulticastDomainAssociation",
    "properties": {
      "subnetId": {
        "type": "string",
        "description": "The IDs of the subnets to associate with the transit gateway multicast domain."
      },
      "transitGatewayAttachmentId": {
        "type": "string",
        "description": "The ID of the transit gateway attachment."
      },
      "transitGatewayMulticastDomainId": {
        "type": "string",
        "description": "The ID of the transit gateway multicast domain."
      }
    }
  },
  "aws-native:ec2:TransitGatewayMulticastGroupMember": {
    "cfTypeName": "AWS::EC2::TransitGatewayMulticastGroupMember",
    "properties": {
      "groupIpAddress": {
        "type": "string",
        "description": "The IP address assigned to the transit gateway multicast group."
      },
      "networkInterfaceId": {
        "type": "string",
        "description": "The ID of the transit gateway attachment."
      },
      "transitGatewayMulticastDomainId": {
        "type": "string",
        "description": "The ID of the transit gateway multicast domain."
      }
    }
  },
  "aws-native:ec2:TransitGatewayMulticastGroupSource": {
    "cfTypeName": "AWS::EC2::TransitGatewayMulticastGroupSource",
    "properties": {
      "groupIpAddress": {
        "type": "string",
        "description": "The IP address assigned to the transit gateway multicast group."
      },
      "networkInterfaceId": {
        "type": "string",
        "description": "The ID of the transit gateway attachment."
      },
      "transitGatewayMulticastDomainId": {
        "type": "string",
        "description": "The ID of the transit gateway multicast domain."
      }
    }
  },
  "aws-native:ec2:TransitGatewayPeeringAttachment": {
    "cfTypeName": "AWS::EC2::TransitGatewayPeeringAttachment",
    "properties": {
      "peerAccountId": {
        "type": "string",
        "description": "The ID of the peer account"
      },
      "peerRegion": {
        "type": "string",
        "description": "Peer Region"
      },
      "peerTransitGatewayId": {
        "type": "string",
        "description": "The ID of the peer transit gateway."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the transit gateway peering attachment."
      },
      "transitGatewayId": {
        "type": "string",
        "description": "The ID of the transit gateway."
      }
    }
  },
  "aws-native:ec2:TransitGatewayRoute": {
    "cfTypeName": "AWS::EC2::TransitGatewayRoute",
    "properties": {
      "blackhole": {
        "type": "boolean",
        "description": "Indicates whether to drop traffic that matches this route."
      },
      "destinationCidrBlock": {
        "type": "string",
        "description": "The CIDR range used for destination matches. Routing decisions are based on the most specific match."
      },
      "transitGatewayAttachmentId": {
        "type": "string",
        "description": "The ID of transit gateway attachment."
      },
      "transitGatewayRouteTableId": {
        "type": "string",
        "description": "The ID of transit gateway route table."
      }
    }
  },
  "aws-native:ec2:TransitGatewayRouteTable": {
    "cfTypeName": "AWS::EC2::TransitGatewayRouteTable",
    "properties": {
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags are composed of a Key/Value pair. You can use tags to categorize and track each parameter group. The tag value null is permitted."
      },
      "transitGatewayId": {
        "type": "string",
        "description": "The ID of the transit gateway."
      }
    }
  },
  "aws-native:ec2:TransitGatewayRouteTableAssociation": {
    "cfTypeName": "AWS::EC2::TransitGatewayRouteTableAssociation",
    "properties": {
      "transitGatewayAttachmentId": {
        "type": "string",
        "description": "The ID of transit gateway attachment."
      },
      "transitGatewayRouteTableId": {
        "type": "string",
        "description": "The ID of transit gateway route table."
      }
    }
  },
  "aws-native:ec2:TransitGatewayRouteTablePropagation": {
    "cfTypeName": "AWS::EC2::TransitGatewayRouteTablePropagation",
    "properties": {
      "transitGatewayAttachmentId": {
        "type": "string",
        "description": "The ID of transit gateway attachment."
      },
      "transitGatewayRouteTableId": {
        "type": "string",
        "description": "The ID of transit gateway route table."
      }
    }
  },
  "aws-native:ec2:TransitGatewayVpcAttachment": {
    "cfTypeName": "AWS::EC2::TransitGatewayVpcAttachment",
    "properties": {
      "addSubnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone."
      },
      "options": {
        "$ref": "#/types/aws-native:ec2:OptionsProperties",
        "description": "The options for the transit gateway vpc attachment."
      },
      "removeSubnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of one or more subnets to remove."
      },
      "subnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of the subnets."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the VPC attachment."
      },
      "transitGatewayId": {
        "type": "string",
        "description": "The ID of the transit gateway."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:ec2:VerifiedAccessEndpoint": {
    "cfTypeName": "AWS::EC2::VerifiedAccessEndpoint",
    "properties": {
      "applicationDomain": {
        "type": "string",
        "description": "The DNS name for users to reach your application."
      },
      "attachmentType": {
        "type": "string",
        "description": "The type of attachment used to provide connectivity between the AWS Verified Access endpoint and the application."
      },
      "cidrOptions": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessEndpointCidrOptions",
        "description": "The options for cidr type endpoint."
      },
      "description": {
        "type": "string",
        "description": "A description for the AWS Verified Access endpoint."
      },
      "domainCertificateArn": {
        "type": "string",
        "description": "The ARN of a public TLS/SSL certificate imported into or created with ACM."
      },
      "endpointDomainPrefix": {
        "type": "string",
        "description": "A custom identifier that gets prepended to a DNS name that is generated for the endpoint."
      },
      "endpointType": {
        "type": "string",
        "description": "The type of AWS Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified.The type of AWS Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified."
      },
      "loadBalancerOptions": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessEndpointLoadBalancerOptions",
        "description": "The load balancer details if creating the AWS Verified Access endpoint as load-balancer type."
      },
      "networkInterfaceOptions": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessEndpointNetworkInterfaceOptions",
        "description": "The options for network-interface type endpoint."
      },
      "policyDocument": {
        "type": "string",
        "description": "The AWS Verified Access policy document."
      },
      "policyEnabled": {
        "type": "boolean",
        "description": "The status of the Verified Access policy."
      },
      "rdsOptions": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessEndpointRdsOptions",
        "description": "The options for rds type endpoint."
      },
      "securityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of the security groups for the endpoint."
      },
      "sseSpecification": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessEndpointSseSpecification",
        "description": "The configuration options for customer provided KMS encryption."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "verifiedAccessGroupId": {
        "type": "string",
        "description": "The ID of the AWS Verified Access group."
      }
    }
  },
  "aws-native:ec2:VerifiedAccessGroup": {
    "cfTypeName": "AWS::EC2::VerifiedAccessGroup",
    "properties": {
      "description": {
        "type": "string",
        "description": "A description for the AWS Verified Access group."
      },
      "policyDocument": {
        "type": "string",
        "description": "The AWS Verified Access policy document."
      },
      "policyEnabled": {
        "type": "boolean",
        "description": "The status of the Verified Access policy."
      },
      "sseSpecification": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessGroupSseSpecification",
        "description": "The configuration options for customer provided KMS encryption."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "verifiedAccessInstanceId": {
        "type": "string",
        "description": "The ID of the AWS Verified Access instance."
      }
    }
  },
  "aws-native:ec2:VerifiedAccessInstance": {
    "cfTypeName": "AWS::EC2::VerifiedAccessInstance",
    "properties": {
      "cidrEndpointsCustomSubDomain": {
        "type": "string",
        "description": "Introduce CidrEndpointsCustomSubDomain property to represent the domain (say, ava.my-company.com)"
      },
      "description": {
        "type": "string",
        "description": "A description for the AWS Verified Access instance."
      },
      "fipsEnabled": {
        "type": "boolean",
        "description": "Indicates whether FIPS is enabled"
      },
      "loggingConfigurations": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessInstanceVerifiedAccessLogs",
        "description": "The configuration options for AWS Verified Access instances."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "verifiedAccessTrustProviderIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of the AWS Verified Access trust providers."
      },
      "verifiedAccessTrustProviders": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:VerifiedAccessInstanceVerifiedAccessTrustProvider"
        },
        "description": "AWS Verified Access trust providers."
      }
    }
  },
  "aws-native:ec2:VerifiedAccessTrustProvider": {
    "cfTypeName": "AWS::EC2::VerifiedAccessTrustProvider",
    "properties": {
      "description": {
        "type": "string",
        "description": "A description for the Amazon Web Services Verified Access trust provider."
      },
      "deviceOptions": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessTrustProviderDeviceOptions",
        "description": "The options for device-identity trust provider."
      },
      "deviceTrustProviderType": {
        "type": "string",
        "description": "The type of device-based trust provider. Possible values: jamf|crowdstrike"
      },
      "nativeApplicationOidcOptions": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessTrustProviderNativeApplicationOidcOptions",
        "description": "The OpenID Connect (OIDC) options."
      },
      "oidcOptions": {
        "$ref": "#/types/aws-native:ec2:VerifiedAccessTrustProviderOidcOptions",
        "description": "The options for an OpenID Connect-compatible user-identity trust provider."
      },
      "policyReferenceName": {
        "type": "string",
        "description": "The identifier to be used when working with policy rules."
      },
      "sseSpecification": {
        "$ref": "#/types/aws-native:ec2:SseSpecificationProperties",
        "description": "The configuration options for customer provided KMS encryption."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "trustProviderType": {
        "type": "string",
        "description": "Type of trust provider. Possible values: user|device"
      },
      "userTrustProviderType": {
        "type": "string",
        "description": "The type of device-based trust provider. Possible values: oidc|iam-identity-center"
      }
    }
  },
  "aws-native:ec2:Volume": {
    "cfTypeName": "AWS::EC2::Volume",
    "properties": {
      "autoEnableIo": {
        "type": "boolean",
        "description": "Indicates whether the volume is auto-enabled for I/O operations. By default, Amazon EBS disables I/O to the volume from attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O."
      },
      "availabilityZone": {
        "type": "string",
        "description": "The ID of the Availability Zone in which to create the volume. For example, ``us-east-1a``."
      },
      "encrypted": {
        "type": "boolean",
        "description": "Indicates whether the volume should be encrypted. The effect of setting the encryption state to ``true`` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Encryption by default](https://docs.aws.amazon.com/ebs/latest/userguide/work-with-ebs-encr.html#encryption-by-default) in the *Amazon EBS User Guide*.\n Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption-requirements.html#ebs-encryption_supported_instances)."
      },
      "iops": {
        "type": "integer",
        "description": "The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n The following are the supported values for each volume type:\n  +   ``gp3``: 3,000 - 16,000 IOPS\n  +   ``io1``: 100 - 64,000 IOPS\n  +   ``io2``: 100 - 256,000 IOPS\n  \n For ``io2`` volumes, you can achieve up to 256,000 IOPS on [instances built on the Nitro System](https://docs.aws.amazon.com/ec2/latest/instancetypes/ec2-nitro-instances.html). On other instances, you can achieve performance up to 32,000 IOPS.\n This parameter is required for ``io1`` and ``io2`` volumes. The default for ``gp3`` volumes is 3,000 IOPS. This parameter is not supported for ``gp2``, ``st1``, ``sc1``, or ``standard`` volumes."
      },
      "kmsKeyId": {
        "type": "string",
        "description": "The identifier of the kms-key-long to use for Amazon EBS encryption. If ``KmsKeyId`` is specified, the encrypted state must be ``true``.\n If you omit this property and your account is enabled for encryption by default, or *Encrypted* is set to ``true``, then the volume is encrypted using the default key specified for your account. If your account does not have a default key, then the volume is encrypted using the aws-managed-key.\n Alternatively, if you want to specify a different key, you can specify one of the following:\n  +  Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.\n  +  Key alias. Specify the alias for the key, prefixed with ``alias/``. For example, for a key with the alias ``my_cmk``, use ``alias/my_cmk``. Or to specify the aws-managed-key, use ``alias/aws/ebs``.\n  +  Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.\n  +  Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias."
      },
      "multiAttachEnabled": {
        "type": "boolean",
        "description": "Indicates whether Amazon EBS Multi-Attach is enabled.\n  CFNlong does not currently support updating a single-attach volume to be multi-attach enabled, updating a multi-attach enabled volume to be single-attach, or updating the size or number of I/O operations per second (IOPS) of a multi-attach enabled volume."
      },
      "outpostArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the Outpost."
      },
      "size": {
        "type": "integer",
        "description": "The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\n The following are the supported volumes sizes for each volume type:\n  +   ``gp2`` and ``gp3``: 1 - 16,384 GiB\n  +   ``io1``: 4 - 16,384 GiB\n  +   ``io2``: 4 - 65,536 GiB\n  +   ``st1`` and ``sc1``: 125 - 16,384 GiB\n  +   ``standard``: 1 - 1024 GiB"
      },
      "snapshotId": {
        "type": "string",
        "description": "The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to apply to the volume during creation."
      },
      "throughput": {
        "type": "integer",
        "description": "The throughput to provision for a volume, with a maximum of 1,000 MiB/s.\n This parameter is valid only for ``gp3`` volumes. The default value is 125.\n Valid Range: Minimum value of 125. Maximum value of 1000."
      },
      "volumeType": {
        "type": "string",
        "description": "The volume type. This parameter can be one of the following values:\n  +  General Purpose SSD: ``gp2`` | ``gp3`` \n  +  Provisioned IOPS SSD: ``io1`` | ``io2`` \n  +  Throughput Optimized HDD: ``st1`` \n  +  Cold HDD: ``sc1`` \n  +  Magnetic: ``standard`` \n  \n For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/ebs/latest/userguide/ebs-volume-types.html).\n Default: ``gp2``"
      }
    }
  },
  "aws-native:ec2:VolumeAttachment": {
    "cfTypeName": "AWS::EC2::VolumeAttachment",
    "properties": {
      "device": {
        "type": "string",
        "description": "The device name (for example, ``/dev/sdh`` or ``xvdh``)."
      },
      "instanceId": {
        "type": "string",
        "description": "The ID of the instance to which the volume attaches. This value can be a reference to an [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) resource, or it can be the physical ID of an existing EC2 instance."
      },
      "volumeId": {
        "type": "string",
        "description": "The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone. This value can be a reference to an [AWS::EC2::Volume](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html) resource, or it can be the volume ID of an existing Amazon EBS volume."
      }
    }
  },
  "aws-native:ec2:Vpc": {
    "cfTypeName": "AWS::EC2::VPC",
    "properties": {
      "cidrBlock": {
        "type": "string",
        "description": "The IPv4 network range for the VPC, in CIDR notation. For example, ``10.0.0.0/16``. We modify the specified CIDR block to its canonical form; for example, if you specify ``100.68.0.18/18``, we modify it to ``100.68.0.0/18``.\n You must specify either``CidrBlock`` or ``Ipv4IpamPoolId``."
      },
      "enableDnsHostnames": {
        "type": "boolean",
        "description": "Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).\n You can only enable DNS hostnames if you've enabled DNS support."
      },
      "enableDnsSupport": {
        "type": "boolean",
        "description": "Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support)."
      },
      "instanceTenancy": {
        "type": "string",
        "description": "The allowed tenancy of instances launched into the VPC.\n  +   ``default``: An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.\n  +   ``dedicated``: An instance launched into the VPC runs on dedicated hardware by default, unless you explicitly specify a tenancy of ``host`` during instance launch. You cannot specify a tenancy of ``default`` during instance launch.\n  \n Updating ``InstanceTenancy`` requires no replacement only if you are updating its value from ``dedicated`` to ``default``. Updating ``InstanceTenancy`` from ``default`` to ``dedicated`` requires replacement."
      },
      "ipv4IpamPoolId": {
        "type": "string",
        "description": "The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide*.\n You must specify either``CidrBlock`` or ``Ipv4IpamPoolId``."
      },
      "ipv4NetmaskLength": {
        "type": "integer",
        "description": "The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide*."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the VPC."
      }
    }
  },
  "aws-native:ec2:VpcBlockPublicAccessExclusion": {
    "cfTypeName": "AWS::EC2::VPCBlockPublicAccessExclusion",
    "properties": {
      "internetGatewayExclusionMode": {
        "$ref": "#/types/aws-native:ec2:VpcBlockPublicAccessExclusionInternetGatewayExclusionMode",
        "description": "The desired Block Public Access Exclusion Mode for a specific VPC/Subnet."
      },
      "subnetId": {
        "type": "string",
        "description": "The ID of the subnet. Required only if you don't specify VpcId"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the vpc. Required only if you don't specify SubnetId."
      }
    }
  },
  "aws-native:ec2:VpcBlockPublicAccessOptions": {
    "cfTypeName": "AWS::EC2::VPCBlockPublicAccessOptions",
    "properties": {
      "internetGatewayBlockMode": {
        "$ref": "#/types/aws-native:ec2:VpcBlockPublicAccessOptionsInternetGatewayBlockMode",
        "description": "The desired Block Public Access mode for Internet Gateways in your account. We do not allow to create in a off mode as this is the default value"
      }
    }
  },
  "aws-native:ec2:VpcCidrBlock": {
    "cfTypeName": "AWS::EC2::VPCCidrBlock",
    "properties": {
      "amazonProvidedIpv6CidrBlock": {
        "type": "boolean",
        "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block."
      },
      "cidrBlock": {
        "type": "string",
        "description": "An IPv4 CIDR block to associate with the VPC."
      },
      "ipv4IpamPoolId": {
        "type": "string",
        "description": "The ID of the IPv4 IPAM pool to Associate a CIDR from to a VPC."
      },
      "ipv4NetmaskLength": {
        "type": "integer",
        "description": "The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool."
      },
      "ipv6CidrBlock": {
        "type": "string",
        "description": "An IPv6 CIDR block from the IPv6 address pool."
      },
      "ipv6CidrBlockNetworkBorderGroup": {
        "type": "string",
        "description": "The name of the location from which we advertise the IPV6 CIDR block."
      },
      "ipv6IpamPoolId": {
        "type": "string",
        "description": "The ID of the IPv6 IPAM pool to Associate a CIDR from to a VPC."
      },
      "ipv6NetmaskLength": {
        "type": "integer",
        "description": "The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool."
      },
      "ipv6Pool": {
        "type": "string",
        "description": "The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:ec2:VpcEndpoint": {
    "cfTypeName": "AWS::EC2::VPCEndpoint",
    "properties": {
      "dnsOptions": {
        "$ref": "#/types/aws-native:ec2:VpcEndpointDnsOptionsSpecification",
        "description": "Describes the DNS options for an endpoint."
      },
      "ipAddressType": {
        "$ref": "#/types/aws-native:ec2:VpcEndpointIpAddressType",
        "description": "The supported IP address types."
      },
      "policyDocument": {
        "$ref": "pulumi.json#/Any",
        "description": "An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints.\n For CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. For example, if you have a JSON policy, you can convert it to YAML before including it in the YAML template, and CFNlong converts the policy to JSON format before calling the API actions for privatelink. Alternatively, you can include the JSON directly in the YAML, as shown in the following ``Properties`` section:\n ``Properties: VpcEndpointType: 'Interface' ServiceName: !Sub 'com.amazonaws.${AWS::Region}.logs' PolicyDocument: '{ \"Version\":\"2012-10-17\", \"Statement\": [{ \"Effect\":\"Allow\", \"Principal\":\"*\", \"Action\":[\"logs:Describe*\",\"logs:Get*\",\"logs:List*\",\"logs:FilterLogEvents\"], \"Resource\":\"*\" }] }'``\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::EC2::VPCEndpoint` for more information about the expected schema for this property."
      },
      "privateDnsEnabled": {
        "type": "boolean",
        "description": "Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.\n To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames`` and ``enableDnsSupport``.\n This property is supported only for interface endpoints.\n Default: ``false``"
      },
      "resourceConfigurationArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the resource configuration."
      },
      "routeTableIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of the route tables. Routing is supported only for gateway endpoints."
      },
      "securityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified, we use the default security group for the VPC. Security groups are supported only for interface endpoints."
      },
      "serviceName": {
        "type": "string",
        "description": "The name of the endpoint service."
      },
      "serviceNetworkArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the service network."
      },
      "serviceRegion": {
        "type": "string",
        "description": "Describes a Region."
      },
      "subnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to associate with the endpoint."
      },
      "vpcEndpointType": {
        "$ref": "#/types/aws-native:ec2:VpcEndpointType",
        "description": "The type of endpoint.\n Default: Gateway"
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:ec2:VpcEndpointConnectionNotification": {
    "cfTypeName": "AWS::EC2::VPCEndpointConnectionNotification",
    "properties": {
      "connectionEvents": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The endpoint events for which to receive notifications."
      },
      "connectionNotificationArn": {
        "type": "string",
        "description": "The ARN of the SNS topic for the notifications."
      },
      "serviceId": {
        "type": "string",
        "description": "The ID of the endpoint service."
      },
      "vpcEndpointId": {
        "type": "string",
        "description": "The ID of the endpoint."
      }
    }
  },
  "aws-native:ec2:VpcEndpointService": {
    "cfTypeName": "AWS::EC2::VPCEndpointService",
    "properties": {
      "acceptanceRequired": {
        "type": "boolean",
        "description": "Indicates whether requests from service consumers to create an endpoint to your service must be accepted."
      },
      "contributorInsightsEnabled": {
        "type": "boolean",
        "description": "Indicates whether to enable the built-in Contributor Insights rules provided by AWS PrivateLink ."
      },
      "gatewayLoadBalancerArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Names (ARNs) of the Gateway Load Balancers."
      },
      "networkLoadBalancerArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Names (ARNs) of the Network Load Balancers."
      },
      "payerResponsibility": {
        "type": "string",
        "description": "The entity that is responsible for the endpoint costs. The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner."
      },
      "supportedIpAddressTypes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:VpcEndpointServiceIpAddressType"
        },
        "description": "Specify which Ip Address types are supported for VPC endpoint service."
      },
      "supportedRegions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Regions from which service consumers can access the service."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the VPC endpoint service."
      }
    }
  },
  "aws-native:ec2:VpcEndpointServicePermissions": {
    "cfTypeName": "AWS::EC2::VPCEndpointServicePermissions",
    "properties": {
      "allowedPrincipals": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Names (ARN) of one or more principals (for example, users, IAM roles, and AWS accounts ). Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked."
      },
      "serviceId": {
        "type": "string",
        "description": "The ID of the service."
      }
    }
  },
  "aws-native:ec2:VpcGatewayAttachment": {
    "cfTypeName": "AWS::EC2::VPCGatewayAttachment",
    "properties": {
      "internetGatewayId": {
        "type": "string",
        "description": "The ID of the internet gateway. You must specify either InternetGatewayId or VpnGatewayId, but not both."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      },
      "vpnGatewayId": {
        "type": "string",
        "description": "The ID of the virtual private gateway. You must specify either InternetGatewayId or VpnGatewayId, but not both."
      }
    }
  },
  "aws-native:ec2:VpcPeeringConnection": {
    "cfTypeName": "AWS::EC2::VPCPeeringConnection",
    "properties": {
      "peerOwnerId": {
        "type": "string",
        "description": "The AWS account ID of the owner of the accepter VPC."
      },
      "peerRegion": {
        "type": "string",
        "description": "The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request."
      },
      "peerRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account."
      },
      "peerVpcId": {
        "type": "string",
        "description": "The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags assigned to the resource."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:ec2:VpcdhcpOptionsAssociation": {
    "cfTypeName": "AWS::EC2::VPCDHCPOptionsAssociation",
    "properties": {
      "dhcpOptionsId": {
        "type": "string",
        "description": "The ID of the DHCP options set, or default to associate no DHCP options with the VPC."
      },
      "vpcId": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:ec2:VpnConnection": {
    "cfTypeName": "AWS::EC2::VPNConnection",
    "properties": {
      "customerGatewayId": {
        "type": "string",
        "description": "The ID of the customer gateway at your end of the VPN connection."
      },
      "enableAcceleration": {
        "type": "boolean",
        "description": "Indicate whether to enable acceleration for the VPN connection.\n Default: ``false``"
      },
      "localIpv4NetworkCidr": {
        "type": "string",
        "description": "The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.\n Default: ``0.0.0.0/0``"
      },
      "localIpv6NetworkCidr": {
        "type": "string",
        "description": "The IPv6 CIDR on the customer gateway (on-premises) side of the VPN connection.\n Default: ``::/0``"
      },
      "outsideIpAddressType": {
        "type": "string",
        "description": "The type of IPv4 address assigned to the outside interface of the customer gateway device.\n Valid values: ``PrivateIpv4`` | ``PublicIpv4`` \n Default: ``PublicIpv4``"
      },
      "remoteIpv4NetworkCidr": {
        "type": "string",
        "description": "The IPv4 CIDR on the AWS side of the VPN connection.\n Default: ``0.0.0.0/0``"
      },
      "remoteIpv6NetworkCidr": {
        "type": "string",
        "description": "The IPv6 CIDR on the AWS side of the VPN connection.\n Default: ``::/0``"
      },
      "staticRoutesOnly": {
        "type": "boolean",
        "description": "Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\n If you are creating a VPN connection for a device that does not support Border Gateway Protocol (BGP), you must specify ``true``."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags assigned to the VPN connection."
      },
      "transitGatewayId": {
        "type": "string",
        "description": "The ID of the transit gateway associated with the VPN connection.\n You must specify either ``TransitGatewayId`` or ``VpnGatewayId``, but not both."
      },
      "transportTransitGatewayAttachmentId": {
        "type": "string",
        "description": "The transit gateway attachment ID to use for the VPN tunnel.\n Required if ``OutsideIpAddressType`` is set to ``PrivateIpv4``."
      },
      "tunnelInsideIpVersion": {
        "type": "string",
        "description": "Indicate whether the VPN tunnels process IPv4 or IPv6 traffic.\n Default: ``ipv4``"
      },
      "type": {
        "type": "string",
        "description": "The type of VPN connection."
      },
      "vpnGatewayId": {
        "type": "string",
        "description": "The ID of the virtual private gateway at the AWS side of the VPN connection.\n You must specify either ``TransitGatewayId`` or ``VpnGatewayId``, but not both."
      },
      "vpnTunnelOptionsSpecifications": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ec2:VpnConnectionVpnTunnelOptionsSpecification"
        },
        "description": "The tunnel options for the VPN connection."
      }
    }
  },
  "aws-native:ec2:VpnConnectionRoute": {
    "cfTypeName": "AWS::EC2::VPNConnectionRoute",
    "properties": {
      "destinationCidrBlock": {
        "type": "string",
        "description": "The CIDR block associated with the local subnet of the customer network."
      },
      "vpnConnectionId": {
        "type": "string",
        "description": "The ID of the VPN connection."
      }
    }
  },
  "aws-native:ec2:VpnGateway": {
    "cfTypeName": "AWS::EC2::VPNGateway",
    "properties": {
      "amazonSideAsn": {
        "type": "integer",
        "description": "The private Autonomous System Number (ASN) for the Amazon side of a BGP session."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Any tags assigned to the virtual private gateway."
      },
      "type": {
        "type": "string",
        "description": "The type of VPN connection the virtual private gateway supports."
      }
    }
  },
  "aws-native:ecr:PullThroughCacheRule": {
    "cfTypeName": "AWS::ECR::PullThroughCacheRule",
    "properties": {
      "credentialArn": {
        "type": "string",
        "description": "The ARN of the Secrets Manager secret associated with the pull through cache rule."
      },
      "customRoleArn": {
        "type": "string",
        "description": "The ARN of the IAM role associated with the pull through cache rule."
      },
      "ecrRepositoryPrefix": {
        "type": "string",
        "description": "The Amazon ECR repository prefix associated with the pull through cache rule."
      },
      "upstreamRegistry": {
        "type": "string",
        "description": "The name of the upstream source registry associated with the pull through cache rule."
      },
      "upstreamRegistryUrl": {
        "type": "string",
        "description": "The upstream registry URL associated with the pull through cache rule."
      },
      "upstreamRepositoryPrefix": {
        "type": "string",
        "description": "The upstream repository prefix associated with the pull through cache rule."
      }
    }
  },
  "aws-native:ecr:RegistryPolicy": {
    "cfTypeName": "AWS::ECR::RegistryPolicy",
    "properties": {
      "policyText": {
        "$ref": "pulumi.json#/Any",
        "description": "The JSON policy text for your registry.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ECR::RegistryPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:ecr:RegistryScanningConfiguration": {
    "cfTypeName": "AWS::ECR::RegistryScanningConfiguration",
    "properties": {
      "rules": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecr:RegistryScanningConfigurationScanningRule"
        }
      },
      "scanType": {
        "$ref": "#/types/aws-native:ecr:RegistryScanningConfigurationScanType"
      }
    }
  },
  "aws-native:ecr:ReplicationConfiguration": {
    "cfTypeName": "AWS::ECR::ReplicationConfiguration",
    "properties": {
      "replicationConfiguration": {
        "$ref": "#/types/aws-native:ecr:ReplicationConfiguration",
        "description": "The replication configuration for a registry.",
        "language": {
          "csharp": {
            "name": "ReplicationConfigurationValue"
          }
        }
      }
    }
  },
  "aws-native:ecr:RepositoryCreationTemplate": {
    "cfTypeName": "AWS::ECR::RepositoryCreationTemplate",
    "properties": {
      "appliedFor": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecr:RepositoryCreationTemplateAppliedForItem"
        },
        "description": "A list of enumerable Strings representing the repository creation scenarios that this template will apply towards. The two supported scenarios are PULL_THROUGH_CACHE and REPLICATION"
      },
      "customRoleArn": {
        "type": "string",
        "description": "The ARN of the role to be assumed by Amazon ECR. Amazon ECR will assume your supplied role when the customRoleArn is specified. When this field isn't specified, Amazon ECR will use the service-linked role for the repository creation template."
      },
      "description": {
        "type": "string",
        "description": "The description associated with the repository creation template."
      },
      "encryptionConfiguration": {
        "$ref": "#/types/aws-native:ecr:RepositoryCreationTemplateEncryptionConfiguration",
        "description": "The encryption configuration associated with the repository creation template."
      },
      "imageTagMutability": {
        "$ref": "#/types/aws-native:ecr:RepositoryCreationTemplateImageTagMutability",
        "description": "The tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten."
      },
      "lifecyclePolicy": {
        "type": "string",
        "description": "The lifecycle policy to use for repositories created using the template."
      },
      "prefix": {
        "type": "string",
        "description": "The repository namespace prefix associated with the repository creation template."
      },
      "repositoryPolicy": {
        "type": "string",
        "description": "he repository policy to apply to repositories created using the template. A repository policy is a permissions policy associated with a repository to control access permissions."
      },
      "resourceTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecr:RepositoryCreationTemplateTag"
        },
        "description": "The metadata to apply to the repository to help you categorize and organize. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters."
      }
    }
  },
  "aws-native:ecs:ClusterCapacityProviderAssociations": {
    "cfTypeName": "AWS::ECS::ClusterCapacityProviderAssociations",
    "properties": {
      "capacityProviders": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/types/aws-native:ecs:ClusterCapacityProviderAssociationsCapacityProvider"
            },
            {
              "type": "string"
            }
          ]
        },
        "description": "The capacity providers to associate with the cluster."
      },
      "cluster": {
        "type": "string",
        "description": "The cluster the capacity provider association is the target of."
      },
      "defaultCapacityProviderStrategy": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecs:ClusterCapacityProviderAssociationsCapacityProviderStrategy"
        },
        "description": "The default capacity provider strategy to associate with the cluster."
      }
    }
  },
  "aws-native:ecs:PrimaryTaskSet": {
    "cfTypeName": "AWS::ECS::PrimaryTaskSet",
    "properties": {
      "cluster": {
        "type": "string",
        "description": "The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in."
      },
      "service": {
        "type": "string",
        "description": "The short name or full Amazon Resource Name (ARN) of the service to create the task set in."
      },
      "taskSetId": {
        "type": "string",
        "description": "The ID or full Amazon Resource Name (ARN) of the task set."
      }
    }
  },
  "aws-native:ecs:TaskDefinition": {
    "cfTypeName": "AWS::ECS::TaskDefinition",
    "properties": {
      "containerDefinitions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecs:TaskDefinitionContainerDefinition"
        },
        "description": "A list of container definitions in JSON format that describe the different containers that make up your task. For more information about container definition parameters and defaults, see [Amazon ECS Task Definitions](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html) in the *Amazon Elastic Container Service Developer Guide*."
      },
      "cpu": {
        "type": "string",
        "description": "The number of ``cpu`` units used by the task. If you use the EC2 launch type, this field is optional. Any value can be used. If you use the Fargate launch type, this field is required. You must use one of the following values. The value that you choose determines your range of valid values for the ``memory`` parameter.\n If you're using the EC2 launch type or the external launch type, this field is optional. Supported values are between ``128`` CPU units (``0.125`` vCPUs) and ``196608`` CPU units (``192`` vCPUs). The CPU units cannot be less than 1 vCPU when you use Windows containers on Fargate.\n  +  256 (.25 vCPU) - Available ``memory`` values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)\n  +  512 (.5 vCPU) - Available ``memory`` values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)\n  +  1024 (1 vCPU) - Available ``memory`` values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\n  +  2048 (2 vCPU) - Available ``memory`` values: 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)\n  +  4096 (4 vCPU) - Available ``memory`` values: 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)\n  +  8192 (8 vCPU) - Available ``memory`` values: 16 GB and 60 GB in 4 GB increments\n This option requires Linux platform ``1.4.0`` or later.\n  +  16384 (16vCPU) - Available ``memory`` values: 32GB and 120 GB in 8 GB increments\n This option requires Linux platform ``1.4.0`` or later."
      },
      "enableFaultInjection": {
        "type": "boolean",
        "description": "Enables fault injection and allows for fault injection requests to be accepted from the task's containers. The default value is ``false``."
      },
      "ephemeralStorage": {
        "$ref": "#/types/aws-native:ecs:TaskDefinitionEphemeralStorage",
        "description": "The ephemeral storage settings to use for tasks run with the task definition."
      },
      "executionRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS container agent permission to make AWS API calls on your behalf. For informationabout the required IAM roles for Amazon ECS, see [IAM roles for Amazon ECS](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/security-ecs-iam-role-overview.html) in the *Amazon Elastic Container Service Developer Guide*."
      },
      "family": {
        "type": "string",
        "description": "The name of a family that this task definition is registered to. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.\n A family groups multiple versions of a task definition. Amazon ECS gives the first task definition that you registered to a family a revision number of 1. Amazon ECS gives sequential revision numbers to each task definition that you add.\n  To use revision numbers when you update a task definition, specify this property. If you don't specify a value, CFNlong generates a new task definition each time that you update it."
      },
      "inferenceAccelerators": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecs:TaskDefinitionInferenceAccelerator"
        },
        "description": "The Elastic Inference accelerators to use for the containers in the task."
      },
      "ipcMode": {
        "type": "string",
        "description": "The IPC resource namespace to use for the containers in the task. The valid values are ``host``, ``task``, or ``none``. If ``host`` is specified, then all containers within the tasks that specified the ``host`` IPC mode on the same container instance share the same IPC resources with the host Amazon EC2 instance. If ``task`` is specified, all containers within the specified task share the same IPC resources. If ``none`` is specified, then IPC resources within the containers of a task are private and not shared with other containers in a task or on the container instance. If no value is specified, then the IPC resource namespace sharing depends on the Docker daemon setting on the container instance.\n If the ``host`` IPC mode is used, be aware that there is a heightened risk of undesired IPC namespace expose.\n If you are setting namespaced kernel parameters using ``systemControls`` for the containers in the task, the following will apply to your IPC resource namespace. For more information, see [System Controls](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html) in the *Amazon Elastic Container Service Developer Guide*.\n  +  For tasks that use the ``host`` IPC mode, IPC namespace related ``systemControls`` are not supported.\n  +  For tasks that use the ``task`` IPC mode, IPC namespace related ``systemControls`` will apply to all containers within a task.\n  \n  This parameter is not supported for Windows containers or tasks run on FARGATElong."
      },
      "memory": {
        "type": "string",
        "description": "The amount (in MiB) of memory used by the task.\n If your tasks runs on Amazon EC2 instances, you must specify either a task-level memory value or a container-level memory value. This field is optional and any value can be used. If a task-level memory value is specified, the container-level memory value is optional. For more information regarding container-level memory and memory reservation, see [ContainerDefinition](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html).\n If your tasks runs on FARGATElong, this field is required. You must use one of the following values. The value you choose determines your range of valid values for the ``cpu`` parameter.\n  +  512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available ``cpu`` values: 256 (.25 vCPU)\n  +  1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available ``cpu`` values: 512 (.5 vCPU)\n  +  2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available ``cpu`` values: 1024 (1 vCPU)\n  +  Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available ``cpu`` values: 2048 (2 vCPU)\n  +  Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available ``cpu`` values: 4096 (4 vCPU)\n  +  Between 16 GB and 60 GB in 4 GB increments - Available ``cpu`` values: 8192 (8 vCPU)\n This option requires Linux platform ``1.4.0`` or later.\n  +  Between 32GB and 120 GB in 8 GB increments - Available ``cpu`` values: 16384 (16 vCPU)\n This option requires Linux platform ``1.4.0`` or later."
      },
      "networkMode": {
        "type": "string",
        "description": "The Docker networking mode to use for the containers in the task. The valid values are ``none``, ``bridge``, ``awsvpc``, and ``host``. If no network mode is specified, the default is ``bridge``.\n For Amazon ECS tasks on Fargate, the ``awsvpc`` network mode is required. For Amazon ECS tasks on Amazon EC2 Linux instances, any network mode can be used. For Amazon ECS tasks on Amazon EC2 Windows instances, ``\u003cdefault\u003e`` or ``awsvpc`` can be used. If the network mode is set to ``none``, you cannot specify port mappings in your container definitions, and the tasks containers do not have external connectivity. The ``host`` and ``awsvpc`` network modes offer the highest networking performance for containers because they use the EC2 network stack instead of the virtualized network stack provided by the ``bridge`` mode.\n With the ``host`` and ``awsvpc`` network modes, exposed container ports are mapped directly to the corresponding host port (for the ``host`` network mode) or the attached elastic network interface port (for the ``awsvpc`` network mode), so you cannot take advantage of dynamic host port mappings. \n  When using the ``host`` network mode, you should not run containers using the root user (UID 0). It is considered best practice to use a non-root user.\n  If the network mode is ``awsvpc``, the task is allocated an elastic network interface, and you must specify a [NetworkConfiguration](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_NetworkConfiguration.html) value when you create a service or run a task with the task definition. For more information, see [Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html) in the *Amazon Elastic Container Service Developer Guide*.\n If the network mode is ``host``, you cannot run multiple instantiations of the same task on a single container instance when port mappings are used."
      },
      "pidMode": {
        "type": "string",
        "description": "The process namespace to use for the containers in the task. The valid values are ``host`` or ``task``. On Fargate for Linux containers, the only valid value is ``task``. For example, monitoring sidecars might need ``pidMode`` to access information about other containers running in the same task.\n If ``host`` is specified, all containers within the tasks that specified the ``host`` PID mode on the same container instance share the same process namespace with the host Amazon EC2 instance.\n If ``task`` is specified, all containers within the specified task share the same process namespace.\n If no value is specified, the default is a private namespace for each container.\n If the ``host`` PID mode is used, there's a heightened risk of undesired process namespace exposure.\n  This parameter is not supported for Windows containers.\n   This parameter is only supported for tasks that are hosted on FARGATElong if the tasks are using platform version ``1.4.0`` or later (Linux). This isn't supported for Windows containers on Fargate."
      },
      "placementConstraints": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecs:TaskDefinitionPlacementConstraint"
        },
        "description": "An array of placement constraint objects to use for tasks.\n  This parameter isn't supported for tasks run on FARGATElong."
      },
      "proxyConfiguration": {
        "$ref": "#/types/aws-native:ecs:TaskDefinitionProxyConfiguration",
        "description": "The configuration details for the App Mesh proxy.\n Your Amazon ECS container instances require at least version 1.26.0 of the container agent and at least version 1.26.0-1 of the ``ecs-init`` package to use a proxy configuration. If your container instances are launched from the Amazon ECS optimized AMI version ``20190301`` or later, they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon Elastic Container Service Developer Guide*."
      },
      "requiresCompatibilities": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The task launch types the task definition was validated against. The valid values are ``EC2``, ``FARGATE``, and ``EXTERNAL``. For more information, see [Amazon ECS launch types](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) in the *Amazon Elastic Container Service Developer Guide*."
      },
      "runtimePlatform": {
        "$ref": "#/types/aws-native:ecs:TaskDefinitionRuntimePlatform",
        "description": "The operating system that your tasks definitions run on. A platform family is specified only for tasks using the Fargate launch type."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The metadata that you apply to the task definition to help you categorize and organize them. Each tag consists of a key and an optional value. You define both of them.\n The following basic restrictions apply to tags:\n  +  Maximum number of tags per resource - 50\n  +  For each resource, each tag key must be unique, and each tag key can have only one value.\n  +  Maximum key length - 128 Unicode characters in UTF-8\n  +  Maximum value length - 256 Unicode characters in UTF-8\n  +  If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n  +  Tag keys and values are case-sensitive.\n  +  Do not use ``aws:``, ``AWS:``, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for AWS use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit."
      },
      "taskRoleArn": {
        "type": "string",
        "description": "The short name or full Amazon Resource Name (ARN) of the IAMlong role that grants containers in the task permission to call AWS APIs on your behalf. For more information, see [Amazon ECS Task Role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html) in the *Amazon Elastic Container Service Developer Guide*.\n IAM roles for tasks on Windows require that the ``-EnableTaskIAMRole`` option is set when you launch the Amazon ECS-optimized Windows AMI. Your containers must also run some configuration code to use the feature. For more information, see [Windows IAM roles for tasks](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows_task_IAM_roles.html) in the *Amazon Elastic Container Service Developer Guide*.\n  String validation is done on the ECS side. If an invalid string value is given for ``TaskRoleArn``, it may cause the Cloudformation job to hang."
      },
      "volumes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecs:TaskDefinitionVolume"
        },
        "description": "The list of data volume definitions for the task. For more information, see [Using data volumes in tasks](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html) in the *Amazon Elastic Container Service Developer Guide*.\n  The ``host`` and ``sourcePath`` parameters aren't supported for tasks run on FARGATElong."
      }
    }
  },
  "aws-native:ecs:TaskSet": {
    "cfTypeName": "AWS::ECS::TaskSet",
    "properties": {
      "capacityProviderStrategy": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecs:TaskSetCapacityProviderStrategyItem"
        },
        "description": "The capacity provider strategy that are associated with the task set."
      },
      "cluster": {
        "type": "string",
        "description": "The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in."
      },
      "externalId": {
        "type": "string",
        "description": "An optional non-unique tag that identifies this task set in external systems. If the task set is associated with a service discovery registry, the tasks in this task set will have the ECS_TASK_SET_EXTERNAL_ID AWS Cloud Map attribute set to the provided value. "
      },
      "launchType": {
        "$ref": "#/types/aws-native:ecs:TaskSetLaunchType",
        "description": "The launch type that new tasks in the task set will use. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html in the Amazon Elastic Container Service Developer Guide. "
      },
      "loadBalancers": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecs:TaskSetLoadBalancer"
        },
        "description": "A load balancer object representing the load balancer to use with the task set. The supported load balancer types are either an Application Load Balancer or a Network Load Balancer."
      },
      "networkConfiguration": {
        "$ref": "#/types/aws-native:ecs:TaskSetNetworkConfiguration",
        "description": "The network configuration for the task set."
      },
      "platformVersion": {
        "type": "string",
        "description": "The platform version that the tasks in the task set should use. A platform version is specified only for tasks using the Fargate launch type. If one isn't specified, the LATEST platform version is used by default."
      },
      "scale": {
        "$ref": "#/types/aws-native:ecs:TaskSetScale",
        "description": "A floating-point percentage of the desired number of tasks to place and keep running in the task set."
      },
      "service": {
        "type": "string",
        "description": "The short name or full Amazon Resource Name (ARN) of the service to create the task set in."
      },
      "serviceRegistries": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ecs:TaskSetServiceRegistry"
        },
        "description": "The details of the service discovery registries to assign to this task set. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The metadata that you apply to the task set to help you categorize and organize them. Each tag consists of a key and an optional value. You define both.\n\nThe following basic restrictions apply to tags:\n\n- Maximum number of tags per resource - 50\n- For each resource, each tag key must be unique, and each tag key can have only one value.\n- Maximum key length - 128 Unicode characters in UTF-8\n- Maximum value length - 256 Unicode characters in UTF-8\n- If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n- Tag keys and values are case-sensitive.\n- Do not use `aws:` , `AWS:` , or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for AWS use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit."
      },
      "taskDefinition": {
        "type": "string",
        "description": "The short name or full Amazon Resource Name (ARN) of the task definition for the tasks in the task set to use."
      }
    }
  },
  "aws-native:efs:AccessPoint": {
    "cfTypeName": "AWS::EFS::AccessPoint",
    "properties": {
      "accessPointTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource.\n For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)."
      },
      "clientToken": {
        "type": "string",
        "description": "The opaque string specified in the request to ensure idempotent creation."
      },
      "fileSystemId": {
        "type": "string",
        "description": "The ID of the EFS file system that the access point applies to. Accepts only the ID format for input when specifying a file system, for example ``fs-0123456789abcedf2``."
      },
      "posixUser": {
        "$ref": "#/types/aws-native:efs:AccessPointPosixUser",
        "description": "The full POSIX identity, including the user ID, group ID, and secondary group IDs on the access point that is used for all file operations by NFS clients using the access point."
      },
      "rootDirectory": {
        "$ref": "#/types/aws-native:efs:AccessPointRootDirectory",
        "description": "The directory on the EFS file system that the access point exposes as the root directory to NFS clients using the access point."
      }
    }
  },
  "aws-native:efs:FileSystem": {
    "cfTypeName": "AWS::EFS::FileSystem",
    "properties": {
      "availabilityZoneName": {
        "type": "string",
        "description": "For One Zone file systems, specify the AWS Availability Zone in which to create the file system. Use the format ``us-east-1a`` to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system types](https://docs.aws.amazon.com/efs/latest/ug/availability-durability.html#file-system-type) in the *Amazon EFS User Guide*.\n  One Zone file systems are not available in all Availability Zones in AWS-Regions where Amazon EFS is available."
      },
      "backupPolicy": {
        "$ref": "#/types/aws-native:efs:FileSystemBackupPolicy",
        "description": "Use the ``BackupPolicy`` to turn automatic backups on or off for the file system."
      },
      "bypassPolicyLockoutSafetyCheck": {
        "type": "boolean",
        "description": "(Optional) A boolean that specifies whether or not to bypass the ``FileSystemPolicy`` lockout safety check. The lockout safety check determines whether the policy in the request will lock out, or prevent, the IAM principal that is making the request from making future ``PutFileSystemPolicy`` requests on this file system. Set ``BypassPolicyLockoutSafetyCheck`` to ``True`` only when you intend to prevent the IAM principal that is making the request from making subsequent ``PutFileSystemPolicy`` requests on this file system. The default value is ``False``."
      },
      "encrypted": {
        "type": "boolean",
        "description": "A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the option of specifying a KmsKeyId for an existing kms-key-long. If you don't specify a kms-key, then the default kms-key for EFS, ``/aws/elasticfilesystem``, is used to protect the encrypted file system."
      },
      "fileSystemPolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "The ``FileSystemPolicy`` for the EFS file system. A file system policy is an IAM resource policy used to control NFS access to an EFS file system. For more information, see [Using to control NFS access to Amazon EFS](https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html) in the *Amazon EFS User Guide*.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::EFS::FileSystem` for more information about the expected schema for this property."
      },
      "fileSystemProtection": {
        "$ref": "#/types/aws-native:efs:FileSystemProtection",
        "description": "Describes the protection on the file system."
      },
      "fileSystemTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Use to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your file system on creation by including a ``\"Key\":\"Name\",\"Value\":\"{value}\"`` key-value pair. Each key must be unique. For more information, see [Tagging resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the *General Reference Guide*."
      },
      "kmsKeyId": {
        "type": "string",
        "description": "The ID of the kms-key-long to be used to protect the encrypted file system. This parameter is only required if you want to use a nondefault kms-key. If this parameter is not specified, the default kms-key for EFS is used. This ID can be in one of the following formats:\n  +  Key ID - A unique identifier of the key, for example ``1234abcd-12ab-34cd-56ef-1234567890ab``.\n  +  ARN - An Amazon Resource Name (ARN) for the key, for example ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``.\n  +  Key alias - A previously created display name for a key, for example ``alias/projectKey1``.\n  +  Key alias ARN - An ARN for a key alias, for example ``arn:aws:kms:us-west-2:444455556666:alias/projectKey1``.\n  \n If ``KmsKeyId`` is specified, the ``Encrypted`` parameter must be set to true."
      },
      "lifecyclePolicies": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:efs:FileSystemLifecyclePolicy"
        },
        "description": "An array of ``LifecyclePolicy`` objects that define the file system's ``LifecycleConfiguration`` object. A ``LifecycleConfiguration`` object informs Lifecycle management of the following:\n  +  When to move files in the file system from primary storage to IA storage.\n  +  When to move files in the file system from primary storage or IA storage to Archive storage.\n  +  When to move files that are in IA or Archive storage to primary storage.\n  \n   EFS requires that each ``LifecyclePolicy`` object have only a single transition. This means that in a request body, ``LifecyclePolicies`` needs to be structured as an array of ``LifecyclePolicy`` objects, one object for each transition, ``TransitionToIA``, ``TransitionToArchive`` ``TransitionToPrimaryStorageClass``. See the example requests in the following section for more information."
      },
      "performanceMode": {
        "type": "string",
        "description": "The performance mode of the file system. We recommend ``generalPurpose`` performance mode for all file systems. File systems using the ``maxIO`` performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed after the file system has been created. The ``maxIO`` mode is not supported on One Zone file systems.\n  Due to the higher per-operation latencies with Max I/O, we recommend using General Purpose performance mode for all file systems.\n  Default is ``generalPurpose``."
      },
      "provisionedThroughputInMibps": {
        "type": "number",
        "description": "The throughput, measured in mebibytes per second (MiBps), that you want to provision for a file system that you're creating. Required if ``ThroughputMode`` is set to ``provisioned``. Valid values are 1-3414 MiBps, with the upper limit depending on Region. To increase this limit, contact SUP. For more information, see [Amazon EFS quotas that you can increase](https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits) in the *Amazon EFS User Guide*."
      },
      "replicationConfiguration": {
        "$ref": "#/types/aws-native:efs:FileSystemReplicationConfiguration",
        "description": "Describes the replication configuration for a specific file system."
      },
      "throughputMode": {
        "type": "string",
        "description": "Specifies the throughput mode for the file system. The mode can be ``bursting``, ``provisioned``, or ``elastic``. If you set ``ThroughputMode`` to ``provisioned``, you must also set a value for ``ProvisionedThroughputInMibps``. After you create the file system, you can decrease your file system's Provisioned throughput or change between the throughput modes, with certain time restrictions. For more information, see [Specifying throughput with provisioned mode](https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput) in the *Amazon EFS User Guide*. \n Default is ``bursting``."
      }
    }
  },
  "aws-native:efs:MountTarget": {
    "cfTypeName": "AWS::EFS::MountTarget",
    "properties": {
      "fileSystemId": {
        "type": "string",
        "description": "The ID of the file system for which to create the mount target."
      },
      "ipAddress": {
        "type": "string",
        "description": "Valid IPv4 address within the address range of the specified subnet."
      },
      "securityGroups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "VPC security group IDs, of the form ``sg-xxxxxxxx``. These must be for the same VPC as the subnet specified. The maximum number of security groups depends on account quota. For more information, see [Amazon VPC Quotas](https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html) in the *Amazon VPC User Guide* (see the *Security Groups* table)."
      },
      "subnetId": {
        "type": "string",
        "description": "The ID of the subnet to add the mount target in. For One Zone file systems, use the subnet that is associated with the file system's Availability Zone."
      }
    }
  },
  "aws-native:eks:AccessEntry": {
    "cfTypeName": "AWS::EKS::AccessEntry",
    "properties": {
      "accessPolicies": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:eks:AccessEntryAccessPolicy"
        },
        "description": "An array of access policies that are associated with the access entry."
      },
      "clusterName": {
        "type": "string",
        "description": "The cluster that the access entry is created for."
      },
      "kubernetesGroups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Kubernetes groups that the access entry is associated with."
      },
      "principalArn": {
        "type": "string",
        "description": "The principal ARN that the access entry is created for."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "type": {
        "type": "string",
        "description": "The node type to associate with the access entry."
      },
      "username": {
        "type": "string",
        "description": "The Kubernetes user that the access entry is associated with."
      }
    }
  },
  "aws-native:eks:PodIdentityAssociation": {
    "cfTypeName": "AWS::EKS::PodIdentityAssociation",
    "properties": {
      "clusterName": {
        "type": "string",
        "description": "The cluster that the pod identity association is created for."
      },
      "namespace": {
        "type": "string",
        "description": "The Kubernetes namespace that the pod identity association is created for."
      },
      "roleArn": {
        "type": "string",
        "description": "The IAM role ARN that the pod identity association is created for."
      },
      "serviceAccount": {
        "type": "string",
        "description": "The Kubernetes service account that the pod identity association is created for."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:elasticache:GlobalReplicationGroup": {
    "cfTypeName": "AWS::ElastiCache::GlobalReplicationGroup",
    "properties": {
      "automaticFailoverEnabled": {
        "type": "boolean",
        "description": "AutomaticFailoverEnabled"
      },
      "cacheNodeType": {
        "type": "string",
        "description": "The cache node type of the Global Datastore"
      },
      "cacheParameterGroupName": {
        "type": "string",
        "description": "Cache parameter group name to use for the new engine version. This parameter cannot be modified independently."
      },
      "engine": {
        "type": "string",
        "description": "The engine of the Global Datastore."
      },
      "engineVersion": {
        "type": "string",
        "description": "The engine version of the Global Datastore."
      },
      "globalNodeGroupCount": {
        "type": "integer",
        "description": "Indicates the number of node groups in the Global Datastore."
      },
      "globalReplicationGroupDescription": {
        "type": "string",
        "description": "The optional description of the Global Datastore"
      },
      "globalReplicationGroupIdSuffix": {
        "type": "string",
        "description": "The suffix name of a Global Datastore. Amazon ElastiCache automatically applies a prefix to the Global Datastore ID when it is created. Each AWS Region has its own prefix. "
      },
      "members": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:elasticache:GlobalReplicationGroupMember"
        },
        "description": "The replication groups that comprise the Global Datastore."
      },
      "regionalConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:elasticache:GlobalReplicationGroupRegionalConfiguration"
        },
        "description": "Describes the replication group IDs, the AWS regions where they are stored and the shard configuration for each that comprise the Global Datastore "
      }
    }
  },
  "aws-native:elasticache:ParameterGroup": {
    "cfTypeName": "AWS::ElastiCache::ParameterGroup",
    "properties": {
      "cacheParameterGroupFamily": {
        "type": "string",
        "description": "The name of the cache parameter group family that this cache parameter group is compatible with."
      },
      "description": {
        "type": "string",
        "description": "The description for this cache parameter group."
      },
      "properties": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A comma-delimited list of parameter name/value pairs. For more information see ModifyCacheParameterGroup in the Amazon ElastiCache API Reference Guide."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags are composed of a Key/Value pair. You can use tags to categorize and track each parameter group. The tag value null is permitted."
      }
    }
  },
  "aws-native:elasticache:SubnetGroup": {
    "cfTypeName": "AWS::ElastiCache::SubnetGroup",
    "properties": {
      "cacheSubnetGroupName": {
        "type": "string",
        "description": "The name for the cache subnet group. This value is stored as a lowercase string."
      },
      "description": {
        "type": "string",
        "description": "The description for the cache subnet group."
      },
      "subnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The EC2 subnet IDs for the cache subnet group."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A tag that can be added to an ElastiCache subnet group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your subnet groups. A tag with a null Value is permitted."
      }
    }
  },
  "aws-native:elasticache:UserGroup": {
    "cfTypeName": "AWS::ElastiCache::UserGroup",
    "properties": {
      "engine": {
        "$ref": "#/types/aws-native:elasticache:UserGroupEngine",
        "description": "The target cache engine for the user group."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this user."
      },
      "userGroupId": {
        "type": "string",
        "description": "The ID of the user group."
      },
      "userIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of users associated to this user group."
      }
    }
  },
  "aws-native:elasticbeanstalk:ApplicationVersion": {
    "cfTypeName": "AWS::ElasticBeanstalk::ApplicationVersion",
    "properties": {
      "applicationName": {
        "type": "string",
        "description": "The name of the Elastic Beanstalk application that is associated with this application version. "
      },
      "description": {
        "type": "string",
        "description": "A description of this application version."
      },
      "sourceBundle": {
        "$ref": "#/types/aws-native:elasticbeanstalk:ApplicationVersionSourceBundle",
        "description": "The Amazon S3 bucket and key that identify the location of the source bundle for this version. "
      }
    }
  },
  "aws-native:elasticbeanstalk:ConfigurationTemplate": {
    "cfTypeName": "AWS::ElasticBeanstalk::ConfigurationTemplate",
    "properties": {
      "applicationName": {
        "type": "string",
        "description": "The name of the Elastic Beanstalk application to associate with this configuration template. "
      },
      "description": {
        "type": "string",
        "description": "An optional description for this configuration."
      },
      "environmentId": {
        "type": "string",
        "description": "The ID of an environment whose settings you want to use to create the configuration template. You must specify EnvironmentId if you don't specify PlatformArn, SolutionStackName, or SourceConfiguration. "
      },
      "optionSettings": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:elasticbeanstalk:ConfigurationTemplateConfigurationOptionSetting"
        },
        "description": "Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk configuration options, see [Option Values](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html) in the AWS Elastic Beanstalk Developer Guide. "
      },
      "platformArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the custom platform. For more information, see [Custom Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html) in the AWS Elastic Beanstalk Developer Guide. "
      },
      "solutionStackName": {
        "type": "string",
        "description": "The name of an Elastic Beanstalk solution stack (platform version) that this configuration uses. For example, 64bit Amazon Linux 2013.09 running Tomcat 7 Java 7. A solution stack specifies the operating system, runtime, and application server for a configuration template. It also determines the set of configuration options as well as the possible and default values. For more information, see [Supported Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html) in the AWS Elastic Beanstalk Developer Guide.\n\n You must specify SolutionStackName if you don't specify PlatformArn, EnvironmentId, or SourceConfiguration.\n\n Use the ListAvailableSolutionStacks API to obtain a list of available solution stacks. "
      },
      "sourceConfiguration": {
        "$ref": "#/types/aws-native:elasticbeanstalk:ConfigurationTemplateSourceConfiguration",
        "description": "An Elastic Beanstalk configuration template to base this one on. If specified, Elastic Beanstalk uses the configuration values from the specified configuration template to create a new configuration.\n\nValues specified in OptionSettings override any values obtained from the SourceConfiguration.\n\nYou must specify SourceConfiguration if you don't specify PlatformArn, EnvironmentId, or SolutionStackName.\n\nConstraint: If both solution stack name and source configuration are specified, the solution stack of the source configuration template must match the specified solution stack name. "
      }
    }
  },
  "aws-native:elasticloadbalancingv2:Listener": {
    "cfTypeName": "AWS::ElasticLoadBalancingV2::Listener",
    "properties": {
      "alpnPolicy": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "[TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy."
      },
      "certificates": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerCertificate"
        },
        "description": "The default SSL server certificate for a secure listener. You must provide exactly one certificate if the listener protocol is HTTPS or TLS.\n To create a certificate list for a secure listener, use [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html)."
      },
      "defaultActions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerAction"
        },
        "description": "The actions for the default rule. You cannot define a condition for a default rule.\n To create additional rules for an Application Load Balancer, use [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html)."
      },
      "listenerAttributes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerAttribute"
        },
        "description": "The listener attributes."
      },
      "loadBalancerArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the load balancer."
      },
      "mutualAuthentication": {
        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerMutualAuthentication",
        "description": "The mutual authentication configuration information."
      },
      "port": {
        "type": "integer",
        "description": "The port on which the load balancer is listening. You can't specify a port for a Gateway Load Balancer."
      },
      "protocol": {
        "type": "string",
        "description": "The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You can't specify a protocol for a Gateway Load Balancer."
      },
      "sslPolicy": {
        "type": "string",
        "description": "[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported.\n Updating the security policy can result in interruptions if the load balancer is handling a high volume of traffic.\n For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies) in the *Application Load Balancers Guide* and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies) in the *Network Load Balancers Guide*."
      }
    }
  },
  "aws-native:elasticloadbalancingv2:ListenerRule": {
    "cfTypeName": "AWS::ElasticLoadBalancingV2::ListenerRule",
    "properties": {
      "actions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleAction"
        },
        "description": "The actions.\n The rule must include exactly one of the following types of actions: ``forward``, ``fixed-response``, or ``redirect``, and it must be the last action to be performed. If the rule is for an HTTPS listener, it can also optionally include an authentication action."
      },
      "conditions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleRuleCondition"
        },
        "description": "The conditions.\n The rule can optionally include up to one of each of the following conditions: ``http-request-method``, ``host-header``, ``path-pattern``, and ``source-ip``. A rule can also optionally include one or more of each of the following conditions: ``http-header`` and ``query-string``."
      },
      "listenerArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the listener."
      },
      "priority": {
        "type": "integer",
        "description": "The rule priority. A listener can't have multiple rules with the same priority.\n If you try to reorder rules by updating their priorities, do not specify a new priority if an existing rule already uses this priority, as this can cause an error. If you need to reuse a priority with a different rule, you must remove it as a priority first, and then specify it in a subsequent update."
      }
    }
  },
  "aws-native:elasticloadbalancingv2:TrustStoreRevocation": {
    "cfTypeName": "AWS::ElasticLoadBalancingV2::TrustStoreRevocation",
    "properties": {
      "revocationContents": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:elasticloadbalancingv2:TrustStoreRevocationRevocationContent"
        },
        "description": "The attributes required to create a trust store revocation."
      },
      "trustStoreArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the trust store."
      }
    }
  },
  "aws-native:emr:StudioSessionMapping": {
    "cfTypeName": "AWS::EMR::StudioSessionMapping",
    "properties": {
      "identityName": {
        "type": "string",
        "description": "The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified."
      },
      "identityType": {
        "$ref": "#/types/aws-native:emr:StudioSessionMappingIdentityType",
        "description": "Specifies whether the identity to map to the Studio is a user or a group."
      },
      "sessionPolicyArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. Session policies refine Studio user permissions without the need to use multiple IAM user roles."
      },
      "studioId": {
        "type": "string",
        "description": "The ID of the Amazon EMR Studio to which the user or group will be mapped."
      }
    }
  },
  "aws-native:entityresolution:PolicyStatement": {
    "cfTypeName": "AWS::EntityResolution::PolicyStatement",
    "properties": {
      "action": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The action that the principal can use on the resource.\n\nFor example, `entityresolution:GetIdMappingJob` , `entityresolution:GetMatchingJob` ."
      },
      "arn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the resource that will be accessed by the principal."
      },
      "condition": {
        "type": "string",
        "description": "A set of condition keys that you can use in key policies."
      },
      "effect": {
        "$ref": "#/types/aws-native:entityresolution:PolicyStatementStatementEffect",
        "description": "Determines whether the permissions specified in the policy are to be allowed ( `Allow` ) or denied ( `Deny` ).\n\n\u003e If you set the value of the `effect` parameter to `Deny` for the `AddPolicyStatement` operation, you must also set the value of the `effect` parameter in the `policy` to `Deny` for the `PutPolicy` operation."
      },
      "principal": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The AWS service or AWS account that can access the resource defined as ARN."
      },
      "statementId": {
        "type": "string",
        "description": "A statement identifier that differentiates the statement from others in the same policy."
      }
    }
  },
  "aws-native:entityresolution:SchemaMapping": {
    "cfTypeName": "AWS::EntityResolution::SchemaMapping",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description of the SchemaMapping"
      },
      "mappedInputFields": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:entityresolution:SchemaMappingSchemaInputAttribute"
        },
        "description": "The SchemaMapping attributes input"
      },
      "schemaName": {
        "type": "string",
        "description": "The name of the SchemaMapping"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags used to organize, track, or control access for this resource."
      }
    }
  },
  "aws-native:eventschemas:Discoverer": {
    "cfTypeName": "AWS::EventSchemas::Discoverer",
    "properties": {
      "crossAccount": {
        "type": "boolean",
        "description": "Defines whether event schemas from other accounts are discovered. Default is True."
      },
      "description": {
        "type": "string",
        "description": "A description for the discoverer."
      },
      "sourceArn": {
        "type": "string",
        "description": "The ARN of the event bus."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags associated with the resource."
      }
    }
  },
  "aws-native:eventschemas:RegistryPolicy": {
    "cfTypeName": "AWS::EventSchemas::RegistryPolicy",
    "properties": {
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "A resource-based policy.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::EventSchemas::RegistryPolicy` for more information about the expected schema for this property."
      },
      "registryName": {
        "type": "string",
        "description": "The name of the registry."
      },
      "revisionId": {
        "type": "string",
        "description": "The revision ID of the policy."
      }
    }
  },
  "aws-native:fis:ExperimentTemplate": {
    "cfTypeName": "AWS::FIS::ExperimentTemplate",
    "properties": {
      "actions": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:fis:ExperimentTemplateAction"
        },
        "description": "The actions for the experiment."
      },
      "description": {
        "type": "string",
        "description": "The description for the experiment template."
      },
      "experimentOptions": {
        "$ref": "#/types/aws-native:fis:ExperimentTemplateExperimentOptions",
        "description": "The experiment options for an experiment template."
      },
      "experimentReportConfiguration": {
        "$ref": "#/types/aws-native:fis:ExperimentTemplateExperimentReportConfiguration",
        "description": "Describes the report configuration for the experiment template."
      },
      "logConfiguration": {
        "$ref": "#/types/aws-native:fis:ExperimentTemplateLogConfiguration",
        "description": "The configuration for experiment logging."
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of an IAM role."
      },
      "stopConditions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:fis:ExperimentTemplateStopCondition"
        },
        "description": "The stop conditions for the experiment."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The tags for the experiment template."
      },
      "targets": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:fis:ExperimentTemplateTarget"
        },
        "description": "The targets for the experiment."
      }
    }
  },
  "aws-native:fis:TargetAccountConfiguration": {
    "cfTypeName": "AWS::FIS::TargetAccountConfiguration",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The AWS account ID of the target account."
      },
      "description": {
        "type": "string",
        "description": "The description of the target account."
      },
      "experimentTemplateId": {
        "type": "string",
        "description": "The ID of the experiment template."
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of an IAM role for the target account."
      }
    }
  },
  "aws-native:fms:NotificationChannel": {
    "cfTypeName": "AWS::FMS::NotificationChannel",
    "properties": {
      "snsRoleName": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM role that allows Amazon SNS to record AWS Firewall Manager activity."
      },
      "snsTopicArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the SNS topic that collects notifications from AWS Firewall Manager ."
      }
    }
  },
  "aws-native:frauddetector:Detector": {
    "cfTypeName": "AWS::FraudDetector::Detector",
    "properties": {
      "associatedModels": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:frauddetector:DetectorModel"
        },
        "description": "The models to associate with this detector."
      },
      "description": {
        "type": "string",
        "description": "The description of the detector."
      },
      "detectorId": {
        "type": "string",
        "description": "The ID of the detector"
      },
      "detectorVersionStatus": {
        "$ref": "#/types/aws-native:frauddetector:DetectorVersionStatus",
        "description": "The desired detector version status for the detector"
      },
      "eventType": {
        "$ref": "#/types/aws-native:frauddetector:DetectorEventType",
        "description": "The event type to associate this detector with."
      },
      "ruleExecutionMode": {
        "$ref": "#/types/aws-native:frauddetector:DetectorRuleExecutionMode",
        "description": "The rule execution mode for the rules included in the detector version.\n\nValid values: `FIRST_MATCHED | ALL_MATCHED` Default value: `FIRST_MATCHED`\n\nYou can define and edit the rule mode at the detector version level, when it is in draft status.\n\nIf you specify `FIRST_MATCHED` , Amazon Fraud Detector evaluates rules sequentially, first to last, stopping at the first matched rule. Amazon Fraud dectector then provides the outcomes for that single rule.\n\nIf you specifiy `ALL_MATCHED` , Amazon Fraud Detector evaluates all rules and returns the outcomes for all matched rules."
      },
      "rules": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:frauddetector:DetectorRule"
        },
        "description": "The rules to include in the detector version."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags associated with this detector."
      }
    }
  },
  "aws-native:fsx:DataRepositoryAssociation": {
    "cfTypeName": "AWS::FSx::DataRepositoryAssociation",
    "properties": {
      "batchImportMetaDataOnCreate": {
        "type": "boolean",
        "description": "A boolean flag indicating whether an import data repository task to import metadata should run after the data repository association is created. The task runs if this flag is set to ``true``."
      },
      "dataRepositoryPath": {
        "type": "string",
        "description": "The path to the Amazon S3 data repository that will be linked to the file system. The path can be an S3 bucket or prefix in the format ``s3://myBucket/myPrefix/``. This path specifies where in the S3 data repository files will be imported from or exported to."
      },
      "fileSystemId": {
        "type": "string",
        "description": "The ID of the file system on which the data repository association is configured."
      },
      "fileSystemPath": {
        "type": "string",
        "description": "A path on the Amazon FSx for Lustre file system that points to a high-level directory (such as ``/ns1/``) or subdirectory (such as ``/ns1/subdir/``) that will be mapped 1-1 with ``DataRepositoryPath``. The leading forward slash in the name is required. Two data repository associations cannot have overlapping file system paths. For example, if a data repository is associated with file system path ``/ns1/``, then you cannot link another data repository with file system path ``/ns1/ns2``.\n This path specifies where in your file system files will be exported from or imported to. This file system directory can be linked to only one Amazon S3 bucket, and no other S3 bucket can be linked to the directory.\n  If you specify only a forward slash (``/``) as the file system path, you can link only one data repository to the file system. You can only specify \"/\" as the file system path for the first data repository associated with a file system."
      },
      "importedFileChunkSize": {
        "type": "integer",
        "description": "For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. The maximum number of disks that a single file can be striped across is limited by the total number of disks that make up the file system or cache.\n The default chunk size is 1,024 MiB (1 GiB) and can go as high as 512,000 MiB (500 GiB). Amazon S3 objects have a maximum size of 5 TB."
      },
      "s3": {
        "$ref": "#/types/aws-native:fsx:DataRepositoryAssociationS3",
        "description": "The configuration for an Amazon S3 data repository linked to an Amazon FSx Lustre file system with a data repository association. The configuration defines which file events (new, changed, or deleted files or directories) are automatically imported from the linked data repository to the file system or automatically exported from the file system to the data repository."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource.\n For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)."
      }
    }
  },
  "aws-native:gamelift:ContainerFleet": {
    "cfTypeName": "AWS::GameLift::ContainerFleet",
    "properties": {
      "billingType": {
        "$ref": "#/types/aws-native:gamelift:ContainerFleetBillingType",
        "description": "Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet."
      },
      "deploymentConfiguration": {
        "$ref": "#/types/aws-native:gamelift:ContainerFleetDeploymentConfiguration",
        "description": "Set of rules for processing a deployment for a container fleet update."
      },
      "description": {
        "type": "string",
        "description": "A human-readable description of a fleet."
      },
      "fleetRoleArn": {
        "type": "string",
        "description": "A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console."
      },
      "gameServerContainerGroupDefinitionName": {
        "type": "string",
        "description": "The name of the container group definition that will be created per game server. You must specify GAME_SERVER container group. You have the option to also specify one PER_INSTANCE container group."
      },
      "gameServerContainerGroupsPerInstance": {
        "type": "integer",
        "description": "The number of desired game server container groups per instance, a number between 1-5000."
      },
      "gameSessionCreationLimitPolicy": {
        "$ref": "#/types/aws-native:gamelift:ContainerFleetGameSessionCreationLimitPolicy",
        "description": "A policy that limits the number of game sessions an individual player can create over a span of time for this fleet."
      },
      "instanceConnectionPortRange": {
        "$ref": "#/types/aws-native:gamelift:ContainerFleetConnectionPortRange",
        "description": "The set of port numbers to open on each instance in a container fleet. Connection ports are used by inbound traffic to connect with processes that are running in containers on the fleet."
      },
      "instanceInboundPermissions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:gamelift:ContainerFleetIpPermission"
        },
        "description": "A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server."
      },
      "instanceType": {
        "type": "string",
        "description": "The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions."
      },
      "locations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:gamelift:ContainerFleetLocationConfiguration"
        }
      },
      "logConfiguration": {
        "$ref": "#/types/aws-native:gamelift:ContainerFleetLogConfiguration",
        "description": "The method that is used to collect container logs for the fleet. Amazon GameLift Servers saves all standard output for each container in logs, including game session logs.\n\n- `CLOUDWATCH` -- Send logs to an Amazon CloudWatch log group that you define. Each container emits a log stream, which is organized in the log group.\n- `S3` -- Store logs in an Amazon S3 bucket that you define.\n- `NONE` -- Don't collect container logs."
      },
      "metricGroups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string."
      },
      "newGameSessionProtectionPolicy": {
        "$ref": "#/types/aws-native:gamelift:ContainerFleetNewGameSessionProtectionPolicy",
        "description": "A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions."
      },
      "perInstanceContainerGroupDefinitionName": {
        "type": "string",
        "description": "The name of the container group definition that will be created per instance. This field is optional if you specify GameServerContainerGroupDefinitionName."
      },
      "scalingPolicies": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:gamelift:ContainerFleetScalingPolicy"
        },
        "description": "A list of rules that control how a fleet is scaled."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:gameliftstreams:Application": {
    "cfTypeName": "AWS::GameLiftStreams::Application",
    "properties": {
      "applicationLogOutputUri": {
        "type": "string",
        "description": "An Amazon S3 URI to a bucket where you would like Amazon GameLift Streams to save application logs. Required if you specify one or more `ApplicationLogPaths` ."
      },
      "applicationLogPaths": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Locations of log files that your content generates during a stream session. Enter path values that are relative to the `ApplicationSourceUri` location. You can specify up to 10 log paths. Amazon GameLift Streams uploads designated log files to the Amazon S3 bucket that you specify in `ApplicationLogOutputUri` at the end of a stream session. To retrieve stored log files, call [GetStreamSession](https://docs.aws.amazon.com/gameliftstreams/latest/apireference/API_GetStreamSession.html) and get the `LogFileLocationUri` ."
      },
      "applicationSourceUri": {
        "type": "string",
        "description": "The location of the content that you want to stream. Enter an Amazon S3 URI to a bucket that contains your game or other application. The location can have a multi-level prefix structure, but it must include all the files needed to run the content. Amazon GameLift Streams copies everything under the specified location.\n\nThis value is immutable. To designate a different content location, create a new application.\n\n\u003e The Amazon S3 bucket and the Amazon GameLift Streams application must be in the same AWS Region."
      },
      "description": {
        "type": "string",
        "description": "A human-readable label for the application. You can update this value later."
      },
      "executablePath": {
        "type": "string",
        "description": "The path and file name of the executable file that launches the content for streaming. Enter a path value that is relative to the location set in `ApplicationSourceUri` ."
      },
      "runtimeEnvironment": {
        "$ref": "#/types/aws-native:gameliftstreams:ApplicationRuntimeEnvironment",
        "description": "A set of configuration settings to run the application on a stream group. This configures the operating system, and can include compatibility layers and other drivers."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A list of labels to assign to the new application resource. Tags are developer-defined key-value pairs. Tagging AWS resources is useful for resource management, access management and cost allocation. See [Tagging AWS Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the *AWS General Reference* ."
      }
    }
  },
  "aws-native:gameliftstreams:StreamGroup": {
    "cfTypeName": "AWS::GameLiftStreams::StreamGroup",
    "properties": {
      "defaultApplication": {
        "$ref": "#/types/aws-native:gameliftstreams:StreamGroupDefaultApplication",
        "description": "Object that identifies the Amazon GameLift Streams application to stream with this stream group."
      },
      "description": {
        "type": "string",
        "description": "A descriptive label for the stream group."
      },
      "locationConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:gameliftstreams:StreamGroupLocationConfiguration"
        },
        "description": "A set of one or more locations and the streaming capacity for each location. One of the locations MUST be your primary location, which is the AWS Region where you are specifying this resource."
      },
      "streamClass": {
        "type": "string",
        "description": "The target stream quality for sessions that are hosted in this stream group. Set a stream class that is appropriate to the type of content that you're streaming. Stream class determines the type of computing resources Amazon GameLift Streams uses and impacts the cost of streaming. The following options are available:\n\nA stream class can be one of the following:\n\n- *`gen5n_win2022` (NVIDIA, ultra)* Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA A10G Tensor GPU.\n\n- Reference resolution: 1080p\n- Reference frame rate: 60 fps\n- Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM\n- Tenancy: Supports 1 concurrent stream session\n- *`gen5n_high` (NVIDIA, high)* Supports applications with moderate to high 3D scene complexity. Uses NVIDIA A10G Tensor GPU.\n\n- Reference resolution: 1080p\n- Reference frame rate: 60 fps\n- Workload specifications: 4 vCPUs, 16 GB RAM, 12 GB VRAM\n- Tenancy: Supports up to 2 concurrent stream sessions\n- *`gen5n_ultra` (NVIDIA, ultra)* Supports applications with extremely high 3D scene complexity. Uses dedicated NVIDIA A10G Tensor GPU.\n\n- Reference resolution: 1080p\n- Reference frame rate: 60 fps\n- Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM\n- Tenancy: Supports 1 concurrent stream session\n- *`gen4n_win2022` (NVIDIA, ultra)* Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA T4 Tensor GPU.\n\n- Reference resolution: 1080p\n- Reference frame rate: 60 fps\n- Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM\n- Tenancy: Supports 1 concurrent stream session\n- *`gen4n_high` (NVIDIA, high)* Supports applications with moderate to high 3D scene complexity. Uses NVIDIA T4 Tensor GPU.\n\n- Reference resolution: 1080p\n- Reference frame rate: 60 fps\n- Workload specifications: 4 vCPUs, 16 GB RAM, 8 GB VRAM\n- Tenancy: Supports up to 2 concurrent stream sessions\n- *`gen4n_ultra` (NVIDIA, ultra)* Supports applications with high 3D scene complexity. Uses dedicated NVIDIA T4 Tensor GPU.\n\n- Reference resolution: 1080p\n- Reference frame rate: 60 fps\n- Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM\n- Tenancy: Supports 1 concurrent stream session"
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A list of labels to assign to the new stream group resource. Tags are developer-defined key-value pairs. Tagging AWS resources is useful for resource management, access management and cost allocation. See [Tagging AWS Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the *AWS General Reference* ."
      }
    }
  },
  "aws-native:globalaccelerator:EndpointGroup": {
    "cfTypeName": "AWS::GlobalAccelerator::EndpointGroup",
    "properties": {
      "endpointConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:globalaccelerator:EndpointGroupEndpointConfiguration"
        },
        "description": "The list of endpoint objects."
      },
      "endpointGroupRegion": {
        "type": "string",
        "description": "The name of the AWS Region where the endpoint group is located"
      },
      "healthCheckIntervalSeconds": {
        "type": "integer",
        "description": "The time in seconds between each health check for an endpoint. Must be a value of 10 or 30"
      },
      "healthCheckPath": {
        "type": "string",
        "description": "If the protocol is HTTP/S, then this value provides the ping path that Global Accelerator uses for the destination on the endpoints for health checks. The default is slash (/)."
      },
      "healthCheckPort": {
        "type": "integer",
        "description": "The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group."
      },
      "healthCheckProtocol": {
        "$ref": "#/types/aws-native:globalaccelerator:EndpointGroupHealthCheckProtocol",
        "description": "The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group."
      },
      "listenerArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the listener"
      },
      "portOverrides": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:globalaccelerator:EndpointGroupPortOverride"
        },
        "description": "Allows you to override the destination ports used to route traffic to an endpoint. Using a port override lets you map a list of external destination ports (that your users send traffic to) to a list of internal destination ports that you want an application endpoint to receive traffic on."
      },
      "thresholdCount": {
        "type": "integer",
        "description": "The number of consecutive health checks required to set the state of the endpoint to unhealthy."
      },
      "trafficDialPercentage": {
        "type": "number",
        "description": "The percentage of traffic to sent to an AWS Region"
      }
    }
  },
  "aws-native:globalaccelerator:Listener": {
    "cfTypeName": "AWS::GlobalAccelerator::Listener",
    "properties": {
      "acceleratorArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the accelerator."
      },
      "clientAffinity": {
        "$ref": "#/types/aws-native:globalaccelerator:ListenerClientAffinity",
        "description": "Client affinity lets you direct all requests from a user to the same endpoint."
      },
      "portRanges": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:globalaccelerator:ListenerPortRange"
        },
        "description": "The list of port ranges for the connections from clients to the accelerator."
      },
      "protocol": {
        "$ref": "#/types/aws-native:globalaccelerator:ListenerProtocol",
        "description": "The protocol for the listener."
      }
    }
  },
  "aws-native:glue:SchemaVersion": {
    "cfTypeName": "AWS::Glue::SchemaVersion",
    "properties": {
      "schema": {
        "$ref": "#/types/aws-native:glue:SchemaVersionSchema",
        "description": "The schema that includes the schema version."
      },
      "schemaDefinition": {
        "type": "string",
        "description": "Complete definition of the schema in plain-text."
      }
    }
  },
  "aws-native:glue:SchemaVersionMetadata": {
    "cfTypeName": "AWS::Glue::SchemaVersionMetadata",
    "properties": {
      "key": {
        "type": "string",
        "description": "Metadata key"
      },
      "schemaVersionId": {
        "type": "string",
        "description": "Represents the version ID associated with the schema version."
      },
      "value": {
        "type": "string",
        "description": "Metadata value"
      }
    }
  },
  "aws-native:greengrassv2:ComponentVersion": {
    "cfTypeName": "AWS::GreengrassV2::ComponentVersion",
    "properties": {
      "inlineRecipe": {
        "type": "string",
        "description": "The recipe to use to create the component. The recipe defines the component's metadata, parameters, dependencies, lifecycle, artifacts, and platform compatibility.\n\nYou must specify either `InlineRecipe` or `LambdaFunction` ."
      },
      "lambdaFunction": {
        "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaFunctionRecipeSource",
        "description": "The parameters to create a component from a Lambda function.\n\nYou must specify either `InlineRecipe` or `LambdaFunction` ."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Application-specific metadata to attach to the component version. You can use tags in IAM policies to control access to AWS IoT Greengrass resources. You can also use tags to categorize your resources. For more information, see [Tag your AWS IoT Greengrass Version 2 resources](https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html) in the *AWS IoT Greengrass V2 Developer Guide* .\n\nThis `Json` property type is processed as a map of key-value pairs. It uses the following format, which is different from most `Tags` implementations in AWS CloudFormation templates.\n\n```json\n\"Tags\": { \"KeyName0\": \"value\", \"KeyName1\": \"value\", \"KeyName2\": \"value\"\n}\n```"
      }
    }
  },
  "aws-native:groundstation:DataflowEndpointGroup": {
    "cfTypeName": "AWS::GroundStation::DataflowEndpointGroup",
    "properties": {
      "contactPostPassDurationSeconds": {
        "type": "integer",
        "description": "Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a POSTPASS state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the POSTPASS state."
      },
      "contactPrePassDurationSeconds": {
        "type": "integer",
        "description": "Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a PREPASS state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the PREPASS state."
      },
      "endpointDetails": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:groundstation:DataflowEndpointGroupEndpointDetails"
        },
        "description": "List of Endpoint Details, containing address and port for each endpoint. All dataflow endpoints within a single dataflow endpoint group must be of the same type. You cannot mix AWS Ground Station Agent endpoints with Dataflow endpoints in the same group. If your use case requires both types of endpoints, you must create separate dataflow endpoint groups for each type."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags assigned to a resource."
      }
    }
  },
  "aws-native:guardduty:Detector": {
    "cfTypeName": "AWS::GuardDuty::Detector",
    "properties": {
      "dataSources": {
        "$ref": "#/types/aws-native:guardduty:DetectorCfnDataSourceConfigurations",
        "description": "Describes which data sources will be enabled for the detector."
      },
      "enable": {
        "type": "boolean",
        "description": "Specifies whether the detector is to be enabled on creation."
      },
      "features": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:guardduty:DetectorCfnFeatureConfiguration"
        },
        "description": "A list of features that will be configured for the detector."
      },
      "findingPublishingFrequency": {
        "type": "string",
        "description": "Specifies how frequently updated findings are exported."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Specifies tags added to a new detector resource. Each tag consists of a key and an optional value, both of which you define.\n\nCurrently, support is available only for creating and deleting a tag. No support exists for updating the tags.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) ."
      }
    }
  },
  "aws-native:guardduty:MalwareProtectionPlan": {
    "cfTypeName": "AWS::GuardDuty::MalwareProtectionPlan",
    "properties": {
      "actions": {
        "$ref": "#/types/aws-native:guardduty:MalwareProtectionPlanCfnActions",
        "description": "Specifies the action that is to be applied to the Malware Protection plan resource."
      },
      "protectedResource": {
        "$ref": "#/types/aws-native:guardduty:MalwareProtectionPlanCfnProtectedResource",
        "description": "Information about the protected resource. Presently, S3Bucket is the only supported protected resource."
      },
      "role": {
        "type": "string",
        "description": "IAM role that includes the permissions required to scan and (optionally) add tags to the associated protected resource."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify."
      }
    }
  },
  "aws-native:guardduty:Master": {
    "cfTypeName": "AWS::GuardDuty::Master",
    "properties": {
      "detectorId": {
        "type": "string",
        "description": "Unique ID of the detector of the GuardDuty member account."
      },
      "invitationId": {
        "type": "string",
        "description": "Value used to validate the master account to the member account."
      },
      "masterId": {
        "type": "string",
        "description": "ID of the account used as the master account."
      }
    }
  },
  "aws-native:guardduty:Member": {
    "cfTypeName": "AWS::GuardDuty::Member",
    "properties": {
      "detectorId": {
        "type": "string",
        "description": "The ID of the detector associated with the GuardDuty service to add the member to."
      },
      "disableEmailNotification": {
        "type": "boolean",
        "description": "Specifies whether or not to disable email notification for the member account that you invite."
      },
      "email": {
        "type": "string",
        "description": "The email address associated with the member account."
      },
      "memberId": {
        "type": "string",
        "description": "The AWS account ID of the account to designate as a member."
      },
      "message": {
        "type": "string",
        "description": "The invitation message that you want to send to the accounts that you're inviting to GuardDuty as members."
      },
      "status": {
        "type": "string",
        "description": "You can use the `Status` property to update the status of the relationship between the member account and its administrator account. Valid values are `Created` and `Invited` when using an `AWS::GuardDuty::Member` resource. If the value for this property is not provided or set to `Created` , a member account is created but not invited. If the value of this property is set to `Invited` , a member account is created and invited."
      }
    }
  },
  "aws-native:guardduty:PublishingDestination": {
    "cfTypeName": "AWS::GuardDuty::PublishingDestination",
    "properties": {
      "destinationProperties": {
        "$ref": "#/types/aws-native:guardduty:PublishingDestinationCfnDestinationProperties",
        "description": "Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings."
      },
      "destinationType": {
        "type": "string",
        "description": "The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported."
      },
      "detectorId": {
        "type": "string",
        "description": "The ID of the GuardDuty detector associated with the publishing destination."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Describes a tag."
      }
    }
  },
  "aws-native:iam:OidcProvider": {
    "cfTypeName": "AWS::IAM::OIDCProvider",
    "properties": {
      "clientIdList": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of client IDs (also known as audiences) that are associated with the specified IAM OIDC provider resource object. For more information, see [CreateOpenIDConnectProvider](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateOpenIDConnectProvider.html) ."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of tags that are attached to the specified IAM OIDC provider. The returned list of tags is sorted by tag key. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* ."
      },
      "thumbprintList": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of certificate thumbprints that are associated with the specified IAM OIDC provider resource object. For more information, see [CreateOpenIDConnectProvider](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateOpenIDConnectProvider.html) .\n\nThis property is optional. If it is not included, IAM will retrieve and use the top intermediate certificate authority (CA) thumbprint of the OpenID Connect identity provider server certificate."
      },
      "url": {
        "type": "string",
        "description": "The URL that the IAM OIDC provider resource object is associated with. For more information, see [CreateOpenIDConnectProvider](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateOpenIDConnectProvider.html) ."
      }
    }
  },
  "aws-native:iam:ServiceLinkedRole": {
    "cfTypeName": "AWS::IAM::ServiceLinkedRole",
    "properties": {
      "awsServiceName": {
        "type": "string",
        "description": "The service principal for the AWS service to which this role is attached."
      },
      "customSuffix": {
        "type": "string",
        "description": "A string that you provide, which is combined with the service-provided prefix to form the complete role name."
      },
      "description": {
        "type": "string",
        "description": "The description of the role."
      }
    }
  },
  "aws-native:identitystore:Group": {
    "cfTypeName": "AWS::IdentityStore::Group",
    "properties": {
      "description": {
        "type": "string",
        "description": "A string containing the description of the group."
      },
      "displayName": {
        "type": "string",
        "description": "A string containing the name of the group. This value is commonly displayed when the group is referenced."
      },
      "identityStoreId": {
        "type": "string",
        "description": "The globally unique identifier for the identity store."
      }
    }
  },
  "aws-native:identitystore:GroupMembership": {
    "cfTypeName": "AWS::IdentityStore::GroupMembership",
    "properties": {
      "groupId": {
        "type": "string",
        "description": "The unique identifier for a group in the identity store."
      },
      "identityStoreId": {
        "type": "string",
        "description": "The globally unique identifier for the identity store."
      },
      "memberId": {
        "$ref": "#/types/aws-native:identitystore:GroupMembershipMemberId",
        "description": "An object containing the identifier of a group member."
      }
    }
  },
  "aws-native:imagebuilder:Image": {
    "cfTypeName": "AWS::ImageBuilder::Image",
    "properties": {
      "containerRecipeArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested."
      },
      "distributionConfigurationArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the distribution configuration."
      },
      "enhancedImageMetadataEnabled": {
        "type": "boolean",
        "description": "Collects additional information about the image being created, including the operating system (OS) version and package list."
      },
      "executionRole": {
        "type": "string",
        "description": "The execution role name/ARN for the image build, if provided"
      },
      "imageRecipeArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed."
      },
      "imageScanningConfiguration": {
        "$ref": "#/types/aws-native:imagebuilder:ImageScanningConfiguration",
        "description": "Contains settings for vulnerability scans."
      },
      "imageTestsConfiguration": {
        "$ref": "#/types/aws-native:imagebuilder:ImageTestsConfiguration",
        "description": "The image tests configuration used when creating this image."
      },
      "infrastructureConfigurationArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the infrastructure configuration."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The tags associated with the image."
      },
      "workflows": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:imagebuilder:ImageWorkflowConfiguration"
        },
        "description": "Workflows to define the image build process"
      }
    }
  },
  "aws-native:inspector:ResourceGroup": {
    "cfTypeName": "AWS::Inspector::ResourceGroup",
    "properties": {
      "resourceGroupTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:inspector:ResourceGroupTag"
        },
        "description": "The tags (key and value pairs) that will be associated with the resource group.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) ."
      }
    }
  },
  "aws-native:inspectorv2:CisScanConfiguration": {
    "cfTypeName": "AWS::InspectorV2::CisScanConfiguration",
    "properties": {
      "scanName": {
        "type": "string",
        "description": "Name of the scan"
      },
      "schedule": {
        "$ref": "#/types/aws-native:inspectorv2:CisScanConfigurationSchedule",
        "description": "The CIS scan configuration's schedule."
      },
      "securityLevel": {
        "$ref": "#/types/aws-native:inspectorv2:CisScanConfigurationCisSecurityLevel",
        "description": "The CIS scan configuration's CIS Benchmark level."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The CIS scan configuration's tags."
      },
      "targets": {
        "$ref": "#/types/aws-native:inspectorv2:CisScanConfigurationCisTargets",
        "description": "The CIS scan configuration's targets."
      }
    }
  },
  "aws-native:iot:AccountAuditConfiguration": {
    "cfTypeName": "AWS::IoT::AccountAuditConfiguration",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "Your 12-digit account ID (used as the primary identifier for the CloudFormation resource)."
      },
      "auditCheckConfigurations": {
        "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfigurations",
        "description": "Specifies which audit checks are enabled and disabled for this account.\n\nSome data collection might start immediately when certain checks are enabled. When a check is disabled, any data collected so far in relation to the check is deleted. To disable a check, set the value of the `Enabled:` key to `false` .\n\nIf an enabled check is removed from the template, it will also be disabled.\n\nYou can't disable a check if it's used by any scheduled audit. You must delete the check from the scheduled audit or delete the scheduled audit itself to disable the check.\n\nFor more information on available audit checks see [AWS::IoT::AccountAuditConfiguration AuditCheckConfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-accountauditconfiguration-auditcheckconfigurations.html)"
      },
      "auditNotificationTargetConfigurations": {
        "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditNotificationTargetConfigurations",
        "description": "Information about the targets to which audit notifications are sent."
      },
      "roleArn": {
        "type": "string",
        "description": "The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit."
      }
    }
  },
  "aws-native:iot:CaCertificate": {
    "cfTypeName": "AWS::IoT::CACertificate",
    "properties": {
      "autoRegistrationStatus": {
        "$ref": "#/types/aws-native:iot:CaCertificateAutoRegistrationStatus",
        "description": "Whether the CA certificate is configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"."
      },
      "caCertificatePem": {
        "type": "string",
        "description": "The certificate data in PEM format."
      },
      "certificateMode": {
        "$ref": "#/types/aws-native:iot:CaCertificateCertificateMode",
        "description": "The mode of the CA.\n\nAll the device certificates that are registered using this CA will be registered in the same mode as the CA. For more information about certificate mode for device certificates, see [certificate mode](https://docs.aws.amazon.com//iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode) .\n\nValid values are \"DEFAULT\" and \"SNI_ONLY\"."
      },
      "registrationConfig": {
        "$ref": "#/types/aws-native:iot:CaCertificateRegistrationConfig",
        "description": "Information about the registration configuration."
      },
      "removeAutoRegistration": {
        "type": "boolean",
        "description": "If true, removes auto registration."
      },
      "status": {
        "$ref": "#/types/aws-native:iot:CaCertificateStatus",
        "description": "The status of the CA certificate.\n\nValid values are \"ACTIVE\" and \"INACTIVE\"."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "verificationCertificatePem": {
        "type": "string",
        "description": "The private key verification certificate."
      }
    }
  },
  "aws-native:iot:Certificate": {
    "cfTypeName": "AWS::IoT::Certificate",
    "properties": {
      "caCertificatePem": {
        "type": "string",
        "description": "The CA certificate used to sign the device certificate being registered, not available when CertificateMode is SNI_ONLY."
      },
      "certificateMode": {
        "$ref": "#/types/aws-native:iot:CertificateMode",
        "description": "Specifies which mode of certificate registration to use with this resource. Valid options are DEFAULT with CaCertificatePem and CertificatePem, SNI_ONLY with CertificatePem, and Default with CertificateSigningRequest.\n\n`DEFAULT` : A certificate in `DEFAULT` mode is either generated by AWS IoT Core or registered with an issuer certificate authority (CA). Devices with certificates in `DEFAULT` mode aren't required to send the Server Name Indication (SNI) extension when connecting to AWS IoT Core . However, to use features such as custom domains and VPC endpoints, we recommend that you use the SNI extension when connecting to AWS IoT Core .\n\n`SNI_ONLY` : A certificate in `SNI_ONLY` mode is registered without an issuer CA. Devices with certificates in `SNI_ONLY` mode must send the SNI extension when connecting to AWS IoT Core ."
      },
      "certificatePem": {
        "type": "string",
        "description": "The certificate data in PEM format. Requires SNI_ONLY for the certificate mode or the accompanying CACertificatePem for registration."
      },
      "certificateSigningRequest": {
        "type": "string",
        "description": "The certificate signing request (CSR)."
      },
      "status": {
        "$ref": "#/types/aws-native:iot:CertificateStatus",
        "description": "The status of the certificate.\n\nValid values are ACTIVE, INACTIVE, REVOKED, PENDING_TRANSFER, and PENDING_ACTIVATION.\n\nThe status value REGISTER_INACTIVE is deprecated and should not be used."
      }
    }
  },
  "aws-native:iot:Command": {
    "cfTypeName": "AWS::IoT::Command",
    "properties": {
      "commandId": {
        "type": "string",
        "description": "The unique identifier for the command."
      },
      "createdAt": {
        "type": "string",
        "description": "The date and time when the command was created."
      },
      "deprecated": {
        "type": "boolean",
        "description": "A flag indicating whether the command is deprecated."
      },
      "description": {
        "type": "string",
        "description": "The description of the command."
      },
      "displayName": {
        "type": "string",
        "description": "The display name for the command."
      },
      "lastUpdatedAt": {
        "type": "string",
        "description": "The date and time when the command was last updated."
      },
      "mandatoryParameters": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:iot:CommandParameter"
        },
        "description": "The list of mandatory parameters for the command."
      },
      "namespace": {
        "$ref": "#/types/aws-native:iot:CommandNamespace",
        "description": "The namespace to which the command belongs."
      },
      "payload": {
        "$ref": "#/types/aws-native:iot:CommandPayload",
        "description": "The payload associated with the command."
      },
      "pendingDeletion": {
        "type": "boolean",
        "description": "A flag indicating whether the command is pending deletion."
      },
      "roleArn": {
        "type": "string",
        "description": "The customer role associated with the command."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to be associated with the command."
      }
    }
  },
  "aws-native:iot:JobTemplate": {
    "cfTypeName": "AWS::IoT::JobTemplate",
    "properties": {
      "abortConfig": {
        "$ref": "#/types/aws-native:iot:AbortConfigProperties",
        "description": "The criteria that determine when and how a job abort takes place."
      },
      "description": {
        "type": "string",
        "description": "A description of the Job Template."
      },
      "destinationPackageVersions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The package version Amazon Resource Names (ARNs) that are installed on the device’s reserved named shadow ( `$package` ) when the job successfully completes.\n\n*Note:* Up to 25 package version ARNS are allowed."
      },
      "document": {
        "type": "string",
        "description": "The job document. Required if you don't specify a value for documentSource."
      },
      "documentSource": {
        "type": "string",
        "description": "An S3 link to the job document to use in the template. Required if you don't specify a value for document."
      },
      "jobArn": {
        "type": "string",
        "description": "Optional for copying a JobTemplate from a pre-existing Job configuration."
      },
      "jobExecutionsRetryConfig": {
        "$ref": "#/types/aws-native:iot:JobExecutionsRetryConfigProperties",
        "description": "Allows you to create the criteria to retry a job."
      },
      "jobExecutionsRolloutConfig": {
        "$ref": "#/types/aws-native:iot:JobExecutionsRolloutConfigProperties",
        "description": "Allows you to create a staged rollout of a job."
      },
      "jobTemplateId": {
        "type": "string",
        "description": "A unique identifier for the job template. We recommend using a UUID. Alpha-numeric characters, \"-\", and \"_\" are valid for use here."
      },
      "maintenanceWindows": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:iot:JobTemplateMaintenanceWindow"
        },
        "description": "An optional configuration within the SchedulingConfig to setup a recurring maintenance window with a predetermined start time and duration for the rollout of a job document to all devices in a target group for a job."
      },
      "presignedUrlConfig": {
        "$ref": "#/types/aws-native:iot:PresignedUrlConfigProperties",
        "description": "Configuration for pre-signed S3 URLs."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "Metadata that can be used to manage the JobTemplate."
      },
      "timeoutConfig": {
        "$ref": "#/types/aws-native:iot:TimeoutConfigProperties",
        "description": "Specifies the amount of time each device has to finish its execution of the job."
      }
    }
  },
  "aws-native:iot:Logging": {
    "cfTypeName": "AWS::IoT::Logging",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "Your 12-digit account ID (used as the primary identifier for the CloudFormation resource)."
      },
      "defaultLogLevel": {
        "$ref": "#/types/aws-native:iot:LoggingDefaultLogLevel",
        "description": "The log level to use. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED."
      },
      "roleArn": {
        "type": "string",
        "description": "The ARN of the role that allows IoT to write to Cloudwatch logs."
      }
    }
  },
  "aws-native:iot:ResourceSpecificLogging": {
    "cfTypeName": "AWS::IoT::ResourceSpecificLogging",
    "properties": {
      "logLevel": {
        "$ref": "#/types/aws-native:iot:ResourceSpecificLoggingLogLevel",
        "description": "The log level for a specific target. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED."
      },
      "targetName": {
        "type": "string",
        "description": "The target name."
      },
      "targetType": {
        "$ref": "#/types/aws-native:iot:ResourceSpecificLoggingTargetType",
        "description": "The target type. Value must be THING_GROUP, CLIENT_ID, SOURCE_IP, PRINCIPAL_ID, or EVENT_TYPE."
      }
    }
  },
  "aws-native:iot:RoleAlias": {
    "cfTypeName": "AWS::IoT::RoleAlias",
    "properties": {
      "credentialDurationSeconds": {
        "type": "integer",
        "description": "The number of seconds for which the credential is valid."
      },
      "roleAlias": {
        "type": "string",
        "description": "The role alias.",
        "language": {
          "csharp": {
            "name": "RoleAliasValue"
          }
        }
      },
      "roleArn": {
        "type": "string",
        "description": "The role ARN."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) ."
      }
    }
  },
  "aws-native:iot:TopicRuleDestination": {
    "cfTypeName": "AWS::IoT::TopicRuleDestination",
    "properties": {
      "httpUrlProperties": {
        "$ref": "#/types/aws-native:iot:TopicRuleDestinationHttpUrlDestinationSummary",
        "description": "HTTP URL destination properties."
      },
      "status": {
        "$ref": "#/types/aws-native:iot:TopicRuleDestinationStatus",
        "description": "The status of the TopicRuleDestination."
      },
      "vpcProperties": {
        "$ref": "#/types/aws-native:iot:TopicRuleDestinationVpcDestinationProperties",
        "description": "VPC destination properties."
      }
    }
  },
  "aws-native:iotcoredeviceadvisor:SuiteDefinition": {
    "cfTypeName": "AWS::IoTCoreDeviceAdvisor::SuiteDefinition",
    "properties": {
      "suiteDefinitionConfiguration": {
        "$ref": "#/types/aws-native:iotcoredeviceadvisor:SuiteDefinitionConfigurationProperties",
        "description": "The configuration of the Suite Definition. Listed below are the required elements of the `SuiteDefinitionConfiguration` .\n\n- ***devicePermissionRoleArn*** - The device permission arn.\n\nThis is a required element.\n\n*Type:* String\n- ***devices*** - The list of configured devices under test. For more information on devices under test, see [DeviceUnderTest](https://docs.aws.amazon.com/iot/latest/apireference/API_iotdeviceadvisor_DeviceUnderTest.html)\n\nNot a required element.\n\n*Type:* List of devices under test\n- ***intendedForQualification*** - The tests intended for qualification in a suite.\n\nNot a required element.\n\n*Type:* Boolean\n- ***rootGroup*** - The test suite root group. For more information on creating and using root groups see the [Device Advisor workflow](https://docs.aws.amazon.com/iot/latest/developerguide/device-advisor-workflow.html) .\n\nThis is a required element.\n\n*Type:* String\n- ***suiteDefinitionName*** - The Suite Definition Configuration name.\n\nThis is a required element.\n\n*Type:* String"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:iotsitewise:AccessPolicy": {
    "cfTypeName": "AWS::IoTSiteWise::AccessPolicy",
    "properties": {
      "accessPolicyIdentity": {
        "$ref": "#/types/aws-native:iotsitewise:AccessPolicyIdentity",
        "description": "The identity for this access policy. Choose either a user or a group but not both."
      },
      "accessPolicyPermission": {
        "type": "string",
        "description": "The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER."
      },
      "accessPolicyResource": {
        "$ref": "#/types/aws-native:iotsitewise:AccessPolicyResource",
        "description": "The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both."
      }
    }
  },
  "aws-native:iottwinmaker:ComponentType": {
    "cfTypeName": "AWS::IoTTwinMaker::ComponentType",
    "properties": {
      "componentTypeId": {
        "type": "string",
        "description": "The ID of the component type."
      },
      "compositeComponentTypes": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:iottwinmaker:ComponentTypeCompositeComponentType"
        },
        "description": "An map of the composite component types in the component type. Each composite component type's key must be unique to this map."
      },
      "description": {
        "type": "string",
        "description": "The description of the component type."
      },
      "extendsFrom": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specifies the parent component type to extend."
      },
      "functions": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:iottwinmaker:ComponentTypeFunction"
        },
        "description": "a Map of functions in the component type. Each function's key must be unique to this map."
      },
      "isSingleton": {
        "type": "boolean",
        "description": "A Boolean value that specifies whether an entity can have more than one component of this type."
      },
      "propertyDefinitions": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:iottwinmaker:ComponentTypePropertyDefinition"
        },
        "description": "An map of the property definitions in the component type. Each property definition's key must be unique to this map."
      },
      "propertyGroups": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:iottwinmaker:ComponentTypePropertyGroup"
        },
        "description": "An map of the property groups in the component type. Each property group's key must be unique to this map."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A map of key-value pairs to associate with a resource."
      },
      "workspaceId": {
        "type": "string",
        "description": "The ID of the workspace that contains the component type."
      }
    }
  },
  "aws-native:iottwinmaker:Scene": {
    "cfTypeName": "AWS::IoTTwinMaker::Scene",
    "properties": {
      "capabilities": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of capabilities that the scene uses to render."
      },
      "contentLocation": {
        "type": "string",
        "description": "The relative path that specifies the location of the content definition file."
      },
      "description": {
        "type": "string",
        "description": "The description of the scene."
      },
      "sceneId": {
        "type": "string",
        "description": "The ID of the scene."
      },
      "sceneMetadata": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A key-value pair of scene metadata for the scene."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A key-value pair to associate with a resource."
      },
      "workspaceId": {
        "type": "string",
        "description": "The ID of the scene."
      }
    }
  },
  "aws-native:iottwinmaker:SyncJob": {
    "cfTypeName": "AWS::IoTTwinMaker::SyncJob",
    "properties": {
      "syncRole": {
        "type": "string",
        "description": "The IAM Role that execute SyncJob."
      },
      "syncSource": {
        "type": "string",
        "description": "The source of the SyncJob."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A key-value pair to associate with a resource."
      },
      "workspaceId": {
        "type": "string",
        "description": "The ID of the workspace."
      }
    }
  },
  "aws-native:iottwinmaker:Workspace": {
    "cfTypeName": "AWS::IoTTwinMaker::Workspace",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description of the workspace."
      },
      "role": {
        "type": "string",
        "description": "The ARN of the execution role associated with the workspace."
      },
      "s3Location": {
        "type": "string",
        "description": "The ARN of the S3 bucket where resources associated with the workspace are stored."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "A map of key-value pairs to associate with a resource."
      },
      "workspaceId": {
        "type": "string",
        "description": "The ID of the workspace."
      }
    }
  },
  "aws-native:ivs:StreamKey": {
    "cfTypeName": "AWS::IVS::StreamKey",
    "properties": {
      "channelArn": {
        "type": "string",
        "description": "Channel ARN for the stream."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of key-value pairs that contain metadata for the asset model."
      }
    }
  },
  "aws-native:kinesis:ResourcePolicy": {
    "cfTypeName": "AWS::Kinesis::ResourcePolicy",
    "properties": {
      "resourceArn": {
        "type": "string",
        "description": "The ARN of the AWS Kinesis resource to which the policy applies."
      },
      "resourcePolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document containing permissions to add to the specified resource. In IAM, you must provide policy documents in JSON format. However, in CloudFormation you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Kinesis::ResourcePolicy` for more information about the expected schema for this property.",
        "language": {
          "csharp": {
            "name": "ResourcePolicyValue"
          }
        }
      }
    }
  },
  "aws-native:kms:Key": {
    "cfTypeName": "AWS::KMS::Key",
    "properties": {
      "bypassPolicyLockoutSafetyCheck": {
        "type": "boolean",
        "description": "Skips (\"bypasses\") the key policy lockout safety check. The default value is false.\n  Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.\n For more information, see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#prevent-unmanageable-key) in the *Developer Guide*.\n  Use this parameter only when you intend to prevent the principal that is making the request from making a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html) request on the KMS key."
      },
      "description": {
        "type": "string",
        "description": "A description of the KMS key. Use a description that helps you to distinguish this KMS key from others in the account, such as its intended use."
      },
      "enableKeyRotation": {
        "type": "boolean",
        "description": "Enables automatic rotation of the key material for the specified KMS key. By default, automatic key rotation is not enabled.\n  KMS supports automatic rotation only for symmetric encryption KMS keys (``KeySpec`` = ``SYMMETRIC_DEFAULT``). For asymmetric KMS keys, HMAC KMS keys, and KMS keys with Origin ``EXTERNAL``, omit the ``EnableKeyRotation`` property or set it to ``false``.\n To enable automatic key rotation of the key material for a multi-Region KMS key, set ``EnableKeyRotation`` to ``true`` on the primary key (created by using ``AWS::KMS::Key``). KMS copies the rotation status to all replica keys. For details, see [Rotating multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-rotate) in the *Developer Guide*.\n When you enable automatic rotation, KMS automatically creates new key material for the KMS key one year after the enable date and every year thereafter. KMS retains all key material until you delete the KMS key. For detailed information about automatic key rotation, see [Rotating KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html) in the *Developer Guide*."
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies whether the KMS key is enabled. Disabled KMS keys cannot be used in cryptographic operations.\n When ``Enabled`` is ``true``, the *key state* of the KMS key is ``Enabled``. When ``Enabled`` is ``false``, the key state of the KMS key is ``Disabled``. The default value is ``true``.\n The actual key state of the KMS key might be affected by actions taken outside of CloudFormation, such as running the [EnableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKey.html), [DisableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html), or [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html) operations.\n For information about the key states of a KMS key, see [Key state: Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html) in the *Developer Guide*."
      },
      "keyPolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "The key policy to attach to the KMS key.\n If you provide a key policy, it must meet the following criteria:\n  +  The key policy must allow the caller to make a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html) request on the KMS key. This reduces the risk that the KMS key becomes unmanageable. For more information, see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) in the *Developer Guide*. (To omit this condition, set ``BypassPolicyLockoutSafetyCheck`` to true.)\n  +  Each statement in the key policy must contain one or more principals. The principals in the key policy must exist and be visible to KMS. When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before including the new principal in a key policy because the new principal might not be immediately visible to KMS. For more information, see [Changes that I make are not always immediately visible](https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency) in the *User Guide*.\n  \n If you do not provide a key policy, KMS attaches a default key policy to the KMS key. For more information, see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) in the *Developer Guide*.\n A key policy document can include only the following characters:\n  +  Printable ASCII characters\n  +  Printable characters in the Basic Latin and Latin-1 Supplement character set\n  +  The tab (``\\u0009``), line feed (``\\u000A``), and carriage return (``\\u000D``) special characters\n  \n  *Minimum*: ``1`` \n  *Maximum*: ``32768``\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::KMS::Key` for more information about the expected schema for this property."
      },
      "keySpec": {
        "$ref": "#/types/aws-native:kms:KeySpec",
        "description": "Specifies the type of KMS key to create. The default value, ``SYMMETRIC_DEFAULT``, creates a KMS key with a 256-bit symmetric key for encryption and decryption. In China Regions, ``SYMMETRIC_DEFAULT`` creates a 128-bit symmetric key that uses SM4 encryption. You can't change the ``KeySpec`` value after the KMS key is created. For help choosing a key spec for your KMS key, see [Choosing a KMS key type](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html) in the *Developer Guide*.\n The ``KeySpec`` property determines the type of key material in the KMS key and the algorithms that the KMS key supports. To further restrict the algorithms that can be used with the KMS key, use a condition key in its key policy or IAM policy. For more information, see [condition keys](https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms) in the *Developer Guide*.\n  If you change the value of the ``KeySpec`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This prevents you from accidentally deleting a KMS key by changing an immutable property value.\n    [services that are integrated with](https://docs.aws.amazon.com/kms/features/#AWS_Service_Integration) use symmetric encryption KMS keys to protect your data. These services do not support encryption with asymmetric KMS keys. For help determining whether a KMS key is asymmetric, see [Identifying asymmetric KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/find-symm-asymm.html) in the *Developer Guide*.\n   KMS supports the following key specs for KMS keys:\n  +  Symmetric encryption key (default)\n  +   ``SYMMETRIC_DEFAULT`` (AES-256-GCM)\n  \n  +  HMAC keys (symmetric)\n  +   ``HMAC_224`` \n  +   ``HMAC_256`` \n  +   ``HMAC_384`` \n  +   ``HMAC_512`` \n  \n  +  Asymmetric RSA key pairs (encryption and decryption *or* signing and verification)\n  +   ``RSA_2048`` \n  +   ``RSA_3072`` \n  +   ``RSA_4096`` \n  \n  +  Asymmetric NIST-recommended elliptic curve key pairs (signing and verification *or* deriving shared secrets)\n  +   ``ECC_NIST_P256`` (secp256r1)\n  +   ``ECC_NIST_P384`` (secp384r1)\n  +   ``ECC_NIST_P521`` (secp521r1)\n  \n  +  Other asymmetric elliptic curve key pairs (signing and verification)\n  +   ``ECC_SECG_P256K1`` (secp256k1), commonly used for cryptocurrencies.\n  \n  +  SM2 key pairs (encryption and decryption *or* signing and verification *or* deriving shared secrets)\n  +   ``SM2`` (China Regions only)"
      },
      "keyUsage": {
        "$ref": "#/types/aws-native:kms:KeyUsage",
        "description": "Determines the [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations) for which you can use the KMS key. The default value is ``ENCRYPT_DECRYPT``. This property is required for asymmetric KMS keys and HMAC KMS keys. You can't change the ``KeyUsage`` value after the KMS key is created.\n  If you change the value of the ``KeyUsage`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This prevents you from accidentally deleting a KMS key by changing an immutable property value.\n  Select only one valid value.\n  +  For symmetric encryption KMS keys, omit the parameter or specify ``ENCRYPT_DECRYPT``.\n  +  For HMAC KMS keys (symmetric), specify ``GENERATE_VERIFY_MAC``.\n  +  For asymmetric KMS keys with RSA key pairs, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``.\n  +  For asymmetric KMS keys with NIST-recommended elliptic curve key pairs, specify ``SIGN_VERIFY`` or ``KEY_AGREEMENT``.\n  +  For asymmetric KMS keys with ``ECC_SECG_P256K1`` key pairs specify ``SIGN_VERIFY``.\n  +  For asymmetric KMS keys with SM2 key pairs (China Regions only), specify ``ENCRYPT_DECRYPT``, ``SIGN_VERIFY``, or ``KEY_AGREEMENT``."
      },
      "multiRegion": {
        "type": "boolean",
        "description": "Creates a multi-Region primary key that you can replicate in other AWS-Regions. You can't change the ``MultiRegion`` value after the KMS key is created.\n For a list of AWS-Regions in which multi-Region keys are supported, see [Multi-Region keys in](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html) in the **.\n  If you change the value of the ``MultiRegion`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This prevents you from accidentally deleting a KMS key by changing an immutable property value.\n  For a multi-Region key, set to this property to ``true``. For a single-Region key, omit this property or set it to ``false``. The default value is ``false``.\n  *Multi-Region keys* are an KMS feature that lets you create multiple interoperable KMS keys in different AWS-Regions. Because these KMS keys have the same key ID, key material, and other metadata, you can use them to encrypt data in one AWS-Region and decrypt it in a different AWS-Region without making a cross-Region call or exposing the plaintext data. For more information, see [Multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html) in the *Developer Guide*.\n You can create a symmetric encryption, HMAC, or asymmetric multi-Region KMS key, and you can create a multi-Region key with imported key material. However, you cannot create a multi-Region key in a custom key store.\n To create a replica of this primary key in a different AWS-Region , create an [AWS::KMS::ReplicaKey](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html) resource in a CloudFormation stack in the replica Region. Specify the key ARN of this primary key."
      },
      "origin": {
        "$ref": "#/types/aws-native:kms:KeyOrigin",
        "description": "The source of the key material for the KMS key. You cannot change the origin after you create the KMS key. The default is ``AWS_KMS``, which means that KMS creates the key material.\n To [create a KMS key with no key material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-create-cmk.html) (for imported key material), set this value to ``EXTERNAL``. For more information about importing key material into KMS, see [Importing Key Material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html) in the *Developer Guide*.\n You can ignore ``ENABLED`` when Origin is ``EXTERNAL``. When a KMS key with Origin ``EXTERNAL`` is created, the key state is ``PENDING_IMPORT`` and ``ENABLED`` is ``false``. After you import the key material, ``ENABLED`` updated to ``true``. The KMS key can then be used for Cryptographic Operations. \n   CFN doesn't support creating an ``Origin`` parameter of the ``AWS_CLOUDHSM`` or ``EXTERNAL_KEY_STORE`` values."
      },
      "pendingWindowInDays": {
        "type": "integer",
        "description": "Specifies the number of days in the waiting period before KMS deletes a KMS key that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days.\n When you remove a KMS key from a CloudFormation stack, KMS schedules the KMS key for deletion and starts the mandatory waiting period. The ``PendingWindowInDays`` property determines the length of waiting period. During the waiting period, the key state of KMS key is ``Pending Deletion`` or ``Pending Replica Deletion``, which prevents the KMS key from being used in cryptographic operations. When the waiting period expires, KMS permanently deletes the KMS key.\n  KMS will not delete a [multi-Region primary key](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html) that has replica keys. If you remove a multi-Region primary key from a CloudFormation stack, its key state changes to ``PendingReplicaDeletion`` so it cannot be replicated or used in cryptographic operations. This state can persist indefinitely. When the last of its replica keys is deleted, the key state of the primary key changes to ``PendingDeletion`` and the waiting period specified by ``PendingWindowInDays`` begins. When this waiting period expires, KMS deletes the primary key. For details, see [Deleting multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-delete.html) in the *Developer Guide*.\n You cannot use a CloudFormation template to cancel deletion of the KMS key after you remove it from the stack, regardless of the waiting period. If you specify a KMS key in your template, even one with the same name, CloudFormation creates a new KMS key. To cancel deletion of a KMS key, use the KMS console or the [CancelKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_CancelKeyDeletion.html) operation.\n For information about the ``Pending Deletion`` and ``Pending Replica Deletion`` key states, see [Key state: Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html) in the *Developer Guide*. For more information about deleting KMS keys, see the [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html) operation in the *API Reference* and [Deleting KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html) in the *Developer Guide*."
      },
      "rotationPeriodInDays": {
        "type": "integer",
        "description": "Specifies a custom period of time between each rotation date. If no value is specified, the default value is 365 days.\n The rotation period defines the number of days after you enable automatic key rotation that KMS will rotate your key material, and the number of days between each automatic rotation thereafter.\n You can use the [kms:RotationPeriodInDays](https://docs.aws.amazon.com/kms/latest/developerguide/conditions-kms.html#conditions-kms-rotation-period-in-days) condition key to further constrain the values that principals can specify in the ``RotationPeriodInDays`` parameter.\n For more information about rotating KMS keys and automatic rotation, see [Rotating keys](https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html) in the *Developer Guide*."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Assigns one or more tags to the replica key.\n  Tagging or untagging a KMS key can allow or deny permission to the KMS key. For details, see [ABAC for](https://docs.aws.amazon.com/kms/latest/developerguide/abac.html) in the *Developer Guide*.\n  For information about tags in KMS, see [Tagging keys](https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html) in the *Developer Guide*. For information about tags in CloudFormation, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)."
      }
    }
  },
  "aws-native:kms:ReplicaKey": {
    "cfTypeName": "AWS::KMS::ReplicaKey",
    "properties": {
      "description": {
        "type": "string",
        "description": "A description of the AWS KMS key. Use a description that helps you to distinguish this AWS KMS key from others in the account, such as its intended use."
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies whether the AWS KMS key is enabled. Disabled AWS KMS keys cannot be used in cryptographic operations."
      },
      "keyPolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "The key policy that authorizes use of the AWS KMS key. The key policy must observe the following rules.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::KMS::ReplicaKey` for more information about the expected schema for this property."
      },
      "pendingWindowInDays": {
        "type": "integer",
        "description": "Specifies the number of days in the waiting period before AWS KMS deletes an AWS KMS key that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days."
      },
      "primaryKeyArn": {
        "type": "string",
        "description": "Identifies the primary AWS KMS key to create a replica of. Specify the Amazon Resource Name (ARN) of the AWS KMS key. You cannot specify an alias or key ID. For help finding the ARN, see Finding the Key ID and ARN in the AWS Key Management Service Developer Guide."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:lakeformation:PrincipalPermissions": {
    "cfTypeName": "AWS::LakeFormation::PrincipalPermissions",
    "properties": {
      "catalog": {
        "type": "string",
        "description": "The identifier for the GLUDC. By default, the account ID. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment."
      },
      "permissions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:lakeformation:PrincipalPermissionsPermission"
        },
        "description": "The permissions granted or revoked."
      },
      "permissionsWithGrantOption": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:lakeformation:PrincipalPermissionsPermission"
        },
        "description": "Indicates the ability to grant permissions (as a subset of permissions granted)."
      },
      "principal": {
        "$ref": "#/types/aws-native:lakeformation:PrincipalPermissionsDataLakePrincipal",
        "description": "The principal to be granted a permission."
      },
      "resource": {
        "$ref": "#/types/aws-native:lakeformation:PrincipalPermissionsResource",
        "description": "The resource to be granted or revoked permissions."
      }
    }
  },
  "aws-native:lakeformation:Tag": {
    "cfTypeName": "AWS::LakeFormation::Tag",
    "properties": {
      "catalogId": {
        "type": "string",
        "description": "The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment."
      },
      "tagKey": {
        "type": "string",
        "description": "The key-name for the LF-tag."
      },
      "tagValues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of possible values an attribute can take."
      }
    }
  },
  "aws-native:lakeformation:TagAssociation": {
    "cfTypeName": "AWS::LakeFormation::TagAssociation",
    "properties": {
      "lfTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:lakeformation:TagAssociationLfTagPair"
        },
        "description": "List of Lake Formation Tags to associate with the Lake Formation Resource"
      },
      "resource": {
        "$ref": "#/types/aws-native:lakeformation:TagAssociationResource",
        "description": "Resource to tag with the Lake Formation Tags"
      }
    }
  },
  "aws-native:lambda:CodeSigningConfig": {
    "cfTypeName": "AWS::Lambda::CodeSigningConfig",
    "properties": {
      "allowedPublishers": {
        "$ref": "#/types/aws-native:lambda:CodeSigningConfigAllowedPublishers",
        "description": "When the CodeSigningConfig is later on attached to a function, the function code will be expected to be signed by profiles from this list"
      },
      "codeSigningPolicies": {
        "$ref": "#/types/aws-native:lambda:CodeSigningConfigCodeSigningPolicies",
        "description": "Policies to control how to act if a signature is invalid"
      },
      "description": {
        "type": "string",
        "description": "A description of the CodeSigningConfig"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of tags to apply to CodeSigningConfig resource"
      }
    }
  },
  "aws-native:lambda:EventInvokeConfig": {
    "cfTypeName": "AWS::Lambda::EventInvokeConfig",
    "properties": {
      "destinationConfig": {
        "$ref": "#/types/aws-native:lambda:EventInvokeConfigDestinationConfig",
        "description": "A destination for events after they have been sent to a function for processing.\n\n**Destinations** - *Function* - The Amazon Resource Name (ARN) of a Lambda function.\n- *Queue* - The ARN of a standard SQS queue.\n- *Bucket* - The ARN of an Amazon S3 bucket.\n- *Topic* - The ARN of a standard SNS topic.\n- *Event Bus* - The ARN of an Amazon EventBridge event bus.\n\n\u003e S3 buckets are supported only for on-failure destinations. To retain records of successful invocations, use another destination type."
      },
      "functionName": {
        "type": "string",
        "description": "The name of the Lambda function."
      },
      "maximumEventAgeInSeconds": {
        "type": "integer",
        "description": "The maximum age of a request that Lambda sends to a function for processing."
      },
      "maximumRetryAttempts": {
        "type": "integer",
        "description": "The maximum number of times to retry when the function returns an error."
      },
      "qualifier": {
        "type": "string",
        "description": "The identifier of a version or alias."
      }
    }
  },
  "aws-native:lambda:EventSourceMapping": {
    "cfTypeName": "AWS::Lambda::EventSourceMapping",
    "properties": {
      "amazonManagedKafkaEventSourceConfig": {
        "$ref": "#/types/aws-native:lambda:EventSourceMappingAmazonManagedKafkaEventSourceConfig",
        "description": "Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source."
      },
      "batchSize": {
        "type": "integer",
        "description": "The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n  +   *Amazon Kinesis* – Default 100. Max 10,000.\n  +   *Amazon DynamoDB Streams* – Default 100. Max 10,000.\n  +   *Amazon Simple Queue Service* – Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.\n  +   *Amazon Managed Streaming for Apache Kafka* – Default 100. Max 10,000.\n  +   *Self-managed Apache Kafka* – Default 100. Max 10,000.\n  +   *Amazon MQ (ActiveMQ and RabbitMQ)* – Default 100. Max 10,000.\n  +   *DocumentDB* – Default 100. Max 10,000."
      },
      "bisectBatchOnFunctionError": {
        "type": "boolean",
        "description": "(Kinesis and DynamoDB Streams only) If the function returns an error, split the batch in two and retry. The default value is false.\n  When using ``BisectBatchOnFunctionError``, check the ``BatchSize`` parameter in the ``OnFailure`` destination message's metadata. The ``BatchSize`` could be greater than 1 since LAM consolidates failed messages metadata when writing to the ``OnFailure`` destination."
      },
      "destinationConfig": {
        "$ref": "#/types/aws-native:lambda:EventSourceMappingDestinationConfig",
        "description": "(Kinesis, DynamoDB Streams, Amazon MSK, and self-managed Apache Kafka event sources only) A configuration object that specifies the destination of an event after Lambda processes it."
      },
      "documentDbEventSourceConfig": {
        "$ref": "#/types/aws-native:lambda:EventSourceMappingDocumentDbEventSourceConfig",
        "description": "Specific configuration settings for a DocumentDB event source."
      },
      "enabled": {
        "type": "boolean",
        "description": "When true, the event source mapping is active. When false, Lambda pauses polling and invocation.\n Default: True"
      },
      "eventSourceArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the event source.\n  +   *Amazon Kinesis* – The ARN of the data stream or a stream consumer.\n  +   *Amazon DynamoDB Streams* – The ARN of the stream.\n  +   *Amazon Simple Queue Service* – The ARN of the queue.\n  +   *Amazon Managed Streaming for Apache Kafka* – The ARN of the cluster or the ARN of the VPC connection (for [cross-account event source mappings](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#msk-multi-vpc)).\n  +   *Amazon MQ* – The ARN of the broker.\n  +   *Amazon DocumentDB* – The ARN of the DocumentDB change stream."
      },
      "filterCriteria": {
        "$ref": "#/types/aws-native:lambda:EventSourceMappingFilterCriteria",
        "description": "An object that defines the filter criteria that determine whether Lambda should process an event. For more information, see [Lambda event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html)."
      },
      "functionName": {
        "type": "string",
        "description": "The name or ARN of the Lambda function.\n  **Name formats**\n +   *Function name* – ``MyFunction``.\n  +   *Function ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction``.\n  +   *Version or Alias ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD``.\n  +   *Partial ARN* – ``123456789012:function:MyFunction``.\n  \n The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length."
      },
      "functionResponseTypes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:lambda:EventSourceMappingFunctionResponseTypesItem"
        },
        "description": "(Kinesis, DynamoDB Streams, and SQS) A list of current response type enums applied to the event source mapping.\n Valid Values: ``ReportBatchItemFailures``"
      },
      "kmsKeyArn": {
        "type": "string",
        "description": "The ARN of the KMSlong (KMS) customer managed key that Lambda uses to encrypt your function's [filter criteria](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-basics)."
      },
      "maximumBatchingWindowInSeconds": {
        "type": "integer",
        "description": "The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.\n  *Default (, , event sources)*: 0\n  *Default (, Kafka, , event sources)*: 500 ms\n  *Related setting:* For SQS event sources, when you set ``BatchSize`` to a value greater than 10, you must set ``MaximumBatchingWindowInSeconds`` to at least 1."
      },
      "maximumRecordAgeInSeconds": {
        "type": "integer",
        "description": "(Kinesis and DynamoDB Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.\n  The minimum valid value for maximum record age is 60s. Although values less than 60 and greater than -1 fall within the parameter's absolute range, they are not allowed"
      },
      "maximumRetryAttempts": {
        "type": "integer",
        "description": "(Kinesis and DynamoDB Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source."
      },
      "metricsConfig": {
        "$ref": "#/types/aws-native:lambda:EventSourceMappingMetricsConfig",
        "description": "The metrics configuration for your event source. For more information, see [Event source mapping metrics](https://docs.aws.amazon.com/lambda/latest/dg/monitoring-metrics-types.html#event-source-mapping-metrics)."
      },
      "parallelizationFactor": {
        "type": "integer",
        "description": "(Kinesis and DynamoDB Streams only) The number of batches to process concurrently from each shard. The default value is 1."
      },
      "provisionedPollerConfig": {
        "$ref": "#/types/aws-native:lambda:EventSourceMappingProvisionedPollerConfig",
        "description": "(Amazon MSK and self-managed Apache Kafka only) The provisioned mode configuration for the event source. For more information, see [provisioned mode](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html#invocation-eventsourcemapping-provisioned-mode)."
      },
      "queues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "(Amazon MQ) The name of the Amazon MQ broker destination queue to consume."
      },
      "scalingConfig": {
        "$ref": "#/types/aws-native:lambda:EventSourceMappingScalingConfig",
        "description": "(Amazon SQS only) The scaling configuration for the event source. For more information, see [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency)."
      },
      "selfManagedEventSource": {
        "$ref": "#/types/aws-native:lambda:EventSourceMappingSelfManagedEventSource",
        "description": "The self-managed Apache Kafka cluster for your event source."
      },
      "selfManagedKafkaEventSourceConfig": {
        "$ref": "#/types/aws-native:lambda:EventSourceMappingSelfManagedKafkaEventSourceConfig",
        "description": "Specific configuration settings for a self-managed Apache Kafka event source."
      },
      "sourceAccessConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:lambda:EventSourceMappingSourceAccessConfiguration"
        },
        "description": "An array of the authentication protocol, VPC components, or virtual host to secure and define your event source."
      },
      "startingPosition": {
        "type": "string",
        "description": "The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB.\n  +   *LATEST* - Read only new records.\n  +   *TRIM_HORIZON* - Process all available records.\n  +   *AT_TIMESTAMP* - Specify a time from which to start reading records."
      },
      "startingPositionTimestamp": {
        "type": "number",
        "description": "With ``StartingPosition`` set to ``AT_TIMESTAMP``, the time from which to start reading, in Unix time seconds. ``StartingPositionTimestamp`` cannot be in the future."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of tags to add to the event source mapping.\n  You must have the ``lambda:TagResource``, ``lambda:UntagResource``, and ``lambda:ListTags`` permissions for your [principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) to manage the CFN stack. If you don't have these permissions, there might be unexpected behavior with stack-level tags propagating to the resource during resource creation and update."
      },
      "topics": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The name of the Kafka topic."
      },
      "tumblingWindowInSeconds": {
        "type": "integer",
        "description": "(Kinesis and DynamoDB Streams only) The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources. A value of 0 seconds indicates no tumbling window."
      }
    }
  },
  "aws-native:lambda:LayerVersion": {
    "cfTypeName": "AWS::Lambda::LayerVersion",
    "properties": {
      "compatibleArchitectures": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of compatible instruction set architectures."
      },
      "compatibleRuntimes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of compatible function runtimes. Used for filtering with ListLayers and ListLayerVersions."
      },
      "content": {
        "$ref": "#/types/aws-native:lambda:LayerVersionContent",
        "description": "The function layer archive."
      },
      "description": {
        "type": "string",
        "description": "The description of the version."
      },
      "layerName": {
        "type": "string",
        "description": "The name or Amazon Resource Name (ARN) of the layer."
      },
      "licenseInfo": {
        "type": "string",
        "description": "The layer's software license."
      }
    }
  },
  "aws-native:lambda:LayerVersionPermission": {
    "cfTypeName": "AWS::Lambda::LayerVersionPermission",
    "properties": {
      "action": {
        "type": "string",
        "description": "The API action that grants access to the layer."
      },
      "layerVersionArn": {
        "type": "string",
        "description": "The name or Amazon Resource Name (ARN) of the layer."
      },
      "organizationId": {
        "type": "string",
        "description": "With the principal set to *, grant permission to all accounts in the specified organization."
      },
      "principal": {
        "type": "string",
        "description": "An account ID, or * to grant layer usage permission to all accounts in an organization, or all AWS accounts (if organizationId is not specified)."
      }
    }
  },
  "aws-native:lambda:Permission": {
    "cfTypeName": "AWS::Lambda::Permission",
    "properties": {
      "action": {
        "type": "string",
        "description": "The action that the principal can use on the function. For example, ``lambda:InvokeFunction`` or ``lambda:GetFunction``."
      },
      "eventSourceToken": {
        "type": "string",
        "description": "For Alexa Smart Home functions, a token that the invoker must supply."
      },
      "functionName": {
        "type": "string",
        "description": "The name or ARN of the Lambda function, version, or alias.\n  **Name formats**\n +   *Function name* – ``my-function`` (name-only), ``my-function:v1`` (with alias).\n  +   *Function ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:my-function``.\n  +   *Partial ARN* – ``123456789012:function:my-function``.\n  \n You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length."
      },
      "functionUrlAuthType": {
        "$ref": "#/types/aws-native:lambda:PermissionFunctionUrlAuthType",
        "description": "The type of authentication that your function URL uses. Set to ``AWS_IAM`` if you want to restrict access to authenticated users only. Set to ``NONE`` if you want to bypass IAM authentication to create a public endpoint. For more information, see [Security and auth model for Lambda function URLs](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html)."
      },
      "principal": {
        "type": "string",
        "description": "The AWS-service, AWS-account, IAM user, or IAM role that invokes the function. If you specify a service, use ``SourceArn`` or ``SourceAccount`` to limit who can invoke the function through that service."
      },
      "principalOrgId": {
        "type": "string",
        "description": "The identifier for your organization in AOlong. Use this to grant permissions to all the AWS-accounts under this organization."
      },
      "sourceAccount": {
        "type": "string",
        "description": "For AWS-service, the ID of the AWS-account that owns the resource. Use this together with ``SourceArn`` to ensure that the specified account owns the resource. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account."
      },
      "sourceArn": {
        "type": "string",
        "description": "For AWS-services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.\n Note that Lambda configures the comparison using the ``StringLike`` operator."
      }
    }
  },
  "aws-native:lambda:Url": {
    "cfTypeName": "AWS::Lambda::Url",
    "properties": {
      "authType": {
        "$ref": "#/types/aws-native:lambda:UrlAuthType",
        "description": "Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function URL."
      },
      "cors": {
        "$ref": "#/types/aws-native:lambda:UrlCors",
        "description": "The [Cross-Origin Resource Sharing (CORS)](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for your function URL."
      },
      "invokeMode": {
        "$ref": "#/types/aws-native:lambda:UrlInvokeMode",
        "description": "The invocation mode for the function's URL. Set to BUFFERED if you want to buffer responses before returning them to the client. Set to RESPONSE_STREAM if you want to stream responses, allowing faster time to first byte and larger response payload sizes. If not set, defaults to BUFFERED."
      },
      "qualifier": {
        "type": "string",
        "description": "The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed."
      },
      "targetFunctionArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the function associated with the Function URL."
      }
    }
  },
  "aws-native:lambda:Version": {
    "cfTypeName": "AWS::Lambda::Version",
    "properties": {
      "codeSha256": {
        "type": "string",
        "description": "Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property."
      },
      "description": {
        "type": "string",
        "description": "A description for the version to override the description in the function configuration. Updates are not supported for this property."
      },
      "functionName": {
        "type": "string",
        "description": "The name of the Lambda function."
      },
      "provisionedConcurrencyConfig": {
        "$ref": "#/types/aws-native:lambda:VersionProvisionedConcurrencyConfiguration",
        "description": "Specifies a provisioned concurrency configuration for a function's version. Updates are not supported for this property."
      },
      "runtimePolicy": {
        "$ref": "#/types/aws-native:lambda:VersionRuntimePolicy",
        "description": "Specifies the runtime management configuration of a function. Displays runtimeVersionArn only for Manual."
      }
    }
  },
  "aws-native:lex:BotVersion": {
    "cfTypeName": "AWS::Lex::BotVersion",
    "properties": {
      "botId": {
        "type": "string",
        "description": "The unique identifier of the bot."
      },
      "botVersionLocaleSpecification": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:lex:BotVersionLocaleSpecification"
        },
        "description": "Specifies the locales that Amazon Lex adds to this version. You can choose the Draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version."
      },
      "description": {
        "type": "string",
        "description": "The description of the version."
      }
    }
  },
  "aws-native:lex:ResourcePolicy": {
    "cfTypeName": "AWS::Lex::ResourcePolicy",
    "properties": {
      "policy": {
        "$ref": "#/types/aws-native:lex:ResourcePolicyPolicy",
        "description": "A resource policy to add to the resource. The policy is a JSON structure that contains one or more statements that define the policy. The policy must follow IAM syntax. If the policy isn't valid, Amazon Lex returns a validation exception."
      },
      "resourceArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to."
      }
    }
  },
  "aws-native:lightsail:Container": {
    "cfTypeName": "AWS::Lightsail::Container",
    "properties": {
      "containerServiceDeployment": {
        "$ref": "#/types/aws-native:lightsail:ContainerServiceDeployment",
        "description": "Describes a container deployment configuration of an Amazon Lightsail container service."
      },
      "isDisabled": {
        "type": "boolean",
        "description": "A Boolean value to indicate whether the container service is disabled."
      },
      "power": {
        "type": "string",
        "description": "The power specification for the container service."
      },
      "privateRegistryAccess": {
        "$ref": "#/types/aws-native:lightsail:ContainerPrivateRegistryAccess",
        "description": "A Boolean value to indicate whether the container service has access to private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories."
      },
      "publicDomainNames": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:lightsail:ContainerPublicDomainName"
        },
        "description": "The public domain names to use with the container service, such as example.com and www.example.com."
      },
      "scale": {
        "type": "integer",
        "description": "The scale specification for the container service."
      },
      "serviceName": {
        "type": "string",
        "description": "The name for the container service."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:lightsail:Database": {
    "cfTypeName": "AWS::Lightsail::Database",
    "properties": {
      "availabilityZone": {
        "type": "string",
        "description": "The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format."
      },
      "backupRetention": {
        "type": "boolean",
        "description": "When true, enables automated backup retention for your database. Updates are applied during the next maintenance window because this can result in an outage."
      },
      "caCertificateIdentifier": {
        "type": "string",
        "description": "Indicates the certificate that needs to be associated with the database."
      },
      "masterDatabaseName": {
        "type": "string",
        "description": "The name of the database to create when the Lightsail database resource is created. For MySQL, if this parameter isn't specified, no database is created in the database resource. For PostgreSQL, if this parameter isn't specified, a database named postgres is created in the database resource."
      },
      "masterUserPassword": {
        "type": "string",
        "description": "The password for the master user. The password can include any printable ASCII character except \"/\", \"\"\", or \"@\". It cannot contain spaces."
      },
      "masterUsername": {
        "type": "string",
        "description": "The name for the master user."
      },
      "preferredBackupWindow": {
        "type": "string",
        "description": "The daily time range during which automated backups are created for your new database if automated backups are enabled."
      },
      "preferredMaintenanceWindow": {
        "type": "string",
        "description": "The weekly time range during which system maintenance can occur on your new database."
      },
      "publiclyAccessible": {
        "type": "boolean",
        "description": "Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database."
      },
      "relationalDatabaseBlueprintId": {
        "type": "string",
        "description": "The blueprint ID for your new database. A blueprint describes the major engine version of a database."
      },
      "relationalDatabaseBundleId": {
        "type": "string",
        "description": "The bundle ID for your new database. A bundle describes the performance specifications for your database."
      },
      "relationalDatabaseName": {
        "type": "string",
        "description": "The name to use for your new Lightsail database resource."
      },
      "relationalDatabaseParameters": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:lightsail:DatabaseRelationalDatabaseParameter"
        },
        "description": "Update one or more parameters of the relational database."
      },
      "rotateMasterUserPassword": {
        "type": "boolean",
        "description": "When true, the master user password is changed to a new strong password generated by Lightsail. Use the get relational database master user password operation to get the new password."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:location:TrackerConsumer": {
    "cfTypeName": "AWS::Location::TrackerConsumer",
    "properties": {
      "consumerArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the geofence collection to be associated to tracker resource. Used when you need to specify a resource across all AWS .\n\n- Format example: `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer`"
      },
      "trackerName": {
        "type": "string",
        "description": "The name for the tracker resource.\n\nRequirements:\n\n- Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and underscores (_).\n- Must be a unique tracker resource name.\n- No spaces allowed. For example, `ExampleTracker` ."
      }
    }
  },
  "aws-native:logs:Delivery": {
    "cfTypeName": "AWS::Logs::Delivery",
    "properties": {
      "deliveryDestinationArn": {
        "type": "string",
        "description": "The ARN of the delivery destination that is associated with this delivery."
      },
      "deliverySourceName": {
        "type": "string",
        "description": "The name of the delivery source that is associated with this delivery."
      },
      "fieldDelimiter": {
        "type": "string",
        "description": "The field delimiter to use between record fields when the final output format of a delivery is in Plain , W3C , or Raw format."
      },
      "recordFields": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The list of record fields to be delivered to the destination, in order. If the delivery's log source has mandatory fields, they must be included in this list."
      },
      "s3EnableHiveCompatiblePath": {
        "type": "boolean",
        "description": "This parameter causes the S3 objects that contain delivered logs to use a prefix structure that allows for integration with Apache Hive."
      },
      "s3SuffixPath": {
        "type": "string",
        "description": "This string allows re-configuring the S3 object prefix to contain either static or variable sections. The valid variables to use in the suffix path will vary by each log source. See ConfigurationTemplate$allowedSuffixPathFields for more info on what values are supported in the suffix path for each log source."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags that have been assigned to this delivery."
      }
    }
  },
  "aws-native:logs:Transformer": {
    "cfTypeName": "AWS::Logs::Transformer",
    "properties": {
      "logGroupIdentifier": {
        "type": "string",
        "description": "Existing log group that you want to associate with this transformer."
      },
      "transformerConfig": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:logs:TransformerProcessor"
        },
        "description": "List of processors in a transformer"
      }
    }
  },
  "aws-native:m2:Deployment": {
    "cfTypeName": "AWS::M2::Deployment",
    "properties": {
      "applicationId": {
        "type": "string",
        "description": "The application ID."
      },
      "applicationVersion": {
        "type": "integer",
        "description": "The version number of the application to deploy"
      },
      "environmentId": {
        "type": "string",
        "description": "The environment ID."
      }
    }
  },
  "aws-native:macie:Session": {
    "cfTypeName": "AWS::Macie::Session",
    "properties": {
      "findingPublishingFrequency": {
        "$ref": "#/types/aws-native:macie:SessionFindingPublishingFrequency",
        "description": "A enumeration value that specifies how frequently finding updates are published."
      },
      "status": {
        "$ref": "#/types/aws-native:macie:SessionStatus",
        "description": "A enumeration value that specifies the status of the Macie Session."
      }
    }
  },
  "aws-native:mediapackage:Asset": {
    "cfTypeName": "AWS::MediaPackage::Asset",
    "properties": {
      "awsId": {
        "type": "string",
        "description": "The unique identifier for the Asset."
      },
      "egressEndpoints": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:mediapackage:AssetEgressEndpoint"
        },
        "description": "The list of egress endpoints available for the Asset."
      },
      "packagingGroupId": {
        "type": "string",
        "description": "The ID of the PackagingGroup for the Asset."
      },
      "resourceId": {
        "type": "string",
        "description": "The resource ID to include in SPEKE key requests."
      },
      "sourceArn": {
        "type": "string",
        "description": "ARN of the source object in S3."
      },
      "sourceRoleArn": {
        "type": "string",
        "description": "The IAM role_arn used to access the source S3 bucket."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A collection of tags associated with a resource"
      }
    }
  },
  "aws-native:mediapackage:Channel": {
    "cfTypeName": "AWS::MediaPackage::Channel",
    "properties": {
      "awsId": {
        "type": "string",
        "description": "The ID of the Channel."
      },
      "description": {
        "type": "string",
        "description": "A short text description of the Channel."
      },
      "egressAccessLogs": {
        "$ref": "#/types/aws-native:mediapackage:ChannelLogConfiguration",
        "description": "The configuration parameters for egress access logging."
      },
      "hlsIngest": {
        "$ref": "#/types/aws-native:mediapackage:ChannelHlsIngest",
        "description": "An HTTP Live Streaming (HLS) ingest resource configuration."
      },
      "ingressAccessLogs": {
        "$ref": "#/types/aws-native:mediapackage:ChannelLogConfiguration",
        "description": "The configuration parameters for egress access logging."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "A collection of tags associated with a resource"
      }
    }
  },
  "aws-native:mediapackage:OriginEndpoint": {
    "cfTypeName": "AWS::MediaPackage::OriginEndpoint",
    "properties": {
      "authorization": {
        "$ref": "#/types/aws-native:mediapackage:OriginEndpointAuthorization",
        "description": "Parameters for CDN authorization."
      },
      "awsId": {
        "type": "string",
        "description": "The ID of the OriginEndpoint."
      },
      "channelId": {
        "type": "string",
        "description": "The ID of the Channel the OriginEndpoint is associated with."
      },
      "cmafPackage": {
        "$ref": "#/types/aws-native:mediapackage:OriginEndpointCmafPackage",
        "description": "Parameters for Common Media Application Format (CMAF) packaging."
      },
      "dashPackage": {
        "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashPackage",
        "description": "Parameters for DASH packaging."
      },
      "description": {
        "type": "string",
        "description": "A short text description of the OriginEndpoint."
      },
      "hlsPackage": {
        "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsPackage",
        "description": "Parameters for Apple HLS packaging."
      },
      "manifestName": {
        "type": "string",
        "description": "A short string appended to the end of the OriginEndpoint URL."
      },
      "mssPackage": {
        "$ref": "#/types/aws-native:mediapackage:OriginEndpointMssPackage",
        "description": "Parameters for Microsoft Smooth Streaming packaging."
      },
      "origination": {
        "$ref": "#/types/aws-native:mediapackage:OriginEndpointOrigination",
        "description": "Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination"
      },
      "startoverWindowSeconds": {
        "type": "integer",
        "description": "Maximum duration (seconds) of content to retain for startover playback. If not specified, startover playback will be disabled for the OriginEndpoint."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A collection of tags associated with a resource"
      },
      "timeDelaySeconds": {
        "type": "integer",
        "description": "Amount of delay (seconds) to enforce on the playback of live content. If not specified, there will be no time delay in effect for the OriginEndpoint."
      },
      "whitelist": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint."
      }
    }
  },
  "aws-native:mediapackage:PackagingConfiguration": {
    "cfTypeName": "AWS::MediaPackage::PackagingConfiguration",
    "properties": {
      "awsId": {
        "type": "string",
        "description": "The ID of the PackagingConfiguration."
      },
      "cmafPackage": {
        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationCmafPackage",
        "description": "A CMAF packaging configuration."
      },
      "dashPackage": {
        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationDashPackage",
        "description": "A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration."
      },
      "hlsPackage": {
        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationHlsPackage",
        "description": "An HTTP Live Streaming (HLS) packaging configuration."
      },
      "mssPackage": {
        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationMssPackage",
        "description": "A Microsoft Smooth Streaming (MSS) PackagingConfiguration."
      },
      "packagingGroupId": {
        "type": "string",
        "description": "The ID of a PackagingGroup."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A collection of tags associated with a resource"
      }
    }
  },
  "aws-native:mediapackage:PackagingGroup": {
    "cfTypeName": "AWS::MediaPackage::PackagingGroup",
    "properties": {
      "authorization": {
        "$ref": "#/types/aws-native:mediapackage:PackagingGroupAuthorization",
        "description": "CDN Authorization"
      },
      "awsId": {
        "type": "string",
        "description": "The ID of the PackagingGroup."
      },
      "egressAccessLogs": {
        "$ref": "#/types/aws-native:mediapackage:PackagingGroupLogConfiguration",
        "description": "The configuration parameters for egress access logging."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "A collection of tags associated with a resource"
      }
    }
  },
  "aws-native:mediapackagev2:ChannelPolicy": {
    "cfTypeName": "AWS::MediaPackageV2::ChannelPolicy",
    "properties": {
      "channelGroupName": {
        "type": "string",
        "description": "The name of the channel group associated with the channel policy."
      },
      "channelName": {
        "type": "string",
        "description": "The name of the channel associated with the channel policy."
      },
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "The policy associated with the channel.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::MediaPackageV2::ChannelPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:mediapackagev2:OriginEndpointPolicy": {
    "cfTypeName": "AWS::MediaPackageV2::OriginEndpointPolicy",
    "properties": {
      "channelGroupName": {
        "type": "string",
        "description": "The name of the channel group associated with the origin endpoint policy."
      },
      "channelName": {
        "type": "string",
        "description": "The channel name associated with the origin endpoint policy."
      },
      "originEndpointName": {
        "type": "string",
        "description": "The name of the origin endpoint associated with the origin endpoint policy."
      },
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "The policy associated with the origin endpoint.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::MediaPackageV2::OriginEndpointPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:mediatailor:ChannelPolicy": {
    "cfTypeName": "AWS::MediaTailor::ChannelPolicy",
    "properties": {
      "channelName": {
        "type": "string",
        "description": "The name of the channel associated with this Channel Policy."
      },
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "\u003cp\u003eThe IAM policy for the channel. IAM policies are used to control access to your channel.\u003c/p\u003e\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::MediaTailor::ChannelPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:memorydb:MultiRegionCluster": {
    "cfTypeName": "AWS::MemoryDB::MultiRegionCluster",
    "properties": {
      "description": {
        "type": "string",
        "description": "Description of the multi region cluster."
      },
      "engine": {
        "type": "string",
        "description": "The engine type used by the multi region cluster."
      },
      "engineVersion": {
        "type": "string",
        "description": "The Redis engine version used by the multi region cluster."
      },
      "multiRegionClusterNameSuffix": {
        "type": "string",
        "description": "The name of the Multi Region cluster. This value must be unique as it also serves as the multi region cluster identifier."
      },
      "multiRegionParameterGroupName": {
        "type": "string",
        "description": "The name of the parameter group associated with the multi region cluster."
      },
      "nodeType": {
        "type": "string",
        "description": "The compute and memory capacity of the nodes in the multi region cluster."
      },
      "numShards": {
        "type": "integer",
        "description": "The number of shards the multi region cluster will contain."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this multi region cluster."
      },
      "tlsEnabled": {
        "type": "boolean",
        "description": "A flag that enables in-transit encryption when set to true.\n\nYou cannot modify the value of TransitEncryptionEnabled after the cluster is created. To enable in-transit encryption on a cluster you must set TransitEncryptionEnabled to true when you create a cluster."
      },
      "updateStrategy": {
        "$ref": "#/types/aws-native:memorydb:MultiRegionClusterUpdateStrategy",
        "description": "An enum string value that determines the update strategy for scaling. Possible values are 'COORDINATED' and 'UNCOORDINATED'. Default is 'COORDINATED'."
      }
    }
  },
  "aws-native:msk:BatchScramSecret": {
    "cfTypeName": "AWS::MSK::BatchScramSecret",
    "properties": {
      "clusterArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster."
      },
      "secretArnList": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of Amazon Resource Name (ARN)s of Secrets Manager secrets."
      }
    }
  },
  "aws-native:msk:ClusterPolicy": {
    "cfTypeName": "AWS::MSK::ClusterPolicy",
    "properties": {
      "clusterArn": {
        "type": "string",
        "description": "The arn of the cluster for the resource policy."
      },
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document containing permissions to add to the specified cluster.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::MSK::ClusterPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:msk:VpcConnection": {
    "cfTypeName": "AWS::MSK::VpcConnection",
    "properties": {
      "authentication": {
        "$ref": "#/types/aws-native:msk:VpcConnectionAuthentication",
        "description": "The type of private link authentication."
      },
      "clientSubnets": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The list of subnets in the client VPC to connect to."
      },
      "securityGroups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The security groups to attach to the ENIs for the broker nodes."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "An arbitrary set of tags (key-value pairs) you specify while creating the VPC connection."
      },
      "targetClusterArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the target cluster"
      },
      "vpcId": {
        "type": "string",
        "description": "The VPC ID of the remote client."
      }
    }
  },
  "aws-native:neptune:DbCluster": {
    "cfTypeName": "AWS::Neptune::DBCluster",
    "properties": {
      "associatedRoles": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:neptune:DbClusterDbClusterRole"
        },
        "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf."
      },
      "availabilityZones": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in."
      },
      "backupRetentionPeriod": {
        "type": "integer",
        "description": "Specifies the number of days for which automatic DB snapshots are retained."
      },
      "copyTagsToSnapshot": {
        "type": "boolean",
        "description": "A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default behaviour is not to copy them."
      },
      "dbClusterIdentifier": {
        "type": "string",
        "description": "The DB cluster identifier. Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster stored as a lowercase string."
      },
      "dbClusterParameterGroupName": {
        "type": "string",
        "description": "Provides the name of the DB cluster parameter group."
      },
      "dbInstanceParameterGroupName": {
        "type": "string",
        "description": "The name of the DB parameter group to apply to all instances of the DB cluster. Used only in case of a major EngineVersion upgrade request."
      },
      "dbPort": {
        "type": "integer",
        "description": "The port number on which the DB instances in the DB cluster accept connections. \n\nIf not specified, the default port used is `8182`. \n\nNote: `Port` property will soon be deprecated from this resource. Please update existing templates to rename it with new property `DBPort` having same functionalities."
      },
      "dbSubnetGroupName": {
        "type": "string",
        "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group."
      },
      "deletionProtection": {
        "type": "boolean",
        "description": "Indicates whether or not the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled."
      },
      "enableCloudwatchLogsExports": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specifies a list of log types that are enabled for export to CloudWatch Logs."
      },
      "engineVersion": {
        "type": "string",
        "description": "Indicates the database engine version."
      },
      "iamAuthEnabled": {
        "type": "boolean",
        "description": "True if mapping of Amazon Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false."
      },
      "kmsKeyId": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted property but don't specify this property, the default KMS key is used. If you specify this property, you must set the StorageEncrypted property to true."
      },
      "preferredBackupWindow": {
        "type": "string",
        "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod."
      },
      "preferredMaintenanceWindow": {
        "type": "string",
        "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC)."
      },
      "restoreToTime": {
        "type": "string",
        "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.\n\nIf a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.\n\nIf a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group."
      },
      "restoreType": {
        "type": "string",
        "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.\n\nIf a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.\n\nIf a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group."
      },
      "serverlessScalingConfiguration": {
        "$ref": "#/types/aws-native:neptune:DbClusterServerlessScalingConfiguration",
        "description": "Contains the scaling configuration used by the Neptune Serverless Instances within this DB cluster."
      },
      "snapshotIdentifier": {
        "type": "string",
        "description": "Specifies the identifier for a DB cluster snapshot. Must match the identifier of an existing snapshot.\n\nAfter you restore a DB cluster using a SnapshotIdentifier, you must specify the same SnapshotIdentifier for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed.\n\nHowever, if you don't specify the SnapshotIdentifier, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, the DB cluster is restored from the snapshot specified by the SnapshotIdentifier, and the original DB cluster is deleted."
      },
      "sourceDbClusterIdentifier": {
        "type": "string",
        "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.\n\nIf a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.\n\nIf a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group."
      },
      "storageEncrypted": {
        "type": "boolean",
        "description": "Indicates whether the DB cluster is encrypted.\n\nIf you specify the KmsKeyId property, then you must enable encryption and set this property to true.\n\nIf you enable the StorageEncrypted property but don't specify KmsKeyId property, then the default KMS key is used. If you specify KmsKeyId property, then that KMS Key is used to encrypt the database instances in the DB cluster.\n\nIf you specify the SourceDBClusterIdentifier property and don't specify this property or disable it. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the KmsKeyId property from the source cluster is used.\n\nIf you specify the DBSnapshotIdentifier and don't specify this property or disable it. The value is inherited from the snapshot, and the specified KmsKeyId property from the snapshot is used."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags assigned to this cluster."
      },
      "useLatestRestorableTime": {
        "type": "boolean",
        "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.\n\nIf a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.\n\nIf a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group."
      },
      "vpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Provides a list of VPC security groups that the DB cluster belongs to."
      }
    }
  },
  "aws-native:neptunegraph:PrivateGraphEndpoint": {
    "cfTypeName": "AWS::NeptuneGraph::PrivateGraphEndpoint",
    "properties": {
      "graphIdentifier": {
        "type": "string",
        "description": "The auto-generated Graph Id assigned by the service."
      },
      "securityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The security group Ids associated with the VPC where you want the private graph endpoint to be created, ie, the graph will be reachable from within the VPC."
      },
      "subnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The subnet Ids associated with the VPC where you want the private graph endpoint to be created, ie, the graph will be reachable from within the VPC."
      },
      "vpcId": {
        "type": "string",
        "description": "The VPC where you want the private graph endpoint to be created, ie, the graph will be reachable from within the VPC."
      }
    }
  },
  "aws-native:networkfirewall:LoggingConfiguration": {
    "cfTypeName": "AWS::NetworkFirewall::LoggingConfiguration",
    "properties": {
      "firewallArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the `Firewall` that the logging configuration is associated with. You can't change the firewall specification after you create the logging configuration."
      },
      "firewallName": {
        "type": "string",
        "description": "The name of the firewall that the logging configuration is associated with. You can't change the firewall specification after you create the logging configuration."
      },
      "loggingConfiguration": {
        "$ref": "#/types/aws-native:networkfirewall:LoggingConfiguration",
        "description": "Defines how AWS Network Firewall performs logging for a `Firewall` .",
        "language": {
          "csharp": {
            "name": "LoggingConfigurationValue"
          }
        }
      }
    }
  },
  "aws-native:networkmanager:ConnectAttachment": {
    "cfTypeName": "AWS::NetworkManager::ConnectAttachment",
    "properties": {
      "coreNetworkId": {
        "type": "string",
        "description": "ID of the CoreNetwork that the attachment will be attached to."
      },
      "edgeLocation": {
        "type": "string",
        "description": "Edge location of the attachment."
      },
      "networkFunctionGroupName": {
        "type": "string",
        "description": "The name of the network function group attachment."
      },
      "options": {
        "$ref": "#/types/aws-native:networkmanager:ConnectAttachmentOptions",
        "description": "Protocol options for connect attachment"
      },
      "proposedNetworkFunctionGroupChange": {
        "$ref": "#/types/aws-native:networkmanager:ConnectAttachmentProposedNetworkFunctionGroupChange",
        "description": "The attachment to move from one network function group to another."
      },
      "proposedSegmentChange": {
        "$ref": "#/types/aws-native:networkmanager:ConnectAttachmentProposedSegmentChange",
        "description": "The attachment to move from one segment to another."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags for the attachment."
      },
      "transportAttachmentId": {
        "type": "string",
        "description": "Id of transport attachment"
      }
    }
  },
  "aws-native:networkmanager:ConnectPeer": {
    "cfTypeName": "AWS::NetworkManager::ConnectPeer",
    "properties": {
      "bgpOptions": {
        "$ref": "#/types/aws-native:networkmanager:ConnectPeerBgpOptions",
        "description": "Bgp options for connect peer."
      },
      "connectAttachmentId": {
        "type": "string",
        "description": "The ID of the attachment to connect."
      },
      "coreNetworkAddress": {
        "type": "string",
        "description": "The IP address of a core network."
      },
      "insideCidrBlocks": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The inside IP addresses used for a Connect peer configuration."
      },
      "peerAddress": {
        "type": "string",
        "description": "The IP address of the Connect peer."
      },
      "subnetArn": {
        "type": "string",
        "description": "The subnet ARN for the connect peer."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:networkmanager:CoreNetwork": {
    "cfTypeName": "AWS::NetworkManager::CoreNetwork",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description of core network"
      },
      "globalNetworkId": {
        "type": "string",
        "description": "The ID of the global network that your core network is a part of."
      },
      "policyDocument": {
        "$ref": "pulumi.json#/Any",
        "description": "Live policy document for the core network, you must provide PolicyDocument in Json Format\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::NetworkManager::CoreNetwork` for more information about the expected schema for this property."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the global network."
      }
    }
  },
  "aws-native:networkmanager:CustomerGatewayAssociation": {
    "cfTypeName": "AWS::NetworkManager::CustomerGatewayAssociation",
    "properties": {
      "customerGatewayArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the customer gateway."
      },
      "deviceId": {
        "type": "string",
        "description": "The ID of the device"
      },
      "globalNetworkId": {
        "type": "string",
        "description": "The ID of the global network."
      },
      "linkId": {
        "type": "string",
        "description": "The ID of the link"
      }
    }
  },
  "aws-native:networkmanager:Device": {
    "cfTypeName": "AWS::NetworkManager::Device",
    "properties": {
      "awsLocation": {
        "$ref": "#/types/aws-native:networkmanager:DeviceAwsLocation",
        "description": "The Amazon Web Services location of the device, if applicable."
      },
      "description": {
        "type": "string",
        "description": "The description of the device."
      },
      "globalNetworkId": {
        "type": "string",
        "description": "The ID of the global network."
      },
      "location": {
        "$ref": "#/types/aws-native:networkmanager:DeviceLocation",
        "description": "The site location."
      },
      "model": {
        "type": "string",
        "description": "The device model"
      },
      "serialNumber": {
        "type": "string",
        "description": "The device serial number."
      },
      "siteId": {
        "type": "string",
        "description": "The site ID."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the device."
      },
      "type": {
        "type": "string",
        "description": "The device type."
      },
      "vendor": {
        "type": "string",
        "description": "The device vendor."
      }
    }
  },
  "aws-native:networkmanager:DirectConnectGatewayAttachment": {
    "cfTypeName": "AWS::NetworkManager::DirectConnectGatewayAttachment",
    "properties": {
      "coreNetworkId": {
        "type": "string",
        "description": "The ID of a core network for the Direct Connect Gateway attachment."
      },
      "directConnectGatewayArn": {
        "type": "string",
        "description": "The ARN of the Direct Connect Gateway."
      },
      "edgeLocations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Regions where the edges are located."
      },
      "proposedNetworkFunctionGroupChange": {
        "$ref": "#/types/aws-native:networkmanager:DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange",
        "description": "The attachment to move from one network function group to another."
      },
      "proposedSegmentChange": {
        "$ref": "#/types/aws-native:networkmanager:DirectConnectGatewayAttachmentProposedSegmentChange",
        "description": "The attachment to move from one segment to another."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags for the attachment."
      }
    }
  },
  "aws-native:networkmanager:GlobalNetwork": {
    "cfTypeName": "AWS::NetworkManager::GlobalNetwork",
    "properties": {
      "createdAt": {
        "type": "string",
        "description": "The date and time that the global network was created."
      },
      "description": {
        "type": "string",
        "description": "The description of the global network."
      },
      "state": {
        "type": "string",
        "description": "The state of the global network."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the global network."
      }
    }
  },
  "aws-native:networkmanager:Link": {
    "cfTypeName": "AWS::NetworkManager::Link",
    "properties": {
      "bandwidth": {
        "$ref": "#/types/aws-native:networkmanager:LinkBandwidth",
        "description": "The Bandwidth for the link."
      },
      "description": {
        "type": "string",
        "description": "The description of the link."
      },
      "globalNetworkId": {
        "type": "string",
        "description": "The ID of the global network."
      },
      "provider": {
        "type": "string",
        "description": "The provider of the link."
      },
      "siteId": {
        "type": "string",
        "description": "The ID of the site"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the link."
      },
      "type": {
        "type": "string",
        "description": "The type of the link."
      }
    }
  },
  "aws-native:networkmanager:LinkAssociation": {
    "cfTypeName": "AWS::NetworkManager::LinkAssociation",
    "properties": {
      "deviceId": {
        "type": "string",
        "description": "The ID of the device"
      },
      "globalNetworkId": {
        "type": "string",
        "description": "The ID of the global network."
      },
      "linkId": {
        "type": "string",
        "description": "The ID of the link"
      }
    }
  },
  "aws-native:networkmanager:Site": {
    "cfTypeName": "AWS::NetworkManager::Site",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description of the site."
      },
      "globalNetworkId": {
        "type": "string",
        "description": "The ID of the global network."
      },
      "location": {
        "$ref": "#/types/aws-native:networkmanager:SiteLocation",
        "description": "The location of the site."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the site."
      }
    }
  },
  "aws-native:networkmanager:SiteToSiteVpnAttachment": {
    "cfTypeName": "AWS::NetworkManager::SiteToSiteVpnAttachment",
    "properties": {
      "coreNetworkId": {
        "type": "string",
        "description": "The ID of a core network where you're creating a site-to-site VPN attachment."
      },
      "networkFunctionGroupName": {
        "type": "string",
        "description": "The name of the network function group attachment."
      },
      "proposedNetworkFunctionGroupChange": {
        "$ref": "#/types/aws-native:networkmanager:SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange",
        "description": "The attachment to move from one network function group to another."
      },
      "proposedSegmentChange": {
        "$ref": "#/types/aws-native:networkmanager:SiteToSiteVpnAttachmentProposedSegmentChange",
        "description": "The attachment to move from one segment to another."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags for the attachment."
      },
      "vpnConnectionArn": {
        "type": "string",
        "description": "The ARN of the site-to-site VPN attachment."
      }
    }
  },
  "aws-native:networkmanager:TransitGatewayPeering": {
    "cfTypeName": "AWS::NetworkManager::TransitGatewayPeering",
    "properties": {
      "coreNetworkId": {
        "type": "string",
        "description": "The Id of the core network that you want to peer a transit gateway to."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "transitGatewayArn": {
        "type": "string",
        "description": "The ARN (Amazon Resource Name) of the transit gateway that you will peer to a core network"
      }
    }
  },
  "aws-native:networkmanager:TransitGatewayRegistration": {
    "cfTypeName": "AWS::NetworkManager::TransitGatewayRegistration",
    "properties": {
      "globalNetworkId": {
        "type": "string",
        "description": "The ID of the global network."
      },
      "transitGatewayArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the transit gateway."
      }
    }
  },
  "aws-native:networkmanager:TransitGatewayRouteTableAttachment": {
    "cfTypeName": "AWS::NetworkManager::TransitGatewayRouteTableAttachment",
    "properties": {
      "networkFunctionGroupName": {
        "type": "string",
        "description": "The name of the network function group attachment."
      },
      "peeringId": {
        "type": "string",
        "description": "The Id of peering between transit gateway and core network."
      },
      "proposedNetworkFunctionGroupChange": {
        "$ref": "#/types/aws-native:networkmanager:TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange",
        "description": "The attachment to move from one network function group to another."
      },
      "proposedSegmentChange": {
        "$ref": "#/types/aws-native:networkmanager:TransitGatewayRouteTableAttachmentProposedSegmentChange",
        "description": "The attachment to move from one segment to another."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      },
      "transitGatewayRouteTableArn": {
        "type": "string",
        "description": "The Arn of transit gateway route table."
      }
    }
  },
  "aws-native:networkmanager:VpcAttachment": {
    "cfTypeName": "AWS::NetworkManager::VpcAttachment",
    "properties": {
      "coreNetworkId": {
        "type": "string",
        "description": "The ID of a core network for the VPC attachment."
      },
      "options": {
        "$ref": "#/types/aws-native:networkmanager:VpcAttachmentVpcOptions",
        "description": "Vpc options of the attachment."
      },
      "proposedNetworkFunctionGroupChange": {
        "$ref": "#/types/aws-native:networkmanager:VpcAttachmentProposedNetworkFunctionGroupChange",
        "description": "The attachment to move from one network function group to another."
      },
      "proposedSegmentChange": {
        "$ref": "#/types/aws-native:networkmanager:VpcAttachmentProposedSegmentChange",
        "description": "The attachment to move from one segment to another."
      },
      "subnetArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Subnet Arn list"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags for the attachment."
      },
      "vpcArn": {
        "type": "string",
        "description": "The ARN of the VPC."
      }
    }
  },
  "aws-native:oam:Link": {
    "cfTypeName": "AWS::Oam::Link",
    "properties": {
      "labelTemplate": {
        "type": "string",
        "description": "Specify a friendly human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.\n\nYou can include the following variables in your template:\n\n- `$AccountName` is the name of the account\n- `$AccountEmail` is a globally-unique email address, which includes the email domain, such as `mariagarcia@example.com`\n- `$AccountEmailNoDomain` is an email address without the domain name, such as `mariagarcia`"
      },
      "linkConfiguration": {
        "$ref": "#/types/aws-native:oam:LinkConfiguration",
        "description": "Use this structure to optionally create filters that specify that only some metric namespaces or log groups are to be shared from the source account to the monitoring account."
      },
      "resourceTypes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:oam:LinkResourceType"
        },
        "description": "An array of strings that define which types of data that the source account shares with the monitoring account. Valid values are `AWS::CloudWatch::Metric | AWS::Logs::LogGroup | AWS::XRay::Trace | AWS::ApplicationInsights::Application | AWS::InternetMonitor::Monitor | AWS::ApplicationSignals::Service | AWS::ApplicationSignals::ServiceLevelObjective` ."
      },
      "sinkIdentifier": {
        "type": "string",
        "description": "The ARN of the sink in the monitoring account that you want to link to. You can use [ListSinks](https://docs.aws.amazon.com/OAM/latest/APIReference/API_ListSinks.html) to find the ARNs of sinks."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Tags to apply to the link"
      }
    }
  },
  "aws-native:organizations:Organization": {
    "cfTypeName": "AWS::Organizations::Organization",
    "properties": {
      "featureSet": {
        "$ref": "#/types/aws-native:organizations:OrganizationFeatureSet",
        "description": "Specifies the feature set supported by the new organization. Each feature set supports different levels of functionality."
      }
    }
  },
  "aws-native:organizations:ResourcePolicy": {
    "cfTypeName": "AWS::Organizations::ResourcePolicy",
    "properties": {
      "content": {
        "$ref": "pulumi.json#/Any",
        "description": "The policy document. For AWS CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS CloudFormation always converts a YAML policy to JSON format before submitting it.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Organizations::ResourcePolicy` for more information about the expected schema for this property."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of tags that you want to attach to the resource policy"
      }
    }
  },
  "aws-native:panorama:PackageVersion": {
    "cfTypeName": "AWS::Panorama::PackageVersion",
    "properties": {
      "markLatest": {
        "type": "boolean",
        "description": "Whether to mark the new version as the latest version."
      },
      "ownerAccount": {
        "type": "string",
        "description": "An owner account."
      },
      "packageId": {
        "type": "string",
        "description": "A package ID."
      },
      "packageVersion": {
        "type": "string",
        "description": "A package version.",
        "language": {
          "csharp": {
            "name": "PackageVersionValue"
          }
        }
      },
      "patchVersion": {
        "type": "string",
        "description": "A patch version."
      },
      "updatedLatestPatchVersion": {
        "type": "string",
        "description": "If the version was marked latest, the new version to maker as latest."
      }
    }
  },
  "aws-native:paymentcryptography:Key": {
    "cfTypeName": "AWS::PaymentCryptography::Key",
    "properties": {
      "deriveKeyUsage": {
        "$ref": "#/types/aws-native:paymentcryptography:KeyDeriveKeyUsage",
        "description": "The cryptographic usage of an ECDH derived key as deﬁned in section A.5.2 of the TR-31 spec."
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies whether the key is enabled."
      },
      "exportable": {
        "type": "boolean",
        "description": "Specifies whether the key is exportable. This data is immutable after the key is created."
      },
      "keyAttributes": {
        "$ref": "#/types/aws-native:paymentcryptography:KeyAttributes",
        "description": "The role of the key, the algorithm it supports, and the cryptographic operations allowed with the key. This data is immutable after the key is created."
      },
      "keyCheckValueAlgorithm": {
        "$ref": "#/types/aws-native:paymentcryptography:KeyCheckValueAlgorithm",
        "description": "The algorithm that AWS Payment Cryptography uses to calculate the key check value (KCV). It is used to validate the key integrity.\n\nFor TDES keys, the KCV is computed by encrypting 8 bytes, each with value of zero, with the key to be checked and retaining the 3 highest order bytes of the encrypted result. For AES keys, the KCV is computed using a CMAC algorithm where the input data is 16 bytes of zero and retaining the 3 highest order bytes of the encrypted result."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        }
      }
    }
  },
  "aws-native:pcaconnectorad:Connector": {
    "cfTypeName": "AWS::PCAConnectorAD::Connector",
    "properties": {
      "certificateAuthorityArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the certificate authority being used."
      },
      "directoryId": {
        "type": "string",
        "description": "The identifier of the Active Directory."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Metadata assigned to a connector consisting of a key-value pair."
      },
      "vpcInformation": {
        "$ref": "#/types/aws-native:pcaconnectorad:ConnectorVpcInformation",
        "description": "Information of the VPC and security group(s) used with the connector."
      }
    }
  },
  "aws-native:pcaconnectorad:DirectoryRegistration": {
    "cfTypeName": "AWS::PCAConnectorAD::DirectoryRegistration",
    "properties": {
      "directoryId": {
        "type": "string",
        "description": "The identifier of the Active Directory."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Metadata assigned to a directory registration consisting of a key-value pair."
      }
    }
  },
  "aws-native:pcaconnectorad:ServicePrincipalName": {
    "cfTypeName": "AWS::PCAConnectorAD::ServicePrincipalName",
    "properties": {
      "connectorArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that was returned when you called [CreateConnector.html](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html) ."
      },
      "directoryRegistrationArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that was returned when you called [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html) ."
      }
    }
  },
  "aws-native:pcaconnectorad:TemplateGroupAccessControlEntry": {
    "cfTypeName": "AWS::PCAConnectorAD::TemplateGroupAccessControlEntry",
    "properties": {
      "accessRights": {
        "$ref": "#/types/aws-native:pcaconnectorad:TemplateGroupAccessControlEntryAccessRights",
        "description": "Permissions to allow or deny an Active Directory group to enroll or autoenroll certificates issued against a template."
      },
      "groupDisplayName": {
        "type": "string",
        "description": "Name of the Active Directory group. This name does not need to match the group name in Active Directory."
      },
      "groupSecurityIdentifier": {
        "type": "string",
        "description": "Security identifier (SID) of the group object from Active Directory. The SID starts with \"S-\"."
      },
      "templateArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that was returned when you called [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html) ."
      }
    }
  },
  "aws-native:pcaconnectorscep:Challenge": {
    "cfTypeName": "AWS::PCAConnectorSCEP::Challenge",
    "properties": {
      "connectorArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the connector."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      }
    }
  },
  "aws-native:pcaconnectorscep:Connector": {
    "cfTypeName": "AWS::PCAConnectorSCEP::Connector",
    "properties": {
      "certificateAuthorityArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the certificate authority associated with the connector."
      },
      "mobileDeviceManagement": {
        "$ref": "#/types/aws-native:pcaconnectorscep:ConnectorMobileDeviceManagement",
        "description": "Contains settings relevant to the mobile device management system that you chose for the connector. If you didn't configure `MobileDeviceManagement` , then the connector is for general-purpose use and this object is empty."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      }
    }
  },
  "aws-native:proton:EnvironmentAccountConnection": {
    "cfTypeName": "AWS::Proton::EnvironmentAccountConnection",
    "properties": {
      "codebuildRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of an IAM service role in the environment account. AWS Proton uses this role to provision infrastructure resources using CodeBuild-based provisioning in the associated environment account."
      },
      "componentRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM service role that AWS Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account."
      },
      "environmentAccountId": {
        "type": "string",
        "description": "The environment account that's connected to the environment account connection."
      },
      "environmentName": {
        "type": "string",
        "description": "The name of the AWS Proton environment that's created in the associated management account."
      },
      "managementAccountId": {
        "type": "string",
        "description": "The ID of the management account that accepts or rejects the environment account connection. You create an manage the AWS Proton environment in this account. If the management account accepts the environment account connection, AWS Proton can use the associated IAM role to provision environment infrastructure resources in the associated environment account."
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. AWS Proton uses this role to provision infrastructure resources in the associated environment account."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "\u003cp\u003eAn optional list of metadata items that you can associate with the Proton environment account connection. A tag is a key-value pair.\u003c/p\u003e\n         \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\u003eProton resources and tagging\u003c/a\u003e in the\n        \u003ci\u003eProton User Guide\u003c/i\u003e.\u003c/p\u003e"
      }
    }
  },
  "aws-native:qbusiness:Application": {
    "cfTypeName": "AWS::QBusiness::Application",
    "properties": {
      "attachmentsConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:ApplicationAttachmentsConfiguration",
        "description": "Configuration information for the file upload during chat feature."
      },
      "autoSubscriptionConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:ApplicationAutoSubscriptionConfiguration",
        "description": "Subscription configuration information for an Amazon Q Business application using IAM identity federation for user management."
      },
      "clientIdsForOidc": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The OIDC client ID for a Amazon Q Business application."
      },
      "description": {
        "type": "string",
        "description": "A description for the Amazon Q Business application."
      },
      "displayName": {
        "type": "string",
        "description": "The name of the Amazon Q Business application."
      },
      "encryptionConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:ApplicationEncryptionConfiguration",
        "description": "Provides the identifier of the AWS KMS key used to encrypt data indexed by Amazon Q Business. Amazon Q Business doesn't support asymmetric keys."
      },
      "iamIdentityProviderArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of an identity provider being used by an Amazon Q Business application."
      },
      "identityCenterInstanceArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM Identity Center instance you are either creating for—or connecting to—your Amazon Q Business application.\n\n*Required* : `Yes`"
      },
      "identityType": {
        "$ref": "#/types/aws-native:qbusiness:ApplicationIdentityType",
        "description": "The authentication type being used by a Amazon Q Business application."
      },
      "personalizationConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:ApplicationPersonalizationConfiguration",
        "description": "Configuration information about chat response personalization. For more information, see [Personalizing chat responses](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/personalizing-chat-responses.html) ."
      },
      "qAppsConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:ApplicationQAppsConfiguration",
        "description": "Configuration information about Amazon Q Apps."
      },
      "quickSightConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:ApplicationQuickSightConfiguration",
        "description": "The Amazon QuickSight configuration for an Amazon Q Business application that uses QuickSight as the identity provider."
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of an IAM role with permissions to access your Amazon CloudWatch logs and metrics. If this property is not specified, Amazon Q Business will create a [service linked role (SLR)](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/using-service-linked-roles.html#slr-permissions) and use it as the application's role."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of key-value pairs that identify or categorize your Amazon Q Business application. You can also use tags to help control access to the application. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
      }
    }
  },
  "aws-native:qbusiness:DataAccessor": {
    "cfTypeName": "AWS::QBusiness::DataAccessor",
    "properties": {
      "actionConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:qbusiness:DataAccessorActionConfiguration"
        },
        "description": "A list of action configurations specifying the allowed actions and any associated filters."
      },
      "applicationId": {
        "type": "string",
        "description": "The unique identifier of the Amazon Q Business application."
      },
      "displayName": {
        "type": "string",
        "description": "The friendly name of the data accessor."
      },
      "principal": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM role for the ISV associated with this data accessor."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to associate with the data accessor."
      }
    }
  },
  "aws-native:qbusiness:DataSource": {
    "cfTypeName": "AWS::QBusiness::DataSource",
    "properties": {
      "applicationId": {
        "type": "string",
        "description": "The identifier of the Amazon Q Business application the data source will be attached to."
      },
      "configuration": {
        "$ref": "pulumi.json#/Any",
        "description": "Use this property to specify a JSON or YAML schema with configuration properties specific to your data source connector to connect your data source repository to Amazon Q Business . You must use the JSON or YAML schema provided by Amazon Q .\n\nThe following links have the configuration properties and schemas for AWS CloudFormation for the following connectors:\n\n- [Amazon Simple Storage Service](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/s3-cfn.html)\n- [Amazon Q Web Crawler](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/web-crawler-cfn.html)\n\nSimilarly, you can find configuration templates and properties for your specific data source using the following steps:\n\n- Navigate to the [Supported connectors](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/connectors-list.html) page in the Amazon Q Business User Guide, and select the data source connector of your choice.\n- Then, from that specific data source connector's page, choose the topic containing *Using AWS CloudFormation* to find the schemas for your data source connector, including configuration parameter descriptions and examples.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::QBusiness::DataSource` for more information about the expected schema for this property."
      },
      "description": {
        "type": "string",
        "description": "A description for the data source connector."
      },
      "displayName": {
        "type": "string",
        "description": "The name of the Amazon Q Business data source."
      },
      "documentEnrichmentConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:DataSourceDocumentEnrichmentConfiguration",
        "description": "Provides the configuration information for altering document metadata and content during the document ingestion process.\n\nFor more information, see [Custom document enrichment](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/custom-document-enrichment.html) ."
      },
      "indexId": {
        "type": "string",
        "description": "The identifier of the index the data source is attached to."
      },
      "mediaExtractionConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:DataSourceMediaExtractionConfiguration",
        "description": "The configuration for extracting information from media in documents."
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of an IAM role with permission to access the data source and required resources."
      },
      "syncSchedule": {
        "type": "string",
        "description": "Sets the frequency for Amazon Q Business to check the documents in your data source repository and update your index. If you don't set a schedule, Amazon Q Business won't periodically update the index.\n\nSpecify a `cron-` format schedule string or an empty string to indicate that the index is updated on demand. You can't specify the `Schedule` parameter when the `Type` parameter is set to `CUSTOM` . If you do, you receive a `ValidationException` exception."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of key-value pairs that identify or categorize the data source connector. You can also use tags to help control access to the data source connector. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
      },
      "vpcConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:DataSourceVpcConfiguration",
        "description": "Configuration information for an Amazon VPC (Virtual Private Cloud) to connect to your data source. For more information, see [Using Amazon VPC with Amazon Q Business connectors](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/connector-vpc.html) ."
      }
    }
  },
  "aws-native:qbusiness:Index": {
    "cfTypeName": "AWS::QBusiness::Index",
    "properties": {
      "applicationId": {
        "type": "string",
        "description": "The identifier of the Amazon Q Business application using the index."
      },
      "capacityConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:IndexCapacityConfiguration",
        "description": "The capacity units you want to provision for your index. You can add and remove capacity to fit your usage needs."
      },
      "description": {
        "type": "string",
        "description": "A description for the Amazon Q Business index."
      },
      "displayName": {
        "type": "string",
        "description": "The name of the index."
      },
      "documentAttributeConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:qbusiness:IndexDocumentAttributeConfiguration"
        },
        "description": "Configuration information for document attributes. Document attributes are metadata or fields associated with your documents. For example, the company department name associated with each document.\n\nFor more information, see [Understanding document attributes](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/doc-attributes.html) ."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of key-value pairs that identify or categorize the index. You can also use tags to help control access to the index. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
      },
      "type": {
        "$ref": "#/types/aws-native:qbusiness:IndexType",
        "description": "The index type that's suitable for your needs. For more information on what's included in each type of index, see [Amazon Q Business tiers](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/tiers.html#index-tiers) ."
      }
    }
  },
  "aws-native:qbusiness:Permission": {
    "cfTypeName": "AWS::QBusiness::Permission",
    "properties": {
      "actions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The list of Amazon Q Business actions that the ISV is allowed to perform."
      },
      "applicationId": {
        "type": "string",
        "description": "The unique identifier of the Amazon Q Business application."
      },
      "principal": {
        "type": "string",
        "description": "Provides user and group information used for filtering documents to use for generating Amazon Q Business conversation responses."
      },
      "statementId": {
        "type": "string",
        "description": "A unique identifier for the policy statement."
      }
    }
  },
  "aws-native:qbusiness:Plugin": {
    "cfTypeName": "AWS::QBusiness::Plugin",
    "properties": {
      "applicationId": {
        "type": "string",
        "description": "The identifier of the application that will contain the plugin."
      },
      "authConfiguration": {
        "oneOf": [
          {
            "$ref": "#/types/aws-native:qbusiness:PluginAuthConfiguration0Properties"
          },
          {
            "$ref": "#/types/aws-native:qbusiness:PluginAuthConfiguration1Properties"
          },
          {
            "$ref": "#/types/aws-native:qbusiness:PluginAuthConfiguration2Properties"
          }
        ],
        "description": "Authentication configuration information for an Amazon Q Business plugin."
      },
      "customPluginConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:PluginCustomPluginConfiguration",
        "description": "Configuration information required to create a custom plugin."
      },
      "displayName": {
        "type": "string",
        "description": "The name of the plugin."
      },
      "serverUrl": {
        "type": "string",
        "description": "The plugin server URL used for configuration."
      },
      "state": {
        "$ref": "#/types/aws-native:qbusiness:PluginState",
        "description": "The current status of the plugin."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of key-value pairs that identify or categorize the data source connector. You can also use tags to help control access to the data source connector. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
      },
      "type": {
        "$ref": "#/types/aws-native:qbusiness:PluginType",
        "description": "The type of the plugin."
      }
    }
  },
  "aws-native:qbusiness:Retriever": {
    "cfTypeName": "AWS::QBusiness::Retriever",
    "properties": {
      "applicationId": {
        "type": "string",
        "description": "The identifier of the Amazon Q Business application using the retriever."
      },
      "configuration": {
        "oneOf": [
          {
            "$ref": "#/types/aws-native:qbusiness:RetrieverConfiguration0Properties"
          },
          {
            "$ref": "#/types/aws-native:qbusiness:RetrieverConfiguration1Properties"
          }
        ],
        "description": "Provides information on how the retriever used for your Amazon Q Business application is configured."
      },
      "displayName": {
        "type": "string",
        "description": "The name of your retriever."
      },
      "roleArn": {
        "type": "string",
        "description": "The ARN of an IAM role used by Amazon Q Business to access the basic authentication credentials stored in a Secrets Manager secret."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of key-value pairs that identify or categorize the retriever. You can also use tags to help control access to the retriever. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
      },
      "type": {
        "$ref": "#/types/aws-native:qbusiness:RetrieverType",
        "description": "The type of your retriever."
      }
    }
  },
  "aws-native:qbusiness:WebExperience": {
    "cfTypeName": "AWS::QBusiness::WebExperience",
    "properties": {
      "applicationId": {
        "type": "string",
        "description": "The identifier of the Amazon Q Business web experience."
      },
      "browserExtensionConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:WebExperienceBrowserExtensionConfiguration",
        "description": "The container for browser extension configuration for an Amazon Q Business web experience."
      },
      "customizationConfiguration": {
        "$ref": "#/types/aws-native:qbusiness:WebExperienceCustomizationConfiguration",
        "description": "Contains the configuration information to customize the logo, font, and color of an Amazon Q Business web experience with individual files for each property or a CSS file for them all."
      },
      "identityProviderConfiguration": {
        "oneOf": [
          {
            "$ref": "#/types/aws-native:qbusiness:WebExperienceIdentityProviderConfiguration0Properties"
          },
          {
            "$ref": "#/types/aws-native:qbusiness:WebExperienceIdentityProviderConfiguration1Properties"
          }
        ],
        "description": "Provides information about the identity provider (IdP) used to authenticate end users of an Amazon Q Business web experience."
      },
      "origins": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Sets the website domain origins that are allowed to embed the Amazon Q Business web experience. The *domain origin* refers to the base URL for accessing a website including the protocol ( `http/https` ), the domain name, and the port number (if specified).\n\n\u003e You must only submit a *base URL* and not a full path. For example, `https://docs.aws.amazon.com` ."
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the service role attached to your web experience.\n\n\u003e You must provide this value if you're using IAM Identity Center to manage end user access to your application. If you're using legacy identity management to manage user access, you don't need to provide this value."
      },
      "samplePromptsControlMode": {
        "$ref": "#/types/aws-native:qbusiness:WebExperienceSamplePromptsControlMode",
        "description": "Determines whether sample prompts are enabled in the web experience for an end user."
      },
      "subtitle": {
        "type": "string",
        "description": "A subtitle to personalize your Amazon Q Business web experience."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of key-value pairs that identify or categorize your Amazon Q Business web experience. You can also use tags to help control access to the web experience. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
      },
      "title": {
        "type": "string",
        "description": "The title for your Amazon Q Business web experience."
      },
      "welcomeMessage": {
        "type": "string",
        "description": "A message in an Amazon Q Business web experience."
      }
    }
  },
  "aws-native:quicksight:RefreshSchedule": {
    "cfTypeName": "AWS::QuickSight::RefreshSchedule",
    "properties": {
      "awsAccountId": {
        "type": "string",
        "description": "The AWS account ID of the account that you are creating a schedule in."
      },
      "dataSetId": {
        "type": "string",
        "description": "The ID of the dataset that you are creating a refresh schedule for."
      },
      "schedule": {
        "$ref": "#/types/aws-native:quicksight:RefreshScheduleMap",
        "description": "The refresh schedule of a dataset."
      }
    }
  },
  "aws-native:rbin:Rule": {
    "cfTypeName": "AWS::Rbin::Rule",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description of the retention rule."
      },
      "excludeResourceTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:rbin:RuleResourceTag"
        },
        "description": "Information about the exclude resource tags used to identify resources that are excluded by the retention rule."
      },
      "lockConfiguration": {
        "$ref": "#/types/aws-native:rbin:RuleUnlockDelay",
        "description": "Information about the retention rule lock configuration."
      },
      "resourceTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:rbin:RuleResourceTag"
        },
        "description": "Information about the resource tags used to identify resources that are retained by the retention rule."
      },
      "resourceType": {
        "$ref": "#/types/aws-native:rbin:RuleResourceType",
        "description": "The resource type retained by the retention rule."
      },
      "retentionPeriod": {
        "$ref": "#/types/aws-native:rbin:RuleRetentionPeriod",
        "description": "Information about the retention period for which the retention rule is to retain resources."
      },
      "status": {
        "type": "string",
        "description": "The state of the retention rule. Only retention rules that are in the available state retain resources."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Information about the tags assigned to the retention rule."
      }
    }
  },
  "aws-native:rds:CustomDbEngineVersion": {
    "cfTypeName": "AWS::RDS::CustomDBEngineVersion",
    "properties": {
      "databaseInstallationFilesS3BucketName": {
        "type": "string",
        "description": "The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is ``my-custom-installation-files``."
      },
      "databaseInstallationFilesS3Prefix": {
        "type": "string",
        "description": "The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is ``123456789012/cev1``. If this setting isn't specified, no prefix is assumed."
      },
      "description": {
        "type": "string",
        "description": "An optional description of your CEV."
      },
      "engine": {
        "type": "string",
        "description": "The database engine to use for your custom engine version (CEV).\n Valid values:\n  +   ``custom-oracle-ee`` \n  +   ``custom-oracle-ee-cdb``"
      },
      "engineVersion": {
        "type": "string",
        "description": "The name of your CEV. The name format is ``major version.customized_string``. For example, a valid CEV name is ``19.my_cev1``. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of ``Engine`` and ``EngineVersion`` is unique per customer per Region.\n  *Constraints:* Minimum length is 1. Maximum length is 60.\n  *Pattern:* ``^[a-z0-9_.-]{1,60$``}"
      },
      "imageId": {
        "type": "string",
        "description": "A value that indicates the ID of the AMI."
      },
      "kmsKeyId": {
        "type": "string",
        "description": "The AWS KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.\n If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the *Key Management Service Developer Guide*.\n You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys."
      },
      "manifest": {
        "type": "string",
        "description": "The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.\n The following JSON fields are valid:\n  + MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. + databaseInstallationFileNames Ordered list of installation files for the CEV. + opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. + psuRuPatchFileNames The PSU and RU patches for this CEV. + OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches. \n For more information, see [Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the *Amazon RDS User Guide*."
      },
      "sourceCustomDbEngineVersionIdentifier": {
        "type": "string",
        "description": "The ARN of a CEV to use as a source for creating a new CEV. You can specify a different Amazon Machine Imagine (AMI) by using either ``Source`` or ``UseAwsProvidedLatestImage``. You can't specify a different JSON manifest when you specify ``SourceCustomDbEngineVersionIdentifier``."
      },
      "status": {
        "$ref": "#/types/aws-native:rds:CustomDbEngineVersionStatus",
        "description": "A value that indicates the status of a custom engine version (CEV)."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*"
      },
      "useAwsProvidedLatestImage": {
        "type": "boolean",
        "description": "Specifies whether to use the latest service-provided Amazon Machine Image (AMI) for the CEV. If you specify ``UseAwsProvidedLatestImage``, you can't also specify ``ImageId``."
      }
    }
  },
  "aws-native:rds:DbCluster": {
    "cfTypeName": "AWS::RDS::DBCluster",
    "properties": {
      "allocatedStorage": {
        "type": "integer",
        "description": "The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.\n Valid for Cluster Type: Multi-AZ DB clusters only\n This setting is required to create a Multi-AZ DB cluster."
      },
      "associatedRoles": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:rds:DbClusterDbClusterRole"
        },
        "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.\n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "autoMinorVersionUpgrade": {
        "type": "boolean",
        "description": "Specifies whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window. By default, minor engine upgrades are applied automatically.\n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB cluster"
      },
      "availabilityZones": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of Availability Zones (AZs) where instances in the DB cluster can be created. For information on AWS Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the *Amazon Aurora User Guide*. \n Valid for: Aurora DB clusters only"
      },
      "backtrackWindow": {
        "type": "integer",
        "description": "The target backtrack window, in seconds. To disable backtracking, set this value to ``0``.\n Valid for Cluster Type: Aurora MySQL DB clusters only\n Default: ``0`` \n Constraints:\n  +  If specified, this value must be set to a number from 0 to 259,200 (72 hours)."
      },
      "backupRetentionPeriod": {
        "type": "integer",
        "description": "The number of days for which automated backups are retained.\n Default: 1\n Constraints:\n  +  Must be a value from 1 to 35\n  \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "clusterScalabilityType": {
        "type": "string",
        "description": "Specifies the scalability mode of the Aurora DB cluster. When set to ``limitless``, the cluster operates as an Aurora Limitless Database, allowing you to create a DB shard group for horizontal scaling (sharding) capabilities. When set to ``standard`` (the default), the cluster uses normal DB instance creation."
      },
      "copyTagsToSnapshot": {
        "type": "boolean",
        "description": "A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.\n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "databaseInsightsMode": {
        "type": "string",
        "description": "The mode of Database Insights to enable for the DB cluster.\n If you set this value to ``advanced``, you must also set the ``PerformanceInsightsEnabled`` parameter to ``true`` and the ``PerformanceInsightsRetentionPeriod`` parameter to 465.\n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "databaseName": {
        "type": "string",
        "description": "The name of your database. If you don't provide a name, then Amazon RDS won't create a database in this DB cluster. For naming constraints, see [Naming Constraints](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon Aurora User Guide*. \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "dbClusterIdentifier": {
        "type": "string",
        "description": "The DB cluster identifier. This parameter is stored as a lowercase string.\n Constraints:\n  +  Must contain from 1 to 63 letters, numbers, or hyphens.\n  +  First character must be a letter.\n  +  Can't end with a hyphen or contain two consecutive hyphens.\n  \n Example: ``my-cluster1`` \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "dbClusterInstanceClass": {
        "type": "string",
        "description": "The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example ``db.m6gd.xlarge``. Not all DB instance classes are available in all AWS-Regions, or for all database engines.\n For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide*.\n This setting is required to create a Multi-AZ DB cluster.\n Valid for Cluster Type: Multi-AZ DB clusters only"
      },
      "dbClusterParameterGroupName": {
        "type": "string",
        "description": "The name of the DB cluster parameter group to associate with this DB cluster.\n  If you apply a parameter group to an existing DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.\n If you apply a change to parameter group associated with a stopped DB cluster, then the update stack waits until the DB cluster is started.\n  To list all of the available DB cluster parameter group names, use the following command:\n  ``aws rds describe-db-cluster-parameter-groups --query \"DBClusterParameterGroups[].DBClusterParameterGroupName\" --output text`` \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "dbInstanceParameterGroupName": {
        "type": "string",
        "description": "The name of the DB parameter group to apply to all instances of the DB cluster.\n  When you apply a parameter group using the ``DBInstanceParameterGroupName`` parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.\n  Valid for Cluster Type: Aurora DB clusters only\n Default: The existing name setting\n Constraints:\n  +  The DB parameter group must be in the same DB parameter group family as this DB cluster.\n  +  The ``DBInstanceParameterGroupName`` parameter is valid in combination with the ``AllowMajorVersionUpgrade`` parameter for a major version upgrade only."
      },
      "dbSubnetGroupName": {
        "type": "string",
        "description": "A DB subnet group that you want to associate with this DB cluster. \n If you are restoring a DB cluster to a point in time with ``RestoreType`` set to ``copy-on-write``, and don't specify a DB subnet group name, then the DB cluster is restored with a default DB subnet group.\n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "dbSystemId": {
        "type": "string",
        "description": "Reserved for future use."
      },
      "deletionProtection": {
        "type": "boolean",
        "description": "A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.\n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "domain": {
        "type": "string",
        "description": "Indicates the directory ID of the Active Directory to create the DB cluster.\n For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.\n For more information, see [Kerberos authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the *Amazon Aurora User Guide*.\n Valid for: Aurora DB clusters only"
      },
      "domainIamRoleName": {
        "type": "string",
        "description": "Specifies the name of the IAM role to use when making API calls to the Directory Service.\n Valid for: Aurora DB clusters only"
      },
      "enableCloudwatchLogsExports": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Aurora User Guide*.\n  *Aurora MySQL* \n Valid values: ``audit``, ``error``, ``general``, ``slowquery`` \n  *Aurora PostgreSQL* \n Valid values: ``postgresql`` \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "enableGlobalWriteForwarding": {
        "type": "boolean",
        "description": "Specifies whether to enable this DB cluster to forward write operations to the primary cluster of a global cluster (Aurora global database). By default, write operations are not allowed on Aurora DB clusters that are secondary clusters in an Aurora global database.\n You can set this value only on Aurora DB clusters that are members of an Aurora global database. With this parameter enabled, a secondary cluster can forward writes to the current primary cluster, and the resulting changes are replicated back to this cluster. For the primary DB cluster of an Aurora global database, this value is used immediately if the primary is demoted by a global cluster API operation, but it does nothing until then.\n Valid for Cluster Type: Aurora DB clusters only"
      },
      "enableHttpEndpoint": {
        "type": "boolean",
        "description": "Specifies whether to enable the HTTP endpoint for the DB cluster. By default, the HTTP endpoint isn't enabled.\n When enabled, the HTTP endpoint provides a connectionless web service API (RDS Data API) for running SQL queries on the DB cluster. You can also query your database from inside the RDS console with the RDS query editor.\n For more information, see [Using RDS Data API](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the *Amazon Aurora User Guide*.\n Valid for Cluster Type: Aurora DB clusters only"
      },
      "enableIamDatabaseAuthentication": {
        "type": "boolean",
        "description": "A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.\n For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon Aurora User Guide.* \n Valid for: Aurora DB clusters only"
      },
      "enableLocalWriteForwarding": {
        "type": "boolean",
        "description": "Specifies whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.\n Valid for: Aurora DB clusters only"
      },
      "engine": {
        "type": "string",
        "description": "The name of the database engine to be used for this DB cluster.\n Valid Values:\n  +   ``aurora-mysql`` \n  +   ``aurora-postgresql`` \n  +   ``mysql`` \n  +   ``postgres`` \n  \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "engineLifecycleSupport": {
        "type": "string",
        "description": "The life cycle type for this DB cluster.\n  By default, this value is set to ``open-source-rds-extended-support``, which enrolls your DB cluster into Amazon RDS Extended Support. At the end of standard support, you can avoid charges for Extended Support by setting the value to ``open-source-rds-extended-support-disabled``. In this case, creating the DB cluster will fail if the DB major version is past its end of standard support date.\n  You can use this setting to enroll your DB cluster into Amazon RDS Extended Support. With RDS Extended Support, you can run the selected major engine version on your DB cluster past the end of standard support for that engine version. For more information, see the following sections:\n  +  Amazon Aurora - [Using Amazon RDS Extended Support](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/extended-support.html) in the *Amazon Aurora User Guide* \n  +  Amazon RDS - [Using Amazon RDS Extended Support](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html) in the *Amazon RDS User Guide* \n  \n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters\n Valid Values: ``open-source-rds-extended-support | open-source-rds-extended-support-disabled`` \n Default: ``open-source-rds-extended-support``"
      },
      "engineMode": {
        "type": "string",
        "description": "The DB engine mode of the DB cluster, either ``provisioned`` or ``serverless``.\n The ``serverless`` engine mode only applies for Aurora Serverless v1 DB clusters. Aurora Serverless v2 DB clusters use the ``provisioned`` engine mode.\n For information about limitations and requirements for Serverless DB clusters, see the following sections in the *Amazon Aurora User Guide*:\n  +   [Limitations of Aurora Serverless v1](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations) \n  +   [Requirements for Aurora Serverless v2](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.requirements.html) \n  \n Valid for Cluster Type: Aurora DB clusters only"
      },
      "engineVersion": {
        "type": "string",
        "description": "The version number of the database engine to use.\n To list all of the available engine versions for Aurora MySQL version 2 (5.7-compatible) and version 3 (8.0-compatible), use the following command:\n  ``aws rds describe-db-engine-versions --engine aurora-mysql --query \"DBEngineVersions[].EngineVersion\"`` \n You can supply either ``5.7`` or ``8.0`` to use the default engine version for Aurora MySQL version 2 or version 3, respectively.\n To list all of the available engine versions for Aurora PostgreSQL, use the following command:\n  ``aws rds describe-db-engine-versions --engine aurora-postgresql --query \"DBEngineVersions[].EngineVersion\"`` \n To list all of the available engine versions for RDS for MySQL, use the following command:\n  ``aws rds describe-db-engine-versions --engine mysql --query \"DBEngineVersions[].EngineVersion\"`` \n To list all of the available engine versions for RDS for PostgreSQL, use the following command:\n  ``aws rds describe-db-engine-versions --engine postgres --query \"DBEngineVersions[].EngineVersion\"`` \n  *Aurora MySQL* \n For information, see [Database engine updates for Amazon Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) in the *Amazon Aurora User Guide*.\n  *Aurora PostgreSQL* \n For information, see [Amazon Aurora PostgreSQL releases and engine versions](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html) in the *Amazon Aurora User Guide*.\n  *MySQL* \n For information, see [Amazon RDS for MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt) in the *Amazon RDS User Guide*.\n  *PostgreSQL* \n For information, see [Amazon RDS for PostgreSQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts) in the *Amazon RDS User Guide*.\n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "globalClusterIdentifier": {
        "type": "string",
        "description": "If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster. To define the primary database cluster of the global cluster, use the [AWS::RDS::GlobalCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html) resource. \n  If you aren't configuring a global database cluster, don't specify this property. \n  To remove the DB cluster from a global database cluster, specify an empty value for the ``GlobalClusterIdentifier`` property.\n  For information about Aurora global databases, see [Working with Amazon Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) in the *Amazon Aurora User Guide*.\n Valid for: Aurora DB clusters only"
      },
      "iops": {
        "type": "integer",
        "description": "The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.\n For information about valid IOPS values, see [Provisioned IOPS storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide*.\n This setting is required to create a Multi-AZ DB cluster.\n Valid for Cluster Type: Multi-AZ DB clusters only\n Constraints:\n  +  Must be a multiple between .5 and 50 of the storage amount for the DB cluster."
      },
      "kmsKeyId": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as ``arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef``. If you enable the ``StorageEncrypted`` property but don't specify this property, the default KMS key is used. If you specify this property, you must set the ``StorageEncrypted`` property to ``true``.\n If you specify the ``SnapshotIdentifier`` property, the ``StorageEncrypted`` property value is inherited from the snapshot, and if the DB cluster is encrypted, the specified ``KmsKeyId`` property is used.\n If you create a read replica of an encrypted DB cluster in another AWS Region, make sure to set ``KmsKeyId`` to a KMS key identifier that is valid in the destination AWS Region. This KMS key is used to encrypt the read replica in that AWS Region.\n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "manageMasterUserPassword": {
        "type": "boolean",
        "description": "Specifies whether to manage the master user password with AWS Secrets Manager.\n For more information, see [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.* \n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters\n Constraints:\n  +  Can't manage the master user password with AWS Secrets Manager if ``MasterUserPassword`` is specified."
      },
      "masterUserPassword": {
        "type": "string",
        "description": "The master password for the DB instance.\n  If you specify the ``SourceDBClusterIdentifier``, ``SnapshotIdentifier``, or ``GlobalClusterIdentifier`` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.\n  Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "masterUserSecret": {
        "$ref": "#/types/aws-native:rds:DbClusterMasterUserSecret",
        "description": "The secret managed by RDS in AWS Secrets Manager for the master user password.\n  When you restore a DB cluster from a snapshot, Amazon RDS generates a new secret instead of reusing the secret specified in the ``SecretArn`` property. This ensures that the restored DB cluster is securely managed with a dedicated secret. To maintain consistent integration with your application, you might need to update resource configurations to reference the newly created secret.\n  For more information, see [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*"
      },
      "masterUsername": {
        "type": "string",
        "description": "The name of the master user for the DB cluster.\n  If you specify the ``SourceDBClusterIdentifier``, ``SnapshotIdentifier``, or ``GlobalClusterIdentifier`` property, don't specify this property. The value is inherited from the source DB cluster, the snapshot, or the primary DB cluster for the global database cluster, respectively.\n  Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "monitoringInterval": {
        "type": "integer",
        "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster. To turn off collecting Enhanced Monitoring metrics, specify ``0``.\n If ``MonitoringRoleArn`` is specified, also set ``MonitoringInterval`` to a value other than ``0``.\n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters\n Valid Values: ``0 | 1 | 5 | 10 | 15 | 30 | 60`` \n Default: ``0``"
      },
      "monitoringRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs. An example is ``arn:aws:iam:123456789012:role/emaccess``. For information on creating a monitoring role, see [Setting up and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide*.\n If ``MonitoringInterval`` is set to a value other than ``0``, supply a ``MonitoringRoleArn`` value.\n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "networkType": {
        "type": "string",
        "description": "The network type of the DB cluster.\n Valid values:\n  +   ``IPV4`` \n  +   ``DUAL`` \n  \n The network type is determined by the ``DBSubnetGroup`` specified for the DB cluster. A ``DBSubnetGroup`` can support only the IPv4 protocol or the IPv4 and IPv6 protocols (``DUAL``).\n For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon Aurora User Guide.* \n Valid for: Aurora DB clusters only"
      },
      "performanceInsightsEnabled": {
        "type": "boolean",
        "description": "Specifies whether to turn on Performance Insights for the DB cluster.\n For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide*.\n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "performanceInsightsKmsKeyId": {
        "type": "string",
        "description": "The AWS KMS key identifier for encryption of Performance Insights data.\n The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.\n If you don't specify a value for ``PerformanceInsightsKMSKeyId``, then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS-account. Your AWS-account has a different default KMS key for each AWS-Region.\n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "performanceInsightsRetentionPeriod": {
        "type": "integer",
        "description": "The number of days to retain Performance Insights data. When creating a DB cluster without enabling Performance Insights, you can't specify the parameter ``PerformanceInsightsRetentionPeriod``.\n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters\n Valid Values:\n  +   ``7`` \n  +   *month* * 31, where *month* is a number of months from 1-23. Examples: ``93`` (3 months * 31), ``341`` (11 months * 31), ``589`` (19 months * 31)\n  +   ``731`` \n  \n Default: ``7`` days\n If you specify a retention period that isn't valid, such as ``94``, Amazon RDS issues an error."
      },
      "port": {
        "type": "integer",
        "description": "The port number on which the DB instances in the DB cluster accept connections.\n Default:\n  +  When ``EngineMode`` is ``provisioned``, ``3306`` (for both Aurora MySQL and Aurora PostgreSQL)\n  +  When ``EngineMode`` is ``serverless``:\n  +   ``3306`` when ``Engine`` is ``aurora`` or ``aurora-mysql`` \n  +   ``5432`` when ``Engine`` is ``aurora-postgresql`` \n  \n  \n  The ``No interruption`` on update behavior only applies to DB clusters. If you are updating a DB instance, see [Port](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-port) for the AWS::RDS::DBInstance resource.\n  Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "preferredBackupWindow": {
        "type": "string",
        "description": "The daily time range during which automated backups are created. For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the *Amazon Aurora User Guide.* \n Constraints:\n  +  Must be in the format ``hh24:mi-hh24:mi``.\n  +  Must be in Universal Coordinated Time (UTC).\n  +  Must not conflict with the preferred maintenance window.\n  +  Must be at least 30 minutes.\n  \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "preferredMaintenanceWindow": {
        "type": "string",
        "description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).\n Format: ``ddd:hh24:mi-ddd:hh24:mi`` \n The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Maintaining an Amazon Aurora DB cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the *Amazon Aurora User Guide.* \n Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.\n Constraints: Minimum 30-minute window.\n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "publiclyAccessible": {
        "type": "boolean",
        "description": "Specifies whether the DB cluster is publicly accessible.\n When the DB cluster is publicly accessible and you connect from outside of the DB cluster's virtual private cloud (VPC), its Domain Name System (DNS) endpoint resolves to the public IP address. When you connect from within the same VPC as the DB cluster, the endpoint resolves to the private IP address. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.\n When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.\n Valid for Cluster Type: Multi-AZ DB clusters only\n Default: The default behavior varies depending on whether ``DBSubnetGroupName`` is specified.\n If ``DBSubnetGroupName`` isn't specified, and ``PubliclyAccessible`` isn't specified, the following applies:\n  +  If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.\n  +  If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.\n  \n If ``DBSubnetGroupName`` is specified, and ``PubliclyAccessible`` isn't specified, the following applies:\n  +  If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.\n  +  If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public."
      },
      "replicationSourceIdentifier": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.\n Valid for: Aurora DB clusters only"
      },
      "restoreToTime": {
        "type": "string",
        "description": "The date and time to restore the DB cluster to.\n Valid Values: Value must be a time in Universal Coordinated Time (UTC) format\n Constraints:\n  +  Must be before the latest restorable time for the DB instance\n  +  Must be specified if ``UseLatestRestorableTime`` parameter isn't provided\n  +  Can't be specified if the ``UseLatestRestorableTime`` parameter is enabled\n  +  Can't be specified if the ``RestoreType`` parameter is ``copy-on-write`` \n  \n This property must be used with ``SourceDBClusterIdentifier`` property. The resulting cluster will have the identifier that matches the value of the ``DBclusterIdentifier`` property.\n Example: ``2015-03-07T23:45:00Z`` \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "restoreType": {
        "type": "string",
        "description": "The type of restore to be performed. You can specify one of the following values:\n  +   ``full-copy`` - The new DB cluster is restored as a full copy of the source DB cluster.\n  +   ``copy-on-write`` - The new DB cluster is restored as a clone of the source DB cluster.\n  \n If you don't specify a ``RestoreType`` value, then the new DB cluster is restored as a full copy of the source DB cluster.\n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "scalingConfiguration": {
        "$ref": "#/types/aws-native:rds:DbClusterScalingConfiguration",
        "description": "The scaling configuration of an Aurora Serverless v1 DB cluster.\n This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, Use the ``ServerlessV2ScalingConfiguration`` property.\n Valid for: Aurora Serverless v1 DB clusters only"
      },
      "serverlessV2ScalingConfiguration": {
        "$ref": "#/types/aws-native:rds:DbClusterServerlessV2ScalingConfiguration",
        "description": "The scaling configuration of an Aurora Serverless V2 DB cluster. \n This property is only supported for Aurora Serverless v2. For Aurora Serverless v1, Use the ``ScalingConfiguration`` property.\n Valid for: Aurora Serverless v2 DB clusters only"
      },
      "snapshotIdentifier": {
        "type": "string",
        "description": "The identifier for the DB snapshot or DB cluster snapshot to restore from.\n You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.\n After you restore a DB cluster with a ``SnapshotIdentifier`` property, you must specify the same ``SnapshotIdentifier`` property for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed. However, if you don't specify the ``SnapshotIdentifier`` property, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB cluster is restored from the specified ``SnapshotIdentifier`` property, and the original DB cluster is deleted.\n If you specify the ``SnapshotIdentifier`` property to restore a DB cluster (as opposed to specifying it for DB cluster updates), then don't specify the following properties:\n  +   ``GlobalClusterIdentifier`` \n  +   ``MasterUsername`` \n  +   ``MasterUserPassword`` \n  +   ``ReplicationSourceIdentifier`` \n  +   ``RestoreType`` \n  +   ``SourceDBClusterIdentifier`` \n  +   ``SourceRegion`` \n  +   ``StorageEncrypted`` (for an encrypted snapshot)\n  +   ``UseLatestRestorableTime`` \n  \n Constraints:\n  +  Must match the identifier of an existing Snapshot.\n  \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "sourceDbClusterIdentifier": {
        "type": "string",
        "description": "When restoring a DB cluster to a point in time, the identifier of the source DB cluster from which to restore.\n Constraints:\n  +  Must match the identifier of an existing DBCluster.\n  \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "sourceRegion": {
        "type": "string",
        "description": "The AWS Region which contains the source DB cluster when replicating a DB cluster. For example, ``us-east-1``. \n Valid for: Aurora DB clusters only"
      },
      "storageEncrypted": {
        "type": "boolean",
        "description": "Indicates whether the DB cluster is encrypted.\n If you specify the ``KmsKeyId`` property, then you must enable encryption.\n If you specify the ``SourceDBClusterIdentifier`` property, don't specify this property. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the specified ``KmsKeyId`` property is used.\n If you specify the ``SnapshotIdentifier`` and the specified snapshot is encrypted, don't specify this property. The value is inherited from the snapshot, and the specified ``KmsKeyId`` property is used.\n If you specify the ``SnapshotIdentifier`` and the specified snapshot isn't encrypted, you can use this property to specify that the restored DB cluster is encrypted. Specify the ``KmsKeyId`` property for the KMS key to use for encryption. If you don't want the restored DB cluster to be encrypted, then don't set this property or set it to ``false``.\n  If you specify both the ``StorageEncrypted`` and ``SnapshotIdentifier`` properties without specifying the ``KmsKeyId`` property, then the restored DB cluster inherits the encryption settings from the DB snapshot that provide.\n  Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "storageType": {
        "type": "string",
        "description": "The storage type to associate with the DB cluster.\n For information on storage types for Aurora DB clusters, see [Storage configurations for Amazon Aurora DB clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.StorageReliability.html#aurora-storage-type). For information on storage types for Multi-AZ DB clusters, see [Settings for creating Multi-AZ DB clusters](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/create-multi-az-db-cluster.html#create-multi-az-db-cluster-settings).\n This setting is required to create a Multi-AZ DB cluster.\n When specified for a Multi-AZ DB cluster, a value for the ``Iops`` parameter is required.\n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters\n Valid Values:\n  +  Aurora DB clusters - ``aurora | aurora-iopt1`` \n  +  Multi-AZ DB clusters - ``io1 | io2 | gp3`` \n  \n Default:\n  +  Aurora DB clusters - ``aurora`` \n  +  Multi-AZ DB clusters - ``io1`` \n  \n  When you create an Aurora DB cluster with the storage type set to ``aurora-iopt1``, the storage type is returned in the response. The storage type isn't returned when you set it to ``aurora``."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags to assign to the DB cluster.\n Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "useLatestRestorableTime": {
        "type": "boolean",
        "description": "A value that indicates whether to restore the DB cluster to the latest restorable backup time. By default, the DB cluster is not restored to the latest restorable backup time. \n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      },
      "vpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of EC2 VPC security groups to associate with this DB cluster.\n If you plan to update the resource, don't specify VPC security groups in a shared VPC.\n Valid for: Aurora DB clusters and Multi-AZ DB clusters"
      }
    }
  },
  "aws-native:rds:DbInstance": {
    "cfTypeName": "AWS::RDS::DBInstance",
    "properties": {
      "allocatedStorage": {
        "type": "string",
        "description": "The amount of storage in gibibytes (GiB) to be initially allocated for the database instance.\n  If any value is set in the ``Iops`` parameter, ``AllocatedStorage`` must be at least 100 GiB, which corresponds to the minimum Iops value of 1,000. If you increase the ``Iops`` value (in 1,000 IOPS increments), then you must also increase the ``AllocatedStorage`` value (in 100-GiB increments). \n   *Amazon Aurora* \n Not applicable. Aurora cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in an Aurora cluster volume.\n  *Db2* \n Constraints to the amount of storage for each storage type are the following:\n  +  General Purpose (SSD) storage (gp3): Must be an integer from 20 to 64000.\n  +  Provisioned IOPS storage (io1): Must be an integer from 100 to 64000.\n  \n  *MySQL* \n Constraints to the amount of storage for each storage type are the following: \n  +  General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.\n  +  Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.\n  +  Magnetic storage (standard): Must be an integer from 5 to 3072.\n  \n  *MariaDB* \n Constraints to the amount of storage for each storage type are the following: \n  +  General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.\n  +  Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.\n  +  Magnetic storage (standard): Must be an integer from 5 to 3072.\n  \n  *PostgreSQL* \n Constraints to the amount of storage for each storage type are the following: \n  +  General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.\n  +  Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.\n  +  Magnetic storage (standard): Must be an integer from 5 to 3072.\n  \n  *Oracle* \n Constraints to the amount of storage for each storage type are the following: \n  +  General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.\n  +  Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.\n  +  Magnetic storage (standard): Must be an integer from 10 to 3072.\n  \n  *SQL Server* \n Constraints to the amount of storage for each storage type are the following: \n  +  General Purpose (SSD) storage (gp2):\n  +  Enterprise and Standard editions: Must be an integer from 20 to 16384.\n  +  Web and Express editions: Must be an integer from 20 to 16384.\n  \n  +  Provisioned IOPS storage (io1):\n  +  Enterprise and Standard editions: Must be an integer from 20 to 16384.\n  +  Web and Express editions: Must be an integer from 20 to 16384.\n  \n  +  Magnetic storage (standard):\n  +  Enterprise and Standard editions: Must be an integer from 20 to 1024.\n  +  Web and Express editions: Must be an integer from 20 to 1024."
      },
      "allowMajorVersionUpgrade": {
        "type": "boolean",
        "description": "A value that indicates whether major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.\n Constraints: Major version upgrades must be allowed when specifying a value for the ``EngineVersion`` parameter that is a different major version than the DB instance's current version."
      },
      "applyImmediately": {
        "type": "boolean",
        "description": "Specifies whether changes to the DB instance and any pending modifications are applied immediately, regardless of the ``PreferredMaintenanceWindow`` setting. If set to ``false``, changes are applied during the next maintenance window. Until RDS applies the changes, the DB instance remains in a drift state. As a result, the configuration doesn't fully reflect the requested modifications and temporarily diverges from the intended state.\n In addition to the settings described in [Modifying a DB instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html), this property also determines whether the DB instance reboots when a static parameter is modified in the associated DB parameter group.\n Default: ``true``"
      },
      "associatedRoles": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:rds:DbInstanceDbInstanceRole"
        },
        "description": "The IAMlong (IAM) roles associated with the DB instance. \n  *Amazon Aurora* \n Not applicable. The associated roles are managed by the DB cluster."
      },
      "autoMinorVersionUpgrade": {
        "type": "boolean",
        "description": "A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically."
      },
      "automaticBackupReplicationKmsKeyId": {
        "type": "string",
        "description": "The AWS KMS key identifier for encryption of the replicated automated backups. The KMS key ID is the Amazon Resource Name (ARN) for the KMS encryption key in the destination AWS-Region, for example, ``arn:aws:kms:us-east-1:123456789012:key/AKIAIOSFODNN7EXAMPLE``."
      },
      "automaticBackupReplicationRegion": {
        "type": "string",
        "description": "The AWS-Region associated with the automated backup."
      },
      "automaticBackupReplicationRetentionPeriod": {
        "type": "integer",
        "description": "The retention period for automated backups in a different AWS Region. Use this parameter to set a unique retention period that only applies to cross-Region automated backups. To enable automated backups in a different Region, specify a positive value for the ``AutomaticBackupReplicationRegion`` parameter. \n If not specified, this parameter defaults to the value of the ``BackupRetentionPeriod`` parameter. The maximum allowed value is 35."
      },
      "availabilityZone": {
        "type": "string",
        "description": "The Availability Zone (AZ) where the database will be created. For information on AWS-Regions and Availability Zones, see [Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).\n For Amazon Aurora, each Aurora DB cluster hosts copies of its storage in three separate Availability Zones. Specify one of these Availability Zones. Aurora automatically chooses an appropriate Availability Zone if you don't specify one.\n Default: A random, system-chosen Availability Zone in the endpoint's AWS-Region.\n Constraints:\n  +  The ``AvailabilityZone`` parameter can't be specified if the DB instance is a Multi-AZ deployment.\n  +  The specified Availability Zone must be in the same AWS-Region as the current endpoint.\n  \n Example: ``us-east-1d``"
      },
      "backupRetentionPeriod": {
        "type": "integer",
        "description": "The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.\n  *Amazon Aurora* \n Not applicable. The retention period for automated backups is managed by the DB cluster.\n Default: 1\n Constraints:\n  +  Must be a value from 0 to 35\n  +  Can't be set to 0 if the DB instance is a source to read replicas"
      },
      "caCertificateIdentifier": {
        "type": "string",
        "description": "The identifier of the CA certificate for this DB instance.\n For more information, see [Using SSL/TLS to encrypt a connection to a DB instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the *Amazon RDS User Guide* and [Using SSL/TLS to encrypt a connection to a DB cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon Aurora User Guide*."
      },
      "certificateRotationRestart": {
        "type": "boolean",
        "description": "Specifies whether the DB instance is restarted when you rotate your SSL/TLS certificate.\n By default, the DB instance is restarted when you rotate your SSL/TLS certificate. The certificate is not updated until the DB instance is restarted.\n  Set this parameter only if you are *not* using SSL/TLS to connect to the DB instance.\n  If you are using SSL/TLS to connect to the DB instance, follow the appropriate instructions for your DB engine to rotate your SSL/TLS certificate:\n  +  For more information about rotating your SSL/TLS certificate for RDS DB engines, see [Rotating Your SSL/TLS Certificate.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html) in the *Amazon RDS User Guide.* \n  +  For more information about rotating your SSL/TLS certificate for Aurora DB engines, see [Rotating Your SSL/TLS Certificate](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html) in the *Amazon Aurora User Guide*.\n  \n This setting doesn't apply to RDS Custom DB instances."
      },
      "characterSetName": {
        "type": "string",
        "description": "For supported engines, indicates that the DB instance should be associated with the specified character set.\n  *Amazon Aurora* \n Not applicable. The character set is managed by the DB cluster. For more information, see [AWS::RDS::DBCluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html)."
      },
      "copyTagsToSnapshot": {
        "type": "boolean",
        "description": "Specifies whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.\n This setting doesn't apply to Amazon Aurora DB instances. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting."
      },
      "customIamInstanceProfile": {
        "type": "string",
        "description": "The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.\n This setting is required for RDS Custom.\n Constraints:\n  +  The profile must exist in your account.\n  +  The profile must have an IAM role that Amazon EC2 has permissions to assume.\n  +  The instance profile name and the associated IAM role name must start with the prefix ``AWSRDSCustom``.\n  \n For the list of permissions required for the IAM role, see [Configure IAM and your VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc) in the *Amazon RDS User Guide*."
      },
      "databaseInsightsMode": {
        "type": "string",
        "description": "The mode of Database Insights to enable for the DB instance.\n\n\u003e Aurora DB instances inherit this value from the DB cluster, so you can't change this value."
      },
      "dbClusterIdentifier": {
        "type": "string",
        "description": "The identifier of the DB cluster that this DB instance will belong to.\n This setting doesn't apply to RDS Custom DB instances."
      },
      "dbClusterSnapshotIdentifier": {
        "type": "string",
        "description": "The identifier for the Multi-AZ DB cluster snapshot to restore from.\n For more information on Multi-AZ DB clusters, see [Multi-AZ DB cluster deployments](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html) in the *Amazon RDS User Guide*.\n Constraints:\n  +  Must match the identifier of an existing Multi-AZ DB cluster snapshot.\n  +  Can't be specified when ``DBSnapshotIdentifier`` is specified.\n  +  Must be specified when ``DBSnapshotIdentifier`` isn't specified.\n  +  If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the ``DBClusterSnapshotIdentifier`` must be the ARN of the shared snapshot.\n  +  Can't be the identifier of an Aurora DB cluster snapshot."
      },
      "dbInstanceClass": {
        "type": "string",
        "description": "The compute and memory capacity of the DB instance, for example ``db.m5.large``. Not all DB instance classes are available in all AWS-Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see [DB instance classes](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the *Amazon RDS User Guide* or [Aurora DB instance classes](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html) in the *Amazon Aurora User Guide*."
      },
      "dbInstanceIdentifier": {
        "type": "string",
        "description": "A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).\n For information about constraints that apply to DB instance identifiers, see [Naming constraints in Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon RDS User Guide*.\n  If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name."
      },
      "dbName": {
        "type": "string",
        "description": "The meaning of this parameter differs according to the database engine you use.\n  If you specify the ``DBSnapshotIdentifier`` property, this property only applies to RDS for Oracle.\n   *Amazon Aurora* \n Not applicable. The database name is managed by the DB cluster.\n  *Db2* \n The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance.\n Constraints:\n  +  Must contain 1 to 64 letters or numbers.\n  +  Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9).\n  +  Can't be a word reserved by the specified database engine.\n  \n  *MySQL* \n The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance.\n Constraints:\n  +  Must contain 1 to 64 letters or numbers.\n  +  Can't be a word reserved by the specified database engine\n  \n  *MariaDB* \n The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance.\n Constraints:\n  +  Must contain 1 to 64 letters or numbers.\n  +  Can't be a word reserved by the specified database engine\n  \n  *PostgreSQL* \n The name of the database to create when the DB instance is created. If this parameter is not specified, the default ``postgres`` database is created in the DB instance.\n Constraints:\n  +  Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9).\n  +  Must contain 1 to 63 characters.\n  +  Can't be a word reserved by the specified database engine\n  \n  *Oracle* \n The Oracle System ID (SID) of the created DB instance. If you specify ``null``, the default value ``ORCL`` is used. You can't specify the string NULL, or any other reserved word, for ``DBName``. \n Default: ``ORCL`` \n Constraints:\n  +  Can't be longer than 8 characters\n  \n  *SQL Server* \n Not applicable. Must be null."
      },
      "dbParameterGroupName": {
        "type": "string",
        "description": "The name of an existing DB parameter group or a reference to an [AWS::RDS::DBParameterGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbparametergroup.html) resource created in the template.\n To list all of the available DB parameter group names, use the following command:\n  ``aws rds describe-db-parameter-groups --query \"DBParameterGroups[].DBParameterGroupName\" --output text`` \n  If any of the data members of the referenced parameter group are changed during an update, the DB instance might need to be restarted, which causes some interruption. If the parameter group contains static parameters, whether they were changed or not, an update triggers a reboot.\n  If you don't specify a value for ``DBParameterGroupName`` property, the default DB parameter group for the specified engine and engine version is used."
      },
      "dbSecurityGroups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.\n  If you set DBSecurityGroups, you must not set VPCSecurityGroups, and vice versa. Also, note that the DBSecurityGroups property exists only for backwards compatibility with older regions and is no longer recommended for providing security information to an RDS DB instance. Instead, use VPCSecurityGroups.\n  If you specify this property, AWS CloudFormation sends only the following properties (if specified) to Amazon RDS during create operations:\n  +   ``AllocatedStorage`` \n  +   ``AutoMinorVersionUpgrade`` \n  +   ``AvailabilityZone`` \n  +   ``BackupRetentionPeriod`` \n  +   ``CharacterSetName`` \n  +   ``DBInstanceClass`` \n  +   ``DBName`` \n  +   ``DBParameterGroupName`` \n  +   ``DBSecurityGroups`` \n  +   ``DBSubnetGroupName`` \n  +   ``Engine`` \n  +   ``EngineVersion`` \n  +   ``Iops`` \n  +   ``LicenseModel`` \n  +   ``MasterUsername`` \n  +   ``MasterUserPassword`` \n  +   ``MultiAZ`` \n  +   ``OptionGroupName`` \n  +   ``PreferredBackupWindow`` \n  +   ``PreferredMaintenanceWindow`` \n  \n All other properties are ignored. Specify a virtual private cloud (VPC) security group if you want to submit other properties, such as ``StorageType``, ``StorageEncrypted``, or ``KmsKeyId``. If you're already using the ``DBSecurityGroups`` property, you can't use these other properties by updating your DB instance to use a VPC security group. You must recreate the DB instance."
      },
      "dbSnapshotIdentifier": {
        "type": "string",
        "description": "The name or Amazon Resource Name (ARN) of the DB snapshot that's used to restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the snapshot.\n By specifying this property, you can create a DB instance from the specified DB snapshot. If the ``DBSnapshotIdentifier`` property is an empty string or the ``AWS::RDS::DBInstance`` declaration has no ``DBSnapshotIdentifier`` property, AWS CloudFormation creates a new database. If the property contains a value (other than an empty string), AWS CloudFormation creates a database from the specified snapshot. If a snapshot with the specified name doesn't exist, AWS CloudFormation can't create the database and it rolls back the stack.\n Some DB instance properties aren't valid when you restore from a snapshot, such as the ``MasterUsername`` and ``MasterUserPassword`` properties, and the point-in-time recovery properties ``RestoreTime`` and ``UseLatestRestorableTime``. For information about the properties that you can specify, see the [RestoreDBInstanceFromDBSnapshot](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_RestoreDBInstanceFromDBSnapshot.html) action in the *Amazon RDS API Reference*.\n After you restore a DB instance with a ``DBSnapshotIdentifier`` property, you must specify the same ``DBSnapshotIdentifier`` property for any future updates to the DB instance. When you specify this property for an update, the DB instance is not restored from the DB snapshot again, and the data in the database is not changed. However, if you don't specify the ``DBSnapshotIdentifier`` property, an empty DB instance is created, and the original DB instance is deleted. If you specify a property that is different from the previous snapshot restore property, a new DB instance is restored from the specified ``DBSnapshotIdentifier`` property, and the original DB instance is deleted.\n If you specify the ``DBSnapshotIdentifier`` property to restore a DB instance (as opposed to specifying it for DB instance updates), then don't specify the following properties:\n  +   ``CharacterSetName`` \n  +   ``DBClusterIdentifier`` \n  +   ``DBName`` \n  +   ``KmsKeyId`` \n  +   ``MasterUsername`` \n  +   ``MasterUserPassword`` \n  +   ``PromotionTier`` \n  +   ``SourceDBInstanceIdentifier`` \n  +   ``SourceRegion`` \n  +   ``StorageEncrypted`` (for an unencrypted snapshot)\n  +   ``Timezone`` \n  \n  *Amazon Aurora* \n Not applicable. Snapshot restore is managed by the DB cluster."
      },
      "dbSubnetGroupName": {
        "type": "string",
        "description": "A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new VPC. \n If you don't specify a DB subnet group, RDS uses the default DB subnet group if one exists. If a default DB subnet group does not exist, and you don't specify a ``DBSubnetGroupName``, the DB instance fails to launch. \n For more information about using Amazon RDS in a VPC, see [Amazon VPC and Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html) in the *Amazon RDS User Guide*. \n This setting doesn't apply to Amazon Aurora DB instances. The DB subnet group is managed by the DB cluster. If specified, the setting must match the DB cluster setting."
      },
      "dbSystemId": {
        "type": "string",
        "description": "The Oracle system identifier (SID), which is the name of the Oracle database instance that manages your database files. In this context, the term \"Oracle database instance\" refers exclusively to the system global area (SGA) and Oracle background processes. If you don't specify a SID, the value defaults to ``RDSCDB``. The Oracle SID is also the name of your CDB."
      },
      "dedicatedLogVolume": {
        "type": "boolean",
        "description": "Indicates whether the DB instance has a dedicated log volume (DLV) enabled."
      },
      "deleteAutomatedBackups": {
        "type": "boolean",
        "description": "A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.\n  *Amazon Aurora* \n Not applicable. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the DB cluster are not deleted."
      },
      "deletionProtection": {
        "type": "boolean",
        "description": "Specifies whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see [Deleting a DB Instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).\n This setting doesn't apply to Amazon Aurora DB instances. You can enable or disable deletion protection for the DB cluster. For more information, see ``CreateDBCluster``. DB instances in a DB cluster can be deleted even when deletion protection is enabled for the DB cluster."
      },
      "domain": {
        "type": "string",
        "description": "The Active Directory directory ID to create the DB instance in. Currently, only Db2, MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.\n For more information, see [Kerberos Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html) in the *Amazon RDS User Guide*."
      },
      "domainAuthSecretArn": {
        "type": "string",
        "description": "The ARN for the Secrets Manager secret with the credentials for the user joining the domain.\n Example: ``arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456``"
      },
      "domainDnsIps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.\n Constraints:\n  +  Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.\n  \n Example: ``123.124.125.126,234.235.236.237``"
      },
      "domainFqdn": {
        "type": "string",
        "description": "The fully qualified domain name (FQDN) of an Active Directory domain.\n Constraints:\n  +  Can't be longer than 64 characters.\n  \n Example: ``mymanagedADtest.mymanagedAD.mydomain``"
      },
      "domainIamRoleName": {
        "type": "string",
        "description": "The name of the IAM role to use when making API calls to the Directory Service.\n This setting doesn't apply to the following DB instances:\n  +  Amazon Aurora (The domain is managed by the DB cluster.)\n  +  RDS Custom"
      },
      "domainOu": {
        "type": "string",
        "description": "The Active Directory organizational unit for your DB instance to join.\n Constraints:\n  +  Must be in the distinguished name format.\n  +  Can't be longer than 64 characters.\n  \n Example: ``OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain``"
      },
      "enableCloudwatchLogsExports": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the *Amazon Relational Database Service User Guide*.\n  *Amazon Aurora* \n Not applicable. CloudWatch Logs exports are managed by the DB cluster. \n  *Db2* \n Valid values: ``diag.log``, ``notify.log`` \n  *MariaDB* \n Valid values: ``audit``, ``error``, ``general``, ``slowquery`` \n  *Microsoft SQL Server* \n Valid values: ``agent``, ``error`` \n  *MySQL* \n Valid values: ``audit``, ``error``, ``general``, ``slowquery`` \n  *Oracle* \n Valid values: ``alert``, ``audit``, ``listener``, ``trace``, ``oemagent`` \n  *PostgreSQL* \n Valid values: ``postgresql``, ``upgrade``"
      },
      "enableIamDatabaseAuthentication": {
        "type": "boolean",
        "description": "A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.\n This property is supported for RDS for MariaDB, RDS for MySQL, and RDS for PostgreSQL. For more information, see [IAM Database Authentication for MariaDB, MySQL, and PostgreSQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html) in the *Amazon RDS User Guide.* \n  *Amazon Aurora* \n Not applicable. Mapping AWS IAM accounts to database accounts is managed by the DB cluster."
      },
      "enablePerformanceInsights": {
        "type": "boolean",
        "description": "Specifies whether to enable Performance Insights for the DB instance. For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the *Amazon RDS User Guide*.\n This setting doesn't apply to RDS Custom DB instances."
      },
      "engine": {
        "type": "string",
        "description": "The name of the database engine to use for this DB instance. Not every database engine is available in every AWS Region.\n This property is required when creating a DB instance.\n  You can convert an Oracle database from the non-CDB architecture to the container database (CDB) architecture by updating the ``Engine`` value in your templates from ``oracle-ee`` to ``oracle-ee-cdb`` or from ``oracle-se2`` to ``oracle-se2-cdb``. Converting to the CDB architecture requires an interruption.\n  Valid Values:\n  +   ``aurora-mysql`` (for Aurora MySQL DB instances)\n  +   ``aurora-postgresql`` (for Aurora PostgreSQL DB instances)\n  +   ``custom-oracle-ee`` (for RDS Custom for Oracle DB instances)\n  +   ``custom-oracle-ee-cdb`` (for RDS Custom for Oracle DB instances)\n  +   ``custom-sqlserver-ee`` (for RDS Custom for SQL Server DB instances)\n  +   ``custom-sqlserver-se`` (for RDS Custom for SQL Server DB instances)\n  +   ``custom-sqlserver-web`` (for RDS Custom for SQL Server DB instances)\n  +   ``db2-ae`` \n  +   ``db2-se`` \n  +   ``mariadb`` \n  +   ``mysql`` \n  +   ``oracle-ee`` \n  +   ``oracle-ee-cdb`` \n  +   ``oracle-se2`` \n  +   ``oracle-se2-cdb`` \n  +   ``postgres`` \n  +   ``sqlserver-ee`` \n  +   ``sqlserver-se`` \n  +   ``sqlserver-ex`` \n  +   ``sqlserver-web``"
      },
      "engineLifecycleSupport": {
        "type": "string",
        "description": "The life cycle type for this DB instance.\n  By default, this value is set to ``open-source-rds-extended-support``, which enrolls your DB instance into Amazon RDS Extended Support. At the end of standard support, you can avoid charges for Extended Support by setting the value to ``open-source-rds-extended-support-disabled``. In this case, creating the DB instance will fail if the DB major version is past its end of standard support date.\n  This setting applies only to RDS for MySQL and RDS for PostgreSQL. For Amazon Aurora DB instances, the life cycle type is managed by the DB cluster.\n You can use this setting to enroll your DB instance into Amazon RDS Extended Support. With RDS Extended Support, you can run the selected major engine version on your DB instance past the end of standard support for that engine version. For more information, see [Using Amazon RDS Extended Support](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html) in the *Amazon RDS User Guide*.\n Valid Values: ``open-source-rds-extended-support | open-source-rds-extended-support-disabled`` \n Default: ``open-source-rds-extended-support``"
      },
      "engineVersion": {
        "type": "string",
        "description": "The version number of the database engine to use.\n For a list of valid engine versions, use the ``DescribeDBEngineVersions`` action.\n The following are the database engines and links to information about the major and minor versions that are available with Amazon RDS. Not every database engine is available for every AWS Region.\n  *Amazon Aurora* \n Not applicable. The version number of the database engine to be used by the DB instance is managed by the DB cluster.\n  *Db2* \n See [Amazon RDS for Db2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Db2.html#Db2.Concepts.VersionMgmt) in the *Amazon RDS User Guide.* \n  *MariaDB* \n See [MariaDB on Amazon RDS Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt) in the *Amazon RDS User Guide.* \n  *Microsoft SQL Server* \n See [Microsoft SQL Server Versions on Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport) in the *Amazon RDS User Guide.* \n  *MySQL* \n See [MySQL on Amazon RDS Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt) in the *Amazon RDS User Guide.* \n  *Oracle* \n See [Oracle Database Engine Release Notes](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html) in the *Amazon RDS User Guide.* \n  *PostgreSQL* \n See [Supported PostgreSQL Database Versions](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.DBVersions) in the *Amazon RDS User Guide.*"
      },
      "iops": {
        "type": "integer",
        "description": "The number of I/O operations per second (IOPS) that the database provisions. The value must be equal to or greater than 1000. \n If you specify this property, you must follow the range of allowed ratios of your requested IOPS rate to the amount of storage that you allocate (IOPS to allocated storage). For example, you can provision an Oracle database instance with 1000 IOPS and 200 GiB of storage (a ratio of 5:1), or specify 2000 IOPS with 200 GiB of storage (a ratio of 10:1). For more information, see [Amazon RDS Provisioned IOPS Storage to Improve Performance](https://docs.aws.amazon.com/AmazonRDS/latest/DeveloperGuide/CHAP_Storage.html#USER_PIOPS) in the *Amazon RDS User Guide*.\n  If you specify ``io1`` for the ``StorageType`` property, then you must also specify the ``Iops`` property.\n  Constraints:\n  +  For RDS for Db2, MariaDB, MySQL, Oracle, and PostgreSQL - Must be a multiple between .5 and 50 of the storage amount for the DB instance.\n  +  For RDS for SQL Server - Must be a multiple between 1 and 50 of the storage amount for the DB instance."
      },
      "kmsKeyId": {
        "type": "string",
        "description": "The ARN of the AWS KMS key that's used to encrypt the DB instance, such as ``arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef``. If you enable the StorageEncrypted property but don't specify this property, AWS CloudFormation uses the default KMS key. If you specify this property, you must set the StorageEncrypted property to true. \n If you specify the ``SourceDBInstanceIdentifier`` or ``SourceDbiResourceId`` property, don't specify this property. The value is inherited from the source DB instance, and if the DB instance is encrypted, the specified ``KmsKeyId`` property is used. However, if the source DB instance is in a different AWS Region, you must specify a KMS key ID.\n If you specify the ``SourceDBInstanceAutomatedBackupsArn`` property, don't specify this property. The value is inherited from the source DB instance automated backup, and if the automated backup is encrypted, the specified ``KmsKeyId`` property is used.\n If you create an encrypted read replica in a different AWS Region, then you must specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the region that they're created in, and you can't use encryption keys from one region in another region.\n If you specify the ``DBSnapshotIdentifier`` property, don't specify this property. The ``StorageEncrypted`` property value is inherited from the snapshot. If the DB instance is encrypted, the specified ``KmsKeyId`` property is also inherited from the snapshot.\n If you specify ``DBSecurityGroups``, AWS CloudFormation ignores this property. To specify both a security group and this property, you must use a VPC security group. For more information about Amazon RDS and VPC, see [Using Amazon RDS with Amazon VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html) in the *Amazon RDS User Guide*.\n  *Amazon Aurora* \n Not applicable. The KMS key identifier is managed by the DB cluster."
      },
      "licenseModel": {
        "type": "string",
        "description": "License model information for this DB instance.\n  Valid Values:\n  +  Aurora MySQL - ``general-public-license`` \n  +  Aurora PostgreSQL - ``postgresql-license`` \n  +  RDS for Db2 - ``bring-your-own-license``. For more information about RDS for Db2 licensing, see [](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-licensing.html) in the *Amazon RDS User Guide.* \n  +  RDS for MariaDB - ``general-public-license`` \n  +  RDS for Microsoft SQL Server - ``license-included`` \n  +  RDS for MySQL - ``general-public-license`` \n  +  RDS for Oracle - ``bring-your-own-license`` or ``license-included`` \n  +  RDS for PostgreSQL - ``postgresql-license`` \n  \n  If you've specified ``DBSecurityGroups`` and then you update the license model, AWS CloudFormation replaces the underlying DB instance. This will incur some interruptions to database availability."
      },
      "manageMasterUserPassword": {
        "type": "boolean",
        "description": "Specifies whether to manage the master user password with AWS Secrets Manager.\n For more information, see [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide.* \n Constraints:\n  +  Can't manage the master user password with AWS Secrets Manager if ``MasterUserPassword`` is specified."
      },
      "masterUserPassword": {
        "type": "string",
        "description": "The password for the master user. The password can include any printable ASCII character except \"/\", \"\"\", or \"@\".\n  *Amazon Aurora* \n Not applicable. The password for the master user is managed by the DB cluster.\n  *RDS for Db2* \n Must contain from 8 to 255 characters.\n  *RDS for MariaDB* \n Constraints: Must contain from 8 to 41 characters.\n  *RDS for Microsoft SQL Server* \n Constraints: Must contain from 8 to 128 characters.\n  *RDS for MySQL* \n Constraints: Must contain from 8 to 41 characters.\n  *RDS for Oracle* \n Constraints: Must contain from 8 to 30 characters.\n  *RDS for PostgreSQL* \n Constraints: Must contain from 8 to 128 characters."
      },
      "masterUserSecret": {
        "$ref": "#/types/aws-native:rds:DbInstanceMasterUserSecret",
        "description": "The secret managed by RDS in AWS Secrets Manager for the master user password.\n For more information, see [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide.*"
      },
      "masterUsername": {
        "type": "string",
        "description": "The master user name for the DB instance.\n  If you specify the ``SourceDBInstanceIdentifier`` or ``DBSnapshotIdentifier`` property, don't specify this property. The value is inherited from the source DB instance or snapshot.\n When migrating a self-managed Db2 database, we recommend that you use the same master username as your self-managed Db2 instance name.\n   *Amazon Aurora* \n Not applicable. The name for the master user is managed by the DB cluster. \n  *RDS for Db2* \n Constraints:\n  +  Must be 1 to 16 letters or numbers.\n  +  First character must be a letter.\n  +  Can't be a reserved word for the chosen database engine.\n  \n  *RDS for MariaDB* \n Constraints:\n  +  Must be 1 to 16 letters or numbers.\n  +  Can't be a reserved word for the chosen database engine.\n  \n  *RDS for Microsoft SQL Server* \n Constraints:\n  +  Must be 1 to 128 letters or numbers.\n  +  First character must be a letter.\n  +  Can't be a reserved word for the chosen database engine.\n  \n  *RDS for MySQL* \n Constraints:\n  +  Must be 1 to 16 letters or numbers.\n  +  First character must be a letter.\n  +  Can't be a reserved word for the chosen database engine.\n  \n  *RDS for Oracle* \n Constraints:\n  +  Must be 1 to 30 letters or numbers.\n  +  First character must be a letter.\n  +  Can't be a reserved word for the chosen database engine.\n  \n  *RDS for PostgreSQL* \n Constraints:\n  +  Must be 1 to 63 letters or numbers.\n  +  First character must be a letter.\n  +  Can't be a reserved word for the chosen database engine."
      },
      "maxAllocatedStorage": {
        "type": "integer",
        "description": "The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.\n For more information about this setting, including limitations that apply to it, see [Managing capacity automatically with Amazon RDS storage autoscaling](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling) in the *Amazon RDS User Guide*.\n This setting doesn't apply to the following DB instances:\n  +  Amazon Aurora (Storage is managed by the DB cluster.)\n  +  RDS Custom"
      },
      "monitoringInterval": {
        "type": "integer",
        "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collection of Enhanced Monitoring metrics, specify ``0``.\n If ``MonitoringRoleArn`` is specified, then you must set ``MonitoringInterval`` to a value other than ``0``.\n This setting doesn't apply to RDS Custom DB instances.\n Valid Values: ``0 | 1 | 5 | 10 | 15 | 30 | 60`` \n Default: ``0``"
      },
      "monitoringRoleArn": {
        "type": "string",
        "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, ``arn:aws:iam:123456789012:role/emaccess``. For information on creating a monitoring role, see [Setting Up and Enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the *Amazon RDS User Guide*.\n If ``MonitoringInterval`` is set to a value other than ``0``, then you must supply a ``MonitoringRoleArn`` value.\n This setting doesn't apply to RDS Custom DB instances."
      },
      "multiAz": {
        "type": "boolean",
        "description": "Specifies whether the DB instance is a Multi-AZ deployment. You can't set the ``AvailabilityZone`` parameter if the DB instance is a Multi-AZ deployment.\n This setting doesn't apply to the following DB instances:\n  +  Amazon Aurora (DB instance Availability Zones (AZs) are managed by the DB cluster.)\n  +  RDS Custom"
      },
      "ncharCharacterSetName": {
        "type": "string",
        "description": "The name of the NCHAR character set for the Oracle DB instance.\n This setting doesn't apply to RDS Custom DB instances."
      },
      "networkType": {
        "type": "string",
        "description": "The network type of the DB instance.\n Valid values:\n  +   ``IPV4`` \n  +   ``DUAL`` \n  \n The network type is determined by the ``DBSubnetGroup`` specified for the DB instance. A ``DBSubnetGroup`` can support only the IPv4 protocol or the IPv4 and IPv6 protocols (``DUAL``).\n For more information, see [Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the *Amazon RDS User Guide.*"
      },
      "optionGroupName": {
        "type": "string",
        "description": "Indicates that the DB instance should be associated with the specified option group.\n Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group. Also, that option group can't be removed from a DB instance once it is associated with a DB instance."
      },
      "performanceInsightsKmsKeyId": {
        "type": "string",
        "description": "The AWS KMS key identifier for encryption of Performance Insights data.\n The KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.\n If you do not specify a value for ``PerformanceInsightsKMSKeyId``, then Amazon RDS uses your default KMS key. There is a default KMS key for your AWS account. Your AWS account has a different default KMS key for each AWS Region.\n For information about enabling Performance Insights, see [EnablePerformanceInsights](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-enableperformanceinsights)."
      },
      "performanceInsightsRetentionPeriod": {
        "type": "integer",
        "description": "The number of days to retain Performance Insights data. When creating a DB instance without enabling Performance Insights, you can't specify the parameter ``PerformanceInsightsRetentionPeriod``.\n This setting doesn't apply to RDS Custom DB instances.\n Valid Values:\n  +   ``7`` \n  +   *month* * 31, where *month* is a number of months from 1-23. Examples: ``93`` (3 months * 31), ``341`` (11 months * 31), ``589`` (19 months * 31)\n  +   ``731`` \n  \n Default: ``7`` days\n If you specify a retention period that isn't valid, such as ``94``, Amazon RDS returns an error."
      },
      "port": {
        "type": "string",
        "description": "The port number on which the database accepts connections.\n This setting doesn't apply to Aurora DB instances. The port number is managed by the cluster.\n Valid Values: ``1150-65535`` \n Default:\n  +  RDS for Db2 - ``50000`` \n  +  RDS for MariaDB - ``3306`` \n  +  RDS for Microsoft SQL Server - ``1433`` \n  +  RDS for MySQL - ``3306`` \n  +  RDS for Oracle - ``1521`` \n  +  RDS for PostgreSQL - ``5432`` \n  \n Constraints:\n  +  For RDS for Microsoft SQL Server, the value can't be ``1234``, ``1434``, ``3260``, ``3343``, ``3389``, ``47001``, or ``49152-49156``."
      },
      "preferredBackupWindow": {
        "type": "string",
        "description": "The daily time range during which automated backups are created if automated backups are enabled, using the ``BackupRetentionPeriod`` parameter. For more information, see [Backup Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow) in the *Amazon RDS User Guide.* \n Constraints:\n  +  Must be in the format ``hh24:mi-hh24:mi``.\n  +  Must be in Universal Coordinated Time (UTC).\n  +  Must not conflict with the preferred maintenance window.\n  +  Must be at least 30 minutes.\n  \n  *Amazon Aurora* \n Not applicable. The daily time range for creating automated backups is managed by the DB cluster."
      },
      "preferredMaintenanceWindow": {
        "type": "string",
        "description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).\n Format: ``ddd:hh24:mi-ddd:hh24:mi`` \n The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see [Maintaining a DB instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow) in the *Amazon RDS User Guide.* \n  This property applies when AWS CloudFormation initially creates the DB instance. If you use AWS CloudFormation to update the DB instance, those updates are applied immediately.\n  Constraints: Minimum 30-minute window."
      },
      "processorFeatures": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:rds:DbInstanceProcessorFeature"
        },
        "description": "The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.\n This setting doesn't apply to Amazon Aurora or RDS Custom DB instances."
      },
      "promotionTier": {
        "type": "integer",
        "description": "The order of priority in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see [Fault Tolerance for an Aurora DB Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance) in the *Amazon Aurora User Guide*.\n This setting doesn't apply to RDS Custom DB instances.\n Default: ``1`` \n Valid Values: ``0 - 15``"
      },
      "publiclyAccessible": {
        "type": "boolean",
        "description": "Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that resolves to a private IP address. \n The default behavior value depends on your VPC setup and the database subnet group. For more information, see the ``PubliclyAccessible`` parameter in the [CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) in the *Amazon RDS API Reference*."
      },
      "replicaMode": {
        "type": "string",
        "description": "The open mode of an Oracle read replica. For more information, see [Working with Oracle Read Replicas for Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html) in the *Amazon RDS User Guide*.\n This setting is only supported in RDS for Oracle.\n Default: ``open-read-only`` \n Valid Values: ``open-read-only`` or ``mounted``"
      },
      "restoreTime": {
        "type": "string",
        "description": "The date and time to restore from. This parameter applies to point-in-time recovery. For more information, see [Restoring a DB instance to a specified time](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIT.html) in the in the *Amazon RDS User Guide*.\n Constraints:\n  +  Must be a time in Universal Coordinated Time (UTC) format.\n  +  Must be before the latest restorable time for the DB instance.\n  +  Can't be specified if the ``UseLatestRestorableTime`` parameter is enabled.\n  \n Example: ``2009-09-07T23:45:00Z``"
      },
      "sourceDbClusterIdentifier": {
        "type": "string",
        "description": "The identifier of the Multi-AZ DB cluster that will act as the source for the read replica. Each DB cluster can have up to 15 read replicas.\n Constraints:\n  +  Must be the identifier of an existing Multi-AZ DB cluster.\n  +  Can't be specified if the ``SourceDBInstanceIdentifier`` parameter is also specified.\n  +  The specified DB cluster must have automatic backups enabled, that is, its backup retention period must be greater than 0.\n  +  The source DB cluster must be in the same AWS-Region as the read replica. Cross-Region replication isn't supported."
      },
      "sourceDbInstanceAutomatedBackupsArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the replicated automated backups from which to restore, for example, ``arn:aws:rds:us-east-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE``.\n This setting doesn't apply to RDS Custom."
      },
      "sourceDbInstanceIdentifier": {
        "type": "string",
        "description": "If you want to create a read replica DB instance, specify the ID of the source DB instance. Each DB instance can have a limited number of read replicas. For more information, see [Working with Read Replicas](https://docs.aws.amazon.com/AmazonRDS/latest/DeveloperGuide/USER_ReadRepl.html) in the *Amazon RDS User Guide*.\n For information about constraints that apply to DB instance identifiers, see [Naming constraints in Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints) in the *Amazon RDS User Guide*.\n The ``SourceDBInstanceIdentifier`` property determines whether a DB instance is a read replica. If you remove the ``SourceDBInstanceIdentifier`` property from your template and then update your stack, AWS CloudFormation promotes the read replica to a standalone DB instance.\n If you specify the ``UseLatestRestorableTime`` or ``RestoreTime`` properties in conjunction with the ``SourceDBInstanceIdentifier`` property, RDS restores the DB instance to the requested point in time, thereby creating a new DB instance.\n   +  If you specify a source DB instance that uses VPC security groups, we recommend that you specify the ``VPCSecurityGroups`` property. If you don't specify the property, the read replica inherits the value of the ``VPCSecurityGroups`` property from the source DB when you create the replica. However, if you update the stack, AWS CloudFormation reverts the replica's ``VPCSecurityGroups`` property to the default value because it's not defined in the stack's template. This change might cause unexpected issues.\n  +  Read replicas don't support deletion policies. AWS CloudFormation ignores any deletion policy that's associated with a read replica.\n  +  If you specify ``SourceDBInstanceIdentifier``, don't specify the ``DBSnapshotIdentifier`` property. You can't create a read replica from a snapshot.\n  +  Don't set the ``BackupRetentionPeriod``, ``DBName``, ``MasterUsername``, ``MasterUserPassword``, and ``PreferredBackupWindow`` properties. The database attributes are inherited from the source DB instance, and backups are disabled for read replicas.\n  +  If the source DB instance is in a different region than the read replica, specify the source region in ``SourceRegion``, and specify an ARN for a valid DB instance in ``SourceDBInstanceIdentifier``. For more information, see [Constructing a Amazon RDS Amazon Resource Name (ARN)](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html#USER_Tagging.ARN) in the *Amazon RDS User Guide*.\n  +  For DB instances in Amazon Aurora clusters, don't specify this property. Amazon RDS automatically assigns writer and reader DB instances."
      },
      "sourceDbiResourceId": {
        "type": "string",
        "description": "The resource ID of the source DB instance from which to restore."
      },
      "sourceRegion": {
        "type": "string",
        "description": "The ID of the region that contains the source DB instance for the read replica."
      },
      "storageEncrypted": {
        "type": "boolean",
        "description": "A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted.\n If you specify the ``KmsKeyId`` property, then you must enable encryption.\n If you specify the ``SourceDBInstanceIdentifier`` or ``SourceDbiResourceId`` property, don't specify this property. The value is inherited from the source DB instance, and if the DB instance is encrypted, the specified ``KmsKeyId`` property is used.\n If you specify the ``SourceDBInstanceAutomatedBackupsArn`` property, don't specify this property. The value is inherited from the source DB instance automated backup. \n If you specify ``DBSnapshotIdentifier`` property, don't specify this property. The value is inherited from the snapshot.\n  *Amazon Aurora* \n Not applicable. The encryption for DB instances is managed by the DB cluster."
      },
      "storageThroughput": {
        "type": "integer",
        "description": "Specifies the storage throughput value, in mebibyte per second (MiBps), for the DB instance. This setting applies only to the ``gp3`` storage type. \n This setting doesn't apply to RDS Custom or Amazon Aurora."
      },
      "storageType": {
        "type": "string",
        "description": "The storage type to associate with the DB instance.\n If you specify ``io1``, ``io2``, or ``gp3``, you must also include a value for the ``Iops`` parameter.\n This setting doesn't apply to Amazon Aurora DB instances. Storage is managed by the DB cluster.\n Valid Values: ``gp2 | gp3 | io1 | io2 | standard`` \n Default: ``io1``, if the ``Iops`` parameter is specified. Otherwise, ``gp3``."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Tags to assign to the DB instance."
      },
      "tdeCredentialArn": {
        "type": "string"
      },
      "tdeCredentialPassword": {
        "type": "string"
      },
      "timezone": {
        "type": "string",
        "description": "The time zone of the DB instance. The time zone parameter is currently supported only by [RDS for Db2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-time-zone) and [RDS for SQL Server](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone)."
      },
      "useDefaultProcessorFeatures": {
        "type": "boolean",
        "description": "Specifies whether the DB instance class of the DB instance uses its default processor features.\n This setting doesn't apply to RDS Custom DB instances."
      },
      "useLatestRestorableTime": {
        "type": "boolean",
        "description": "Specifies whether the DB instance is restored from the latest backup time. By default, the DB instance isn't restored from the latest backup time. This parameter applies to point-in-time recovery. For more information, see [Restoring a DB instance to a specified time](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIT.html) in the in the *Amazon RDS User Guide*.\n Constraints:\n  +  Can't be specified if the ``RestoreTime`` parameter is provided."
      },
      "vpcSecurityGroups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of existing VPC security groups and references to [AWS::EC2::SecurityGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html) resources created in the template.\n If you plan to update the resource, don't specify VPC security groups in a shared VPC.\n  If you set ``VPCSecurityGroups``, you must not set [DBSecurityGroups](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-dbsecuritygroups), and vice versa.\n  You can migrate a DB instance in your stack from an RDS DB security group to a VPC security group, but keep the following in mind:\n  +  You can't revert to using an RDS security group after you establish a VPC security group membership.\n  +  When you migrate your DB instance to VPC security groups, if your stack update rolls back because the DB instance update fails or because an update fails in another AWS CloudFormation resource, the rollback fails because it can't revert to an RDS security group.\n  +  To use the properties that are available when you use a VPC security group, you must recreate the DB instance. If you don't, AWS CloudFormation submits only the property values that are listed in the [DBSecurityGroups](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-dbsecuritygroups) property.\n  \n  To avoid this situation, migrate your DB instance to using VPC security groups only when that is the only change in your stack template. \n  *Amazon Aurora* \n Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. If specified, the setting must match the DB cluster setting."
      }
    }
  },
  "aws-native:rds:DbProxyTargetGroup": {
    "cfTypeName": "AWS::RDS::DBProxyTargetGroup",
    "properties": {
      "connectionPoolConfigurationInfo": {
        "$ref": "#/types/aws-native:rds:DbProxyTargetGroupConnectionPoolConfigurationInfoFormat",
        "description": "Displays the settings that control the size and behavior of the connection pool associated with a `DBProxyTarget` ."
      },
      "dbClusterIdentifiers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "One or more DB cluster identifiers."
      },
      "dbInstanceIdentifiers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "One or more DB instance identifiers."
      },
      "dbProxyName": {
        "type": "string",
        "description": "The identifier for the proxy."
      },
      "targetGroupName": {
        "$ref": "#/types/aws-native:rds:DbProxyTargetGroupTargetGroupName",
        "description": "The identifier for the DBProxyTargetGroup"
      }
    }
  },
  "aws-native:rds:DbShardGroup": {
    "cfTypeName": "AWS::RDS::DBShardGroup",
    "properties": {
      "computeRedundancy": {
        "type": "integer",
        "description": "Specifies whether to create standby DB shard groups for the DB shard group. Valid values are the following:\n  +  0 - Creates a DB shard group without a standby DB shard group. This is the default value.\n  +  1 - Creates a DB shard group with a standby DB shard group in a different Availability Zone (AZ).\n  +  2 - Creates a DB shard group with two standby DB shard groups in two different AZs."
      },
      "dbClusterIdentifier": {
        "type": "string",
        "description": "The name of the primary DB cluster for the DB shard group."
      },
      "dbShardGroupIdentifier": {
        "type": "string",
        "description": "The name of the DB shard group."
      },
      "maxAcu": {
        "type": "number",
        "description": "The maximum capacity of the DB shard group in Aurora capacity units (ACUs)."
      },
      "minAcu": {
        "type": "number",
        "description": "The minimum capacity of the DB shard group in Aurora capacity units (ACUs)."
      },
      "publiclyAccessible": {
        "type": "boolean",
        "description": "Specifies whether the DB shard group is publicly accessible.\n When the DB shard group is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB shard group's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB shard group's VPC. Access to the DB shard group is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB shard group doesn't permit it.\n When the DB shard group isn't publicly accessible, it is an internal DB shard group with a DNS name that resolves to a private IP address.\n Default: The default behavior varies depending on whether ``DBSubnetGroupName`` is specified.\n If ``DBSubnetGroupName`` isn't specified, and ``PubliclyAccessible`` isn't specified, the following applies:\n  +  If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB shard group is private.\n  +  If the default VPC in the target Region has an internet gateway attached to it, the DB shard group is public.\n  \n If ``DBSubnetGroupName`` is specified, and ``PubliclyAccessible`` isn't specified, the following applies:\n  +  If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB shard group is private.\n  +  If the subnets are part of a VPC that has an internet gateway attached to it, the DB shard group is public."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An optional set of key-value pairs to associate arbitrary data of your choosing with the DB shard group."
      }
    }
  },
  "aws-native:rds:GlobalCluster": {
    "cfTypeName": "AWS::RDS::GlobalCluster",
    "properties": {
      "deletionProtection": {
        "type": "boolean",
        "description": "The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled."
      },
      "engine": {
        "$ref": "#/types/aws-native:rds:GlobalClusterEngine",
        "description": "The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora).\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster."
      },
      "engineLifecycleSupport": {
        "type": "string",
        "description": "The life cycle type of the global cluster. You can use this setting to enroll your global cluster into Amazon RDS Extended Support."
      },
      "engineVersion": {
        "type": "string",
        "description": "The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster."
      },
      "globalClusterIdentifier": {
        "type": "string",
        "description": "The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string."
      },
      "sourceDbClusterIdentifier": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) to use as the primary cluster of the global database. This parameter is optional. This parameter is stored as a lowercase string."
      },
      "storageEncrypted": {
        "type": "boolean",
        "description": " The storage encryption setting for the new global database cluster.\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:redshift:Cluster": {
    "cfTypeName": "AWS::Redshift::Cluster",
    "properties": {
      "allowVersionUpgrade": {
        "type": "boolean",
        "description": "Major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default value is True"
      },
      "aquaConfigurationStatus": {
        "type": "string",
        "description": "The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values include the following.\n\nenabled - Use AQUA if it is available for the current Region and Amazon Redshift node type.\ndisabled - Don't use AQUA.\nauto - Amazon Redshift determines whether to use AQUA.\n"
      },
      "automatedSnapshotRetentionPeriod": {
        "type": "integer",
        "description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Default value is 1"
      },
      "availabilityZone": {
        "type": "string",
        "description": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint"
      },
      "availabilityZoneRelocation": {
        "type": "boolean",
        "description": "The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete."
      },
      "availabilityZoneRelocationStatus": {
        "type": "string",
        "description": "The availability zone relocation status of the cluster"
      },
      "classic": {
        "type": "boolean",
        "description": "A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to false , the resize type is elastic."
      },
      "clusterIdentifier": {
        "type": "string",
        "description": "A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. All alphabetical characters must be lower case, no hypens at the end, no two consecutive hyphens. Cluster name should be unique for all clusters within an AWS account"
      },
      "clusterParameterGroupName": {
        "type": "string",
        "description": "The name of the parameter group to be associated with this cluster."
      },
      "clusterSecurityGroups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of security groups to be associated with this cluster."
      },
      "clusterSubnetGroupName": {
        "type": "string",
        "description": "The name of a cluster subnet group to be associated with this cluster."
      },
      "clusterType": {
        "type": "string",
        "description": "The type of the cluster. When cluster type is specified as single-node, the NumberOfNodes parameter is not required and if multi-node, the NumberOfNodes parameter is required"
      },
      "clusterVersion": {
        "type": "string",
        "description": "The version of the Amazon Redshift engine software that you want to deploy on the cluster.The version selected runs on all the nodes in the cluster."
      },
      "dbName": {
        "type": "string",
        "description": "The name of the first database to be created when the cluster is created. To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database."
      },
      "deferMaintenance": {
        "type": "boolean",
        "description": "A boolean indicating whether to enable the deferred maintenance window."
      },
      "deferMaintenanceDuration": {
        "type": "integer",
        "description": "An integer indicating the duration of the maintenance window in days. If you specify a duration, you can't specify an end time. The duration must be 45 days or less."
      },
      "deferMaintenanceEndTime": {
        "type": "string",
        "description": "A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can't specify a duration."
      },
      "deferMaintenanceStartTime": {
        "type": "string",
        "description": "A timestamp indicating the start time for the deferred maintenance window."
      },
      "destinationRegion": {
        "type": "string",
        "description": "The destination AWS Region that you want to copy snapshots to. Constraints: Must be the name of a valid AWS Region. For more information, see Regions and Endpoints in the Amazon Web Services [https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region] General Reference"
      },
      "elasticIp": {
        "type": "string",
        "description": "The Elastic IP (EIP) address for the cluster."
      },
      "encrypted": {
        "type": "boolean",
        "description": "If true, the data in the cluster is encrypted at rest."
      },
      "endpoint": {
        "$ref": "#/types/aws-native:redshift:ClusterEndpoint",
        "description": "The connection endpoint."
      },
      "enhancedVpcRouting": {
        "type": "boolean",
        "description": "An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.\n\nIf this option is true , enhanced VPC routing is enabled.\n\nDefault: false"
      },
      "hsmClientCertificateIdentifier": {
        "type": "string",
        "description": "Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM"
      },
      "hsmConfigurationIdentifier": {
        "type": "string",
        "description": "Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM."
      },
      "iamRoles": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 50 IAM roles in a single request"
      },
      "kmsKeyId": {
        "type": "string",
        "description": "The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster."
      },
      "loggingProperties": {
        "$ref": "#/types/aws-native:redshift:ClusterLoggingProperties",
        "description": "Specifies logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster."
      },
      "maintenanceTrackName": {
        "type": "string",
        "description": "The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the PendingModifiedValues for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied."
      },
      "manageMasterPassword": {
        "type": "boolean",
        "description": "A boolean indicating if the redshift cluster's admin user credentials is managed by Redshift or not. You can't use MasterUserPassword if ManageMasterPassword is true. If ManageMasterPassword is false or not set, Amazon Redshift uses MasterUserPassword for the admin user account's password."
      },
      "manualSnapshotRetentionPeriod": {
        "type": "integer",
        "description": "The number of days to retain newly copied snapshots in the destination AWS Region after they are copied from the source AWS Region. If the value is -1, the manual snapshot is retained indefinitely.\n\nThe value must be either -1 or an integer between 1 and 3,653."
      },
      "masterPasswordSecretKmsKeyId": {
        "type": "string",
        "description": "The ID of the Key Management Service (KMS) key used to encrypt and store the cluster's admin user credentials secret."
      },
      "masterUserPassword": {
        "type": "string",
        "description": "The password associated with the master user account for the cluster that is being created. You can't use MasterUserPassword if ManageMasterPassword is true. Password must be between 8 and 64 characters in length, should have at least one uppercase letter.Must contain at least one lowercase letter.Must contain one number.Can be any printable ASCII character."
      },
      "masterUsername": {
        "type": "string",
        "description": "The user name associated with the master user account for the cluster that is being created. The user name can't be PUBLIC and first character must be a letter."
      },
      "multiAz": {
        "type": "boolean",
        "description": "A boolean indicating if the redshift cluster is multi-az or not. If you don't provide this parameter or set the value to false, the redshift cluster will be single-az."
      },
      "namespaceResourcePolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "The namespace resource policy document that will be attached to a Redshift cluster.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Redshift::Cluster` for more information about the expected schema for this property."
      },
      "nodeType": {
        "type": "string",
        "description": "The node type to be provisioned for the cluster.Valid Values: ds2.xlarge | ds2.8xlarge | dc1.large | dc1.8xlarge | dc2.large | dc2.8xlarge | ra3.large | ra3.4xlarge | ra3.16xlarge"
      },
      "numberOfNodes": {
        "type": "integer",
        "description": "The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node."
      },
      "ownerAccount": {
        "type": "string",
        "description": "The AWS account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot."
      },
      "port": {
        "type": "integer",
        "description": "The port number on which the cluster accepts incoming connections. The cluster is accessible only via the JDBC and ODBC connection strings"
      },
      "preferredMaintenanceWindow": {
        "type": "string",
        "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur."
      },
      "publiclyAccessible": {
        "type": "boolean",
        "description": "If true, the cluster can be accessed from a public network."
      },
      "resourceAction": {
        "type": "string",
        "description": "The Redshift operation to be performed. Resource Action supports pause-cluster, resume-cluster, failover-primary-compute APIs"
      },
      "revisionTarget": {
        "type": "string",
        "description": "The identifier of the database revision. You can retrieve this value from the response to the DescribeClusterDbRevisions request."
      },
      "rotateEncryptionKey": {
        "type": "boolean",
        "description": "A boolean indicating if we want to rotate Encryption Keys."
      },
      "snapshotClusterIdentifier": {
        "type": "string",
        "description": "The name of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name."
      },
      "snapshotCopyGrantName": {
        "type": "string",
        "description": "The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region."
      },
      "snapshotCopyManual": {
        "type": "boolean",
        "description": "Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots."
      },
      "snapshotCopyRetentionPeriod": {
        "type": "integer",
        "description": "The number of days to retain automated snapshots in the destination region after they are copied from the source region. \n\n Default is 7. \n\n Constraints: Must be at least 1 and no more than 35."
      },
      "snapshotIdentifier": {
        "type": "string",
        "description": "The name of the snapshot from which to create the new cluster. This parameter isn't case sensitive."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The list of tags for the cluster parameter group."
      },
      "vpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster."
      }
    }
  },
  "aws-native:redshift:ClusterSubnetGroup": {
    "cfTypeName": "AWS::Redshift::ClusterSubnetGroup",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description of the parameter group."
      },
      "subnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The list of VPC subnet IDs"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The list of tags for the cluster parameter group."
      }
    }
  },
  "aws-native:redshift:EndpointAccess": {
    "cfTypeName": "AWS::Redshift::EndpointAccess",
    "properties": {
      "clusterIdentifier": {
        "type": "string",
        "description": "A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. All alphabetical characters must be lower case, no hypens at the end, no two consecutive hyphens. Cluster name should be unique for all clusters within an AWS account"
      },
      "endpointName": {
        "type": "string",
        "description": "The name of the endpoint."
      },
      "resourceOwner": {
        "type": "string",
        "description": "The AWS account ID of the owner of the cluster."
      },
      "subnetGroupName": {
        "type": "string",
        "description": "The subnet group name where Amazon Redshift chooses to deploy the endpoint."
      },
      "vpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of vpc security group ids to apply to the created endpoint access."
      }
    }
  },
  "aws-native:redshift:EndpointAuthorization": {
    "cfTypeName": "AWS::Redshift::EndpointAuthorization",
    "properties": {
      "account": {
        "type": "string",
        "description": "The target AWS account ID to grant or revoke access for."
      },
      "clusterIdentifier": {
        "type": "string",
        "description": "The cluster identifier."
      },
      "force": {
        "type": "boolean",
        "description": " Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted."
      },
      "vpcIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The virtual private cloud (VPC) identifiers to grant or revoke access to."
      }
    }
  },
  "aws-native:refactorspaces:Route": {
    "cfTypeName": "AWS::RefactorSpaces::Route",
    "properties": {
      "applicationIdentifier": {
        "type": "string",
        "description": "The unique identifier of the application."
      },
      "defaultRoute": {
        "$ref": "#/types/aws-native:refactorspaces:RouteDefaultRouteInput",
        "description": "Configuration for the default route type."
      },
      "environmentIdentifier": {
        "type": "string",
        "description": "The unique identifier of the environment."
      },
      "routeType": {
        "$ref": "#/types/aws-native:refactorspaces:RouteType",
        "description": "The route type of the route."
      },
      "serviceIdentifier": {
        "type": "string",
        "description": "The unique identifier of the service."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair."
      },
      "uriPathRoute": {
        "$ref": "#/types/aws-native:refactorspaces:RouteUriPathRouteInput",
        "description": "The configuration for the URI path route type."
      }
    }
  },
  "aws-native:rekognition:Collection": {
    "cfTypeName": "AWS::Rekognition::Collection",
    "properties": {
      "collectionId": {
        "type": "string",
        "description": "ID for the collection that you are creating."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:resourceexplorer2:DefaultViewAssociation": {
    "cfTypeName": "AWS::ResourceExplorer2::DefaultViewAssociation",
    "properties": {
      "viewArn": {
        "type": "string",
        "description": "The ARN of the view to set as the default for the AWS Region and AWS account in which you call this operation. The specified view must already exist in the specified Region."
      }
    }
  },
  "aws-native:resourceexplorer2:Index": {
    "cfTypeName": "AWS::ResourceExplorer2::Index",
    "properties": {
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The specified tags are attached to only the index created in this AWS Region . The tags don't attach to any of the resources listed in the index."
      },
      "type": {
        "$ref": "#/types/aws-native:resourceexplorer2:IndexType",
        "description": "Specifies the type of the index in this Region. For information about the aggregator index and how it differs from a local index, see [Turning on cross-Region search by creating an aggregator index](https://docs.aws.amazon.com/resource-explorer/latest/userguide/manage-aggregator-region.html) in the *AWS Resource Explorer User Guide.* ."
      }
    }
  },
  "aws-native:resourcegroups:TagSyncTask": {
    "cfTypeName": "AWS::ResourceGroups::TagSyncTask",
    "properties": {
      "group": {
        "type": "string",
        "description": "The Amazon resource name (ARN) or name of the application group for which you want to create a tag-sync task"
      },
      "roleArn": {
        "type": "string",
        "description": "The Amazon resource name (ARN) of the role assumed by the service to tag and untag resources on your behalf."
      },
      "tagKey": {
        "type": "string",
        "description": "The tag key. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application."
      },
      "tagValue": {
        "type": "string",
        "description": "The tag value. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application."
      }
    }
  },
  "aws-native:robomaker:RobotApplicationVersion": {
    "cfTypeName": "AWS::RoboMaker::RobotApplicationVersion",
    "properties": {
      "application": {
        "type": "string",
        "description": "The application information for the robot application."
      },
      "currentRevisionId": {
        "type": "string",
        "description": "The revision ID of robot application."
      }
    }
  },
  "aws-native:robomaker:SimulationApplicationVersion": {
    "cfTypeName": "AWS::RoboMaker::SimulationApplicationVersion",
    "properties": {
      "application": {
        "type": "string",
        "description": "The application information for the simulation application."
      },
      "currentRevisionId": {
        "type": "string",
        "description": "The revision ID of robot application."
      }
    }
  },
  "aws-native:route53:Dnssec": {
    "cfTypeName": "AWS::Route53::DNSSEC",
    "properties": {
      "hostedZoneId": {
        "type": "string",
        "description": "The unique string (ID) used to identify a hosted zone."
      }
    }
  },
  "aws-native:route53:HealthCheck": {
    "cfTypeName": "AWS::Route53::HealthCheck",
    "properties": {
      "healthCheckConfig": {
        "$ref": "#/types/aws-native:route53:HealthCheckConfigProperties",
        "description": "A complex type that contains information about the health check."
      },
      "healthCheckTags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:route53:HealthCheckTag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:route53resolver:ResolverConfig": {
    "cfTypeName": "AWS::Route53Resolver::ResolverConfig",
    "properties": {
      "autodefinedReverseFlag": {
        "$ref": "#/types/aws-native:route53resolver:ResolverConfigAutodefinedReverseFlag",
        "description": "Represents the desired status of AutodefinedReverse. The only supported value on creation is DISABLE. Deletion of this resource will return AutodefinedReverse to its default value (ENABLED)."
      },
      "resourceId": {
        "type": "string",
        "description": "ResourceId"
      }
    }
  },
  "aws-native:route53resolver:ResolverDnssecConfig": {
    "cfTypeName": "AWS::Route53Resolver::ResolverDNSSECConfig",
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "ResourceId"
      }
    }
  },
  "aws-native:route53resolver:ResolverQueryLoggingConfigAssociation": {
    "cfTypeName": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
    "properties": {
      "resolverQueryLogConfigId": {
        "type": "string",
        "description": "ResolverQueryLogConfigId"
      },
      "resourceId": {
        "type": "string",
        "description": "ResourceId"
      }
    }
  },
  "aws-native:s3:AccessGrant": {
    "cfTypeName": "AWS::S3::AccessGrant",
    "properties": {
      "accessGrantsLocationConfiguration": {
        "$ref": "#/types/aws-native:s3:AccessGrantsLocationConfiguration",
        "description": "The configuration options of the grant location, which is the S3 path to the data to which you are granting access."
      },
      "accessGrantsLocationId": {
        "type": "string",
        "description": "The custom S3 location to be accessed by the grantee"
      },
      "applicationArn": {
        "type": "string",
        "description": "The ARN of the application grantees will use to access the location"
      },
      "grantee": {
        "$ref": "#/types/aws-native:s3:AccessGrantGrantee",
        "description": "The principal who will be granted permission to access S3."
      },
      "permission": {
        "$ref": "#/types/aws-native:s3:AccessGrantPermission",
        "description": "The level of access to be afforded to the grantee"
      },
      "s3PrefixType": {
        "$ref": "#/types/aws-native:s3:AccessGrantS3PrefixType",
        "description": "The type of S3SubPrefix."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "The AWS resource tags that you are adding to the access grant. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources."
      }
    }
  },
  "aws-native:s3:AccessGrantsInstance": {
    "cfTypeName": "AWS::S3::AccessGrantsInstance",
    "properties": {
      "identityCenterArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the specified AWS Identity Center."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "The AWS resource tags that you are adding to the S3 Access Grants instance. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources."
      }
    }
  },
  "aws-native:s3:AccessGrantsLocation": {
    "cfTypeName": "AWS::S3::AccessGrantsLocation",
    "properties": {
      "iamRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the access grant location's associated IAM role."
      },
      "locationScope": {
        "type": "string",
        "description": "Descriptor for where the location actually points"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "The AWS resource tags that you are adding to the S3 Access Grants location. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources."
      }
    }
  },
  "aws-native:s3:BucketPolicy": {
    "cfTypeName": "AWS::S3::BucketPolicy",
    "properties": {
      "bucket": {
        "type": "string",
        "description": "The name of the Amazon S3 bucket to which the policy applies."
      },
      "policyDocument": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document containing permissions to add to the specified bucket. In IAM, you must provide policy documents in JSON format. However, in CloudFormation you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM. For more information, see the AWS::IAM::Policy [PolicyDocument](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-policydocument) resource description in this guide and [Access Policy Language Overview](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-policy-language-overview.html) in the *Amazon S3 User Guide*.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::S3::BucketPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:s3:MultiRegionAccessPointPolicy": {
    "cfTypeName": "AWS::S3::MultiRegionAccessPointPolicy",
    "properties": {
      "mrapName": {
        "type": "string",
        "description": "The name of the Multi Region Access Point to apply policy"
      },
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "Policy document to apply to a Multi Region Access Point\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::S3::MultiRegionAccessPointPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:s3:StorageLens": {
    "cfTypeName": "AWS::S3::StorageLens",
    "properties": {
      "storageLensConfiguration": {
        "$ref": "#/types/aws-native:s3:StorageLensConfiguration",
        "description": "This resource contains the details Amazon S3 Storage Lens configuration."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A set of tags (key-value pairs) for this Amazon S3 Storage Lens configuration."
      }
    }
  },
  "aws-native:s3express:BucketPolicy": {
    "cfTypeName": "AWS::S3Express::BucketPolicy",
    "properties": {
      "bucket": {
        "type": "string",
        "description": "The name of the S3 directory bucket to which the policy applies."
      },
      "policyDocument": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document containing permissions to add to the specified bucket. In IAM, you must provide policy documents in JSON format. However, in CloudFormation you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::S3Express::BucketPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:s3objectlambda:AccessPointPolicy": {
    "cfTypeName": "AWS::S3ObjectLambda::AccessPointPolicy",
    "properties": {
      "objectLambdaAccessPoint": {
        "type": "string",
        "description": "The name of the Amazon S3 ObjectLambdaAccessPoint to which the policy applies."
      },
      "policyDocument": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document containing permissions to add to the specified ObjectLambdaAccessPoint. For more information, see Access Policy Language Overview (https://docs.aws.amazon.com/AmazonS3/latest/dev/access-policy-language-overview.html) in the Amazon Simple Storage Service Developer Guide. \n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::S3ObjectLambda::AccessPointPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:s3outposts:BucketPolicy": {
    "cfTypeName": "AWS::S3Outposts::BucketPolicy",
    "properties": {
      "bucket": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the specified bucket."
      },
      "policyDocument": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document containing permissions to add to the specified bucket.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::S3Outposts::BucketPolicy` for more information about the expected schema for this property."
      }
    }
  },
  "aws-native:s3outposts:Endpoint": {
    "cfTypeName": "AWS::S3Outposts::Endpoint",
    "properties": {
      "accessType": {
        "$ref": "#/types/aws-native:s3outposts:EndpointAccessType",
        "description": "The type of access for the on-premise network connectivity for the Outpost endpoint. To access endpoint from an on-premises network, you must specify the access type and provide the customer owned Ipv4 pool."
      },
      "customerOwnedIpv4Pool": {
        "type": "string",
        "description": "The ID of the customer-owned IPv4 pool for the Endpoint. IP addresses will be allocated from this pool for the endpoint."
      },
      "failedReason": {
        "$ref": "#/types/aws-native:s3outposts:EndpointFailedReason",
        "description": "The failure reason, if any, for a create or delete endpoint operation."
      },
      "outpostId": {
        "type": "string",
        "description": "The id of the customer outpost on which the bucket resides."
      },
      "securityGroupId": {
        "type": "string",
        "description": "The ID of the security group to use with the endpoint."
      },
      "subnetId": {
        "type": "string",
        "description": "The ID of the subnet in the selected VPC. The subnet must belong to the Outpost."
      }
    }
  },
  "aws-native:s3tables:TableBucketPolicy": {
    "cfTypeName": "AWS::S3Tables::TableBucketPolicy",
    "properties": {
      "resourcePolicy": {
        "$ref": "#/types/aws-native:s3tables:TableBucketPolicyResourcePolicy",
        "description": "The bucket policy JSON for the table bucket."
      },
      "tableBucketArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the table bucket."
      }
    }
  },
  "aws-native:sagemaker:Device": {
    "cfTypeName": "AWS::SageMaker::Device",
    "properties": {
      "device": {
        "$ref": "#/types/aws-native:sagemaker:Device",
        "description": "The Edge Device you want to register against a device fleet",
        "language": {
          "csharp": {
            "name": "DeviceValue"
          }
        }
      },
      "deviceFleetName": {
        "type": "string",
        "description": "The name of the edge device fleet"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Associate tags with the resource"
      }
    }
  },
  "aws-native:sagemaker:ImageVersion": {
    "cfTypeName": "AWS::SageMaker::ImageVersion",
    "properties": {
      "alias": {
        "type": "string"
      },
      "aliases": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "baseImage": {
        "type": "string",
        "description": "The container image that the SageMaker image version is based on."
      },
      "horovod": {
        "type": "boolean"
      },
      "imageName": {
        "type": "string",
        "description": "The name of the parent image.\n\n*Length Constraints* : Minimum length of 1. Maximum length of 63.\n\n*Pattern* : `^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$`"
      },
      "jobType": {
        "$ref": "#/types/aws-native:sagemaker:ImageVersionJobType"
      },
      "mlFramework": {
        "type": "string"
      },
      "processor": {
        "$ref": "#/types/aws-native:sagemaker:ImageVersionProcessor"
      },
      "programmingLang": {
        "type": "string"
      },
      "releaseNotes": {
        "type": "string"
      },
      "vendorGuidance": {
        "$ref": "#/types/aws-native:sagemaker:ImageVersionVendorGuidance"
      }
    }
  },
  "aws-native:secretsmanager:ResourcePolicy": {
    "cfTypeName": "AWS::SecretsManager::ResourcePolicy",
    "properties": {
      "blockPublicPolicy": {
        "type": "boolean",
        "description": "Specifies whether to block resource-based policies that allow broad access to the secret."
      },
      "resourcePolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "A JSON-formatted string for an AWS resource-based policy.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SecretsManager::ResourcePolicy` for more information about the expected schema for this property.",
        "language": {
          "csharp": {
            "name": "ResourcePolicyValue"
          }
        }
      },
      "secretId": {
        "type": "string",
        "description": "The ARN or name of the secret to attach the resource-based policy."
      }
    }
  },
  "aws-native:secretsmanager:RotationSchedule": {
    "cfTypeName": "AWS::SecretsManager::RotationSchedule",
    "properties": {
      "hostedRotationLambda": {
        "$ref": "#/types/aws-native:secretsmanager:RotationScheduleHostedRotationLambda",
        "description": "Creates a new Lambda rotation function based on one of the Secrets Manager rotation function templates. To use a rotation function that already exists, specify RotationLambdaARN instead."
      },
      "rotateImmediatelyOnUpdate": {
        "type": "boolean",
        "description": "Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window."
      },
      "rotationLambdaArn": {
        "type": "string",
        "description": "The ARN of an existing Lambda rotation function. To specify a rotation function that is also defined in this template, use the Ref function."
      },
      "rotationRules": {
        "$ref": "#/types/aws-native:secretsmanager:RotationScheduleRotationRules",
        "description": "A structure that defines the rotation configuration for this secret."
      },
      "secretId": {
        "type": "string",
        "description": "The ARN or name of the secret to rotate."
      }
    }
  },
  "aws-native:secretsmanager:SecretTargetAttachment": {
    "cfTypeName": "AWS::SecretsManager::SecretTargetAttachment",
    "properties": {
      "secretId": {
        "type": "string",
        "description": "The ARN or name of the secret. To reference a secret also created in this template, use the see [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function with the secret's logical ID. This field is unique for each target attachment definition."
      },
      "targetId": {
        "type": "string",
        "description": "The ID of the database or cluster."
      },
      "targetType": {
        "type": "string",
        "description": "A string that defines the type of service or database associated with the secret. This value instructs Secrets Manager how to update the secret with the details of the service or database. This value must be one of the following:\n\n- AWS::RDS::DBInstance\n- AWS::RDS::DBCluster\n- AWS::Redshift::Cluster\n- AWS::RedshiftServerless::Namespace\n- AWS::DocDB::DBInstance\n- AWS::DocDB::DBCluster\n- AWS::DocDBElastic::Cluster"
      }
    }
  },
  "aws-native:securityhub:DelegatedAdmin": {
    "cfTypeName": "AWS::SecurityHub::DelegatedAdmin",
    "properties": {
      "adminAccountId": {
        "type": "string",
        "description": "The AWS-account identifier of the account to designate as the Security Hub administrator account."
      }
    }
  },
  "aws-native:securityhub:FindingAggregator": {
    "cfTypeName": "AWS::SecurityHub::FindingAggregator",
    "properties": {
      "regionLinkingMode": {
        "$ref": "#/types/aws-native:securityhub:FindingAggregatorRegionLinkingMode",
        "description": "Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.\n The selected option also determines how to use the Regions provided in the Regions list.\n In CFN, the options for this property are as follows:\n  +   ``ALL_REGIONS`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. \n  +   ``ALL_REGIONS_EXCEPT_SPECIFIED`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the ``Regions`` parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. \n  +   ``SPECIFIED_REGIONS`` - Indicates to aggregate findings only from the Regions listed in the ``Regions`` parameter. Security Hub does not automatically aggregate findings from new Regions."
      },
      "regions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "If ``RegionLinkingMode`` is ``ALL_REGIONS_EXCEPT_SPECIFIED``, then this is a space-separated list of Regions that do not aggregate findings to the aggregation Region.\n If ``RegionLinkingMode`` is ``SPECIFIED_REGIONS``, then this is a space-separated list of Regions that do aggregate findings to the aggregation Region."
      }
    }
  },
  "aws-native:securityhub:Hub": {
    "cfTypeName": "AWS::SecurityHub::Hub",
    "properties": {
      "autoEnableControls": {
        "type": "boolean",
        "description": "Whether to automatically enable new controls when they are added to standards that are enabled"
      },
      "controlFindingGenerator": {
        "type": "string",
        "description": "This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards."
      },
      "enableDefaultStandards": {
        "type": "boolean",
        "description": "Whether to enable the security standards that Security Hub has designated as automatically enabled."
      },
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "An array of key-value pairs to apply to this resource.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) ."
      }
    }
  },
  "aws-native:securityhub:OrganizationConfiguration": {
    "cfTypeName": "AWS::SecurityHub::OrganizationConfiguration",
    "properties": {
      "autoEnable": {
        "type": "boolean",
        "description": "Whether to automatically enable Security Hub in new member accounts when they join the organization."
      },
      "autoEnableStandards": {
        "$ref": "#/types/aws-native:securityhub:OrganizationConfigurationAutoEnableStandards",
        "description": "Whether to automatically enable Security Hub default standards in new member accounts when they join the organization."
      },
      "configurationType": {
        "$ref": "#/types/aws-native:securityhub:OrganizationConfigurationConfigurationType",
        "description": "Indicates whether the organization uses local or central configuration."
      }
    }
  },
  "aws-native:securityhub:PolicyAssociation": {
    "cfTypeName": "AWS::SecurityHub::PolicyAssociation",
    "properties": {
      "configurationPolicyId": {
        "type": "string",
        "description": "The universally unique identifier (UUID) of the configuration policy or a value of SELF_MANAGED_SECURITY_HUB for a self-managed configuration"
      },
      "targetId": {
        "type": "string",
        "description": "The identifier of the target account, organizational unit, or the root"
      },
      "targetType": {
        "$ref": "#/types/aws-native:securityhub:PolicyAssociationTargetType",
        "description": "Indicates whether the target is an AWS account, organizational unit, or the organization root"
      }
    }
  },
  "aws-native:securityhub:ProductSubscription": {
    "cfTypeName": "AWS::SecurityHub::ProductSubscription",
    "properties": {
      "productArn": {
        "type": "string",
        "description": "The generic ARN of the product being subscribed to"
      }
    }
  },
  "aws-native:securityhub:SecurityControl": {
    "cfTypeName": "AWS::SecurityHub::SecurityControl",
    "properties": {
      "lastUpdateReason": {
        "type": "string",
        "description": "The most recent reason for updating the customizable properties of a security control. This differs from the UpdateReason field of the BatchUpdateStandardsControlAssociations API, which tracks the reason for updating the enablement status of a control. This field accepts alphanumeric characters in addition to white spaces, dashes, and underscores."
      },
      "parameters": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/types/aws-native:securityhub:SecurityControlParameterConfiguration"
        },
        "description": "An object that identifies the name of a control parameter, its current value, and whether it has been customized."
      },
      "securityControlArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) for a security control across standards, such as `arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1`. This parameter doesn't mention a specific standard."
      },
      "securityControlId": {
        "type": "string",
        "description": "The unique identifier of a security control across standards. Values for this field typically consist of an AWS service name and a number, such as APIGateway.3."
      }
    }
  },
  "aws-native:securityhub:Standard": {
    "cfTypeName": "AWS::SecurityHub::Standard",
    "properties": {
      "disabledStandardsControls": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:securityhub:StandardsControl"
        },
        "description": "Specifies which controls are to be disabled in a standard. \n  *Maximum*: ``100``"
      },
      "standardsArn": {
        "type": "string",
        "description": "The ARN of the standard that you want to enable. To view a list of available ASH standards and their ARNs, use the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation."
      }
    }
  },
  "aws-native:securitylake:DataLake": {
    "cfTypeName": "AWS::SecurityLake::DataLake",
    "properties": {
      "encryptionConfiguration": {
        "$ref": "#/types/aws-native:securitylake:DataLakeEncryptionConfiguration",
        "description": "Provides encryption details of the Amazon Security Lake object."
      },
      "lifecycleConfiguration": {
        "$ref": "#/types/aws-native:securitylake:DataLakeLifecycleConfiguration",
        "description": "You can customize Security Lake to store data in your preferred AWS Regions for your preferred amount of time. Lifecycle management can help you comply with different compliance requirements. For more details, see [Lifecycle management](https://docs.aws.amazon.com//security-lake/latest/userguide/lifecycle-management.html) in the Amazon Security Lake User Guide."
      },
      "metaStoreManagerRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) used to index AWS Glue table partitions that are generated by the ingestion and normalization of AWS log sources and custom sources."
      },
      "replicationConfiguration": {
        "$ref": "#/types/aws-native:securitylake:DataLakeReplicationConfiguration",
        "description": "Provides replication details of Amazon Security Lake object."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of objects, one for each tag to associate with the data lake configuration. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string."
      }
    }
  },
  "aws-native:securitylake:SubscriberNotification": {
    "cfTypeName": "AWS::SecurityLake::SubscriberNotification",
    "properties": {
      "notificationConfiguration": {
        "$ref": "#/types/aws-native:securitylake:SubscriberNotificationNotificationConfiguration",
        "description": "Specify the configurations you want to use for subscriber notification. The subscriber is notified when new data is written to the data lake for sources that the subscriber consumes in Security Lake ."
      },
      "subscriberArn": {
        "type": "string",
        "description": "The ARN for the subscriber"
      }
    }
  },
  "aws-native:servicecatalog:CloudFormationProvisionedProduct": {
    "cfTypeName": "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
    "properties": {
      "acceptLanguage": {
        "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductAcceptLanguage",
        "description": "The language code.\n\n- `jp` - Japanese\n- `zh` - Chinese"
      },
      "notificationArns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Passed to AWS CloudFormation . The SNS topic ARNs to which to publish stack-related events."
      },
      "pathId": {
        "type": "string",
        "description": "The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use [ListLaunchPaths](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ListLaunchPaths.html) .\n\n\u003e You must provide the name or ID, but not both."
      },
      "pathName": {
        "type": "string",
        "description": "The name of the path. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use [ListLaunchPaths](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ListLaunchPaths.html) .\n\n\u003e You must provide the name or ID, but not both."
      },
      "productId": {
        "type": "string",
        "description": "The product identifier.\n\n\u003e You must specify either the ID or the name of the product, but not both."
      },
      "productName": {
        "type": "string",
        "description": "The name of the Service Catalog product.\n\nEach time a stack is created or updated, if `ProductName` is provided it will successfully resolve to `ProductId` as long as only one product exists in the account or Region with that `ProductName` .\n\n\u003e You must specify either the name or the ID of the product, but not both."
      },
      "provisionedProductName": {
        "type": "string",
        "description": "A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned."
      },
      "provisioningArtifactId": {
        "type": "string",
        "description": "The identifier of the provisioning artifact (also known as a version).\n\n\u003e You must specify either the ID or the name of the provisioning artifact, but not both."
      },
      "provisioningArtifactName": {
        "type": "string",
        "description": "The name of the provisioning artifact (also known as a version) for the product. This name must be unique for the product.\n\n\u003e You must specify either the name or the ID of the provisioning artifact, but not both. You must also specify either the name or the ID of the product, but not both."
      },
      "provisioningParameters": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningParameter"
        },
        "description": "Parameters specified by the administrator that are required for provisioning the product."
      },
      "provisioningPreferences": {
        "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningPreferences",
        "description": "StackSet preferences that are required for provisioning the product or updating a provisioned product."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "One or more tags.\n\n\u003e Requires the provisioned product to have an [ResourceUpdateConstraint](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html) resource with `TagUpdatesOnProvisionedProduct` set to `ALLOWED` to allow tag updates. If `RESOURCE_UPDATE` constraint is not present, tags updates are ignored."
      }
    }
  },
  "aws-native:servicecatalog:ServiceActionAssociation": {
    "cfTypeName": "AWS::ServiceCatalog::ServiceActionAssociation",
    "properties": {
      "productId": {
        "type": "string",
        "description": "The product identifier. For example, `prod-abcdzk7xy33qa` ."
      },
      "provisioningArtifactId": {
        "type": "string",
        "description": "The identifier of the provisioning artifact. For example, `pa-4abcdjnxjj6ne` ."
      },
      "serviceActionId": {
        "type": "string",
        "description": "The self-service action identifier. For example, `act-fs7abcd89wxyz` ."
      }
    }
  },
  "aws-native:servicecatalogappregistry:AttributeGroupAssociation": {
    "cfTypeName": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
    "properties": {
      "application": {
        "type": "string",
        "description": "The name or the Id of the Application."
      },
      "attributeGroup": {
        "type": "string",
        "description": "The name or the Id of the AttributeGroup."
      }
    }
  },
  "aws-native:servicecatalogappregistry:ResourceAssociation": {
    "cfTypeName": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
    "properties": {
      "application": {
        "type": "string",
        "description": "The name or the Id of the Application."
      },
      "resource": {
        "type": "string",
        "description": "The name or the Id of the Resource."
      },
      "resourceType": {
        "$ref": "#/types/aws-native:servicecatalogappregistry:ResourceAssociationResourceType",
        "description": "The type of the CFN Resource for now it's enum CFN_STACK."
      }
    }
  },
  "aws-native:ses:ConfigurationSetEventDestination": {
    "cfTypeName": "AWS::SES::ConfigurationSetEventDestination",
    "properties": {
      "configurationSetName": {
        "type": "string",
        "description": "The name of the configuration set that contains the event destination."
      },
      "eventDestination": {
        "$ref": "#/types/aws-native:ses:ConfigurationSetEventDestinationEventDestination",
        "description": "The event destination object."
      }
    }
  },
  "aws-native:ses:EmailIdentity": {
    "cfTypeName": "AWS::SES::EmailIdentity",
    "properties": {
      "configurationSetAttributes": {
        "$ref": "#/types/aws-native:ses:EmailIdentityConfigurationSetAttributes",
        "description": "Used to associate a configuration set with an email identity."
      },
      "dkimAttributes": {
        "$ref": "#/types/aws-native:ses:EmailIdentityDkimAttributes",
        "description": "An object that contains information about the DKIM attributes for the identity."
      },
      "dkimSigningAttributes": {
        "$ref": "#/types/aws-native:ses:EmailIdentityDkimSigningAttributes",
        "description": "If your request includes this object, Amazon SES configures the identity to use Bring Your Own DKIM (BYODKIM) for DKIM authentication purposes, or, configures the key length to be used for [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html) .\n\nYou can only specify this object if the email identity is a domain, as opposed to an address."
      },
      "emailIdentity": {
        "type": "string",
        "description": "The email address or domain to verify.",
        "language": {
          "csharp": {
            "name": "EmailIdentityValue"
          }
        }
      },
      "feedbackAttributes": {
        "$ref": "#/types/aws-native:ses:EmailIdentityFeedbackAttributes",
        "description": "Used to enable or disable feedback forwarding for an identity."
      },
      "mailFromAttributes": {
        "$ref": "#/types/aws-native:ses:EmailIdentityMailFromAttributes",
        "description": "Used to enable or disable the custom Mail-From domain configuration for an email identity."
      }
    }
  },
  "aws-native:ses:MailManagerAddonInstance": {
    "cfTypeName": "AWS::SES::MailManagerAddonInstance",
    "properties": {
      "addonSubscriptionId": {
        "type": "string",
        "description": "The subscription ID for the instance."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags used to organize, track, or control access for the resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }."
      }
    }
  },
  "aws-native:ses:MailManagerAddonSubscription": {
    "cfTypeName": "AWS::SES::MailManagerAddonSubscription",
    "properties": {
      "addonName": {
        "type": "string",
        "description": "The name of the Add On to subscribe to. You can only have one subscription for each Add On name.\n\nValid Values: `TRENDMICRO_VSAPI | SPAMHAUS_DBL | ABUSIX_MAIL_INTELLIGENCE`"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags used to organize, track, or control access for the resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }."
      }
    }
  },
  "aws-native:ses:Template": {
    "cfTypeName": "AWS::SES::Template",
    "properties": {
      "template": {
        "$ref": "#/types/aws-native:ses:Template",
        "description": "The content of the email, composed of a subject line and either an HTML part or a text-only part.",
        "language": {
          "csharp": {
            "name": "TemplateValue"
          }
        }
      }
    }
  },
  "aws-native:ses:VdmAttributes": {
    "cfTypeName": "AWS::SES::VdmAttributes",
    "properties": {
      "dashboardAttributes": {
        "$ref": "#/types/aws-native:ses:VdmAttributesDashboardAttributes",
        "description": "Specifies additional settings for your VDM configuration as applicable to the Dashboard."
      },
      "guardianAttributes": {
        "$ref": "#/types/aws-native:ses:VdmAttributesGuardianAttributes",
        "description": "Specifies additional settings for your VDM configuration as applicable to the Guardian."
      }
    }
  },
  "aws-native:shield:DrtAccess": {
    "cfTypeName": "AWS::Shield::DRTAccess",
    "properties": {
      "logBucketList": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Authorizes the Shield Response Team (SRT) to access the specified Amazon S3 bucket containing log data such as Application Load Balancer access logs, CloudFront logs, or logs from third party sources. You can associate up to 10 Amazon S3 buckets with your subscription."
      },
      "roleArn": {
        "type": "string",
        "description": "Authorizes the Shield Response Team (SRT) using the specified role, to access your AWS account to assist with DDoS attack mitigation during potential attacks. This enables the SRT to inspect your AWS WAF configuration and create or update AWS WAF rules and web ACLs."
      }
    }
  },
  "aws-native:shield:ProactiveEngagement": {
    "cfTypeName": "AWS::Shield::ProactiveEngagement",
    "properties": {
      "emergencyContactList": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:shield:ProactiveEngagementEmergencyContact"
        },
        "description": "A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you for escalations to the SRT and to initiate proactive customer support.\nTo enable proactive engagement, the contact list must include at least one phone number."
      },
      "proactiveEngagementStatus": {
        "$ref": "#/types/aws-native:shield:ProactiveEngagementStatus",
        "description": "If `ENABLED`, the Shield Response Team (SRT) will use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.\nIf `DISABLED`, the SRT will not proactively notify contacts about escalations or to initiate proactive customer support."
      }
    }
  },
  "aws-native:shield:ProtectionGroup": {
    "cfTypeName": "AWS::Shield::ProtectionGroup",
    "properties": {
      "aggregation": {
        "$ref": "#/types/aws-native:shield:ProtectionGroupAggregation",
        "description": "Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.\n* Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.\n* Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.\n* Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include Amazon CloudFront and origin resources for CloudFront distributions."
      },
      "members": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `Pattern` to `ARBITRARY` and you must not set it for any other `Pattern` setting."
      },
      "pattern": {
        "$ref": "#/types/aws-native:shield:ProtectionGroupPattern",
        "description": "The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource Amazon Resource Names (ARNs), or include all resources of a specified resource type."
      },
      "protectionGroupId": {
        "type": "string",
        "description": "The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it."
      },
      "resourceType": {
        "$ref": "#/types/aws-native:shield:ProtectionGroupResourceType",
        "description": "The resource type to include in the protection group. All protected resources of this type are included in the protection group. Newly protected resources of this type are automatically added to the group. You must set this when you set `Pattern` to `BY_RESOURCE_TYPE` and you must not set it for any other `Pattern` setting."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "One or more tag key-value pairs for the Protection object."
      }
    }
  },
  "aws-native:signer:ProfilePermission": {
    "cfTypeName": "AWS::Signer::ProfilePermission",
    "properties": {
      "action": {
        "type": "string",
        "description": "The AWS Signer action permitted as part of cross-account permissions."
      },
      "principal": {
        "type": "string",
        "description": "The AWS principal receiving cross-account permissions. This may be an IAM role or another AWS account ID."
      },
      "profileName": {
        "type": "string",
        "description": "The human-readable name of the signing profile."
      },
      "profileVersion": {
        "type": "string",
        "description": "The version of the signing profile."
      },
      "statementId": {
        "type": "string",
        "description": "A unique identifier for the cross-account permission statement."
      }
    }
  },
  "aws-native:sns:Subscription": {
    "cfTypeName": "AWS::SNS::Subscription",
    "properties": {
      "deliveryPolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "The delivery policy JSON assigned to the subscription. Enables the subscriber to define the message delivery retry strategy in the case of an HTTP/S endpoint subscribed to the topic.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Subscription` for more information about the expected schema for this property."
      },
      "endpoint": {
        "type": "string",
        "description": "The subscription's endpoint. The endpoint value depends on the protocol that you specify. "
      },
      "filterPolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "The filter policy JSON assigned to the subscription. Enables the subscriber to filter out unwanted messages.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Subscription` for more information about the expected schema for this property."
      },
      "filterPolicyScope": {
        "type": "string",
        "description": "This attribute lets you choose the filtering scope by using one of the following string value types: MessageAttributes (default) and MessageBody."
      },
      "protocol": {
        "type": "string",
        "description": "The subscription's protocol."
      },
      "rawMessageDelivery": {
        "type": "boolean",
        "description": "When set to true, enables raw message delivery. Raw messages don't contain any JSON formatting and can be sent to Amazon SQS and HTTP/S endpoints."
      },
      "redrivePolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can't be delivered due to client errors are held in the dead-letter queue for further analysis or reprocessing.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Subscription` for more information about the expected schema for this property."
      },
      "region": {
        "type": "string",
        "description": "For cross-region subscriptions, the region in which the topic resides.If no region is specified, AWS CloudFormation uses the region of the caller as the default."
      },
      "replayPolicy": {
        "$ref": "pulumi.json#/Any",
        "description": "Specifies whether Amazon SNS resends the notification to the subscription when a message's attribute changes.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Subscription` for more information about the expected schema for this property."
      },
      "subscriptionRoleArn": {
        "type": "string",
        "description": "This property applies only to Amazon Data Firehose delivery stream subscriptions."
      },
      "topicArn": {
        "type": "string",
        "description": "The ARN of the topic to subscribe to."
      }
    }
  },
  "aws-native:sns:TopicInlinePolicy": {
    "cfTypeName": "AWS::SNS::TopicInlinePolicy",
    "properties": {
      "policyDocument": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document that contains permissions to add to the specified SNS topics.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::TopicInlinePolicy` for more information about the expected schema for this property."
      },
      "topicArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the topic to which you want to add the policy."
      }
    }
  },
  "aws-native:sns:TopicPolicy": {
    "cfTypeName": "AWS::SNS::TopicPolicy",
    "properties": {
      "policyDocument": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document that contains permissions to add to the specified SNS topics.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::TopicPolicy` for more information about the expected schema for this property."
      },
      "topics": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Names (ARN) of the topics to which you want to add the policy. You can use the ``Ref`` function to specify an ``AWS::SNS::Topic`` resource."
      }
    }
  },
  "aws-native:sqs:QueueInlinePolicy": {
    "cfTypeName": "AWS::SQS::QueueInlinePolicy",
    "properties": {
      "policyDocument": {
        "$ref": "pulumi.json#/Any",
        "description": "A policy document that contains permissions to add to the specified SQS queue\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SQS::QueueInlinePolicy` for more information about the expected schema for this property."
      },
      "queue": {
        "type": "string",
        "description": "The URL of the SQS queue."
      }
    }
  },
  "aws-native:ssm:ResourcePolicy": {
    "cfTypeName": "AWS::SSM::ResourcePolicy",
    "properties": {
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "Actual policy statement.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SSM::ResourcePolicy` for more information about the expected schema for this property."
      },
      "resourceArn": {
        "type": "string",
        "description": "Arn of OpsItemGroup etc."
      }
    }
  },
  "aws-native:ssmcontacts:Contact": {
    "cfTypeName": "AWS::SSMContacts::Contact",
    "properties": {
      "alias": {
        "type": "string",
        "description": "Alias of the contact. String value with 20 to 256 characters. Only alphabetical, numeric characters, dash, or underscore allowed."
      },
      "displayName": {
        "type": "string",
        "description": "Name of the contact. String value with 3 to 256 characters. Only alphabetical, space, numeric characters, dash, or underscore allowed."
      },
      "plan": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ssmcontacts:ContactStage"
        },
        "description": "The stages that an escalation plan or engagement plan engages contacts and contact methods in."
      },
      "type": {
        "$ref": "#/types/aws-native:ssmcontacts:ContactType",
        "description": "Contact type, which specify type of contact. Currently supported values: \"PERSONAL\", \"SHARED\", \"OTHER\"."
      }
    }
  },
  "aws-native:ssmcontacts:Plan": {
    "cfTypeName": "AWS::SSMContacts::Plan",
    "properties": {
      "contactId": {
        "type": "string",
        "description": "Contact ID for the AWS SSM Incident Manager Contact to associate the plan."
      },
      "rotationIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Rotation Ids to associate with Oncall Contact for engagement."
      },
      "stages": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ssmcontacts:PlanStage"
        },
        "description": "The stages that an escalation plan or engagement plan engages contacts and contact methods in."
      }
    }
  },
  "aws-native:ssmincidents:ReplicationSet": {
    "cfTypeName": "AWS::SSMIncidents::ReplicationSet",
    "properties": {
      "deletionProtected": {
        "type": "boolean",
        "description": "Determines if the replication set deletion protection is enabled or not. If deletion protection is enabled, you can't delete the last Region in the replication set."
      },
      "regions": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:ssmincidents:ReplicationSetReplicationRegion"
        },
        "description": "The ReplicationSet configuration."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to apply to the replication set."
      }
    }
  },
  "aws-native:sso:ApplicationAssignment": {
    "cfTypeName": "AWS::SSO::ApplicationAssignment",
    "properties": {
      "applicationArn": {
        "type": "string",
        "description": "The ARN of the application."
      },
      "principalId": {
        "type": "string",
        "description": "An identifier for an object in IAM Identity Center, such as a user or group"
      },
      "principalType": {
        "$ref": "#/types/aws-native:sso:ApplicationAssignmentPrincipalType",
        "description": "The entity type for which the assignment will be created."
      }
    }
  },
  "aws-native:sso:Assignment": {
    "cfTypeName": "AWS::SSO::Assignment",
    "properties": {
      "instanceArn": {
        "type": "string",
        "description": "The sso instance that the permission set is owned."
      },
      "permissionSetArn": {
        "type": "string",
        "description": "The permission set that the assignemt will be assigned"
      },
      "principalId": {
        "type": "string",
        "description": "The assignee's identifier, user id/group id"
      },
      "principalType": {
        "$ref": "#/types/aws-native:sso:AssignmentPrincipalType",
        "description": "The assignee's type, user/group"
      },
      "targetId": {
        "type": "string",
        "description": "The account id to be provisioned."
      },
      "targetType": {
        "$ref": "#/types/aws-native:sso:AssignmentTargetType",
        "description": "The type of resource to be provsioned to, only aws account now"
      }
    }
  },
  "aws-native:sso:InstanceAccessControlAttributeConfiguration": {
    "cfTypeName": "AWS::SSO::InstanceAccessControlAttributeConfiguration",
    "properties": {
      "accessControlAttributes": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:sso:InstanceAccessControlAttributeConfigurationAccessControlAttribute"
        },
        "description": "Lists the attributes that are configured for ABAC in the specified IAM Identity Center instance."
      },
      "instanceAccessControlAttributeConfiguration": {
        "$ref": "#/types/aws-native:sso:InstanceAccessControlAttributeConfigurationProperties",
        "description": "The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.",
        "language": {
          "csharp": {
            "name": "InstanceAccessControlAttributeConfigurationValue"
          }
        }
      },
      "instanceArn": {
        "type": "string",
        "description": "The ARN of the AWS SSO instance under which the operation will be executed."
      }
    }
  },
  "aws-native:stepfunctions:StateMachineVersion": {
    "cfTypeName": "AWS::StepFunctions::StateMachineVersion",
    "properties": {
      "description": {
        "type": "string",
        "description": "An optional description of the state machine version."
      },
      "stateMachineArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the state machine."
      },
      "stateMachineRevisionId": {
        "type": "string",
        "description": "Identifier for a state machine revision, which is an immutable, read-only snapshot of a state machine’s definition and configuration.\n\nOnly publish the state machine version if the current state machine's revision ID matches the specified ID. Use this option to avoid publishing a version if the state machine has changed since you last updated it.\n\nTo specify the initial state machine revision, set the value as `INITIAL` ."
      }
    }
  },
  "aws-native:supportapp:AccountAlias": {
    "cfTypeName": "AWS::SupportApp::AccountAlias",
    "properties": {
      "accountAlias": {
        "type": "string",
        "description": "An account alias associated with a customer's account.",
        "language": {
          "csharp": {
            "name": "AccountAliasValue"
          }
        }
      }
    }
  },
  "aws-native:supportapp:SlackChannelConfiguration": {
    "cfTypeName": "AWS::SupportApp::SlackChannelConfiguration",
    "properties": {
      "channelId": {
        "type": "string",
        "description": "The channel ID in Slack, which identifies a channel within a workspace."
      },
      "channelName": {
        "type": "string",
        "description": "The channel name in Slack."
      },
      "channelRoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of an IAM role that grants the AWS Support App access to perform operations for AWS services."
      },
      "notifyOnAddCorrespondenceToCase": {
        "type": "boolean",
        "description": "Whether to notify when a correspondence is added to a case."
      },
      "notifyOnCaseSeverity": {
        "$ref": "#/types/aws-native:supportapp:SlackChannelConfigurationNotifyOnCaseSeverity",
        "description": "The severity level of a support case that a customer wants to get notified for."
      },
      "notifyOnCreateOrReopenCase": {
        "type": "boolean",
        "description": "Whether to notify when a case is created or reopened."
      },
      "notifyOnResolveCase": {
        "type": "boolean",
        "description": "Whether to notify when a case is resolved."
      },
      "teamId": {
        "type": "string",
        "description": "The team ID in Slack, which uniquely identifies a workspace."
      }
    }
  },
  "aws-native:supportapp:SlackWorkspaceConfiguration": {
    "cfTypeName": "AWS::SupportApp::SlackWorkspaceConfiguration",
    "properties": {
      "teamId": {
        "type": "string",
        "description": "The team ID in Slack, which uniquely identifies a workspace."
      },
      "versionId": {
        "type": "string",
        "description": "An identifier used to update an existing Slack workspace configuration in AWS CloudFormation."
      }
    }
  },
  "aws-native:systemsmanagersap:Application": {
    "cfTypeName": "AWS::SystemsManagerSAP::Application",
    "properties": {
      "applicationId": {
        "type": "string",
        "description": "The ID of the application."
      },
      "applicationType": {
        "$ref": "#/types/aws-native:systemsmanagersap:ApplicationType",
        "description": "The type of the application."
      },
      "componentsInfo": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:systemsmanagersap:ApplicationComponentInfo"
        },
        "description": "This is an optional parameter for component details to which the SAP ABAP application is attached, such as Web Dispatcher."
      },
      "credentials": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:systemsmanagersap:ApplicationCredential"
        },
        "description": "The credentials of the SAP application."
      },
      "databaseArn": {
        "type": "string",
        "description": "The ARN of the SAP HANA database"
      },
      "instances": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon EC2 instances on which your SAP application is running."
      },
      "sapInstanceNumber": {
        "type": "string",
        "description": "The SAP instance number of the application."
      },
      "sid": {
        "type": "string",
        "description": "The System ID of the application."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags of a SystemsManagerSAP application."
      }
    }
  },
  "aws-native:transfer:Agreement": {
    "cfTypeName": "AWS::Transfer::Agreement",
    "properties": {
      "accessRole": {
        "type": "string",
        "description": "Specifies the access role for the agreement."
      },
      "baseDirectory": {
        "type": "string",
        "description": "Specifies the base directory for the agreement."
      },
      "customDirectories": {
        "$ref": "#/types/aws-native:transfer:CustomDirectoriesProperties",
        "description": "Specifies a separate directory for each type of file to store for an AS2 message."
      },
      "description": {
        "type": "string",
        "description": "A textual description for the agreement."
      },
      "enforceMessageSigning": {
        "$ref": "#/types/aws-native:transfer:AgreementEnforceMessageSigning",
        "description": "Specifies whether to enforce an AS2 message is signed for this agreement."
      },
      "localProfileId": {
        "type": "string",
        "description": "A unique identifier for the local profile."
      },
      "partnerProfileId": {
        "type": "string",
        "description": "A unique identifier for the partner profile."
      },
      "preserveFilename": {
        "$ref": "#/types/aws-native:transfer:AgreementPreserveFilename",
        "description": "Specifies whether to preserve the filename received for this agreement."
      },
      "serverId": {
        "type": "string",
        "description": "A unique identifier for the server."
      },
      "status": {
        "$ref": "#/types/aws-native:transfer:AgreementStatus",
        "description": "Specifies the status of the agreement."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Key-value pairs that can be used to group and search for agreements. Tags are metadata attached to agreements for any purpose."
      }
    }
  },
  "aws-native:transfer:Certificate": {
    "cfTypeName": "AWS::Transfer::Certificate",
    "properties": {
      "activeDate": {
        "type": "string",
        "description": "Specifies the active date for the certificate."
      },
      "certificate": {
        "type": "string",
        "description": "Specifies the certificate body to be imported.",
        "language": {
          "csharp": {
            "name": "CertificateValue"
          }
        }
      },
      "certificateChain": {
        "type": "string",
        "description": "Specifies the certificate chain to be imported."
      },
      "description": {
        "type": "string",
        "description": "A textual description for the certificate."
      },
      "inactiveDate": {
        "type": "string",
        "description": "Specifies the inactive date for the certificate."
      },
      "privateKey": {
        "type": "string",
        "description": "Specifies the private key for the certificate."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Key-value pairs that can be used to group and search for certificates. Tags are metadata attached to certificates for any purpose."
      },
      "usage": {
        "$ref": "#/types/aws-native:transfer:CertificateUsage",
        "description": "Specifies the usage type for the certificate."
      }
    }
  },
  "aws-native:transfer:Connector": {
    "cfTypeName": "AWS::Transfer::Connector",
    "properties": {
      "accessRole": {
        "type": "string",
        "description": "Specifies the access role for the connector."
      },
      "as2Config": {
        "$ref": "#/types/aws-native:transfer:As2ConfigProperties",
        "description": "Configuration for an AS2 connector."
      },
      "loggingRole": {
        "type": "string",
        "description": "Specifies the logging role for the connector."
      },
      "securityPolicyName": {
        "type": "string",
        "description": "Security policy for SFTP Connector"
      },
      "sftpConfig": {
        "$ref": "#/types/aws-native:transfer:SftpConfigProperties",
        "description": "Configuration for an SFTP connector."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Key-value pairs that can be used to group and search for connectors. Tags are metadata attached to connectors for any purpose."
      },
      "url": {
        "type": "string",
        "description": "URL for Connector"
      }
    }
  },
  "aws-native:transfer:Profile": {
    "cfTypeName": "AWS::Transfer::Profile",
    "properties": {
      "as2Id": {
        "type": "string",
        "description": "AS2 identifier agreed with a trading partner."
      },
      "certificateIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of the certificate IDs associated with this profile to be used for encryption and signing of AS2 messages."
      },
      "profileType": {
        "$ref": "#/types/aws-native:transfer:ProfileType",
        "description": "Enum specifying whether the profile is local or associated with a trading partner."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "An array of key-value pairs to apply to this resource."
      }
    }
  },
  "aws-native:transfer:Server": {
    "cfTypeName": "AWS::Transfer::Server",
    "properties": {
      "certificate": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. Required when `Protocols` is set to `FTPS` .\n\nTo request a new public certificate, see [Request a public certificate](https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html) in the *AWS Certificate Manager User Guide* .\n\nTo import an existing certificate into ACM, see [Importing certificates into ACM](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *AWS Certificate Manager User Guide* .\n\nTo request a private certificate to use FTPS through private IP addresses, see [Request a private certificate](https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-private.html) in the *AWS Certificate Manager User Guide* .\n\nCertificates with the following cryptographic algorithms and key sizes are supported:\n\n- 2048-bit RSA (RSA_2048)\n- 4096-bit RSA (RSA_4096)\n- Elliptic Prime Curve 256 bit (EC_prime256v1)\n- Elliptic Prime Curve 384 bit (EC_secp384r1)\n- Elliptic Prime Curve 521 bit (EC_secp521r1)\n\n\u003e The certificate must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP address specified and information about the issuer."
      },
      "domain": {
        "$ref": "#/types/aws-native:transfer:ServerDomain",
        "description": "Specifies the domain of the storage system that is used for file transfers. There are two domains available: Amazon Simple Storage Service (Amazon S3) and Amazon Elastic File System (Amazon EFS). The default value is S3."
      },
      "endpointDetails": {
        "$ref": "#/types/aws-native:transfer:ServerEndpointDetails",
        "description": "The virtual private cloud (VPC) endpoint settings that are configured for your server. When you host your endpoint within your VPC, you can make your endpoint accessible only to resources within your VPC, or you can attach Elastic IP addresses and make your endpoint accessible to clients over the internet. Your VPC's default security groups are automatically assigned to your endpoint."
      },
      "endpointType": {
        "$ref": "#/types/aws-native:transfer:ServerEndpointType",
        "description": "The type of endpoint that you want your server to use. You can choose to make your server's endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an endpoint that is hosted in a VPC, you can restrict access to your server and resources only within your VPC or choose to make it internet facing by attaching Elastic IP addresses directly to it.\n\n\u003e After May 19, 2021, you won't be able to create a server using `EndpointType=VPC_ENDPOINT` in your AWS account if your account hasn't already done so before May 19, 2021. If you have already created servers with `EndpointType=VPC_ENDPOINT` in your AWS account on or before May 19, 2021, you will not be affected. After this date, use `EndpointType` = `VPC` .\n\u003e \n\u003e For more information, see [Discontinuing the use of VPC_ENDPOINT](https://docs.aws.amazon.com//transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint) .\n\u003e \n\u003e It is recommended that you use `VPC` as the `EndpointType` . With this endpoint type, you have the option to directly associate up to three Elastic IPv4 addresses (BYO IP included) with your server's endpoint and use VPC security groups to restrict traffic by the client's public IP address. This is not possible with `EndpointType` set to `VPC_ENDPOINT` ."
      },
      "identityProviderDetails": {
        "$ref": "#/types/aws-native:transfer:ServerIdentityProviderDetails",
        "description": "Required when `IdentityProviderType` is set to `AWS_DIRECTORY_SERVICE` , `AWS _LAMBDA` or `API_GATEWAY` . Accepts an array containing all of the information required to use a directory in `AWS_DIRECTORY_SERVICE` or invoke a customer-supplied authentication API, including the API Gateway URL. Cannot be specified when `IdentityProviderType` is set to `SERVICE_MANAGED` ."
      },
      "identityProviderType": {
        "$ref": "#/types/aws-native:transfer:ServerIdentityProviderType",
        "description": "The mode of authentication for a server. The default value is `SERVICE_MANAGED` , which allows you to store and access user credentials within the AWS Transfer Family service.\n\nUse `AWS_DIRECTORY_SERVICE` to provide access to Active Directory groups in AWS Directory Service for Microsoft Active Directory or Microsoft Active Directory in your on-premises environment or in AWS using AD Connector. This option also requires you to provide a Directory ID by using the `IdentityProviderDetails` parameter.\n\nUse the `API_GATEWAY` value to integrate with an identity provider of your choosing. The `API_GATEWAY` setting requires you to provide an Amazon API Gateway endpoint URL to call for authentication by using the `IdentityProviderDetails` parameter.\n\nUse the `AWS_LAMBDA` value to directly use an AWS Lambda function as your identity provider. If you choose this value, you must specify the ARN for the Lambda function in the `Function` parameter for the `IdentityProviderDetails` data type."
      },
      "loggingRole": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, you can view user activity in your CloudWatch logs."
      },
      "postAuthenticationLoginBanner": {
        "type": "string",
        "description": "Specifies a string to display when users connect to a server. This string is displayed after the user authenticates.\n\n\u003e The SFTP protocol does not support post-authentication display banners."
      },
      "preAuthenticationLoginBanner": {
        "type": "string",
        "description": "Specifies a string to display when users connect to a server. This string is displayed before the user authenticates. For example, the following banner displays details about using the system:\n\n`This system is for the use of authorized users only. Individuals using this computer system without authority, or in excess of their authority, are subject to having all of their activities on this system monitored and recorded by system personnel.`"
      },
      "protocolDetails": {
        "$ref": "#/types/aws-native:transfer:ServerProtocolDetails",
        "description": "The protocol settings that are configured for your server.\n\n- To indicate passive mode (for FTP and FTPS protocols), use the `PassiveIp` parameter. Enter a single dotted-quad IPv4 address, such as the external IP address of a firewall, router, or load balancer.\n- To ignore the error that is generated when the client attempts to use the `SETSTAT` command on a file that you are uploading to an Amazon S3 bucket, use the `SetStatOption` parameter. To have the AWS Transfer Family server ignore the `SETSTAT` command and upload files without needing to make any changes to your SFTP client, set the value to `ENABLE_NO_OP` . If you set the `SetStatOption` parameter to `ENABLE_NO_OP` , Transfer Family generates a log entry to Amazon CloudWatch Logs, so that you can determine when the client is making a `SETSTAT` call.\n- To determine whether your AWS Transfer Family server resumes recent, negotiated sessions through a unique session ID, use the `TlsSessionResumptionMode` parameter.\n- `As2Transports` indicates the transport method for the AS2 messages. Currently, only HTTP is supported.\n\nThe `Protocols` parameter is an array of strings.\n\n*Allowed values* : One or more of `SFTP` , `FTPS` , `FTP` , `AS2`"
      },
      "protocols": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:transfer:ServerProtocol"
        },
        "description": "Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. The available protocols are:\n\n- `SFTP` (Secure Shell (SSH) File Transfer Protocol): File transfer over SSH\n- `FTPS` (File Transfer Protocol Secure): File transfer with TLS encryption\n- `FTP` (File Transfer Protocol): Unencrypted file transfer\n- `AS2` (Applicability Statement 2): used for transporting structured business-to-business data\n\n\u003e - If you select `FTPS` , you must choose a certificate stored in AWS Certificate Manager (ACM) which is used to identify your server when clients connect to it over FTPS.\n\u003e - If `Protocol` includes either `FTP` or `FTPS` , then the `EndpointType` must be `VPC` and the `IdentityProviderType` must be either `AWS_DIRECTORY_SERVICE` , `AWS_LAMBDA` , or `API_GATEWAY` .\n\u003e - If `Protocol` includes `FTP` , then `AddressAllocationIds` cannot be associated.\n\u003e - If `Protocol` is set only to `SFTP` , the `EndpointType` can be set to `PUBLIC` and the `IdentityProviderType` can be set any of the supported identity types: `SERVICE_MANAGED` , `AWS_DIRECTORY_SERVICE` , `AWS_LAMBDA` , or `API_GATEWAY` .\n\u003e - If `Protocol` includes `AS2` , then the `EndpointType` must be `VPC` , and domain must be Amazon S3. \n\nThe `Protocols` parameter is an array of strings.\n\n*Allowed values* : One or more of `SFTP` , `FTPS` , `FTP` , `AS2`"
      },
      "s3StorageOptions": {
        "$ref": "#/types/aws-native:transfer:ServerS3StorageOptions",
        "description": "Specifies whether or not performance for your Amazon S3 directories is optimized. This is disabled by default.\n\nBy default, home directory mappings have a `TYPE` of `DIRECTORY` . If you enable this option, you would then need to explicitly set the `HomeDirectoryMapEntry` `Type` to `FILE` if you want a mapping to have a file target."
      },
      "securityPolicyName": {
        "type": "string",
        "description": "Specifies the name of the security policy for the server."
      },
      "structuredLogDestinations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specifies the log groups to which your server logs are sent.\n\nTo specify a log group, you must provide the ARN for an existing log group. In this case, the format of the log group is as follows:\n\n`arn:aws:logs:region-name:amazon-account-id:log-group:log-group-name:*`\n\nFor example, `arn:aws:logs:us-east-1:111122223333:log-group:mytestgroup:*`\n\nIf you have previously specified a log group for a server, you can clear it, and in effect turn off structured logging, by providing an empty value for this parameter in an `update-server` call. For example:\n\n`update-server --server-id s-1234567890abcdef0 --structured-log-destinations`"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Key-value pairs that can be used to group and search for servers."
      },
      "workflowDetails": {
        "$ref": "#/types/aws-native:transfer:ServerWorkflowDetails",
        "description": "Specifies the workflow ID for the workflow to assign and the execution role that's used for executing the workflow.\n\nIn addition to a workflow to execute when a file is uploaded completely, `WorkflowDetails` can also contain a workflow ID (and execution role) for a workflow to execute on partial upload. A partial upload occurs when a file is open when the session disconnects."
      }
    }
  },
  "aws-native:transfer:WebApp": {
    "cfTypeName": "AWS::Transfer::WebApp",
    "properties": {
      "accessEndpoint": {
        "type": "string",
        "description": "The AccessEndpoint is the URL that you provide to your users for them to interact with the Transfer Family web app. You can specify a custom URL or use the default value."
      },
      "identityProviderDetails": {
        "$ref": "#/types/aws-native:transfer:WebAppIdentityProviderDetails",
        "description": "You can provide a structure that contains the details for the identity provider to use with your web app.\n\nFor more details about this parameter, see [Configure your identity provider for Transfer Family web apps](https://docs.aws.amazon.com//transfer/latest/userguide/webapp-identity-center.html) ."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Key-value pairs that can be used to group and search for web apps."
      },
      "webAppCustomization": {
        "$ref": "#/types/aws-native:transfer:WebAppCustomization",
        "description": "A structure that contains the customization fields for the web app. You can provide a title, logo, and icon to customize the appearance of your web app."
      },
      "webAppEndpointPolicy": {
        "$ref": "#/types/aws-native:transfer:WebAppEndpointPolicy",
        "description": "Setting for the type of endpoint policy for the web app. The default value is `STANDARD` .\n\nIf your web app was created in an AWS GovCloud (US) Region , the value of this parameter can be `FIPS` , which indicates the web app endpoint is FIPS-compliant."
      },
      "webAppUnits": {
        "$ref": "#/types/aws-native:transfer:WebAppUnitsProperties",
        "description": "A union that contains the value for number of concurrent connections or the user sessions on your web app."
      }
    }
  },
  "aws-native:transfer:Workflow": {
    "cfTypeName": "AWS::Transfer::Workflow",
    "properties": {
      "description": {
        "type": "string",
        "description": "A textual description for the workflow."
      },
      "onExceptionSteps": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:transfer:WorkflowStep"
        },
        "description": "Specifies the steps (actions) to take if any errors are encountered during execution of the workflow."
      },
      "steps": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:transfer:WorkflowStep"
        },
        "description": "Specifies the details for the steps that are in the specified workflow."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "Key-value pairs that can be used to group and search for workflows. Tags are metadata attached to workflows for any purpose."
      }
    }
  },
  "aws-native:verifiedpermissions:IdentitySource": {
    "cfTypeName": "AWS::VerifiedPermissions::IdentitySource",
    "properties": {
      "configuration": {
        "oneOf": [
          {
            "$ref": "#/types/aws-native:verifiedpermissions:IdentitySourceConfiguration0Properties"
          },
          {
            "$ref": "#/types/aws-native:verifiedpermissions:IdentitySourceConfiguration1Properties"
          }
        ],
        "description": "Contains configuration information used when creating a new identity source."
      },
      "policyStoreId": {
        "type": "string",
        "description": "Specifies the ID of the policy store in which you want to store this identity source. Only policies and requests made using this policy store can reference identities from the identity provider configured in the new identity source."
      },
      "principalEntityType": {
        "type": "string",
        "description": "Specifies the namespace and data type of the principals generated for identities authenticated by the new identity source."
      }
    }
  },
  "aws-native:verifiedpermissions:Policy": {
    "cfTypeName": "AWS::VerifiedPermissions::Policy",
    "properties": {
      "definition": {
        "oneOf": [
          {
            "$ref": "#/types/aws-native:verifiedpermissions:PolicyDefinition0Properties"
          },
          {
            "$ref": "#/types/aws-native:verifiedpermissions:PolicyDefinition1Properties"
          }
        ],
        "description": "Specifies the policy type and content to use for the new or updated policy. The definition structure must include either a `Static` or a `TemplateLinked` element."
      },
      "policyStoreId": {
        "type": "string",
        "description": "Specifies the `PolicyStoreId` of the policy store you want to store the policy in."
      }
    }
  },
  "aws-native:verifiedpermissions:PolicyStore": {
    "cfTypeName": "AWS::VerifiedPermissions::PolicyStore",
    "properties": {
      "description": {
        "type": "string",
        "description": "Descriptive text that you can provide to help with identification of the current policy store."
      },
      "schema": {
        "$ref": "#/types/aws-native:verifiedpermissions:PolicyStoreSchemaDefinition",
        "description": "Creates or updates the policy schema in a policy store. Cedar can use the schema to validate any Cedar policies and policy templates submitted to the policy store. Any changes to the schema validate only policies and templates submitted after the schema change. Existing policies and templates are not re-evaluated against the changed schema. If you later update a policy, then it is evaluated against the new schema at that time."
      },
      "validationSettings": {
        "$ref": "#/types/aws-native:verifiedpermissions:PolicyStoreValidationSettings",
        "description": "Specifies the validation setting for this policy store.\n\nCurrently, the only valid and required value is `Mode` .\n\n\u003e We recommend that you turn on `STRICT` mode only after you define a schema. If a schema doesn't exist, then `STRICT` mode causes any policy to fail validation, and Verified Permissions rejects the policy. You can turn off validation by using the [UpdatePolicyStore](https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyStore) . Then, when you have a schema defined, use [UpdatePolicyStore](https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyStore) again to turn validation back on."
      }
    }
  },
  "aws-native:verifiedpermissions:PolicyTemplate": {
    "cfTypeName": "AWS::VerifiedPermissions::PolicyTemplate",
    "properties": {
      "description": {
        "type": "string",
        "description": "The description to attach to the new or updated policy template."
      },
      "policyStoreId": {
        "type": "string",
        "description": "The unique identifier of the policy store that contains the template."
      },
      "statement": {
        "type": "string",
        "description": "Specifies the content that you want to use for the new policy template, written in the Cedar policy language."
      }
    }
  },
  "aws-native:vpclattice:AccessLogSubscription": {
    "cfTypeName": "AWS::VpcLattice::AccessLogSubscription",
    "properties": {
      "destinationArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the destination. The supported destination types are CloudWatch Log groups, Kinesis Data Firehose delivery streams, and Amazon S3 buckets."
      },
      "resourceIdentifier": {
        "type": "string",
        "description": "The ID or ARN of the service network or service."
      },
      "serviceNetworkLogType": {
        "$ref": "#/types/aws-native:vpclattice:AccessLogSubscriptionServiceNetworkLogType",
        "description": "Log type of the service network."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the access log subscription."
      }
    }
  },
  "aws-native:vpclattice:AuthPolicy": {
    "cfTypeName": "AWS::VpcLattice::AuthPolicy",
    "properties": {
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "The auth policy.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::VpcLattice::AuthPolicy` for more information about the expected schema for this property."
      },
      "resourceIdentifier": {
        "type": "string",
        "description": "The ID or ARN of the service network or service for which the policy is created."
      }
    }
  },
  "aws-native:vpclattice:ResourcePolicy": {
    "cfTypeName": "AWS::VpcLattice::ResourcePolicy",
    "properties": {
      "policy": {
        "$ref": "pulumi.json#/Any",
        "description": "The Amazon Resource Name (ARN) of the service network or service.\n\nSearch the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::VpcLattice::ResourcePolicy` for more information about the expected schema for this property."
      },
      "resourceArn": {
        "type": "string",
        "description": "An IAM policy."
      }
    }
  },
  "aws-native:vpclattice:ServiceNetworkResourceAssociation": {
    "cfTypeName": "AWS::VpcLattice::ServiceNetworkResourceAssociation",
    "properties": {
      "resourceConfigurationId": {
        "type": "string",
        "description": "The ID of the resource configuration associated with the service network."
      },
      "serviceNetworkId": {
        "type": "string",
        "description": "The ID of the service network associated with the resource configuration."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "A key-value pair to associate with a resource."
      }
    }
  },
  "aws-native:vpclattice:ServiceNetworkServiceAssociation": {
    "cfTypeName": "AWS::VpcLattice::ServiceNetworkServiceAssociation",
    "properties": {
      "dnsEntry": {
        "$ref": "#/types/aws-native:vpclattice:ServiceNetworkServiceAssociationDnsEntry",
        "description": "The DNS information of the service."
      },
      "serviceIdentifier": {
        "type": "string",
        "description": "The ID or ARN of the service."
      },
      "serviceNetworkIdentifier": {
        "type": "string",
        "description": "The ID or ARN of the service network. You must use an ARN if the resources are in different accounts."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the association."
      }
    }
  },
  "aws-native:vpclattice:ServiceNetworkVpcAssociation": {
    "cfTypeName": "AWS::VpcLattice::ServiceNetworkVpcAssociation",
    "properties": {
      "securityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The IDs of the security groups. Security groups aren't added by default. You can add a security group to apply network level controls to control which resources in a VPC are allowed to access the service network and its services. For more information, see [Control traffic to resources using security groups](https://docs.aws.amazon.com//vpc/latest/userguide/VPC_SecurityGroups.html) in the *Amazon VPC User Guide* ."
      },
      "serviceNetworkIdentifier": {
        "type": "string",
        "description": "The ID or ARN of the service network. You must use an ARN if the resources are in different accounts."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags for the association."
      },
      "vpcIdentifier": {
        "type": "string",
        "description": "The ID of the VPC."
      }
    }
  },
  "aws-native:wafv2:LoggingConfiguration": {
    "cfTypeName": "AWS::WAFv2::LoggingConfiguration",
    "properties": {
      "logDestinationConfigs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL."
      },
      "loggingFilter": {
        "$ref": "#/types/aws-native:wafv2:LoggingFilterProperties",
        "description": "Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation."
      },
      "redactedFields": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:wafv2:LoggingConfigurationFieldToMatch"
        },
        "description": "The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx."
      },
      "resourceArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs."
      }
    }
  },
  "aws-native:wafv2:WebAclAssociation": {
    "cfTypeName": "AWS::WAFv2::WebACLAssociation",
    "properties": {
      "resourceArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the resource to associate with the web ACL.\n\nThe ARN must be in one of the following formats:\n\n- For an Application Load Balancer: `arn: *partition* :elasticloadbalancing: *region* : *account-id* :loadbalancer/app/ *load-balancer-name* / *load-balancer-id*`\n- For an Amazon API Gateway REST API: `arn: *partition* :apigateway: *region* ::/restapis/ *api-id* /stages/ *stage-name*`\n- For an AWS AppSync GraphQL API: `arn: *partition* :appsync: *region* : *account-id* :apis/ *GraphQLApiId*`\n- For an Amazon Cognito user pool: `arn: *partition* :cognito-idp: *region* : *account-id* :userpool/ *user-pool-id*`\n- For an AWS App Runner service: `arn: *partition* :apprunner: *region* : *account-id* :service/ *apprunner-service-name* / *apprunner-service-id*`\n- For an AWS Verified Access instance: `arn: *partition* :ec2: *region* : *account-id* :verified-access-instance/ *instance-id*`\n- For an AWS Amplify instance: `arn: *partition* :amplify: *region* : *account-id* :apps/ *app-id*`"
      },
      "webAclArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with the resource."
      }
    }
  },
  "aws-native:wisdom:AiAgentVersion": {
    "cfTypeName": "AWS::Wisdom::AIAgentVersion",
    "properties": {
      "aiAgentId": {
        "type": "string",
        "description": "The identifier of the AI Agent."
      },
      "assistantId": {
        "type": "string"
      },
      "modifiedTimeSeconds": {
        "type": "number",
        "description": "The time the AI Agent version was last modified in seconds."
      }
    }
  },
  "aws-native:wisdom:AiGuardrailVersion": {
    "cfTypeName": "AWS::Wisdom::AIGuardrailVersion",
    "properties": {
      "aiGuardrailId": {
        "type": "string",
        "description": "The ID of the AI guardrail version."
      },
      "assistantId": {
        "type": "string",
        "description": "The ID of the AI guardrail version assistant."
      },
      "modifiedTimeSeconds": {
        "type": "number",
        "description": "The modified time of the AI guardrail version in seconds."
      }
    }
  },
  "aws-native:wisdom:AiPromptVersion": {
    "cfTypeName": "AWS::Wisdom::AIPromptVersion",
    "properties": {
      "aiPromptId": {
        "type": "string",
        "description": "The identifier of the Amazon Q in Connect AI prompt."
      },
      "assistantId": {
        "type": "string",
        "description": "The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN."
      },
      "modifiedTimeSeconds": {
        "type": "number",
        "description": "The time the AI Prompt version was last modified in seconds."
      }
    }
  },
  "aws-native:wisdom:AssistantAssociation": {
    "cfTypeName": "AWS::Wisdom::AssistantAssociation",
    "properties": {
      "assistantId": {
        "type": "string",
        "description": "The identifier of the Wisdom assistant."
      },
      "association": {
        "$ref": "#/types/aws-native:wisdom:AssistantAssociationAssociationData",
        "description": "The identifier of the associated resource."
      },
      "associationType": {
        "$ref": "#/types/aws-native:wisdom:AssistantAssociationAssociationType",
        "description": "The type of association."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "The tags used to organize, track, or control access for this resource."
      }
    }
  },
  "aws-native:wisdom:MessageTemplateVersion": {
    "cfTypeName": "AWS::Wisdom::MessageTemplateVersion",
    "properties": {
      "messageTemplateArn": {
        "type": "string",
        "description": "The unqualified Amazon Resource Name (ARN) of the message template."
      },
      "messageTemplateContentSha256": {
        "type": "string",
        "description": "The content SHA256 of the message template."
      }
    }
  },
  "aws-native:workspaces:ConnectionAlias": {
    "cfTypeName": "AWS::WorkSpaces::ConnectionAlias",
    "properties": {
      "connectionString": {
        "type": "string",
        "description": "The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as `www.example.com` ."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:CreateOnlyTag"
        },
        "description": "The tags to associate with the connection alias."
      }
    }
  },
  "aws-native:workspacesweb:BrowserSettings": {
    "cfTypeName": "AWS::WorkSpacesWeb::BrowserSettings",
    "properties": {
      "additionalEncryptionContext": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Additional encryption context of the browser settings."
      },
      "browserPolicy": {
        "type": "string",
        "description": "A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions."
      },
      "customerManagedKey": {
        "type": "string",
        "description": "The custom managed key of the browser settings.\n\n*Pattern* : `^arn:[\\w+=\\/,.@-]+:kms:[a-zA-Z0-9\\-]*:[a-zA-Z0-9]{1,12}:key\\/[a-zA-Z0-9-]+$`"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the browser settings resource. A tag is a key-value pair."
      }
    }
  },
  "aws-native:workspacesweb:DataProtectionSettings": {
    "cfTypeName": "AWS::WorkSpacesWeb::DataProtectionSettings",
    "properties": {
      "additionalEncryptionContext": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The additional encryption context of the data protection settings."
      },
      "customerManagedKey": {
        "type": "string",
        "description": "The customer managed key used to encrypt sensitive information in the data protection settings."
      },
      "description": {
        "type": "string",
        "description": "The description of the data protection settings."
      },
      "displayName": {
        "type": "string",
        "description": "The display name of the data protection settings."
      },
      "inlineRedactionConfiguration": {
        "$ref": "#/types/aws-native:workspacesweb:DataProtectionSettingsInlineRedactionConfiguration",
        "description": "The inline redaction configuration for the data protection settings."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags of the data protection settings."
      }
    }
  },
  "aws-native:workspacesweb:IpAccessSettings": {
    "cfTypeName": "AWS::WorkSpacesWeb::IpAccessSettings",
    "properties": {
      "additionalEncryptionContext": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Additional encryption context of the IP access settings."
      },
      "customerManagedKey": {
        "type": "string",
        "description": "The custom managed key of the IP access settings.\n\n*Pattern* : `^arn:[\\w+=\\/,.@-]+:kms:[a-zA-Z0-9\\-]*:[a-zA-Z0-9]{1,12}:key\\/[a-zA-Z0-9-]+$`"
      },
      "description": {
        "type": "string",
        "description": "The description of the IP access settings."
      },
      "displayName": {
        "type": "string",
        "description": "The display name of the IP access settings."
      },
      "ipRules": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:workspacesweb:IpAccessSettingsIpRule"
        },
        "description": "The IP rules of the IP access settings."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the IP access settings resource. A tag is a key-value pair."
      }
    }
  },
  "aws-native:workspacesweb:NetworkSettings": {
    "cfTypeName": "AWS::WorkSpacesWeb::NetworkSettings",
    "properties": {
      "securityGroupIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "One or more security groups used to control access from streaming instances to your VPC.\n\n*Pattern* : `^[\\w+\\-]+$`"
      },
      "subnetIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.\n\n*Pattern* : `^subnet-([0-9a-f]{8}|[0-9a-f]{17})$`"
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the network settings resource. A tag is a key-value pair."
      },
      "vpcId": {
        "type": "string",
        "description": "The VPC that streaming instances will connect to.\n\n*Pattern* : `^vpc-[0-9a-z]*$`"
      }
    }
  },
  "aws-native:workspacesweb:Portal": {
    "cfTypeName": "AWS::WorkSpacesWeb::Portal",
    "properties": {
      "additionalEncryptionContext": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The additional encryption context of the portal."
      },
      "authenticationType": {
        "$ref": "#/types/aws-native:workspacesweb:PortalAuthenticationType",
        "description": "The type of authentication integration points used when signing into the web portal. Defaults to `Standard` .\n\n`Standard` web portals are authenticated directly through your identity provider (IdP). User and group access to your web portal is controlled through your IdP. You need to include an IdP resource in your template to integrate your IdP with your web portal. Completing the configuration for your IdP requires exchanging WorkSpaces Secure Browser’s SP metadata with your IdP’s IdP metadata. If your IdP requires the SP metadata first before returning the IdP metadata, you should follow these steps:\n\n1. Create and deploy a CloudFormation template with a `Standard` portal with no `IdentityProvider` resource.\n\n2. Retrieve the SP metadata using `Fn:GetAtt` , the WorkSpaces Secure Browser console, or by the calling the `GetPortalServiceProviderMetadata` API.\n\n3. Submit the data to your IdP.\n\n4. Add an `IdentityProvider` resource to your CloudFormation template.\n\n`IAM Identity Center` web portals are authenticated through AWS IAM Identity Center . They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration) and other identity provider information must be configured in IAM Identity Center . User and group assignment must be done through the WorkSpaces Secure Browser console. These cannot be configured in CloudFormation."
      },
      "browserSettingsArn": {
        "type": "string",
        "description": "The ARN of the browser settings that is associated with this web portal."
      },
      "customerManagedKey": {
        "type": "string",
        "description": "The customer managed key of the web portal.\n\n*Pattern* : `^arn:[\\w+=\\/,.@-]+:kms:[a-zA-Z0-9\\-]*:[a-zA-Z0-9]{1,12}:key\\/[a-zA-Z0-9-]+$`"
      },
      "dataProtectionSettingsArn": {
        "type": "string",
        "description": "The ARN of the data protection settings."
      },
      "displayName": {
        "type": "string",
        "description": "The name of the web portal."
      },
      "instanceType": {
        "$ref": "#/types/aws-native:workspacesweb:PortalInstanceType",
        "description": "The type and resources of the underlying instance."
      },
      "ipAccessSettingsArn": {
        "type": "string",
        "description": "The ARN of the IP access settings that is associated with the web portal."
      },
      "maxConcurrentSessions": {
        "type": "number",
        "description": "The maximum number of concurrent sessions for the portal."
      },
      "networkSettingsArn": {
        "type": "string",
        "description": "The ARN of the network settings that is associated with the web portal."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the web portal. A tag is a key-value pair."
      },
      "trustStoreArn": {
        "type": "string",
        "description": "The ARN of the trust store that is associated with the web portal."
      },
      "userAccessLoggingSettingsArn": {
        "type": "string",
        "description": "The ARN of the user access logging settings that is associated with the web portal."
      },
      "userSettingsArn": {
        "type": "string",
        "description": "The ARN of the user settings that is associated with the web portal."
      }
    }
  },
  "aws-native:workspacesweb:TrustStore": {
    "cfTypeName": "AWS::WorkSpacesWeb::TrustStore",
    "properties": {
      "certificateList": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A list of CA certificates to be added to the trust store."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the trust store. A tag is a key-value pair."
      }
    }
  },
  "aws-native:workspacesweb:UserAccessLoggingSettings": {
    "cfTypeName": "AWS::WorkSpacesWeb::UserAccessLoggingSettings",
    "properties": {
      "kinesisStreamArn": {
        "type": "string",
        "description": "Kinesis stream ARN to which log events are published."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the user access logging settings resource. A tag is a key-value pair."
      }
    }
  },
  "aws-native:workspacesweb:UserSettings": {
    "cfTypeName": "AWS::WorkSpacesWeb::UserSettings",
    "properties": {
      "additionalEncryptionContext": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "The additional encryption context of the user settings."
      },
      "cookieSynchronizationConfiguration": {
        "$ref": "#/types/aws-native:workspacesweb:UserSettingsCookieSynchronizationConfiguration",
        "description": "The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser."
      },
      "copyAllowed": {
        "$ref": "#/types/aws-native:workspacesweb:UserSettingsEnabledType",
        "description": "Specifies whether the user can copy text from the streaming session to the local device."
      },
      "customerManagedKey": {
        "type": "string",
        "description": "The customer managed key used to encrypt sensitive information in the user settings."
      },
      "deepLinkAllowed": {
        "$ref": "#/types/aws-native:workspacesweb:UserSettingsEnabledType",
        "description": "Specifies whether the user can use deep links that open automatically when connecting to a session."
      },
      "disconnectTimeoutInMinutes": {
        "type": "number",
        "description": "The amount of time that a streaming session remains active after users disconnect."
      },
      "downloadAllowed": {
        "$ref": "#/types/aws-native:workspacesweb:UserSettingsEnabledType",
        "description": "Specifies whether the user can download files from the streaming session to the local device."
      },
      "idleDisconnectTimeoutInMinutes": {
        "type": "number",
        "description": "The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins."
      },
      "pasteAllowed": {
        "$ref": "#/types/aws-native:workspacesweb:UserSettingsEnabledType",
        "description": "Specifies whether the user can paste text from the local device to the streaming session."
      },
      "printAllowed": {
        "$ref": "#/types/aws-native:workspacesweb:UserSettingsEnabledType",
        "description": "Specifies whether the user can print to the local device."
      },
      "tags": {
        "type": "array",
        "items": {
          "$ref": "#/types/aws-native:index:Tag"
        },
        "description": "The tags to add to the user settings resource. A tag is a key-value pair."
      },
      "toolbarConfiguration": {
        "$ref": "#/types/aws-native:workspacesweb:UserSettingsToolbarConfiguration",
        "description": "The configuration of the toolbar. This allows administrators to select the toolbar type and visual mode, set maximum display resolution for sessions, and choose which items are visible to end users during their sessions. If administrators do not modify these settings, end users retain control over their toolbar preferences."
      },
      "uploadAllowed": {
        "$ref": "#/types/aws-native:workspacesweb:UserSettingsEnabledType",
        "description": "Specifies whether the user can upload files from the local device to the streaming session."
      }
    }
  },
  "aws-native:xray:TransactionSearchConfig": {
    "cfTypeName": "AWS::XRay::TransactionSearchConfig",
    "properties": {
      "indexingPercentage": {
        "type": "number"
      }
    }
  }
}
