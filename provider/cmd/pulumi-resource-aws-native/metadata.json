{
    "resources": {
        "aws-native:accessanalyzer:Analyzer": {
            "cf": "AWS::AccessAnalyzer::Analyzer",
            "inputs": {
                "analyzerName": {
                    "type": "string",
                    "description": "Analyzer name"
                },
                "archiveRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:accessanalyzer:AnalyzerArchiveRule"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:accessanalyzer:AnalyzerTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the analyzer, must be ACCOUNT or ORGANIZATION"
                }
            },
            "outputs": {
                "analyzerName": {
                    "type": "string",
                    "description": "Analyzer name"
                },
                "archiveRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:accessanalyzer:AnalyzerArchiveRule"
                    }
                },
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN) of the analyzer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:accessanalyzer:AnalyzerTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the analyzer, must be ACCOUNT or ORGANIZATION"
                }
            },
            "required": [
                "type"
            ],
            "createOnly": [
                "analyzerName",
                "type"
            ]
        },
        "aws-native:acmpca:Certificate": {
            "cf": "AWS::ACMPCA::Certificate",
            "inputs": {
                "apiPassthrough": {
                    "$ref": "#/types/aws-native:acmpca:CertificateApiPassthrough",
                    "description": "These are fields to be overridden in a certificate at the time of issuance. These requires an API_Passthrough template be used or they will be ignored."
                },
                "certificateAuthorityArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the private CA to issue the certificate."
                },
                "certificateSigningRequest": {
                    "type": "string",
                    "description": "The certificate signing request (CSR) for the Certificate."
                },
                "signingAlgorithm": {
                    "type": "string",
                    "description": "The name of the algorithm that will be used to sign the Certificate."
                },
                "templateArn": {
                    "type": "string",
                    "description": "Specifies a custom configuration template to use when issuing a certificate. If this parameter is not provided, ACM Private CA defaults to the EndEntityCertificate/V1 template."
                },
                "validity": {
                    "$ref": "#/types/aws-native:acmpca:CertificateValidity",
                    "description": "The time before which the Certificate will be valid."
                },
                "validityNotBefore": {
                    "$ref": "#/types/aws-native:acmpca:CertificateValidity",
                    "description": "The time after which the Certificate will be valid."
                }
            },
            "outputs": {
                "apiPassthrough": {
                    "$ref": "#/types/aws-native:acmpca:CertificateApiPassthrough",
                    "description": "These are fields to be overridden in a certificate at the time of issuance. These requires an API_Passthrough template be used or they will be ignored."
                },
                "arn": {
                    "type": "string",
                    "description": "The ARN of the issued certificate."
                },
                "certificate": {
                    "type": "string",
                    "description": "The issued certificate in base 64 PEM-encoded format.",
                    "language": {
                        "csharp": {
                            "name": "CertificateValue"
                        }
                    }
                },
                "certificateAuthorityArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the private CA to issue the certificate."
                },
                "certificateSigningRequest": {
                    "type": "string",
                    "description": "The certificate signing request (CSR) for the Certificate."
                },
                "signingAlgorithm": {
                    "type": "string",
                    "description": "The name of the algorithm that will be used to sign the Certificate."
                },
                "templateArn": {
                    "type": "string",
                    "description": "Specifies a custom configuration template to use when issuing a certificate. If this parameter is not provided, ACM Private CA defaults to the EndEntityCertificate/V1 template."
                },
                "validity": {
                    "$ref": "#/types/aws-native:acmpca:CertificateValidity",
                    "description": "The time before which the Certificate will be valid."
                },
                "validityNotBefore": {
                    "$ref": "#/types/aws-native:acmpca:CertificateValidity",
                    "description": "The time after which the Certificate will be valid."
                }
            },
            "required": [
                "certificateAuthorityArn",
                "certificateSigningRequest",
                "signingAlgorithm",
                "validity"
            ],
            "createOnly": [
                "apiPassthrough",
                "certificateAuthorityArn",
                "certificateSigningRequest",
                "signingAlgorithm",
                "templateArn",
                "validity",
                "validityNotBefore"
            ]
        },
        "aws-native:acmpca:CertificateAuthority": {
            "cf": "AWS::ACMPCA::CertificateAuthority",
            "inputs": {
                "csrExtensions": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityCsrExtensions",
                    "description": "Structure that contains CSR pass through extension information used by the CreateCertificateAuthority action."
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate."
                },
                "keyStorageSecurityStandard": {
                    "type": "string",
                    "description": "KeyStorageSecurityStadard defines a cryptographic key management compliance standard used for handling CA keys."
                },
                "revocationConfiguration": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityRevocationConfiguration",
                    "description": "Certificate revocation information used by the CreateCertificateAuthority and UpdateCertificateAuthority actions."
                },
                "signingAlgorithm": {
                    "type": "string",
                    "description": "Algorithm your CA uses to sign certificate requests."
                },
                "subject": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthoritySubject",
                    "description": "Structure that contains X.500 distinguished name information for your CA."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:acmpca:CertificateAuthorityTag"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the certificate authority."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the certificate authority."
                },
                "certificateSigningRequest": {
                    "type": "string",
                    "description": "The base64 PEM-encoded certificate signing request (CSR) for your certificate authority certificate."
                },
                "csrExtensions": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityCsrExtensions",
                    "description": "Structure that contains CSR pass through extension information used by the CreateCertificateAuthority action."
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate."
                },
                "keyStorageSecurityStandard": {
                    "type": "string",
                    "description": "KeyStorageSecurityStadard defines a cryptographic key management compliance standard used for handling CA keys."
                },
                "revocationConfiguration": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityRevocationConfiguration",
                    "description": "Certificate revocation information used by the CreateCertificateAuthority and UpdateCertificateAuthority actions."
                },
                "signingAlgorithm": {
                    "type": "string",
                    "description": "Algorithm your CA uses to sign certificate requests."
                },
                "subject": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthoritySubject",
                    "description": "Structure that contains X.500 distinguished name information for your CA."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:acmpca:CertificateAuthorityTag"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the certificate authority."
                }
            },
            "required": [
                "keyAlgorithm",
                "signingAlgorithm",
                "subject",
                "type"
            ],
            "createOnly": [
                "csrExtensions",
                "keyAlgorithm",
                "keyStorageSecurityStandard",
                "signingAlgorithm",
                "subject",
                "type"
            ]
        },
        "aws-native:acmpca:CertificateAuthorityActivation": {
            "cf": "AWS::ACMPCA::CertificateAuthorityActivation",
            "inputs": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate Authority certificate that will be installed in the Certificate Authority."
                },
                "certificateAuthorityArn": {
                    "type": "string",
                    "description": "Arn of the Certificate Authority."
                },
                "certificateChain": {
                    "type": "string",
                    "description": "Certificate chain for the Certificate Authority certificate."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Certificate Authority."
                }
            },
            "outputs": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate Authority certificate that will be installed in the Certificate Authority."
                },
                "certificateAuthorityArn": {
                    "type": "string",
                    "description": "Arn of the Certificate Authority."
                },
                "certificateChain": {
                    "type": "string",
                    "description": "Certificate chain for the Certificate Authority certificate."
                },
                "completeCertificateChain": {
                    "type": "string",
                    "description": "The complete certificate chain, including the Certificate Authority certificate."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Certificate Authority."
                }
            },
            "required": [
                "certificate",
                "certificateAuthorityArn"
            ],
            "createOnly": [
                "certificateAuthorityArn"
            ]
        },
        "aws-native:amplify:App": {
            "cf": "AWS::Amplify::App",
            "inputs": {
                "accessToken": {
                    "type": "string"
                },
                "autoBranchCreationConfig": {
                    "$ref": "#/types/aws-native:amplify:AppAutoBranchCreationConfig"
                },
                "basicAuthConfig": {
                    "$ref": "#/types/aws-native:amplify:AppBasicAuthConfig"
                },
                "buildSpec": {
                    "type": "string"
                },
                "customHeaders": {
                    "type": "string"
                },
                "customRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:AppCustomRule"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enableBranchAutoDeletion": {
                    "type": "boolean"
                },
                "environmentVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:AppEnvironmentVariable"
                    }
                },
                "iAMServiceRole": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "oauthToken": {
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:AppTag"
                    }
                }
            },
            "outputs": {
                "accessToken": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "arn": {
                    "type": "string"
                },
                "autoBranchCreationConfig": {
                    "$ref": "#/types/aws-native:amplify:AppAutoBranchCreationConfig"
                },
                "basicAuthConfig": {
                    "$ref": "#/types/aws-native:amplify:AppBasicAuthConfig"
                },
                "buildSpec": {
                    "type": "string"
                },
                "customHeaders": {
                    "type": "string"
                },
                "customRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:AppCustomRule"
                    }
                },
                "defaultDomain": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableBranchAutoDeletion": {
                    "type": "boolean"
                },
                "environmentVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:AppEnvironmentVariable"
                    }
                },
                "iAMServiceRole": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "oauthToken": {
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:AppTag"
                    }
                }
            },
            "required": [
                "name"
            ]
        },
        "aws-native:amplify:Branch": {
            "cf": "AWS::Amplify::Branch",
            "inputs": {
                "appId": {
                    "type": "string"
                },
                "basicAuthConfig": {
                    "$ref": "#/types/aws-native:amplify:BranchBasicAuthConfig"
                },
                "branchName": {
                    "type": "string"
                },
                "buildSpec": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableAutoBuild": {
                    "type": "boolean"
                },
                "enablePerformanceMode": {
                    "type": "boolean"
                },
                "enablePullRequestPreview": {
                    "type": "boolean"
                },
                "environmentVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:BranchEnvironmentVariable"
                    }
                },
                "pullRequestEnvironmentName": {
                    "type": "string"
                },
                "stage": {
                    "$ref": "#/types/aws-native:amplify:BranchStage"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:BranchTag"
                    }
                }
            },
            "outputs": {
                "appId": {
                    "type": "string"
                },
                "arn": {
                    "type": "string"
                },
                "basicAuthConfig": {
                    "$ref": "#/types/aws-native:amplify:BranchBasicAuthConfig"
                },
                "branchName": {
                    "type": "string"
                },
                "buildSpec": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableAutoBuild": {
                    "type": "boolean"
                },
                "enablePerformanceMode": {
                    "type": "boolean"
                },
                "enablePullRequestPreview": {
                    "type": "boolean"
                },
                "environmentVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:BranchEnvironmentVariable"
                    }
                },
                "pullRequestEnvironmentName": {
                    "type": "string"
                },
                "stage": {
                    "$ref": "#/types/aws-native:amplify:BranchStage"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:BranchTag"
                    }
                }
            },
            "required": [
                "appId",
                "branchName"
            ],
            "createOnly": [
                "appId",
                "branchName"
            ]
        },
        "aws-native:amplify:Domain": {
            "cf": "AWS::Amplify::Domain",
            "inputs": {
                "appId": {
                    "type": "string"
                },
                "autoSubDomainCreationPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "autoSubDomainIAMRole": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "enableAutoSubDomain": {
                    "type": "boolean"
                },
                "subDomainSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:DomainSubDomainSetting"
                    }
                }
            },
            "outputs": {
                "appId": {
                    "type": "string"
                },
                "arn": {
                    "type": "string"
                },
                "autoSubDomainCreationPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "autoSubDomainIAMRole": {
                    "type": "string"
                },
                "certificateRecord": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "domainStatus": {
                    "type": "string"
                },
                "enableAutoSubDomain": {
                    "type": "boolean"
                },
                "statusReason": {
                    "type": "string"
                },
                "subDomainSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:DomainSubDomainSetting"
                    }
                }
            },
            "required": [
                "appId",
                "domainName",
                "subDomainSettings"
            ],
            "createOnly": [
                "appId",
                "domainName"
            ]
        },
        "aws-native:apigateway:Account": {
            "cf": "AWS::ApiGateway::Account",
            "inputs": {
                "cloudWatchRoleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that has write access to CloudWatch Logs in your account."
                }
            },
            "outputs": {
                "cloudWatchRoleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that has write access to CloudWatch Logs in your account."
                }
            }
        },
        "aws-native:apigateway:ApiKey": {
            "cf": "AWS::ApiGateway::ApiKey",
            "inputs": {
                "customerId": {
                    "type": "string",
                    "description": "An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the purpose of the API key."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the API key can be used by clients."
                },
                "generateDistinctId": {
                    "type": "boolean",
                    "description": "Specifies whether the key identifier is distinct from the created API key value. This parameter is deprecated and should not be used."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the API key. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the API key name."
                },
                "stageKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:ApiKeyStageKey"
                    },
                    "description": "A list of stages to associate with this API key."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:ApiKeyTag"
                    },
                    "description": "An array of arbitrary tags (key-value pairs) to associate with the API key."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the API key. Must be at least 20 characters long."
                }
            },
            "outputs": {
                "aPIKeyId": {
                    "type": "string",
                    "description": "A Unique Key ID which identifies the API Key. Generated by the Create API and returned by the Read and List APIs "
                },
                "customerId": {
                    "type": "string",
                    "description": "An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the purpose of the API key."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the API key can be used by clients."
                },
                "generateDistinctId": {
                    "type": "boolean",
                    "description": "Specifies whether the key identifier is distinct from the created API key value. This parameter is deprecated and should not be used."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the API key. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the API key name."
                },
                "stageKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:ApiKeyStageKey"
                    },
                    "description": "A list of stages to associate with this API key."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:ApiKeyTag"
                    },
                    "description": "An array of arbitrary tags (key-value pairs) to associate with the API key."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the API key. Must be at least 20 characters long."
                }
            },
            "createOnly": [
                "generateDistinctId",
                "name",
                "value"
            ]
        },
        "aws-native:apigateway:ClientCertificate": {
            "cf": "AWS::ApiGateway::ClientCertificate",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "A description of the client certificate."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:ClientCertificateTag"
                    },
                    "description": "An array of arbitrary tags (key-value pairs) to associate with the client certificate."
                }
            },
            "outputs": {
                "clientCertificateId": {
                    "type": "string",
                    "description": "The Primary Identifier of the Client Certficate, generated by a Create API Call"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the client certificate."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:ClientCertificateTag"
                    },
                    "description": "An array of arbitrary tags (key-value pairs) to associate with the client certificate."
                }
            }
        },
        "aws-native:apigateway:DocumentationVersion": {
            "cf": "AWS::ApiGateway::DocumentationVersion",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the API documentation snapshot."
                },
                "documentationVersion": {
                    "type": "string",
                    "description": "The version identifier of the API documentation snapshot.",
                    "language": {
                        "csharp": {
                            "name": "DocumentationVersionValue"
                        }
                    }
                },
                "restApiId": {
                    "type": "string",
                    "description": "The identifier of the API."
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the API documentation snapshot."
                },
                "documentationVersion": {
                    "type": "string",
                    "description": "The version identifier of the API documentation snapshot.",
                    "language": {
                        "csharp": {
                            "name": "DocumentationVersionValue"
                        }
                    }
                },
                "restApiId": {
                    "type": "string",
                    "description": "The identifier of the API."
                }
            },
            "required": [
                "documentationVersion",
                "restApiId"
            ],
            "createOnly": [
                "documentationVersion",
                "restApiId"
            ]
        },
        "aws-native:apigateway:DomainName": {
            "cf": "AWS::ApiGateway::DomainName",
            "inputs": {
                "certificateArn": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string",
                    "language": {
                        "csharp": {
                            "name": "DomainNameValue"
                        }
                    }
                },
                "endpointConfiguration": {
                    "$ref": "#/types/aws-native:apigateway:DomainNameEndpointConfiguration"
                },
                "mutualTlsAuthentication": {
                    "$ref": "#/types/aws-native:apigateway:DomainNameMutualTlsAuthentication"
                },
                "ownershipVerificationCertificateArn": {
                    "type": "string"
                },
                "regionalCertificateArn": {
                    "type": "string"
                },
                "securityPolicy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:DomainNameTag"
                    }
                }
            },
            "outputs": {
                "certificateArn": {
                    "type": "string"
                },
                "distributionDomainName": {
                    "type": "string"
                },
                "distributionHostedZoneId": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string",
                    "language": {
                        "csharp": {
                            "name": "DomainNameValue"
                        }
                    }
                },
                "endpointConfiguration": {
                    "$ref": "#/types/aws-native:apigateway:DomainNameEndpointConfiguration"
                },
                "mutualTlsAuthentication": {
                    "$ref": "#/types/aws-native:apigateway:DomainNameMutualTlsAuthentication"
                },
                "ownershipVerificationCertificateArn": {
                    "type": "string"
                },
                "regionalCertificateArn": {
                    "type": "string"
                },
                "regionalDomainName": {
                    "type": "string"
                },
                "regionalHostedZoneId": {
                    "type": "string"
                },
                "securityPolicy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:DomainNameTag"
                    }
                }
            },
            "createOnly": [
                "domainName"
            ]
        },
        "aws-native:apigateway:Model": {
            "cf": "AWS::ApiGateway::Model",
            "inputs": {
                "contentType": {
                    "type": "string",
                    "description": "The content type for the model."
                },
                "description": {
                    "type": "string",
                    "description": "A description that identifies this model."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the model. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the model name."
                },
                "restApiId": {
                    "type": "string",
                    "description": "The ID of a REST API with which to associate this model."
                },
                "schema": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The schema to use to transform data to one or more output formats. Specify null ({}) if you don't want to specify a schema."
                }
            },
            "outputs": {
                "contentType": {
                    "type": "string",
                    "description": "The content type for the model."
                },
                "description": {
                    "type": "string",
                    "description": "A description that identifies this model."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the model. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the model name."
                },
                "restApiId": {
                    "type": "string",
                    "description": "The ID of a REST API with which to associate this model."
                },
                "schema": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The schema to use to transform data to one or more output formats. Specify null ({}) if you don't want to specify a schema."
                }
            },
            "required": [
                "restApiId"
            ],
            "createOnly": [
                "contentType",
                "name",
                "restApiId"
            ]
        },
        "aws-native:apigateway:RequestValidator": {
            "cf": "AWS::ApiGateway::RequestValidator",
            "inputs": {
                "name": {
                    "type": "string",
                    "description": "Name of the request validator."
                },
                "restApiId": {
                    "type": "string",
                    "description": "The identifier of the targeted API entity."
                },
                "validateRequestBody": {
                    "type": "boolean",
                    "description": "Indicates whether to validate the request body according to the configured schema for the targeted API and method. "
                },
                "validateRequestParameters": {
                    "type": "boolean",
                    "description": "Indicates whether to validate request parameters."
                }
            },
            "outputs": {
                "name": {
                    "type": "string",
                    "description": "Name of the request validator."
                },
                "requestValidatorId": {
                    "type": "string",
                    "description": "ID of the request validator."
                },
                "restApiId": {
                    "type": "string",
                    "description": "The identifier of the targeted API entity."
                },
                "validateRequestBody": {
                    "type": "boolean",
                    "description": "Indicates whether to validate the request body according to the configured schema for the targeted API and method. "
                },
                "validateRequestParameters": {
                    "type": "boolean",
                    "description": "Indicates whether to validate request parameters."
                }
            },
            "required": [
                "restApiId"
            ],
            "createOnly": [
                "name",
                "restApiId"
            ]
        },
        "aws-native:apigateway:Resource": {
            "cf": "AWS::ApiGateway::Resource",
            "inputs": {
                "parentId": {
                    "type": "string",
                    "description": "The parent resource's identifier."
                },
                "pathPart": {
                    "type": "string",
                    "description": "The last path segment for this resource."
                },
                "restApiId": {
                    "type": "string",
                    "description": "The ID of the RestApi resource in which you want to create this resource.."
                }
            },
            "outputs": {
                "parentId": {
                    "type": "string",
                    "description": "The parent resource's identifier."
                },
                "pathPart": {
                    "type": "string",
                    "description": "The last path segment for this resource."
                },
                "resourceId": {
                    "type": "string",
                    "description": "A unique primary identifier for a Resource"
                },
                "restApiId": {
                    "type": "string",
                    "description": "The ID of the RestApi resource in which you want to create this resource.."
                }
            },
            "required": [
                "parentId",
                "pathPart",
                "restApiId"
            ],
            "createOnly": [
                "parentId",
                "pathPart",
                "restApiId"
            ]
        },
        "aws-native:apigateway:UsagePlan": {
            "cf": "AWS::ApiGateway::UsagePlan",
            "inputs": {
                "apiStages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:UsagePlanApiStage"
                    },
                    "description": "The API stages to associate with this usage plan."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the usage plan."
                },
                "quota": {
                    "$ref": "#/types/aws-native:apigateway:UsagePlanQuotaSettings",
                    "description": "Configures the number of requests that users can make within a given interval."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:UsagePlanTag"
                    },
                    "description": "An array of arbitrary tags (key-value pairs) to associate with the usage plan."
                },
                "throttle": {
                    "$ref": "#/types/aws-native:apigateway:UsagePlanThrottleSettings",
                    "description": "Configures the overall request rate (average requests per second) and burst capacity."
                },
                "usagePlanName": {
                    "type": "string",
                    "description": "A name for the usage plan."
                }
            },
            "outputs": {
                "apiStages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:UsagePlanApiStage"
                    },
                    "description": "The API stages to associate with this usage plan."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the usage plan."
                },
                "quota": {
                    "$ref": "#/types/aws-native:apigateway:UsagePlanQuotaSettings",
                    "description": "Configures the number of requests that users can make within a given interval."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apigateway:UsagePlanTag"
                    },
                    "description": "An array of arbitrary tags (key-value pairs) to associate with the usage plan."
                },
                "throttle": {
                    "$ref": "#/types/aws-native:apigateway:UsagePlanThrottleSettings",
                    "description": "Configures the overall request rate (average requests per second) and burst capacity."
                },
                "usagePlanName": {
                    "type": "string",
                    "description": "A name for the usage plan."
                }
            }
        },
        "aws-native:apigateway:UsagePlanKey": {
            "cf": "AWS::ApiGateway::UsagePlanKey",
            "inputs": {
                "keyId": {
                    "type": "string",
                    "description": "The ID of the usage plan key."
                },
                "keyType": {
                    "$ref": "#/types/aws-native:apigateway:UsagePlanKeyKeyType",
                    "description": "The type of usage plan key. Currently, the only valid key type is API_KEY."
                },
                "usagePlanId": {
                    "type": "string",
                    "description": "The ID of the usage plan."
                }
            },
            "outputs": {
                "keyId": {
                    "type": "string",
                    "description": "The ID of the usage plan key."
                },
                "keyType": {
                    "$ref": "#/types/aws-native:apigateway:UsagePlanKeyKeyType",
                    "description": "The type of usage plan key. Currently, the only valid key type is API_KEY."
                },
                "usagePlanId": {
                    "type": "string",
                    "description": "The ID of the usage plan."
                }
            },
            "required": [
                "keyId",
                "keyType",
                "usagePlanId"
            ],
            "createOnly": [
                "keyId",
                "keyType",
                "usagePlanId"
            ]
        },
        "aws-native:appflow:ConnectorProfile": {
            "cf": "AWS::AppFlow::ConnectorProfile",
            "inputs": {
                "connectionMode": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectionMode",
                    "description": "Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular"
                },
                "connectorProfileConfig": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorProfileConfig",
                    "description": "Connector specific configurations needed to create connector profile"
                },
                "connectorProfileName": {
                    "type": "string",
                    "description": "The maximum number of items to retrieve in a single batch."
                },
                "connectorType": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorType",
                    "description": "List of Saas providers that need connector profile to be created"
                },
                "kMSArn": {
                    "type": "string",
                    "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key."
                }
            },
            "outputs": {
                "connectionMode": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectionMode",
                    "description": "Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular"
                },
                "connectorProfileArn": {
                    "type": "string",
                    "description": "Unique identifier for connector profile resources"
                },
                "connectorProfileConfig": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorProfileConfig",
                    "description": "Connector specific configurations needed to create connector profile"
                },
                "connectorProfileName": {
                    "type": "string",
                    "description": "The maximum number of items to retrieve in a single batch."
                },
                "connectorType": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorType",
                    "description": "List of Saas providers that need connector profile to be created"
                },
                "credentialsArn": {
                    "type": "string",
                    "description": "A unique Arn for Connector-Profile resource"
                },
                "kMSArn": {
                    "type": "string",
                    "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key."
                }
            },
            "required": [
                "connectionMode",
                "connectorProfileName",
                "connectorType"
            ],
            "createOnly": [
                "connectorProfileName",
                "connectorType",
                "kMSArn"
            ]
        },
        "aws-native:appflow:Flow": {
            "cf": "AWS::AppFlow::Flow",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Description of the flow."
                },
                "destinationFlowConfigList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appflow:FlowDestinationFlowConfig"
                    },
                    "description": "List of Destination connectors of the flow."
                },
                "flowName": {
                    "type": "string",
                    "description": "Name of the flow."
                },
                "kMSArn": {
                    "type": "string",
                    "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key."
                },
                "sourceFlowConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowSourceFlowConfig",
                    "description": "Configurations of Source connector of the flow."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appflow:FlowTag"
                    },
                    "description": "List of Tags."
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appflow:FlowTask"
                    },
                    "description": "List of tasks for the flow."
                },
                "triggerConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowTriggerConfig",
                    "description": "Trigger settings of the flow."
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "Description of the flow."
                },
                "destinationFlowConfigList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appflow:FlowDestinationFlowConfig"
                    },
                    "description": "List of Destination connectors of the flow."
                },
                "flowArn": {
                    "type": "string",
                    "description": "ARN identifier of the flow."
                },
                "flowName": {
                    "type": "string",
                    "description": "Name of the flow."
                },
                "kMSArn": {
                    "type": "string",
                    "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key."
                },
                "sourceFlowConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowSourceFlowConfig",
                    "description": "Configurations of Source connector of the flow."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appflow:FlowTag"
                    },
                    "description": "List of Tags."
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appflow:FlowTask"
                    },
                    "description": "List of tasks for the flow."
                },
                "triggerConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowTriggerConfig",
                    "description": "Trigger settings of the flow."
                }
            },
            "required": [
                "destinationFlowConfigList",
                "flowName",
                "sourceFlowConfig",
                "tasks",
                "triggerConfig"
            ],
            "createOnly": [
                "flowName",
                "kMSArn"
            ]
        },
        "aws-native:appintegrations:EventIntegration": {
            "cf": "AWS::AppIntegrations::EventIntegration",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The event integration description."
                },
                "eventBridgeBus": {
                    "type": "string",
                    "description": "The Amazon Eventbridge bus for the event integration."
                },
                "eventFilter": {
                    "$ref": "#/types/aws-native:appintegrations:EventIntegrationEventFilter",
                    "description": "The EventFilter (source) associated with the event integration."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the event integration."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appintegrations:EventIntegrationTag"
                    },
                    "description": "The tags (keys and values) associated with the event integration."
                }
            },
            "outputs": {
                "associations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appintegrations:EventIntegrationEventIntegrationAssociation"
                    },
                    "description": "The associations with the event integration."
                },
                "description": {
                    "type": "string",
                    "description": "The event integration description."
                },
                "eventBridgeBus": {
                    "type": "string",
                    "description": "The Amazon Eventbridge bus for the event integration."
                },
                "eventFilter": {
                    "$ref": "#/types/aws-native:appintegrations:EventIntegrationEventFilter",
                    "description": "The EventFilter (source) associated with the event integration."
                },
                "eventIntegrationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the event integration."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the event integration."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appintegrations:EventIntegrationTag"
                    },
                    "description": "The tags (keys and values) associated with the event integration."
                }
            },
            "required": [
                "eventBridgeBus",
                "eventFilter",
                "name"
            ],
            "createOnly": [
                "eventBridgeBus",
                "eventFilter",
                "name"
            ]
        },
        "aws-native:applicationinsights:Application": {
            "cf": "AWS::ApplicationInsights::Application",
            "inputs": {
                "autoConfigurationEnabled": {
                    "type": "boolean",
                    "description": "If set to true, application will be configured with recommended monitoring configuration."
                },
                "cWEMonitorEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether Application Insights can listen to CloudWatch events for the application resources."
                },
                "componentMonitoringSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationComponentMonitoringSetting"
                    },
                    "description": "The monitoring settings of the components."
                },
                "customComponents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationCustomComponent"
                    },
                    "description": "The custom grouped components."
                },
                "logPatternSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationLogPatternSet"
                    },
                    "description": "The log pattern sets."
                },
                "opsCenterEnabled": {
                    "type": "boolean",
                    "description": "When set to true, creates opsItems for any problems detected on an application."
                },
                "opsItemSNSTopicArn": {
                    "type": "string",
                    "description": "The SNS topic provided to Application Insights that is associated to the created opsItem."
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The name of the resource group."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationTag"
                    },
                    "description": "The tags of Application Insights application."
                }
            },
            "outputs": {
                "applicationARN": {
                    "type": "string",
                    "description": "The ARN of the ApplicationInsights application."
                },
                "autoConfigurationEnabled": {
                    "type": "boolean",
                    "description": "If set to true, application will be configured with recommended monitoring configuration."
                },
                "cWEMonitorEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether Application Insights can listen to CloudWatch events for the application resources."
                },
                "componentMonitoringSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationComponentMonitoringSetting"
                    },
                    "description": "The monitoring settings of the components."
                },
                "customComponents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationCustomComponent"
                    },
                    "description": "The custom grouped components."
                },
                "logPatternSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationLogPatternSet"
                    },
                    "description": "The log pattern sets."
                },
                "opsCenterEnabled": {
                    "type": "boolean",
                    "description": "When set to true, creates opsItems for any problems detected on an application."
                },
                "opsItemSNSTopicArn": {
                    "type": "string",
                    "description": "The SNS topic provided to Application Insights that is associated to the created opsItem."
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The name of the resource group."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationTag"
                    },
                    "description": "The tags of Application Insights application."
                }
            },
            "required": [
                "resourceGroupName"
            ],
            "createOnly": [
                "resourceGroupName"
            ]
        },
        "aws-native:apprunner:Service": {
            "cf": "AWS::AppRunner::Service",
            "inputs": {
                "autoScalingConfigurationArn": {
                    "type": "string",
                    "description": "Autoscaling configuration ARN"
                },
                "encryptionConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceEncryptionConfiguration"
                },
                "healthCheckConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceHealthCheckConfiguration"
                },
                "instanceConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceInstanceConfiguration"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The AppRunner Service Name."
                },
                "sourceConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceSourceConfiguration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apprunner:ServiceTag"
                    }
                }
            },
            "outputs": {
                "autoScalingConfigurationArn": {
                    "type": "string",
                    "description": "Autoscaling configuration ARN"
                },
                "encryptionConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceEncryptionConfiguration"
                },
                "healthCheckConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceHealthCheckConfiguration"
                },
                "instanceConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceInstanceConfiguration"
                },
                "serviceArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the AppRunner Service."
                },
                "serviceId": {
                    "type": "string",
                    "description": "The AppRunner Service Id"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The AppRunner Service Name."
                },
                "serviceUrl": {
                    "type": "string",
                    "description": "The Service Url of the AppRunner Service."
                },
                "sourceConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceSourceConfiguration"
                },
                "status": {
                    "type": "string",
                    "description": "AppRunner Service status."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apprunner:ServiceTag"
                    }
                }
            },
            "required": [
                "sourceConfiguration"
            ],
            "createOnly": [
                "encryptionConfiguration",
                "serviceName",
                "tags"
            ]
        },
        "aws-native:aps:Workspace": {
            "cf": "AWS::APS::Workspace",
            "inputs": {
                "alias": {
                    "type": "string",
                    "description": "AMP Workspace alias."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:aps:WorkspaceTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "alias": {
                    "type": "string",
                    "description": "AMP Workspace alias."
                },
                "arn": {
                    "type": "string",
                    "description": "Workspace arn."
                },
                "prometheusEndpoint": {
                    "type": "string",
                    "description": "AMP Workspace prometheus endpoint"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:aps:WorkspaceTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "workspaceId": {
                    "type": "string",
                    "description": "Required to identify a specific APS Workspace."
                }
            }
        },
        "aws-native:athena:DataCatalog": {
            "cf": "AWS::Athena::DataCatalog",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "A description of the data catalog to be created. "
                },
                "name": {
                    "type": "string",
                    "description": "The name of the data catalog to create. The catalog name must be unique for the AWS account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters. "
                },
                "parameters": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Specifies the Lambda function or functions to use for creating the data catalog. This is a mapping whose values depend on the catalog type. "
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:athena:DataCatalogTag"
                    },
                    "description": "A list of comma separated tags to add to the data catalog that is created. "
                },
                "type": {
                    "$ref": "#/types/aws-native:athena:DataCatalogType",
                    "description": "The type of data catalog to create: LAMBDA for a federated catalog, GLUE for AWS Glue Catalog, or HIVE for an external hive metastore. "
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "A description of the data catalog to be created. "
                },
                "name": {
                    "type": "string",
                    "description": "The name of the data catalog to create. The catalog name must be unique for the AWS account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters. "
                },
                "parameters": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Specifies the Lambda function or functions to use for creating the data catalog. This is a mapping whose values depend on the catalog type. "
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:athena:DataCatalogTag"
                    },
                    "description": "A list of comma separated tags to add to the data catalog that is created. "
                },
                "type": {
                    "$ref": "#/types/aws-native:athena:DataCatalogType",
                    "description": "The type of data catalog to create: LAMBDA for a federated catalog, GLUE for AWS Glue Catalog, or HIVE for an external hive metastore. "
                }
            },
            "required": [
                "name",
                "type"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:athena:NamedQuery": {
            "cf": "AWS::Athena::NamedQuery",
            "inputs": {
                "database": {
                    "type": "string",
                    "description": "The database to which the query belongs."
                },
                "description": {
                    "type": "string",
                    "description": "The query description."
                },
                "name": {
                    "type": "string",
                    "description": "The query name."
                },
                "queryString": {
                    "type": "string",
                    "description": "The contents of the query with all query statements."
                },
                "workGroup": {
                    "type": "string",
                    "description": "The name of the workgroup that contains the named query."
                }
            },
            "outputs": {
                "database": {
                    "type": "string",
                    "description": "The database to which the query belongs."
                },
                "description": {
                    "type": "string",
                    "description": "The query description."
                },
                "name": {
                    "type": "string",
                    "description": "The query name."
                },
                "namedQueryId": {
                    "type": "string",
                    "description": "The unique ID of the query."
                },
                "queryString": {
                    "type": "string",
                    "description": "The contents of the query with all query statements."
                },
                "workGroup": {
                    "type": "string",
                    "description": "The name of the workgroup that contains the named query."
                }
            },
            "required": [
                "database",
                "queryString"
            ],
            "createOnly": [
                "database",
                "description",
                "name",
                "queryString",
                "workGroup"
            ]
        },
        "aws-native:athena:PreparedStatement": {
            "cf": "AWS::Athena::PreparedStatement",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the prepared statement."
                },
                "queryStatement": {
                    "type": "string",
                    "description": "The query string for the prepared statement."
                },
                "statementName": {
                    "type": "string",
                    "description": "The name of the prepared statement."
                },
                "workGroup": {
                    "type": "string",
                    "description": "The name of the workgroup to which the prepared statement belongs."
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the prepared statement."
                },
                "queryStatement": {
                    "type": "string",
                    "description": "The query string for the prepared statement."
                },
                "statementName": {
                    "type": "string",
                    "description": "The name of the prepared statement."
                },
                "workGroup": {
                    "type": "string",
                    "description": "The name of the workgroup to which the prepared statement belongs."
                }
            },
            "required": [
                "queryStatement",
                "statementName",
                "workGroup"
            ],
            "createOnly": [
                "statementName",
                "workGroup"
            ]
        },
        "aws-native:athena:WorkGroup": {
            "cf": "AWS::Athena::WorkGroup",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The workgroup description."
                },
                "name": {
                    "type": "string",
                    "description": "The workGroup name."
                },
                "recursiveDeleteOption": {
                    "type": "boolean",
                    "description": "The option to delete the workgroup and its contents even if the workgroup contains any named queries."
                },
                "state": {
                    "$ref": "#/types/aws-native:athena:WorkGroupState",
                    "description": "The state of the workgroup: ENABLED or DISABLED."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:athena:WorkGroupTag"
                    },
                    "description": "One or more tags, separated by commas, that you want to attach to the workgroup as you create it"
                },
                "workGroupConfiguration": {
                    "$ref": "#/types/aws-native:athena:WorkGroupWorkGroupConfiguration",
                    "description": "The workgroup configuration"
                },
                "workGroupConfigurationUpdates": {
                    "$ref": "#/types/aws-native:athena:WorkGroupWorkGroupConfigurationUpdates",
                    "description": "The workgroup configuration update object"
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The date and time the workgroup was created."
                },
                "description": {
                    "type": "string",
                    "description": "The workgroup description."
                },
                "name": {
                    "type": "string",
                    "description": "The workGroup name."
                },
                "recursiveDeleteOption": {
                    "type": "boolean",
                    "description": "The option to delete the workgroup and its contents even if the workgroup contains any named queries."
                },
                "state": {
                    "$ref": "#/types/aws-native:athena:WorkGroupState",
                    "description": "The state of the workgroup: ENABLED or DISABLED."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:athena:WorkGroupTag"
                    },
                    "description": "One or more tags, separated by commas, that you want to attach to the workgroup as you create it"
                },
                "workGroupConfiguration": {
                    "$ref": "#/types/aws-native:athena:WorkGroupWorkGroupConfiguration",
                    "description": "The workgroup configuration"
                },
                "workGroupConfigurationUpdates": {
                    "$ref": "#/types/aws-native:athena:WorkGroupWorkGroupConfigurationUpdates",
                    "description": "The workgroup configuration update object"
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:auditmanager:Assessment": {
            "cf": "AWS::AuditManager::Assessment",
            "inputs": {
                "assessmentReportsDestination": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentAssessmentReportsDestination"
                },
                "awsAccount": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentAWSAccount"
                },
                "description": {
                    "type": "string"
                },
                "frameworkId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:auditmanager:AssessmentRole"
                    },
                    "description": "The list of roles for the specified assessment."
                },
                "scope": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentScope"
                },
                "status": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentAssessmentStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:auditmanager:AssessmentTag"
                    },
                    "description": "The tags associated with the assessment."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "assessmentId": {
                    "type": "string"
                },
                "assessmentReportsDestination": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentAssessmentReportsDestination"
                },
                "awsAccount": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentAWSAccount"
                },
                "creationTime": {
                    "type": "number"
                },
                "delegations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:auditmanager:AssessmentDelegation"
                    },
                    "description": "The list of delegations."
                },
                "description": {
                    "type": "string"
                },
                "frameworkId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:auditmanager:AssessmentRole"
                    },
                    "description": "The list of roles for the specified assessment."
                },
                "scope": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentScope"
                },
                "status": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentAssessmentStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:auditmanager:AssessmentTag"
                    },
                    "description": "The tags associated with the assessment."
                }
            },
            "createOnly": [
                "awsAccount",
                "frameworkId"
            ]
        },
        "aws-native:autoscaling:WarmPool": {
            "cf": "AWS::AutoScaling::WarmPool",
            "inputs": {
                "autoScalingGroupName": {
                    "type": "string"
                },
                "maxGroupPreparedCapacity": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "poolState": {
                    "type": "string"
                }
            },
            "outputs": {
                "autoScalingGroupName": {
                    "type": "string"
                },
                "maxGroupPreparedCapacity": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "poolState": {
                    "type": "string"
                }
            },
            "required": [
                "autoScalingGroupName"
            ],
            "createOnly": [
                "autoScalingGroupName"
            ]
        },
        "aws-native:backup:BackupPlan": {
            "cf": "AWS::Backup::BackupPlan",
            "inputs": {
                "backupPlan": {
                    "$ref": "#/types/aws-native:backup:BackupPlanBackupPlanResourceType",
                    "language": {
                        "csharp": {
                            "name": "BackupPlanValue"
                        }
                    }
                },
                "backupPlanTags": {
                    "$ref": "pulumi.json#/Any"
                }
            },
            "outputs": {
                "backupPlan": {
                    "$ref": "#/types/aws-native:backup:BackupPlanBackupPlanResourceType",
                    "language": {
                        "csharp": {
                            "name": "BackupPlanValue"
                        }
                    }
                },
                "backupPlanArn": {
                    "type": "string"
                },
                "backupPlanId": {
                    "type": "string"
                },
                "backupPlanTags": {
                    "$ref": "pulumi.json#/Any"
                },
                "versionId": {
                    "type": "string"
                }
            },
            "required": [
                "backupPlan"
            ]
        },
        "aws-native:backup:BackupSelection": {
            "cf": "AWS::Backup::BackupSelection",
            "inputs": {
                "backupSelection": {
                    "$ref": "#/types/aws-native:backup:BackupSelectionBackupSelectionResourceType",
                    "language": {
                        "csharp": {
                            "name": "BackupSelectionValue"
                        }
                    }
                }
            },
            "outputs": {
                "backupPlanId": {
                    "type": "string"
                },
                "backupSelection": {
                    "$ref": "#/types/aws-native:backup:BackupSelectionBackupSelectionResourceType",
                    "language": {
                        "csharp": {
                            "name": "BackupSelectionValue"
                        }
                    }
                },
                "selectionId": {
                    "type": "string"
                }
            },
            "required": [
                "backupSelection"
            ],
            "createOnly": [
                "backupPlanId",
                "backupSelection"
            ]
        },
        "aws-native:backup:BackupVault": {
            "cf": "AWS::Backup::BackupVault",
            "inputs": {
                "accessPolicy": {
                    "$ref": "pulumi.json#/Any"
                },
                "backupVaultTags": {
                    "$ref": "pulumi.json#/Any"
                },
                "encryptionKeyArn": {
                    "type": "string"
                },
                "lockConfiguration": {
                    "$ref": "#/types/aws-native:backup:BackupVaultLockConfigurationType"
                },
                "notifications": {
                    "$ref": "#/types/aws-native:backup:BackupVaultNotificationObjectType"
                }
            },
            "outputs": {
                "accessPolicy": {
                    "$ref": "pulumi.json#/Any"
                },
                "backupVaultArn": {
                    "type": "string"
                },
                "backupVaultName": {
                    "type": "string"
                },
                "backupVaultTags": {
                    "$ref": "pulumi.json#/Any"
                },
                "encryptionKeyArn": {
                    "type": "string"
                },
                "lockConfiguration": {
                    "$ref": "#/types/aws-native:backup:BackupVaultLockConfigurationType"
                },
                "notifications": {
                    "$ref": "#/types/aws-native:backup:BackupVaultNotificationObjectType"
                }
            },
            "createOnly": [
                "backupVaultName",
                "encryptionKeyArn"
            ]
        },
        "aws-native:budgets:BudgetsAction": {
            "cf": "AWS::Budgets::BudgetsAction",
            "inputs": {
                "actionThreshold": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionActionThreshold"
                },
                "actionType": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionActionType"
                },
                "approvalModel": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionApprovalModel"
                },
                "budgetName": {
                    "type": "string"
                },
                "definition": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionDefinition"
                },
                "executionRoleArn": {
                    "type": "string"
                },
                "notificationType": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionNotificationType"
                },
                "subscribers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:budgets:BudgetsActionSubscriber"
                    }
                }
            },
            "outputs": {
                "actionId": {
                    "type": "string"
                },
                "actionThreshold": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionActionThreshold"
                },
                "actionType": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionActionType"
                },
                "approvalModel": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionApprovalModel"
                },
                "budgetName": {
                    "type": "string"
                },
                "definition": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionDefinition"
                },
                "executionRoleArn": {
                    "type": "string"
                },
                "notificationType": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionNotificationType"
                },
                "subscribers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:budgets:BudgetsActionSubscriber"
                    }
                }
            },
            "required": [
                "actionThreshold",
                "actionType",
                "budgetName",
                "definition",
                "executionRoleArn",
                "notificationType"
            ],
            "createOnly": [
                "actionType",
                "budgetName"
            ]
        },
        "aws-native:cassandra:Keyspace": {
            "cf": "AWS::Cassandra::Keyspace",
            "inputs": {
                "keyspaceName": {
                    "type": "string",
                    "description": "Name for Cassandra keyspace"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:KeyspaceTag"
                    }
                }
            },
            "outputs": {
                "keyspaceName": {
                    "type": "string",
                    "description": "Name for Cassandra keyspace"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:KeyspaceTag"
                    }
                }
            },
            "createOnly": [
                "keyspaceName"
            ]
        },
        "aws-native:cassandra:Table": {
            "cf": "AWS::Cassandra::Table",
            "inputs": {
                "billingMode": {
                    "$ref": "#/types/aws-native:cassandra:TableBillingMode"
                },
                "clusteringKeyColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:TableClusteringKeyColumn"
                    },
                    "description": "Clustering key columns of the table"
                },
                "encryptionSpecification": {
                    "$ref": "#/types/aws-native:cassandra:TableEncryptionSpecification"
                },
                "keyspaceName": {
                    "type": "string",
                    "description": "Name for Cassandra keyspace"
                },
                "partitionKeyColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:TableColumn"
                    },
                    "description": "Partition key columns of the table"
                },
                "pointInTimeRecoveryEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether point in time recovery is enabled (true) or disabled (false) on the table"
                },
                "regularColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:TableColumn"
                    },
                    "description": "Non-key columns of the table"
                },
                "tableName": {
                    "type": "string",
                    "description": "Name for Cassandra table"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:TableTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource"
                }
            },
            "outputs": {
                "billingMode": {
                    "$ref": "#/types/aws-native:cassandra:TableBillingMode"
                },
                "clusteringKeyColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:TableClusteringKeyColumn"
                    },
                    "description": "Clustering key columns of the table"
                },
                "encryptionSpecification": {
                    "$ref": "#/types/aws-native:cassandra:TableEncryptionSpecification"
                },
                "keyspaceName": {
                    "type": "string",
                    "description": "Name for Cassandra keyspace"
                },
                "partitionKeyColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:TableColumn"
                    },
                    "description": "Partition key columns of the table"
                },
                "pointInTimeRecoveryEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether point in time recovery is enabled (true) or disabled (false) on the table"
                },
                "regularColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:TableColumn"
                    },
                    "description": "Non-key columns of the table"
                },
                "tableName": {
                    "type": "string",
                    "description": "Name for Cassandra table"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cassandra:TableTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource"
                }
            },
            "required": [
                "keyspaceName",
                "partitionKeyColumns"
            ],
            "createOnly": [
                "clusteringKeyColumns",
                "keyspaceName",
                "partitionKeyColumns",
                "tableName"
            ]
        },
        "aws-native:ce:CostCategory": {
            "cf": "AWS::CE::CostCategory",
            "inputs": {
                "defaultValue": {
                    "type": "string",
                    "description": "The default value for the cost category"
                },
                "name": {
                    "type": "string"
                },
                "ruleVersion": {
                    "$ref": "#/types/aws-native:ce:CostCategoryRuleVersion"
                },
                "rules": {
                    "type": "string",
                    "description": "JSON array format of Expression in Billing and Cost Management API"
                },
                "splitChargeRules": {
                    "type": "string",
                    "description": "Json array format of CostCategorySplitChargeRule in Billing and Cost Management API"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Cost category ARN"
                },
                "defaultValue": {
                    "type": "string",
                    "description": "The default value for the cost category"
                },
                "effectiveStart": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ruleVersion": {
                    "$ref": "#/types/aws-native:ce:CostCategoryRuleVersion"
                },
                "rules": {
                    "type": "string",
                    "description": "JSON array format of Expression in Billing and Cost Management API"
                },
                "splitChargeRules": {
                    "type": "string",
                    "description": "Json array format of CostCategorySplitChargeRule in Billing and Cost Management API"
                }
            },
            "required": [
                "name",
                "ruleVersion",
                "rules"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:certificatemanager:Account": {
            "cf": "AWS::CertificateManager::Account",
            "inputs": {
                "expiryEventsConfiguration": {
                    "$ref": "#/types/aws-native:certificatemanager:AccountExpiryEventsConfiguration"
                }
            },
            "outputs": {
                "accountId": {
                    "type": "string"
                },
                "expiryEventsConfiguration": {
                    "$ref": "#/types/aws-native:certificatemanager:AccountExpiryEventsConfiguration"
                }
            },
            "required": [
                "expiryEventsConfiguration"
            ]
        },
        "aws-native:chatbot:SlackChannelConfiguration": {
            "cf": "AWS::Chatbot::SlackChannelConfiguration",
            "inputs": {
                "configurationName": {
                    "type": "string",
                    "description": "The name of the configuration"
                },
                "iamRoleArn": {
                    "type": "string",
                    "description": "The ARN of the IAM role that defines the permissions for AWS Chatbot"
                },
                "loggingLevel": {
                    "type": "string",
                    "description": "Specifies the logging level for this configuration:ERROR,INFO or NONE. This property affects the log entries pushed to Amazon CloudWatch logs"
                },
                "slackChannelId": {
                    "type": "string",
                    "description": "The id of the Slack channel"
                },
                "slackWorkspaceId": {
                    "type": "string",
                    "description": "The id of the Slack workspace"
                },
                "snsTopicArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "ARNs of SNS topics which delivers notifications to AWS Chatbot, for example CloudWatch alarm notifications."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN) of the configuration"
                },
                "configurationName": {
                    "type": "string",
                    "description": "The name of the configuration"
                },
                "iamRoleArn": {
                    "type": "string",
                    "description": "The ARN of the IAM role that defines the permissions for AWS Chatbot"
                },
                "loggingLevel": {
                    "type": "string",
                    "description": "Specifies the logging level for this configuration:ERROR,INFO or NONE. This property affects the log entries pushed to Amazon CloudWatch logs"
                },
                "slackChannelId": {
                    "type": "string",
                    "description": "The id of the Slack channel"
                },
                "slackWorkspaceId": {
                    "type": "string",
                    "description": "The id of the Slack workspace"
                },
                "snsTopicArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "ARNs of SNS topics which delivers notifications to AWS Chatbot, for example CloudWatch alarm notifications."
                }
            },
            "required": [
                "configurationName",
                "iamRoleArn",
                "slackChannelId",
                "slackWorkspaceId"
            ],
            "createOnly": [
                "configurationName",
                "slackWorkspaceId"
            ]
        },
        "aws-native:cloudformation:ModuleDefaultVersion": {
            "cf": "AWS::CloudFormation::ModuleDefaultVersion",
            "inputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the module version to set as the default version."
                },
                "moduleName": {
                    "type": "string",
                    "description": "The name of a module existing in the registry."
                },
                "versionId": {
                    "type": "string",
                    "description": "The ID of an existing version of the named module to set as the default."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the module version to set as the default version."
                },
                "moduleName": {
                    "type": "string",
                    "description": "The name of a module existing in the registry."
                },
                "versionId": {
                    "type": "string",
                    "description": "The ID of an existing version of the named module to set as the default."
                }
            },
            "createOnly": [
                "arn",
                "moduleName",
                "versionId"
            ]
        },
        "aws-native:cloudformation:ModuleVersion": {
            "cf": "AWS::CloudFormation::ModuleVersion",
            "inputs": {
                "moduleName": {
                    "type": "string",
                    "description": "The name of the module being registered.\n\nRecommended module naming pattern: company_or_organization::service::type::MODULE."
                },
                "modulePackage": {
                    "type": "string",
                    "description": "The url to the S3 bucket containing the schema and template fragment for the module you want to register."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the module."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the registered module."
                },
                "documentationUrl": {
                    "type": "string",
                    "description": "The URL of a page providing detailed documentation for this module."
                },
                "isDefaultVersion": {
                    "type": "boolean",
                    "description": "Indicator of whether this module version is the current default version"
                },
                "moduleName": {
                    "type": "string",
                    "description": "The name of the module being registered.\n\nRecommended module naming pattern: company_or_organization::service::type::MODULE."
                },
                "modulePackage": {
                    "type": "string",
                    "description": "The url to the S3 bucket containing the schema and template fragment for the module you want to register."
                },
                "schema": {
                    "type": "string",
                    "description": "The schema defining input parameters to and resources generated by the module."
                },
                "timeCreated": {
                    "type": "string",
                    "description": "The time that the specified module version was registered."
                },
                "versionId": {
                    "type": "string",
                    "description": "The version ID of the module represented by this module instance."
                },
                "visibility": {
                    "$ref": "#/types/aws-native:cloudformation:ModuleVersionVisibility",
                    "description": "The scope at which the type is visible and usable in CloudFormation operations.\n\nThe only allowed value at present is:\n\nPRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE."
                }
            },
            "required": [
                "moduleName",
                "modulePackage"
            ],
            "createOnly": [
                "moduleName",
                "modulePackage"
            ]
        },
        "aws-native:cloudformation:PublicTypeVersion": {
            "cf": "AWS::CloudFormation::PublicTypeVersion",
            "inputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) of the extension."
                },
                "logDeliveryBucket": {
                    "type": "string",
                    "description": "A url to the S3 bucket where logs for the testType run will be available"
                },
                "publicVersionNumber": {
                    "type": "string",
                    "description": "The version number of a public third-party extension"
                },
                "type": {
                    "$ref": "#/types/aws-native:cloudformation:PublicTypeVersionType",
                    "description": "The kind of extension"
                },
                "typeName": {
                    "type": "string",
                    "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) of the extension."
                },
                "logDeliveryBucket": {
                    "type": "string",
                    "description": "A url to the S3 bucket where logs for the testType run will be available"
                },
                "publicTypeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) assigned to the public extension upon publication"
                },
                "publicVersionNumber": {
                    "type": "string",
                    "description": "The version number of a public third-party extension"
                },
                "publisherId": {
                    "type": "string",
                    "description": "The publisher id assigned by CloudFormation for publishing in this region."
                },
                "type": {
                    "$ref": "#/types/aws-native:cloudformation:PublicTypeVersionType",
                    "description": "The kind of extension"
                },
                "typeName": {
                    "type": "string",
                    "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
                },
                "typeVersionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) of the extension with the versionId."
                }
            },
            "createOnly": [
                "arn",
                "logDeliveryBucket",
                "publicVersionNumber",
                "type",
                "typeName"
            ]
        },
        "aws-native:cloudformation:Publisher": {
            "cf": "AWS::CloudFormation::Publisher",
            "inputs": {
                "acceptTermsAndConditions": {
                    "type": "boolean",
                    "description": "Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions can be found at https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf"
                },
                "connectionArn": {
                    "type": "string",
                    "description": "If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account."
                }
            },
            "outputs": {
                "acceptTermsAndConditions": {
                    "type": "boolean",
                    "description": "Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions can be found at https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf"
                },
                "connectionArn": {
                    "type": "string",
                    "description": "If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account."
                },
                "identityProvider": {
                    "$ref": "#/types/aws-native:cloudformation:PublisherIdentityProvider",
                    "description": "The type of account used as the identity provider when registering this publisher with CloudFormation."
                },
                "publisherId": {
                    "type": "string",
                    "description": "The publisher id assigned by CloudFormation for publishing in this region."
                },
                "publisherProfile": {
                    "type": "string",
                    "description": "The URL to the publisher's profile with the identity provider."
                },
                "publisherStatus": {
                    "$ref": "#/types/aws-native:cloudformation:PublisherPublisherStatus",
                    "description": "Whether the publisher is verified."
                }
            },
            "required": [
                "acceptTermsAndConditions"
            ],
            "createOnly": [
                "acceptTermsAndConditions",
                "connectionArn"
            ]
        },
        "aws-native:cloudformation:ResourceDefaultVersion": {
            "cf": "AWS::CloudFormation::ResourceDefaultVersion",
            "inputs": {
                "typeName": {
                    "type": "string",
                    "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
                },
                "typeVersionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the type version."
                },
                "versionId": {
                    "type": "string",
                    "description": "The ID of an existing version of the resource to set as the default."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a ResourceDefaultVersion"
                },
                "typeName": {
                    "type": "string",
                    "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
                },
                "typeVersionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the type version."
                },
                "versionId": {
                    "type": "string",
                    "description": "The ID of an existing version of the resource to set as the default."
                }
            }
        },
        "aws-native:cloudformation:ResourceVersion": {
            "cf": "AWS::CloudFormation::ResourceVersion",
            "inputs": {
                "executionRoleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials."
                },
                "loggingConfig": {
                    "$ref": "#/types/aws-native:cloudformation:ResourceVersionLoggingConfig",
                    "description": "Specifies logging configuration information for a type."
                },
                "schemaHandlerPackage": {
                    "type": "string",
                    "description": "A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.\n\nFor information on generating a schema handler package for the type you want to register, see submit in the CloudFormation CLI User Guide."
                },
                "typeName": {
                    "type": "string",
                    "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource"
                },
                "executionRoleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials."
                },
                "isDefaultVersion": {
                    "type": "boolean",
                    "description": "Indicates if this type version is the current default version"
                },
                "loggingConfig": {
                    "$ref": "#/types/aws-native:cloudformation:ResourceVersionLoggingConfig",
                    "description": "Specifies logging configuration information for a type."
                },
                "provisioningType": {
                    "$ref": "#/types/aws-native:cloudformation:ResourceVersionProvisioningType",
                    "description": "The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted."
                },
                "schemaHandlerPackage": {
                    "type": "string",
                    "description": "A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.\n\nFor information on generating a schema handler package for the type you want to register, see submit in the CloudFormation CLI User Guide."
                },
                "typeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the type without the versionID."
                },
                "typeName": {
                    "type": "string",
                    "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
                },
                "versionId": {
                    "type": "string",
                    "description": "The ID of the version of the type represented by this resource instance."
                },
                "visibility": {
                    "$ref": "#/types/aws-native:cloudformation:ResourceVersionVisibility",
                    "description": "The scope at which the type is visible and usable in CloudFormation operations.\n\nValid values include:\n\nPRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.\n\nPUBLIC: The type is publically visible and usable within any Amazon account."
                }
            },
            "required": [
                "schemaHandlerPackage",
                "typeName"
            ],
            "createOnly": [
                "executionRoleArn",
                "loggingConfig",
                "schemaHandlerPackage",
                "typeName"
            ]
        },
        "aws-native:cloudformation:StackSet": {
            "cf": "AWS::CloudFormation::StackSet",
            "inputs": {
                "administrationRoleARN": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account."
                },
                "autoDeployment": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetAutoDeployment",
                    "description": "Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED."
                },
                "callAs": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetCallAs",
                    "description": "Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN."
                },
                "capabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudformation:StackSetCapability"
                    },
                    "description": "In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the stack set. You can use the description to identify the stack set's purpose or other important information."
                },
                "executionRoleName": {
                    "type": "string",
                    "description": "The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation."
                },
                "operationPreferences": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetOperationPreferences"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudformation:StackSetParameter"
                    },
                    "description": "The input parameters for the stack set template."
                },
                "permissionModel": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetPermissionModel",
                    "description": "Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified."
                },
                "stackInstancesGroup": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudformation:StackSetStackInstances"
                    },
                    "description": "A group of stack instances with parameters in some specific accounts and regions."
                },
                "stackSetName": {
                    "type": "string",
                    "description": "The name to associate with the stack set. The name must be unique in the Region where you create your stack set."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudformation:StackSetTag"
                    },
                    "description": "The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified."
                },
                "templateBody": {
                    "type": "string",
                    "description": "The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes."
                },
                "templateURL": {
                    "type": "string",
                    "description": "Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket."
                }
            },
            "outputs": {
                "administrationRoleARN": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account."
                },
                "autoDeployment": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetAutoDeployment",
                    "description": "Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED."
                },
                "callAs": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetCallAs",
                    "description": "Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN."
                },
                "capabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudformation:StackSetCapability"
                    },
                    "description": "In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the stack set. You can use the description to identify the stack set's purpose or other important information."
                },
                "executionRoleName": {
                    "type": "string",
                    "description": "The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation."
                },
                "operationPreferences": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetOperationPreferences"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudformation:StackSetParameter"
                    },
                    "description": "The input parameters for the stack set template."
                },
                "permissionModel": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetPermissionModel",
                    "description": "Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified."
                },
                "stackInstancesGroup": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudformation:StackSetStackInstances"
                    },
                    "description": "A group of stack instances with parameters in some specific accounts and regions."
                },
                "stackSetId": {
                    "type": "string",
                    "description": "The ID of the stack set that you're creating."
                },
                "stackSetName": {
                    "type": "string",
                    "description": "The name to associate with the stack set. The name must be unique in the Region where you create your stack set."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudformation:StackSetTag"
                    },
                    "description": "The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified."
                },
                "templateBody": {
                    "type": "string",
                    "description": "The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes."
                },
                "templateURL": {
                    "type": "string",
                    "description": "Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket."
                }
            },
            "required": [
                "permissionModel",
                "stackSetName"
            ],
            "createOnly": [
                "permissionModel",
                "stackSetName"
            ]
        },
        "aws-native:cloudformation:TypeActivation": {
            "cf": "AWS::CloudFormation::TypeActivation",
            "inputs": {
                "autoUpdate": {
                    "type": "boolean",
                    "description": "Whether to automatically update the extension in this account and region when a new minor version is published by the extension publisher. Major versions released by the publisher must be manually updated."
                },
                "executionRoleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials."
                },
                "loggingConfig": {
                    "$ref": "#/types/aws-native:cloudformation:TypeActivationLoggingConfig",
                    "description": "Specifies logging configuration information for a type."
                },
                "majorVersion": {
                    "type": "string",
                    "description": "The Major Version of the type you want to enable"
                },
                "publicTypeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) assigned to the public extension upon publication"
                },
                "publisherId": {
                    "type": "string",
                    "description": "The publisher id assigned by CloudFormation for publishing in this region."
                },
                "type": {
                    "$ref": "#/types/aws-native:cloudformation:TypeActivationType",
                    "description": "The kind of extension"
                },
                "typeName": {
                    "type": "string",
                    "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
                },
                "typeNameAlias": {
                    "type": "string",
                    "description": "An alias to assign to the public extension in this account and region. If you specify an alias for the extension, you must then use the alias to refer to the extension in your templates."
                },
                "versionBump": {
                    "$ref": "#/types/aws-native:cloudformation:TypeActivationVersionBump",
                    "description": "Manually updates a previously-enabled type to a new major or minor version, if available. You can also use this parameter to update the value of AutoUpdateEnabled"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the extension."
                },
                "autoUpdate": {
                    "type": "boolean",
                    "description": "Whether to automatically update the extension in this account and region when a new minor version is published by the extension publisher. Major versions released by the publisher must be manually updated."
                },
                "executionRoleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials."
                },
                "loggingConfig": {
                    "$ref": "#/types/aws-native:cloudformation:TypeActivationLoggingConfig",
                    "description": "Specifies logging configuration information for a type."
                },
                "majorVersion": {
                    "type": "string",
                    "description": "The Major Version of the type you want to enable"
                },
                "publicTypeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) assigned to the public extension upon publication"
                },
                "publisherId": {
                    "type": "string",
                    "description": "The publisher id assigned by CloudFormation for publishing in this region."
                },
                "type": {
                    "$ref": "#/types/aws-native:cloudformation:TypeActivationType",
                    "description": "The kind of extension"
                },
                "typeName": {
                    "type": "string",
                    "description": "The name of the type being registered.\n\nWe recommend that type names adhere to the following pattern: company_or_organization::service::type."
                },
                "typeNameAlias": {
                    "type": "string",
                    "description": "An alias to assign to the public extension in this account and region. If you specify an alias for the extension, you must then use the alias to refer to the extension in your templates."
                },
                "versionBump": {
                    "$ref": "#/types/aws-native:cloudformation:TypeActivationVersionBump",
                    "description": "Manually updates a previously-enabled type to a new major or minor version, if available. You can also use this parameter to update the value of AutoUpdateEnabled"
                }
            },
            "createOnly": [
                "executionRoleArn",
                "loggingConfig",
                "publicTypeArn",
                "publisherId",
                "type",
                "typeName",
                "typeNameAlias"
            ]
        },
        "aws-native:cloudfront:CachePolicy": {
            "cf": "AWS::CloudFront::CachePolicy",
            "inputs": {
                "cachePolicyConfig": {
                    "$ref": "#/types/aws-native:cloudfront:CachePolicyCachePolicyConfig"
                }
            },
            "outputs": {
                "cachePolicyConfig": {
                    "$ref": "#/types/aws-native:cloudfront:CachePolicyCachePolicyConfig"
                },
                "lastModifiedTime": {
                    "type": "string"
                }
            },
            "required": [
                "cachePolicyConfig"
            ]
        },
        "aws-native:cloudfront:CloudFrontOriginAccessIdentity": {
            "cf": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
            "inputs": {
                "cloudFrontOriginAccessIdentityConfig": {
                    "$ref": "#/types/aws-native:cloudfront:CloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig"
                }
            },
            "outputs": {
                "cloudFrontOriginAccessIdentityConfig": {
                    "$ref": "#/types/aws-native:cloudfront:CloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig"
                },
                "s3CanonicalUserId": {
                    "type": "string"
                }
            },
            "required": [
                "cloudFrontOriginAccessIdentityConfig"
            ]
        },
        "aws-native:cloudfront:Distribution": {
            "cf": "AWS::CloudFront::Distribution",
            "inputs": {
                "distributionConfig": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionDistributionConfig"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionTag"
                    }
                }
            },
            "outputs": {
                "distributionConfig": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionDistributionConfig"
                },
                "domainName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionTag"
                    }
                }
            },
            "required": [
                "distributionConfig"
            ]
        },
        "aws-native:cloudfront:Function": {
            "cf": "AWS::CloudFront::Function",
            "inputs": {
                "autoPublish": {
                    "type": "boolean"
                },
                "functionCode": {
                    "type": "string"
                },
                "functionConfig": {
                    "$ref": "#/types/aws-native:cloudfront:FunctionFunctionConfig"
                },
                "functionMetadata": {
                    "$ref": "#/types/aws-native:cloudfront:FunctionFunctionMetadata"
                },
                "name": {
                    "type": "string"
                }
            },
            "outputs": {
                "autoPublish": {
                    "type": "boolean"
                },
                "functionARN": {
                    "type": "string"
                },
                "functionCode": {
                    "type": "string"
                },
                "functionConfig": {
                    "$ref": "#/types/aws-native:cloudfront:FunctionFunctionConfig"
                },
                "functionMetadata": {
                    "$ref": "#/types/aws-native:cloudfront:FunctionFunctionMetadata"
                },
                "name": {
                    "type": "string"
                },
                "stage": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "aws-native:cloudfront:KeyGroup": {
            "cf": "AWS::CloudFront::KeyGroup",
            "inputs": {
                "keyGroupConfig": {
                    "$ref": "#/types/aws-native:cloudfront:KeyGroupKeyGroupConfig"
                }
            },
            "outputs": {
                "keyGroupConfig": {
                    "$ref": "#/types/aws-native:cloudfront:KeyGroupKeyGroupConfig"
                },
                "lastModifiedTime": {
                    "type": "string"
                }
            },
            "required": [
                "keyGroupConfig"
            ]
        },
        "aws-native:cloudfront:OriginRequestPolicy": {
            "cf": "AWS::CloudFront::OriginRequestPolicy",
            "inputs": {
                "originRequestPolicyConfig": {
                    "$ref": "#/types/aws-native:cloudfront:OriginRequestPolicyOriginRequestPolicyConfig"
                }
            },
            "outputs": {
                "lastModifiedTime": {
                    "type": "string"
                },
                "originRequestPolicyConfig": {
                    "$ref": "#/types/aws-native:cloudfront:OriginRequestPolicyOriginRequestPolicyConfig"
                }
            },
            "required": [
                "originRequestPolicyConfig"
            ]
        },
        "aws-native:cloudfront:PublicKey": {
            "cf": "AWS::CloudFront::PublicKey",
            "inputs": {
                "publicKeyConfig": {
                    "$ref": "#/types/aws-native:cloudfront:PublicKeyPublicKeyConfig"
                }
            },
            "outputs": {
                "createdTime": {
                    "type": "string"
                },
                "publicKeyConfig": {
                    "$ref": "#/types/aws-native:cloudfront:PublicKeyPublicKeyConfig"
                }
            },
            "required": [
                "publicKeyConfig"
            ]
        },
        "aws-native:cloudfront:RealtimeLogConfig": {
            "cf": "AWS::CloudFront::RealtimeLogConfig",
            "inputs": {
                "endPoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:RealtimeLogConfigEndPoint"
                    }
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "samplingRate": {
                    "type": "number"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "endPoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:RealtimeLogConfigEndPoint"
                    }
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "samplingRate": {
                    "type": "number"
                }
            },
            "required": [
                "endPoints",
                "fields",
                "name",
                "samplingRate"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:cloudtrail:Trail": {
            "cf": "AWS::CloudTrail::Trail",
            "inputs": {
                "cloudWatchLogsLogGroupArn": {
                    "type": "string",
                    "description": "Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn."
                },
                "cloudWatchLogsRoleArn": {
                    "type": "string",
                    "description": "Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group."
                },
                "enableLogFileValidation": {
                    "type": "boolean",
                    "description": "Specifies whether log file validation is enabled. The default is false."
                },
                "eventSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudtrail:TrailEventSelector"
                    },
                    "description": "Use event selectors to further specify the management and data event settings for your trail. By default, trails created without specific event selectors will be configured to log all read and write management events, and no data events. When an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the trail doesn't log the event. You can configure up to five event selectors for a trail."
                },
                "includeGlobalServiceEvents": {
                    "type": "boolean",
                    "description": "Specifies whether the trail is publishing events from global services such as IAM to the log files."
                },
                "insightSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudtrail:TrailInsightSelector"
                    },
                    "description": "Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail."
                },
                "isLogging": {
                    "type": "boolean",
                    "description": "Whether the CloudTrail is currently logging AWS API calls."
                },
                "isMultiRegionTrail": {
                    "type": "boolean",
                    "description": "Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails that log events in all regions."
                },
                "isOrganizationTrail": {
                    "type": "boolean",
                    "description": "Specifies whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the master account for an organization in AWS Organizations."
                },
                "kMSKeyId": {
                    "type": "string",
                    "description": "Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier."
                },
                "s3BucketName": {
                    "type": "string",
                    "description": "Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements."
                },
                "s3KeyPrefix": {
                    "type": "string",
                    "description": "Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery. For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters."
                },
                "snsTopicName": {
                    "type": "string",
                    "description": "Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudtrail:TrailTag"
                    }
                },
                "trailName": {
                    "type": "string"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "cloudWatchLogsLogGroupArn": {
                    "type": "string",
                    "description": "Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn."
                },
                "cloudWatchLogsRoleArn": {
                    "type": "string",
                    "description": "Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group."
                },
                "enableLogFileValidation": {
                    "type": "boolean",
                    "description": "Specifies whether log file validation is enabled. The default is false."
                },
                "eventSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudtrail:TrailEventSelector"
                    },
                    "description": "Use event selectors to further specify the management and data event settings for your trail. By default, trails created without specific event selectors will be configured to log all read and write management events, and no data events. When an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the trail doesn't log the event. You can configure up to five event selectors for a trail."
                },
                "includeGlobalServiceEvents": {
                    "type": "boolean",
                    "description": "Specifies whether the trail is publishing events from global services such as IAM to the log files."
                },
                "insightSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudtrail:TrailInsightSelector"
                    },
                    "description": "Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail."
                },
                "isLogging": {
                    "type": "boolean",
                    "description": "Whether the CloudTrail is currently logging AWS API calls."
                },
                "isMultiRegionTrail": {
                    "type": "boolean",
                    "description": "Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails that log events in all regions."
                },
                "isOrganizationTrail": {
                    "type": "boolean",
                    "description": "Specifies whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the master account for an organization in AWS Organizations."
                },
                "kMSKeyId": {
                    "type": "string",
                    "description": "Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier."
                },
                "s3BucketName": {
                    "type": "string",
                    "description": "Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements."
                },
                "s3KeyPrefix": {
                    "type": "string",
                    "description": "Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery. For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters."
                },
                "snsTopicArn": {
                    "type": "string"
                },
                "snsTopicName": {
                    "type": "string",
                    "description": "Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudtrail:TrailTag"
                    }
                },
                "trailName": {
                    "type": "string"
                }
            },
            "required": [
                "isLogging",
                "s3BucketName"
            ],
            "createOnly": [
                "trailName"
            ]
        },
        "aws-native:cloudwatch:CompositeAlarm": {
            "cf": "AWS::CloudWatch::CompositeAlarm",
            "inputs": {
                "actionsEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE."
                },
                "alarmActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN)."
                },
                "alarmDescription": {
                    "type": "string",
                    "description": "The description of the alarm"
                },
                "alarmName": {
                    "type": "string",
                    "description": "The name of the Composite Alarm"
                },
                "alarmRule": {
                    "type": "string",
                    "description": "Expression which aggregates the state of other Alarms (Metric or Composite Alarms)"
                },
                "insufficientDataActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN)."
                },
                "oKActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN)."
                }
            },
            "outputs": {
                "actionsEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE."
                },
                "alarmActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN)."
                },
                "alarmDescription": {
                    "type": "string",
                    "description": "The description of the alarm"
                },
                "alarmName": {
                    "type": "string",
                    "description": "The name of the Composite Alarm"
                },
                "alarmRule": {
                    "type": "string",
                    "description": "Expression which aggregates the state of other Alarms (Metric or Composite Alarms)"
                },
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN) of the alarm"
                },
                "insufficientDataActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN)."
                },
                "oKActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN)."
                }
            },
            "required": [
                "alarmName",
                "alarmRule"
            ],
            "createOnly": [
                "alarmName"
            ]
        },
        "aws-native:cloudwatch:MetricStream": {
            "cf": "AWS::CloudWatch::MetricStream",
            "inputs": {
                "excludeFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudwatch:MetricStreamMetricStreamFilter"
                    },
                    "description": "Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null."
                },
                "firehoseArn": {
                    "type": "string",
                    "description": "The ARN of the Kinesis Firehose where to stream the data."
                },
                "includeFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudwatch:MetricStreamMetricStreamFilter"
                    },
                    "description": "Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the metric stream."
                },
                "outputFormat": {
                    "type": "string",
                    "description": "The output format of the data streamed to the Kinesis Firehose."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that provides access to the Kinesis Firehose."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudwatch:MetricStreamTag"
                    },
                    "description": "A set of tags to assign to the delivery stream."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name of the metric stream."
                },
                "creationDate": {
                    "type": "string",
                    "description": "The date of creation of the metric stream."
                },
                "excludeFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudwatch:MetricStreamMetricStreamFilter"
                    },
                    "description": "Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null."
                },
                "firehoseArn": {
                    "type": "string",
                    "description": "The ARN of the Kinesis Firehose where to stream the data."
                },
                "includeFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudwatch:MetricStreamMetricStreamFilter"
                    },
                    "description": "Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null."
                },
                "lastUpdateDate": {
                    "type": "string",
                    "description": "The date of the last update of the metric stream."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the metric stream."
                },
                "outputFormat": {
                    "type": "string",
                    "description": "The output format of the data streamed to the Kinesis Firehose."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that provides access to the Kinesis Firehose."
                },
                "state": {
                    "type": "string",
                    "description": "Displays the state of the Metric Stream."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudwatch:MetricStreamTag"
                    },
                    "description": "A set of tags to assign to the delivery stream."
                }
            },
            "required": [
                "firehoseArn",
                "outputFormat",
                "roleArn"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:codeartifact:Domain": {
            "cf": "AWS::CodeArtifact::Domain",
            "inputs": {
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain."
                },
                "permissionsPolicyDocument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The access control resource policy on the provided domain."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codeartifact:DomainTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the domain."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain."
                },
                "encryptionKey": {
                    "type": "string",
                    "description": "The ARN of an AWS Key Management Service (AWS KMS) key associated with a domain."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain. This field is used for GetAtt"
                },
                "owner": {
                    "type": "string",
                    "description": "The 12-digit account ID of the AWS account that owns the domain. This field is used for GetAtt"
                },
                "permissionsPolicyDocument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The access control resource policy on the provided domain."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codeartifact:DomainTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "domainName"
            ],
            "createOnly": [
                "domainName",
                "encryptionKey"
            ]
        },
        "aws-native:codeartifact:Repository": {
            "cf": "AWS::CodeArtifact::Repository",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "A text description of the repository."
                },
                "externalConnections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of external connections associated with the repository."
                },
                "permissionsPolicyDocument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The access control resource policy on the provided repository."
                },
                "repositoryName": {
                    "type": "string",
                    "description": "The name of the repository."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codeartifact:RepositoryTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of upstream repositories associated with the repository."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the repository."
                },
                "description": {
                    "type": "string",
                    "description": "A text description of the repository."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain that contains the repository."
                },
                "domainOwner": {
                    "type": "string",
                    "description": "The 12-digit account ID of the AWS account that owns the domain."
                },
                "externalConnections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of external connections associated with the repository."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the repository. This is used for GetAtt"
                },
                "permissionsPolicyDocument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The access control resource policy on the provided repository."
                },
                "repositoryName": {
                    "type": "string",
                    "description": "The name of the repository."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codeartifact:RepositoryTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of upstream repositories associated with the repository."
                }
            },
            "required": [
                "repositoryName"
            ],
            "createOnly": [
                "domainName",
                "domainOwner",
                "repositoryName"
            ]
        },
        "aws-native:codeguruprofiler:ProfilingGroup": {
            "cf": "AWS::CodeGuruProfiler::ProfilingGroup",
            "inputs": {
                "agentPermissions": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The agent permissions attached to this profiling group."
                },
                "anomalyDetectionNotificationConfiguration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codeguruprofiler:ProfilingGroupChannel"
                    },
                    "description": "Configuration for Notification Channels for Anomaly Detection feature in CodeGuru Profiler which enables customers to detect anomalies in the application profile for those methods that represent the highest proportion of CPU time or latency"
                },
                "computePlatform": {
                    "$ref": "#/types/aws-native:codeguruprofiler:ProfilingGroupComputePlatform",
                    "description": "The compute platform of the profiling group."
                },
                "profilingGroupName": {
                    "type": "string",
                    "description": "The name of the profiling group."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codeguruprofiler:ProfilingGroupTag"
                    },
                    "description": "The tags associated with a profiling group."
                }
            },
            "outputs": {
                "agentPermissions": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The agent permissions attached to this profiling group."
                },
                "anomalyDetectionNotificationConfiguration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codeguruprofiler:ProfilingGroupChannel"
                    },
                    "description": "Configuration for Notification Channels for Anomaly Detection feature in CodeGuru Profiler which enables customers to detect anomalies in the application profile for those methods that represent the highest proportion of CPU time or latency"
                },
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the specified profiling group."
                },
                "computePlatform": {
                    "$ref": "#/types/aws-native:codeguruprofiler:ProfilingGroupComputePlatform",
                    "description": "The compute platform of the profiling group."
                },
                "profilingGroupName": {
                    "type": "string",
                    "description": "The name of the profiling group."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codeguruprofiler:ProfilingGroupTag"
                    },
                    "description": "The tags associated with a profiling group."
                }
            },
            "required": [
                "profilingGroupName"
            ],
            "createOnly": [
                "computePlatform",
                "profilingGroupName"
            ]
        },
        "aws-native:codegurureviewer:RepositoryAssociation": {
            "cf": "AWS::CodeGuruReviewer::RepositoryAssociation",
            "inputs": {
                "bucketName": {
                    "type": "string",
                    "description": "The name of the S3 bucket associated with an associated S3 repository. It must start with `codeguru-reviewer-`."
                },
                "connectionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the repository to be associated."
                },
                "owner": {
                    "type": "string",
                    "description": "The owner of the repository. For a Bitbucket repository, this is the username for the account that owns the repository."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codegurureviewer:RepositoryAssociationTag"
                    },
                    "description": "The tags associated with a repository association."
                },
                "type": {
                    "$ref": "#/types/aws-native:codegurureviewer:RepositoryAssociationType",
                    "description": "The type of repository to be associated."
                }
            },
            "outputs": {
                "associationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the repository association."
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the S3 bucket associated with an associated S3 repository. It must start with `codeguru-reviewer-`."
                },
                "connectionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the repository to be associated."
                },
                "owner": {
                    "type": "string",
                    "description": "The owner of the repository. For a Bitbucket repository, this is the username for the account that owns the repository."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codegurureviewer:RepositoryAssociationTag"
                    },
                    "description": "The tags associated with a repository association."
                },
                "type": {
                    "$ref": "#/types/aws-native:codegurureviewer:RepositoryAssociationType",
                    "description": "The type of repository to be associated."
                }
            },
            "required": [
                "name",
                "type"
            ],
            "createOnly": [
                "bucketName",
                "connectionArn",
                "name",
                "owner",
                "tags",
                "type"
            ]
        },
        "aws-native:codestarconnections:Connection": {
            "cf": "AWS::CodeStarConnections::Connection",
            "inputs": {
                "connectionName": {
                    "type": "string",
                    "description": "The name of the connection. Connection names must be unique in an AWS user account."
                },
                "hostArn": {
                    "type": "string",
                    "description": "The host arn configured to represent the infrastructure where your third-party provider is installed. You must specify either a ProviderType or a HostArn."
                },
                "providerType": {
                    "type": "string",
                    "description": "The name of the external provider where your third-party code repository is configured. You must specify either a ProviderType or a HostArn."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codestarconnections:ConnectionTag"
                    },
                    "description": "Specifies the tags applied to a connection."
                }
            },
            "outputs": {
                "connectionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the  connection. The ARN is used as the connection reference when the connection is shared between AWS services."
                },
                "connectionName": {
                    "type": "string",
                    "description": "The name of the connection. Connection names must be unique in an AWS user account."
                },
                "connectionStatus": {
                    "type": "string",
                    "description": "The current status of the connection."
                },
                "hostArn": {
                    "type": "string",
                    "description": "The host arn configured to represent the infrastructure where your third-party provider is installed. You must specify either a ProviderType or a HostArn."
                },
                "ownerAccountId": {
                    "type": "string",
                    "description": "The name of the external provider where your third-party code repository is configured. For Bitbucket, this is the account ID of the owner of the Bitbucket repository."
                },
                "providerType": {
                    "type": "string",
                    "description": "The name of the external provider where your third-party code repository is configured. You must specify either a ProviderType or a HostArn."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codestarconnections:ConnectionTag"
                    },
                    "description": "Specifies the tags applied to a connection."
                }
            },
            "required": [
                "connectionName"
            ],
            "createOnly": [
                "connectionName",
                "hostArn",
                "providerType"
            ]
        },
        "aws-native:codestarnotifications:NotificationRule": {
            "cf": "AWS::CodeStarNotifications::NotificationRule",
            "inputs": {
                "detailType": {
                    "$ref": "#/types/aws-native:codestarnotifications:NotificationRuleDetailType"
                },
                "eventTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/types/aws-native:codestarnotifications:NotificationRuleStatus"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codestarnotifications:NotificationRuleTarget"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "detailType": {
                    "$ref": "#/types/aws-native:codestarnotifications:NotificationRuleDetailType"
                },
                "eventTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/types/aws-native:codestarnotifications:NotificationRuleStatus"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:codestarnotifications:NotificationRuleTarget"
                    }
                }
            },
            "required": [
                "detailType",
                "eventTypeIds",
                "name",
                "resource",
                "targets"
            ],
            "createOnly": [
                "resource",
                "tags"
            ]
        },
        "aws-native:configuration:AggregationAuthorization": {
            "cf": "AWS::Config::AggregationAuthorization",
            "inputs": {
                "authorizedAccountId": {
                    "type": "string",
                    "description": "The 12-digit account ID of the account authorized to aggregate data."
                },
                "authorizedAwsRegion": {
                    "type": "string",
                    "description": "The region authorized to collect aggregated data."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:AggregationAuthorizationTag"
                    },
                    "description": "The tags for the AggregationAuthorization."
                }
            },
            "outputs": {
                "aggregationAuthorizationArn": {
                    "type": "string",
                    "description": "The ARN of the AggregationAuthorization."
                },
                "authorizedAccountId": {
                    "type": "string",
                    "description": "The 12-digit account ID of the account authorized to aggregate data."
                },
                "authorizedAwsRegion": {
                    "type": "string",
                    "description": "The region authorized to collect aggregated data."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:AggregationAuthorizationTag"
                    },
                    "description": "The tags for the AggregationAuthorization."
                }
            },
            "required": [
                "authorizedAccountId",
                "authorizedAwsRegion"
            ],
            "createOnly": [
                "authorizedAccountId",
                "authorizedAwsRegion"
            ]
        },
        "aws-native:configuration:ConfigurationAggregator": {
            "cf": "AWS::Config::ConfigurationAggregator",
            "inputs": {
                "accountAggregationSources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:ConfigurationAggregatorAccountAggregationSource"
                    }
                },
                "configurationAggregatorName": {
                    "type": "string",
                    "description": "The name of the aggregator."
                },
                "organizationAggregationSource": {
                    "$ref": "#/types/aws-native:configuration:ConfigurationAggregatorOrganizationAggregationSource"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:ConfigurationAggregatorTag"
                    },
                    "description": "The tags for the configuration aggregator."
                }
            },
            "outputs": {
                "accountAggregationSources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:ConfigurationAggregatorAccountAggregationSource"
                    }
                },
                "configurationAggregatorArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the aggregator."
                },
                "configurationAggregatorName": {
                    "type": "string",
                    "description": "The name of the aggregator."
                },
                "organizationAggregationSource": {
                    "$ref": "#/types/aws-native:configuration:ConfigurationAggregatorOrganizationAggregationSource"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:ConfigurationAggregatorTag"
                    },
                    "description": "The tags for the configuration aggregator."
                }
            },
            "createOnly": [
                "configurationAggregatorName"
            ]
        },
        "aws-native:configuration:ConformancePack": {
            "cf": "AWS::Config::ConformancePack",
            "inputs": {
                "conformancePackInputParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:ConformancePackConformancePackInputParameter"
                    },
                    "description": "A list of ConformancePackInputParameter objects."
                },
                "conformancePackName": {
                    "type": "string",
                    "description": "Name of the conformance pack which will be assigned as the unique identifier."
                },
                "deliveryS3Bucket": {
                    "type": "string",
                    "description": "AWS Config stores intermediate files while processing conformance pack template."
                },
                "deliveryS3KeyPrefix": {
                    "type": "string",
                    "description": "The prefix for delivery S3 bucket."
                },
                "templateBody": {
                    "type": "string",
                    "description": "A string containing full conformance pack template body. You can only specify one of the template body or template S3Uri fields."
                },
                "templateS3Uri": {
                    "type": "string",
                    "description": "Location of file containing the template body which points to the conformance pack template that is located in an Amazon S3 bucket. You can only specify one of the template body or template S3Uri fields."
                }
            },
            "outputs": {
                "conformancePackInputParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:ConformancePackConformancePackInputParameter"
                    },
                    "description": "A list of ConformancePackInputParameter objects."
                },
                "conformancePackName": {
                    "type": "string",
                    "description": "Name of the conformance pack which will be assigned as the unique identifier."
                },
                "deliveryS3Bucket": {
                    "type": "string",
                    "description": "AWS Config stores intermediate files while processing conformance pack template."
                },
                "deliveryS3KeyPrefix": {
                    "type": "string",
                    "description": "The prefix for delivery S3 bucket."
                },
                "templateBody": {
                    "type": "string",
                    "description": "A string containing full conformance pack template body. You can only specify one of the template body or template S3Uri fields."
                },
                "templateS3Uri": {
                    "type": "string",
                    "description": "Location of file containing the template body which points to the conformance pack template that is located in an Amazon S3 bucket. You can only specify one of the template body or template S3Uri fields."
                }
            },
            "required": [
                "conformancePackName"
            ],
            "createOnly": [
                "conformancePackName"
            ]
        },
        "aws-native:configuration:OrganizationConformancePack": {
            "cf": "AWS::Config::OrganizationConformancePack",
            "inputs": {
                "conformancePackInputParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:OrganizationConformancePackConformancePackInputParameter"
                    },
                    "description": "A list of ConformancePackInputParameter objects."
                },
                "deliveryS3Bucket": {
                    "type": "string",
                    "description": "AWS Config stores intermediate files while processing conformance pack template."
                },
                "deliveryS3KeyPrefix": {
                    "type": "string",
                    "description": "The prefix for the delivery S3 bucket."
                },
                "excludedAccounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack."
                },
                "organizationConformancePackName": {
                    "type": "string",
                    "description": "The name of the organization conformance pack."
                },
                "templateBody": {
                    "type": "string",
                    "description": "A string containing full conformance pack template body."
                },
                "templateS3Uri": {
                    "type": "string",
                    "description": "Location of file containing the template body."
                }
            },
            "outputs": {
                "conformancePackInputParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:OrganizationConformancePackConformancePackInputParameter"
                    },
                    "description": "A list of ConformancePackInputParameter objects."
                },
                "deliveryS3Bucket": {
                    "type": "string",
                    "description": "AWS Config stores intermediate files while processing conformance pack template."
                },
                "deliveryS3KeyPrefix": {
                    "type": "string",
                    "description": "The prefix for the delivery S3 bucket."
                },
                "excludedAccounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack."
                },
                "organizationConformancePackName": {
                    "type": "string",
                    "description": "The name of the organization conformance pack."
                },
                "templateBody": {
                    "type": "string",
                    "description": "A string containing full conformance pack template body."
                },
                "templateS3Uri": {
                    "type": "string",
                    "description": "Location of file containing the template body."
                }
            },
            "required": [
                "organizationConformancePackName"
            ],
            "createOnly": [
                "organizationConformancePackName"
            ]
        },
        "aws-native:configuration:StoredQuery": {
            "cf": "AWS::Config::StoredQuery",
            "inputs": {
                "queryDescription": {
                    "type": "string"
                },
                "queryExpression": {
                    "type": "string"
                },
                "queryName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:StoredQueryTag"
                    },
                    "description": "The tags for the stored query."
                }
            },
            "outputs": {
                "queryArn": {
                    "type": "string"
                },
                "queryDescription": {
                    "type": "string"
                },
                "queryExpression": {
                    "type": "string"
                },
                "queryId": {
                    "type": "string"
                },
                "queryName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:configuration:StoredQueryTag"
                    },
                    "description": "The tags for the stored query."
                }
            },
            "required": [
                "queryExpression",
                "queryName"
            ],
            "createOnly": [
                "queryName"
            ]
        },
        "aws-native:connect:QuickConnect": {
            "cf": "AWS::Connect::QuickConnect",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the quick connect."
                },
                "instanceArn": {
                    "type": "string",
                    "description": "The identifier of the Amazon Connect instance."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the quick connect."
                },
                "quickConnectConfig": {
                    "$ref": "#/types/aws-native:connect:QuickConnectQuickConnectConfig",
                    "description": "Configuration settings for the quick connect."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:connect:QuickConnectTag"
                    },
                    "description": "One or more tags."
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the quick connect."
                },
                "instanceArn": {
                    "type": "string",
                    "description": "The identifier of the Amazon Connect instance."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the quick connect."
                },
                "quickConnectArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the quick connect."
                },
                "quickConnectConfig": {
                    "$ref": "#/types/aws-native:connect:QuickConnectQuickConnectConfig",
                    "description": "Configuration settings for the quick connect."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:connect:QuickConnectTag"
                    },
                    "description": "One or more tags."
                }
            },
            "required": [
                "instanceArn",
                "name",
                "quickConnectConfig"
            ]
        },
        "aws-native:customerprofiles:Domain": {
            "cf": "AWS::CustomerProfiles::Domain",
            "inputs": {
                "deadLetterQueueUrl": {
                    "type": "string",
                    "description": "The URL of the SQS dead letter queue"
                },
                "defaultEncryptionKey": {
                    "type": "string",
                    "description": "The default encryption key"
                },
                "defaultExpirationDays": {
                    "type": "integer",
                    "description": "The default number of days until the data within the domain expires."
                },
                "domainName": {
                    "type": "string",
                    "description": "The unique name of the domain."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:DomainTag"
                    },
                    "description": "The tags (keys and values) associated with the domain"
                }
            },
            "outputs": {
                "createdAt": {
                    "type": "string",
                    "description": "The time of this integration got created"
                },
                "deadLetterQueueUrl": {
                    "type": "string",
                    "description": "The URL of the SQS dead letter queue"
                },
                "defaultEncryptionKey": {
                    "type": "string",
                    "description": "The default encryption key"
                },
                "defaultExpirationDays": {
                    "type": "integer",
                    "description": "The default number of days until the data within the domain expires."
                },
                "domainName": {
                    "type": "string",
                    "description": "The unique name of the domain."
                },
                "lastUpdatedAt": {
                    "type": "string",
                    "description": "The time of this integration got last updated at"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:DomainTag"
                    },
                    "description": "The tags (keys and values) associated with the domain"
                }
            },
            "required": [
                "domainName"
            ],
            "createOnly": [
                "domainName"
            ]
        },
        "aws-native:customerprofiles:Integration": {
            "cf": "AWS::CustomerProfiles::Integration",
            "inputs": {
                "domainName": {
                    "type": "string",
                    "description": "The unique name of the domain."
                },
                "flowDefinition": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationFlowDefinition"
                },
                "objectTypeName": {
                    "type": "string",
                    "description": "The name of the ObjectType defined for the 3rd party data in Profile Service"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:IntegrationTag"
                    },
                    "description": "The tags (keys and values) associated with the integration"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of the S3 bucket or any other type of data source."
                }
            },
            "outputs": {
                "createdAt": {
                    "type": "string",
                    "description": "The time of this integration got created"
                },
                "domainName": {
                    "type": "string",
                    "description": "The unique name of the domain."
                },
                "flowDefinition": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationFlowDefinition"
                },
                "lastUpdatedAt": {
                    "type": "string",
                    "description": "The time of this integration got last updated at"
                },
                "objectTypeName": {
                    "type": "string",
                    "description": "The name of the ObjectType defined for the 3rd party data in Profile Service"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:IntegrationTag"
                    },
                    "description": "The tags (keys and values) associated with the integration"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of the S3 bucket or any other type of data source."
                }
            },
            "required": [
                "domainName",
                "objectTypeName"
            ],
            "createOnly": [
                "domainName",
                "uri"
            ]
        },
        "aws-native:customerprofiles:ObjectType": {
            "cf": "AWS::CustomerProfiles::ObjectType",
            "inputs": {
                "allowProfileCreation": {
                    "type": "boolean",
                    "description": "Indicates whether a profile should be created when data is received."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the profile object type."
                },
                "domainName": {
                    "type": "string",
                    "description": "The unique name of the domain."
                },
                "encryptionKey": {
                    "type": "string",
                    "description": "The default encryption key"
                },
                "expirationDays": {
                    "type": "integer",
                    "description": "The default number of days until the data within the domain expires."
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:ObjectTypeFieldMap"
                    },
                    "description": "A list of the name and ObjectType field."
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:ObjectTypeKeyMap"
                    },
                    "description": "A list of unique keys that can be used to map data to the profile."
                },
                "objectTypeName": {
                    "type": "string",
                    "description": "The name of the profile object type."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:ObjectTypeTag"
                    },
                    "description": "The tags (keys and values) associated with the integration."
                },
                "templateId": {
                    "type": "string",
                    "description": "A unique identifier for the object template."
                }
            },
            "outputs": {
                "allowProfileCreation": {
                    "type": "boolean",
                    "description": "Indicates whether a profile should be created when data is received."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time of this integration got created."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the profile object type."
                },
                "domainName": {
                    "type": "string",
                    "description": "The unique name of the domain."
                },
                "encryptionKey": {
                    "type": "string",
                    "description": "The default encryption key"
                },
                "expirationDays": {
                    "type": "integer",
                    "description": "The default number of days until the data within the domain expires."
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:ObjectTypeFieldMap"
                    },
                    "description": "A list of the name and ObjectType field."
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:ObjectTypeKeyMap"
                    },
                    "description": "A list of unique keys that can be used to map data to the profile."
                },
                "lastUpdatedAt": {
                    "type": "string",
                    "description": "The time of this integration got last updated at."
                },
                "objectTypeName": {
                    "type": "string",
                    "description": "The name of the profile object type."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:ObjectTypeTag"
                    },
                    "description": "The tags (keys and values) associated with the integration."
                },
                "templateId": {
                    "type": "string",
                    "description": "A unique identifier for the object template."
                }
            },
            "required": [
                "domainName"
            ],
            "createOnly": [
                "domainName",
                "objectTypeName"
            ]
        },
        "aws-native:databrew:Dataset": {
            "cf": "AWS::DataBrew::Dataset",
            "inputs": {
                "format": {
                    "$ref": "#/types/aws-native:databrew:DatasetFormat",
                    "description": "Dataset format"
                },
                "formatOptions": {
                    "$ref": "#/types/aws-native:databrew:DatasetFormatOptions",
                    "description": "Format options for dataset"
                },
                "input": {
                    "$ref": "#/types/aws-native:databrew:DatasetInput",
                    "description": "Input"
                },
                "name": {
                    "type": "string",
                    "description": "Dataset name"
                },
                "pathOptions": {
                    "$ref": "#/types/aws-native:databrew:DatasetPathOptions",
                    "description": "PathOptions"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:DatasetTag"
                    }
                }
            },
            "outputs": {
                "format": {
                    "$ref": "#/types/aws-native:databrew:DatasetFormat",
                    "description": "Dataset format"
                },
                "formatOptions": {
                    "$ref": "#/types/aws-native:databrew:DatasetFormatOptions",
                    "description": "Format options for dataset"
                },
                "input": {
                    "$ref": "#/types/aws-native:databrew:DatasetInput",
                    "description": "Input"
                },
                "name": {
                    "type": "string",
                    "description": "Dataset name"
                },
                "pathOptions": {
                    "$ref": "#/types/aws-native:databrew:DatasetPathOptions",
                    "description": "PathOptions"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:DatasetTag"
                    }
                }
            },
            "required": [
                "input",
                "name"
            ],
            "createOnly": [
                "name",
                "tags"
            ]
        },
        "aws-native:databrew:Job": {
            "cf": "AWS::DataBrew::Job",
            "inputs": {
                "dataCatalogOutputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobDataCatalogOutput"
                    }
                },
                "databaseOutputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobDatabaseOutput"
                    }
                },
                "datasetName": {
                    "type": "string",
                    "description": "Dataset name"
                },
                "encryptionKeyArn": {
                    "type": "string",
                    "description": "Encryption Key Arn"
                },
                "encryptionMode": {
                    "$ref": "#/types/aws-native:databrew:JobEncryptionMode",
                    "description": "Encryption mode"
                },
                "jobSample": {
                    "$ref": "#/types/aws-native:databrew:JobJobSample",
                    "description": "Job Sample"
                },
                "logSubscription": {
                    "$ref": "#/types/aws-native:databrew:JobLogSubscription",
                    "description": "Log subscription"
                },
                "maxCapacity": {
                    "type": "integer",
                    "description": "Max capacity"
                },
                "maxRetries": {
                    "type": "integer",
                    "description": "Max retries"
                },
                "name": {
                    "type": "string",
                    "description": "Job name"
                },
                "outputLocation": {
                    "$ref": "#/types/aws-native:databrew:JobOutputLocation",
                    "description": "Output location"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobOutput"
                    }
                },
                "profileConfiguration": {
                    "$ref": "#/types/aws-native:databrew:JobProfileConfiguration",
                    "description": "Profile Job configuration"
                },
                "projectName": {
                    "type": "string",
                    "description": "Project name"
                },
                "recipe": {
                    "$ref": "#/types/aws-native:databrew:JobRecipe"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role arn"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobTag"
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout"
                },
                "type": {
                    "$ref": "#/types/aws-native:databrew:JobType",
                    "description": "Job type"
                }
            },
            "outputs": {
                "dataCatalogOutputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobDataCatalogOutput"
                    }
                },
                "databaseOutputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobDatabaseOutput"
                    }
                },
                "datasetName": {
                    "type": "string",
                    "description": "Dataset name"
                },
                "encryptionKeyArn": {
                    "type": "string",
                    "description": "Encryption Key Arn"
                },
                "encryptionMode": {
                    "$ref": "#/types/aws-native:databrew:JobEncryptionMode",
                    "description": "Encryption mode"
                },
                "jobSample": {
                    "$ref": "#/types/aws-native:databrew:JobJobSample",
                    "description": "Job Sample"
                },
                "logSubscription": {
                    "$ref": "#/types/aws-native:databrew:JobLogSubscription",
                    "description": "Log subscription"
                },
                "maxCapacity": {
                    "type": "integer",
                    "description": "Max capacity"
                },
                "maxRetries": {
                    "type": "integer",
                    "description": "Max retries"
                },
                "name": {
                    "type": "string",
                    "description": "Job name"
                },
                "outputLocation": {
                    "$ref": "#/types/aws-native:databrew:JobOutputLocation",
                    "description": "Output location"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobOutput"
                    }
                },
                "profileConfiguration": {
                    "$ref": "#/types/aws-native:databrew:JobProfileConfiguration",
                    "description": "Profile Job configuration"
                },
                "projectName": {
                    "type": "string",
                    "description": "Project name"
                },
                "recipe": {
                    "$ref": "#/types/aws-native:databrew:JobRecipe"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role arn"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobTag"
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout"
                },
                "type": {
                    "$ref": "#/types/aws-native:databrew:JobType",
                    "description": "Job type"
                }
            },
            "required": [
                "name",
                "roleArn",
                "type"
            ],
            "createOnly": [
                "name",
                "tags",
                "type"
            ]
        },
        "aws-native:databrew:Project": {
            "cf": "AWS::DataBrew::Project",
            "inputs": {
                "datasetName": {
                    "type": "string",
                    "description": "Dataset name"
                },
                "name": {
                    "type": "string",
                    "description": "Project name"
                },
                "recipeName": {
                    "type": "string",
                    "description": "Recipe name"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role arn"
                },
                "sample": {
                    "$ref": "#/types/aws-native:databrew:ProjectSample",
                    "description": "Sample"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:ProjectTag"
                    }
                }
            },
            "outputs": {
                "datasetName": {
                    "type": "string",
                    "description": "Dataset name"
                },
                "name": {
                    "type": "string",
                    "description": "Project name"
                },
                "recipeName": {
                    "type": "string",
                    "description": "Recipe name"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role arn"
                },
                "sample": {
                    "$ref": "#/types/aws-native:databrew:ProjectSample",
                    "description": "Sample"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:ProjectTag"
                    }
                }
            },
            "required": [
                "datasetName",
                "name",
                "recipeName",
                "roleArn"
            ],
            "createOnly": [
                "name",
                "tags"
            ]
        },
        "aws-native:databrew:Recipe": {
            "cf": "AWS::DataBrew::Recipe",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Description of the recipe"
                },
                "name": {
                    "type": "string",
                    "description": "Recipe name"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:RecipeRecipeStep"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:RecipeTag"
                    }
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "Description of the recipe"
                },
                "name": {
                    "type": "string",
                    "description": "Recipe name"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:RecipeRecipeStep"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:RecipeTag"
                    }
                }
            },
            "required": [
                "name",
                "steps"
            ],
            "createOnly": [
                "name",
                "tags"
            ]
        },
        "aws-native:databrew:Schedule": {
            "cf": "AWS::DataBrew::Schedule",
            "inputs": {
                "cronExpression": {
                    "type": "string",
                    "description": "Schedule cron"
                },
                "jobNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Schedule Name"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:ScheduleTag"
                    }
                }
            },
            "outputs": {
                "cronExpression": {
                    "type": "string",
                    "description": "Schedule cron"
                },
                "jobNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Schedule Name"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:ScheduleTag"
                    }
                }
            },
            "required": [
                "cronExpression",
                "name"
            ],
            "createOnly": [
                "name",
                "tags"
            ]
        },
        "aws-native:datasync:Agent": {
            "cf": "AWS::DataSync::Agent",
            "inputs": {
                "activationKey": {
                    "type": "string",
                    "description": "Activation key of the Agent."
                },
                "agentName": {
                    "type": "string",
                    "description": "The name configured for the agent. Text reference used to identify the agent in the console."
                },
                "securityGroupArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ARNs of the security group used to protect your data transfer task subnets."
                },
                "subnetArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ARNs of the subnets in which DataSync will create elastic network interfaces for each data transfer task."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:AgentTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "vpcEndpointId": {
                    "type": "string",
                    "description": "The ID of the VPC endpoint that the agent has access to."
                }
            },
            "outputs": {
                "activationKey": {
                    "type": "string",
                    "description": "Activation key of the Agent."
                },
                "agentArn": {
                    "type": "string",
                    "description": "The DataSync Agent ARN."
                },
                "agentName": {
                    "type": "string",
                    "description": "The name configured for the agent. Text reference used to identify the agent in the console."
                },
                "endpointType": {
                    "$ref": "#/types/aws-native:datasync:AgentEndpointType",
                    "description": "The service endpoints that the agent will connect to."
                },
                "securityGroupArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ARNs of the security group used to protect your data transfer task subnets."
                },
                "subnetArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ARNs of the subnets in which DataSync will create elastic network interfaces for each data transfer task."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:AgentTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "vpcEndpointId": {
                    "type": "string",
                    "description": "The ID of the VPC endpoint that the agent has access to."
                }
            },
            "required": [
                "activationKey"
            ],
            "createOnly": [
                "activationKey",
                "securityGroupArns",
                "subnetArns",
                "vpcEndpointId"
            ]
        },
        "aws-native:datasync:LocationEFS": {
            "cf": "AWS::DataSync::LocationEFS",
            "inputs": {
                "ec2Config": {
                    "$ref": "#/types/aws-native:datasync:LocationEFSEc2Config"
                },
                "efsFilesystemArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the Amazon EFS file system."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationEFSTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "ec2Config": {
                    "$ref": "#/types/aws-native:datasync:LocationEFSEc2Config"
                },
                "efsFilesystemArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the Amazon EFS file system."
                },
                "locationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Amazon EFS file system location that is created."
                },
                "locationUri": {
                    "type": "string",
                    "description": "The URL of the EFS location that was described."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationEFSTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "ec2Config",
                "efsFilesystemArn"
            ],
            "createOnly": [
                "ec2Config",
                "efsFilesystemArn",
                "subdirectory"
            ]
        },
        "aws-native:datasync:LocationFSxWindows": {
            "cf": "AWS::DataSync::LocationFSxWindows",
            "inputs": {
                "domain": {
                    "type": "string",
                    "description": "The name of the Windows domain that the FSx for Windows server belongs to."
                },
                "fsxFilesystemArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the FSx for Windows file system."
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user who has the permissions to access files and folders in the FSx for Windows file system."
                },
                "securityGroupArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ARNs of the security groups that are to use to configure the FSx for Windows file system."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "A subdirectory in the location's path."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationFSxWindowsTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "user": {
                    "type": "string",
                    "description": "The user who has the permissions to access files and folders in the FSx for Windows file system."
                }
            },
            "outputs": {
                "domain": {
                    "type": "string",
                    "description": "The name of the Windows domain that the FSx for Windows server belongs to."
                },
                "fsxFilesystemArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the FSx for Windows file system."
                },
                "locationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Amazon FSx for Windows file system location that is created."
                },
                "locationUri": {
                    "type": "string",
                    "description": "The URL of the FSx for Windows location that was described."
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user who has the permissions to access files and folders in the FSx for Windows file system."
                },
                "securityGroupArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ARNs of the security groups that are to use to configure the FSx for Windows file system."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "A subdirectory in the location's path."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationFSxWindowsTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "user": {
                    "type": "string",
                    "description": "The user who has the permissions to access files and folders in the FSx for Windows file system."
                }
            },
            "required": [
                "fsxFilesystemArn",
                "password",
                "securityGroupArns",
                "user"
            ],
            "createOnly": [
                "domain",
                "fsxFilesystemArn",
                "password",
                "securityGroupArns",
                "subdirectory",
                "user"
            ]
        },
        "aws-native:datasync:LocationNFS": {
            "cf": "AWS::DataSync::LocationNFS",
            "inputs": {
                "mountOptions": {
                    "$ref": "#/types/aws-native:datasync:LocationNFSMountOptions"
                },
                "onPremConfig": {
                    "$ref": "#/types/aws-native:datasync:LocationNFSOnPremConfig"
                },
                "serverHostname": {
                    "type": "string",
                    "description": "The name of the NFS server. This value is the IP address or DNS name of the NFS server."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "The subdirectory in the NFS file system that is used to read data from the NFS source location or write data to the NFS destination."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationNFSTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "locationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the NFS location."
                },
                "locationUri": {
                    "type": "string",
                    "description": "The URL of the NFS location that was described."
                },
                "mountOptions": {
                    "$ref": "#/types/aws-native:datasync:LocationNFSMountOptions"
                },
                "onPremConfig": {
                    "$ref": "#/types/aws-native:datasync:LocationNFSOnPremConfig"
                },
                "serverHostname": {
                    "type": "string",
                    "description": "The name of the NFS server. This value is the IP address or DNS name of the NFS server."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "The subdirectory in the NFS file system that is used to read data from the NFS source location or write data to the NFS destination."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationNFSTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "onPremConfig",
                "serverHostname",
                "subdirectory"
            ],
            "createOnly": [
                "serverHostname"
            ]
        },
        "aws-native:datasync:LocationObjectStorage": {
            "cf": "AWS::DataSync::LocationObjectStorage",
            "inputs": {
                "accessKey": {
                    "type": "string",
                    "description": "Optional. The access key is used if credentials are required to access the self-managed object storage server."
                },
                "agentArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Amazon Resource Name (ARN) of the agents associated with the self-managed object storage server location."
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the bucket on the self-managed object storage server."
                },
                "secretKey": {
                    "type": "string",
                    "description": "Optional. The secret key is used if credentials are required to access the self-managed object storage server."
                },
                "serverHostname": {
                    "type": "string",
                    "description": "The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server."
                },
                "serverPort": {
                    "type": "integer",
                    "description": "The port that your self-managed server accepts inbound network traffic on."
                },
                "serverProtocol": {
                    "$ref": "#/types/aws-native:datasync:LocationObjectStorageServerProtocol",
                    "description": "The protocol that the object storage server uses to communicate."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "The subdirectory in the self-managed object storage server that is used to read data from."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationObjectStorageTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "accessKey": {
                    "type": "string",
                    "description": "Optional. The access key is used if credentials are required to access the self-managed object storage server."
                },
                "agentArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Amazon Resource Name (ARN) of the agents associated with the self-managed object storage server location."
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the bucket on the self-managed object storage server."
                },
                "locationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the location that is created."
                },
                "locationUri": {
                    "type": "string",
                    "description": "The URL of the object storage location that was described."
                },
                "secretKey": {
                    "type": "string",
                    "description": "Optional. The secret key is used if credentials are required to access the self-managed object storage server."
                },
                "serverHostname": {
                    "type": "string",
                    "description": "The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server."
                },
                "serverPort": {
                    "type": "integer",
                    "description": "The port that your self-managed server accepts inbound network traffic on."
                },
                "serverProtocol": {
                    "$ref": "#/types/aws-native:datasync:LocationObjectStorageServerProtocol",
                    "description": "The protocol that the object storage server uses to communicate."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "The subdirectory in the self-managed object storage server that is used to read data from."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationObjectStorageTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "agentArns",
                "bucketName",
                "serverHostname"
            ],
            "createOnly": [
                "bucketName",
                "serverHostname"
            ]
        },
        "aws-native:datasync:LocationS3": {
            "cf": "AWS::DataSync::LocationS3",
            "inputs": {
                "s3BucketArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Amazon S3 bucket."
                },
                "s3Config": {
                    "$ref": "#/types/aws-native:datasync:LocationS3S3Config"
                },
                "s3StorageClass": {
                    "$ref": "#/types/aws-native:datasync:LocationS3S3StorageClass",
                    "description": "The Amazon S3 storage class you want to store your files in when this location is used as a task destination."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location or write data to the S3 destination."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationS3Tag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "locationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Amazon S3 bucket location."
                },
                "locationUri": {
                    "type": "string",
                    "description": "The URL of the S3 location that was described."
                },
                "s3BucketArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Amazon S3 bucket."
                },
                "s3Config": {
                    "$ref": "#/types/aws-native:datasync:LocationS3S3Config"
                },
                "s3StorageClass": {
                    "$ref": "#/types/aws-native:datasync:LocationS3S3StorageClass",
                    "description": "The Amazon S3 storage class you want to store your files in when this location is used as a task destination."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location or write data to the S3 destination."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationS3Tag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "s3BucketArn",
                "s3Config"
            ],
            "createOnly": [
                "s3BucketArn",
                "s3Config",
                "s3StorageClass",
                "subdirectory"
            ]
        },
        "aws-native:datasync:LocationSMB": {
            "cf": "AWS::DataSync::LocationSMB",
            "inputs": {
                "agentArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location."
                },
                "domain": {
                    "type": "string",
                    "description": "The name of the Windows domain that the SMB server belongs to."
                },
                "mountOptions": {
                    "$ref": "#/types/aws-native:datasync:LocationSMBMountOptions"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user who can mount the share and has the permissions to access files and folders in the SMB share."
                },
                "serverHostname": {
                    "type": "string",
                    "description": "The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationSMBTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "user": {
                    "type": "string",
                    "description": "The user who can mount the share, has the permissions to access files and folders in the SMB share."
                }
            },
            "outputs": {
                "agentArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location."
                },
                "domain": {
                    "type": "string",
                    "description": "The name of the Windows domain that the SMB server belongs to."
                },
                "locationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the SMB location that is created."
                },
                "locationUri": {
                    "type": "string",
                    "description": "The URL of the SMB location that was described."
                },
                "mountOptions": {
                    "$ref": "#/types/aws-native:datasync:LocationSMBMountOptions"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the user who can mount the share and has the permissions to access files and folders in the SMB share."
                },
                "serverHostname": {
                    "type": "string",
                    "description": "The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server."
                },
                "subdirectory": {
                    "type": "string",
                    "description": "The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:LocationSMBTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "user": {
                    "type": "string",
                    "description": "The user who can mount the share, has the permissions to access files and folders in the SMB share."
                }
            },
            "required": [
                "agentArns",
                "password",
                "serverHostname",
                "subdirectory",
                "user"
            ],
            "createOnly": [
                "serverHostname"
            ]
        },
        "aws-native:datasync:Task": {
            "cf": "AWS::DataSync::Task",
            "inputs": {
                "cloudWatchLogGroupArn": {
                    "type": "string",
                    "description": "The ARN of the Amazon CloudWatch log group that is used to monitor and log events in the task."
                },
                "destinationLocationArn": {
                    "type": "string",
                    "description": "The ARN of an AWS storage resource's location."
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:TaskFilterRule"
                    }
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:TaskFilterRule"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of a task. This value is a text reference that is used to identify the task in the console."
                },
                "options": {
                    "$ref": "#/types/aws-native:datasync:TaskOptions"
                },
                "schedule": {
                    "$ref": "#/types/aws-native:datasync:TaskTaskSchedule"
                },
                "sourceLocationArn": {
                    "type": "string",
                    "description": "The ARN of the source location for the task."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:TaskTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "cloudWatchLogGroupArn": {
                    "type": "string",
                    "description": "The ARN of the Amazon CloudWatch log group that is used to monitor and log events in the task."
                },
                "destinationLocationArn": {
                    "type": "string",
                    "description": "The ARN of an AWS storage resource's location."
                },
                "destinationNetworkInterfaceArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errorCode": {
                    "type": "string",
                    "description": "Errors that AWS DataSync encountered during execution of the task. You can use this error code to help troubleshoot issues."
                },
                "errorDetail": {
                    "type": "string",
                    "description": "Detailed description of an error that was encountered during the task execution."
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:TaskFilterRule"
                    }
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:TaskFilterRule"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of a task. This value is a text reference that is used to identify the task in the console."
                },
                "options": {
                    "$ref": "#/types/aws-native:datasync:TaskOptions"
                },
                "schedule": {
                    "$ref": "#/types/aws-native:datasync:TaskTaskSchedule"
                },
                "sourceLocationArn": {
                    "type": "string",
                    "description": "The ARN of the source location for the task."
                },
                "sourceNetworkInterfaceArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/types/aws-native:datasync:TaskStatus",
                    "description": "The status of the task that was described."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:datasync:TaskTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "taskArn": {
                    "type": "string",
                    "description": "The ARN of the task."
                }
            },
            "required": [
                "destinationLocationArn",
                "sourceLocationArn"
            ],
            "createOnly": [
                "destinationLocationArn",
                "sourceLocationArn"
            ]
        },
        "aws-native:detective:Graph": {
            "cf": "AWS::Detective::Graph",
            "inputs": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:detective:GraphTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Detective graph ARN"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:detective:GraphTag"
                    }
                }
            }
        },
        "aws-native:detective:MemberInvitation": {
            "cf": "AWS::Detective::MemberInvitation",
            "inputs": {
                "disableEmailNotification": {
                    "type": "boolean",
                    "description": "When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect."
                },
                "graphArn": {
                    "type": "string",
                    "description": "The ARN of the graph to which the member account will be invited"
                },
                "memberEmailAddress": {
                    "type": "string",
                    "description": "The root email address for the account to be invited, for validation. Updating this field has no effect."
                },
                "memberId": {
                    "type": "string",
                    "description": "The AWS account ID to be invited to join the graph as a member"
                },
                "message": {
                    "type": "string",
                    "description": "A message to be included in the email invitation sent to the invited account. Updating this field has no effect."
                }
            },
            "outputs": {
                "disableEmailNotification": {
                    "type": "boolean",
                    "description": "When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect."
                },
                "graphArn": {
                    "type": "string",
                    "description": "The ARN of the graph to which the member account will be invited"
                },
                "memberEmailAddress": {
                    "type": "string",
                    "description": "The root email address for the account to be invited, for validation. Updating this field has no effect."
                },
                "memberId": {
                    "type": "string",
                    "description": "The AWS account ID to be invited to join the graph as a member"
                },
                "message": {
                    "type": "string",
                    "description": "A message to be included in the email invitation sent to the invited account. Updating this field has no effect."
                }
            },
            "required": [
                "graphArn",
                "memberEmailAddress",
                "memberId"
            ],
            "createOnly": [
                "graphArn",
                "memberId"
            ]
        },
        "aws-native:devopsguru:NotificationChannel": {
            "cf": "AWS::DevOpsGuru::NotificationChannel",
            "inputs": {
                "config": {
                    "$ref": "#/types/aws-native:devopsguru:NotificationChannelNotificationChannelConfig"
                }
            },
            "outputs": {
                "config": {
                    "$ref": "#/types/aws-native:devopsguru:NotificationChannelNotificationChannelConfig"
                }
            },
            "required": [
                "config"
            ],
            "createOnly": [
                "config"
            ]
        },
        "aws-native:devopsguru:ResourceCollection": {
            "cf": "AWS::DevOpsGuru::ResourceCollection",
            "inputs": {
                "resourceCollectionFilter": {
                    "$ref": "#/types/aws-native:devopsguru:ResourceCollectionResourceCollectionFilter"
                }
            },
            "outputs": {
                "resourceCollectionFilter": {
                    "$ref": "#/types/aws-native:devopsguru:ResourceCollectionResourceCollectionFilter"
                },
                "resourceCollectionType": {
                    "$ref": "#/types/aws-native:devopsguru:ResourceCollectionResourceCollectionType",
                    "description": "The type of ResourceCollection"
                }
            },
            "required": [
                "resourceCollectionFilter"
            ]
        },
        "aws-native:dynamodb:GlobalTable": {
            "cf": "AWS::DynamoDB::GlobalTable",
            "inputs": {
                "attributeDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableAttributeDefinition"
                    }
                },
                "billingMode": {
                    "type": "string"
                },
                "globalSecondaryIndexes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableGlobalSecondaryIndex"
                    }
                },
                "keySchema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableKeySchema"
                    }
                },
                "localSecondaryIndexes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableLocalSecondaryIndex"
                    }
                },
                "replicas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableReplicaSpecification"
                    }
                },
                "sSESpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableSSESpecification"
                },
                "streamSpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableStreamSpecification"
                },
                "tableName": {
                    "type": "string"
                },
                "timeToLiveSpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableTimeToLiveSpecification"
                },
                "writeProvisionedThroughputSettings": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableWriteProvisionedThroughputSettings"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "attributeDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableAttributeDefinition"
                    }
                },
                "billingMode": {
                    "type": "string"
                },
                "globalSecondaryIndexes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableGlobalSecondaryIndex"
                    }
                },
                "keySchema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableKeySchema"
                    }
                },
                "localSecondaryIndexes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableLocalSecondaryIndex"
                    }
                },
                "replicas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableReplicaSpecification"
                    }
                },
                "sSESpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableSSESpecification"
                },
                "streamArn": {
                    "type": "string"
                },
                "streamSpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableStreamSpecification"
                },
                "tableId": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "timeToLiveSpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableTimeToLiveSpecification"
                },
                "writeProvisionedThroughputSettings": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableWriteProvisionedThroughputSettings"
                }
            },
            "required": [
                "attributeDefinitions",
                "keySchema",
                "replicas"
            ],
            "createOnly": [
                "keySchema",
                "localSecondaryIndexes",
                "tableName"
            ]
        },
        "aws-native:ec2:CarrierGateway": {
            "cf": "AWS::EC2::CarrierGateway",
            "inputs": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:CarrierGatewayTag"
                    },
                    "description": "The tags for the carrier gateway."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC."
                }
            },
            "outputs": {
                "carrierGatewayId": {
                    "type": "string",
                    "description": "The ID of the carrier gateway."
                },
                "ownerId": {
                    "type": "string",
                    "description": "The ID of the owner."
                },
                "state": {
                    "type": "string",
                    "description": "The state of the carrier gateway."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:CarrierGatewayTag"
                    },
                    "description": "The tags for the carrier gateway."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC."
                }
            },
            "required": [
                "vpcId"
            ],
            "createOnly": [
                "vpcId"
            ]
        },
        "aws-native:ec2:DHCPOptions": {
            "cf": "AWS::EC2::DHCPOptions",
            "inputs": {
                "domainName": {
                    "type": "string",
                    "description": "This value is used to complete unqualified DNS hostnames."
                },
                "domainNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IPv4 addresses of up to four domain name servers, or AmazonProvidedDNS."
                },
                "netbiosNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IPv4 addresses of up to four NetBIOS name servers."
                },
                "netbiosNodeType": {
                    "type": "integer",
                    "description": "The NetBIOS node type (1, 2, 4, or 8)."
                },
                "ntpServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IPv4 addresses of up to four Network Time Protocol (NTP) servers."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:DHCPOptionsTag"
                    },
                    "description": "Any tags assigned to the DHCP options set."
                }
            },
            "outputs": {
                "dhcpOptionsId": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string",
                    "description": "This value is used to complete unqualified DNS hostnames."
                },
                "domainNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IPv4 addresses of up to four domain name servers, or AmazonProvidedDNS."
                },
                "netbiosNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IPv4 addresses of up to four NetBIOS name servers."
                },
                "netbiosNodeType": {
                    "type": "integer",
                    "description": "The NetBIOS node type (1, 2, 4, or 8)."
                },
                "ntpServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IPv4 addresses of up to four Network Time Protocol (NTP) servers."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:DHCPOptionsTag"
                    },
                    "description": "Any tags assigned to the DHCP options set."
                }
            },
            "createOnly": [
                "domainName",
                "domainNameServers",
                "netbiosNameServers",
                "netbiosNodeType",
                "ntpServers"
            ]
        },
        "aws-native:ec2:EC2Fleet": {
            "cf": "AWS::EC2::EC2Fleet",
            "inputs": {
                "context": {
                    "type": "string"
                },
                "excessCapacityTerminationPolicy": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetExcessCapacityTerminationPolicy"
                },
                "launchTemplateConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:EC2FleetFleetLaunchTemplateConfigRequest"
                    }
                },
                "onDemandOptions": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetOnDemandOptionsRequest"
                },
                "replaceUnhealthyInstances": {
                    "type": "boolean"
                },
                "spotOptions": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetSpotOptionsRequest"
                },
                "tagSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:EC2FleetTagSpecification"
                    }
                },
                "targetCapacitySpecification": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetTargetCapacitySpecificationRequest"
                },
                "terminateInstancesWithExpiration": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetType"
                },
                "validFrom": {
                    "type": "string"
                },
                "validUntil": {
                    "type": "string"
                }
            },
            "outputs": {
                "context": {
                    "type": "string"
                },
                "excessCapacityTerminationPolicy": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetExcessCapacityTerminationPolicy"
                },
                "fleetId": {
                    "type": "string"
                },
                "launchTemplateConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:EC2FleetFleetLaunchTemplateConfigRequest"
                    }
                },
                "onDemandOptions": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetOnDemandOptionsRequest"
                },
                "replaceUnhealthyInstances": {
                    "type": "boolean"
                },
                "spotOptions": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetSpotOptionsRequest"
                },
                "tagSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:EC2FleetTagSpecification"
                    }
                },
                "targetCapacitySpecification": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetTargetCapacitySpecificationRequest"
                },
                "terminateInstancesWithExpiration": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetType"
                },
                "validFrom": {
                    "type": "string"
                },
                "validUntil": {
                    "type": "string"
                }
            },
            "required": [
                "launchTemplateConfigs",
                "targetCapacitySpecification"
            ],
            "createOnly": [
                "launchTemplateConfigs",
                "onDemandOptions",
                "replaceUnhealthyInstances",
                "spotOptions",
                "tagSpecifications",
                "terminateInstancesWithExpiration",
                "type",
                "validFrom",
                "validUntil"
            ]
        },
        "aws-native:ec2:EgressOnlyInternetGateway": {
            "cf": "AWS::EC2::EgressOnlyInternetGateway",
            "inputs": {
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC for which to create the egress-only internet gateway."
                }
            },
            "outputs": {
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC for which to create the egress-only internet gateway."
                }
            },
            "required": [
                "vpcId"
            ],
            "createOnly": [
                "vpcId"
            ]
        },
        "aws-native:ec2:EnclaveCertificateIamRoleAssociation": {
            "cf": "AWS::EC2::EnclaveCertificateIamRoleAssociation",
            "inputs": {
                "certificateArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the ACM certificate with which to associate the IAM role."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate."
                }
            },
            "outputs": {
                "certificateArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the ACM certificate with which to associate the IAM role."
                },
                "certificateS3BucketName": {
                    "type": "string",
                    "description": "The name of the Amazon S3 bucket to which the certificate was uploaded."
                },
                "certificateS3ObjectKey": {
                    "type": "string",
                    "description": "The Amazon S3 object key where the certificate, certificate chain, and encrypted private key bundle are stored."
                },
                "encryptionKmsKeyId": {
                    "type": "string",
                    "description": "The ID of the AWS KMS CMK used to encrypt the private key of the certificate."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate."
                }
            },
            "required": [
                "certificateArn",
                "roleArn"
            ],
            "createOnly": [
                "certificateArn",
                "roleArn"
            ]
        },
        "aws-native:ec2:FlowLog": {
            "cf": "AWS::EC2::FlowLog",
            "inputs": {
                "deliverLogsPermissionArn": {
                    "type": "string",
                    "description": "The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account. If you specify LogDestinationType as s3, do not specify DeliverLogsPermissionArn or LogGroupName."
                },
                "logDestination": {
                    "type": "string",
                    "description": "Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for LogDestinationType."
                },
                "logDestinationType": {
                    "$ref": "#/types/aws-native:ec2:FlowLogLogDestinationType",
                    "description": "Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3."
                },
                "logFormat": {
                    "type": "string",
                    "description": "The fields to include in the flow log record, in the order in which they should appear."
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType as s3, do not specify DeliverLogsPermissionArn or LogGroupName."
                },
                "maxAggregationInterval": {
                    "type": "integer",
                    "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes)."
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the subnet, network interface, or VPC for which you want to create a flow log."
                },
                "resourceType": {
                    "$ref": "#/types/aws-native:ec2:FlowLogResourceType",
                    "description": "The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:FlowLogTag"
                    },
                    "description": "The tags to apply to the flow logs."
                },
                "trafficType": {
                    "$ref": "#/types/aws-native:ec2:FlowLogTrafficType",
                    "description": "The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic."
                }
            },
            "outputs": {
                "deliverLogsPermissionArn": {
                    "type": "string",
                    "description": "The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account. If you specify LogDestinationType as s3, do not specify DeliverLogsPermissionArn or LogGroupName."
                },
                "logDestination": {
                    "type": "string",
                    "description": "Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for LogDestinationType."
                },
                "logDestinationType": {
                    "$ref": "#/types/aws-native:ec2:FlowLogLogDestinationType",
                    "description": "Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3."
                },
                "logFormat": {
                    "type": "string",
                    "description": "The fields to include in the flow log record, in the order in which they should appear."
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType as s3, do not specify DeliverLogsPermissionArn or LogGroupName."
                },
                "maxAggregationInterval": {
                    "type": "integer",
                    "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes)."
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the subnet, network interface, or VPC for which you want to create a flow log."
                },
                "resourceType": {
                    "$ref": "#/types/aws-native:ec2:FlowLogResourceType",
                    "description": "The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:FlowLogTag"
                    },
                    "description": "The tags to apply to the flow logs."
                },
                "trafficType": {
                    "$ref": "#/types/aws-native:ec2:FlowLogTrafficType",
                    "description": "The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic."
                }
            },
            "required": [
                "resourceId",
                "resourceType",
                "trafficType"
            ],
            "createOnly": [
                "deliverLogsPermissionArn",
                "logDestination",
                "logDestinationType",
                "logFormat",
                "logGroupName",
                "maxAggregationInterval",
                "resourceId",
                "resourceType",
                "trafficType"
            ]
        },
        "aws-native:ec2:GatewayRouteTableAssociation": {
            "cf": "AWS::EC2::GatewayRouteTableAssociation",
            "inputs": {
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the gateway."
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table."
                }
            },
            "outputs": {
                "associationId": {
                    "type": "string",
                    "description": "The route table association ID."
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the gateway."
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table."
                }
            },
            "required": [
                "gatewayId",
                "routeTableId"
            ],
            "createOnly": [
                "gatewayId"
            ]
        },
        "aws-native:ec2:Host": {
            "cf": "AWS::EC2::Host",
            "inputs": {
                "autoPlacement": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "hostRecovery": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                }
            },
            "outputs": {
                "autoPlacement": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "hostRecovery": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "instanceType"
            ],
            "createOnly": [
                "availabilityZone",
                "instanceType"
            ]
        },
        "aws-native:ec2:LocalGatewayRoute": {
            "cf": "AWS::EC2::LocalGatewayRoute",
            "inputs": {
                "destinationCidrBlock": {
                    "type": "string",
                    "description": "The CIDR block used for destination matches."
                },
                "localGatewayRouteTableId": {
                    "type": "string",
                    "description": "The ID of the local gateway route table."
                },
                "localGatewayVirtualInterfaceGroupId": {
                    "type": "string",
                    "description": "The ID of the virtual interface group."
                }
            },
            "outputs": {
                "destinationCidrBlock": {
                    "type": "string",
                    "description": "The CIDR block used for destination matches."
                },
                "localGatewayRouteTableId": {
                    "type": "string",
                    "description": "The ID of the local gateway route table."
                },
                "localGatewayVirtualInterfaceGroupId": {
                    "type": "string",
                    "description": "The ID of the virtual interface group."
                },
                "state": {
                    "type": "string",
                    "description": "The state of the route."
                },
                "type": {
                    "type": "string",
                    "description": "The route type."
                }
            },
            "required": [
                "destinationCidrBlock",
                "localGatewayRouteTableId",
                "localGatewayVirtualInterfaceGroupId"
            ],
            "createOnly": [
                "destinationCidrBlock",
                "localGatewayRouteTableId",
                "localGatewayVirtualInterfaceGroupId"
            ]
        },
        "aws-native:ec2:LocalGatewayRouteTableVPCAssociation": {
            "cf": "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
            "inputs": {
                "localGatewayRouteTableId": {
                    "type": "string",
                    "description": "The ID of the local gateway route table."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:LocalGatewayRouteTableVPCAssociationTag"
                    },
                    "description": "The tags for the association."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC."
                }
            },
            "outputs": {
                "localGatewayId": {
                    "type": "string",
                    "description": "The ID of the local gateway."
                },
                "localGatewayRouteTableId": {
                    "type": "string",
                    "description": "The ID of the local gateway route table."
                },
                "localGatewayRouteTableVpcAssociationId": {
                    "type": "string",
                    "description": "The ID of the association."
                },
                "state": {
                    "type": "string",
                    "description": "The state of the association."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:LocalGatewayRouteTableVPCAssociationTag"
                    },
                    "description": "The tags for the association."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC."
                }
            },
            "required": [
                "localGatewayRouteTableId",
                "vpcId"
            ],
            "createOnly": [
                "localGatewayRouteTableId",
                "vpcId"
            ]
        },
        "aws-native:ec2:NetworkInsightsAnalysis": {
            "cf": "AWS::EC2::NetworkInsightsAnalysis",
            "inputs": {
                "filterInArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "networkInsightsPathId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisTag"
                    }
                }
            },
            "outputs": {
                "alternatePathHints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAlternatePathHint"
                    }
                },
                "explanations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisExplanation"
                    }
                },
                "filterInArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "forwardPathComponents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisPathComponent"
                    }
                },
                "networkInsightsAnalysisArn": {
                    "type": "string"
                },
                "networkInsightsAnalysisId": {
                    "type": "string"
                },
                "networkInsightsPathId": {
                    "type": "string"
                },
                "networkPathFound": {
                    "type": "boolean"
                },
                "returnPathComponents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisPathComponent"
                    }
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisStatus"
                },
                "statusMessage": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisTag"
                    }
                }
            },
            "required": [
                "networkInsightsPathId"
            ],
            "createOnly": [
                "filterInArns",
                "networkInsightsPathId"
            ]
        },
        "aws-native:ec2:NetworkInsightsPath": {
            "cf": "AWS::EC2::NetworkInsightsPath",
            "inputs": {
                "destination": {
                    "type": "string"
                },
                "destinationIp": {
                    "type": "string"
                },
                "destinationPort": {
                    "type": "integer"
                },
                "protocol": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsPathProtocol"
                },
                "source": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsPathTag"
                    }
                }
            },
            "outputs": {
                "createdDate": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destinationIp": {
                    "type": "string"
                },
                "destinationPort": {
                    "type": "integer"
                },
                "networkInsightsPathArn": {
                    "type": "string"
                },
                "networkInsightsPathId": {
                    "type": "string"
                },
                "protocol": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsPathProtocol"
                },
                "source": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsPathTag"
                    }
                }
            },
            "required": [
                "destination",
                "protocol",
                "source"
            ],
            "createOnly": [
                "destination",
                "destinationIp",
                "destinationPort",
                "protocol",
                "source",
                "sourceIp"
            ]
        },
        "aws-native:ec2:PrefixList": {
            "cf": "AWS::EC2::PrefixList",
            "inputs": {
                "addressFamily": {
                    "$ref": "#/types/aws-native:ec2:PrefixListAddressFamily",
                    "description": "Ip Version of Prefix List."
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:PrefixListEntry"
                    },
                    "description": "Entries of Prefix List."
                },
                "maxEntries": {
                    "type": "integer",
                    "description": "Max Entries of Prefix List."
                },
                "prefixListName": {
                    "type": "string",
                    "description": "Name of Prefix List."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:PrefixListTag"
                    },
                    "description": "Tags for Prefix List"
                }
            },
            "outputs": {
                "addressFamily": {
                    "$ref": "#/types/aws-native:ec2:PrefixListAddressFamily",
                    "description": "Ip Version of Prefix List."
                },
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Prefix List."
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:PrefixListEntry"
                    },
                    "description": "Entries of Prefix List."
                },
                "maxEntries": {
                    "type": "integer",
                    "description": "Max Entries of Prefix List."
                },
                "ownerId": {
                    "type": "string",
                    "description": "Owner Id of Prefix List."
                },
                "prefixListId": {
                    "type": "string",
                    "description": "Id of Prefix List."
                },
                "prefixListName": {
                    "type": "string",
                    "description": "Name of Prefix List."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:PrefixListTag"
                    },
                    "description": "Tags for Prefix List"
                },
                "version": {
                    "type": "integer",
                    "description": "Version of Prefix List."
                }
            },
            "required": [
                "addressFamily",
                "maxEntries",
                "prefixListName"
            ]
        },
        "aws-native:ec2:SpotFleet": {
            "cf": "AWS::EC2::SpotFleet",
            "inputs": {
                "spotFleetRequestConfigData": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetRequestConfigData"
                }
            },
            "outputs": {
                "spotFleetRequestConfigData": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetRequestConfigData"
                }
            },
            "required": [
                "spotFleetRequestConfigData"
            ],
            "createOnly": [
                "spotFleetRequestConfigData/AllocationStrategy",
                "spotFleetRequestConfigData/IamFleetRole",
                "spotFleetRequestConfigData/InstanceInterruptionBehavior",
                "spotFleetRequestConfigData/InstancePoolsToUseCount",
                "spotFleetRequestConfigData/LaunchSpecifications",
                "spotFleetRequestConfigData/LaunchTemplateConfigs",
                "spotFleetRequestConfigData/LoadBalancersConfig",
                "spotFleetRequestConfigData/OnDemandAllocationStrategy",
                "spotFleetRequestConfigData/OnDemandMaxTotalPrice",
                "spotFleetRequestConfigData/OnDemandTargetCapacity",
                "spotFleetRequestConfigData/ReplaceUnhealthyInstances",
                "spotFleetRequestConfigData/SpotMaintenanceStrategies",
                "spotFleetRequestConfigData/SpotMaxTotalPrice",
                "spotFleetRequestConfigData/SpotPrice",
                "spotFleetRequestConfigData/TerminateInstancesWithExpiration",
                "spotFleetRequestConfigData/Type",
                "spotFleetRequestConfigData/ValidFrom",
                "spotFleetRequestConfigData/ValidUntil"
            ]
        },
        "aws-native:ec2:TransitGateway": {
            "cf": "AWS::EC2::TransitGateway",
            "inputs": {
                "amazonSideAsn": {
                    "type": "integer"
                },
                "associationDefaultRouteTableId": {
                    "type": "string"
                },
                "autoAcceptSharedAttachments": {
                    "type": "string"
                },
                "defaultRouteTableAssociation": {
                    "type": "string"
                },
                "defaultRouteTablePropagation": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dnsSupport": {
                    "type": "string"
                },
                "multicastSupport": {
                    "type": "string"
                },
                "propagationDefaultRouteTableId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayTag"
                    }
                },
                "transitGatewayCidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vpnEcmpSupport": {
                    "type": "string"
                }
            },
            "outputs": {
                "amazonSideAsn": {
                    "type": "integer"
                },
                "associationDefaultRouteTableId": {
                    "type": "string"
                },
                "autoAcceptSharedAttachments": {
                    "type": "string"
                },
                "defaultRouteTableAssociation": {
                    "type": "string"
                },
                "defaultRouteTablePropagation": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dnsSupport": {
                    "type": "string"
                },
                "multicastSupport": {
                    "type": "string"
                },
                "propagationDefaultRouteTableId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayTag"
                    }
                },
                "transitGatewayCidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vpnEcmpSupport": {
                    "type": "string"
                }
            },
            "createOnly": [
                "amazonSideAsn",
                "multicastSupport"
            ]
        },
        "aws-native:ec2:TransitGatewayConnect": {
            "cf": "AWS::EC2::TransitGatewayConnect",
            "inputs": {
                "options": {
                    "$ref": "#/types/aws-native:ec2:TransitGatewayConnectTransitGatewayConnectOptions",
                    "description": "The Connect attachment options."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayConnectTag"
                    },
                    "description": "The tags for the attachment."
                },
                "transportTransitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The ID of the attachment from which the Connect attachment was created."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The creation time."
                },
                "options": {
                    "$ref": "#/types/aws-native:ec2:TransitGatewayConnectTransitGatewayConnectOptions",
                    "description": "The Connect attachment options."
                },
                "state": {
                    "type": "string",
                    "description": "The state of the attachment."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayConnectTag"
                    },
                    "description": "The tags for the attachment."
                },
                "transitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The ID of the Connect attachment."
                },
                "transitGatewayId": {
                    "type": "string",
                    "description": "The ID of the transit gateway."
                },
                "transportTransitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The ID of the attachment from which the Connect attachment was created."
                }
            },
            "required": [
                "options",
                "transportTransitGatewayAttachmentId"
            ],
            "createOnly": [
                "options",
                "transportTransitGatewayAttachmentId"
            ]
        },
        "aws-native:ec2:TransitGatewayMulticastDomain": {
            "cf": "AWS::EC2::TransitGatewayMulticastDomain",
            "inputs": {
                "options": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The options for the transit gateway multicast domain."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayMulticastDomainTag"
                    },
                    "description": "The tags for the transit gateway multicast domain."
                },
                "transitGatewayId": {
                    "type": "string",
                    "description": "The ID of the transit gateway."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The time the transit gateway multicast domain was created."
                },
                "options": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The options for the transit gateway multicast domain."
                },
                "state": {
                    "type": "string",
                    "description": "The state of the transit gateway multicast domain."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayMulticastDomainTag"
                    },
                    "description": "The tags for the transit gateway multicast domain."
                },
                "transitGatewayId": {
                    "type": "string",
                    "description": "The ID of the transit gateway."
                },
                "transitGatewayMulticastDomainArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the transit gateway multicast domain."
                },
                "transitGatewayMulticastDomainId": {
                    "type": "string",
                    "description": "The ID of the transit gateway multicast domain."
                }
            },
            "required": [
                "transitGatewayId"
            ],
            "createOnly": [
                "transitGatewayId"
            ]
        },
        "aws-native:ec2:TransitGatewayMulticastDomainAssociation": {
            "cf": "AWS::EC2::TransitGatewayMulticastDomainAssociation",
            "inputs": {
                "subnetId": {
                    "type": "string",
                    "description": "The IDs of the subnets to associate with the transit gateway multicast domain."
                },
                "transitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The ID of the transit gateway attachment."
                },
                "transitGatewayMulticastDomainId": {
                    "type": "string",
                    "description": "The ID of the transit gateway multicast domain."
                }
            },
            "outputs": {
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource, for example a VPC attachment."
                },
                "state": {
                    "type": "string",
                    "description": "The state of the subnet association."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The IDs of the subnets to associate with the transit gateway multicast domain."
                },
                "transitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The ID of the transit gateway attachment."
                },
                "transitGatewayMulticastDomainId": {
                    "type": "string",
                    "description": "The ID of the transit gateway multicast domain."
                }
            },
            "required": [
                "subnetId",
                "transitGatewayAttachmentId",
                "transitGatewayMulticastDomainId"
            ],
            "createOnly": [
                "subnetId",
                "transitGatewayAttachmentId",
                "transitGatewayMulticastDomainId"
            ]
        },
        "aws-native:ec2:TransitGatewayMulticastGroupMember": {
            "cf": "AWS::EC2::TransitGatewayMulticastGroupMember",
            "inputs": {
                "groupIpAddress": {
                    "type": "string",
                    "description": "The IP address assigned to the transit gateway multicast group."
                },
                "networkInterfaceId": {
                    "type": "string",
                    "description": "The ID of the transit gateway attachment."
                },
                "transitGatewayMulticastDomainId": {
                    "type": "string",
                    "description": "The ID of the transit gateway multicast domain."
                }
            },
            "outputs": {
                "groupIpAddress": {
                    "type": "string",
                    "description": "The IP address assigned to the transit gateway multicast group."
                },
                "groupMember": {
                    "type": "boolean",
                    "description": "Indicates that the resource is a transit gateway multicast group member."
                },
                "groupSource": {
                    "type": "boolean",
                    "description": "Indicates that the resource is a transit gateway multicast group member."
                },
                "memberType": {
                    "type": "string",
                    "description": "The member type (for example, static)."
                },
                "networkInterfaceId": {
                    "type": "string",
                    "description": "The ID of the transit gateway attachment."
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource, for example a VPC attachment."
                },
                "sourceType": {
                    "type": "string",
                    "description": "The source type."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet."
                },
                "transitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The ID of the transit gateway attachment."
                },
                "transitGatewayMulticastDomainId": {
                    "type": "string",
                    "description": "The ID of the transit gateway multicast domain."
                }
            },
            "required": [
                "groupIpAddress",
                "networkInterfaceId",
                "transitGatewayMulticastDomainId"
            ],
            "createOnly": [
                "groupIpAddress",
                "networkInterfaceId",
                "transitGatewayMulticastDomainId"
            ]
        },
        "aws-native:ec2:TransitGatewayMulticastGroupSource": {
            "cf": "AWS::EC2::TransitGatewayMulticastGroupSource",
            "inputs": {
                "groupIpAddress": {
                    "type": "string",
                    "description": "The IP address assigned to the transit gateway multicast group."
                },
                "networkInterfaceId": {
                    "type": "string",
                    "description": "The ID of the transit gateway attachment."
                },
                "transitGatewayMulticastDomainId": {
                    "type": "string",
                    "description": "The ID of the transit gateway multicast domain."
                }
            },
            "outputs": {
                "groupIpAddress": {
                    "type": "string",
                    "description": "The IP address assigned to the transit gateway multicast group."
                },
                "groupMember": {
                    "type": "boolean",
                    "description": "Indicates that the resource is a transit gateway multicast group member."
                },
                "groupSource": {
                    "type": "boolean",
                    "description": "Indicates that the resource is a transit gateway multicast group member."
                },
                "memberType": {
                    "type": "string",
                    "description": "The member type (for example, static)."
                },
                "networkInterfaceId": {
                    "type": "string",
                    "description": "The ID of the transit gateway attachment."
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource, for example a VPC attachment."
                },
                "sourceType": {
                    "type": "string",
                    "description": "The source type."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet."
                },
                "transitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The ID of the transit gateway attachment."
                },
                "transitGatewayMulticastDomainId": {
                    "type": "string",
                    "description": "The ID of the transit gateway multicast domain."
                }
            },
            "required": [
                "groupIpAddress",
                "networkInterfaceId",
                "transitGatewayMulticastDomainId"
            ],
            "createOnly": [
                "groupIpAddress",
                "networkInterfaceId",
                "transitGatewayMulticastDomainId"
            ]
        },
        "aws-native:ec2:TransitGatewayPeeringAttachment": {
            "cf": "AWS::EC2::TransitGatewayPeeringAttachment",
            "inputs": {
                "peerAccountId": {
                    "type": "string",
                    "description": "The ID of the peer account"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "Peer Region"
                },
                "peerTransitGatewayId": {
                    "type": "string",
                    "description": "The ID of the peer transit gateway."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayPeeringAttachmentTag"
                    },
                    "description": "The tags for the transit gateway peering attachment."
                },
                "transitGatewayId": {
                    "type": "string",
                    "description": "The ID of the transit gateway."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The time the transit gateway peering attachment was created."
                },
                "peerAccountId": {
                    "type": "string",
                    "description": "The ID of the peer account"
                },
                "peerRegion": {
                    "type": "string",
                    "description": "Peer Region"
                },
                "peerTransitGatewayId": {
                    "type": "string",
                    "description": "The ID of the peer transit gateway."
                },
                "state": {
                    "type": "string",
                    "description": "The state of the transit gateway peering attachment. Note that the initiating state has been deprecated."
                },
                "status": {
                    "$ref": "#/types/aws-native:ec2:TransitGatewayPeeringAttachmentPeeringAttachmentStatus",
                    "description": "The status of the transit gateway peering attachment."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayPeeringAttachmentTag"
                    },
                    "description": "The tags for the transit gateway peering attachment."
                },
                "transitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The ID of the transit gateway peering attachment."
                },
                "transitGatewayId": {
                    "type": "string",
                    "description": "The ID of the transit gateway."
                }
            },
            "required": [
                "peerAccountId",
                "peerRegion",
                "peerTransitGatewayId",
                "transitGatewayId"
            ],
            "createOnly": [
                "peerAccountId",
                "peerRegion",
                "peerTransitGatewayId",
                "transitGatewayId"
            ]
        },
        "aws-native:ec2:TransitGatewayVpcAttachment": {
            "cf": "AWS::EC2::TransitGatewayVpcAttachment",
            "inputs": {
                "addSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "options": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The options for the transit gateway vpc attachment."
                },
                "removeSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayVpcAttachmentTag"
                    }
                },
                "transitGatewayId": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "outputs": {
                "addSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "options": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The options for the transit gateway vpc attachment."
                },
                "removeSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:TransitGatewayVpcAttachmentTag"
                    }
                },
                "transitGatewayId": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "createOnly": [
                "subnetIds",
                "transitGatewayId",
                "vpcId"
            ]
        },
        "aws-native:ec2:VPC": {
            "cf": "AWS::EC2::VPC",
            "inputs": {
                "cidrBlock": {
                    "type": "string"
                },
                "enableDnsHostnames": {
                    "type": "boolean"
                },
                "enableDnsSupport": {
                    "type": "boolean"
                },
                "instanceTenancy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:VPCTag"
                    }
                }
            },
            "outputs": {
                "cidrBlock": {
                    "type": "string"
                },
                "cidrBlockAssociations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultNetworkAcl": {
                    "type": "string"
                },
                "defaultSecurityGroup": {
                    "type": "string"
                },
                "enableDnsHostnames": {
                    "type": "boolean"
                },
                "enableDnsSupport": {
                    "type": "boolean"
                },
                "instanceTenancy": {
                    "type": "string"
                },
                "ipv6CidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:VPCTag"
                    }
                }
            },
            "required": [
                "cidrBlock"
            ],
            "createOnly": [
                "cidrBlock"
            ]
        },
        "aws-native:ecr:RegistryPolicy": {
            "cf": "AWS::ECR::RegistryPolicy",
            "inputs": {
                "policyText": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The JSON policy text to apply to your registry. The policy text follows the same format as IAM policy text. For more information, see Registry permissions (https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html) in the Amazon Elastic Container Registry User Guide."
                }
            },
            "outputs": {
                "policyText": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The JSON policy text to apply to your registry. The policy text follows the same format as IAM policy text. For more information, see Registry permissions (https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html) in the Amazon Elastic Container Registry User Guide."
                },
                "registryId": {
                    "type": "string"
                }
            },
            "required": [
                "policyText"
            ]
        },
        "aws-native:ecr:ReplicationConfiguration": {
            "cf": "AWS::ECR::ReplicationConfiguration",
            "inputs": {
                "replicationConfiguration": {
                    "$ref": "#/types/aws-native:ecr:ReplicationConfigurationReplicationConfiguration",
                    "language": {
                        "csharp": {
                            "name": "ReplicationConfigurationValue"
                        }
                    }
                }
            },
            "outputs": {
                "registryId": {
                    "type": "string",
                    "description": "The RegistryId associated with the aws account."
                },
                "replicationConfiguration": {
                    "$ref": "#/types/aws-native:ecr:ReplicationConfigurationReplicationConfiguration",
                    "language": {
                        "csharp": {
                            "name": "ReplicationConfigurationValue"
                        }
                    }
                }
            },
            "required": [
                "replicationConfiguration"
            ]
        },
        "aws-native:ecr:Repository": {
            "cf": "AWS::ECR::Repository",
            "inputs": {
                "encryptionConfiguration": {
                    "$ref": "#/types/aws-native:ecr:RepositoryEncryptionConfiguration"
                },
                "imageScanningConfiguration": {
                    "$ref": "#/types/aws-native:ecr:RepositoryImageScanningConfiguration"
                },
                "imageTagMutability": {
                    "$ref": "#/types/aws-native:ecr:RepositoryImageTagMutability",
                    "description": "The image tag mutability setting for the repository."
                },
                "lifecyclePolicy": {
                    "$ref": "#/types/aws-native:ecr:RepositoryLifecyclePolicy"
                },
                "repositoryName": {
                    "type": "string",
                    "description": "The name to use for the repository. The repository name may be specified on its own (such as nginx-web-app) or it can be prepended with a namespace to group the repository into a category (such as project-a/nginx-web-app). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the repository name. For more information, see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html."
                },
                "repositoryPolicyText": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html in the Amazon Elastic Container Registry User Guide. "
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecr:RepositoryTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "encryptionConfiguration": {
                    "$ref": "#/types/aws-native:ecr:RepositoryEncryptionConfiguration"
                },
                "imageScanningConfiguration": {
                    "$ref": "#/types/aws-native:ecr:RepositoryImageScanningConfiguration"
                },
                "imageTagMutability": {
                    "$ref": "#/types/aws-native:ecr:RepositoryImageTagMutability",
                    "description": "The image tag mutability setting for the repository."
                },
                "lifecyclePolicy": {
                    "$ref": "#/types/aws-native:ecr:RepositoryLifecyclePolicy"
                },
                "repositoryName": {
                    "type": "string",
                    "description": "The name to use for the repository. The repository name may be specified on its own (such as nginx-web-app) or it can be prepended with a namespace to group the repository into a category (such as project-a/nginx-web-app). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the repository name. For more information, see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html."
                },
                "repositoryPolicyText": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html in the Amazon Elastic Container Registry User Guide. "
                },
                "repositoryUri": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecr:RepositoryTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "createOnly": [
                "encryptionConfiguration",
                "encryptionConfiguration/EncryptionType",
                "encryptionConfiguration/KmsKey",
                "repositoryName"
            ]
        },
        "aws-native:ecs:CapacityProvider": {
            "cf": "AWS::ECS::CapacityProvider",
            "inputs": {
                "autoScalingGroupProvider": {
                    "$ref": "#/types/aws-native:ecs:CapacityProviderAutoScalingGroupProvider"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:CapacityProviderTag"
                    }
                }
            },
            "outputs": {
                "autoScalingGroupProvider": {
                    "$ref": "#/types/aws-native:ecs:CapacityProviderAutoScalingGroupProvider"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:CapacityProviderTag"
                    }
                }
            },
            "required": [
                "autoScalingGroupProvider"
            ],
            "createOnly": [
                "autoScalingGroupProvider/AutoScalingGroupArn",
                "name"
            ]
        },
        "aws-native:ecs:Cluster": {
            "cf": "AWS::ECS::Cluster",
            "inputs": {
                "capacityProviders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clusterName": {
                    "type": "string",
                    "description": "A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name."
                },
                "clusterSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ClusterClusterSettings"
                    }
                },
                "configuration": {
                    "$ref": "#/types/aws-native:ecs:ClusterClusterConfiguration"
                },
                "defaultCapacityProviderStrategy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ClusterCapacityProviderStrategyItem"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ClusterTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Amazon ECS cluster, such as arn:aws:ecs:us-east-2:123456789012:cluster/MyECSCluster."
                },
                "capacityProviders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clusterName": {
                    "type": "string",
                    "description": "A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name."
                },
                "clusterSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ClusterClusterSettings"
                    }
                },
                "configuration": {
                    "$ref": "#/types/aws-native:ecs:ClusterClusterConfiguration"
                },
                "defaultCapacityProviderStrategy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ClusterCapacityProviderStrategyItem"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ClusterTag"
                    }
                }
            },
            "createOnly": [
                "clusterName"
            ]
        },
        "aws-native:ecs:ClusterCapacityProviderAssociations": {
            "cf": "AWS::ECS::ClusterCapacityProviderAssociations",
            "inputs": {
                "capacityProviders": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/types/aws-native:ecs:ClusterCapacityProviderAssociationsCapacityProvider"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "cluster": {
                    "type": "string"
                },
                "defaultCapacityProviderStrategy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ClusterCapacityProviderAssociationsCapacityProviderStrategy"
                    }
                }
            },
            "outputs": {
                "capacityProviders": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/types/aws-native:ecs:ClusterCapacityProviderAssociationsCapacityProvider"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "cluster": {
                    "type": "string"
                },
                "defaultCapacityProviderStrategy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ClusterCapacityProviderAssociationsCapacityProviderStrategy"
                    }
                }
            },
            "required": [
                "capacityProviders",
                "cluster",
                "defaultCapacityProviderStrategy"
            ],
            "createOnly": [
                "cluster"
            ]
        },
        "aws-native:ecs:PrimaryTaskSet": {
            "cf": "AWS::ECS::PrimaryTaskSet",
            "inputs": {
                "cluster": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in."
                },
                "service": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the service to create the task set in."
                },
                "taskSetId": {
                    "type": "string",
                    "description": "The ID or full Amazon Resource Name (ARN) of the task set."
                }
            },
            "outputs": {
                "cluster": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in."
                },
                "service": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the service to create the task set in."
                },
                "taskSetId": {
                    "type": "string",
                    "description": "The ID or full Amazon Resource Name (ARN) of the task set."
                }
            },
            "required": [
                "cluster",
                "service",
                "taskSetId"
            ],
            "createOnly": [
                "cluster",
                "service"
            ]
        },
        "aws-native:ecs:Service": {
            "cf": "AWS::ECS::Service",
            "inputs": {
                "capacityProviderStrategy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServiceCapacityProviderStrategyItem"
                    }
                },
                "cluster": {
                    "type": "string"
                },
                "deploymentConfiguration": {
                    "$ref": "#/types/aws-native:ecs:ServiceDeploymentConfiguration"
                },
                "deploymentController": {
                    "$ref": "#/types/aws-native:ecs:ServiceDeploymentController"
                },
                "desiredCount": {
                    "type": "integer"
                },
                "enableECSManagedTags": {
                    "type": "boolean"
                },
                "enableExecuteCommand": {
                    "type": "boolean"
                },
                "healthCheckGracePeriodSeconds": {
                    "type": "integer"
                },
                "launchType": {
                    "$ref": "#/types/aws-native:ecs:ServiceLaunchType"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServiceLoadBalancer"
                    }
                },
                "networkConfiguration": {
                    "$ref": "#/types/aws-native:ecs:ServiceNetworkConfiguration"
                },
                "placementConstraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServicePlacementConstraint"
                    }
                },
                "placementStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServicePlacementStrategy"
                    }
                },
                "platformVersion": {
                    "type": "string"
                },
                "propagateTags": {
                    "$ref": "#/types/aws-native:ecs:ServicePropagateTags"
                },
                "role": {
                    "type": "string"
                },
                "schedulingStrategy": {
                    "$ref": "#/types/aws-native:ecs:ServiceSchedulingStrategy"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceRegistries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServiceServiceRegistry"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServiceTag"
                    }
                },
                "taskDefinition": {
                    "type": "string"
                }
            },
            "outputs": {
                "capacityProviderStrategy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServiceCapacityProviderStrategyItem"
                    }
                },
                "cluster": {
                    "type": "string"
                },
                "deploymentConfiguration": {
                    "$ref": "#/types/aws-native:ecs:ServiceDeploymentConfiguration"
                },
                "deploymentController": {
                    "$ref": "#/types/aws-native:ecs:ServiceDeploymentController"
                },
                "desiredCount": {
                    "type": "integer"
                },
                "enableECSManagedTags": {
                    "type": "boolean"
                },
                "enableExecuteCommand": {
                    "type": "boolean"
                },
                "healthCheckGracePeriodSeconds": {
                    "type": "integer"
                },
                "launchType": {
                    "$ref": "#/types/aws-native:ecs:ServiceLaunchType"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServiceLoadBalancer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "networkConfiguration": {
                    "$ref": "#/types/aws-native:ecs:ServiceNetworkConfiguration"
                },
                "placementConstraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServicePlacementConstraint"
                    }
                },
                "placementStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServicePlacementStrategy"
                    }
                },
                "platformVersion": {
                    "type": "string"
                },
                "propagateTags": {
                    "$ref": "#/types/aws-native:ecs:ServicePropagateTags"
                },
                "role": {
                    "type": "string"
                },
                "schedulingStrategy": {
                    "$ref": "#/types/aws-native:ecs:ServiceSchedulingStrategy"
                },
                "serviceArn": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceRegistries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServiceServiceRegistry"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:ServiceTag"
                    }
                },
                "taskDefinition": {
                    "type": "string"
                }
            },
            "createOnly": [
                "cluster",
                "deploymentController",
                "enableECSManagedTags",
                "launchType",
                "loadBalancers",
                "placementConstraints",
                "placementStrategies",
                "propagateTags",
                "role",
                "schedulingStrategy",
                "serviceName",
                "serviceRegistries"
            ]
        },
        "aws-native:ecs:TaskDefinition": {
            "cf": "AWS::ECS::TaskDefinition",
            "inputs": {
                "containerDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionContainerDefinition"
                    }
                },
                "cpu": {
                    "type": "string"
                },
                "ephemeralStorage": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionEphemeralStorage"
                },
                "executionRoleArn": {
                    "type": "string"
                },
                "family": {
                    "type": "string"
                },
                "inferenceAccelerators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionInferenceAccelerator"
                    }
                },
                "ipcMode": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "networkMode": {
                    "type": "string"
                },
                "pidMode": {
                    "type": "string"
                },
                "placementConstraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionTaskDefinitionPlacementConstraint"
                    }
                },
                "proxyConfiguration": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionProxyConfiguration"
                },
                "requiresCompatibilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionTag"
                    }
                },
                "taskRoleArn": {
                    "type": "string"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionVolume"
                    }
                }
            },
            "outputs": {
                "containerDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionContainerDefinition"
                    }
                },
                "cpu": {
                    "type": "string"
                },
                "ephemeralStorage": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionEphemeralStorage"
                },
                "executionRoleArn": {
                    "type": "string"
                },
                "family": {
                    "type": "string"
                },
                "inferenceAccelerators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionInferenceAccelerator"
                    }
                },
                "ipcMode": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "networkMode": {
                    "type": "string"
                },
                "pidMode": {
                    "type": "string"
                },
                "placementConstraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionTaskDefinitionPlacementConstraint"
                    }
                },
                "proxyConfiguration": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionProxyConfiguration"
                },
                "requiresCompatibilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionTag"
                    }
                },
                "taskDefinitionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Amazon ECS task definition"
                },
                "taskRoleArn": {
                    "type": "string"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionVolume"
                    }
                }
            },
            "createOnly": [
                "containerDefinitions",
                "cpu",
                "ephemeralStorage",
                "executionRoleArn",
                "family",
                "inferenceAccelerators",
                "ipcMode",
                "memory",
                "networkMode",
                "pidMode",
                "placementConstraints",
                "proxyConfiguration",
                "requiresCompatibilities",
                "taskRoleArn",
                "volumes"
            ]
        },
        "aws-native:ecs:TaskSet": {
            "cf": "AWS::ECS::TaskSet",
            "inputs": {
                "cluster": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in."
                },
                "externalId": {
                    "type": "string",
                    "description": "An optional non-unique tag that identifies this task set in external systems. If the task set is associated with a service discovery registry, the tasks in this task set will have the ECS_TASK_SET_EXTERNAL_ID AWS Cloud Map attribute set to the provided value. "
                },
                "launchType": {
                    "$ref": "#/types/aws-native:ecs:TaskSetLaunchType",
                    "description": "The launch type that new tasks in the task set will use. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html in the Amazon Elastic Container Service Developer Guide. "
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskSetLoadBalancer"
                    }
                },
                "networkConfiguration": {
                    "$ref": "#/types/aws-native:ecs:TaskSetNetworkConfiguration"
                },
                "platformVersion": {
                    "type": "string",
                    "description": "The platform version that the tasks in the task set should use. A platform version is specified only for tasks using the Fargate launch type. If one isn't specified, the LATEST platform version is used by default."
                },
                "scale": {
                    "$ref": "#/types/aws-native:ecs:TaskSetScale",
                    "description": "A floating-point percentage of the desired number of tasks to place and keep running in the task set."
                },
                "service": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the service to create the task set in."
                },
                "serviceRegistries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskSetServiceRegistry"
                    },
                    "description": "The details of the service discovery registries to assign to this task set. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html."
                },
                "taskDefinition": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the task definition for the tasks in the task set to use."
                }
            },
            "outputs": {
                "cluster": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in."
                },
                "externalId": {
                    "type": "string",
                    "description": "An optional non-unique tag that identifies this task set in external systems. If the task set is associated with a service discovery registry, the tasks in this task set will have the ECS_TASK_SET_EXTERNAL_ID AWS Cloud Map attribute set to the provided value. "
                },
                "launchType": {
                    "$ref": "#/types/aws-native:ecs:TaskSetLaunchType",
                    "description": "The launch type that new tasks in the task set will use. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html in the Amazon Elastic Container Service Developer Guide. "
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskSetLoadBalancer"
                    }
                },
                "networkConfiguration": {
                    "$ref": "#/types/aws-native:ecs:TaskSetNetworkConfiguration"
                },
                "platformVersion": {
                    "type": "string",
                    "description": "The platform version that the tasks in the task set should use. A platform version is specified only for tasks using the Fargate launch type. If one isn't specified, the LATEST platform version is used by default."
                },
                "scale": {
                    "$ref": "#/types/aws-native:ecs:TaskSetScale",
                    "description": "A floating-point percentage of the desired number of tasks to place and keep running in the task set."
                },
                "service": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the service to create the task set in."
                },
                "serviceRegistries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskSetServiceRegistry"
                    },
                    "description": "The details of the service discovery registries to assign to this task set. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html."
                },
                "taskDefinition": {
                    "type": "string",
                    "description": "The short name or full Amazon Resource Name (ARN) of the task definition for the tasks in the task set to use."
                }
            },
            "required": [
                "cluster",
                "service",
                "taskDefinition"
            ],
            "createOnly": [
                "cluster",
                "externalId",
                "launchType",
                "loadBalancers",
                "networkConfiguration",
                "platformVersion",
                "service",
                "serviceRegistries",
                "taskDefinition"
            ]
        },
        "aws-native:efs:AccessPoint": {
            "cf": "AWS::EFS::AccessPoint",
            "inputs": {
                "accessPointTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:efs:AccessPointAccessPointTag"
                    }
                },
                "clientToken": {
                    "type": "string",
                    "description": "(optional) A string of up to 64 ASCII characters that Amazon EFS uses to ensure idempotent creation."
                },
                "fileSystemId": {
                    "type": "string",
                    "description": "The ID of the EFS file system that the access point provides access to."
                },
                "posixUser": {
                    "$ref": "#/types/aws-native:efs:AccessPointPosixUser",
                    "description": "The operating system user and group applied to all file system requests made using the access point."
                },
                "rootDirectory": {
                    "$ref": "#/types/aws-native:efs:AccessPointRootDirectory",
                    "description": "Specifies the directory on the Amazon EFS file system that the access point exposes as the root directory of your file system to NFS clients using the access point. The clients using the access point can only access the root directory and below. If the RootDirectory\u003ePath specified does not exist, EFS creates it and applies the CreationInfo settings when a client connects to an access point. When specifying a RootDirectory, you need to provide the Path, and the CreationInfo is optional."
                }
            },
            "outputs": {
                "accessPointId": {
                    "type": "string"
                },
                "accessPointTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:efs:AccessPointAccessPointTag"
                    }
                },
                "arn": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string",
                    "description": "(optional) A string of up to 64 ASCII characters that Amazon EFS uses to ensure idempotent creation."
                },
                "fileSystemId": {
                    "type": "string",
                    "description": "The ID of the EFS file system that the access point provides access to."
                },
                "posixUser": {
                    "$ref": "#/types/aws-native:efs:AccessPointPosixUser",
                    "description": "The operating system user and group applied to all file system requests made using the access point."
                },
                "rootDirectory": {
                    "$ref": "#/types/aws-native:efs:AccessPointRootDirectory",
                    "description": "Specifies the directory on the Amazon EFS file system that the access point exposes as the root directory of your file system to NFS clients using the access point. The clients using the access point can only access the root directory and below. If the RootDirectory\u003ePath specified does not exist, EFS creates it and applies the CreationInfo settings when a client connects to an access point. When specifying a RootDirectory, you need to provide the Path, and the CreationInfo is optional."
                }
            },
            "required": [
                "fileSystemId"
            ],
            "createOnly": [
                "clientToken",
                "creationInfo",
                "creationInfo/OwnerGid",
                "creationInfo/OwnerUid",
                "creationInfo/Permissions",
                "fileSystemId",
                "posixUser",
                "posixUser/Gid",
                "posixUser/SecondaryGids",
                "posixUser/Uid",
                "rootDirectory",
                "rootDirectory/CreationInfo",
                "rootDirectory/Path"
            ]
        },
        "aws-native:efs:FileSystem": {
            "cf": "AWS::EFS::FileSystem",
            "inputs": {
                "availabilityZoneName": {
                    "type": "string"
                },
                "backupPolicy": {
                    "$ref": "#/types/aws-native:efs:FileSystemBackupPolicy"
                },
                "bypassPolicyLockoutSafetyCheck": {
                    "type": "boolean",
                    "description": "Whether to bypass the FileSystemPolicy lockout safety check. The policy lockout safety check determines whether the policy in the request will prevent the principal making the request to be locked out from making future PutFileSystemPolicy requests on the file system. Set BypassPolicyLockoutSafetyCheck to True only when you intend to prevent the principal that is making the request from making a subsequent PutFileSystemPolicy request on the file system. Defaults to false"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "fileSystemPolicy": {
                    "$ref": "pulumi.json#/Any"
                },
                "fileSystemTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:efs:FileSystemElasticFileSystemTag"
                    }
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "lifecyclePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:efs:FileSystemLifecyclePolicy"
                    }
                },
                "performanceMode": {
                    "type": "string"
                },
                "provisionedThroughputInMibps": {
                    "type": "number"
                },
                "throughputMode": {
                    "type": "string"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "availabilityZoneName": {
                    "type": "string"
                },
                "backupPolicy": {
                    "$ref": "#/types/aws-native:efs:FileSystemBackupPolicy"
                },
                "bypassPolicyLockoutSafetyCheck": {
                    "type": "boolean",
                    "description": "Whether to bypass the FileSystemPolicy lockout safety check. The policy lockout safety check determines whether the policy in the request will prevent the principal making the request to be locked out from making future PutFileSystemPolicy requests on the file system. Set BypassPolicyLockoutSafetyCheck to True only when you intend to prevent the principal that is making the request from making a subsequent PutFileSystemPolicy request on the file system. Defaults to false"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "fileSystemId": {
                    "type": "string"
                },
                "fileSystemPolicy": {
                    "$ref": "pulumi.json#/Any"
                },
                "fileSystemTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:efs:FileSystemElasticFileSystemTag"
                    }
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "lifecyclePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:efs:FileSystemLifecyclePolicy"
                    }
                },
                "performanceMode": {
                    "type": "string"
                },
                "provisionedThroughputInMibps": {
                    "type": "number"
                },
                "throughputMode": {
                    "type": "string"
                }
            },
            "createOnly": [
                "availabilityZoneName",
                "encrypted",
                "kmsKeyId",
                "performanceMode"
            ]
        },
        "aws-native:efs:MountTarget": {
            "cf": "AWS::EFS::MountTarget",
            "inputs": {
                "fileSystemId": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "outputs": {
                "fileSystemId": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "required": [
                "fileSystemId",
                "securityGroups",
                "subnetId"
            ],
            "createOnly": [
                "fileSystemId",
                "ipAddress",
                "subnetId"
            ]
        },
        "aws-native:eks:Addon": {
            "cf": "AWS::EKS::Addon",
            "inputs": {
                "addonName": {
                    "type": "string",
                    "description": "Name of Addon"
                },
                "addonVersion": {
                    "type": "string",
                    "description": "Version of Addon"
                },
                "clusterName": {
                    "type": "string",
                    "description": "Name of Cluster"
                },
                "resolveConflicts": {
                    "$ref": "#/types/aws-native:eks:AddonResolveConflicts",
                    "description": "Resolve parameter value conflicts"
                },
                "serviceAccountRoleArn": {
                    "type": "string",
                    "description": "IAM role to bind to the add-on's service account"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:eks:AddonTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "addonName": {
                    "type": "string",
                    "description": "Name of Addon"
                },
                "addonVersion": {
                    "type": "string",
                    "description": "Version of Addon"
                },
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN) of the add-on"
                },
                "clusterName": {
                    "type": "string",
                    "description": "Name of Cluster"
                },
                "resolveConflicts": {
                    "$ref": "#/types/aws-native:eks:AddonResolveConflicts",
                    "description": "Resolve parameter value conflicts"
                },
                "serviceAccountRoleArn": {
                    "type": "string",
                    "description": "IAM role to bind to the add-on's service account"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:eks:AddonTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "addonName",
                "clusterName"
            ],
            "createOnly": [
                "addonName",
                "clusterName"
            ]
        },
        "aws-native:eks:Cluster": {
            "cf": "AWS::EKS::Cluster",
            "inputs": {
                "encryptionConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:eks:ClusterEncryptionConfig"
                    }
                },
                "kubernetesNetworkConfig": {
                    "$ref": "#/types/aws-native:eks:ClusterKubernetesNetworkConfig"
                },
                "name": {
                    "type": "string"
                },
                "resourcesVpcConfig": {
                    "$ref": "#/types/aws-native:eks:ClusterResourcesVpcConfig"
                },
                "roleArn": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "certificateAuthorityData": {
                    "type": "string"
                },
                "clusterSecurityGroupId": {
                    "type": "string"
                },
                "encryptionConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:eks:ClusterEncryptionConfig"
                    }
                },
                "encryptionConfigKeyArn": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "kubernetesNetworkConfig": {
                    "$ref": "#/types/aws-native:eks:ClusterKubernetesNetworkConfig"
                },
                "name": {
                    "type": "string"
                },
                "openIdConnectIssuerUrl": {
                    "type": "string"
                },
                "resourcesVpcConfig": {
                    "$ref": "#/types/aws-native:eks:ClusterResourcesVpcConfig"
                },
                "roleArn": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "resourcesVpcConfig",
                "roleArn"
            ],
            "createOnly": [
                "encryptionConfig",
                "kubernetesNetworkConfig",
                "name",
                "resourcesVpcConfig",
                "roleArn"
            ]
        },
        "aws-native:eks:FargateProfile": {
            "cf": "AWS::EKS::FargateProfile",
            "inputs": {
                "clusterName": {
                    "type": "string",
                    "description": "Name of the Cluster"
                },
                "fargateProfileName": {
                    "type": "string",
                    "description": "Name of FargateProfile"
                },
                "podExecutionRoleArn": {
                    "type": "string",
                    "description": "The IAM policy arn for pods"
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:eks:FargateProfileSelector"
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:eks:FargateProfileTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string",
                    "description": "Name of the Cluster"
                },
                "fargateProfileName": {
                    "type": "string",
                    "description": "Name of FargateProfile"
                },
                "podExecutionRoleArn": {
                    "type": "string",
                    "description": "The IAM policy arn for pods"
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:eks:FargateProfileSelector"
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:eks:FargateProfileTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "clusterName",
                "podExecutionRoleArn",
                "selectors"
            ],
            "createOnly": [
                "clusterName",
                "fargateProfileName",
                "podExecutionRoleArn",
                "selectors",
                "subnets"
            ]
        },
        "aws-native:elasticache:GlobalReplicationGroup": {
            "cf": "AWS::ElastiCache::GlobalReplicationGroup",
            "inputs": {
                "automaticFailoverEnabled": {
                    "type": "boolean",
                    "description": "AutomaticFailoverEnabled"
                },
                "cacheNodeType": {
                    "type": "string",
                    "description": "The cache node type of the Global Datastore"
                },
                "cacheParameterGroupName": {
                    "type": "string",
                    "description": "Cache parameter group name to use for the new engine version. This parameter cannot be modified independently."
                },
                "engineVersion": {
                    "type": "string",
                    "description": "The engine version of the Global Datastore."
                },
                "globalNodeGroupCount": {
                    "type": "integer",
                    "description": "Indicates the number of node groups in the Global Datastore."
                },
                "globalReplicationGroupDescription": {
                    "type": "string",
                    "description": "The optional description of the Global Datastore"
                },
                "globalReplicationGroupIdSuffix": {
                    "type": "string",
                    "description": "The suffix name of a Global Datastore. Amazon ElastiCache automatically applies a prefix to the Global Datastore ID when it is created. Each AWS Region has its own prefix. "
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticache:GlobalReplicationGroupGlobalReplicationGroupMember"
                    },
                    "description": "The replication groups that comprise the Global Datastore."
                },
                "regionalConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticache:GlobalReplicationGroupRegionalConfiguration"
                    },
                    "description": "Describes the replication group IDs, the AWS regions where they are stored and the shard configuration for each that comprise the Global Datastore "
                }
            },
            "outputs": {
                "automaticFailoverEnabled": {
                    "type": "boolean",
                    "description": "AutomaticFailoverEnabled"
                },
                "cacheNodeType": {
                    "type": "string",
                    "description": "The cache node type of the Global Datastore"
                },
                "cacheParameterGroupName": {
                    "type": "string",
                    "description": "Cache parameter group name to use for the new engine version. This parameter cannot be modified independently."
                },
                "engineVersion": {
                    "type": "string",
                    "description": "The engine version of the Global Datastore."
                },
                "globalNodeGroupCount": {
                    "type": "integer",
                    "description": "Indicates the number of node groups in the Global Datastore."
                },
                "globalReplicationGroupDescription": {
                    "type": "string",
                    "description": "The optional description of the Global Datastore"
                },
                "globalReplicationGroupId": {
                    "type": "string",
                    "description": "The name of the Global Datastore, it is generated by ElastiCache adding a prefix to GlobalReplicationGroupIdSuffix."
                },
                "globalReplicationGroupIdSuffix": {
                    "type": "string",
                    "description": "The suffix name of a Global Datastore. Amazon ElastiCache automatically applies a prefix to the Global Datastore ID when it is created. Each AWS Region has its own prefix. "
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticache:GlobalReplicationGroupGlobalReplicationGroupMember"
                    },
                    "description": "The replication groups that comprise the Global Datastore."
                },
                "regionalConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticache:GlobalReplicationGroupRegionalConfiguration"
                    },
                    "description": "Describes the replication group IDs, the AWS regions where they are stored and the shard configuration for each that comprise the Global Datastore "
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Global Datastore"
                }
            },
            "required": [
                "members"
            ]
        },
        "aws-native:elasticache:User": {
            "cf": "AWS::ElastiCache::User",
            "inputs": {
                "accessString": {
                    "type": "string",
                    "description": "Access permissions string used for this user account."
                },
                "engine": {
                    "$ref": "#/types/aws-native:elasticache:UserEngine",
                    "description": "Must be redis."
                },
                "noPasswordRequired": {
                    "type": "boolean",
                    "description": "Indicates a password is not required for this user account."
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Passwords used for this user account. You can create up to two passwords for each user."
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user."
                },
                "userName": {
                    "type": "string",
                    "description": "The username of the user."
                }
            },
            "outputs": {
                "accessString": {
                    "type": "string",
                    "description": "Access permissions string used for this user account."
                },
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the user account."
                },
                "engine": {
                    "$ref": "#/types/aws-native:elasticache:UserEngine",
                    "description": "Must be redis."
                },
                "noPasswordRequired": {
                    "type": "boolean",
                    "description": "Indicates a password is not required for this user account."
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Passwords used for this user account. You can create up to two passwords for each user."
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the user status. Can be \"active\", \"modifying\" or \"deleting\"."
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user."
                },
                "userName": {
                    "type": "string",
                    "description": "The username of the user."
                }
            },
            "required": [
                "engine",
                "userId",
                "userName"
            ],
            "createOnly": [
                "engine",
                "userId",
                "userName"
            ]
        },
        "aws-native:elasticache:UserGroup": {
            "cf": "AWS::ElastiCache::UserGroup",
            "inputs": {
                "engine": {
                    "$ref": "#/types/aws-native:elasticache:UserGroupEngine",
                    "description": "Must be redis."
                },
                "userGroupId": {
                    "type": "string",
                    "description": "The ID of the user group."
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users associated to this user group."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the user account."
                },
                "engine": {
                    "$ref": "#/types/aws-native:elasticache:UserGroupEngine",
                    "description": "Must be redis."
                },
                "status": {
                    "type": "string",
                    "description": "Indicates user group status. Can be \"creating\", \"active\", \"modifying\", \"deleting\"."
                },
                "userGroupId": {
                    "type": "string",
                    "description": "The ID of the user group."
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users associated to this user group."
                }
            },
            "required": [
                "engine",
                "userGroupId"
            ],
            "createOnly": [
                "engine",
                "userGroupId"
            ]
        },
        "aws-native:elasticloadbalancingv2:Listener": {
            "cf": "AWS::ElasticLoadBalancingV2::Listener",
            "inputs": {
                "alpnPolicy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "certificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerCertificate"
                    }
                },
                "defaultActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerAction"
                    }
                },
                "loadBalancerArn": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sslPolicy": {
                    "type": "string"
                }
            },
            "outputs": {
                "alpnPolicy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "certificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerCertificate"
                    }
                },
                "defaultActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerAction"
                    }
                },
                "listenerArn": {
                    "type": "string"
                },
                "loadBalancerArn": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sslPolicy": {
                    "type": "string"
                }
            },
            "required": [
                "defaultActions",
                "loadBalancerArn"
            ],
            "createOnly": [
                "loadBalancerArn"
            ]
        },
        "aws-native:elasticloadbalancingv2:ListenerRule": {
            "cf": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "inputs": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleAction"
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleRuleCondition"
                    }
                },
                "listenerArn": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "outputs": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleAction"
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleRuleCondition"
                    }
                },
                "isDefault": {
                    "type": "boolean"
                },
                "listenerArn": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "ruleArn": {
                    "type": "string"
                }
            },
            "required": [
                "actions",
                "conditions",
                "listenerArn",
                "priority"
            ],
            "createOnly": [
                "listenerArn"
            ]
        },
        "aws-native:emr:Studio": {
            "cf": "AWS::EMR::Studio",
            "inputs": {
                "authMode": {
                    "$ref": "#/types/aws-native:emr:StudioAuthMode",
                    "description": "Specifies whether the Studio authenticates users using single sign-on (SSO) or IAM. Amazon EMR Studio currently only supports SSO authentication."
                },
                "defaultS3Location": {
                    "type": "string",
                    "description": "The default Amazon S3 location to back up EMR Studio Workspaces and notebook files. A Studio user can select an alternative Amazon S3 location when creating a Workspace."
                },
                "description": {
                    "type": "string",
                    "description": "A detailed description of the Studio."
                },
                "engineSecurityGroupId": {
                    "type": "string",
                    "description": "The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by VpcId."
                },
                "idpAuthUrl": {
                    "type": "string",
                    "description": "Your identity provider's authentication endpoint. Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL."
                },
                "idpRelayStateParameterName": {
                    "type": "string",
                    "description": "The name of relay state parameter for external Identity Provider."
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name for the Amazon EMR Studio."
                },
                "serviceRole": {
                    "type": "string",
                    "description": "The IAM role that will be assumed by the Amazon EMR Studio. The service role provides a way for Amazon EMR Studio to interoperate with other AWS services."
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of up to 5 subnet IDs to associate with the Studio. The subnets must belong to the VPC specified by VpcId. Studio users can create a Workspace in any of the specified subnets."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:emr:StudioTag"
                    },
                    "description": "A list of tags to associate with the Studio. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters."
                },
                "userRole": {
                    "type": "string",
                    "description": "The IAM user role that will be assumed by users and groups logged in to a Studio. The permissions attached to this IAM role can be scoped down for each user or group using session policies."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio."
                },
                "workspaceSecurityGroupId": {
                    "type": "string",
                    "description": "The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by VpcId."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the EMR Studio."
                },
                "authMode": {
                    "$ref": "#/types/aws-native:emr:StudioAuthMode",
                    "description": "Specifies whether the Studio authenticates users using single sign-on (SSO) or IAM. Amazon EMR Studio currently only supports SSO authentication."
                },
                "defaultS3Location": {
                    "type": "string",
                    "description": "The default Amazon S3 location to back up EMR Studio Workspaces and notebook files. A Studio user can select an alternative Amazon S3 location when creating a Workspace."
                },
                "description": {
                    "type": "string",
                    "description": "A detailed description of the Studio."
                },
                "engineSecurityGroupId": {
                    "type": "string",
                    "description": "The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by VpcId."
                },
                "idpAuthUrl": {
                    "type": "string",
                    "description": "Your identity provider's authentication endpoint. Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL."
                },
                "idpRelayStateParameterName": {
                    "type": "string",
                    "description": "The name of relay state parameter for external Identity Provider."
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name for the Amazon EMR Studio."
                },
                "serviceRole": {
                    "type": "string",
                    "description": "The IAM role that will be assumed by the Amazon EMR Studio. The service role provides a way for Amazon EMR Studio to interoperate with other AWS services."
                },
                "studioId": {
                    "type": "string",
                    "description": "The ID of the EMR Studio."
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of up to 5 subnet IDs to associate with the Studio. The subnets must belong to the VPC specified by VpcId. Studio users can create a Workspace in any of the specified subnets."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:emr:StudioTag"
                    },
                    "description": "A list of tags to associate with the Studio. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters."
                },
                "url": {
                    "type": "string",
                    "description": "The unique Studio access URL."
                },
                "userRole": {
                    "type": "string",
                    "description": "The IAM user role that will be assumed by users and groups logged in to a Studio. The permissions attached to this IAM role can be scoped down for each user or group using session policies."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio."
                },
                "workspaceSecurityGroupId": {
                    "type": "string",
                    "description": "The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by VpcId."
                }
            },
            "required": [
                "authMode",
                "defaultS3Location",
                "engineSecurityGroupId",
                "name",
                "serviceRole",
                "subnetIds",
                "vpcId",
                "workspaceSecurityGroupId"
            ],
            "createOnly": [
                "authMode",
                "engineSecurityGroupId",
                "serviceRole",
                "userRole",
                "vpcId",
                "workspaceSecurityGroupId"
            ]
        },
        "aws-native:emr:StudioSessionMapping": {
            "cf": "AWS::EMR::StudioSessionMapping",
            "inputs": {
                "identityName": {
                    "type": "string",
                    "description": "The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified."
                },
                "identityType": {
                    "$ref": "#/types/aws-native:emr:StudioSessionMappingIdentityType",
                    "description": "Specifies whether the identity to map to the Studio is a user or a group."
                },
                "sessionPolicyArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. Session policies refine Studio user permissions without the need to use multiple IAM user roles."
                },
                "studioId": {
                    "type": "string",
                    "description": "The ID of the Amazon EMR Studio to which the user or group will be mapped."
                }
            },
            "outputs": {
                "identityName": {
                    "type": "string",
                    "description": "The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified."
                },
                "identityType": {
                    "$ref": "#/types/aws-native:emr:StudioSessionMappingIdentityType",
                    "description": "Specifies whether the identity to map to the Studio is a user or a group."
                },
                "sessionPolicyArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. Session policies refine Studio user permissions without the need to use multiple IAM user roles."
                },
                "studioId": {
                    "type": "string",
                    "description": "The ID of the Amazon EMR Studio to which the user or group will be mapped."
                }
            },
            "required": [
                "identityName",
                "identityType",
                "sessionPolicyArn",
                "studioId"
            ],
            "createOnly": [
                "identityName",
                "identityType",
                "studioId"
            ]
        },
        "aws-native:emrcontainers:VirtualCluster": {
            "cf": "AWS::EMRContainers::VirtualCluster",
            "inputs": {
                "containerProvider": {
                    "$ref": "#/types/aws-native:emrcontainers:VirtualClusterContainerProvider",
                    "description": "Container provider of the virtual cluster."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the virtual cluster."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:emrcontainers:VirtualClusterTag"
                    },
                    "description": "An array of key-value pairs to apply to this virtual cluster."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "containerProvider": {
                    "$ref": "#/types/aws-native:emrcontainers:VirtualClusterContainerProvider",
                    "description": "Container provider of the virtual cluster."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the virtual cluster."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:emrcontainers:VirtualClusterTag"
                    },
                    "description": "An array of key-value pairs to apply to this virtual cluster."
                }
            },
            "required": [
                "containerProvider",
                "name"
            ],
            "createOnly": [
                "containerProvider",
                "name"
            ]
        },
        "aws-native:events:ApiDestination": {
            "cf": "AWS::Events::ApiDestination",
            "inputs": {
                "connectionArn": {
                    "type": "string",
                    "description": "The arn of the connection."
                },
                "description": {
                    "type": "string"
                },
                "httpMethod": {
                    "$ref": "#/types/aws-native:events:ApiDestinationHttpMethod"
                },
                "invocationEndpoint": {
                    "type": "string",
                    "description": "Url endpoint to invoke."
                },
                "invocationRateLimitPerSecond": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the apiDestination."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The arn of the api destination."
                },
                "connectionArn": {
                    "type": "string",
                    "description": "The arn of the connection."
                },
                "description": {
                    "type": "string"
                },
                "httpMethod": {
                    "$ref": "#/types/aws-native:events:ApiDestinationHttpMethod"
                },
                "invocationEndpoint": {
                    "type": "string",
                    "description": "Url endpoint to invoke."
                },
                "invocationRateLimitPerSecond": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the apiDestination."
                }
            },
            "required": [
                "connectionArn",
                "httpMethod",
                "invocationEndpoint"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:events:Archive": {
            "cf": "AWS::Events::Archive",
            "inputs": {
                "description": {
                    "type": "string"
                },
                "eventPattern": {
                    "$ref": "pulumi.json#/Any"
                },
                "retentionDays": {
                    "type": "integer"
                },
                "sourceArn": {
                    "type": "string"
                }
            },
            "outputs": {
                "archiveName": {
                    "type": "string"
                },
                "arn": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "eventPattern": {
                    "$ref": "pulumi.json#/Any"
                },
                "retentionDays": {
                    "type": "integer"
                },
                "sourceArn": {
                    "type": "string"
                }
            },
            "required": [
                "sourceArn"
            ],
            "createOnly": [
                "archiveName",
                "sourceArn"
            ]
        },
        "aws-native:events:Connection": {
            "cf": "AWS::Events::Connection",
            "inputs": {
                "authParameters": {
                    "$ref": "pulumi.json#/Any"
                },
                "authorizationType": {
                    "$ref": "#/types/aws-native:events:ConnectionAuthorizationType"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the connection."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The arn of the connection resource."
                },
                "authParameters": {
                    "$ref": "pulumi.json#/Any"
                },
                "authorizationType": {
                    "$ref": "#/types/aws-native:events:ConnectionAuthorizationType"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the connection."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection."
                },
                "secretArn": {
                    "type": "string",
                    "description": "The arn of the secrets manager secret created in the customer account."
                }
            },
            "required": [
                "authParameters",
                "authorizationType"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:eventschemas:RegistryPolicy": {
            "cf": "AWS::EventSchemas::RegistryPolicy",
            "inputs": {
                "policy": {
                    "$ref": "pulumi.json#/Any"
                },
                "registryName": {
                    "type": "string"
                },
                "revisionId": {
                    "type": "string"
                }
            },
            "outputs": {
                "policy": {
                    "$ref": "pulumi.json#/Any"
                },
                "registryName": {
                    "type": "string"
                },
                "revisionId": {
                    "type": "string"
                }
            },
            "required": [
                "policy",
                "registryName"
            ]
        },
        "aws-native:finspace:Environment": {
            "cf": "AWS::FinSpace::Environment",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Description of the Environment"
                },
                "federationMode": {
                    "$ref": "#/types/aws-native:finspace:EnvironmentFederationMode",
                    "description": "Federation mode used with the Environment"
                },
                "federationParameters": {
                    "$ref": "#/types/aws-native:finspace:EnvironmentFederationParameters"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "KMS key used to encrypt customer data within FinSpace Environment infrastructure"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Environment"
                }
            },
            "outputs": {
                "awsAccountId": {
                    "type": "string",
                    "description": "AWS account ID associated with the Environment"
                },
                "dedicatedServiceAccountId": {
                    "type": "string",
                    "description": "ID for FinSpace created account used to store Environment artifacts"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Environment"
                },
                "environmentArn": {
                    "type": "string",
                    "description": "ARN of the Environment"
                },
                "environmentId": {
                    "type": "string",
                    "description": "Unique identifier for representing FinSpace Environment"
                },
                "environmentUrl": {
                    "type": "string",
                    "description": "URL used to login to the Environment"
                },
                "federationMode": {
                    "$ref": "#/types/aws-native:finspace:EnvironmentFederationMode",
                    "description": "Federation mode used with the Environment"
                },
                "federationParameters": {
                    "$ref": "#/types/aws-native:finspace:EnvironmentFederationParameters"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "KMS key used to encrypt customer data within FinSpace Environment infrastructure"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Environment"
                },
                "sageMakerStudioDomainUrl": {
                    "type": "string",
                    "description": "SageMaker Studio Domain URL associated with the Environment"
                },
                "status": {
                    "$ref": "#/types/aws-native:finspace:EnvironmentStatus",
                    "description": "State of the Environment"
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "kmsKeyId"
            ]
        },
        "aws-native:fis:ExperimentTemplate": {
            "cf": "AWS::FIS::ExperimentTemplate",
            "inputs": {
                "actions": {
                    "$ref": "#/types/aws-native:fis:ExperimentTemplateExperimentTemplateActionMap"
                },
                "description": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "stopConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:fis:ExperimentTemplateExperimentTemplateStopCondition"
                    }
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                },
                "targets": {
                    "$ref": "#/types/aws-native:fis:ExperimentTemplateExperimentTemplateTargetMap"
                }
            },
            "outputs": {
                "actions": {
                    "$ref": "#/types/aws-native:fis:ExperimentTemplateExperimentTemplateActionMap"
                },
                "description": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "stopConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:fis:ExperimentTemplateExperimentTemplateStopCondition"
                    }
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                },
                "targets": {
                    "$ref": "#/types/aws-native:fis:ExperimentTemplateExperimentTemplateTargetMap"
                }
            },
            "required": [
                "description",
                "roleArn",
                "stopConditions",
                "tags",
                "targets"
            ],
            "createOnly": [
                "tags"
            ]
        },
        "aws-native:fms:NotificationChannel": {
            "cf": "AWS::FMS::NotificationChannel",
            "inputs": {
                "snsRoleName": {
                    "type": "string"
                },
                "snsTopicArn": {
                    "type": "string"
                }
            },
            "outputs": {
                "snsRoleName": {
                    "type": "string"
                },
                "snsTopicArn": {
                    "type": "string"
                }
            },
            "required": [
                "snsRoleName",
                "snsTopicArn"
            ]
        },
        "aws-native:fms:Policy": {
            "cf": "AWS::FMS::Policy",
            "inputs": {
                "deleteAllPolicyResources": {
                    "type": "boolean"
                },
                "excludeMap": {
                    "$ref": "#/types/aws-native:fms:PolicyIEMap"
                },
                "excludeResourceTags": {
                    "type": "boolean"
                },
                "includeMap": {
                    "$ref": "#/types/aws-native:fms:PolicyIEMap"
                },
                "policyName": {
                    "type": "string"
                },
                "remediationEnabled": {
                    "type": "boolean"
                },
                "resourceTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:fms:PolicyResourceTag"
                    }
                },
                "resourceType": {
                    "type": "string"
                },
                "resourceTypeList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityServicePolicyData": {
                    "$ref": "pulumi.json#/Any"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:fms:PolicyPolicyTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "deleteAllPolicyResources": {
                    "type": "boolean"
                },
                "excludeMap": {
                    "$ref": "#/types/aws-native:fms:PolicyIEMap"
                },
                "excludeResourceTags": {
                    "type": "boolean"
                },
                "includeMap": {
                    "$ref": "#/types/aws-native:fms:PolicyIEMap"
                },
                "policyName": {
                    "type": "string"
                },
                "remediationEnabled": {
                    "type": "boolean"
                },
                "resourceTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:fms:PolicyResourceTag"
                    }
                },
                "resourceType": {
                    "type": "string"
                },
                "resourceTypeList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityServicePolicyData": {
                    "$ref": "pulumi.json#/Any"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:fms:PolicyPolicyTag"
                    }
                }
            },
            "required": [
                "excludeResourceTags",
                "policyName",
                "remediationEnabled",
                "resourceType",
                "securityServicePolicyData"
            ]
        },
        "aws-native:frauddetector:Detector": {
            "cf": "AWS::FraudDetector::Detector",
            "inputs": {
                "associatedModels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorModel"
                    },
                    "description": "The models to associate with this detector."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the detector."
                },
                "detectorId": {
                    "type": "string",
                    "description": "The ID of the detector"
                },
                "detectorVersionStatus": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorDetectorVersionStatus",
                    "description": "The desired detector version status for the detector"
                },
                "eventType": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorEventType",
                    "description": "The event type to associate this detector with."
                },
                "ruleExecutionMode": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorRuleExecutionMode"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorRule"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorTag"
                    },
                    "description": "Tags associated with this detector."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the detector."
                },
                "associatedModels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorModel"
                    },
                    "description": "The models to associate with this detector."
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the detector was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the detector."
                },
                "detectorId": {
                    "type": "string",
                    "description": "The ID of the detector"
                },
                "detectorVersionId": {
                    "type": "string",
                    "description": "The active version ID of the detector"
                },
                "detectorVersionStatus": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorDetectorVersionStatus",
                    "description": "The desired detector version status for the detector"
                },
                "eventType": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorEventType",
                    "description": "The event type to associate this detector with."
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the detector was last updated."
                },
                "ruleExecutionMode": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorRuleExecutionMode"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorRule"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorTag"
                    },
                    "description": "Tags associated with this detector."
                }
            },
            "required": [
                "detectorId",
                "eventType",
                "rules"
            ],
            "createOnly": [
                "detectorId"
            ]
        },
        "aws-native:frauddetector:EntityType": {
            "cf": "AWS::FraudDetector::EntityType",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The entity type description."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the entity type."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EntityTypeTag"
                    },
                    "description": "Tags associated with this entity type."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The entity type ARN."
                },
                "createdTime": {
                    "type": "string",
                    "description": "The timestamp when the entity type was created."
                },
                "description": {
                    "type": "string",
                    "description": "The entity type description."
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The timestamp when the entity type was last updated."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the entity type."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EntityTypeTag"
                    },
                    "description": "Tags associated with this entity type."
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:frauddetector:EventType": {
            "cf": "AWS::FraudDetector::EventType",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the event type."
                },
                "entityTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeEntityType"
                    }
                },
                "eventVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeEventVariable"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeLabel"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name for the event type"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeTag"
                    },
                    "description": "Tags associated with this event type."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the event type."
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the event type was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the event type."
                },
                "entityTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeEntityType"
                    }
                },
                "eventVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeEventVariable"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeLabel"
                    }
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the event type was last updated."
                },
                "name": {
                    "type": "string",
                    "description": "The name for the event type"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeTag"
                    },
                    "description": "Tags associated with this event type."
                }
            },
            "required": [
                "entityTypes",
                "eventVariables",
                "labels",
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:frauddetector:Label": {
            "cf": "AWS::FraudDetector::Label",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The label description."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the label."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:LabelTag"
                    },
                    "description": "Tags associated with this label."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The label ARN."
                },
                "createdTime": {
                    "type": "string",
                    "description": "The timestamp when the label was created."
                },
                "description": {
                    "type": "string",
                    "description": "The label description."
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The timestamp when the label was last updated."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the label."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:LabelTag"
                    },
                    "description": "Tags associated with this label."
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:frauddetector:Outcome": {
            "cf": "AWS::FraudDetector::Outcome",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The outcome description."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the outcome."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:OutcomeTag"
                    },
                    "description": "Tags associated with this outcome."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The outcome ARN."
                },
                "createdTime": {
                    "type": "string",
                    "description": "The timestamp when the outcome was created."
                },
                "description": {
                    "type": "string",
                    "description": "The outcome description."
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The timestamp when the outcome was last updated."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the outcome."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:OutcomeTag"
                    },
                    "description": "Tags associated with this outcome."
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:frauddetector:Variable": {
            "cf": "AWS::FraudDetector::Variable",
            "inputs": {
                "dataSource": {
                    "$ref": "#/types/aws-native:frauddetector:VariableDataSource",
                    "description": "The source of the data."
                },
                "dataType": {
                    "$ref": "#/types/aws-native:frauddetector:VariableDataType",
                    "description": "The data type."
                },
                "defaultValue": {
                    "type": "string",
                    "description": "The default value for the variable when no value is received."
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:VariableTag"
                    },
                    "description": "Tags associated with this variable."
                },
                "variableType": {
                    "$ref": "#/types/aws-native:frauddetector:VariableVariableType",
                    "description": "The variable type. For more information see https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the variable."
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the variable was created."
                },
                "dataSource": {
                    "$ref": "#/types/aws-native:frauddetector:VariableDataSource",
                    "description": "The source of the data."
                },
                "dataType": {
                    "$ref": "#/types/aws-native:frauddetector:VariableDataType",
                    "description": "The data type."
                },
                "defaultValue": {
                    "type": "string",
                    "description": "The default value for the variable when no value is received."
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the variable was last updated."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:VariableTag"
                    },
                    "description": "Tags associated with this variable."
                },
                "variableType": {
                    "$ref": "#/types/aws-native:frauddetector:VariableVariableType",
                    "description": "The variable type. For more information see https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types"
                }
            },
            "required": [
                "dataSource",
                "dataType",
                "defaultValue",
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:gamelift:Alias": {
            "cf": "AWS::GameLift::Alias",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the alias."
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label that is associated with an alias. Alias names do not need to be unique."
                },
                "routingStrategy": {
                    "$ref": "#/types/aws-native:gamelift:AliasRoutingStrategy",
                    "description": "A routing configuration that specifies where traffic is directed for this alias, such as to a fleet or to a message."
                }
            },
            "outputs": {
                "aliasId": {
                    "type": "string",
                    "description": "Unique alias ID"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the alias."
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label that is associated with an alias. Alias names do not need to be unique."
                },
                "routingStrategy": {
                    "$ref": "#/types/aws-native:gamelift:AliasRoutingStrategy",
                    "description": "A routing configuration that specifies where traffic is directed for this alias, such as to a fleet or to a message."
                }
            },
            "required": [
                "name",
                "routingStrategy"
            ]
        },
        "aws-native:gamelift:Fleet": {
            "cf": "AWS::GameLift::Fleet",
            "inputs": {
                "buildId": {
                    "type": "string",
                    "description": "A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created."
                },
                "certificateConfiguration": {
                    "$ref": "#/types/aws-native:gamelift:FleetCertificateConfiguration",
                    "description": "Indicates whether to generate a TLS/SSL certificate for the new fleet. TLS certificates are used for encrypting traffic between game clients and game servers running on GameLift. If this parameter is not set, certificate generation is disabled. This fleet setting cannot be changed once the fleet is created."
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of a fleet."
                },
                "desiredEC2Instances": {
                    "type": "integer",
                    "description": "[DEPRECATED] The number of EC2 instances that you want this fleet to host. When creating a new fleet, GameLift automatically sets this value to \"1\" and initiates a single instance. Once the fleet is active, update this value to trigger GameLift to add or remove instances from the fleet."
                },
                "eC2InboundPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:gamelift:FleetIpPermission"
                    },
                    "description": "A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server."
                },
                "eC2InstanceType": {
                    "type": "string",
                    "description": "The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions."
                },
                "fleetType": {
                    "$ref": "#/types/aws-native:gamelift:FleetFleetType",
                    "description": "Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet."
                },
                "instanceRoleARN": {
                    "type": "string",
                    "description": "A unique identifier for an AWS IAM role that manages access to your AWS services. With an instance role ARN set, any application that runs on an instance in this fleet can assume the role, including install scripts, server processes, and daemons (background processes). Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console."
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:gamelift:FleetLocationConfiguration"
                    }
                },
                "logPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This parameter is no longer used. When hosting a custom game build, specify where Amazon GameLift should store log files using the Amazon GameLift server API call ProcessReady()"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "[DEPRECATED] The maximum value that is allowed for the fleet's instance count. When creating a new fleet, GameLift automatically sets this value to \"1\". Once the fleet is active, you can change this value."
                },
                "metricGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string."
                },
                "minSize": {
                    "type": "integer",
                    "description": "[DEPRECATED] The minimum value allowed for the fleet's instance count. When creating a new fleet, GameLift automatically sets this value to \"0\". After the fleet is active, you can change this value."
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label that is associated with a fleet. Fleet names do not need to be unique."
                },
                "newGameSessionProtectionPolicy": {
                    "$ref": "#/types/aws-native:gamelift:FleetNewGameSessionProtectionPolicy",
                    "description": "A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions."
                },
                "peerVpcAwsAccountId": {
                    "type": "string",
                    "description": "A unique identifier for the AWS account with the VPC that you want to peer your Amazon GameLift fleet with. You can find your account ID in the AWS Management Console under account settings."
                },
                "peerVpcId": {
                    "type": "string",
                    "description": "A unique identifier for a VPC with resources to be accessed by your Amazon GameLift fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use the VPC Dashboard in the AWS Management Console."
                },
                "resourceCreationLimitPolicy": {
                    "$ref": "#/types/aws-native:gamelift:FleetResourceCreationLimitPolicy",
                    "description": "A policy that limits the number of game sessions an individual player can create over a span of time for this fleet."
                },
                "runtimeConfiguration": {
                    "$ref": "#/types/aws-native:gamelift:FleetRuntimeConfiguration",
                    "description": "Instructions for launching server processes on each instance in the fleet. Server processes run either a custom game build executable or a Realtime script. The runtime configuration defines the server executables or launch script file, launch parameters, and the number of processes to run concurrently on each instance. When creating a fleet, the runtime configuration must have at least one server process configuration; otherwise the request fails with an invalid request exception.\n\nThis parameter is required unless the parameters ServerLaunchPath and ServerLaunchParameters are defined. Runtime configuration has replaced these parameters, but fleets that use them will continue to work."
                },
                "scriptId": {
                    "type": "string",
                    "description": "A unique identifier for a Realtime script to be deployed on a new Realtime Servers fleet. The script must have been successfully uploaded to Amazon GameLift. This fleet setting cannot be changed once the fleet is created.\n\nNote: It is not currently possible to use the !Ref command to reference a script created with a CloudFormation template for the fleet property ScriptId. Instead, use Fn::GetAtt Script.Arn or Fn::GetAtt Script.Id to retrieve either of these properties as input for ScriptId. Alternatively, enter a ScriptId string manually."
                },
                "serverLaunchParameters": {
                    "type": "string",
                    "description": "This parameter is no longer used but is retained for backward compatibility. Instead, specify server launch parameters in the RuntimeConfiguration parameter. A request must specify either a runtime configuration or values for both ServerLaunchParameters and ServerLaunchPath."
                },
                "serverLaunchPath": {
                    "type": "string",
                    "description": "This parameter is no longer used. Instead, specify a server launch path using the RuntimeConfiguration parameter. Requests that specify a server launch path and launch parameters instead of a runtime configuration will continue to work."
                }
            },
            "outputs": {
                "buildId": {
                    "type": "string",
                    "description": "A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created."
                },
                "certificateConfiguration": {
                    "$ref": "#/types/aws-native:gamelift:FleetCertificateConfiguration",
                    "description": "Indicates whether to generate a TLS/SSL certificate for the new fleet. TLS certificates are used for encrypting traffic between game clients and game servers running on GameLift. If this parameter is not set, certificate generation is disabled. This fleet setting cannot be changed once the fleet is created."
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of a fleet."
                },
                "desiredEC2Instances": {
                    "type": "integer",
                    "description": "[DEPRECATED] The number of EC2 instances that you want this fleet to host. When creating a new fleet, GameLift automatically sets this value to \"1\" and initiates a single instance. Once the fleet is active, update this value to trigger GameLift to add or remove instances from the fleet."
                },
                "eC2InboundPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:gamelift:FleetIpPermission"
                    },
                    "description": "A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server."
                },
                "eC2InstanceType": {
                    "type": "string",
                    "description": "The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions."
                },
                "fleetId": {
                    "type": "string",
                    "description": "Unique fleet ID"
                },
                "fleetType": {
                    "$ref": "#/types/aws-native:gamelift:FleetFleetType",
                    "description": "Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet."
                },
                "instanceRoleARN": {
                    "type": "string",
                    "description": "A unique identifier for an AWS IAM role that manages access to your AWS services. With an instance role ARN set, any application that runs on an instance in this fleet can assume the role, including install scripts, server processes, and daemons (background processes). Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console."
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:gamelift:FleetLocationConfiguration"
                    }
                },
                "logPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This parameter is no longer used. When hosting a custom game build, specify where Amazon GameLift should store log files using the Amazon GameLift server API call ProcessReady()"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "[DEPRECATED] The maximum value that is allowed for the fleet's instance count. When creating a new fleet, GameLift automatically sets this value to \"1\". Once the fleet is active, you can change this value."
                },
                "metricGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string."
                },
                "minSize": {
                    "type": "integer",
                    "description": "[DEPRECATED] The minimum value allowed for the fleet's instance count. When creating a new fleet, GameLift automatically sets this value to \"0\". After the fleet is active, you can change this value."
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label that is associated with a fleet. Fleet names do not need to be unique."
                },
                "newGameSessionProtectionPolicy": {
                    "$ref": "#/types/aws-native:gamelift:FleetNewGameSessionProtectionPolicy",
                    "description": "A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions."
                },
                "peerVpcAwsAccountId": {
                    "type": "string",
                    "description": "A unique identifier for the AWS account with the VPC that you want to peer your Amazon GameLift fleet with. You can find your account ID in the AWS Management Console under account settings."
                },
                "peerVpcId": {
                    "type": "string",
                    "description": "A unique identifier for a VPC with resources to be accessed by your Amazon GameLift fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use the VPC Dashboard in the AWS Management Console."
                },
                "resourceCreationLimitPolicy": {
                    "$ref": "#/types/aws-native:gamelift:FleetResourceCreationLimitPolicy",
                    "description": "A policy that limits the number of game sessions an individual player can create over a span of time for this fleet."
                },
                "runtimeConfiguration": {
                    "$ref": "#/types/aws-native:gamelift:FleetRuntimeConfiguration",
                    "description": "Instructions for launching server processes on each instance in the fleet. Server processes run either a custom game build executable or a Realtime script. The runtime configuration defines the server executables or launch script file, launch parameters, and the number of processes to run concurrently on each instance. When creating a fleet, the runtime configuration must have at least one server process configuration; otherwise the request fails with an invalid request exception.\n\nThis parameter is required unless the parameters ServerLaunchPath and ServerLaunchParameters are defined. Runtime configuration has replaced these parameters, but fleets that use them will continue to work."
                },
                "scriptId": {
                    "type": "string",
                    "description": "A unique identifier for a Realtime script to be deployed on a new Realtime Servers fleet. The script must have been successfully uploaded to Amazon GameLift. This fleet setting cannot be changed once the fleet is created.\n\nNote: It is not currently possible to use the !Ref command to reference a script created with a CloudFormation template for the fleet property ScriptId. Instead, use Fn::GetAtt Script.Arn or Fn::GetAtt Script.Id to retrieve either of these properties as input for ScriptId. Alternatively, enter a ScriptId string manually."
                },
                "serverLaunchParameters": {
                    "type": "string",
                    "description": "This parameter is no longer used but is retained for backward compatibility. Instead, specify server launch parameters in the RuntimeConfiguration parameter. A request must specify either a runtime configuration or values for both ServerLaunchParameters and ServerLaunchPath."
                },
                "serverLaunchPath": {
                    "type": "string",
                    "description": "This parameter is no longer used. Instead, specify a server launch path using the RuntimeConfiguration parameter. Requests that specify a server launch path and launch parameters instead of a runtime configuration will continue to work."
                }
            },
            "createOnly": [
                "buildId",
                "certificateConfiguration",
                "certificateType",
                "eC2InstanceType",
                "fleetType",
                "instanceRoleARN",
                "logPaths",
                "peerVpcAwsAccountId",
                "peerVpcId",
                "scriptId",
                "serverLaunchParameters",
                "serverLaunchPath"
            ]
        },
        "aws-native:gamelift:GameServerGroup": {
            "cf": "AWS::GameLift::GameServerGroup",
            "inputs": {
                "autoScalingPolicy": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupAutoScalingPolicy",
                    "description": "Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting"
                },
                "balancingStrategy": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupBalancingStrategy",
                    "description": "The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting."
                },
                "deleteOption": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupDeleteOption",
                    "description": "The type of delete to perform."
                },
                "gameServerGroupName": {
                    "type": "string",
                    "description": "An identifier for the new game server group."
                },
                "gameServerProtectionPolicy": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupGameServerProtectionPolicy",
                    "description": "A flag that indicates whether instances in the game server group are protected from early termination."
                },
                "instanceDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:gamelift:GameServerGroupInstanceDefinition"
                    },
                    "description": "A set of EC2 instance types to use when creating instances in the group."
                },
                "launchTemplate": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupLaunchTemplate",
                    "description": "The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group."
                },
                "maxSize": {
                    "type": "number",
                    "description": "The maximum number of instances allowed in the EC2 Auto Scaling group."
                },
                "minSize": {
                    "type": "number",
                    "description": "The minimum number of instances allowed in the EC2 Auto Scaling group."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:gamelift:GameServerGroupTag"
                    },
                    "description": "A list of labels to assign to the new game server group resource."
                },
                "vpcSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of virtual private cloud (VPC) subnets to use with instances in the game server group."
                }
            },
            "outputs": {
                "autoScalingGroupArn": {
                    "type": "string",
                    "description": "A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group."
                },
                "autoScalingPolicy": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupAutoScalingPolicy",
                    "description": "Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting"
                },
                "balancingStrategy": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupBalancingStrategy",
                    "description": "The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting."
                },
                "deleteOption": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupDeleteOption",
                    "description": "The type of delete to perform."
                },
                "gameServerGroupArn": {
                    "type": "string",
                    "description": "A generated unique ID for the game server group."
                },
                "gameServerGroupName": {
                    "type": "string",
                    "description": "An identifier for the new game server group."
                },
                "gameServerProtectionPolicy": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupGameServerProtectionPolicy",
                    "description": "A flag that indicates whether instances in the game server group are protected from early termination."
                },
                "instanceDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:gamelift:GameServerGroupInstanceDefinition"
                    },
                    "description": "A set of EC2 instance types to use when creating instances in the group."
                },
                "launchTemplate": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupLaunchTemplate",
                    "description": "The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group."
                },
                "maxSize": {
                    "type": "number",
                    "description": "The maximum number of instances allowed in the EC2 Auto Scaling group."
                },
                "minSize": {
                    "type": "number",
                    "description": "The minimum number of instances allowed in the EC2 Auto Scaling group."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:gamelift:GameServerGroupTag"
                    },
                    "description": "A list of labels to assign to the new game server group resource."
                },
                "vpcSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of virtual private cloud (VPC) subnets to use with instances in the game server group."
                }
            },
            "required": [
                "gameServerGroupName",
                "instanceDefinitions",
                "launchTemplate",
                "roleArn"
            ]
        },
        "aws-native:globalaccelerator:Accelerator": {
            "cf": "AWS::GlobalAccelerator::Accelerator",
            "inputs": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether an accelerator is enabled. The value is true or false."
                },
                "ipAddressType": {
                    "$ref": "#/types/aws-native:globalaccelerator:AcceleratorIpAddressType",
                    "description": "IP Address type."
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IP addresses from BYOIP Prefix pool."
                },
                "name": {
                    "type": "string",
                    "description": "Name of accelerator."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:globalaccelerator:AcceleratorTag"
                    }
                }
            },
            "outputs": {
                "acceleratorArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the accelerator."
                },
                "dnsName": {
                    "type": "string",
                    "description": "The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static IP addresses."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether an accelerator is enabled. The value is true or false."
                },
                "ipAddressType": {
                    "$ref": "#/types/aws-native:globalaccelerator:AcceleratorIpAddressType",
                    "description": "IP Address type."
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IP addresses from BYOIP Prefix pool."
                },
                "name": {
                    "type": "string",
                    "description": "Name of accelerator."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:globalaccelerator:AcceleratorTag"
                    }
                }
            },
            "required": [
                "name"
            ]
        },
        "aws-native:globalaccelerator:EndpointGroup": {
            "cf": "AWS::GlobalAccelerator::EndpointGroup",
            "inputs": {
                "endpointConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:globalaccelerator:EndpointGroupEndpointConfiguration"
                    },
                    "description": "The list of endpoint objects."
                },
                "endpointGroupRegion": {
                    "type": "string",
                    "description": "The name of the AWS Region where the endpoint group is located"
                },
                "healthCheckIntervalSeconds": {
                    "type": "integer",
                    "description": "The time in seconds between each health check for an endpoint. Must be a value of 10 or 30"
                },
                "healthCheckPath": {
                    "type": "string"
                },
                "healthCheckPort": {
                    "type": "integer",
                    "description": "The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group."
                },
                "healthCheckProtocol": {
                    "$ref": "#/types/aws-native:globalaccelerator:EndpointGroupHealthCheckProtocol",
                    "description": "The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group."
                },
                "listenerArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the listener"
                },
                "portOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:globalaccelerator:EndpointGroupPortOverride"
                    }
                },
                "thresholdCount": {
                    "type": "integer",
                    "description": "The number of consecutive health checks required to set the state of the endpoint to unhealthy."
                },
                "trafficDialPercentage": {
                    "type": "number",
                    "description": "The percentage of traffic to sent to an AWS Region"
                }
            },
            "outputs": {
                "endpointConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:globalaccelerator:EndpointGroupEndpointConfiguration"
                    },
                    "description": "The list of endpoint objects."
                },
                "endpointGroupArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the endpoint group"
                },
                "endpointGroupRegion": {
                    "type": "string",
                    "description": "The name of the AWS Region where the endpoint group is located"
                },
                "healthCheckIntervalSeconds": {
                    "type": "integer",
                    "description": "The time in seconds between each health check for an endpoint. Must be a value of 10 or 30"
                },
                "healthCheckPath": {
                    "type": "string"
                },
                "healthCheckPort": {
                    "type": "integer",
                    "description": "The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group."
                },
                "healthCheckProtocol": {
                    "$ref": "#/types/aws-native:globalaccelerator:EndpointGroupHealthCheckProtocol",
                    "description": "The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group."
                },
                "listenerArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the listener"
                },
                "portOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:globalaccelerator:EndpointGroupPortOverride"
                    }
                },
                "thresholdCount": {
                    "type": "integer",
                    "description": "The number of consecutive health checks required to set the state of the endpoint to unhealthy."
                },
                "trafficDialPercentage": {
                    "type": "number",
                    "description": "The percentage of traffic to sent to an AWS Region"
                }
            },
            "required": [
                "endpointGroupRegion",
                "listenerArn"
            ],
            "createOnly": [
                "endpointGroupRegion",
                "listenerArn"
            ]
        },
        "aws-native:globalaccelerator:Listener": {
            "cf": "AWS::GlobalAccelerator::Listener",
            "inputs": {
                "acceleratorArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the accelerator."
                },
                "clientAffinity": {
                    "$ref": "#/types/aws-native:globalaccelerator:ListenerClientAffinity",
                    "description": "Client affinity lets you direct all requests from a user to the same endpoint."
                },
                "portRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:globalaccelerator:ListenerPortRange"
                    }
                },
                "protocol": {
                    "$ref": "#/types/aws-native:globalaccelerator:ListenerProtocol",
                    "description": "The protocol for the listener."
                }
            },
            "outputs": {
                "acceleratorArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the accelerator."
                },
                "clientAffinity": {
                    "$ref": "#/types/aws-native:globalaccelerator:ListenerClientAffinity",
                    "description": "Client affinity lets you direct all requests from a user to the same endpoint."
                },
                "listenerArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the listener."
                },
                "portRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:globalaccelerator:ListenerPortRange"
                    }
                },
                "protocol": {
                    "$ref": "#/types/aws-native:globalaccelerator:ListenerProtocol",
                    "description": "The protocol for the listener."
                }
            },
            "required": [
                "acceleratorArn",
                "portRanges",
                "protocol"
            ],
            "createOnly": [
                "acceleratorArn"
            ]
        },
        "aws-native:glue:Registry": {
            "cf": "AWS::Glue::Registry",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "A description of the registry. If description is not provided, there will not be any default value for this."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the registry to be created of max length of 255, and may only contain letters, numbers, hyphen, underscore, dollar sign, or hash mark.  No whitespace."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:glue:RegistryTag"
                    },
                    "description": "List of tags to tag the Registry"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name for the created Registry."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the registry. If description is not provided, there will not be any default value for this."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the registry to be created of max length of 255, and may only contain letters, numbers, hyphen, underscore, dollar sign, or hash mark.  No whitespace."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:glue:RegistryTag"
                    },
                    "description": "List of tags to tag the Registry"
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "name",
                "tags"
            ]
        },
        "aws-native:glue:Schema": {
            "cf": "AWS::Glue::Schema",
            "inputs": {
                "checkpointVersion": {
                    "$ref": "#/types/aws-native:glue:SchemaSchemaVersion"
                },
                "compatibility": {
                    "$ref": "#/types/aws-native:glue:SchemaCompatibility",
                    "description": "Compatibility setting for the schema."
                },
                "dataFormat": {
                    "$ref": "#/types/aws-native:glue:SchemaDataFormat",
                    "description": "Data format name to use for the schema. Accepted values: 'AVRO', 'JSON'"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the schema. If description is not provided, there will not be any default value for this."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the schema."
                },
                "registry": {
                    "$ref": "#/types/aws-native:glue:SchemaRegistry"
                },
                "schemaDefinition": {
                    "type": "string",
                    "description": "Definition for the initial schema version in plain-text."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:glue:SchemaTag"
                    },
                    "description": "List of tags to tag the schema"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name for the Schema."
                },
                "checkpointVersion": {
                    "$ref": "#/types/aws-native:glue:SchemaSchemaVersion"
                },
                "compatibility": {
                    "$ref": "#/types/aws-native:glue:SchemaCompatibility",
                    "description": "Compatibility setting for the schema."
                },
                "dataFormat": {
                    "$ref": "#/types/aws-native:glue:SchemaDataFormat",
                    "description": "Data format name to use for the schema. Accepted values: 'AVRO', 'JSON'"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the schema. If description is not provided, there will not be any default value for this."
                },
                "initialSchemaVersionId": {
                    "type": "string",
                    "description": "Represents the version ID associated with the initial schema version."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the schema."
                },
                "registry": {
                    "$ref": "#/types/aws-native:glue:SchemaRegistry"
                },
                "schemaDefinition": {
                    "type": "string",
                    "description": "Definition for the initial schema version in plain-text."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:glue:SchemaTag"
                    },
                    "description": "List of tags to tag the schema"
                }
            },
            "required": [
                "compatibility",
                "dataFormat",
                "name",
                "schemaDefinition"
            ],
            "createOnly": [
                "dataFormat",
                "name",
                "registry",
                "schemaDefinition",
                "tags"
            ]
        },
        "aws-native:glue:SchemaVersion": {
            "cf": "AWS::Glue::SchemaVersion",
            "inputs": {
                "schema": {
                    "$ref": "#/types/aws-native:glue:SchemaVersionSchema"
                },
                "schemaDefinition": {
                    "type": "string",
                    "description": "Complete definition of the schema in plain-text."
                }
            },
            "outputs": {
                "schema": {
                    "$ref": "#/types/aws-native:glue:SchemaVersionSchema"
                },
                "schemaDefinition": {
                    "type": "string",
                    "description": "Complete definition of the schema in plain-text."
                },
                "versionId": {
                    "type": "string",
                    "description": "Represents the version ID associated with the schema version."
                }
            },
            "required": [
                "schema",
                "schemaDefinition"
            ],
            "createOnly": [
                "schema",
                "schemaDefinition"
            ]
        },
        "aws-native:glue:SchemaVersionMetadata": {
            "cf": "AWS::Glue::SchemaVersionMetadata",
            "inputs": {
                "key": {
                    "type": "string",
                    "description": "Metadata key"
                },
                "schemaVersionId": {
                    "type": "string",
                    "description": "Represents the version ID associated with the schema version."
                },
                "value": {
                    "type": "string",
                    "description": "Metadata value"
                }
            },
            "outputs": {
                "key": {
                    "type": "string",
                    "description": "Metadata key"
                },
                "schemaVersionId": {
                    "type": "string",
                    "description": "Represents the version ID associated with the schema version."
                },
                "value": {
                    "type": "string",
                    "description": "Metadata value"
                }
            },
            "required": [
                "key",
                "schemaVersionId",
                "value"
            ],
            "createOnly": [
                "key",
                "schemaVersionId",
                "value"
            ]
        },
        "aws-native:greengrassv2:ComponentVersion": {
            "cf": "AWS::GreengrassV2::ComponentVersion",
            "inputs": {
                "inlineRecipe": {
                    "type": "string"
                },
                "lambdaFunction": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaFunctionRecipeSource"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "componentName": {
                    "type": "string"
                },
                "componentVersion": {
                    "type": "string",
                    "language": {
                        "csharp": {
                            "name": "ComponentVersionValue"
                        }
                    }
                },
                "inlineRecipe": {
                    "type": "string"
                },
                "lambdaFunction": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaFunctionRecipeSource"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                }
            },
            "createOnly": [
                "inlineRecipe",
                "lambdaFunction"
            ]
        },
        "aws-native:groundstation:Config": {
            "cf": "AWS::GroundStation::Config",
            "inputs": {
                "configData": {
                    "$ref": "#/types/aws-native:groundstation:ConfigConfigData"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:ConfigTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "configData": {
                    "$ref": "#/types/aws-native:groundstation:ConfigConfigData"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:ConfigTag"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "configData",
                "name"
            ]
        },
        "aws-native:groundstation:DataflowEndpointGroup": {
            "cf": "AWS::GroundStation::DataflowEndpointGroup",
            "inputs": {
                "endpointDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:DataflowEndpointGroupEndpointDetails"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:DataflowEndpointGroupTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "endpointDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:DataflowEndpointGroupEndpointDetails"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:DataflowEndpointGroupTag"
                    }
                }
            },
            "required": [
                "endpointDetails"
            ]
        },
        "aws-native:groundstation:MissionProfile": {
            "cf": "AWS::GroundStation::MissionProfile",
            "inputs": {
                "contactPostPassDurationSeconds": {
                    "type": "integer",
                    "description": "Post-pass time needed after the contact."
                },
                "contactPrePassDurationSeconds": {
                    "type": "integer",
                    "description": "Pre-pass time needed before the contact."
                },
                "dataflowEdges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:MissionProfileDataflowEdge"
                    }
                },
                "minimumViableContactDurationSeconds": {
                    "type": "integer",
                    "description": "Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts."
                },
                "name": {
                    "type": "string",
                    "description": "A name used to identify a mission profile."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:MissionProfileTag"
                    }
                },
                "trackingConfigArn": {
                    "type": "string"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "contactPostPassDurationSeconds": {
                    "type": "integer",
                    "description": "Post-pass time needed after the contact."
                },
                "contactPrePassDurationSeconds": {
                    "type": "integer",
                    "description": "Pre-pass time needed before the contact."
                },
                "dataflowEdges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:MissionProfileDataflowEdge"
                    }
                },
                "minimumViableContactDurationSeconds": {
                    "type": "integer",
                    "description": "Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts."
                },
                "name": {
                    "type": "string",
                    "description": "A name used to identify a mission profile."
                },
                "region": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:groundstation:MissionProfileTag"
                    }
                },
                "trackingConfigArn": {
                    "type": "string"
                }
            },
            "required": [
                "dataflowEdges",
                "minimumViableContactDurationSeconds",
                "name",
                "trackingConfigArn"
            ]
        },
        "aws-native:healthlake:FHIRDatastore": {
            "cf": "AWS::HealthLake::FHIRDatastore",
            "inputs": {
                "datastoreName": {
                    "type": "string"
                },
                "datastoreTypeVersion": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastoreDatastoreTypeVersion"
                },
                "preloadDataConfig": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastorePreloadDataConfig"
                },
                "sseConfiguration": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastoreSseConfiguration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:healthlake:FHIRDatastoreTag"
                    }
                }
            },
            "outputs": {
                "createdAt": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastoreCreatedAt"
                },
                "datastoreArn": {
                    "type": "string"
                },
                "datastoreEndpoint": {
                    "type": "string"
                },
                "datastoreId": {
                    "type": "string"
                },
                "datastoreName": {
                    "type": "string"
                },
                "datastoreStatus": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastoreDatastoreStatus"
                },
                "datastoreTypeVersion": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastoreDatastoreTypeVersion"
                },
                "preloadDataConfig": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastorePreloadDataConfig"
                },
                "sseConfiguration": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastoreSseConfiguration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:healthlake:FHIRDatastoreTag"
                    }
                }
            },
            "required": [
                "datastoreTypeVersion"
            ],
            "createOnly": [
                "datastoreName",
                "datastoreTypeVersion",
                "kmsEncryptionConfig",
                "preloadDataConfig",
                "sseConfiguration"
            ]
        },
        "aws-native:iam:OIDCProvider": {
            "cf": "AWS::IAM::OIDCProvider",
            "inputs": {
                "clientIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iam:OIDCProviderTag"
                    }
                },
                "thumbprintList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN) of the OIDC provider"
                },
                "clientIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iam:OIDCProviderTag"
                    }
                },
                "thumbprintList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "required": [
                "thumbprintList"
            ],
            "createOnly": [
                "url"
            ]
        },
        "aws-native:iam:SAMLProvider": {
            "cf": "AWS::IAM::SAMLProvider",
            "inputs": {
                "name": {
                    "type": "string"
                },
                "samlMetadataDocument": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iam:SAMLProviderTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN) of the SAML provider"
                },
                "name": {
                    "type": "string"
                },
                "samlMetadataDocument": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iam:SAMLProviderTag"
                    }
                }
            },
            "required": [
                "samlMetadataDocument"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:iam:ServerCertificate": {
            "cf": "AWS::IAM::ServerCertificate",
            "inputs": {
                "certificateBody": {
                    "type": "string"
                },
                "certificateChain": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "serverCertificateName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iam:ServerCertificateTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN) of the server certificate"
                },
                "certificateBody": {
                    "type": "string"
                },
                "certificateChain": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "serverCertificateName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iam:ServerCertificateTag"
                    }
                }
            },
            "createOnly": [
                "certificateBody",
                "certificateChain",
                "privateKey",
                "serverCertificateName"
            ]
        },
        "aws-native:iam:VirtualMFADevice": {
            "cf": "AWS::IAM::VirtualMFADevice",
            "inputs": {
                "path": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iam:VirtualMFADeviceTag"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "virtualMfaDeviceName": {
                    "type": "string"
                }
            },
            "outputs": {
                "path": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iam:VirtualMFADeviceTag"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "virtualMfaDeviceName": {
                    "type": "string"
                }
            },
            "required": [
                "users"
            ],
            "createOnly": [
                "base32StringSeed",
                "path",
                "virtualMfaDeviceName"
            ]
        },
        "aws-native:imagebuilder:Component": {
            "cf": "AWS::ImageBuilder::Component",
            "inputs": {
                "changeDescription": {
                    "type": "string",
                    "description": "The change description of the component."
                },
                "data": {
                    "type": "string",
                    "description": "The data of the component."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the component."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key identifier used to encrypt the component."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component."
                },
                "platform": {
                    "$ref": "#/types/aws-native:imagebuilder:ComponentPlatform",
                    "description": "The platform of the component."
                },
                "supportedOsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operating system (OS) version supported by the component."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags associated with the component."
                },
                "uri": {
                    "type": "string",
                    "description": "The uri of the component."
                },
                "version": {
                    "type": "string",
                    "description": "The version of the component."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the component."
                },
                "changeDescription": {
                    "type": "string",
                    "description": "The change description of the component."
                },
                "data": {
                    "type": "string",
                    "description": "The data of the component."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the component."
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "The encryption status of the component."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key identifier used to encrypt the component."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the component."
                },
                "platform": {
                    "$ref": "#/types/aws-native:imagebuilder:ComponentPlatform",
                    "description": "The platform of the component."
                },
                "supportedOsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operating system (OS) version supported by the component."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags associated with the component."
                },
                "type": {
                    "$ref": "#/types/aws-native:imagebuilder:ComponentType",
                    "description": "The type of the component denotes whether the component is used to build the image or only to test it. "
                },
                "uri": {
                    "type": "string",
                    "description": "The uri of the component."
                },
                "version": {
                    "type": "string",
                    "description": "The version of the component."
                }
            },
            "required": [
                "name",
                "platform",
                "version"
            ],
            "createOnly": [
                "changeDescription",
                "data",
                "description",
                "kmsKeyId",
                "name",
                "platform",
                "supportedOsVersions",
                "tags",
                "uri",
                "version"
            ]
        },
        "aws-native:imagebuilder:ContainerRecipe": {
            "cf": "AWS::ImageBuilder::ContainerRecipe",
            "inputs": {
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeComponentConfiguration"
                    },
                    "description": "Components for build and test that are included in the container recipe."
                },
                "containerType": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeContainerType",
                    "description": "Specifies the type of container, such as Docker."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the container recipe."
                },
                "dockerfileTemplateData": {
                    "type": "string",
                    "description": "Dockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe."
                },
                "dockerfileTemplateUri": {
                    "type": "string",
                    "description": "The S3 URI for the Dockerfile that will be used to build your container image."
                },
                "imageOsVersionOverride": {
                    "type": "string",
                    "description": "Specifies the operating system version for the source image."
                },
                "instanceConfiguration": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeInstanceConfiguration",
                    "description": "A group of options that can be used to configure an instance for building and testing container images."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "Identifies which KMS key is used to encrypt the container image."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the container recipe."
                },
                "parentImage": {
                    "type": "string",
                    "description": "The source image for the container recipe."
                },
                "platformOverride": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipePlatformOverride",
                    "description": "Specifies the operating system platform when you use a custom source image."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Tags that are attached to the container recipe."
                },
                "targetRepository": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeTargetContainerRepository",
                    "description": "The destination repository for the container image."
                },
                "version": {
                    "type": "string",
                    "description": "The semantic version of the container recipe (\u003cmajor\u003e.\u003cminor\u003e.\u003cpatch\u003e)."
                },
                "workingDirectory": {
                    "type": "string",
                    "description": "The working directory to be used during build and test workflows."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the container recipe."
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeComponentConfiguration"
                    },
                    "description": "Components for build and test that are included in the container recipe."
                },
                "containerType": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeContainerType",
                    "description": "Specifies the type of container, such as Docker."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the container recipe."
                },
                "dockerfileTemplateData": {
                    "type": "string",
                    "description": "Dockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe."
                },
                "dockerfileTemplateUri": {
                    "type": "string",
                    "description": "The S3 URI for the Dockerfile that will be used to build your container image."
                },
                "imageOsVersionOverride": {
                    "type": "string",
                    "description": "Specifies the operating system version for the source image."
                },
                "instanceConfiguration": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeInstanceConfiguration",
                    "description": "A group of options that can be used to configure an instance for building and testing container images."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "Identifies which KMS key is used to encrypt the container image."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the container recipe."
                },
                "parentImage": {
                    "type": "string",
                    "description": "The source image for the container recipe."
                },
                "platformOverride": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipePlatformOverride",
                    "description": "Specifies the operating system platform when you use a custom source image."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Tags that are attached to the container recipe."
                },
                "targetRepository": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeTargetContainerRepository",
                    "description": "The destination repository for the container image."
                },
                "version": {
                    "type": "string",
                    "description": "The semantic version of the container recipe (\u003cmajor\u003e.\u003cminor\u003e.\u003cpatch\u003e)."
                },
                "workingDirectory": {
                    "type": "string",
                    "description": "The working directory to be used during build and test workflows."
                }
            },
            "createOnly": [
                "components",
                "containerType",
                "description",
                "dockerfileTemplateData",
                "dockerfileTemplateUri",
                "imageOsVersionOverride",
                "instanceConfiguration",
                "kmsKeyId",
                "name",
                "parentImage",
                "platformOverride",
                "tags",
                "targetRepository",
                "version",
                "workingDirectory"
            ]
        },
        "aws-native:imagebuilder:DistributionConfiguration": {
            "cf": "AWS::ImageBuilder::DistributionConfiguration",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the distribution configuration."
                },
                "distributions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:DistributionConfigurationDistribution"
                    },
                    "description": "The distributions of the distribution configuration."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the distribution configuration."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags associated with the component."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the distribution configuration."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the distribution configuration."
                },
                "distributions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:DistributionConfigurationDistribution"
                    },
                    "description": "The distributions of the distribution configuration."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the distribution configuration."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags associated with the component."
                }
            },
            "required": [
                "distributions",
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:imagebuilder:Image": {
            "cf": "AWS::ImageBuilder::Image",
            "inputs": {
                "containerRecipeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested."
                },
                "distributionConfigurationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the distribution configuration."
                },
                "enhancedImageMetadataEnabled": {
                    "type": "boolean",
                    "description": "Collects additional information about the image being created, including the operating system (OS) version and package list."
                },
                "imageRecipeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed."
                },
                "imageTestsConfiguration": {
                    "$ref": "#/types/aws-native:imagebuilder:ImageImageTestsConfiguration",
                    "description": "The image tests configuration used when creating this image."
                },
                "infrastructureConfigurationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the infrastructure configuration."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags associated with the image."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the image."
                },
                "containerRecipeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested."
                },
                "distributionConfigurationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the distribution configuration."
                },
                "enhancedImageMetadataEnabled": {
                    "type": "boolean",
                    "description": "Collects additional information about the image being created, including the operating system (OS) version and package list."
                },
                "imageId": {
                    "type": "string",
                    "description": "The AMI ID of the EC2 AMI in current region."
                },
                "imageRecipeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed."
                },
                "imageTestsConfiguration": {
                    "$ref": "#/types/aws-native:imagebuilder:ImageImageTestsConfiguration",
                    "description": "The image tests configuration used when creating this image."
                },
                "infrastructureConfigurationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the infrastructure configuration."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags associated with the image."
                }
            },
            "createOnly": [
                "distributionConfigurationArn",
                "enhancedImageMetadataEnabled",
                "imageRecipeArn",
                "imageTestsConfiguration",
                "infrastructureConfigurationArn",
                "tags"
            ]
        },
        "aws-native:imagebuilder:ImagePipeline": {
            "cf": "AWS::ImageBuilder::ImagePipeline",
            "inputs": {
                "containerRecipeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the image pipeline."
                },
                "distributionConfigurationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline."
                },
                "enhancedImageMetadataEnabled": {
                    "type": "boolean",
                    "description": "Collects additional information about the image being created, including the operating system (OS) version and package list."
                },
                "imageRecipeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed."
                },
                "imageTestsConfiguration": {
                    "$ref": "#/types/aws-native:imagebuilder:ImagePipelineImageTestsConfiguration",
                    "description": "The image tests configuration of the image pipeline."
                },
                "infrastructureConfigurationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image pipeline."
                },
                "schedule": {
                    "$ref": "#/types/aws-native:imagebuilder:ImagePipelineSchedule",
                    "description": "The schedule of the image pipeline."
                },
                "status": {
                    "$ref": "#/types/aws-native:imagebuilder:ImagePipelineStatus",
                    "description": "The status of the image pipeline."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags of this image pipeline."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the image pipeline."
                },
                "containerRecipeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the image pipeline."
                },
                "distributionConfigurationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline."
                },
                "enhancedImageMetadataEnabled": {
                    "type": "boolean",
                    "description": "Collects additional information about the image being created, including the operating system (OS) version and package list."
                },
                "imageRecipeArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed."
                },
                "imageTestsConfiguration": {
                    "$ref": "#/types/aws-native:imagebuilder:ImagePipelineImageTestsConfiguration",
                    "description": "The image tests configuration of the image pipeline."
                },
                "infrastructureConfigurationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image pipeline."
                },
                "schedule": {
                    "$ref": "#/types/aws-native:imagebuilder:ImagePipelineSchedule",
                    "description": "The schedule of the image pipeline."
                },
                "status": {
                    "$ref": "#/types/aws-native:imagebuilder:ImagePipelineStatus",
                    "description": "The status of the image pipeline."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags of this image pipeline."
                }
            },
            "createOnly": [
                "name"
            ]
        },
        "aws-native:imagebuilder:ImageRecipe": {
            "cf": "AWS::ImageBuilder::ImageRecipe",
            "inputs": {
                "additionalInstanceConfiguration": {
                    "$ref": "#/types/aws-native:imagebuilder:ImageRecipeAdditionalInstanceConfiguration",
                    "description": "Specify additional settings and launch scripts for your build instances."
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:ImageRecipeInstanceBlockDeviceMapping"
                    },
                    "description": "The block device mappings to apply when creating images from this recipe."
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:ImageRecipeComponentConfiguration"
                    },
                    "description": "The components of the image recipe."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the image recipe."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image recipe."
                },
                "parentImage": {
                    "type": "string",
                    "description": "The parent image of the image recipe."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags of the image recipe."
                },
                "version": {
                    "type": "string",
                    "description": "The version of the image recipe."
                },
                "workingDirectory": {
                    "type": "string",
                    "description": "The working directory to be used during build and test workflows."
                }
            },
            "outputs": {
                "additionalInstanceConfiguration": {
                    "$ref": "#/types/aws-native:imagebuilder:ImageRecipeAdditionalInstanceConfiguration",
                    "description": "Specify additional settings and launch scripts for your build instances."
                },
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the image recipe."
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:ImageRecipeInstanceBlockDeviceMapping"
                    },
                    "description": "The block device mappings to apply when creating images from this recipe."
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:ImageRecipeComponentConfiguration"
                    },
                    "description": "The components of the image recipe."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the image recipe."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image recipe."
                },
                "parentImage": {
                    "type": "string",
                    "description": "The parent image of the image recipe."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags of the image recipe."
                },
                "version": {
                    "type": "string",
                    "description": "The version of the image recipe."
                },
                "workingDirectory": {
                    "type": "string",
                    "description": "The working directory to be used during build and test workflows."
                }
            },
            "required": [
                "components",
                "name",
                "parentImage",
                "version"
            ],
            "createOnly": [
                "blockDeviceMappings",
                "components",
                "description",
                "name",
                "parentImage",
                "tags",
                "version",
                "workingDirectory"
            ]
        },
        "aws-native:imagebuilder:InfrastructureConfiguration": {
            "cf": "AWS::ImageBuilder::InfrastructureConfiguration",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the infrastructure configuration."
                },
                "instanceProfileName": {
                    "type": "string",
                    "description": "The instance profile of the infrastructure configuration."
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The instance types of the infrastructure configuration."
                },
                "keyPair": {
                    "type": "string",
                    "description": "The EC2 key pair of the infrastructure configuration.."
                },
                "logging": {
                    "$ref": "#/types/aws-native:imagebuilder:InfrastructureConfigurationLogging",
                    "description": "The logging configuration of the infrastructure configuration."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the infrastructure configuration."
                },
                "resourceTags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags attached to the resource created by Image Builder."
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The security group IDs of the infrastructure configuration."
                },
                "snsTopicArn": {
                    "type": "string",
                    "description": "The SNS Topic Amazon Resource Name (ARN) of the infrastructure configuration."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The subnet ID of the infrastructure configuration."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags associated with the component."
                },
                "terminateInstanceOnFailure": {
                    "type": "boolean",
                    "description": "The terminate instance on failure configuration of the infrastructure configuration."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the infrastructure configuration."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the infrastructure configuration."
                },
                "instanceProfileName": {
                    "type": "string",
                    "description": "The instance profile of the infrastructure configuration."
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The instance types of the infrastructure configuration."
                },
                "keyPair": {
                    "type": "string",
                    "description": "The EC2 key pair of the infrastructure configuration.."
                },
                "logging": {
                    "$ref": "#/types/aws-native:imagebuilder:InfrastructureConfigurationLogging",
                    "description": "The logging configuration of the infrastructure configuration."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the infrastructure configuration."
                },
                "resourceTags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags attached to the resource created by Image Builder."
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The security group IDs of the infrastructure configuration."
                },
                "snsTopicArn": {
                    "type": "string",
                    "description": "The SNS Topic Amazon Resource Name (ARN) of the infrastructure configuration."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The subnet ID of the infrastructure configuration."
                },
                "tags": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The tags associated with the component."
                },
                "terminateInstanceOnFailure": {
                    "type": "boolean",
                    "description": "The terminate instance on failure configuration of the infrastructure configuration."
                }
            },
            "required": [
                "instanceProfileName",
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:iot:AccountAuditConfiguration": {
            "cf": "AWS::IoT::AccountAuditConfiguration",
            "inputs": {
                "accountId": {
                    "type": "string",
                    "description": "Your 12-digit account ID (used as the primary identifier for the CloudFormation resource)."
                },
                "auditCheckConfigurations": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfigurations"
                },
                "auditNotificationTargetConfigurations": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditNotificationTargetConfigurations"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit."
                }
            },
            "outputs": {
                "accountId": {
                    "type": "string",
                    "description": "Your 12-digit account ID (used as the primary identifier for the CloudFormation resource)."
                },
                "auditCheckConfigurations": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfigurations"
                },
                "auditNotificationTargetConfigurations": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditNotificationTargetConfigurations"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit."
                }
            },
            "required": [
                "accountId",
                "auditCheckConfigurations",
                "roleArn"
            ],
            "createOnly": [
                "accountId"
            ]
        },
        "aws-native:iot:Authorizer": {
            "cf": "AWS::IoT::Authorizer",
            "inputs": {
                "authorizerFunctionArn": {
                    "type": "string"
                },
                "authorizerName": {
                    "type": "string"
                },
                "signingDisabled": {
                    "type": "boolean"
                },
                "status": {
                    "$ref": "#/types/aws-native:iot:AuthorizerStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:AuthorizerTag"
                    }
                },
                "tokenKeyName": {
                    "type": "string"
                },
                "tokenSigningPublicKeys": {
                    "$ref": "pulumi.json#/Any"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "authorizerFunctionArn": {
                    "type": "string"
                },
                "authorizerName": {
                    "type": "string"
                },
                "signingDisabled": {
                    "type": "boolean"
                },
                "status": {
                    "$ref": "#/types/aws-native:iot:AuthorizerStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:AuthorizerTag"
                    }
                },
                "tokenKeyName": {
                    "type": "string"
                },
                "tokenSigningPublicKeys": {
                    "$ref": "pulumi.json#/Any"
                }
            },
            "required": [
                "authorizerFunctionArn"
            ],
            "createOnly": [
                "authorizerName",
                "signingDisabled"
            ]
        },
        "aws-native:iot:Certificate": {
            "cf": "AWS::IoT::Certificate",
            "inputs": {
                "cACertificatePem": {
                    "type": "string"
                },
                "certificateMode": {
                    "$ref": "#/types/aws-native:iot:CertificateCertificateMode"
                },
                "certificatePem": {
                    "type": "string"
                },
                "certificateSigningRequest": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/types/aws-native:iot:CertificateStatus"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "cACertificatePem": {
                    "type": "string"
                },
                "certificateMode": {
                    "$ref": "#/types/aws-native:iot:CertificateCertificateMode"
                },
                "certificatePem": {
                    "type": "string"
                },
                "certificateSigningRequest": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/types/aws-native:iot:CertificateStatus"
                }
            },
            "required": [
                "status"
            ],
            "createOnly": [
                "cACertificatePem",
                "certificateMode",
                "certificatePem",
                "certificateSigningRequest"
            ]
        },
        "aws-native:iot:CustomMetric": {
            "cf": "AWS::IoT::CustomMetric",
            "inputs": {
                "displayName": {
                    "type": "string",
                    "description": "Field represents a friendly name in the console for the custom metric; it doesn't have to be unique. Don't use this name as the metric identifier in the device metric report. Can be updated once defined."
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the custom metric. This will be used in the metric report submitted from the device/thing. Shouldn't begin with aws: . Cannot be updated once defined."
                },
                "metricType": {
                    "$ref": "#/types/aws-native:iot:CustomMetricMetricType",
                    "description": "The type of the custom metric. Types include string-list, ip-address-list, number-list, and number."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:CustomMetricTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "displayName": {
                    "type": "string",
                    "description": "Field represents a friendly name in the console for the custom metric; it doesn't have to be unique. Don't use this name as the metric identifier in the device metric report. Can be updated once defined."
                },
                "metricArn": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) of the custom metric."
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the custom metric. This will be used in the metric report submitted from the device/thing. Shouldn't begin with aws: . Cannot be updated once defined."
                },
                "metricType": {
                    "$ref": "#/types/aws-native:iot:CustomMetricMetricType",
                    "description": "The type of the custom metric. Types include string-list, ip-address-list, number-list, and number."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:CustomMetricTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "metricType"
            ],
            "createOnly": [
                "metricName",
                "metricType"
            ]
        },
        "aws-native:iot:Dimension": {
            "cf": "AWS::IoT::Dimension",
            "inputs": {
                "name": {
                    "type": "string",
                    "description": "A unique identifier for the dimension."
                },
                "stringValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the value or list of values for the dimension."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:DimensionTag"
                    },
                    "description": "Metadata that can be used to manage the dimension."
                },
                "type": {
                    "$ref": "#/types/aws-native:iot:DimensionType",
                    "description": "Specifies the type of the dimension."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN (Amazon resource name) of the created dimension."
                },
                "name": {
                    "type": "string",
                    "description": "A unique identifier for the dimension."
                },
                "stringValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the value or list of values for the dimension."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:DimensionTag"
                    },
                    "description": "Metadata that can be used to manage the dimension."
                },
                "type": {
                    "$ref": "#/types/aws-native:iot:DimensionType",
                    "description": "Specifies the type of the dimension."
                }
            },
            "required": [
                "stringValues",
                "type"
            ],
            "createOnly": [
                "name",
                "type"
            ]
        },
        "aws-native:iot:DomainConfiguration": {
            "cf": "AWS::IoT::DomainConfiguration",
            "inputs": {
                "authorizerConfig": {
                    "$ref": "#/types/aws-native:iot:DomainConfigurationAuthorizerConfig"
                },
                "domainConfigurationName": {
                    "type": "string"
                },
                "domainConfigurationStatus": {
                    "$ref": "#/types/aws-native:iot:DomainConfigurationDomainConfigurationStatus"
                },
                "domainName": {
                    "type": "string"
                },
                "serverCertificateArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceType": {
                    "$ref": "#/types/aws-native:iot:DomainConfigurationServiceType"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:DomainConfigurationTag"
                    }
                },
                "validationCertificateArn": {
                    "type": "string"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "authorizerConfig": {
                    "$ref": "#/types/aws-native:iot:DomainConfigurationAuthorizerConfig"
                },
                "domainConfigurationName": {
                    "type": "string"
                },
                "domainConfigurationStatus": {
                    "$ref": "#/types/aws-native:iot:DomainConfigurationDomainConfigurationStatus"
                },
                "domainName": {
                    "type": "string"
                },
                "domainType": {
                    "$ref": "#/types/aws-native:iot:DomainConfigurationDomainType"
                },
                "serverCertificateArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serverCertificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:DomainConfigurationServerCertificateSummary"
                    }
                },
                "serviceType": {
                    "$ref": "#/types/aws-native:iot:DomainConfigurationServiceType"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:DomainConfigurationTag"
                    }
                },
                "validationCertificateArn": {
                    "type": "string"
                }
            },
            "createOnly": [
                "domainConfigurationName",
                "domainName",
                "serverCertificateArns",
                "serviceType",
                "validationCertificateArn"
            ]
        },
        "aws-native:iot:FleetMetric": {
            "cf": "AWS::IoT::FleetMetric",
            "inputs": {
                "aggregationField": {
                    "type": "string",
                    "description": "The aggregation field to perform aggregation and metric emission"
                },
                "aggregationType": {
                    "$ref": "#/types/aws-native:iot:FleetMetricAggregationType"
                },
                "description": {
                    "type": "string",
                    "description": "The description of a fleet metric"
                },
                "indexName": {
                    "type": "string",
                    "description": "The index name of a fleet metric"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the fleet metric"
                },
                "period": {
                    "type": "integer",
                    "description": "The period of metric emission in seconds"
                },
                "queryString": {
                    "type": "string",
                    "description": "The Fleet Indexing query used by a fleet metric"
                },
                "queryVersion": {
                    "type": "string",
                    "description": "The version of a Fleet Indexing query used by a fleet metric"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:FleetMetricTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of data points emitted by a fleet metric"
                }
            },
            "outputs": {
                "aggregationField": {
                    "type": "string",
                    "description": "The aggregation field to perform aggregation and metric emission"
                },
                "aggregationType": {
                    "$ref": "#/types/aws-native:iot:FleetMetricAggregationType"
                },
                "creationDate": {
                    "type": "number",
                    "description": "The creation date of a fleet metric"
                },
                "description": {
                    "type": "string",
                    "description": "The description of a fleet metric"
                },
                "indexName": {
                    "type": "string",
                    "description": "The index name of a fleet metric"
                },
                "lastModifiedDate": {
                    "type": "number",
                    "description": "The last modified date of a fleet metric"
                },
                "metricArn": {
                    "type": "string",
                    "description": "The Amazon Resource Number (ARN) of a fleet metric metric"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the fleet metric"
                },
                "period": {
                    "type": "integer",
                    "description": "The period of metric emission in seconds"
                },
                "queryString": {
                    "type": "string",
                    "description": "The Fleet Indexing query used by a fleet metric"
                },
                "queryVersion": {
                    "type": "string",
                    "description": "The version of a Fleet Indexing query used by a fleet metric"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:FleetMetricTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of data points emitted by a fleet metric"
                },
                "version": {
                    "type": "number",
                    "description": "The version of a fleet metric"
                }
            },
            "required": [
                "metricName"
            ],
            "createOnly": [
                "metricName"
            ]
        },
        "aws-native:iot:MitigationAction": {
            "cf": "AWS::IoT::MitigationAction",
            "inputs": {
                "actionName": {
                    "type": "string",
                    "description": "A unique identifier for the mitigation action."
                },
                "actionParams": {
                    "$ref": "#/types/aws-native:iot:MitigationActionActionParams"
                },
                "roleArn": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:MitigationActionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "actionName": {
                    "type": "string",
                    "description": "A unique identifier for the mitigation action."
                },
                "actionParams": {
                    "$ref": "#/types/aws-native:iot:MitigationActionActionParams"
                },
                "mitigationActionArn": {
                    "type": "string"
                },
                "mitigationActionId": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:MitigationActionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "actionParams",
                "roleArn"
            ],
            "createOnly": [
                "actionName"
            ]
        },
        "aws-native:iot:ProvisioningTemplate": {
            "cf": "AWS::IoT::ProvisioningTemplate",
            "inputs": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "preProvisioningHook": {
                    "$ref": "#/types/aws-native:iot:ProvisioningTemplateProvisioningHook"
                },
                "provisioningRoleArn": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:ProvisioningTemplateTag"
                    }
                },
                "templateBody": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "outputs": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "preProvisioningHook": {
                    "$ref": "#/types/aws-native:iot:ProvisioningTemplateProvisioningHook"
                },
                "provisioningRoleArn": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:ProvisioningTemplateTag"
                    }
                },
                "templateArn": {
                    "type": "string"
                },
                "templateBody": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "required": [
                "provisioningRoleArn",
                "templateBody"
            ],
            "createOnly": [
                "templateName"
            ]
        },
        "aws-native:iot:ScheduledAudit": {
            "cf": "AWS::IoT::ScheduledAudit",
            "inputs": {
                "dayOfMonth": {
                    "type": "string",
                    "description": "The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY."
                },
                "dayOfWeek": {
                    "$ref": "#/types/aws-native:iot:ScheduledAuditDayOfWeek",
                    "description": "The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY."
                },
                "frequency": {
                    "$ref": "#/types/aws-native:iot:ScheduledAuditFrequency",
                    "description": "How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY."
                },
                "scheduledAuditName": {
                    "type": "string",
                    "description": "The name you want to give to the scheduled audit."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:ScheduledAuditTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "targetCheckNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Which checks are performed during the scheduled audit. Checks must be enabled for your account."
                }
            },
            "outputs": {
                "dayOfMonth": {
                    "type": "string",
                    "description": "The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY."
                },
                "dayOfWeek": {
                    "$ref": "#/types/aws-native:iot:ScheduledAuditDayOfWeek",
                    "description": "The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY."
                },
                "frequency": {
                    "$ref": "#/types/aws-native:iot:ScheduledAuditFrequency",
                    "description": "How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY."
                },
                "scheduledAuditArn": {
                    "type": "string",
                    "description": "The ARN (Amazon resource name) of the scheduled audit."
                },
                "scheduledAuditName": {
                    "type": "string",
                    "description": "The name you want to give to the scheduled audit."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:ScheduledAuditTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                },
                "targetCheckNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Which checks are performed during the scheduled audit. Checks must be enabled for your account."
                }
            },
            "required": [
                "frequency",
                "targetCheckNames"
            ],
            "createOnly": [
                "scheduledAuditName"
            ]
        },
        "aws-native:iot:SecurityProfile": {
            "cf": "AWS::IoT::SecurityProfile",
            "inputs": {
                "additionalMetricsToRetainV2": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:SecurityProfileMetricToRetain"
                    },
                    "description": "A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here."
                },
                "alertTargets": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Specifies the destinations to which alerts are sent."
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:SecurityProfileBehavior"
                    },
                    "description": "Specifies the behaviors that, when violated by a device (thing), cause an alert."
                },
                "securityProfileDescription": {
                    "type": "string",
                    "description": "A description of the security profile."
                },
                "securityProfileName": {
                    "type": "string",
                    "description": "A unique identifier for the security profile."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:SecurityProfileTag"
                    },
                    "description": "Metadata that can be used to manage the security profile."
                },
                "targetArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of target ARNs that the security profile is attached to."
                }
            },
            "outputs": {
                "additionalMetricsToRetainV2": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:SecurityProfileMetricToRetain"
                    },
                    "description": "A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here."
                },
                "alertTargets": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Specifies the destinations to which alerts are sent."
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:SecurityProfileBehavior"
                    },
                    "description": "Specifies the behaviors that, when violated by a device (thing), cause an alert."
                },
                "securityProfileArn": {
                    "type": "string",
                    "description": "The ARN (Amazon resource name) of the created security profile."
                },
                "securityProfileDescription": {
                    "type": "string",
                    "description": "A description of the security profile."
                },
                "securityProfileName": {
                    "type": "string",
                    "description": "A unique identifier for the security profile."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:SecurityProfileTag"
                    },
                    "description": "Metadata that can be used to manage the security profile."
                },
                "targetArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of target ARNs that the security profile is attached to."
                }
            },
            "createOnly": [
                "securityProfileName"
            ]
        },
        "aws-native:iot:TopicRule": {
            "cf": "AWS::IoT::TopicRule",
            "inputs": {
                "ruleName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:TopicRuleTag"
                    }
                },
                "topicRulePayload": {
                    "$ref": "#/types/aws-native:iot:TopicRuleTopicRulePayload"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "ruleName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:TopicRuleTag"
                    }
                },
                "topicRulePayload": {
                    "$ref": "#/types/aws-native:iot:TopicRuleTopicRulePayload"
                }
            },
            "required": [
                "topicRulePayload"
            ],
            "createOnly": [
                "ruleName"
            ]
        },
        "aws-native:iot:TopicRuleDestination": {
            "cf": "AWS::IoT::TopicRuleDestination",
            "inputs": {
                "httpUrlProperties": {
                    "$ref": "#/types/aws-native:iot:TopicRuleDestinationHttpUrlDestinationSummary",
                    "description": "HTTP URL destination properties."
                },
                "status": {
                    "$ref": "#/types/aws-native:iot:TopicRuleDestinationTopicRuleDestinationStatus",
                    "description": "The status of the TopicRuleDestination."
                },
                "vpcProperties": {
                    "$ref": "#/types/aws-native:iot:TopicRuleDestinationVpcDestinationProperties",
                    "description": "VPC destination properties."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN)."
                },
                "httpUrlProperties": {
                    "$ref": "#/types/aws-native:iot:TopicRuleDestinationHttpUrlDestinationSummary",
                    "description": "HTTP URL destination properties."
                },
                "status": {
                    "$ref": "#/types/aws-native:iot:TopicRuleDestinationTopicRuleDestinationStatus",
                    "description": "The status of the TopicRuleDestination."
                },
                "statusReason": {
                    "type": "string",
                    "description": "The reasoning for the current status of the TopicRuleDestination."
                },
                "vpcProperties": {
                    "$ref": "#/types/aws-native:iot:TopicRuleDestinationVpcDestinationProperties",
                    "description": "VPC destination properties."
                }
            },
            "createOnly": [
                "httpUrlProperties",
                "vpcProperties"
            ]
        },
        "aws-native:iotcoredeviceadvisor:SuiteDefinition": {
            "cf": "AWS::IoTCoreDeviceAdvisor::SuiteDefinition",
            "inputs": {
                "suiteDefinitionConfiguration": {
                    "$ref": "pulumi.json#/Any"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotcoredeviceadvisor:SuiteDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "suiteDefinitionArn": {
                    "type": "string",
                    "description": "The Amazon Resource name for the suite definition."
                },
                "suiteDefinitionConfiguration": {
                    "$ref": "pulumi.json#/Any"
                },
                "suiteDefinitionId": {
                    "type": "string",
                    "description": "The unique identifier for the suite definition."
                },
                "suiteDefinitionVersion": {
                    "type": "string",
                    "description": "The suite definition version of a test suite."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotcoredeviceadvisor:SuiteDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "suiteDefinitionConfiguration"
            ]
        },
        "aws-native:iotevents:DetectorModel": {
            "cf": "AWS::IoTEvents::DetectorModel",
            "inputs": {
                "detectorModelDefinition": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelDetectorModelDefinition"
                },
                "detectorModelDescription": {
                    "type": "string",
                    "description": "A brief description of the detector model."
                },
                "detectorModelName": {
                    "type": "string",
                    "description": "The name of the detector model."
                },
                "evaluationMethod": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelEvaluationMethod",
                    "description": "Information about the order in which events are evaluated and how actions are executed."
                },
                "key": {
                    "type": "string",
                    "description": "The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.\n\nThis parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that grants permission to AWS IoT Events to perform its operations."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:DetectorModelTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)."
                }
            },
            "outputs": {
                "detectorModelDefinition": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelDetectorModelDefinition"
                },
                "detectorModelDescription": {
                    "type": "string",
                    "description": "A brief description of the detector model."
                },
                "detectorModelName": {
                    "type": "string",
                    "description": "The name of the detector model."
                },
                "evaluationMethod": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelEvaluationMethod",
                    "description": "Information about the order in which events are evaluated and how actions are executed."
                },
                "key": {
                    "type": "string",
                    "description": "The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.\n\nThis parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that grants permission to AWS IoT Events to perform its operations."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:DetectorModelTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)."
                }
            },
            "required": [
                "detectorModelDefinition",
                "roleArn"
            ],
            "createOnly": [
                "detectorModelName",
                "key"
            ]
        },
        "aws-native:iotevents:Input": {
            "cf": "AWS::IoTEvents::Input",
            "inputs": {
                "inputDefinition": {
                    "$ref": "#/types/aws-native:iotevents:InputInputDefinition"
                },
                "inputDescription": {
                    "type": "string",
                    "description": "A brief description of the input."
                },
                "inputName": {
                    "type": "string",
                    "description": "The name of the input."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:InputTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)."
                }
            },
            "outputs": {
                "inputDefinition": {
                    "$ref": "#/types/aws-native:iotevents:InputInputDefinition"
                },
                "inputDescription": {
                    "type": "string",
                    "description": "A brief description of the input."
                },
                "inputName": {
                    "type": "string",
                    "description": "The name of the input."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:InputTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)."
                }
            },
            "required": [
                "inputDefinition"
            ],
            "createOnly": [
                "inputName"
            ]
        },
        "aws-native:iotfleethub:Application": {
            "cf": "AWS::IoTFleetHub::Application",
            "inputs": {
                "applicationDescription": {
                    "type": "string",
                    "description": "Application Description, should be between 1 and 2048 characters."
                },
                "applicationName": {
                    "type": "string",
                    "description": "Application Name, should be between 1 and 256 characters."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that the web application assumes when it interacts with AWS IoT Core. For more info on configuring this attribute, see https://docs.aws.amazon.com/iot/latest/apireference/API_iotfleethub_CreateApplication.html#API_iotfleethub_CreateApplication_RequestSyntax"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotfleethub:ApplicationTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the application."
                }
            },
            "outputs": {
                "applicationArn": {
                    "type": "string",
                    "description": "The ARN of the application."
                },
                "applicationCreationDate": {
                    "type": "integer",
                    "description": "When the Application was created"
                },
                "applicationDescription": {
                    "type": "string",
                    "description": "Application Description, should be between 1 and 2048 characters."
                },
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application."
                },
                "applicationLastUpdateDate": {
                    "type": "integer",
                    "description": "When the Application was last updated"
                },
                "applicationName": {
                    "type": "string",
                    "description": "Application Name, should be between 1 and 256 characters."
                },
                "applicationState": {
                    "type": "string",
                    "description": "The current state of the application."
                },
                "applicationUrl": {
                    "type": "string",
                    "description": "The URL of the application."
                },
                "errorMessage": {
                    "type": "string",
                    "description": "A message indicating why Create or Delete Application failed."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that the web application assumes when it interacts with AWS IoT Core. For more info on configuring this attribute, see https://docs.aws.amazon.com/iot/latest/apireference/API_iotfleethub_CreateApplication.html#API_iotfleethub_CreateApplication_RequestSyntax"
                },
                "ssoClientId": {
                    "type": "string",
                    "description": "The AWS SSO application generated client ID (used with AWS SSO APIs)."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotfleethub:ApplicationTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the application."
                }
            },
            "required": [
                "applicationName",
                "roleArn"
            ]
        },
        "aws-native:iotsitewise:AccessPolicy": {
            "cf": "AWS::IoTSiteWise::AccessPolicy",
            "inputs": {
                "accessPolicyIdentity": {
                    "$ref": "#/types/aws-native:iotsitewise:AccessPolicyAccessPolicyIdentity",
                    "description": "The identity for this access policy. Choose either a user or a group but not both."
                },
                "accessPolicyPermission": {
                    "type": "string",
                    "description": "The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER."
                },
                "accessPolicyResource": {
                    "$ref": "#/types/aws-native:iotsitewise:AccessPolicyAccessPolicyResource",
                    "description": "The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both."
                }
            },
            "outputs": {
                "accessPolicyArn": {
                    "type": "string",
                    "description": "The ARN of the access policy."
                },
                "accessPolicyId": {
                    "type": "string",
                    "description": "The ID of the access policy."
                },
                "accessPolicyIdentity": {
                    "$ref": "#/types/aws-native:iotsitewise:AccessPolicyAccessPolicyIdentity",
                    "description": "The identity for this access policy. Choose either a user or a group but not both."
                },
                "accessPolicyPermission": {
                    "type": "string",
                    "description": "The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER."
                },
                "accessPolicyResource": {
                    "$ref": "#/types/aws-native:iotsitewise:AccessPolicyAccessPolicyResource",
                    "description": "The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both."
                }
            },
            "required": [
                "accessPolicyIdentity",
                "accessPolicyPermission",
                "accessPolicyResource"
            ]
        },
        "aws-native:iotsitewise:Asset": {
            "cf": "AWS::IoTSiteWise::Asset",
            "inputs": {
                "assetHierarchies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetAssetHierarchy"
                    }
                },
                "assetModelId": {
                    "type": "string",
                    "description": "The ID of the asset model from which to create the asset."
                },
                "assetName": {
                    "type": "string",
                    "description": "A unique, friendly name for the asset."
                },
                "assetProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetAssetProperty"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset."
                }
            },
            "outputs": {
                "assetArn": {
                    "type": "string",
                    "description": "The ARN of the asset"
                },
                "assetHierarchies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetAssetHierarchy"
                    }
                },
                "assetId": {
                    "type": "string",
                    "description": "The ID of the asset"
                },
                "assetModelId": {
                    "type": "string",
                    "description": "The ID of the asset model from which to create the asset."
                },
                "assetName": {
                    "type": "string",
                    "description": "A unique, friendly name for the asset."
                },
                "assetProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetAssetProperty"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset."
                }
            },
            "required": [
                "assetModelId",
                "assetName"
            ]
        },
        "aws-native:iotsitewise:AssetModel": {
            "cf": "AWS::IoTSiteWise::AssetModel",
            "inputs": {
                "assetModelCompositeModels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelAssetModelCompositeModel"
                    },
                    "description": "The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties."
                },
                "assetModelDescription": {
                    "type": "string",
                    "description": "A description for the asset model."
                },
                "assetModelHierarchies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelAssetModelHierarchy"
                    },
                    "description": "The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. You can specify up to 10 hierarchies per asset model."
                },
                "assetModelName": {
                    "type": "string",
                    "description": "A unique, friendly name for the asset model."
                },
                "assetModelProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelAssetModelProperty"
                    },
                    "description": "The property definitions of the asset model. You can specify up to 200 properties per asset model."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                }
            },
            "outputs": {
                "assetModelArn": {
                    "type": "string",
                    "description": "The ARN of the asset model, which has the following format."
                },
                "assetModelCompositeModels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelAssetModelCompositeModel"
                    },
                    "description": "The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties."
                },
                "assetModelDescription": {
                    "type": "string",
                    "description": "A description for the asset model."
                },
                "assetModelHierarchies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelAssetModelHierarchy"
                    },
                    "description": "The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. You can specify up to 10 hierarchies per asset model."
                },
                "assetModelId": {
                    "type": "string",
                    "description": "The ID of the asset model."
                },
                "assetModelName": {
                    "type": "string",
                    "description": "A unique, friendly name for the asset model."
                },
                "assetModelProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelAssetModelProperty"
                    },
                    "description": "The property definitions of the asset model. You can specify up to 200 properties per asset model."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                }
            },
            "required": [
                "assetModelName"
            ]
        },
        "aws-native:iotsitewise:Dashboard": {
            "cf": "AWS::IoTSiteWise::Dashboard",
            "inputs": {
                "dashboardDefinition": {
                    "type": "string",
                    "description": "The dashboard definition specified in a JSON literal."
                },
                "dashboardDescription": {
                    "type": "string",
                    "description": "A description for the dashboard."
                },
                "dashboardName": {
                    "type": "string",
                    "description": "A friendly name for the dashboard."
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project in which to create the dashboard."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:DashboardTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the dashboard."
                }
            },
            "outputs": {
                "dashboardArn": {
                    "type": "string",
                    "description": "The ARN of the dashboard."
                },
                "dashboardDefinition": {
                    "type": "string",
                    "description": "The dashboard definition specified in a JSON literal."
                },
                "dashboardDescription": {
                    "type": "string",
                    "description": "A description for the dashboard."
                },
                "dashboardId": {
                    "type": "string",
                    "description": "The ID of the dashboard."
                },
                "dashboardName": {
                    "type": "string",
                    "description": "A friendly name for the dashboard."
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project in which to create the dashboard."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:DashboardTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the dashboard."
                }
            },
            "required": [
                "dashboardDefinition",
                "dashboardDescription",
                "dashboardName"
            ],
            "createOnly": [
                "projectId"
            ]
        },
        "aws-native:iotsitewise:Gateway": {
            "cf": "AWS::IoTSiteWise::Gateway",
            "inputs": {
                "gatewayCapabilitySummaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:GatewayGatewayCapabilitySummary"
                    },
                    "description": "A list of gateway capability summaries that each contain a namespace and status."
                },
                "gatewayName": {
                    "type": "string",
                    "description": "A unique, friendly name for the gateway."
                },
                "gatewayPlatform": {
                    "$ref": "#/types/aws-native:iotsitewise:GatewayGatewayPlatform",
                    "description": "The gateway's platform. You can only specify one platform in a gateway."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:GatewayTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the gateway."
                }
            },
            "outputs": {
                "gatewayCapabilitySummaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:GatewayGatewayCapabilitySummary"
                    },
                    "description": "A list of gateway capability summaries that each contain a namespace and status."
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the gateway device."
                },
                "gatewayName": {
                    "type": "string",
                    "description": "A unique, friendly name for the gateway."
                },
                "gatewayPlatform": {
                    "$ref": "#/types/aws-native:iotsitewise:GatewayGatewayPlatform",
                    "description": "The gateway's platform. You can only specify one platform in a gateway."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:GatewayTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the gateway."
                }
            },
            "required": [
                "gatewayName",
                "gatewayPlatform"
            ],
            "createOnly": [
                "gatewayPlatform"
            ]
        },
        "aws-native:iotsitewise:Portal": {
            "cf": "AWS::IoTSiteWise::Portal",
            "inputs": {
                "alarms": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range."
                },
                "notificationSenderEmail": {
                    "type": "string",
                    "description": "The email address that sends alarm notifications."
                },
                "portalAuthMode": {
                    "type": "string",
                    "description": "The service to use to authenticate users to the portal. Choose from SSO or IAM. You can't change this value after you create a portal."
                },
                "portalContactEmail": {
                    "type": "string",
                    "description": "The AWS administrator's contact email address."
                },
                "portalDescription": {
                    "type": "string",
                    "description": "A description for the portal."
                },
                "portalName": {
                    "type": "string",
                    "description": "A friendly name for the portal."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:PortalTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the portal."
                }
            },
            "outputs": {
                "alarms": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range."
                },
                "notificationSenderEmail": {
                    "type": "string",
                    "description": "The email address that sends alarm notifications."
                },
                "portalArn": {
                    "type": "string",
                    "description": "The ARN of the portal, which has the following format."
                },
                "portalAuthMode": {
                    "type": "string",
                    "description": "The service to use to authenticate users to the portal. Choose from SSO or IAM. You can't change this value after you create a portal."
                },
                "portalClientId": {
                    "type": "string",
                    "description": "The AWS SSO application generated client ID (used with AWS SSO APIs)."
                },
                "portalContactEmail": {
                    "type": "string",
                    "description": "The AWS administrator's contact email address."
                },
                "portalDescription": {
                    "type": "string",
                    "description": "A description for the portal."
                },
                "portalId": {
                    "type": "string",
                    "description": "The ID of the portal."
                },
                "portalName": {
                    "type": "string",
                    "description": "A friendly name for the portal."
                },
                "portalStartUrl": {
                    "type": "string",
                    "description": "The public root URL for the AWS IoT AWS IoT SiteWise Monitor application portal."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:PortalTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the portal."
                }
            },
            "required": [
                "portalContactEmail",
                "portalName",
                "roleArn"
            ],
            "createOnly": [
                "portalAuthMode"
            ]
        },
        "aws-native:iotsitewise:Project": {
            "cf": "AWS::IoTSiteWise::Project",
            "inputs": {
                "portalId": {
                    "type": "string",
                    "description": "The ID of the portal in which to create the project."
                },
                "projectDescription": {
                    "type": "string",
                    "description": "A description for the project."
                },
                "projectName": {
                    "type": "string",
                    "description": "A friendly name for the project."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:ProjectTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the project."
                }
            },
            "outputs": {
                "portalId": {
                    "type": "string",
                    "description": "The ID of the portal in which to create the project."
                },
                "projectArn": {
                    "type": "string",
                    "description": "The ARN of the project."
                },
                "projectDescription": {
                    "type": "string",
                    "description": "A description for the project."
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project."
                },
                "projectName": {
                    "type": "string",
                    "description": "A friendly name for the project."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:ProjectTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the project."
                }
            },
            "required": [
                "portalId",
                "projectName"
            ],
            "createOnly": [
                "portalId"
            ]
        },
        "aws-native:iotwireless:Destination": {
            "cf": "AWS::IoTWireless::Destination",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Destination description"
                },
                "expression": {
                    "type": "string",
                    "description": "Destination expression"
                },
                "expressionType": {
                    "$ref": "#/types/aws-native:iotwireless:DestinationExpressionType",
                    "description": "Must be RuleName"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of destination"
                },
                "roleArn": {
                    "type": "string",
                    "description": "AWS role ARN that grants access"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:DestinationTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the destination."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Destination arn. Returned after successful create."
                },
                "description": {
                    "type": "string",
                    "description": "Destination description"
                },
                "expression": {
                    "type": "string",
                    "description": "Destination expression"
                },
                "expressionType": {
                    "$ref": "#/types/aws-native:iotwireless:DestinationExpressionType",
                    "description": "Must be RuleName"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of destination"
                },
                "roleArn": {
                    "type": "string",
                    "description": "AWS role ARN that grants access"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:DestinationTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the destination."
                }
            },
            "required": [
                "expression",
                "expressionType",
                "name",
                "roleArn"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:iotwireless:DeviceProfile": {
            "cf": "AWS::IoTWireless::DeviceProfile",
            "inputs": {
                "loRaWAN": {
                    "$ref": "#/types/aws-native:iotwireless:DeviceProfileLoRaWANDeviceProfile",
                    "description": "LoRaWANDeviceProfile supports all LoRa specific attributes for service profile for CreateDeviceProfile operation"
                },
                "name": {
                    "type": "string",
                    "description": "Name of service profile"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:DeviceProfileTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the device profile."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Service profile Arn. Returned after successful create."
                },
                "loRaWAN": {
                    "$ref": "#/types/aws-native:iotwireless:DeviceProfileLoRaWANDeviceProfile",
                    "description": "LoRaWANDeviceProfile supports all LoRa specific attributes for service profile for CreateDeviceProfile operation"
                },
                "name": {
                    "type": "string",
                    "description": "Name of service profile"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:DeviceProfileTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the device profile."
                }
            }
        },
        "aws-native:iotwireless:ServiceProfile": {
            "cf": "AWS::IoTWireless::ServiceProfile",
            "inputs": {
                "loRaWAN": {
                    "$ref": "#/types/aws-native:iotwireless:ServiceProfileLoRaWANServiceProfile",
                    "description": "LoRaWAN supports all LoRa specific attributes for service profile for CreateServiceProfile operation"
                },
                "name": {
                    "type": "string",
                    "description": "Name of service profile"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:ServiceProfileTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the service profile."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Service profile Arn. Returned after successful create."
                },
                "loRaWAN": {
                    "$ref": "#/types/aws-native:iotwireless:ServiceProfileLoRaWANServiceProfile",
                    "description": "LoRaWAN supports all LoRa specific attributes for service profile for CreateServiceProfile operation"
                },
                "name": {
                    "type": "string",
                    "description": "Name of service profile"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:ServiceProfileTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the service profile."
                }
            }
        },
        "aws-native:iotwireless:TaskDefinition": {
            "cf": "AWS::IoTWireless::TaskDefinition",
            "inputs": {
                "autoCreateTasks": {
                    "type": "boolean",
                    "description": "Whether to automatically create tasks using this task definition for all gateways with the specified current version. If false, the task must me created by calling CreateWirelessGatewayTask."
                },
                "loRaWANUpdateGatewayTaskEntry": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionLoRaWANUpdateGatewayTaskEntry",
                    "description": "The list of task definitions."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the new resource."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:TaskDefinitionTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the destination."
                },
                "taskDefinitionType": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionTaskDefinitionType",
                    "description": "A filter to list only the wireless gateway task definitions that use this task definition type"
                },
                "update": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionUpdateWirelessGatewayTaskCreate",
                    "description": "Information about the gateways to update."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "TaskDefinition arn. Returned after successful create."
                },
                "autoCreateTasks": {
                    "type": "boolean",
                    "description": "Whether to automatically create tasks using this task definition for all gateways with the specified current version. If false, the task must me created by calling CreateWirelessGatewayTask."
                },
                "loRaWANUpdateGatewayTaskEntry": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionLoRaWANUpdateGatewayTaskEntry",
                    "description": "The list of task definitions."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the new resource."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:TaskDefinitionTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the destination."
                },
                "taskDefinitionType": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionTaskDefinitionType",
                    "description": "A filter to list only the wireless gateway task definitions that use this task definition type"
                },
                "update": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionUpdateWirelessGatewayTaskCreate",
                    "description": "Information about the gateways to update."
                }
            },
            "required": [
                "autoCreateTasks"
            ]
        },
        "aws-native:iotwireless:WirelessDevice": {
            "cf": "AWS::IoTWireless::WirelessDevice",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Wireless device description"
                },
                "destinationName": {
                    "type": "string",
                    "description": "Wireless device destination name"
                },
                "lastUplinkReceivedAt": {
                    "type": "string",
                    "description": "The date and time when the most recent uplink was received."
                },
                "loRaWAN": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceLoRaWANDevice",
                    "description": "The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device."
                },
                "name": {
                    "type": "string",
                    "description": "Wireless device name"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:WirelessDeviceTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed."
                },
                "thingArn": {
                    "type": "string",
                    "description": "Thing arn. Passed into update to associate Thing with Wireless device."
                },
                "type": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceType",
                    "description": "Wireless device type, currently only Sidewalk and LoRa"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Wireless device arn. Returned after successful create."
                },
                "description": {
                    "type": "string",
                    "description": "Wireless device description"
                },
                "destinationName": {
                    "type": "string",
                    "description": "Wireless device destination name"
                },
                "lastUplinkReceivedAt": {
                    "type": "string",
                    "description": "The date and time when the most recent uplink was received."
                },
                "loRaWAN": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceLoRaWANDevice",
                    "description": "The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device."
                },
                "name": {
                    "type": "string",
                    "description": "Wireless device name"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:WirelessDeviceTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed."
                },
                "thingArn": {
                    "type": "string",
                    "description": "Thing arn. Passed into update to associate Thing with Wireless device."
                },
                "thingName": {
                    "type": "string",
                    "description": "Thing Arn. If there is a Thing created, this can be returned with a Get call."
                },
                "type": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceType",
                    "description": "Wireless device type, currently only Sidewalk and LoRa"
                }
            },
            "required": [
                "destinationName",
                "type"
            ]
        },
        "aws-native:iotwireless:WirelessGateway": {
            "cf": "AWS::IoTWireless::WirelessGateway",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Description of Wireless Gateway."
                },
                "lastUplinkReceivedAt": {
                    "type": "string",
                    "description": "The date and time when the most recent uplink was received."
                },
                "loRaWAN": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessGatewayLoRaWANGateway",
                    "description": "The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Gateway."
                },
                "name": {
                    "type": "string",
                    "description": "Name of Wireless Gateway."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:WirelessGatewayTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the gateway."
                },
                "thingArn": {
                    "type": "string",
                    "description": "Thing Arn. Passed into Update to associate a Thing with the Wireless Gateway."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Arn for Wireless Gateway. Returned upon successful create."
                },
                "description": {
                    "type": "string",
                    "description": "Description of Wireless Gateway."
                },
                "lastUplinkReceivedAt": {
                    "type": "string",
                    "description": "The date and time when the most recent uplink was received."
                },
                "loRaWAN": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessGatewayLoRaWANGateway",
                    "description": "The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Gateway."
                },
                "name": {
                    "type": "string",
                    "description": "Name of Wireless Gateway."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotwireless:WirelessGatewayTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the gateway."
                },
                "thingArn": {
                    "type": "string",
                    "description": "Thing Arn. Passed into Update to associate a Thing with the Wireless Gateway."
                },
                "thingName": {
                    "type": "string",
                    "description": "Thing Arn. If there is a Thing created, this can be returned with a Get call."
                }
            },
            "required": [
                "loRaWAN"
            ]
        },
        "aws-native:ivs:Channel": {
            "cf": "AWS::IVS::Channel",
            "inputs": {
                "authorized": {
                    "type": "boolean",
                    "description": "Whether the channel is authorized."
                },
                "latencyMode": {
                    "$ref": "#/types/aws-native:ivs:ChannelLatencyMode",
                    "description": "Channel latency mode."
                },
                "name": {
                    "type": "string",
                    "description": "Channel"
                },
                "recordingConfigurationArn": {
                    "type": "string",
                    "description": "Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: “” (recording is disabled)."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ivs:ChannelTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                },
                "type": {
                    "$ref": "#/types/aws-native:ivs:ChannelType",
                    "description": "Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Channel ARN is automatically generated on creation and assigned as the unique identifier."
                },
                "authorized": {
                    "type": "boolean",
                    "description": "Whether the channel is authorized."
                },
                "ingestEndpoint": {
                    "type": "string",
                    "description": "Channel ingest endpoint, part of the definition of an ingest server, used when you set up streaming software."
                },
                "latencyMode": {
                    "$ref": "#/types/aws-native:ivs:ChannelLatencyMode",
                    "description": "Channel latency mode."
                },
                "name": {
                    "type": "string",
                    "description": "Channel"
                },
                "playbackUrl": {
                    "type": "string",
                    "description": "Channel Playback URL."
                },
                "recordingConfigurationArn": {
                    "type": "string",
                    "description": "Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: “” (recording is disabled)."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ivs:ChannelTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                },
                "type": {
                    "$ref": "#/types/aws-native:ivs:ChannelType",
                    "description": "Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately."
                }
            }
        },
        "aws-native:ivs:PlaybackKeyPair": {
            "cf": "AWS::IVS::PlaybackKeyPair",
            "inputs": {
                "name": {
                    "type": "string",
                    "description": "An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique."
                },
                "publicKeyMaterial": {
                    "type": "string",
                    "description": "The public portion of a customer-generated key pair."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ivs:PlaybackKeyPairTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Key-pair identifier."
                },
                "fingerprint": {
                    "type": "string",
                    "description": "Key-pair identifier."
                },
                "name": {
                    "type": "string",
                    "description": "An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique."
                },
                "publicKeyMaterial": {
                    "type": "string",
                    "description": "The public portion of a customer-generated key pair."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ivs:PlaybackKeyPairTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                }
            },
            "required": [
                "publicKeyMaterial"
            ],
            "createOnly": [
                "name",
                "publicKeyMaterial"
            ]
        },
        "aws-native:ivs:RecordingConfiguration": {
            "cf": "AWS::IVS::RecordingConfiguration",
            "inputs": {
                "destinationConfiguration": {
                    "$ref": "#/types/aws-native:ivs:RecordingConfigurationDestinationConfiguration"
                },
                "name": {
                    "type": "string",
                    "description": "Recording Configuration Name."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ivs:RecordingConfigurationTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Recording Configuration ARN is automatically generated on creation and assigned as the unique identifier."
                },
                "destinationConfiguration": {
                    "$ref": "#/types/aws-native:ivs:RecordingConfigurationDestinationConfiguration"
                },
                "name": {
                    "type": "string",
                    "description": "Recording Configuration Name."
                },
                "state": {
                    "$ref": "#/types/aws-native:ivs:RecordingConfigurationState",
                    "description": "Recording Configuration State."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ivs:RecordingConfigurationTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                }
            },
            "required": [
                "destinationConfiguration"
            ],
            "createOnly": [
                "destinationConfiguration",
                "destinationConfiguration/S3",
                "destinationConfiguration/S3/BucketName",
                "name"
            ]
        },
        "aws-native:ivs:StreamKey": {
            "cf": "AWS::IVS::StreamKey",
            "inputs": {
                "channelArn": {
                    "type": "string",
                    "description": "Channel ARN for the stream."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ivs:StreamKeyTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Stream Key ARN is automatically generated on creation and assigned as the unique identifier."
                },
                "channelArn": {
                    "type": "string",
                    "description": "Channel ARN for the stream."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ivs:StreamKeyTag"
                    },
                    "description": "A list of key-value pairs that contain metadata for the asset model."
                },
                "value": {
                    "type": "string",
                    "description": "Stream-key value."
                }
            },
            "required": [
                "channelArn"
            ],
            "createOnly": [
                "channelArn"
            ]
        },
        "aws-native:kendra:DataSource": {
            "cf": "AWS::Kendra::DataSource",
            "inputs": {
                "dataSourceConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceDataSourceConfiguration"
                },
                "description": {
                    "type": "string"
                },
                "indexId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceTag"
                    },
                    "description": "Tags for labeling the data source"
                },
                "type": {
                    "$ref": "#/types/aws-native:kendra:DataSourceType"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "dataSourceConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceDataSourceConfiguration"
                },
                "description": {
                    "type": "string"
                },
                "indexId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceTag"
                    },
                    "description": "Tags for labeling the data source"
                },
                "type": {
                    "$ref": "#/types/aws-native:kendra:DataSourceType"
                }
            },
            "required": [
                "indexId",
                "name",
                "type"
            ],
            "createOnly": [
                "type"
            ]
        },
        "aws-native:kendra:Faq": {
            "cf": "AWS::Kendra::Faq",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "FAQ description"
                },
                "fileFormat": {
                    "$ref": "#/types/aws-native:kendra:FaqFileFormat",
                    "description": "FAQ file format"
                },
                "indexId": {
                    "type": "string",
                    "description": "Index ID"
                },
                "name": {
                    "type": "string",
                    "description": "FAQ name"
                },
                "roleArn": {
                    "type": "string",
                    "description": "FAQ role ARN"
                },
                "s3Path": {
                    "$ref": "#/types/aws-native:kendra:FaqS3Path",
                    "description": "FAQ S3 path"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:FaqTag"
                    },
                    "description": "Tags for labeling the FAQ"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "FAQ description"
                },
                "fileFormat": {
                    "$ref": "#/types/aws-native:kendra:FaqFileFormat",
                    "description": "FAQ file format"
                },
                "indexId": {
                    "type": "string",
                    "description": "Index ID"
                },
                "name": {
                    "type": "string",
                    "description": "FAQ name"
                },
                "roleArn": {
                    "type": "string",
                    "description": "FAQ role ARN"
                },
                "s3Path": {
                    "$ref": "#/types/aws-native:kendra:FaqS3Path",
                    "description": "FAQ S3 path"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:FaqTag"
                    },
                    "description": "Tags for labeling the FAQ"
                }
            },
            "required": [
                "indexId",
                "name",
                "roleArn",
                "s3Path"
            ],
            "createOnly": [
                "description",
                "fileFormat",
                "indexId",
                "name",
                "roleArn",
                "s3Path"
            ]
        },
        "aws-native:kendra:Index": {
            "cf": "AWS::Kendra::Index",
            "inputs": {
                "capacityUnits": {
                    "$ref": "#/types/aws-native:kendra:IndexCapacityUnitsConfiguration",
                    "description": "Capacity units"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the index"
                },
                "documentMetadataConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:IndexDocumentMetadataConfiguration"
                    },
                    "description": "Document metadata configurations"
                },
                "edition": {
                    "$ref": "#/types/aws-native:kendra:IndexEdition"
                },
                "name": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "serverSideEncryptionConfiguration": {
                    "$ref": "#/types/aws-native:kendra:IndexServerSideEncryptionConfiguration",
                    "description": "Server side encryption configuration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:IndexTag"
                    },
                    "description": "Tags for labeling the index"
                },
                "userContextPolicy": {
                    "$ref": "#/types/aws-native:kendra:IndexUserContextPolicy"
                },
                "userTokenConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:IndexUserTokenConfiguration"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "capacityUnits": {
                    "$ref": "#/types/aws-native:kendra:IndexCapacityUnitsConfiguration",
                    "description": "Capacity units"
                },
                "description": {
                    "type": "string",
                    "description": "A description for the index"
                },
                "documentMetadataConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:IndexDocumentMetadataConfiguration"
                    },
                    "description": "Document metadata configurations"
                },
                "edition": {
                    "$ref": "#/types/aws-native:kendra:IndexEdition"
                },
                "name": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "serverSideEncryptionConfiguration": {
                    "$ref": "#/types/aws-native:kendra:IndexServerSideEncryptionConfiguration",
                    "description": "Server side encryption configuration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:IndexTag"
                    },
                    "description": "Tags for labeling the index"
                },
                "userContextPolicy": {
                    "$ref": "#/types/aws-native:kendra:IndexUserContextPolicy"
                },
                "userTokenConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:IndexUserTokenConfiguration"
                    }
                }
            },
            "required": [
                "edition",
                "name",
                "roleArn"
            ],
            "createOnly": [
                "edition",
                "serverSideEncryptionConfiguration"
            ]
        },
        "aws-native:kinesis:Stream": {
            "cf": "AWS::Kinesis::Stream",
            "inputs": {
                "name": {
                    "type": "string",
                    "description": "The name of the Kinesis stream."
                },
                "retentionPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours for the data records that are stored in shards to remain accessible."
                },
                "shardCount": {
                    "type": "integer",
                    "description": "The number of shards that the stream uses."
                },
                "streamEncryption": {
                    "$ref": "#/types/aws-native:kinesis:StreamStreamEncryption",
                    "description": "When specified, enables or updates server-side encryption using an AWS KMS key for a specified stream."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kinesis:StreamTag"
                    },
                    "description": "An arbitrary set of tags (key–value pairs) to associate with the Kinesis stream."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon resource name (ARN) of the Kinesis stream"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Kinesis stream."
                },
                "retentionPeriodHours": {
                    "type": "integer",
                    "description": "The number of hours for the data records that are stored in shards to remain accessible."
                },
                "shardCount": {
                    "type": "integer",
                    "description": "The number of shards that the stream uses."
                },
                "streamEncryption": {
                    "$ref": "#/types/aws-native:kinesis:StreamStreamEncryption",
                    "description": "When specified, enables or updates server-side encryption using an AWS KMS key for a specified stream."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kinesis:StreamTag"
                    },
                    "description": "An arbitrary set of tags (key–value pairs) to associate with the Kinesis stream."
                }
            },
            "required": [
                "shardCount"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:kinesisfirehose:DeliveryStream": {
            "cf": "AWS::KinesisFirehose::DeliveryStream",
            "inputs": {
                "deliveryStreamEncryptionConfigurationInput": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamDeliveryStreamEncryptionConfigurationInput"
                },
                "deliveryStreamName": {
                    "type": "string"
                },
                "deliveryStreamType": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamDeliveryStreamType"
                },
                "elasticsearchDestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamElasticsearchDestinationConfiguration"
                },
                "extendedS3DestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamExtendedS3DestinationConfiguration"
                },
                "httpEndpointDestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamHttpEndpointDestinationConfiguration"
                },
                "kinesisStreamSourceConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamKinesisStreamSourceConfiguration"
                },
                "redshiftDestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamRedshiftDestinationConfiguration"
                },
                "s3DestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfiguration"
                },
                "splunkDestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamSplunkDestinationConfiguration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "deliveryStreamEncryptionConfigurationInput": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamDeliveryStreamEncryptionConfigurationInput"
                },
                "deliveryStreamName": {
                    "type": "string"
                },
                "deliveryStreamType": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamDeliveryStreamType"
                },
                "elasticsearchDestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamElasticsearchDestinationConfiguration"
                },
                "extendedS3DestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamExtendedS3DestinationConfiguration"
                },
                "httpEndpointDestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamHttpEndpointDestinationConfiguration"
                },
                "kinesisStreamSourceConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamKinesisStreamSourceConfiguration"
                },
                "redshiftDestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamRedshiftDestinationConfiguration"
                },
                "s3DestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfiguration"
                },
                "splunkDestinationConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamSplunkDestinationConfiguration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamTag"
                    }
                }
            },
            "createOnly": [
                "deliveryStreamName",
                "deliveryStreamType",
                "elasticsearchDestinationConfiguration/VpcConfiguration",
                "kinesisStreamSourceConfiguration"
            ]
        },
        "aws-native:kms:Alias": {
            "cf": "AWS::KMS::Alias",
            "inputs": {
                "aliasName": {
                    "type": "string",
                    "description": "Specifies the alias name. This value must begin with alias/ followed by a name, such as alias/ExampleAlias. The alias name cannot begin with alias/aws/. The alias/aws/ prefix is reserved for AWS managed CMKs."
                },
                "targetKeyId": {
                    "type": "string",
                    "description": "Identifies the CMK to which the alias refers. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. You cannot specify another alias. For help finding the key ID and ARN, see Finding the Key ID and ARN in the AWS Key Management Service Developer Guide."
                }
            },
            "outputs": {
                "aliasName": {
                    "type": "string",
                    "description": "Specifies the alias name. This value must begin with alias/ followed by a name, such as alias/ExampleAlias. The alias name cannot begin with alias/aws/. The alias/aws/ prefix is reserved for AWS managed CMKs."
                },
                "targetKeyId": {
                    "type": "string",
                    "description": "Identifies the CMK to which the alias refers. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. You cannot specify another alias. For help finding the key ID and ARN, see Finding the Key ID and ARN in the AWS Key Management Service Developer Guide."
                }
            },
            "required": [
                "aliasName",
                "targetKeyId"
            ],
            "createOnly": [
                "aliasName"
            ]
        },
        "aws-native:kms:Key": {
            "cf": "AWS::KMS::Key",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "A description of the CMK. Use a description that helps you to distinguish this CMK from others in the account, such as its intended use."
                },
                "enableKeyRotation": {
                    "type": "boolean",
                    "description": "Enables automatic rotation of the key material for the specified customer master key (CMK). By default, automation key rotation is not enabled."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies whether the customer master key (CMK) is enabled. Disabled CMKs cannot be used in cryptographic operations."
                },
                "keyPolicy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The key policy that authorizes use of the CMK. The key policy must observe the following rules."
                },
                "keySpec": {
                    "$ref": "#/types/aws-native:kms:KeyKeySpec",
                    "description": "Specifies the type of CMK to create. The default value is SYMMETRIC_DEFAULT. This property is required only for asymmetric CMKs. You can't change the KeySpec value after the CMK is created."
                },
                "keyUsage": {
                    "$ref": "#/types/aws-native:kms:KeyKeyUsage",
                    "description": "Determines the cryptographic operations for which you can use the CMK. The default value is ENCRYPT_DECRYPT. This property is required only for asymmetric CMKs. You can't change the KeyUsage value after the CMK is created."
                },
                "multiRegion": {
                    "type": "boolean",
                    "description": "Specifies whether the CMK should be Multi-Region. You can't change the MultiRegion value after the CMK is created."
                },
                "pendingWindowInDays": {
                    "type": "integer",
                    "description": "Specifies the number of days in the waiting period before AWS KMS deletes a CMK that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kms:KeyTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the CMK. Use a description that helps you to distinguish this CMK from others in the account, such as its intended use."
                },
                "enableKeyRotation": {
                    "type": "boolean",
                    "description": "Enables automatic rotation of the key material for the specified customer master key (CMK). By default, automation key rotation is not enabled."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies whether the customer master key (CMK) is enabled. Disabled CMKs cannot be used in cryptographic operations."
                },
                "keyId": {
                    "type": "string"
                },
                "keyPolicy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The key policy that authorizes use of the CMK. The key policy must observe the following rules."
                },
                "keySpec": {
                    "$ref": "#/types/aws-native:kms:KeyKeySpec",
                    "description": "Specifies the type of CMK to create. The default value is SYMMETRIC_DEFAULT. This property is required only for asymmetric CMKs. You can't change the KeySpec value after the CMK is created."
                },
                "keyUsage": {
                    "$ref": "#/types/aws-native:kms:KeyKeyUsage",
                    "description": "Determines the cryptographic operations for which you can use the CMK. The default value is ENCRYPT_DECRYPT. This property is required only for asymmetric CMKs. You can't change the KeyUsage value after the CMK is created."
                },
                "multiRegion": {
                    "type": "boolean",
                    "description": "Specifies whether the CMK should be Multi-Region. You can't change the MultiRegion value after the CMK is created."
                },
                "pendingWindowInDays": {
                    "type": "integer",
                    "description": "Specifies the number of days in the waiting period before AWS KMS deletes a CMK that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kms:KeyTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "keyPolicy"
            ]
        },
        "aws-native:kms:ReplicaKey": {
            "cf": "AWS::KMS::ReplicaKey",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "A description of the CMK. Use a description that helps you to distinguish this CMK from others in the account, such as its intended use."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies whether the customer master key (CMK) is enabled. Disabled CMKs cannot be used in cryptographic operations."
                },
                "keyPolicy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The key policy that authorizes use of the CMK. The key policy must observe the following rules."
                },
                "pendingWindowInDays": {
                    "type": "integer",
                    "description": "Specifies the number of days in the waiting period before AWS KMS deletes a CMK that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days."
                },
                "primaryKeyArn": {
                    "type": "string",
                    "description": "Identifies the primary CMK to create a replica of. Specify the Amazon Resource Name (ARN) of the CMK. You cannot specify an alias or key ID. For help finding the ARN, see Finding the Key ID and ARN in the AWS Key Management Service Developer Guide."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kms:ReplicaKeyTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the CMK. Use a description that helps you to distinguish this CMK from others in the account, such as its intended use."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies whether the customer master key (CMK) is enabled. Disabled CMKs cannot be used in cryptographic operations."
                },
                "keyId": {
                    "type": "string"
                },
                "keyPolicy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The key policy that authorizes use of the CMK. The key policy must observe the following rules."
                },
                "pendingWindowInDays": {
                    "type": "integer",
                    "description": "Specifies the number of days in the waiting period before AWS KMS deletes a CMK that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days."
                },
                "primaryKeyArn": {
                    "type": "string",
                    "description": "Identifies the primary CMK to create a replica of. Specify the Amazon Resource Name (ARN) of the CMK. You cannot specify an alias or key ID. For help finding the ARN, see Finding the Key ID and ARN in the AWS Key Management Service Developer Guide."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kms:ReplicaKeyTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "keyPolicy",
                "primaryKeyArn"
            ],
            "createOnly": [
                "primaryKeyArn"
            ]
        },
        "aws-native:lambda:CodeSigningConfig": {
            "cf": "AWS::Lambda::CodeSigningConfig",
            "inputs": {
                "allowedPublishers": {
                    "$ref": "#/types/aws-native:lambda:CodeSigningConfigAllowedPublishers",
                    "description": "When the CodeSigningConfig is later on attached to a function, the function code will be expected to be signed by profiles from this list"
                },
                "codeSigningPolicies": {
                    "$ref": "#/types/aws-native:lambda:CodeSigningConfigCodeSigningPolicies",
                    "description": "Policies to control how to act if a signature is invalid"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the CodeSigningConfig"
                }
            },
            "outputs": {
                "allowedPublishers": {
                    "$ref": "#/types/aws-native:lambda:CodeSigningConfigAllowedPublishers",
                    "description": "When the CodeSigningConfig is later on attached to a function, the function code will be expected to be signed by profiles from this list"
                },
                "codeSigningConfigArn": {
                    "type": "string",
                    "description": "A unique Arn for CodeSigningConfig resource"
                },
                "codeSigningConfigId": {
                    "type": "string",
                    "description": "A unique identifier for CodeSigningConfig resource"
                },
                "codeSigningPolicies": {
                    "$ref": "#/types/aws-native:lambda:CodeSigningConfigCodeSigningPolicies",
                    "description": "Policies to control how to act if a signature is invalid"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the CodeSigningConfig"
                }
            },
            "required": [
                "allowedPublishers"
            ]
        },
        "aws-native:lambda:EventSourceMapping": {
            "cf": "AWS::Lambda::EventSourceMapping",
            "inputs": {
                "batchSize": {
                    "type": "integer",
                    "description": "The maximum number of items to retrieve in a single batch."
                },
                "bisectBatchOnFunctionError": {
                    "type": "boolean",
                    "description": "(Streams) If the function returns an error, split the batch in two and retry."
                },
                "destinationConfig": {
                    "$ref": "#/types/aws-native:lambda:EventSourceMappingDestinationConfig",
                    "description": "(Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Disables the event source mapping to pause polling and invocation."
                },
                "eventSourceArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the event source."
                },
                "functionName": {
                    "type": "string",
                    "description": "The name of the Lambda function."
                },
                "functionResponseTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lambda:EventSourceMappingFunctionResponseTypesItem"
                    },
                    "description": "(Streams) A list of response types supported by the function."
                },
                "maximumBatchingWindowInSeconds": {
                    "type": "integer",
                    "description": "(Streams) The maximum amount of time to gather records before invoking the function, in seconds."
                },
                "maximumRecordAgeInSeconds": {
                    "type": "integer",
                    "description": "(Streams) The maximum age of a record that Lambda sends to a function for processing."
                },
                "maximumRetryAttempts": {
                    "type": "integer",
                    "description": "(Streams) The maximum number of times to retry when the function returns an error."
                },
                "parallelizationFactor": {
                    "type": "integer",
                    "description": "(Streams) The number of batches to process from each shard concurrently."
                },
                "queues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(ActiveMQ) A list of ActiveMQ queues."
                },
                "selfManagedEventSource": {
                    "$ref": "#/types/aws-native:lambda:EventSourceMappingSelfManagedEventSource",
                    "description": "Self-managed event source endpoints."
                },
                "sourceAccessConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lambda:EventSourceMappingSourceAccessConfiguration"
                    },
                    "description": "A list of SourceAccessConfiguration."
                },
                "startingPosition": {
                    "type": "string",
                    "description": "The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams sources."
                },
                "startingPositionTimestamp": {
                    "type": "number",
                    "description": "With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds."
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Kafka) A list of Kafka topics."
                },
                "tumblingWindowInSeconds": {
                    "type": "integer",
                    "description": "(Streams) Tumbling window (non-overlapping time window) duration to perform aggregations."
                }
            },
            "outputs": {
                "batchSize": {
                    "type": "integer",
                    "description": "The maximum number of items to retrieve in a single batch."
                },
                "bisectBatchOnFunctionError": {
                    "type": "boolean",
                    "description": "(Streams) If the function returns an error, split the batch in two and retry."
                },
                "destinationConfig": {
                    "$ref": "#/types/aws-native:lambda:EventSourceMappingDestinationConfig",
                    "description": "(Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Disables the event source mapping to pause polling and invocation."
                },
                "eventSourceArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the event source."
                },
                "functionName": {
                    "type": "string",
                    "description": "The name of the Lambda function."
                },
                "functionResponseTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lambda:EventSourceMappingFunctionResponseTypesItem"
                    },
                    "description": "(Streams) A list of response types supported by the function."
                },
                "maximumBatchingWindowInSeconds": {
                    "type": "integer",
                    "description": "(Streams) The maximum amount of time to gather records before invoking the function, in seconds."
                },
                "maximumRecordAgeInSeconds": {
                    "type": "integer",
                    "description": "(Streams) The maximum age of a record that Lambda sends to a function for processing."
                },
                "maximumRetryAttempts": {
                    "type": "integer",
                    "description": "(Streams) The maximum number of times to retry when the function returns an error."
                },
                "parallelizationFactor": {
                    "type": "integer",
                    "description": "(Streams) The number of batches to process from each shard concurrently."
                },
                "queues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(ActiveMQ) A list of ActiveMQ queues."
                },
                "selfManagedEventSource": {
                    "$ref": "#/types/aws-native:lambda:EventSourceMappingSelfManagedEventSource",
                    "description": "Self-managed event source endpoints."
                },
                "sourceAccessConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lambda:EventSourceMappingSourceAccessConfiguration"
                    },
                    "description": "A list of SourceAccessConfiguration."
                },
                "startingPosition": {
                    "type": "string",
                    "description": "The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams sources."
                },
                "startingPositionTimestamp": {
                    "type": "number",
                    "description": "With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds."
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Kafka) A list of Kafka topics."
                },
                "tumblingWindowInSeconds": {
                    "type": "integer",
                    "description": "(Streams) Tumbling window (non-overlapping time window) duration to perform aggregations."
                }
            },
            "required": [
                "functionName"
            ],
            "createOnly": [
                "eventSourceArn",
                "selfManagedEventSource",
                "startingPosition"
            ]
        },
        "aws-native:lambda:Function": {
            "cf": "AWS::Lambda::Function",
            "inputs": {
                "code": {
                    "$ref": "#/types/aws-native:lambda:FunctionCode",
                    "description": "The code for the function."
                },
                "codeSigningConfigArn": {
                    "type": "string",
                    "description": "A unique Arn for CodeSigningConfig resource"
                },
                "deadLetterConfig": {
                    "$ref": "#/types/aws-native:lambda:FunctionDeadLetterConfig",
                    "description": "A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the function."
                },
                "environment": {
                    "$ref": "#/types/aws-native:lambda:FunctionEnvironment",
                    "description": "Environment variables that are accessible from function code during execution."
                },
                "fileSystemConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lambda:FunctionFileSystemConfig"
                    },
                    "description": "Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an AWS::EFS::MountTarget resource, you must also specify a DependsOn attribute to ensure that the mount target is created or updated before the function."
                },
                "functionName": {
                    "type": "string",
                    "description": "The name of the Lambda function, up to 64 characters in length. If you don't specify a name, AWS CloudFormation generates one."
                },
                "handler": {
                    "type": "string",
                    "description": "The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime"
                },
                "imageConfig": {
                    "$ref": "#/types/aws-native:lambda:FunctionImageConfig",
                    "description": "ImageConfig"
                },
                "kmsKeyArn": {
                    "type": "string",
                    "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key."
                },
                "layers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of function layers to add to the function's execution environment. Specify each layer by its ARN, including the version."
                },
                "memorySize": {
                    "type": "integer",
                    "description": "The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB."
                },
                "packageType": {
                    "$ref": "#/types/aws-native:lambda:FunctionPackageType",
                    "description": "PackageType."
                },
                "reservedConcurrentExecutions": {
                    "type": "integer",
                    "description": "The number of simultaneous executions to reserve for the function."
                },
                "role": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the function's execution role."
                },
                "runtime": {
                    "type": "string",
                    "description": "The identifier of the function's runtime."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lambda:FunctionTag"
                    },
                    "description": "A list of tags to apply to the function."
                },
                "timeout": {
                    "type": "integer",
                    "description": "The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds."
                },
                "tracingConfig": {
                    "$ref": "#/types/aws-native:lambda:FunctionTracingConfig",
                    "description": "Set Mode to Active to sample and trace a subset of incoming requests with AWS X-Ray."
                },
                "vpcConfig": {
                    "$ref": "#/types/aws-native:lambda:FunctionVpcConfig",
                    "description": "For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Unique identifier for function resources"
                },
                "code": {
                    "$ref": "#/types/aws-native:lambda:FunctionCode",
                    "description": "The code for the function."
                },
                "codeSigningConfigArn": {
                    "type": "string",
                    "description": "A unique Arn for CodeSigningConfig resource"
                },
                "deadLetterConfig": {
                    "$ref": "#/types/aws-native:lambda:FunctionDeadLetterConfig",
                    "description": "A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the function."
                },
                "environment": {
                    "$ref": "#/types/aws-native:lambda:FunctionEnvironment",
                    "description": "Environment variables that are accessible from function code during execution."
                },
                "fileSystemConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lambda:FunctionFileSystemConfig"
                    },
                    "description": "Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an AWS::EFS::MountTarget resource, you must also specify a DependsOn attribute to ensure that the mount target is created or updated before the function."
                },
                "functionName": {
                    "type": "string",
                    "description": "The name of the Lambda function, up to 64 characters in length. If you don't specify a name, AWS CloudFormation generates one."
                },
                "handler": {
                    "type": "string",
                    "description": "The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime"
                },
                "imageConfig": {
                    "$ref": "#/types/aws-native:lambda:FunctionImageConfig",
                    "description": "ImageConfig"
                },
                "kmsKeyArn": {
                    "type": "string",
                    "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key."
                },
                "layers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of function layers to add to the function's execution environment. Specify each layer by its ARN, including the version."
                },
                "memorySize": {
                    "type": "integer",
                    "description": "The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB."
                },
                "packageType": {
                    "$ref": "#/types/aws-native:lambda:FunctionPackageType",
                    "description": "PackageType."
                },
                "reservedConcurrentExecutions": {
                    "type": "integer",
                    "description": "The number of simultaneous executions to reserve for the function."
                },
                "role": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the function's execution role."
                },
                "runtime": {
                    "type": "string",
                    "description": "The identifier of the function's runtime."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lambda:FunctionTag"
                    },
                    "description": "A list of tags to apply to the function."
                },
                "timeout": {
                    "type": "integer",
                    "description": "The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds."
                },
                "tracingConfig": {
                    "$ref": "#/types/aws-native:lambda:FunctionTracingConfig",
                    "description": "Set Mode to Active to sample and trace a subset of incoming requests with AWS X-Ray."
                },
                "vpcConfig": {
                    "$ref": "#/types/aws-native:lambda:FunctionVpcConfig",
                    "description": "For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC."
                }
            },
            "required": [
                "code",
                "role"
            ],
            "createOnly": [
                "functionName"
            ]
        },
        "aws-native:licensemanager:Grant": {
            "cf": "AWS::LicenseManager::Grant",
            "inputs": {
                "allowedOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantName": {
                    "type": "string",
                    "description": "Name for the created Grant."
                },
                "homeRegion": {
                    "type": "string",
                    "description": "Home region for the created grant."
                },
                "licenseArn": {
                    "type": "string",
                    "description": "License Arn for the grant."
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            },
            "outputs": {
                "allowedOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantArn": {
                    "type": "string",
                    "description": "Arn of the grant."
                },
                "grantName": {
                    "type": "string",
                    "description": "Name for the created Grant."
                },
                "homeRegion": {
                    "type": "string",
                    "description": "Home region for the created grant."
                },
                "licenseArn": {
                    "type": "string",
                    "description": "License Arn for the grant."
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the grant."
                }
            }
        },
        "aws-native:licensemanager:License": {
            "cf": "AWS::LicenseManager::License",
            "inputs": {
                "beneficiary": {
                    "type": "string",
                    "description": "Beneficiary of the license."
                },
                "consumptionConfiguration": {
                    "$ref": "#/types/aws-native:licensemanager:LicenseConsumptionConfiguration"
                },
                "entitlements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:licensemanager:LicenseEntitlement"
                    }
                },
                "homeRegion": {
                    "type": "string",
                    "description": "Home region for the created license."
                },
                "issuer": {
                    "$ref": "#/types/aws-native:licensemanager:LicenseIssuerData"
                },
                "licenseMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:licensemanager:LicenseMetadata"
                    }
                },
                "licenseName": {
                    "type": "string",
                    "description": "Name for the created license."
                },
                "productName": {
                    "type": "string",
                    "description": "Product name for the created license."
                },
                "productSKU": {
                    "type": "string",
                    "description": "ProductSKU of the license."
                },
                "status": {
                    "type": "string"
                },
                "validity": {
                    "$ref": "#/types/aws-native:licensemanager:LicenseValidityDateFormat"
                }
            },
            "outputs": {
                "beneficiary": {
                    "type": "string",
                    "description": "Beneficiary of the license."
                },
                "consumptionConfiguration": {
                    "$ref": "#/types/aws-native:licensemanager:LicenseConsumptionConfiguration"
                },
                "entitlements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:licensemanager:LicenseEntitlement"
                    }
                },
                "homeRegion": {
                    "type": "string",
                    "description": "Home region for the created license."
                },
                "issuer": {
                    "$ref": "#/types/aws-native:licensemanager:LicenseIssuerData"
                },
                "licenseArn": {
                    "type": "string",
                    "description": "Amazon Resource Name is a unique name for each resource."
                },
                "licenseMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:licensemanager:LicenseMetadata"
                    }
                },
                "licenseName": {
                    "type": "string",
                    "description": "Name for the created license."
                },
                "productName": {
                    "type": "string",
                    "description": "Product name for the created license."
                },
                "productSKU": {
                    "type": "string",
                    "description": "ProductSKU of the license."
                },
                "status": {
                    "type": "string"
                },
                "validity": {
                    "$ref": "#/types/aws-native:licensemanager:LicenseValidityDateFormat"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the license."
                }
            },
            "required": [
                "consumptionConfiguration",
                "entitlements",
                "homeRegion",
                "issuer",
                "licenseName",
                "productName",
                "validity"
            ]
        },
        "aws-native:location:GeofenceCollection": {
            "cf": "AWS::Location::GeofenceCollection",
            "inputs": {
                "collectionName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:GeofenceCollectionPricingPlan"
                },
                "pricingPlanDataSource": {
                    "type": "string"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "collectionArn": {
                    "type": "string"
                },
                "collectionName": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:GeofenceCollectionPricingPlan"
                },
                "pricingPlanDataSource": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                }
            },
            "required": [
                "collectionName",
                "pricingPlan"
            ],
            "createOnly": [
                "collectionName",
                "description",
                "pricingPlan",
                "pricingPlanDataSource"
            ]
        },
        "aws-native:location:Map": {
            "cf": "AWS::Location::Map",
            "inputs": {
                "configuration": {
                    "$ref": "#/types/aws-native:location:MapMapConfiguration"
                },
                "description": {
                    "type": "string"
                },
                "mapName": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:MapPricingPlan"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "configuration": {
                    "$ref": "#/types/aws-native:location:MapMapConfiguration"
                },
                "createTime": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "mapArn": {
                    "type": "string"
                },
                "mapName": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:MapPricingPlan"
                },
                "updateTime": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "mapName",
                "pricingPlan"
            ],
            "createOnly": [
                "configuration",
                "description",
                "mapName",
                "pricingPlan"
            ]
        },
        "aws-native:location:PlaceIndex": {
            "cf": "AWS::Location::PlaceIndex",
            "inputs": {
                "dataSource": {
                    "type": "string"
                },
                "dataSourceConfiguration": {
                    "$ref": "#/types/aws-native:location:PlaceIndexDataSourceConfiguration"
                },
                "description": {
                    "type": "string"
                },
                "indexName": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:PlaceIndexPricingPlan"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "dataSourceConfiguration": {
                    "$ref": "#/types/aws-native:location:PlaceIndexDataSourceConfiguration"
                },
                "description": {
                    "type": "string"
                },
                "indexArn": {
                    "type": "string"
                },
                "indexName": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:PlaceIndexPricingPlan"
                },
                "updateTime": {
                    "type": "string"
                }
            },
            "required": [
                "dataSource",
                "indexName",
                "pricingPlan"
            ],
            "createOnly": [
                "dataSource",
                "dataSourceConfiguration",
                "description",
                "indexName",
                "pricingPlan"
            ]
        },
        "aws-native:location:RouteCalculator": {
            "cf": "AWS::Location::RouteCalculator",
            "inputs": {
                "calculatorName": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:RouteCalculatorPricingPlan"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "calculatorArn": {
                    "type": "string"
                },
                "calculatorName": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:RouteCalculatorPricingPlan"
                },
                "updateTime": {
                    "type": "string"
                }
            },
            "required": [
                "calculatorName",
                "dataSource",
                "pricingPlan"
            ],
            "createOnly": [
                "calculatorName",
                "dataSource",
                "description",
                "pricingPlan"
            ]
        },
        "aws-native:location:Tracker": {
            "cf": "AWS::Location::Tracker",
            "inputs": {
                "description": {
                    "type": "string"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:TrackerPricingPlan"
                },
                "pricingPlanDataSource": {
                    "type": "string"
                },
                "trackerName": {
                    "type": "string"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "pricingPlan": {
                    "$ref": "#/types/aws-native:location:TrackerPricingPlan"
                },
                "pricingPlanDataSource": {
                    "type": "string"
                },
                "trackerArn": {
                    "type": "string"
                },
                "trackerName": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                }
            },
            "required": [
                "pricingPlan",
                "trackerName"
            ],
            "createOnly": [
                "description",
                "kmsKeyId",
                "pricingPlan",
                "pricingPlanDataSource",
                "trackerName"
            ]
        },
        "aws-native:location:TrackerConsumer": {
            "cf": "AWS::Location::TrackerConsumer",
            "inputs": {
                "consumerArn": {
                    "type": "string"
                },
                "trackerName": {
                    "type": "string"
                }
            },
            "outputs": {
                "consumerArn": {
                    "type": "string"
                },
                "trackerName": {
                    "type": "string"
                }
            },
            "required": [
                "consumerArn",
                "trackerName"
            ],
            "createOnly": [
                "consumerArn",
                "trackerName"
            ]
        },
        "aws-native:logs:LogGroup": {
            "cf": "AWS::Logs::LogGroup",
            "inputs": {
                "kmsKeyId": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the CMK to use when encrypting log data."
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The name of the log group. If you don't specify a name, AWS CloudFormation generates a unique ID for the log group."
                },
                "retentionInDays": {
                    "type": "integer",
                    "description": "The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The CloudWatch log group ARN."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the CMK to use when encrypting log data."
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The name of the log group. If you don't specify a name, AWS CloudFormation generates a unique ID for the log group."
                },
                "retentionInDays": {
                    "type": "integer",
                    "description": "The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653."
                }
            },
            "createOnly": [
                "logGroupName"
            ]
        },
        "aws-native:logs:QueryDefinition": {
            "cf": "AWS::Logs::QueryDefinition",
            "inputs": {
                "logGroupNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optionally define specific log groups as part of your query definition"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the saved query definition"
                },
                "queryString": {
                    "type": "string",
                    "description": "The query string to use for this definition"
                }
            },
            "outputs": {
                "logGroupNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optionally define specific log groups as part of your query definition"
                },
                "name": {
                    "type": "string",
                    "description": "A name for the saved query definition"
                },
                "queryDefinitionId": {
                    "type": "string",
                    "description": "Unique identifier of a query definition"
                },
                "queryString": {
                    "type": "string",
                    "description": "The query string to use for this definition"
                }
            },
            "required": [
                "name",
                "queryString"
            ]
        },
        "aws-native:logs:ResourcePolicy": {
            "cf": "AWS::Logs::ResourcePolicy",
            "inputs": {
                "policyDocument": {
                    "type": "string",
                    "description": "The policy document"
                },
                "policyName": {
                    "type": "string",
                    "description": "A name for resource policy"
                }
            },
            "outputs": {
                "policyDocument": {
                    "type": "string",
                    "description": "The policy document"
                },
                "policyName": {
                    "type": "string",
                    "description": "A name for resource policy"
                }
            },
            "required": [
                "policyDocument",
                "policyName"
            ],
            "createOnly": [
                "policyName"
            ]
        },
        "aws-native:lookoutmetrics:Alert": {
            "cf": "AWS::LookoutMetrics::Alert",
            "inputs": {
                "action": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AlertAction",
                    "description": "The action to be taken by the alert when an anomaly is detected."
                },
                "alertDescription": {
                    "type": "string",
                    "description": "A description for the alert."
                },
                "alertName": {
                    "type": "string",
                    "description": "The name of the alert. If not provided, a name is generated automatically."
                },
                "alertSensitivityThreshold": {
                    "type": "integer",
                    "description": "A number between 0 and 100 (inclusive) that tunes the sensitivity of the alert."
                },
                "anomalyDetectorArn": {
                    "type": "string",
                    "description": "The Amazon resource name (ARN) of the Anomaly Detector to alert."
                }
            },
            "outputs": {
                "action": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AlertAction",
                    "description": "The action to be taken by the alert when an anomaly is detected."
                },
                "alertDescription": {
                    "type": "string",
                    "description": "A description for the alert."
                },
                "alertName": {
                    "type": "string",
                    "description": "The name of the alert. If not provided, a name is generated automatically."
                },
                "alertSensitivityThreshold": {
                    "type": "integer",
                    "description": "A number between 0 and 100 (inclusive) that tunes the sensitivity of the alert."
                },
                "anomalyDetectorArn": {
                    "type": "string",
                    "description": "The Amazon resource name (ARN) of the Anomaly Detector to alert."
                },
                "arn": {
                    "type": "string",
                    "description": "ARN assigned to the alert."
                }
            },
            "required": [
                "action",
                "alertSensitivityThreshold",
                "anomalyDetectorArn"
            ],
            "createOnly": [
                "action",
                "alertDescription",
                "alertName",
                "alertSensitivityThreshold",
                "anomalyDetectorArn"
            ]
        },
        "aws-native:lookoutmetrics:AnomalyDetector": {
            "cf": "AWS::LookoutMetrics::AnomalyDetector",
            "inputs": {
                "anomalyDetectorConfig": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorAnomalyDetectorConfig",
                    "description": "Configuration options for the AnomalyDetector"
                },
                "anomalyDetectorDescription": {
                    "type": "string",
                    "description": "A description for the AnomalyDetector."
                },
                "anomalyDetectorName": {
                    "type": "string",
                    "description": "Name for the Amazon Lookout for Metrics Anomaly Detector"
                },
                "kmsKeyArn": {
                    "type": "string",
                    "description": "KMS key used to encrypt the AnomalyDetector data"
                },
                "metricSetList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorMetricSet"
                    },
                    "description": "List of metric sets for anomaly detection"
                }
            },
            "outputs": {
                "anomalyDetectorConfig": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorAnomalyDetectorConfig",
                    "description": "Configuration options for the AnomalyDetector"
                },
                "anomalyDetectorDescription": {
                    "type": "string",
                    "description": "A description for the AnomalyDetector."
                },
                "anomalyDetectorName": {
                    "type": "string",
                    "description": "Name for the Amazon Lookout for Metrics Anomaly Detector"
                },
                "arn": {
                    "type": "string"
                },
                "kmsKeyArn": {
                    "type": "string",
                    "description": "KMS key used to encrypt the AnomalyDetector data"
                },
                "metricSetList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorMetricSet"
                    },
                    "description": "List of metric sets for anomaly detection"
                }
            },
            "required": [
                "anomalyDetectorConfig",
                "metricSetList"
            ],
            "createOnly": [
                "anomalyDetectorName",
                "metricSource"
            ]
        },
        "aws-native:lookoutvision:Project": {
            "cf": "AWS::LookoutVision::Project",
            "inputs": {
                "projectName": {
                    "type": "string"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                }
            },
            "required": [
                "projectName"
            ],
            "createOnly": [
                "projectName"
            ]
        },
        "aws-native:macie:CustomDataIdentifier": {
            "cf": "AWS::Macie::CustomDataIdentifier",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Description of custom data identifier."
                },
                "ignoreWords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Words to be ignored."
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keywords to be matched against."
                },
                "maximumMatchDistance": {
                    "type": "integer",
                    "description": "Maximum match distance."
                },
                "name": {
                    "type": "string",
                    "description": "Name of custom data identifier."
                },
                "regex": {
                    "type": "string",
                    "description": "Regular expression for custom data identifier."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Custom data identifier ARN."
                },
                "description": {
                    "type": "string",
                    "description": "Description of custom data identifier."
                },
                "ignoreWords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Words to be ignored."
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keywords to be matched against."
                },
                "maximumMatchDistance": {
                    "type": "integer",
                    "description": "Maximum match distance."
                },
                "name": {
                    "type": "string",
                    "description": "Name of custom data identifier."
                },
                "regex": {
                    "type": "string",
                    "description": "Regular expression for custom data identifier."
                }
            },
            "required": [
                "name",
                "regex"
            ],
            "createOnly": [
                "description",
                "ignoreWords",
                "keywords",
                "maximumMatchDistance",
                "name",
                "regex"
            ]
        },
        "aws-native:macie:FindingsFilter": {
            "cf": "AWS::Macie::FindingsFilter",
            "inputs": {
                "action": {
                    "$ref": "#/types/aws-native:macie:FindingsFilterFindingFilterAction",
                    "description": "Findings filter action."
                },
                "description": {
                    "type": "string",
                    "description": "Findings filter description"
                },
                "findingCriteria": {
                    "$ref": "#/types/aws-native:macie:FindingsFilterFindingCriteria",
                    "description": "Findings filter criteria."
                },
                "name": {
                    "type": "string",
                    "description": "Findings filter name"
                },
                "position": {
                    "type": "integer",
                    "description": "Findings filter position."
                }
            },
            "outputs": {
                "action": {
                    "$ref": "#/types/aws-native:macie:FindingsFilterFindingFilterAction",
                    "description": "Findings filter action."
                },
                "arn": {
                    "type": "string",
                    "description": "Findings filter ARN."
                },
                "description": {
                    "type": "string",
                    "description": "Findings filter description"
                },
                "findingCriteria": {
                    "$ref": "#/types/aws-native:macie:FindingsFilterFindingCriteria",
                    "description": "Findings filter criteria."
                },
                "findingsFilterListItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:macie:FindingsFilterFindingsFilterListItem"
                    },
                    "description": "Findings filters list."
                },
                "name": {
                    "type": "string",
                    "description": "Findings filter name"
                },
                "position": {
                    "type": "integer",
                    "description": "Findings filter position."
                }
            },
            "required": [
                "findingCriteria",
                "name"
            ]
        },
        "aws-native:macie:Session": {
            "cf": "AWS::Macie::Session",
            "inputs": {
                "findingPublishingFrequency": {
                    "$ref": "#/types/aws-native:macie:SessionFindingPublishingFrequency",
                    "description": "A enumeration value that specifies how frequently finding updates are published."
                },
                "status": {
                    "$ref": "#/types/aws-native:macie:SessionStatus",
                    "description": "A enumeration value that specifies the status of the Macie Session."
                }
            },
            "outputs": {
                "awsAccountId": {
                    "type": "string",
                    "description": "AWS account ID of customer"
                },
                "findingPublishingFrequency": {
                    "$ref": "#/types/aws-native:macie:SessionFindingPublishingFrequency",
                    "description": "A enumeration value that specifies how frequently finding updates are published."
                },
                "serviceRole": {
                    "type": "string",
                    "description": "Service role used by Macie"
                },
                "status": {
                    "$ref": "#/types/aws-native:macie:SessionStatus",
                    "description": "A enumeration value that specifies the status of the Macie Session."
                }
            }
        },
        "aws-native:mediaconnect:Flow": {
            "cf": "AWS::MediaConnect::Flow",
            "inputs": {
                "availabilityZone": {
                    "type": "string",
                    "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the flow."
                },
                "source": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowSource",
                    "description": "The source of the flow."
                },
                "sourceFailoverConfig": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowFailoverConfig",
                    "description": "The source failover config of the flow."
                }
            },
            "outputs": {
                "availabilityZone": {
                    "type": "string",
                    "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS."
                },
                "flowArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow."
                },
                "flowAvailabilityZone": {
                    "type": "string",
                    "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the flow."
                },
                "source": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowSource",
                    "description": "The source of the flow."
                },
                "sourceFailoverConfig": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowFailoverConfig",
                    "description": "The source failover config of the flow."
                }
            },
            "required": [
                "name",
                "source"
            ],
            "createOnly": [
                "availabilityZone",
                "name",
                "source/Name"
            ]
        },
        "aws-native:mediaconnect:FlowEntitlement": {
            "cf": "AWS::MediaConnect::FlowEntitlement",
            "inputs": {
                "dataTransferSubscriberFeePercent": {
                    "type": "integer",
                    "description": "Percentage from 0-100 of the data transfer cost to be billed to the subscriber."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the entitlement."
                },
                "encryption": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowEntitlementEncryption",
                    "description": "The type of encryption that will be used on the output that is associated with this entitlement."
                },
                "entitlementStatus": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowEntitlementEntitlementStatus",
                    "description": " An indication of whether the entitlement is enabled."
                },
                "flowArn": {
                    "type": "string",
                    "description": "The ARN of the flow."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the entitlement."
                },
                "subscribers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source."
                }
            },
            "outputs": {
                "dataTransferSubscriberFeePercent": {
                    "type": "integer",
                    "description": "Percentage from 0-100 of the data transfer cost to be billed to the subscriber."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the entitlement."
                },
                "encryption": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowEntitlementEncryption",
                    "description": "The type of encryption that will be used on the output that is associated with this entitlement."
                },
                "entitlementArn": {
                    "type": "string",
                    "description": "The ARN of the entitlement."
                },
                "entitlementStatus": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowEntitlementEntitlementStatus",
                    "description": " An indication of whether the entitlement is enabled."
                },
                "flowArn": {
                    "type": "string",
                    "description": "The ARN of the flow."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the entitlement."
                },
                "subscribers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source."
                }
            },
            "required": [
                "description",
                "flowArn",
                "name",
                "subscribers"
            ],
            "createOnly": [
                "dataTransferSubscriberFeePercent",
                "name"
            ]
        },
        "aws-native:mediaconnect:FlowOutput": {
            "cf": "AWS::MediaConnect::FlowOutput",
            "inputs": {
                "cidrAllowList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the output."
                },
                "destination": {
                    "type": "string",
                    "description": "The address where you want to send the output."
                },
                "encryption": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowOutputEncryption",
                    "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key)."
                },
                "flowArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow."
                },
                "maxLatency": {
                    "type": "integer",
                    "description": "The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the output. This value must be unique within the current flow."
                },
                "port": {
                    "type": "integer",
                    "description": "The port to use when content is distributed to this output."
                },
                "protocol": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowOutputProtocol",
                    "description": "The protocol that is used by the source or output."
                },
                "remoteId": {
                    "type": "string",
                    "description": "The remote ID for the Zixi-pull stream."
                },
                "smoothingLatency": {
                    "type": "integer",
                    "description": "The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams."
                },
                "streamId": {
                    "type": "string",
                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams."
                },
                "vpcInterfaceAttachment": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowOutputVpcInterfaceAttachment",
                    "description": "The name of the VPC interface attachment to use for this output."
                }
            },
            "outputs": {
                "cidrAllowList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
                },
                "description": {
                    "type": "string",
                    "description": "A description of the output."
                },
                "destination": {
                    "type": "string",
                    "description": "The address where you want to send the output."
                },
                "encryption": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowOutputEncryption",
                    "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key)."
                },
                "flowArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow."
                },
                "maxLatency": {
                    "type": "integer",
                    "description": "The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the output. This value must be unique within the current flow."
                },
                "outputArn": {
                    "type": "string",
                    "description": "The ARN of the output."
                },
                "port": {
                    "type": "integer",
                    "description": "The port to use when content is distributed to this output."
                },
                "protocol": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowOutputProtocol",
                    "description": "The protocol that is used by the source or output."
                },
                "remoteId": {
                    "type": "string",
                    "description": "The remote ID for the Zixi-pull stream."
                },
                "smoothingLatency": {
                    "type": "integer",
                    "description": "The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams."
                },
                "streamId": {
                    "type": "string",
                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams."
                },
                "vpcInterfaceAttachment": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowOutputVpcInterfaceAttachment",
                    "description": "The name of the VPC interface attachment to use for this output."
                }
            },
            "required": [
                "flowArn",
                "protocol"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:mediaconnect:FlowSource": {
            "cf": "AWS::MediaConnect::FlowSource",
            "inputs": {
                "decryption": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowSourceEncryption",
                    "description": "The type of encryption that is used on the content ingested from this source."
                },
                "description": {
                    "type": "string",
                    "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account."
                },
                "entitlementArn": {
                    "type": "string",
                    "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow."
                },
                "flowArn": {
                    "type": "string",
                    "description": "The ARN of the flow."
                },
                "ingestPort": {
                    "type": "integer",
                    "description": "The port that the flow will be listening on for incoming content."
                },
                "maxBitrate": {
                    "type": "integer",
                    "description": "The smoothing max bitrate for RIST, RTP, and RTP-FEC streams."
                },
                "maxLatency": {
                    "type": "integer",
                    "description": "The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the source."
                },
                "protocol": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowSourceProtocol",
                    "description": "The protocol that is used by the source."
                },
                "streamId": {
                    "type": "string",
                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams."
                },
                "vpcInterfaceName": {
                    "type": "string",
                    "description": "The name of the VPC Interface this Source is configured with."
                },
                "whitelistCidr": {
                    "type": "string",
                    "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
                }
            },
            "outputs": {
                "decryption": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowSourceEncryption",
                    "description": "The type of encryption that is used on the content ingested from this source."
                },
                "description": {
                    "type": "string",
                    "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account."
                },
                "entitlementArn": {
                    "type": "string",
                    "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow."
                },
                "flowArn": {
                    "type": "string",
                    "description": "The ARN of the flow."
                },
                "ingestIp": {
                    "type": "string",
                    "description": "The IP address that the flow will be listening on for incoming content."
                },
                "ingestPort": {
                    "type": "integer",
                    "description": "The port that the flow will be listening on for incoming content."
                },
                "maxBitrate": {
                    "type": "integer",
                    "description": "The smoothing max bitrate for RIST, RTP, and RTP-FEC streams."
                },
                "maxLatency": {
                    "type": "integer",
                    "description": "The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the source."
                },
                "protocol": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowSourceProtocol",
                    "description": "The protocol that is used by the source."
                },
                "sourceArn": {
                    "type": "string",
                    "description": "The ARN of the source."
                },
                "streamId": {
                    "type": "string",
                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams."
                },
                "vpcInterfaceName": {
                    "type": "string",
                    "description": "The name of the VPC Interface this Source is configured with."
                },
                "whitelistCidr": {
                    "type": "string",
                    "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
                }
            },
            "required": [
                "description",
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:mediaconnect:FlowVpcInterface": {
            "cf": "AWS::MediaConnect::FlowVpcInterface",
            "inputs": {
                "flowArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow."
                },
                "name": {
                    "type": "string",
                    "description": "Immutable and has to be a unique against other VpcInterfaces in this Flow."
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role Arn MediaConnect can assumes to create ENIs in customer's account."
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Security Group IDs to be used on ENI."
                },
                "subnetId": {
                    "type": "string",
                    "description": "Subnet must be in the AZ of the Flow"
                }
            },
            "outputs": {
                "flowArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow."
                },
                "name": {
                    "type": "string",
                    "description": "Immutable and has to be a unique against other VpcInterfaces in this Flow."
                },
                "networkInterfaceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the network interfaces created in customer's account by MediaConnect."
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role Arn MediaConnect can assumes to create ENIs in customer's account."
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Security Group IDs to be used on ENI."
                },
                "subnetId": {
                    "type": "string",
                    "description": "Subnet must be in the AZ of the Flow"
                }
            },
            "required": [
                "flowArn",
                "name",
                "roleArn",
                "securityGroupIds",
                "subnetId"
            ],
            "createOnly": [
                "flowArn",
                "name"
            ]
        },
        "aws-native:mediapackage:Asset": {
            "cf": "AWS::MediaPackage::Asset",
            "inputs": {
                "packagingGroupId": {
                    "type": "string",
                    "description": "The ID of the PackagingGroup for the Asset."
                },
                "resourceId": {
                    "type": "string",
                    "description": "The resource ID to include in SPEKE key requests."
                },
                "sourceArn": {
                    "type": "string",
                    "description": "ARN of the source object in S3."
                },
                "sourceRoleArn": {
                    "type": "string",
                    "description": "The IAM role_arn used to access the source S3 bucket."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:AssetTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the Asset."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the Asset was initially submitted for Ingest."
                },
                "egressEndpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:AssetEgressEndpoint"
                    },
                    "description": "The list of egress endpoints available for the Asset."
                },
                "packagingGroupId": {
                    "type": "string",
                    "description": "The ID of the PackagingGroup for the Asset."
                },
                "resourceId": {
                    "type": "string",
                    "description": "The resource ID to include in SPEKE key requests."
                },
                "sourceArn": {
                    "type": "string",
                    "description": "ARN of the source object in S3."
                },
                "sourceRoleArn": {
                    "type": "string",
                    "description": "The IAM role_arn used to access the source S3 bucket."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:AssetTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "required": [
                "packagingGroupId",
                "sourceArn",
                "sourceRoleArn"
            ]
        },
        "aws-native:mediapackage:Channel": {
            "cf": "AWS::MediaPackage::Channel",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "A short text description of the Channel."
                },
                "egressAccessLogs": {
                    "$ref": "#/types/aws-native:mediapackage:ChannelLogConfiguration",
                    "description": "The configuration parameters for egress access logging."
                },
                "ingressAccessLogs": {
                    "$ref": "#/types/aws-native:mediapackage:ChannelLogConfiguration",
                    "description": "The configuration parameters for egress access logging."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:ChannelTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) assigned to the Channel."
                },
                "description": {
                    "type": "string",
                    "description": "A short text description of the Channel."
                },
                "egressAccessLogs": {
                    "$ref": "#/types/aws-native:mediapackage:ChannelLogConfiguration",
                    "description": "The configuration parameters for egress access logging."
                },
                "hlsIngest": {
                    "$ref": "#/types/aws-native:mediapackage:ChannelHlsIngest",
                    "description": "A short text description of the Channel."
                },
                "ingressAccessLogs": {
                    "$ref": "#/types/aws-native:mediapackage:ChannelLogConfiguration",
                    "description": "The configuration parameters for egress access logging."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:ChannelTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "createOnly": [
                "id",
                "tags"
            ]
        },
        "aws-native:mediapackage:OriginEndpoint": {
            "cf": "AWS::MediaPackage::OriginEndpoint",
            "inputs": {
                "authorization": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointAuthorization"
                },
                "channelId": {
                    "type": "string",
                    "description": "The ID of the Channel the OriginEndpoint is associated with."
                },
                "cmafPackage": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointCmafPackage"
                },
                "dashPackage": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashPackage"
                },
                "description": {
                    "type": "string",
                    "description": "A short text description of the OriginEndpoint."
                },
                "hlsPackage": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsPackage"
                },
                "manifestName": {
                    "type": "string",
                    "description": "A short string appended to the end of the OriginEndpoint URL."
                },
                "mssPackage": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointMssPackage"
                },
                "origination": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointOrigination",
                    "description": "Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination"
                },
                "startoverWindowSeconds": {
                    "type": "integer",
                    "description": "Maximum duration (seconds) of content to retain for startover playback. If not specified, startover playback will be disabled for the OriginEndpoint."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:OriginEndpointTag"
                    },
                    "description": "A collection of tags associated with a resource"
                },
                "timeDelaySeconds": {
                    "type": "integer",
                    "description": "Amount of delay (seconds) to enforce on the playback of live content. If not specified, there will be no time delay in effect for the OriginEndpoint."
                },
                "whitelist": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) assigned to the OriginEndpoint."
                },
                "authorization": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointAuthorization"
                },
                "channelId": {
                    "type": "string",
                    "description": "The ID of the Channel the OriginEndpoint is associated with."
                },
                "cmafPackage": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointCmafPackage"
                },
                "dashPackage": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashPackage"
                },
                "description": {
                    "type": "string",
                    "description": "A short text description of the OriginEndpoint."
                },
                "hlsPackage": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsPackage"
                },
                "manifestName": {
                    "type": "string",
                    "description": "A short string appended to the end of the OriginEndpoint URL."
                },
                "mssPackage": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointMssPackage"
                },
                "origination": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointOrigination",
                    "description": "Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination"
                },
                "startoverWindowSeconds": {
                    "type": "integer",
                    "description": "Maximum duration (seconds) of content to retain for startover playback. If not specified, startover playback will be disabled for the OriginEndpoint."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:OriginEndpointTag"
                    },
                    "description": "A collection of tags associated with a resource"
                },
                "timeDelaySeconds": {
                    "type": "integer",
                    "description": "Amount of delay (seconds) to enforce on the playback of live content. If not specified, there will be no time delay in effect for the OriginEndpoint."
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the packaged OriginEndpoint for consumption."
                },
                "whitelist": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint."
                }
            },
            "required": [
                "channelId"
            ],
            "createOnly": [
                "id"
            ]
        },
        "aws-native:mediapackage:PackagingConfiguration": {
            "cf": "AWS::MediaPackage::PackagingConfiguration",
            "inputs": {
                "cmafPackage": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationCmafPackage",
                    "description": "A CMAF packaging configuration."
                },
                "dashPackage": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationDashPackage",
                    "description": "A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration."
                },
                "hlsPackage": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationHlsPackage",
                    "description": "An HTTP Live Streaming (HLS) packaging configuration."
                },
                "mssPackage": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationMssPackage",
                    "description": "A Microsoft Smooth Streaming (MSS) PackagingConfiguration."
                },
                "packagingGroupId": {
                    "type": "string",
                    "description": "The ID of a PackagingGroup."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the PackagingConfiguration."
                },
                "cmafPackage": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationCmafPackage",
                    "description": "A CMAF packaging configuration."
                },
                "dashPackage": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationDashPackage",
                    "description": "A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration."
                },
                "hlsPackage": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationHlsPackage",
                    "description": "An HTTP Live Streaming (HLS) packaging configuration."
                },
                "mssPackage": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationMssPackage",
                    "description": "A Microsoft Smooth Streaming (MSS) PackagingConfiguration."
                },
                "packagingGroupId": {
                    "type": "string",
                    "description": "The ID of a PackagingGroup."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "required": [
                "packagingGroupId"
            ],
            "createOnly": [
                "id"
            ]
        },
        "aws-native:mediapackage:PackagingGroup": {
            "cf": "AWS::MediaPackage::PackagingGroup",
            "inputs": {
                "authorization": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingGroupAuthorization",
                    "description": "CDN Authorization"
                },
                "egressAccessLogs": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingGroupLogConfiguration",
                    "description": "The configuration parameters for egress access logging."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:PackagingGroupTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the PackagingGroup."
                },
                "authorization": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingGroupAuthorization",
                    "description": "CDN Authorization"
                },
                "domainName": {
                    "type": "string",
                    "description": "The fully qualified domain name for Assets in the PackagingGroup."
                },
                "egressAccessLogs": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingGroupLogConfiguration",
                    "description": "The configuration parameters for egress access logging."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:PackagingGroupTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "createOnly": [
                "id",
                "tags"
            ]
        },
        "aws-native:mwaa:Environment": {
            "cf": "AWS::MWAA::Environment",
            "inputs": {
                "airflowConfigurationOptions": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Key/value pairs representing Airflow configuration variables.\n    Keys are prefixed by their section:\n\n    [core]\n    dags_folder={AIRFLOW_HOME}/dags\n\n    Would be represented as\n\n    \"core.dags_folder\": \"{AIRFLOW_HOME}/dags\""
                },
                "airflowVersion": {
                    "type": "string"
                },
                "dagS3Path": {
                    "type": "string"
                },
                "environmentClass": {
                    "type": "string"
                },
                "executionRoleArn": {
                    "type": "string"
                },
                "kmsKey": {
                    "type": "string"
                },
                "loggingConfiguration": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentLoggingConfiguration"
                },
                "maxWorkers": {
                    "type": "integer"
                },
                "minWorkers": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networkConfiguration": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentNetworkConfiguration"
                },
                "pluginsS3ObjectVersion": {
                    "type": "string"
                },
                "pluginsS3Path": {
                    "type": "string"
                },
                "requirementsS3ObjectVersion": {
                    "type": "string"
                },
                "requirementsS3Path": {
                    "type": "string"
                },
                "schedulers": {
                    "type": "integer"
                },
                "sourceBucketArn": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentTagMap"
                },
                "webserverAccessMode": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentWebserverAccessMode"
                },
                "weeklyMaintenanceWindowStart": {
                    "type": "string"
                }
            },
            "outputs": {
                "airflowConfigurationOptions": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Key/value pairs representing Airflow configuration variables.\n    Keys are prefixed by their section:\n\n    [core]\n    dags_folder={AIRFLOW_HOME}/dags\n\n    Would be represented as\n\n    \"core.dags_folder\": \"{AIRFLOW_HOME}/dags\""
                },
                "airflowVersion": {
                    "type": "string"
                },
                "arn": {
                    "type": "string"
                },
                "dagS3Path": {
                    "type": "string"
                },
                "environmentClass": {
                    "type": "string"
                },
                "executionRoleArn": {
                    "type": "string"
                },
                "kmsKey": {
                    "type": "string"
                },
                "loggingConfiguration": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentLoggingConfiguration"
                },
                "maxWorkers": {
                    "type": "integer"
                },
                "minWorkers": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networkConfiguration": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentNetworkConfiguration"
                },
                "pluginsS3ObjectVersion": {
                    "type": "string"
                },
                "pluginsS3Path": {
                    "type": "string"
                },
                "requirementsS3ObjectVersion": {
                    "type": "string"
                },
                "requirementsS3Path": {
                    "type": "string"
                },
                "schedulers": {
                    "type": "integer"
                },
                "sourceBucketArn": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentTagMap"
                },
                "webserverAccessMode": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentWebserverAccessMode"
                },
                "webserverUrl": {
                    "type": "string"
                },
                "weeklyMaintenanceWindowStart": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "kmsKey",
                "name",
                "networkConfiguration/SubnetIds"
            ]
        },
        "aws-native:networkfirewall:Firewall": {
            "cf": "AWS::NetworkFirewall::Firewall",
            "inputs": {
                "deleteProtection": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "firewallName": {
                    "type": "string"
                },
                "firewallPolicyArn": {
                    "type": "string"
                },
                "firewallPolicyChangeProtection": {
                    "type": "boolean"
                },
                "subnetChangeProtection": {
                    "type": "boolean"
                },
                "subnetMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallSubnetMapping"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallTag"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "outputs": {
                "deleteProtection": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "endpointIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "firewallArn": {
                    "type": "string"
                },
                "firewallId": {
                    "type": "string"
                },
                "firewallName": {
                    "type": "string"
                },
                "firewallPolicyArn": {
                    "type": "string"
                },
                "firewallPolicyChangeProtection": {
                    "type": "boolean"
                },
                "subnetChangeProtection": {
                    "type": "boolean"
                },
                "subnetMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallSubnetMapping"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallTag"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "firewallName",
                "firewallPolicyArn",
                "subnetMappings",
                "vpcId"
            ],
            "createOnly": [
                "firewallName",
                "vpcId"
            ]
        },
        "aws-native:networkfirewall:FirewallPolicy": {
            "cf": "AWS::NetworkFirewall::FirewallPolicy",
            "inputs": {
                "description": {
                    "type": "string"
                },
                "firewallPolicy": {
                    "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyFirewallPolicy",
                    "language": {
                        "csharp": {
                            "name": "FirewallPolicyValue"
                        }
                    }
                },
                "firewallPolicyName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyTag"
                    }
                }
            },
            "outputs": {
                "description": {
                    "type": "string"
                },
                "firewallPolicy": {
                    "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyFirewallPolicy",
                    "language": {
                        "csharp": {
                            "name": "FirewallPolicyValue"
                        }
                    }
                },
                "firewallPolicyArn": {
                    "type": "string"
                },
                "firewallPolicyId": {
                    "type": "string"
                },
                "firewallPolicyName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyTag"
                    }
                }
            },
            "required": [
                "firewallPolicy",
                "firewallPolicyName"
            ],
            "createOnly": [
                "firewallPolicyName"
            ]
        },
        "aws-native:networkfirewall:LoggingConfiguration": {
            "cf": "AWS::NetworkFirewall::LoggingConfiguration",
            "inputs": {
                "firewallArn": {
                    "type": "string"
                },
                "firewallName": {
                    "type": "string"
                },
                "loggingConfiguration": {
                    "$ref": "#/types/aws-native:networkfirewall:LoggingConfigurationLoggingConfiguration",
                    "language": {
                        "csharp": {
                            "name": "LoggingConfigurationValue"
                        }
                    }
                }
            },
            "outputs": {
                "firewallArn": {
                    "type": "string"
                },
                "firewallName": {
                    "type": "string"
                },
                "loggingConfiguration": {
                    "$ref": "#/types/aws-native:networkfirewall:LoggingConfigurationLoggingConfiguration",
                    "language": {
                        "csharp": {
                            "name": "LoggingConfigurationValue"
                        }
                    }
                }
            },
            "required": [
                "firewallArn",
                "loggingConfiguration"
            ],
            "createOnly": [
                "firewallArn",
                "firewallName"
            ]
        },
        "aws-native:networkfirewall:RuleGroup": {
            "cf": "AWS::NetworkFirewall::RuleGroup",
            "inputs": {
                "capacity": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "ruleGroup": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupRuleGroup",
                    "language": {
                        "csharp": {
                            "name": "RuleGroupValue"
                        }
                    }
                },
                "ruleGroupName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupTag"
                    }
                },
                "type": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupType"
                }
            },
            "outputs": {
                "capacity": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "ruleGroup": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupRuleGroup",
                    "language": {
                        "csharp": {
                            "name": "RuleGroupValue"
                        }
                    }
                },
                "ruleGroupArn": {
                    "type": "string"
                },
                "ruleGroupId": {
                    "type": "string"
                },
                "ruleGroupName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupTag"
                    }
                },
                "type": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupType"
                }
            },
            "required": [
                "capacity",
                "ruleGroupName",
                "type"
            ],
            "createOnly": [
                "capacity",
                "ruleGroupName",
                "type"
            ]
        },
        "aws-native:networkmanager:CustomerGatewayAssociation": {
            "cf": "AWS::NetworkManager::CustomerGatewayAssociation",
            "inputs": {
                "customerGatewayArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the customer gateway."
                },
                "deviceId": {
                    "type": "string",
                    "description": "The ID of the device"
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "linkId": {
                    "type": "string",
                    "description": "The ID of the link"
                }
            },
            "outputs": {
                "customerGatewayArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the customer gateway."
                },
                "deviceId": {
                    "type": "string",
                    "description": "The ID of the device"
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "linkId": {
                    "type": "string",
                    "description": "The ID of the link"
                }
            },
            "required": [
                "customerGatewayArn",
                "deviceId",
                "globalNetworkId"
            ],
            "createOnly": [
                "customerGatewayArn",
                "deviceId",
                "globalNetworkId",
                "linkId"
            ]
        },
        "aws-native:networkmanager:Device": {
            "cf": "AWS::NetworkManager::Device",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the device."
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "location": {
                    "$ref": "#/types/aws-native:networkmanager:DeviceLocation",
                    "description": "The site location."
                },
                "model": {
                    "type": "string",
                    "description": "The device model"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "The device serial number."
                },
                "siteId": {
                    "type": "string",
                    "description": "The site ID."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkmanager:DeviceTag"
                    },
                    "description": "The tags for the device."
                },
                "type": {
                    "type": "string",
                    "description": "The device type."
                },
                "vendor": {
                    "type": "string",
                    "description": "The device vendor."
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the device."
                },
                "deviceArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the device."
                },
                "deviceId": {
                    "type": "string",
                    "description": "The ID of the device."
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "location": {
                    "$ref": "#/types/aws-native:networkmanager:DeviceLocation",
                    "description": "The site location."
                },
                "model": {
                    "type": "string",
                    "description": "The device model"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "The device serial number."
                },
                "siteId": {
                    "type": "string",
                    "description": "The site ID."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkmanager:DeviceTag"
                    },
                    "description": "The tags for the device."
                },
                "type": {
                    "type": "string",
                    "description": "The device type."
                },
                "vendor": {
                    "type": "string",
                    "description": "The device vendor."
                }
            },
            "required": [
                "globalNetworkId"
            ],
            "createOnly": [
                "globalNetworkId"
            ]
        },
        "aws-native:networkmanager:GlobalNetwork": {
            "cf": "AWS::NetworkManager::GlobalNetwork",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the global network."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkmanager:GlobalNetworkTag"
                    },
                    "description": "The tags for the global network."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the global network."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the global network."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkmanager:GlobalNetworkTag"
                    },
                    "description": "The tags for the global network."
                }
            }
        },
        "aws-native:networkmanager:Link": {
            "cf": "AWS::NetworkManager::Link",
            "inputs": {
                "bandwidth": {
                    "$ref": "#/types/aws-native:networkmanager:LinkBandwidth",
                    "description": "The Bandwidth for the link."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the link."
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "provider": {
                    "type": "string",
                    "description": "The provider of the link."
                },
                "siteId": {
                    "type": "string",
                    "description": "The ID of the site"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkmanager:LinkTag"
                    },
                    "description": "The tags for the link."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the link."
                }
            },
            "outputs": {
                "bandwidth": {
                    "$ref": "#/types/aws-native:networkmanager:LinkBandwidth",
                    "description": "The Bandwidth for the link."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the link."
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "linkArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the link."
                },
                "linkId": {
                    "type": "string",
                    "description": "The ID of the link."
                },
                "provider": {
                    "type": "string",
                    "description": "The provider of the link."
                },
                "siteId": {
                    "type": "string",
                    "description": "The ID of the site"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkmanager:LinkTag"
                    },
                    "description": "The tags for the link."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the link."
                }
            },
            "required": [
                "bandwidth",
                "globalNetworkId",
                "siteId"
            ],
            "createOnly": [
                "globalNetworkId",
                "siteId"
            ]
        },
        "aws-native:networkmanager:LinkAssociation": {
            "cf": "AWS::NetworkManager::LinkAssociation",
            "inputs": {
                "deviceId": {
                    "type": "string",
                    "description": "The ID of the device"
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "linkId": {
                    "type": "string",
                    "description": "The ID of the link"
                }
            },
            "outputs": {
                "deviceId": {
                    "type": "string",
                    "description": "The ID of the device"
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "linkId": {
                    "type": "string",
                    "description": "The ID of the link"
                }
            },
            "required": [
                "deviceId",
                "globalNetworkId",
                "linkId"
            ],
            "createOnly": [
                "deviceId",
                "globalNetworkId",
                "linkId"
            ]
        },
        "aws-native:networkmanager:Site": {
            "cf": "AWS::NetworkManager::Site",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the site."
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "location": {
                    "$ref": "#/types/aws-native:networkmanager:SiteLocation",
                    "description": "The location of the site."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkmanager:SiteTag"
                    },
                    "description": "The tags for the site."
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the site."
                },
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "location": {
                    "$ref": "#/types/aws-native:networkmanager:SiteLocation",
                    "description": "The location of the site."
                },
                "siteArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the site."
                },
                "siteId": {
                    "type": "string",
                    "description": "The ID of the site."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkmanager:SiteTag"
                    },
                    "description": "The tags for the site."
                }
            },
            "required": [
                "globalNetworkId"
            ],
            "createOnly": [
                "globalNetworkId"
            ]
        },
        "aws-native:networkmanager:TransitGatewayRegistration": {
            "cf": "AWS::NetworkManager::TransitGatewayRegistration",
            "inputs": {
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "transitGatewayArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the transit gateway."
                }
            },
            "outputs": {
                "globalNetworkId": {
                    "type": "string",
                    "description": "The ID of the global network."
                },
                "transitGatewayArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the transit gateway."
                }
            },
            "required": [
                "globalNetworkId",
                "transitGatewayArn"
            ],
            "createOnly": [
                "globalNetworkId",
                "transitGatewayArn"
            ]
        },
        "aws-native:nimblestudio:LaunchProfile": {
            "cf": "AWS::NimbleStudio::LaunchProfile",
            "inputs": {
                "description": {
                    "type": "string"
                },
                "ec2SubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "launchProfileProtocolVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "streamConfiguration": {
                    "$ref": "#/types/aws-native:nimblestudio:LaunchProfileStreamConfiguration"
                },
                "studioComponentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "studioId": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                }
            },
            "outputs": {
                "description": {
                    "type": "string"
                },
                "ec2SubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "launchProfileId": {
                    "type": "string"
                },
                "launchProfileProtocolVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "streamConfiguration": {
                    "$ref": "#/types/aws-native:nimblestudio:LaunchProfileStreamConfiguration"
                },
                "studioComponentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "studioId": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                }
            },
            "required": [
                "ec2SubnetIds",
                "launchProfileProtocolVersions",
                "name",
                "streamConfiguration",
                "studioComponentIds",
                "studioId"
            ],
            "createOnly": [
                "ec2SubnetIds",
                "studioId",
                "tags"
            ]
        },
        "aws-native:nimblestudio:StreamingImage": {
            "cf": "AWS::NimbleStudio::StreamingImage",
            "inputs": {
                "description": {
                    "type": "string"
                },
                "ec2ImageId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "studioId": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                }
            },
            "outputs": {
                "description": {
                    "type": "string"
                },
                "ec2ImageId": {
                    "type": "string"
                },
                "encryptionConfiguration": {
                    "$ref": "#/types/aws-native:nimblestudio:StreamingImageStreamingImageEncryptionConfiguration"
                },
                "eulaIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "streamingImageId": {
                    "type": "string"
                },
                "studioId": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                }
            },
            "required": [
                "ec2ImageId",
                "name",
                "studioId"
            ],
            "createOnly": [
                "ec2ImageId",
                "studioId",
                "tags"
            ]
        },
        "aws-native:nimblestudio:Studio": {
            "cf": "AWS::NimbleStudio::Studio",
            "inputs": {
                "adminRoleArn": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "studioEncryptionConfiguration": {
                    "$ref": "#/types/aws-native:nimblestudio:StudioStudioEncryptionConfiguration"
                },
                "studioName": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                },
                "userRoleArn": {
                    "type": "string"
                }
            },
            "outputs": {
                "adminRoleArn": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "homeRegion": {
                    "type": "string"
                },
                "ssoClientId": {
                    "type": "string"
                },
                "studioEncryptionConfiguration": {
                    "$ref": "#/types/aws-native:nimblestudio:StudioStudioEncryptionConfiguration"
                },
                "studioId": {
                    "type": "string"
                },
                "studioName": {
                    "type": "string"
                },
                "studioUrl": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                },
                "userRoleArn": {
                    "type": "string"
                }
            },
            "required": [
                "adminRoleArn",
                "displayName",
                "studioName",
                "userRoleArn"
            ],
            "createOnly": [
                "studioName",
                "tags"
            ]
        },
        "aws-native:nimblestudio:StudioComponent": {
            "cf": "AWS::NimbleStudio::StudioComponent",
            "inputs": {
                "configuration": {
                    "$ref": "#/types/aws-native:nimblestudio:StudioComponentStudioComponentConfiguration"
                },
                "description": {
                    "type": "string"
                },
                "ec2SecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "initializationScripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:nimblestudio:StudioComponentStudioComponentInitializationScript"
                    }
                },
                "name": {
                    "type": "string"
                },
                "scriptParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:nimblestudio:StudioComponentScriptParameterKeyValue"
                    }
                },
                "studioId": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                },
                "type": {
                    "type": "string"
                }
            },
            "outputs": {
                "configuration": {
                    "$ref": "#/types/aws-native:nimblestudio:StudioComponentStudioComponentConfiguration"
                },
                "description": {
                    "type": "string"
                },
                "ec2SecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "initializationScripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:nimblestudio:StudioComponentStudioComponentInitializationScript"
                    }
                },
                "name": {
                    "type": "string"
                },
                "scriptParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:nimblestudio:StudioComponentScriptParameterKeyValue"
                    }
                },
                "studioComponentId": {
                    "type": "string"
                },
                "studioId": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "pulumi.json#/Any"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "studioId",
                "type"
            ],
            "createOnly": [
                "studioId",
                "subtype",
                "tags"
            ]
        },
        "aws-native:opensearchservice:Domain": {
            "cf": "AWS::OpenSearchService::Domain",
            "inputs": {
                "accessPolicies": {
                    "$ref": "pulumi.json#/Any"
                },
                "advancedOptions": {
                    "$ref": "pulumi.json#/Any"
                },
                "advancedSecurityOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainAdvancedSecurityOptionsInput"
                },
                "clusterConfig": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainClusterConfig"
                },
                "cognitoOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainCognitoOptions"
                },
                "domainEndpointOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainDomainEndpointOptions"
                },
                "domainName": {
                    "type": "string"
                },
                "eBSOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainEBSOptions"
                },
                "encryptionAtRestOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainEncryptionAtRestOptions"
                },
                "engineVersion": {
                    "type": "string"
                },
                "logPublishingOptions": {
                    "$ref": "pulumi.json#/Any"
                },
                "nodeToNodeEncryptionOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainNodeToNodeEncryptionOptions"
                },
                "snapshotOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainSnapshotOptions"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:opensearchservice:DomainTag"
                    },
                    "description": "An arbitrary set of tags (key-value pairs) for this Domain."
                },
                "vPCOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainVPCOptions"
                }
            },
            "outputs": {
                "accessPolicies": {
                    "$ref": "pulumi.json#/Any"
                },
                "advancedOptions": {
                    "$ref": "pulumi.json#/Any"
                },
                "advancedSecurityOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainAdvancedSecurityOptionsInput"
                },
                "arn": {
                    "type": "string"
                },
                "clusterConfig": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainClusterConfig"
                },
                "cognitoOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainCognitoOptions"
                },
                "domainEndpoint": {
                    "type": "string"
                },
                "domainEndpointOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainDomainEndpointOptions"
                },
                "domainEndpoints": {
                    "$ref": "pulumi.json#/Any"
                },
                "domainName": {
                    "type": "string"
                },
                "eBSOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainEBSOptions"
                },
                "encryptionAtRestOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainEncryptionAtRestOptions"
                },
                "engineVersion": {
                    "type": "string"
                },
                "logPublishingOptions": {
                    "$ref": "pulumi.json#/Any"
                },
                "nodeToNodeEncryptionOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainNodeToNodeEncryptionOptions"
                },
                "serviceSoftwareOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainServiceSoftwareOptions"
                },
                "snapshotOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainSnapshotOptions"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:opensearchservice:DomainTag"
                    },
                    "description": "An arbitrary set of tags (key-value pairs) for this Domain."
                },
                "vPCOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainVPCOptions"
                }
            },
            "createOnly": [
                "advancedSecurityOptions",
                "domainName"
            ]
        },
        "aws-native:opsworkscm:Server": {
            "cf": "AWS::OpsWorksCM::Server",
            "inputs": {
                "associatePublicIpAddress": {
                    "type": "boolean"
                },
                "backupId": {
                    "type": "string"
                },
                "backupRetentionCount": {
                    "type": "integer"
                },
                "customCertificate": {
                    "type": "string"
                },
                "customDomain": {
                    "type": "string"
                },
                "customPrivateKey": {
                    "type": "string"
                },
                "disableAutomatedBackup": {
                    "type": "boolean"
                },
                "engine": {
                    "type": "string"
                },
                "engineAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:opsworkscm:ServerEngineAttribute"
                    }
                },
                "engineModel": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "instanceProfileArn": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "keyPair": {
                    "type": "string"
                },
                "preferredBackupWindow": {
                    "type": "string"
                },
                "preferredMaintenanceWindow": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serverName": {
                    "type": "string"
                },
                "serviceRoleArn": {
                    "type": "string"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:opsworkscm:ServerTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "associatePublicIpAddress": {
                    "type": "boolean"
                },
                "backupId": {
                    "type": "string"
                },
                "backupRetentionCount": {
                    "type": "integer"
                },
                "customCertificate": {
                    "type": "string"
                },
                "customDomain": {
                    "type": "string"
                },
                "customPrivateKey": {
                    "type": "string"
                },
                "disableAutomatedBackup": {
                    "type": "boolean"
                },
                "endpoint": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "engineAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:opsworkscm:ServerEngineAttribute"
                    }
                },
                "engineModel": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "instanceProfileArn": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "keyPair": {
                    "type": "string"
                },
                "preferredBackupWindow": {
                    "type": "string"
                },
                "preferredMaintenanceWindow": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serverName": {
                    "type": "string"
                },
                "serviceRoleArn": {
                    "type": "string"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:opsworkscm:ServerTag"
                    }
                }
            },
            "required": [
                "instanceProfileArn",
                "instanceType",
                "serviceRoleArn"
            ],
            "createOnly": [
                "associatePublicIpAddress",
                "backupId",
                "customCertificate",
                "customDomain",
                "customPrivateKey",
                "engine",
                "engineModel",
                "engineVersion",
                "instanceProfileArn",
                "instanceType",
                "keyPair",
                "securityGroupIds",
                "serverName",
                "serviceRoleArn",
                "subnetIds"
            ]
        },
        "aws-native:qldb:Stream": {
            "cf": "AWS::QLDB::Stream",
            "inputs": {
                "exclusiveEndTime": {
                    "type": "string"
                },
                "inclusiveStartTime": {
                    "type": "string"
                },
                "kinesisConfiguration": {
                    "$ref": "#/types/aws-native:qldb:StreamKinesisConfiguration"
                },
                "ledgerName": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:qldb:StreamTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "exclusiveEndTime": {
                    "type": "string"
                },
                "inclusiveStartTime": {
                    "type": "string"
                },
                "kinesisConfiguration": {
                    "$ref": "#/types/aws-native:qldb:StreamKinesisConfiguration"
                },
                "ledgerName": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:qldb:StreamTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "inclusiveStartTime",
                "kinesisConfiguration",
                "ledgerName",
                "roleArn",
                "streamName"
            ],
            "createOnly": [
                "exclusiveEndTime",
                "inclusiveStartTime",
                "kinesisConfiguration",
                "ledgerName",
                "roleArn",
                "streamName"
            ]
        },
        "aws-native:quicksight:Analysis": {
            "cf": "AWS::QuickSight::Analysis",
            "inputs": {
                "analysisId": {
                    "type": "string"
                },
                "awsAccountId": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisAnalysisError"
                    },
                    "description": "\u003cp\u003eErrors associated with the analysis.\u003c/p\u003e"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe descriptive name of the analysis.\u003c/p\u003e"
                },
                "parameters": {
                    "$ref": "#/types/aws-native:quicksight:AnalysisParameters"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisResourcePermission"
                    },
                    "description": "\u003cp\u003eA structure that describes the principals and the resource-level permissions on an\n            analysis. You can use the \u003ccode\u003ePermissions\u003c/code\u003e structure to grant permissions by\n            providing a list of AWS Identity and Access Management (IAM) action information for each\n            principal listed by Amazon Resource Name (ARN). \u003c/p\u003e\n\n        \u003cp\u003eTo specify no permissions, omit \u003ccode\u003ePermissions\u003c/code\u003e.\u003c/p\u003e"
                },
                "sourceEntity": {
                    "$ref": "#/types/aws-native:quicksight:AnalysisAnalysisSourceEntity"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the\n            analysis.\u003c/p\u003e"
                },
                "themeArn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe ARN of the theme of the analysis.\u003c/p\u003e"
                }
            },
            "outputs": {
                "analysisId": {
                    "type": "string"
                },
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the analysis.\u003c/p\u003e"
                },
                "awsAccountId": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe time that the analysis was created.\u003c/p\u003e"
                },
                "dataSetArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe ARNs of the datasets of the analysis.\u003c/p\u003e"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisAnalysisError"
                    },
                    "description": "\u003cp\u003eErrors associated with the analysis.\u003c/p\u003e"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe time that the analysis was last updated.\u003c/p\u003e"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe descriptive name of the analysis.\u003c/p\u003e"
                },
                "parameters": {
                    "$ref": "#/types/aws-native:quicksight:AnalysisParameters"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisResourcePermission"
                    },
                    "description": "\u003cp\u003eA structure that describes the principals and the resource-level permissions on an\n            analysis. You can use the \u003ccode\u003ePermissions\u003c/code\u003e structure to grant permissions by\n            providing a list of AWS Identity and Access Management (IAM) action information for each\n            principal listed by Amazon Resource Name (ARN). \u003c/p\u003e\n\n        \u003cp\u003eTo specify no permissions, omit \u003ccode\u003ePermissions\u003c/code\u003e.\u003c/p\u003e"
                },
                "sheets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisSheet"
                    },
                    "description": "\u003cp\u003eA list of the associated sheets with the unique identifier and name of each sheet.\u003c/p\u003e"
                },
                "sourceEntity": {
                    "$ref": "#/types/aws-native:quicksight:AnalysisAnalysisSourceEntity"
                },
                "status": {
                    "$ref": "#/types/aws-native:quicksight:AnalysisResourceStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the\n            analysis.\u003c/p\u003e"
                },
                "themeArn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe ARN of the theme of the analysis.\u003c/p\u003e"
                }
            },
            "required": [
                "analysisId",
                "awsAccountId"
            ],
            "createOnly": [
                "analysisId",
                "awsAccountId"
            ]
        },
        "aws-native:quicksight:Dashboard": {
            "cf": "AWS::QuickSight::Dashboard",
            "inputs": {
                "awsAccountId": {
                    "type": "string"
                },
                "dashboardId": {
                    "type": "string"
                },
                "dashboardPublishOptions": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardPublishOptions"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe display name of the dashboard.\u003c/p\u003e"
                },
                "parameters": {
                    "$ref": "#/types/aws-native:quicksight:DashboardParameters"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardResourcePermission"
                    },
                    "description": "\u003cp\u003eA structure that contains the permissions of the dashboard. You can use this structure\n            for granting permissions by providing a list of IAM action information for each\n            principal ARN. \u003c/p\u003e\n\n        \u003cp\u003eTo specify no permissions, omit the permissions list.\u003c/p\u003e"
                },
                "sourceEntity": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardSourceEntity"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the\n            dashboard.\u003c/p\u003e"
                },
                "themeArn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If\n            you add a value for this field, it overrides the value that is used in the source\n            entity. The theme ARN must exist in the same AWS account where you create the\n            dashboard.\u003c/p\u003e"
                },
                "versionDescription": {
                    "type": "string",
                    "description": "\u003cp\u003eA description for the first version of the dashboard being created.\u003c/p\u003e"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the resource.\u003c/p\u003e"
                },
                "awsAccountId": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe time that this dataset was created.\u003c/p\u003e"
                },
                "dashboardId": {
                    "type": "string"
                },
                "dashboardPublishOptions": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardPublishOptions"
                },
                "lastPublishedTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe last time that this dataset was published.\u003c/p\u003e"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe last time that this dataset was updated.\u003c/p\u003e"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe display name of the dashboard.\u003c/p\u003e"
                },
                "parameters": {
                    "$ref": "#/types/aws-native:quicksight:DashboardParameters"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardResourcePermission"
                    },
                    "description": "\u003cp\u003eA structure that contains the permissions of the dashboard. You can use this structure\n            for granting permissions by providing a list of IAM action information for each\n            principal ARN. \u003c/p\u003e\n\n        \u003cp\u003eTo specify no permissions, omit the permissions list.\u003c/p\u003e"
                },
                "sourceEntity": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardSourceEntity"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the\n            dashboard.\u003c/p\u003e"
                },
                "themeArn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If\n            you add a value for this field, it overrides the value that is used in the source\n            entity. The theme ARN must exist in the same AWS account where you create the\n            dashboard.\u003c/p\u003e"
                },
                "version": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardVersion"
                },
                "versionDescription": {
                    "type": "string",
                    "description": "\u003cp\u003eA description for the first version of the dashboard being created.\u003c/p\u003e"
                }
            },
            "required": [
                "awsAccountId",
                "dashboardId"
            ],
            "createOnly": [
                "awsAccountId",
                "dashboardId"
            ]
        },
        "aws-native:quicksight:DataSet": {
            "cf": "AWS::QuickSight::DataSet",
            "inputs": {
                "awsAccountId": {
                    "type": "string"
                },
                "columnGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSetColumnGroup"
                    },
                    "description": "\u003cp\u003eGroupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.\u003c/p\u003e"
                },
                "columnLevelPermissionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSetColumnLevelPermissionRule"
                    }
                },
                "dataSetId": {
                    "type": "string"
                },
                "fieldFolders": {
                    "$ref": "#/types/aws-native:quicksight:DataSetFieldFolderMap"
                },
                "importMode": {
                    "$ref": "#/types/aws-native:quicksight:DataSetDataSetImportMode"
                },
                "ingestionWaitPolicy": {
                    "$ref": "#/types/aws-native:quicksight:DataSetIngestionWaitPolicy"
                },
                "logicalTableMap": {
                    "$ref": "#/types/aws-native:quicksight:DataSetLogicalTableMap"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe display name for the dataset.\u003c/p\u003e"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSetResourcePermission"
                    },
                    "description": "\u003cp\u003eA list of resource permissions on the dataset.\u003c/p\u003e"
                },
                "physicalTableMap": {
                    "$ref": "#/types/aws-native:quicksight:DataSetPhysicalTableMap"
                },
                "rowLevelPermissionDataSet": {
                    "$ref": "#/types/aws-native:quicksight:DataSetRowLevelPermissionDataSet"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSetTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the dataset.\u003c/p\u003e"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the resource.\u003c/p\u003e"
                },
                "awsAccountId": {
                    "type": "string"
                },
                "columnGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSetColumnGroup"
                    },
                    "description": "\u003cp\u003eGroupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.\u003c/p\u003e"
                },
                "columnLevelPermissionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSetColumnLevelPermissionRule"
                    }
                },
                "consumedSpiceCapacityInBytes": {
                    "type": "number",
                    "description": "\u003cp\u003eThe amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't\n            imported into SPICE.\u003c/p\u003e"
                },
                "createdTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe time that this dataset was created.\u003c/p\u003e"
                },
                "dataSetId": {
                    "type": "string"
                },
                "fieldFolders": {
                    "$ref": "#/types/aws-native:quicksight:DataSetFieldFolderMap"
                },
                "importMode": {
                    "$ref": "#/types/aws-native:quicksight:DataSetDataSetImportMode"
                },
                "ingestionWaitPolicy": {
                    "$ref": "#/types/aws-native:quicksight:DataSetIngestionWaitPolicy"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe last time that this dataset was updated.\u003c/p\u003e"
                },
                "logicalTableMap": {
                    "$ref": "#/types/aws-native:quicksight:DataSetLogicalTableMap"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe display name for the dataset.\u003c/p\u003e"
                },
                "outputColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSetOutputColumn"
                    },
                    "description": "\u003cp\u003eThe list of columns after all transforms. These columns are available in templates,\n            analyses, and dashboards.\u003c/p\u003e"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSetResourcePermission"
                    },
                    "description": "\u003cp\u003eA list of resource permissions on the dataset.\u003c/p\u003e"
                },
                "physicalTableMap": {
                    "$ref": "#/types/aws-native:quicksight:DataSetPhysicalTableMap"
                },
                "rowLevelPermissionDataSet": {
                    "$ref": "#/types/aws-native:quicksight:DataSetRowLevelPermissionDataSet"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSetTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the dataset.\u003c/p\u003e"
                }
            },
            "createOnly": [
                "awsAccountId",
                "dataSetId"
            ]
        },
        "aws-native:quicksight:DataSource": {
            "cf": "AWS::QuickSight::DataSource",
            "inputs": {
                "alternateDataSourceParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceParameters"
                    },
                    "description": "\u003cp\u003eA set of alternate data source parameters that you want to share for the credentials\n            stored with this data source. The credentials are applied in tandem with the data source\n            parameters when you copy a data source by using a create or update request. The API\n            operation compares the \u003ccode\u003eDataSourceParameters\u003c/code\u003e structure that's in the request\n            with the structures in the \u003ccode\u003eAlternateDataSourceParameters\u003c/code\u003e allow list. If the\n            structures are an exact match, the request is allowed to use the credentials from this\n            existing data source. If the \u003ccode\u003eAlternateDataSourceParameters\u003c/code\u003e list is null,\n            the \u003ccode\u003eCredentials\u003c/code\u003e originally used with this \u003ccode\u003eDataSourceParameters\u003c/code\u003e\n            are automatically allowed.\u003c/p\u003e"
                },
                "awsAccountId": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceCredentials"
                },
                "dataSourceId": {
                    "type": "string"
                },
                "dataSourceParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceParameters"
                },
                "errorInfo": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceErrorInfo"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the data source.\u003c/p\u003e"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSourceResourcePermission"
                    },
                    "description": "\u003cp\u003eA list of resource permissions on the data source.\u003c/p\u003e"
                },
                "sslProperties": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceSslProperties"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSourceTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the data source.\u003c/p\u003e"
                },
                "type": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceType"
                },
                "vpcConnectionProperties": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceVpcConnectionProperties"
                }
            },
            "outputs": {
                "alternateDataSourceParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceParameters"
                    },
                    "description": "\u003cp\u003eA set of alternate data source parameters that you want to share for the credentials\n            stored with this data source. The credentials are applied in tandem with the data source\n            parameters when you copy a data source by using a create or update request. The API\n            operation compares the \u003ccode\u003eDataSourceParameters\u003c/code\u003e structure that's in the request\n            with the structures in the \u003ccode\u003eAlternateDataSourceParameters\u003c/code\u003e allow list. If the\n            structures are an exact match, the request is allowed to use the credentials from this\n            existing data source. If the \u003ccode\u003eAlternateDataSourceParameters\u003c/code\u003e list is null,\n            the \u003ccode\u003eCredentials\u003c/code\u003e originally used with this \u003ccode\u003eDataSourceParameters\u003c/code\u003e\n            are automatically allowed.\u003c/p\u003e"
                },
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the data source.\u003c/p\u003e"
                },
                "awsAccountId": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe time that this data source was created.\u003c/p\u003e"
                },
                "credentials": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceCredentials"
                },
                "dataSourceId": {
                    "type": "string"
                },
                "dataSourceParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceParameters"
                },
                "errorInfo": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceErrorInfo"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe last time that this data source was updated.\u003c/p\u003e"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the data source.\u003c/p\u003e"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSourceResourcePermission"
                    },
                    "description": "\u003cp\u003eA list of resource permissions on the data source.\u003c/p\u003e"
                },
                "sslProperties": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceSslProperties"
                },
                "status": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceResourceStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSourceTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the data source.\u003c/p\u003e"
                },
                "type": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceType"
                },
                "vpcConnectionProperties": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceVpcConnectionProperties"
                }
            },
            "createOnly": [
                "awsAccountId",
                "dataSourceId",
                "type"
            ]
        },
        "aws-native:quicksight:Template": {
            "cf": "AWS::QuickSight::Template",
            "inputs": {
                "awsAccountId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the template.\u003c/p\u003e"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateResourcePermission"
                    },
                    "description": "\u003cp\u003eA list of resource permissions to be set on the template. \u003c/p\u003e"
                },
                "sourceEntity": {
                    "$ref": "#/types/aws-native:quicksight:TemplateTemplateSourceEntity"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the resource.\u003c/p\u003e"
                },
                "templateId": {
                    "type": "string"
                },
                "versionDescription": {
                    "type": "string",
                    "description": "\u003cp\u003eA description of the current template version being created. This API operation creates the\n\t\t\tfirst version of the template. Every time \u003ccode\u003eUpdateTemplate\u003c/code\u003e is called, a new\n\t\t\tversion is created. Each version of the template maintains a description of the version\n\t\t\tin the \u003ccode\u003eVersionDescription\u003c/code\u003e field.\u003c/p\u003e"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the template.\u003c/p\u003e"
                },
                "awsAccountId": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "\u003cp\u003eTime when this was created.\u003c/p\u003e"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "\u003cp\u003eTime when this was last updated.\u003c/p\u003e"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the template.\u003c/p\u003e"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateResourcePermission"
                    },
                    "description": "\u003cp\u003eA list of resource permissions to be set on the template. \u003c/p\u003e"
                },
                "sourceEntity": {
                    "$ref": "#/types/aws-native:quicksight:TemplateTemplateSourceEntity"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateTag"
                    },
                    "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the resource.\u003c/p\u003e"
                },
                "templateId": {
                    "type": "string"
                },
                "version": {
                    "$ref": "#/types/aws-native:quicksight:TemplateTemplateVersion"
                },
                "versionDescription": {
                    "type": "string",
                    "description": "\u003cp\u003eA description of the current template version being created. This API operation creates the\n\t\t\tfirst version of the template. Every time \u003ccode\u003eUpdateTemplate\u003c/code\u003e is called, a new\n\t\t\tversion is created. Each version of the template maintains a description of the version\n\t\t\tin the \u003ccode\u003eVersionDescription\u003c/code\u003e field.\u003c/p\u003e"
                }
            },
            "required": [
                "awsAccountId",
                "templateId"
            ],
            "createOnly": [
                "awsAccountId",
                "templateId"
            ]
        },
        "aws-native:quicksight:Theme": {
            "cf": "AWS::QuickSight::Theme",
            "inputs": {
                "awsAccountId": {
                    "type": "string"
                },
                "baseThemeId": {
                    "type": "string",
                    "description": "\u003cp\u003eThe ID of the theme that a custom theme will inherit from. All themes inherit from one of\n\t\t\tthe starting themes defined by Amazon QuickSight. For a list of the starting themes, use\n\t\t\t\t\u003ccode\u003eListThemes\u003c/code\u003e or choose \u003cb\u003eThemes\u003c/b\u003e from\n\t\t\twithin a QuickSight analysis. \u003c/p\u003e"
                },
                "configuration": {
                    "$ref": "#/types/aws-native:quicksight:ThemeThemeConfiguration"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the theme.\u003c/p\u003e"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:ThemeResourcePermission"
                    },
                    "description": "\u003cp\u003eA valid grouping of resource permissions to apply to the new theme.\n\t\t\t\u003c/p\u003e"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:ThemeTag"
                    },
                    "description": "\u003cp\u003eA map of the key-value pairs for the resource tag or tags that you want to add to the\n\t\t\tresource.\u003c/p\u003e"
                },
                "themeId": {
                    "type": "string"
                },
                "versionDescription": {
                    "type": "string",
                    "description": "\u003cp\u003eA description of the first version of the theme that you're creating. Every time\n\t\t\t\t\u003ccode\u003eUpdateTheme\u003c/code\u003e is called, a new version is created. Each version of the\n\t\t\ttheme has a description of the version in the \u003ccode\u003eVersionDescription\u003c/code\u003e\n\t\t\tfield.\u003c/p\u003e"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the theme.\u003c/p\u003e"
                },
                "awsAccountId": {
                    "type": "string"
                },
                "baseThemeId": {
                    "type": "string",
                    "description": "\u003cp\u003eThe ID of the theme that a custom theme will inherit from. All themes inherit from one of\n\t\t\tthe starting themes defined by Amazon QuickSight. For a list of the starting themes, use\n\t\t\t\t\u003ccode\u003eListThemes\u003c/code\u003e or choose \u003cb\u003eThemes\u003c/b\u003e from\n\t\t\twithin a QuickSight analysis. \u003c/p\u003e"
                },
                "configuration": {
                    "$ref": "#/types/aws-native:quicksight:ThemeThemeConfiguration"
                },
                "createdTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe date and time that the theme was created.\u003c/p\u003e"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe date and time that the theme was last updated.\u003c/p\u003e"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the theme.\u003c/p\u003e"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:ThemeResourcePermission"
                    },
                    "description": "\u003cp\u003eA valid grouping of resource permissions to apply to the new theme.\n\t\t\t\u003c/p\u003e"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:ThemeTag"
                    },
                    "description": "\u003cp\u003eA map of the key-value pairs for the resource tag or tags that you want to add to the\n\t\t\tresource.\u003c/p\u003e"
                },
                "themeId": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/types/aws-native:quicksight:ThemeThemeType"
                },
                "version": {
                    "$ref": "#/types/aws-native:quicksight:ThemeThemeVersion"
                },
                "versionDescription": {
                    "type": "string",
                    "description": "\u003cp\u003eA description of the first version of the theme that you're creating. Every time\n\t\t\t\t\u003ccode\u003eUpdateTheme\u003c/code\u003e is called, a new version is created. Each version of the\n\t\t\ttheme has a description of the version in the \u003ccode\u003eVersionDescription\u003c/code\u003e\n\t\t\tfield.\u003c/p\u003e"
                }
            },
            "required": [
                "awsAccountId",
                "themeId"
            ],
            "createOnly": [
                "awsAccountId",
                "themeId"
            ]
        },
        "aws-native:rds:DBProxy": {
            "cf": "AWS::RDS::DBProxy",
            "inputs": {
                "auth": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:rds:DBProxyAuthFormat"
                    },
                    "description": "The authorization mechanism that the proxy uses."
                },
                "dBProxyName": {
                    "type": "string",
                    "description": "The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region."
                },
                "debugLogging": {
                    "type": "boolean",
                    "description": "Whether the proxy includes detailed information about SQL statements in its logs."
                },
                "engineFamily": {
                    "$ref": "#/types/aws-native:rds:DBProxyEngineFamily",
                    "description": "The kinds of databases that the proxy can connect to."
                },
                "idleClientTimeout": {
                    "type": "integer",
                    "description": "The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it."
                },
                "requireTLS": {
                    "type": "boolean",
                    "description": "A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:rds:DBProxyTagFormat"
                    },
                    "description": "An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy."
                },
                "vpcSecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VPC security group IDs to associate with the new proxy."
                },
                "vpcSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VPC subnet IDs to associate with the new proxy."
                }
            },
            "outputs": {
                "auth": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:rds:DBProxyAuthFormat"
                    },
                    "description": "The authorization mechanism that the proxy uses."
                },
                "dBProxyArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the proxy."
                },
                "dBProxyName": {
                    "type": "string",
                    "description": "The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region."
                },
                "debugLogging": {
                    "type": "boolean",
                    "description": "Whether the proxy includes detailed information about SQL statements in its logs."
                },
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application."
                },
                "engineFamily": {
                    "$ref": "#/types/aws-native:rds:DBProxyEngineFamily",
                    "description": "The kinds of databases that the proxy can connect to."
                },
                "idleClientTimeout": {
                    "type": "integer",
                    "description": "The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it."
                },
                "requireTLS": {
                    "type": "boolean",
                    "description": "A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:rds:DBProxyTagFormat"
                    },
                    "description": "An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy."
                },
                "vpcId": {
                    "type": "string",
                    "description": "VPC ID to associate with the new DB proxy."
                },
                "vpcSecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VPC security group IDs to associate with the new proxy."
                },
                "vpcSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VPC subnet IDs to associate with the new proxy."
                }
            },
            "required": [
                "auth",
                "dBProxyName",
                "engineFamily",
                "roleArn",
                "vpcSubnetIds"
            ],
            "createOnly": [
                "dBProxyName",
                "engineFamily",
                "vpcSubnetIds"
            ]
        },
        "aws-native:rds:DBProxyEndpoint": {
            "cf": "AWS::RDS::DBProxyEndpoint",
            "inputs": {
                "dBProxyEndpointName": {
                    "type": "string",
                    "description": "The identifier for the DB proxy endpoint. This name must be unique for all DB proxy endpoints owned by your AWS account in the specified AWS Region."
                },
                "dBProxyName": {
                    "type": "string",
                    "description": "The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:rds:DBProxyEndpointTagFormat"
                    },
                    "description": "An optional set of key-value pairs to associate arbitrary data of your choosing with the DB proxy endpoint."
                },
                "targetRole": {
                    "$ref": "#/types/aws-native:rds:DBProxyEndpointTargetRole",
                    "description": "A value that indicates whether the DB proxy endpoint can be used for read/write or read-only operations."
                },
                "vpcSecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VPC security group IDs to associate with the new DB proxy endpoint."
                },
                "vpcSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VPC subnet IDs to associate with the new DB proxy endpoint."
                }
            },
            "outputs": {
                "dBProxyEndpointArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the DB proxy endpoint."
                },
                "dBProxyEndpointName": {
                    "type": "string",
                    "description": "The identifier for the DB proxy endpoint. This name must be unique for all DB proxy endpoints owned by your AWS account in the specified AWS Region."
                },
                "dBProxyName": {
                    "type": "string",
                    "description": "The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region."
                },
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint that you can use to connect to the DB proxy. You include the endpoint value in the connection string for a database client application."
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "A value that indicates whether this endpoint is the default endpoint for the associated DB proxy. Default DB proxy endpoints always have read/write capability. Other endpoints that you associate with the DB proxy can be either read/write or read-only."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:rds:DBProxyEndpointTagFormat"
                    },
                    "description": "An optional set of key-value pairs to associate arbitrary data of your choosing with the DB proxy endpoint."
                },
                "targetRole": {
                    "$ref": "#/types/aws-native:rds:DBProxyEndpointTargetRole",
                    "description": "A value that indicates whether the DB proxy endpoint can be used for read/write or read-only operations."
                },
                "vpcId": {
                    "type": "string",
                    "description": "VPC ID to associate with the new DB proxy endpoint."
                },
                "vpcSecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VPC security group IDs to associate with the new DB proxy endpoint."
                },
                "vpcSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VPC subnet IDs to associate with the new DB proxy endpoint."
                }
            },
            "required": [
                "dBProxyEndpointName",
                "dBProxyName",
                "vpcSubnetIds"
            ],
            "createOnly": [
                "dBProxyEndpointName",
                "dBProxyName",
                "targetRole",
                "vpcSubnetIds"
            ]
        },
        "aws-native:rds:DBProxyTargetGroup": {
            "cf": "AWS::RDS::DBProxyTargetGroup",
            "inputs": {
                "connectionPoolConfigurationInfo": {
                    "$ref": "#/types/aws-native:rds:DBProxyTargetGroupConnectionPoolConfigurationInfoFormat"
                },
                "dBClusterIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dBInstanceIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dBProxyName": {
                    "type": "string",
                    "description": "The identifier for the proxy."
                },
                "targetGroupName": {
                    "$ref": "#/types/aws-native:rds:DBProxyTargetGroupTargetGroupName",
                    "description": "The identifier for the DBProxyTargetGroup"
                }
            },
            "outputs": {
                "connectionPoolConfigurationInfo": {
                    "$ref": "#/types/aws-native:rds:DBProxyTargetGroupConnectionPoolConfigurationInfoFormat"
                },
                "dBClusterIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dBInstanceIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dBProxyName": {
                    "type": "string",
                    "description": "The identifier for the proxy."
                },
                "targetGroupArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) representing the target group."
                },
                "targetGroupName": {
                    "$ref": "#/types/aws-native:rds:DBProxyTargetGroupTargetGroupName",
                    "description": "The identifier for the DBProxyTargetGroup"
                }
            },
            "required": [
                "dBProxyName",
                "targetGroupName"
            ],
            "createOnly": [
                "dBProxyName",
                "targetGroupName"
            ]
        },
        "aws-native:rds:GlobalCluster": {
            "cf": "AWS::RDS::GlobalCluster",
            "inputs": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled."
                },
                "engine": {
                    "$ref": "#/types/aws-native:rds:GlobalClusterEngine",
                    "description": "The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora).\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster."
                },
                "engineVersion": {
                    "type": "string",
                    "description": "The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster."
                },
                "globalClusterIdentifier": {
                    "type": "string",
                    "description": "The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string."
                },
                "sourceDBClusterIdentifier": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) to use as the primary cluster of the global database. This parameter is optional. This parameter is stored as a lowercase string."
                },
                "storageEncrypted": {
                    "type": "boolean",
                    "description": " The storage encryption setting for the new global database cluster.\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster."
                }
            },
            "outputs": {
                "deletionProtection": {
                    "type": "boolean",
                    "description": "The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled."
                },
                "engine": {
                    "$ref": "#/types/aws-native:rds:GlobalClusterEngine",
                    "description": "The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora).\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster."
                },
                "engineVersion": {
                    "type": "string",
                    "description": "The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster."
                },
                "globalClusterIdentifier": {
                    "type": "string",
                    "description": "The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string."
                },
                "sourceDBClusterIdentifier": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) to use as the primary cluster of the global database. This parameter is optional. This parameter is stored as a lowercase string."
                },
                "storageEncrypted": {
                    "type": "boolean",
                    "description": " The storage encryption setting for the new global database cluster.\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster."
                }
            },
            "createOnly": [
                "engine",
                "engineVersion",
                "globalClusterIdentifier",
                "sourceDBClusterIdentifier",
                "storageEncrypted"
            ]
        },
        "aws-native:redshift:Cluster": {
            "cf": "AWS::Redshift::Cluster",
            "inputs": {
                "allowVersionUpgrade": {
                    "type": "boolean",
                    "description": "Major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default value is True"
                },
                "aquaConfigurationStatus": {
                    "type": "string",
                    "description": "The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values include the following.\n\nenabled - Use AQUA if it is available for the current Region and Amazon Redshift node type.\ndisabled - Don't use AQUA.\nauto - Amazon Redshift determines whether to use AQUA.\n"
                },
                "automatedSnapshotRetentionPeriod": {
                    "type": "integer",
                    "description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Default value is 1"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint"
                },
                "availabilityZoneRelocation": {
                    "type": "boolean",
                    "description": "The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete."
                },
                "availabilityZoneRelocationStatus": {
                    "type": "string",
                    "description": "The availability zone relocation status of the cluster"
                },
                "classic": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to false , the resize type is elastic."
                },
                "clusterIdentifier": {
                    "type": "string",
                    "description": "A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. All alphabetical characters must be lower case, no hypens at the end, no two consecutive hyphens. Cluster name should be unique for all clusters within an AWS account"
                },
                "clusterParameterGroupName": {
                    "type": "string",
                    "description": "The name of the parameter group to be associated with this cluster."
                },
                "clusterSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of security groups to be associated with this cluster."
                },
                "clusterSubnetGroupName": {
                    "type": "string",
                    "description": "The name of a cluster subnet group to be associated with this cluster."
                },
                "clusterType": {
                    "type": "string",
                    "description": "The type of the cluster. When cluster type is specified as single-node, the NumberOfNodes parameter is not required and if multi-node, the NumberOfNodes parameter is required"
                },
                "clusterVersion": {
                    "type": "string",
                    "description": "The version of the Amazon Redshift engine software that you want to deploy on the cluster.The version selected runs on all the nodes in the cluster."
                },
                "dBName": {
                    "type": "string",
                    "description": "The name of the first database to be created when the cluster is created. To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database."
                },
                "deferMaintenance": {
                    "type": "boolean",
                    "description": "A boolean indicating whether to enable the deferred maintenance window."
                },
                "deferMaintenanceDuration": {
                    "type": "integer",
                    "description": "An integer indicating the duration of the maintenance window in days. If you specify a duration, you can't specify an end time. The duration must be 45 days or less."
                },
                "deferMaintenanceEndTime": {
                    "type": "string",
                    "description": "A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can't specify a duration."
                },
                "deferMaintenanceStartTime": {
                    "type": "string",
                    "description": "A timestamp indicating the start time for the deferred maintenance window."
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The destination AWS Region that you want to copy snapshots to. Constraints: Must be the name of a valid AWS Region. For more information, see Regions and Endpoints in the Amazon Web Services [https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region] General Reference"
                },
                "elasticIp": {
                    "type": "string",
                    "description": "The Elastic IP (EIP) address for the cluster."
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "If true, the data in the cluster is encrypted at rest."
                },
                "endpoint": {
                    "$ref": "#/types/aws-native:redshift:ClusterEndpoint"
                },
                "enhancedVpcRouting": {
                    "type": "boolean",
                    "description": "An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.\n\nIf this option is true , enhanced VPC routing is enabled.\n\nDefault: false"
                },
                "hsmClientCertificateIdentifier": {
                    "type": "string",
                    "description": "Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM"
                },
                "hsmConfigurationIdentifier": {
                    "type": "string",
                    "description": "Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM."
                },
                "iamRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster."
                },
                "loggingProperties": {
                    "$ref": "#/types/aws-native:redshift:ClusterLoggingProperties"
                },
                "maintenanceTrackName": {
                    "type": "string",
                    "description": "The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the PendingModifiedValues for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied."
                },
                "manualSnapshotRetentionPeriod": {
                    "type": "integer",
                    "description": "The number of days to retain newly copied snapshots in the destination AWS Region after they are copied from the source AWS Region. If the value is -1, the manual snapshot is retained indefinitely.\n\nThe value must be either -1 or an integer between 1 and 3,653."
                },
                "masterUserPassword": {
                    "type": "string",
                    "description": "The password associated with the master user account for the cluster that is being created. Password must be between 8 and 64 characters in length, should have at least one uppercase letter.Must contain at least one lowercase letter.Must contain one number.Can be any printable ASCII character."
                },
                "masterUsername": {
                    "type": "string",
                    "description": "The user name associated with the master user account for the cluster that is being created. The user name can't be PUBLIC and first character must be a letter."
                },
                "nodeType": {
                    "type": "string",
                    "description": "The node type to be provisioned for the cluster.Valid Values: ds2.xlarge | ds2.8xlarge | dc1.large | dc1.8xlarge | dc2.large | dc2.8xlarge | ra3.4xlarge | ra3.16xlarge"
                },
                "numberOfNodes": {
                    "type": "integer",
                    "description": "The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node."
                },
                "ownerAccount": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "description": "The port number on which the cluster accepts incoming connections. The cluster is accessible only via the JDBC and ODBC connection strings"
                },
                "preferredMaintenanceWindow": {
                    "type": "string",
                    "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur."
                },
                "publiclyAccessible": {
                    "type": "boolean",
                    "description": "If true, the cluster can be accessed from a public network."
                },
                "resourceAction": {
                    "type": "string",
                    "description": "The Redshift operation to be performed. Resource Action supports pause-cluster, resume-cluster APIs"
                },
                "revisionTarget": {
                    "type": "string",
                    "description": "The identifier of the database revision. You can retrieve this value from the response to the DescribeClusterDbRevisions request."
                },
                "rotateEncryptionKey": {
                    "type": "boolean",
                    "description": "A boolean indicating if we want to rotate Encryption Keys."
                },
                "snapshotClusterIdentifier": {
                    "type": "string",
                    "description": "The name of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name."
                },
                "snapshotCopyGrantName": {
                    "type": "string",
                    "description": "The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region."
                },
                "snapshotCopyManual": {
                    "type": "boolean",
                    "description": "Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots."
                },
                "snapshotCopyRetentionPeriod": {
                    "type": "integer",
                    "description": "The number of days to retain automated snapshots in the destination region after they are copied from the source region. \n\n Default is 7. \n\n Constraints: Must be at least 1 and no more than 35."
                },
                "snapshotIdentifier": {
                    "type": "string",
                    "description": "The name of the snapshot from which to create the new cluster. This parameter isn't case sensitive."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:redshift:ClusterTag"
                    },
                    "description": "The list of tags for the cluster parameter group."
                },
                "vpcSecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster."
                }
            },
            "outputs": {
                "allowVersionUpgrade": {
                    "type": "boolean",
                    "description": "Major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default value is True"
                },
                "aquaConfigurationStatus": {
                    "type": "string",
                    "description": "The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values include the following.\n\nenabled - Use AQUA if it is available for the current Region and Amazon Redshift node type.\ndisabled - Don't use AQUA.\nauto - Amazon Redshift determines whether to use AQUA.\n"
                },
                "automatedSnapshotRetentionPeriod": {
                    "type": "integer",
                    "description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Default value is 1"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint"
                },
                "availabilityZoneRelocation": {
                    "type": "boolean",
                    "description": "The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete."
                },
                "availabilityZoneRelocationStatus": {
                    "type": "string",
                    "description": "The availability zone relocation status of the cluster"
                },
                "classic": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to false , the resize type is elastic."
                },
                "clusterIdentifier": {
                    "type": "string",
                    "description": "A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. All alphabetical characters must be lower case, no hypens at the end, no two consecutive hyphens. Cluster name should be unique for all clusters within an AWS account"
                },
                "clusterParameterGroupName": {
                    "type": "string",
                    "description": "The name of the parameter group to be associated with this cluster."
                },
                "clusterSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of security groups to be associated with this cluster."
                },
                "clusterSubnetGroupName": {
                    "type": "string",
                    "description": "The name of a cluster subnet group to be associated with this cluster."
                },
                "clusterType": {
                    "type": "string",
                    "description": "The type of the cluster. When cluster type is specified as single-node, the NumberOfNodes parameter is not required and if multi-node, the NumberOfNodes parameter is required"
                },
                "clusterVersion": {
                    "type": "string",
                    "description": "The version of the Amazon Redshift engine software that you want to deploy on the cluster.The version selected runs on all the nodes in the cluster."
                },
                "dBName": {
                    "type": "string",
                    "description": "The name of the first database to be created when the cluster is created. To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database."
                },
                "deferMaintenance": {
                    "type": "boolean",
                    "description": "A boolean indicating whether to enable the deferred maintenance window."
                },
                "deferMaintenanceDuration": {
                    "type": "integer",
                    "description": "An integer indicating the duration of the maintenance window in days. If you specify a duration, you can't specify an end time. The duration must be 45 days or less."
                },
                "deferMaintenanceEndTime": {
                    "type": "string",
                    "description": "A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can't specify a duration."
                },
                "deferMaintenanceIdentifier": {
                    "type": "string",
                    "description": "A unique identifier for the deferred maintenance window."
                },
                "deferMaintenanceStartTime": {
                    "type": "string",
                    "description": "A timestamp indicating the start time for the deferred maintenance window."
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The destination AWS Region that you want to copy snapshots to. Constraints: Must be the name of a valid AWS Region. For more information, see Regions and Endpoints in the Amazon Web Services [https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region] General Reference"
                },
                "elasticIp": {
                    "type": "string",
                    "description": "The Elastic IP (EIP) address for the cluster."
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "If true, the data in the cluster is encrypted at rest."
                },
                "endpoint": {
                    "$ref": "#/types/aws-native:redshift:ClusterEndpoint"
                },
                "enhancedVpcRouting": {
                    "type": "boolean",
                    "description": "An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.\n\nIf this option is true , enhanced VPC routing is enabled.\n\nDefault: false"
                },
                "hsmClientCertificateIdentifier": {
                    "type": "string",
                    "description": "Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM"
                },
                "hsmConfigurationIdentifier": {
                    "type": "string",
                    "description": "Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM."
                },
                "iamRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster."
                },
                "loggingProperties": {
                    "$ref": "#/types/aws-native:redshift:ClusterLoggingProperties"
                },
                "maintenanceTrackName": {
                    "type": "string",
                    "description": "The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the PendingModifiedValues for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied."
                },
                "manualSnapshotRetentionPeriod": {
                    "type": "integer",
                    "description": "The number of days to retain newly copied snapshots in the destination AWS Region after they are copied from the source AWS Region. If the value is -1, the manual snapshot is retained indefinitely.\n\nThe value must be either -1 or an integer between 1 and 3,653."
                },
                "masterUserPassword": {
                    "type": "string",
                    "description": "The password associated with the master user account for the cluster that is being created. Password must be between 8 and 64 characters in length, should have at least one uppercase letter.Must contain at least one lowercase letter.Must contain one number.Can be any printable ASCII character."
                },
                "masterUsername": {
                    "type": "string",
                    "description": "The user name associated with the master user account for the cluster that is being created. The user name can't be PUBLIC and first character must be a letter."
                },
                "nodeType": {
                    "type": "string",
                    "description": "The node type to be provisioned for the cluster.Valid Values: ds2.xlarge | ds2.8xlarge | dc1.large | dc1.8xlarge | dc2.large | dc2.8xlarge | ra3.4xlarge | ra3.16xlarge"
                },
                "numberOfNodes": {
                    "type": "integer",
                    "description": "The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node."
                },
                "ownerAccount": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "description": "The port number on which the cluster accepts incoming connections. The cluster is accessible only via the JDBC and ODBC connection strings"
                },
                "preferredMaintenanceWindow": {
                    "type": "string",
                    "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur."
                },
                "publiclyAccessible": {
                    "type": "boolean",
                    "description": "If true, the cluster can be accessed from a public network."
                },
                "resourceAction": {
                    "type": "string",
                    "description": "The Redshift operation to be performed. Resource Action supports pause-cluster, resume-cluster APIs"
                },
                "revisionTarget": {
                    "type": "string",
                    "description": "The identifier of the database revision. You can retrieve this value from the response to the DescribeClusterDbRevisions request."
                },
                "rotateEncryptionKey": {
                    "type": "boolean",
                    "description": "A boolean indicating if we want to rotate Encryption Keys."
                },
                "snapshotClusterIdentifier": {
                    "type": "string",
                    "description": "The name of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name."
                },
                "snapshotCopyGrantName": {
                    "type": "string",
                    "description": "The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region."
                },
                "snapshotCopyManual": {
                    "type": "boolean",
                    "description": "Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots."
                },
                "snapshotCopyRetentionPeriod": {
                    "type": "integer",
                    "description": "The number of days to retain automated snapshots in the destination region after they are copied from the source region. \n\n Default is 7. \n\n Constraints: Must be at least 1 and no more than 35."
                },
                "snapshotIdentifier": {
                    "type": "string",
                    "description": "The name of the snapshot from which to create the new cluster. This parameter isn't case sensitive."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:redshift:ClusterTag"
                    },
                    "description": "The list of tags for the cluster parameter group."
                },
                "vpcSecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster."
                }
            },
            "required": [
                "clusterType",
                "dBName",
                "masterUserPassword",
                "masterUsername",
                "nodeType"
            ],
            "createOnly": [
                "clusterIdentifier",
                "clusterSubnetGroupName",
                "dBName",
                "masterUsername",
                "ownerAccount",
                "snapshotClusterIdentifier",
                "snapshotIdentifier"
            ]
        },
        "aws-native:resourcegroups:Group": {
            "cf": "AWS::ResourceGroups::Group",
            "inputs": {
                "configuration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:resourcegroups:GroupConfigurationItem"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the resource group"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource group"
                },
                "resourceQuery": {
                    "$ref": "#/types/aws-native:resourcegroups:GroupResourceQuery"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:resourcegroups:GroupTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Resource Group ARN."
                },
                "configuration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:resourcegroups:GroupConfigurationItem"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the resource group"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource group"
                },
                "resourceQuery": {
                    "$ref": "#/types/aws-native:resourcegroups:GroupResourceQuery"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:resourcegroups:GroupTag"
                    }
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:robomaker:Fleet": {
            "cf": "AWS::RoboMaker::Fleet",
            "inputs": {
                "name": {
                    "type": "string",
                    "description": "The name of the fleet."
                },
                "tags": {
                    "$ref": "#/types/aws-native:robomaker:FleetTags"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the fleet."
                },
                "tags": {
                    "$ref": "#/types/aws-native:robomaker:FleetTags"
                }
            },
            "createOnly": [
                "name"
            ]
        },
        "aws-native:robomaker:Robot": {
            "cf": "AWS::RoboMaker::Robot",
            "inputs": {
                "architecture": {
                    "$ref": "#/types/aws-native:robomaker:RobotArchitecture",
                    "description": "The target architecture of the robot."
                },
                "fleet": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the fleet."
                },
                "greengrassGroupId": {
                    "type": "string",
                    "description": "The Greengrass group id."
                },
                "name": {
                    "type": "string",
                    "description": "The name for the robot."
                },
                "tags": {
                    "$ref": "#/types/aws-native:robomaker:RobotTags"
                }
            },
            "outputs": {
                "architecture": {
                    "$ref": "#/types/aws-native:robomaker:RobotArchitecture",
                    "description": "The target architecture of the robot."
                },
                "arn": {
                    "type": "string"
                },
                "fleet": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the fleet."
                },
                "greengrassGroupId": {
                    "type": "string",
                    "description": "The Greengrass group id."
                },
                "name": {
                    "type": "string",
                    "description": "The name for the robot."
                },
                "tags": {
                    "$ref": "#/types/aws-native:robomaker:RobotTags"
                }
            },
            "required": [
                "architecture",
                "greengrassGroupId"
            ],
            "createOnly": [
                "architecture",
                "fleet",
                "greengrassGroupId",
                "name"
            ]
        },
        "aws-native:robomaker:RobotApplicationVersion": {
            "cf": "AWS::RoboMaker::RobotApplicationVersion",
            "inputs": {
                "application": {
                    "type": "string"
                },
                "currentRevisionId": {
                    "type": "string",
                    "description": "The revision ID of robot application."
                }
            },
            "outputs": {
                "application": {
                    "type": "string"
                },
                "applicationVersion": {
                    "type": "string"
                },
                "arn": {
                    "type": "string"
                },
                "currentRevisionId": {
                    "type": "string",
                    "description": "The revision ID of robot application."
                }
            },
            "required": [
                "application"
            ],
            "createOnly": [
                "application",
                "currentRevisionId"
            ]
        },
        "aws-native:robomaker:SimulationApplication": {
            "cf": "AWS::RoboMaker::SimulationApplication",
            "inputs": {
                "currentRevisionId": {
                    "type": "string",
                    "description": "The current revision id."
                },
                "environment": {
                    "type": "string",
                    "description": "The URI of the Docker image for the robot application."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the simulation application."
                },
                "renderingEngine": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationRenderingEngine",
                    "description": "The rendering engine for the simulation application."
                },
                "robotSoftwareSuite": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationRobotSoftwareSuite",
                    "description": "The robot software suite (ROS distribution) used by the simulation application."
                },
                "simulationSoftwareSuite": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationSimulationSoftwareSuite",
                    "description": "The simulation software suite used by the simulation application."
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:robomaker:SimulationApplicationSourceConfig"
                    },
                    "description": "The sources of the simulation application."
                },
                "tags": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationTags"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "currentRevisionId": {
                    "type": "string",
                    "description": "The current revision id."
                },
                "environment": {
                    "type": "string",
                    "description": "The URI of the Docker image for the robot application."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the simulation application."
                },
                "renderingEngine": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationRenderingEngine",
                    "description": "The rendering engine for the simulation application."
                },
                "robotSoftwareSuite": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationRobotSoftwareSuite",
                    "description": "The robot software suite (ROS distribution) used by the simulation application."
                },
                "simulationSoftwareSuite": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationSimulationSoftwareSuite",
                    "description": "The simulation software suite used by the simulation application."
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:robomaker:SimulationApplicationSourceConfig"
                    },
                    "description": "The sources of the simulation application."
                },
                "tags": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationTags"
                }
            },
            "required": [
                "robotSoftwareSuite",
                "simulationSoftwareSuite"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:robomaker:SimulationApplicationVersion": {
            "cf": "AWS::RoboMaker::SimulationApplicationVersion",
            "inputs": {
                "application": {
                    "type": "string"
                },
                "currentRevisionId": {
                    "type": "string",
                    "description": "The revision ID of robot application."
                }
            },
            "outputs": {
                "application": {
                    "type": "string"
                },
                "applicationVersion": {
                    "type": "string"
                },
                "arn": {
                    "type": "string"
                },
                "currentRevisionId": {
                    "type": "string",
                    "description": "The revision ID of robot application."
                }
            },
            "required": [
                "application"
            ],
            "createOnly": [
                "application",
                "currentRevisionId"
            ]
        },
        "aws-native:route53:DNSSEC": {
            "cf": "AWS::Route53::DNSSEC",
            "inputs": {
                "hostedZoneId": {
                    "type": "string",
                    "description": "The unique string (ID) used to identify a hosted zone."
                }
            },
            "outputs": {
                "hostedZoneId": {
                    "type": "string",
                    "description": "The unique string (ID) used to identify a hosted zone."
                }
            },
            "required": [
                "hostedZoneId"
            ],
            "createOnly": [
                "hostedZoneId"
            ]
        },
        "aws-native:route53:HealthCheck": {
            "cf": "AWS::Route53::HealthCheck",
            "inputs": {
                "healthCheckConfig": {
                    "$ref": "pulumi.json#/Any",
                    "description": "A complex type that contains information about the health check."
                },
                "healthCheckTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53:HealthCheckHealthCheckTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "healthCheckConfig": {
                    "$ref": "pulumi.json#/Any",
                    "description": "A complex type that contains information about the health check."
                },
                "healthCheckId": {
                    "type": "string"
                },
                "healthCheckTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53:HealthCheckHealthCheckTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "healthCheckConfig"
            ],
            "createOnly": [
                "healthCheckConfig/MeasureLatency",
                "healthCheckConfig/RequestInterval",
                "healthCheckConfig/Type"
            ]
        },
        "aws-native:route53:HostedZone": {
            "cf": "AWS::Route53::HostedZone",
            "inputs": {
                "hostedZoneConfig": {
                    "$ref": "#/types/aws-native:route53:HostedZoneHostedZoneConfig"
                },
                "hostedZoneTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53:HostedZoneHostedZoneTag"
                    },
                    "description": "Adds, edits, or deletes tags for a health check or a hosted zone.\n\nFor information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain. Specify a fully qualified domain name, for example, www.example.com. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\n\nIf you're creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Route 53, change the name servers for your domain to the set of NameServers that are returned by the Fn::GetAtt intrinsic function."
                },
                "queryLoggingConfig": {
                    "$ref": "#/types/aws-native:route53:HostedZoneQueryLoggingConfig"
                },
                "vPCs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53:HostedZoneVPC"
                    },
                    "description": "A complex type that contains information about the VPCs that are associated with the specified hosted zone."
                }
            },
            "outputs": {
                "hostedZoneConfig": {
                    "$ref": "#/types/aws-native:route53:HostedZoneHostedZoneConfig"
                },
                "hostedZoneTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53:HostedZoneHostedZoneTag"
                    },
                    "description": "Adds, edits, or deletes tags for a health check or a hosted zone.\n\nFor information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain. Specify a fully qualified domain name, for example, www.example.com. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\n\nIf you're creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Route 53, change the name servers for your domain to the set of NameServers that are returned by the Fn::GetAtt intrinsic function."
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "queryLoggingConfig": {
                    "$ref": "#/types/aws-native:route53:HostedZoneQueryLoggingConfig"
                },
                "vPCs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53:HostedZoneVPC"
                    },
                    "description": "A complex type that contains information about the VPCs that are associated with the specified hosted zone."
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:route53:KeySigningKey": {
            "cf": "AWS::Route53::KeySigningKey",
            "inputs": {
                "hostedZoneId": {
                    "type": "string",
                    "description": "The unique string (ID) used to identify a hosted zone."
                },
                "keyManagementServiceArn": {
                    "type": "string",
                    "description": "The Amazon resource name (ARN) for a customer managed key (CMK) in AWS Key Management Service (KMS). The KeyManagementServiceArn must be unique for each key signing key (KSK) in a single hosted zone."
                },
                "name": {
                    "type": "string",
                    "description": "An alphanumeric string used to identify a key signing key (KSK). Name must be unique for each key signing key in the same hosted zone."
                },
                "status": {
                    "$ref": "#/types/aws-native:route53:KeySigningKeyStatus",
                    "description": "A string specifying the initial status of the key signing key (KSK). You can set the value to ACTIVE or INACTIVE."
                }
            },
            "outputs": {
                "hostedZoneId": {
                    "type": "string",
                    "description": "The unique string (ID) used to identify a hosted zone."
                },
                "keyManagementServiceArn": {
                    "type": "string",
                    "description": "The Amazon resource name (ARN) for a customer managed key (CMK) in AWS Key Management Service (KMS). The KeyManagementServiceArn must be unique for each key signing key (KSK) in a single hosted zone."
                },
                "name": {
                    "type": "string",
                    "description": "An alphanumeric string used to identify a key signing key (KSK). Name must be unique for each key signing key in the same hosted zone."
                },
                "status": {
                    "$ref": "#/types/aws-native:route53:KeySigningKeyStatus",
                    "description": "A string specifying the initial status of the key signing key (KSK). You can set the value to ACTIVE or INACTIVE."
                }
            },
            "required": [
                "hostedZoneId",
                "keyManagementServiceArn",
                "name",
                "status"
            ],
            "createOnly": [
                "hostedZoneId",
                "keyManagementServiceArn",
                "name"
            ]
        },
        "aws-native:route53recoverycontrol:Cluster": {
            "cf": "AWS::Route53RecoveryControl::Cluster",
            "inputs": {
                "name": {
                    "type": "string",
                    "description": "Name of a Cluster. You can use any non-white space character in the name"
                }
            },
            "outputs": {
                "clusterArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the cluster."
                },
                "clusterEndpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoverycontrol:ClusterClusterEndpoint"
                    },
                    "description": "Endpoints for the cluster."
                },
                "name": {
                    "type": "string",
                    "description": "Name of a Cluster. You can use any non-white space character in the name"
                },
                "status": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:ClusterStatus",
                    "description": "Deployment status of a resource. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
                }
            },
            "createOnly": [
                "name"
            ]
        },
        "aws-native:route53recoverycontrol:ControlPanel": {
            "cf": "AWS::Route53RecoveryControl::ControlPanel",
            "inputs": {
                "clusterArn": {
                    "type": "string",
                    "description": "Cluster to associate with the Control Panel"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the control panel. You can use any non-white space character in the name."
                }
            },
            "outputs": {
                "clusterArn": {
                    "type": "string",
                    "description": "Cluster to associate with the Control Panel"
                },
                "controlPanelArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the cluster."
                },
                "defaultControlPanel": {
                    "type": "boolean",
                    "description": "A flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the control panel. You can use any non-white space character in the name."
                },
                "routingControlCount": {
                    "type": "integer",
                    "description": "Count of associated routing controls"
                },
                "status": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:ControlPanelStatus",
                    "description": "The deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "clusterArn"
            ]
        },
        "aws-native:route53recoverycontrol:RoutingControl": {
            "cf": "AWS::Route53RecoveryControl::RoutingControl",
            "inputs": {
                "clusterArn": {
                    "type": "string",
                    "description": "Arn associated with Control Panel"
                },
                "controlPanelArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the control panel."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the routing control. You can use any non-white space character in the name."
                }
            },
            "outputs": {
                "clusterArn": {
                    "type": "string",
                    "description": "Arn associated with Control Panel"
                },
                "controlPanelArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the control panel."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the routing control. You can use any non-white space character in the name."
                },
                "routingControlArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the routing control."
                },
                "status": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:RoutingControlStatus",
                    "description": "The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "clusterArn",
                "controlPanelArn"
            ]
        },
        "aws-native:route53recoverycontrol:SafetyRule": {
            "cf": "AWS::Route53RecoveryControl::SafetyRule",
            "inputs": {
                "assertionRule": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:SafetyRuleAssertionRule"
                },
                "controlPanelArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the control panel."
                },
                "gatingRule": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:SafetyRuleGatingRule"
                },
                "name": {
                    "type": "string"
                },
                "ruleConfig": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:SafetyRuleRuleConfig"
                }
            },
            "outputs": {
                "assertionRule": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:SafetyRuleAssertionRule"
                },
                "controlPanelArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the control panel."
                },
                "gatingRule": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:SafetyRuleGatingRule"
                },
                "name": {
                    "type": "string"
                },
                "ruleConfig": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:SafetyRuleRuleConfig"
                },
                "safetyRuleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the safety rule."
                },
                "status": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:SafetyRuleStatus",
                    "description": "The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
                }
            },
            "createOnly": [
                "controlPanelArn",
                "ruleConfig"
            ]
        },
        "aws-native:route53recoveryreadiness:Cell": {
            "cf": "AWS::Route53RecoveryReadiness::Cell",
            "inputs": {
                "cellName": {
                    "type": "string",
                    "description": "The name of the cell to create."
                },
                "cells": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Regions."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:CellTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "outputs": {
                "cellArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the cell."
                },
                "cellName": {
                    "type": "string",
                    "description": "The name of the cell to create."
                },
                "cells": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Regions."
                },
                "parentReadinessScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:CellTag"
                    },
                    "description": "A collection of tags associated with a resource"
                }
            },
            "required": [
                "cellName"
            ],
            "createOnly": [
                "cellName"
            ]
        },
        "aws-native:route53recoveryreadiness:ReadinessCheck": {
            "cf": "AWS::Route53RecoveryReadiness::ReadinessCheck",
            "inputs": {
                "readinessCheckName": {
                    "type": "string",
                    "description": "Name of the ReadinessCheck to create."
                },
                "resourceSetName": {
                    "type": "string",
                    "description": "The name of the resource set to check."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:ReadinessCheckTag"
                    },
                    "description": "A collection of tags associated with a resource."
                }
            },
            "outputs": {
                "readinessCheckArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the readiness check."
                },
                "readinessCheckName": {
                    "type": "string",
                    "description": "Name of the ReadinessCheck to create."
                },
                "resourceSetName": {
                    "type": "string",
                    "description": "The name of the resource set to check."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:ReadinessCheckTag"
                    },
                    "description": "A collection of tags associated with a resource."
                }
            },
            "required": [
                "readinessCheckName"
            ],
            "createOnly": [
                "readinessCheckName"
            ]
        },
        "aws-native:route53recoveryreadiness:RecoveryGroup": {
            "cf": "AWS::Route53RecoveryReadiness::RecoveryGroup",
            "inputs": {
                "cells": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the cell Amazon Resource Names (ARNs) in the recovery group."
                },
                "recoveryGroupName": {
                    "type": "string",
                    "description": "The name of the recovery group to create."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:RecoveryGroupTag"
                    },
                    "description": "A collection of tags associated with a resource."
                }
            },
            "outputs": {
                "cells": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the cell Amazon Resource Names (ARNs) in the recovery group."
                },
                "recoveryGroupArn": {
                    "type": "string",
                    "description": "A collection of tags associated with a resource."
                },
                "recoveryGroupName": {
                    "type": "string",
                    "description": "The name of the recovery group to create."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:RecoveryGroupTag"
                    },
                    "description": "A collection of tags associated with a resource."
                }
            },
            "required": [
                "recoveryGroupName"
            ],
            "createOnly": [
                "recoveryGroupName"
            ]
        },
        "aws-native:route53recoveryreadiness:ResourceSet": {
            "cf": "AWS::Route53RecoveryReadiness::ResourceSet",
            "inputs": {
                "resourceSetName": {
                    "type": "string",
                    "description": "The name of the resource set to create."
                },
                "resourceSetType": {
                    "type": "string",
                    "description": "The resource type of the resources in the resource set. Enter one of the following values for resource type: \n\nAWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:ResourceSetResource"
                    },
                    "description": "A list of resource objects in the resource set."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:ResourceSetTag"
                    },
                    "description": "A tag to associate with the parameters for a resource set."
                }
            },
            "outputs": {
                "resourceSetArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the resource set."
                },
                "resourceSetName": {
                    "type": "string",
                    "description": "The name of the resource set to create."
                },
                "resourceSetType": {
                    "type": "string",
                    "description": "The resource type of the resources in the resource set. Enter one of the following values for resource type: \n\nAWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:ResourceSetResource"
                    },
                    "description": "A list of resource objects in the resource set."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53recoveryreadiness:ResourceSetTag"
                    },
                    "description": "A tag to associate with the parameters for a resource set."
                }
            },
            "required": [
                "resourceSetName",
                "resourceSetType",
                "resources"
            ],
            "createOnly": [
                "resourceSetName",
                "resourceSetType"
            ]
        },
        "aws-native:route53resolver:FirewallDomainList": {
            "cf": "AWS::Route53Resolver::FirewallDomainList",
            "inputs": {
                "domainFileUrl": {
                    "type": "string",
                    "description": "S3 URL to import domains from."
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "FirewallDomainListName"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53resolver:FirewallDomainListTag"
                    },
                    "description": "Tags"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Arn"
                },
                "creationTime": {
                    "type": "string",
                    "description": "Rfc3339TimeString"
                },
                "creatorRequestId": {
                    "type": "string",
                    "description": "The id of the creator request."
                },
                "domainCount": {
                    "type": "integer",
                    "description": "Count"
                },
                "domainFileUrl": {
                    "type": "string",
                    "description": "S3 URL to import domains from."
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "managedOwnerName": {
                    "type": "string",
                    "description": "ServicePrincipal"
                },
                "modificationTime": {
                    "type": "string",
                    "description": "Rfc3339TimeString"
                },
                "name": {
                    "type": "string",
                    "description": "FirewallDomainListName"
                },
                "status": {
                    "$ref": "#/types/aws-native:route53resolver:FirewallDomainListStatus",
                    "description": "ResolverFirewallDomainList, possible values are COMPLETE, DELETING, UPDATING, COMPLETE_IMPORT_FAILED, IMPORTING, and INACTIVE_OWNER_ACCOUNT_CLOSED."
                },
                "statusMessage": {
                    "type": "string",
                    "description": "FirewallDomainListAssociationStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53resolver:FirewallDomainListTag"
                    },
                    "description": "Tags"
                }
            },
            "createOnly": [
                "name"
            ]
        },
        "aws-native:route53resolver:FirewallRuleGroup": {
            "cf": "AWS::Route53Resolver::FirewallRuleGroup",
            "inputs": {
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupFirewallRule"
                    },
                    "description": "FirewallRules"
                },
                "name": {
                    "type": "string",
                    "description": "FirewallRuleGroupName"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupTag"
                    },
                    "description": "Tags"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Arn"
                },
                "creationTime": {
                    "type": "string",
                    "description": "Rfc3339TimeString"
                },
                "creatorRequestId": {
                    "type": "string",
                    "description": "The id of the creator request."
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupFirewallRule"
                    },
                    "description": "FirewallRules"
                },
                "modificationTime": {
                    "type": "string",
                    "description": "Rfc3339TimeString"
                },
                "name": {
                    "type": "string",
                    "description": "FirewallRuleGroupName"
                },
                "ownerId": {
                    "type": "string",
                    "description": "AccountId"
                },
                "ruleCount": {
                    "type": "integer",
                    "description": "Count"
                },
                "shareStatus": {
                    "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupShareStatus",
                    "description": "ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME."
                },
                "status": {
                    "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupStatus",
                    "description": "ResolverFirewallRuleGroupAssociation, possible values are COMPLETE, DELETING, UPDATING, and INACTIVE_OWNER_ACCOUNT_CLOSED."
                },
                "statusMessage": {
                    "type": "string",
                    "description": "FirewallRuleGroupStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupTag"
                    },
                    "description": "Tags"
                }
            },
            "createOnly": [
                "name"
            ]
        },
        "aws-native:route53resolver:FirewallRuleGroupAssociation": {
            "cf": "AWS::Route53Resolver::FirewallRuleGroupAssociation",
            "inputs": {
                "firewallRuleGroupId": {
                    "type": "string",
                    "description": "FirewallRuleGroupId"
                },
                "mutationProtection": {
                    "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupAssociationMutationProtection",
                    "description": "MutationProtectionStatus"
                },
                "name": {
                    "type": "string",
                    "description": "FirewallRuleGroupAssociationName"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupAssociationTag"
                    },
                    "description": "Tags"
                },
                "vpcId": {
                    "type": "string",
                    "description": "VpcId"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Arn"
                },
                "creationTime": {
                    "type": "string",
                    "description": "Rfc3339TimeString"
                },
                "creatorRequestId": {
                    "type": "string",
                    "description": "The id of the creator request."
                },
                "firewallRuleGroupId": {
                    "type": "string",
                    "description": "FirewallRuleGroupId"
                },
                "managedOwnerName": {
                    "type": "string",
                    "description": "ServicePrincipal"
                },
                "modificationTime": {
                    "type": "string",
                    "description": "Rfc3339TimeString"
                },
                "mutationProtection": {
                    "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupAssociationMutationProtection",
                    "description": "MutationProtectionStatus"
                },
                "name": {
                    "type": "string",
                    "description": "FirewallRuleGroupAssociationName"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority"
                },
                "status": {
                    "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupAssociationStatus",
                    "description": "ResolverFirewallRuleGroupAssociation, possible values are COMPLETE, DELETING, UPDATING, and INACTIVE_OWNER_ACCOUNT_CLOSED."
                },
                "statusMessage": {
                    "type": "string",
                    "description": "FirewallDomainListAssociationStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupAssociationTag"
                    },
                    "description": "Tags"
                },
                "vpcId": {
                    "type": "string",
                    "description": "VpcId"
                }
            },
            "required": [
                "firewallRuleGroupId",
                "priority",
                "vpcId"
            ],
            "createOnly": [
                "firewallRuleGroupId",
                "vpcId"
            ]
        },
        "aws-native:route53resolver:ResolverDNSSECConfig": {
            "cf": "AWS::Route53Resolver::ResolverDNSSECConfig",
            "inputs": {
                "resourceId": {
                    "type": "string",
                    "description": "ResourceId"
                }
            },
            "outputs": {
                "ownerId": {
                    "type": "string",
                    "description": "AccountId"
                },
                "resourceId": {
                    "type": "string",
                    "description": "ResourceId"
                },
                "validationStatus": {
                    "$ref": "#/types/aws-native:route53resolver:ResolverDNSSECConfigValidationStatus",
                    "description": "ResolverDNSSECValidationStatus, possible values are ENABLING, ENABLED, DISABLING AND DISABLED."
                }
            },
            "createOnly": [
                "resourceId"
            ]
        },
        "aws-native:route53resolver:ResolverQueryLoggingConfig": {
            "cf": "AWS::Route53Resolver::ResolverQueryLoggingConfig",
            "inputs": {
                "destinationArn": {
                    "type": "string",
                    "description": "destination arn"
                },
                "name": {
                    "type": "string",
                    "description": "ResolverQueryLogConfigName"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "Arn"
                },
                "associationCount": {
                    "type": "integer",
                    "description": "Count"
                },
                "creationTime": {
                    "type": "string",
                    "description": "Rfc3339TimeString"
                },
                "creatorRequestId": {
                    "type": "string",
                    "description": "The id of the creator request."
                },
                "destinationArn": {
                    "type": "string",
                    "description": "destination arn"
                },
                "name": {
                    "type": "string",
                    "description": "ResolverQueryLogConfigName"
                },
                "ownerId": {
                    "type": "string",
                    "description": "AccountId"
                },
                "shareStatus": {
                    "$ref": "#/types/aws-native:route53resolver:ResolverQueryLoggingConfigShareStatus",
                    "description": "ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME."
                },
                "status": {
                    "$ref": "#/types/aws-native:route53resolver:ResolverQueryLoggingConfigStatus",
                    "description": "ResolverQueryLogConfigStatus, possible values are CREATING, CREATED, DELETED AND FAILED."
                }
            },
            "createOnly": [
                "destinationArn",
                "name"
            ]
        },
        "aws-native:route53resolver:ResolverQueryLoggingConfigAssociation": {
            "cf": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
            "inputs": {
                "resolverQueryLogConfigId": {
                    "type": "string",
                    "description": "ResolverQueryLogConfigId"
                },
                "resourceId": {
                    "type": "string",
                    "description": "ResourceId"
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "Rfc3339TimeString"
                },
                "error": {
                    "$ref": "#/types/aws-native:route53resolver:ResolverQueryLoggingConfigAssociationError",
                    "description": "ResolverQueryLogConfigAssociationError"
                },
                "errorMessage": {
                    "type": "string",
                    "description": "ResolverQueryLogConfigAssociationErrorMessage"
                },
                "resolverQueryLogConfigId": {
                    "type": "string",
                    "description": "ResolverQueryLogConfigId"
                },
                "resourceId": {
                    "type": "string",
                    "description": "ResourceId"
                },
                "status": {
                    "$ref": "#/types/aws-native:route53resolver:ResolverQueryLoggingConfigAssociationStatus",
                    "description": "ResolverQueryLogConfigAssociationStatus"
                }
            },
            "createOnly": [
                "resolverQueryLogConfigId",
                "resourceId"
            ]
        },
        "aws-native:s3:AccessPoint": {
            "cf": "AWS::S3::AccessPoint",
            "inputs": {
                "bucket": {
                    "type": "string",
                    "description": "The name of the bucket that you want to associate this Access Point with."
                },
                "policy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The Access Point Policy you want to apply to this access point."
                },
                "policyStatus": {
                    "$ref": "pulumi.json#/Any"
                },
                "publicAccessBlockConfiguration": {
                    "$ref": "#/types/aws-native:s3:AccessPointPublicAccessBlockConfiguration",
                    "description": "The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide."
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:s3:AccessPointVpcConfiguration",
                    "description": "If you include this field, Amazon S3 restricts access to this Access Point to requests from the specified Virtual Private Cloud (VPC)."
                }
            },
            "outputs": {
                "alias": {
                    "type": "string",
                    "description": "The alias of this Access Point. This alias can be used for compatibility purposes with other AWS services and third-party applications."
                },
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the specified accesspoint."
                },
                "bucket": {
                    "type": "string",
                    "description": "The name of the bucket that you want to associate this Access Point with."
                },
                "name": {
                    "type": "string",
                    "description": "The name you want to assign to this Access Point. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the access point name."
                },
                "networkOrigin": {
                    "$ref": "#/types/aws-native:s3:AccessPointNetworkOrigin",
                    "description": "Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise, NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and bucket access policies."
                },
                "policy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The Access Point Policy you want to apply to this access point."
                },
                "policyStatus": {
                    "$ref": "pulumi.json#/Any"
                },
                "publicAccessBlockConfiguration": {
                    "$ref": "#/types/aws-native:s3:AccessPointPublicAccessBlockConfiguration",
                    "description": "The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide."
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:s3:AccessPointVpcConfiguration",
                    "description": "If you include this field, Amazon S3 restricts access to this Access Point to requests from the specified Virtual Private Cloud (VPC)."
                }
            },
            "required": [
                "bucket"
            ],
            "createOnly": [
                "bucket",
                "name",
                "publicAccessBlockConfiguration",
                "vpcConfiguration"
            ]
        },
        "aws-native:s3:MultiRegionAccessPoint": {
            "cf": "AWS::S3::MultiRegionAccessPoint",
            "inputs": {
                "name": {
                    "type": "string",
                    "description": "The name you want to assign to this Multi Region Access Point."
                },
                "publicAccessBlockConfiguration": {
                    "$ref": "#/types/aws-native:s3:MultiRegionAccessPointPublicAccessBlockConfiguration",
                    "description": "The PublicAccessBlock configuration that you want to apply to this Multi Region Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:s3:MultiRegionAccessPointRegion"
                    },
                    "description": "The list of buckets that you want to associate this Multi Region Access Point with."
                }
            },
            "outputs": {
                "alias": {
                    "type": "string",
                    "description": "The alias is a unique identifier to, and is part of the public DNS name for this Multi Region Access Point"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The timestamp of the when the Multi Region Access Point is created"
                },
                "name": {
                    "type": "string",
                    "description": "The name you want to assign to this Multi Region Access Point."
                },
                "publicAccessBlockConfiguration": {
                    "$ref": "#/types/aws-native:s3:MultiRegionAccessPointPublicAccessBlockConfiguration",
                    "description": "The PublicAccessBlock configuration that you want to apply to this Multi Region Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:s3:MultiRegionAccessPointRegion"
                    },
                    "description": "The list of buckets that you want to associate this Multi Region Access Point with."
                }
            },
            "required": [
                "regions"
            ],
            "createOnly": [
                "name",
                "publicAccessBlockConfiguration",
                "regions"
            ]
        },
        "aws-native:s3:MultiRegionAccessPointPolicy": {
            "cf": "AWS::S3::MultiRegionAccessPointPolicy",
            "inputs": {
                "mrapName": {
                    "type": "string",
                    "description": "The name of the Multi Region Access Point to apply policy"
                },
                "policy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Policy document to apply to a Multi Region Access Point"
                }
            },
            "outputs": {
                "mrapName": {
                    "type": "string",
                    "description": "The name of the Multi Region Access Point to apply policy"
                },
                "policy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Policy document to apply to a Multi Region Access Point"
                },
                "policyStatus": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The Policy Status associated with this Multi Region Access Point"
                }
            },
            "required": [
                "mrapName",
                "policy"
            ],
            "createOnly": [
                "mrapName"
            ]
        },
        "aws-native:s3:StorageLens": {
            "cf": "AWS::S3::StorageLens",
            "inputs": {
                "storageLensConfiguration": {
                    "$ref": "#/types/aws-native:s3:StorageLensStorageLensConfiguration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:s3:StorageLensTag"
                    },
                    "description": "A set of tags (key-value pairs) for this Amazon S3 Storage Lens configuration."
                }
            },
            "outputs": {
                "storageLensConfiguration": {
                    "$ref": "#/types/aws-native:s3:StorageLensStorageLensConfiguration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:s3:StorageLensTag"
                    },
                    "description": "A set of tags (key-value pairs) for this Amazon S3 Storage Lens configuration."
                }
            },
            "required": [
                "storageLensConfiguration"
            ],
            "createOnly": [
                "storageLensConfiguration/Id"
            ]
        },
        "aws-native:s3objectlambda:AccessPoint": {
            "cf": "AWS::S3ObjectLambda::AccessPoint",
            "inputs": {
                "name": {
                    "type": "string",
                    "description": "The name you want to assign to this Object lambda Access Point."
                },
                "objectLambdaConfiguration": {
                    "$ref": "#/types/aws-native:s3objectlambda:AccessPointObjectLambdaConfiguration",
                    "description": "The Object lambda Access Point Configuration that configures transformations to be applied on the objects on specified S3 Actions"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "description": "The date and time when the Object lambda Access Point was created."
                },
                "name": {
                    "type": "string",
                    "description": "The name you want to assign to this Object lambda Access Point."
                },
                "objectLambdaConfiguration": {
                    "$ref": "#/types/aws-native:s3objectlambda:AccessPointObjectLambdaConfiguration",
                    "description": "The Object lambda Access Point Configuration that configures transformations to be applied on the objects on specified S3 Actions"
                },
                "policyStatus": {
                    "$ref": "pulumi.json#/Any"
                },
                "publicAccessBlockConfiguration": {
                    "$ref": "#/types/aws-native:s3objectlambda:AccessPointPublicAccessBlockConfiguration",
                    "description": "The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide."
                }
            },
            "required": [
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:s3objectlambda:AccessPointPolicy": {
            "cf": "AWS::S3ObjectLambda::AccessPointPolicy",
            "inputs": {
                "objectLambdaAccessPoint": {
                    "type": "string",
                    "description": "The name of the Amazon S3 ObjectLambdaAccessPoint to which the policy applies."
                },
                "policyDocument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "A policy document containing permissions to add to the specified ObjectLambdaAccessPoint. For more information, see Access Policy Language Overview (https://docs.aws.amazon.com/AmazonS3/latest/dev/access-policy-language-overview.html) in the Amazon Simple Storage Service Developer Guide. "
                }
            },
            "outputs": {
                "objectLambdaAccessPoint": {
                    "type": "string",
                    "description": "The name of the Amazon S3 ObjectLambdaAccessPoint to which the policy applies."
                },
                "policyDocument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "A policy document containing permissions to add to the specified ObjectLambdaAccessPoint. For more information, see Access Policy Language Overview (https://docs.aws.amazon.com/AmazonS3/latest/dev/access-policy-language-overview.html) in the Amazon Simple Storage Service Developer Guide. "
                }
            },
            "required": [
                "objectLambdaAccessPoint",
                "policyDocument"
            ],
            "createOnly": [
                "objectLambdaAccessPoint"
            ]
        },
        "aws-native:s3outposts:AccessPoint": {
            "cf": "AWS::S3Outposts::AccessPoint",
            "inputs": {
                "bucket": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the bucket you want to associate this AccessPoint with."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the AccessPoint."
                },
                "policy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The access point policy associated with this access point."
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:s3outposts:AccessPointVpcConfiguration",
                    "description": "Virtual Private Cloud (VPC) from which requests can be made to the AccessPoint."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the specified AccessPoint."
                },
                "bucket": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the bucket you want to associate this AccessPoint with."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the AccessPoint."
                },
                "policy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The access point policy associated with this access point."
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:s3outposts:AccessPointVpcConfiguration",
                    "description": "Virtual Private Cloud (VPC) from which requests can be made to the AccessPoint."
                }
            },
            "required": [
                "bucket",
                "name",
                "vpcConfiguration"
            ],
            "createOnly": [
                "bucket",
                "name",
                "vpcConfiguration"
            ]
        },
        "aws-native:s3outposts:Bucket": {
            "cf": "AWS::S3Outposts::Bucket",
            "inputs": {
                "bucketName": {
                    "type": "string",
                    "description": "A name for the bucket."
                },
                "lifecycleConfiguration": {
                    "$ref": "#/types/aws-native:s3outposts:BucketLifecycleConfiguration",
                    "description": "Rules that define how Amazon S3Outposts manages objects during their lifetime."
                },
                "outpostId": {
                    "type": "string",
                    "description": "The id of the customer outpost on which the bucket resides."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:s3outposts:BucketTag"
                    },
                    "description": "An arbitrary set of tags (key-value pairs) for this S3Outposts bucket."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the specified bucket."
                },
                "bucketName": {
                    "type": "string",
                    "description": "A name for the bucket."
                },
                "lifecycleConfiguration": {
                    "$ref": "#/types/aws-native:s3outposts:BucketLifecycleConfiguration",
                    "description": "Rules that define how Amazon S3Outposts manages objects during their lifetime."
                },
                "outpostId": {
                    "type": "string",
                    "description": "The id of the customer outpost on which the bucket resides."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:s3outposts:BucketTag"
                    },
                    "description": "An arbitrary set of tags (key-value pairs) for this S3Outposts bucket."
                }
            },
            "required": [
                "bucketName",
                "outpostId"
            ],
            "createOnly": [
                "bucketName",
                "outpostId"
            ]
        },
        "aws-native:s3outposts:BucketPolicy": {
            "cf": "AWS::S3Outposts::BucketPolicy",
            "inputs": {
                "bucket": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the specified bucket."
                },
                "policyDocument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "A policy document containing permissions to add to the specified bucket."
                }
            },
            "outputs": {
                "bucket": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the specified bucket."
                },
                "policyDocument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "A policy document containing permissions to add to the specified bucket."
                }
            },
            "required": [
                "bucket",
                "policyDocument"
            ],
            "createOnly": [
                "bucket"
            ]
        },
        "aws-native:s3outposts:Endpoint": {
            "cf": "AWS::S3Outposts::Endpoint",
            "inputs": {
                "accessType": {
                    "$ref": "#/types/aws-native:s3outposts:EndpointAccessType",
                    "description": "The type of access for the on-premise network connectivity for the Outpost endpoint. To access endpoint from an on-premises network, you must specify the access type and provide the customer owned Ipv4 pool."
                },
                "customerOwnedIpv4Pool": {
                    "type": "string",
                    "description": "The ID of the customer-owned IPv4 pool for the Endpoint. IP addresses will be allocated from this pool for the endpoint."
                },
                "outpostId": {
                    "type": "string",
                    "description": "The id of the customer outpost on which the bucket resides."
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The ID of the security group to use with the endpoint."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet in the selected VPC. The subnet must belong to the Outpost."
                }
            },
            "outputs": {
                "accessType": {
                    "$ref": "#/types/aws-native:s3outposts:EndpointAccessType",
                    "description": "The type of access for the on-premise network connectivity for the Outpost endpoint. To access endpoint from an on-premises network, you must specify the access type and provide the customer owned Ipv4 pool."
                },
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the endpoint."
                },
                "cidrBlock": {
                    "type": "string",
                    "description": "The VPC CIDR committed by this endpoint."
                },
                "creationTime": {
                    "type": "string",
                    "description": "The time the endpoint was created."
                },
                "customerOwnedIpv4Pool": {
                    "type": "string",
                    "description": "The ID of the customer-owned IPv4 pool for the Endpoint. IP addresses will be allocated from this pool for the endpoint."
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:s3outposts:EndpointNetworkInterface"
                    },
                    "description": "The network interfaces of the endpoint."
                },
                "outpostId": {
                    "type": "string",
                    "description": "The id of the customer outpost on which the bucket resides."
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The ID of the security group to use with the endpoint."
                },
                "status": {
                    "$ref": "#/types/aws-native:s3outposts:EndpointStatus"
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the subnet in the selected VPC. The subnet must belong to the Outpost."
                }
            },
            "required": [
                "outpostId",
                "securityGroupId",
                "subnetId"
            ],
            "createOnly": [
                "accessType",
                "customerOwnedIpv4Pool",
                "outpostId",
                "securityGroupId",
                "subnetId"
            ]
        },
        "aws-native:sagemaker:App": {
            "cf": "AWS::SageMaker::App",
            "inputs": {
                "appName": {
                    "type": "string",
                    "description": "The name of the app."
                },
                "appType": {
                    "$ref": "#/types/aws-native:sagemaker:AppAppType",
                    "description": "The type of app."
                },
                "domainId": {
                    "type": "string",
                    "description": "The domain ID."
                },
                "resourceSpec": {
                    "$ref": "#/types/aws-native:sagemaker:AppResourceSpec",
                    "description": "The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:AppTag"
                    },
                    "description": "A list of tags to apply to the app."
                },
                "userProfileName": {
                    "type": "string",
                    "description": "The user profile name."
                }
            },
            "outputs": {
                "appArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the app."
                },
                "appName": {
                    "type": "string",
                    "description": "The name of the app."
                },
                "appType": {
                    "$ref": "#/types/aws-native:sagemaker:AppAppType",
                    "description": "The type of app."
                },
                "domainId": {
                    "type": "string",
                    "description": "The domain ID."
                },
                "resourceSpec": {
                    "$ref": "#/types/aws-native:sagemaker:AppResourceSpec",
                    "description": "The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:AppTag"
                    },
                    "description": "A list of tags to apply to the app."
                },
                "userProfileName": {
                    "type": "string",
                    "description": "The user profile name."
                }
            },
            "required": [
                "appName",
                "appType",
                "domainId",
                "userProfileName"
            ],
            "createOnly": [
                "appName",
                "appType",
                "domainId",
                "tags",
                "userProfileName"
            ]
        },
        "aws-native:sagemaker:AppImageConfig": {
            "cf": "AWS::SageMaker::AppImageConfig",
            "inputs": {
                "appImageConfigName": {
                    "type": "string",
                    "description": "The Name of the AppImageConfig."
                },
                "kernelGatewayImageConfig": {
                    "$ref": "#/types/aws-native:sagemaker:AppImageConfigKernelGatewayImageConfig",
                    "description": "The KernelGatewayImageConfig."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:AppImageConfigTag"
                    },
                    "description": "A list of tags to apply to the AppImageConfig."
                }
            },
            "outputs": {
                "appImageConfigArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the AppImageConfig."
                },
                "appImageConfigName": {
                    "type": "string",
                    "description": "The Name of the AppImageConfig."
                },
                "kernelGatewayImageConfig": {
                    "$ref": "#/types/aws-native:sagemaker:AppImageConfigKernelGatewayImageConfig",
                    "description": "The KernelGatewayImageConfig."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:AppImageConfigTag"
                    },
                    "description": "A list of tags to apply to the AppImageConfig."
                }
            },
            "required": [
                "appImageConfigName"
            ],
            "createOnly": [
                "appImageConfigName",
                "tags"
            ]
        },
        "aws-native:sagemaker:DataQualityJobDefinition": {
            "cf": "AWS::SageMaker::DataQualityJobDefinition",
            "inputs": {
                "dataQualityAppSpecification": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionDataQualityAppSpecification"
                },
                "dataQualityBaselineConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionDataQualityBaselineConfig"
                },
                "dataQualityJobInput": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionDataQualityJobInput"
                },
                "dataQualityJobOutputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionMonitoringOutputConfig"
                },
                "jobDefinitionName": {
                    "type": "string"
                },
                "jobResources": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionMonitoringResources"
                },
                "networkConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionNetworkConfig"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
                },
                "stoppingCondition": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionStoppingCondition"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The time at which the job definition was created."
                },
                "dataQualityAppSpecification": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionDataQualityAppSpecification"
                },
                "dataQualityBaselineConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionDataQualityBaselineConfig"
                },
                "dataQualityJobInput": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionDataQualityJobInput"
                },
                "dataQualityJobOutputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionMonitoringOutputConfig"
                },
                "jobDefinitionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of job definition."
                },
                "jobDefinitionName": {
                    "type": "string"
                },
                "jobResources": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionMonitoringResources"
                },
                "networkConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionNetworkConfig"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
                },
                "stoppingCondition": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionStoppingCondition"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "dataQualityAppSpecification",
                "dataQualityJobInput",
                "dataQualityJobOutputConfig",
                "jobResources",
                "roleArn"
            ],
            "createOnly": [
                "dataQualityAppSpecification",
                "dataQualityBaselineConfig",
                "dataQualityJobInput",
                "dataQualityJobOutputConfig",
                "jobDefinitionName",
                "jobResources",
                "networkConfig",
                "roleArn",
                "stoppingCondition",
                "tags"
            ]
        },
        "aws-native:sagemaker:Device": {
            "cf": "AWS::SageMaker::Device",
            "inputs": {
                "device": {
                    "$ref": "#/types/aws-native:sagemaker:DeviceDevice",
                    "description": "The Edge Device you want to register against a device fleet",
                    "language": {
                        "csharp": {
                            "name": "DeviceValue"
                        }
                    }
                },
                "deviceFleetName": {
                    "type": "string",
                    "description": "The name of the edge device fleet"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DeviceTag"
                    },
                    "description": "Associate tags with the resource"
                }
            },
            "outputs": {
                "device": {
                    "$ref": "#/types/aws-native:sagemaker:DeviceDevice",
                    "description": "The Edge Device you want to register against a device fleet",
                    "language": {
                        "csharp": {
                            "name": "DeviceValue"
                        }
                    }
                },
                "deviceFleetName": {
                    "type": "string",
                    "description": "The name of the edge device fleet"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DeviceTag"
                    },
                    "description": "Associate tags with the resource"
                }
            },
            "required": [
                "deviceFleetName"
            ],
            "createOnly": [
                "deviceFleetName"
            ]
        },
        "aws-native:sagemaker:DeviceFleet": {
            "cf": "AWS::SageMaker::DeviceFleet",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Description for the edge device fleet"
                },
                "deviceFleetName": {
                    "type": "string",
                    "description": "The name of the edge device fleet"
                },
                "outputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DeviceFleetEdgeOutputConfig",
                    "description": "S3 bucket and an ecryption key id (if available) to store outputs for the fleet"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role associated with the device fleet"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DeviceFleetTag"
                    },
                    "description": "Associate tags with the resource"
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "Description for the edge device fleet"
                },
                "deviceFleetName": {
                    "type": "string",
                    "description": "The name of the edge device fleet"
                },
                "outputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DeviceFleetEdgeOutputConfig",
                    "description": "S3 bucket and an ecryption key id (if available) to store outputs for the fleet"
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role associated with the device fleet"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DeviceFleetTag"
                    },
                    "description": "Associate tags with the resource"
                }
            },
            "required": [
                "deviceFleetName",
                "outputConfig",
                "roleArn"
            ],
            "createOnly": [
                "deviceFleetName"
            ]
        },
        "aws-native:sagemaker:Domain": {
            "cf": "AWS::SageMaker::Domain",
            "inputs": {
                "appNetworkAccessType": {
                    "$ref": "#/types/aws-native:sagemaker:DomainAppNetworkAccessType",
                    "description": "Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly."
                },
                "authMode": {
                    "$ref": "#/types/aws-native:sagemaker:DomainAuthMode",
                    "description": "The mode of authentication that members use to access the domain."
                },
                "defaultUserSettings": {
                    "$ref": "#/types/aws-native:sagemaker:DomainUserSettings",
                    "description": "The default user settings."
                },
                "domainName": {
                    "type": "string",
                    "description": "A name for the domain."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "SageMaker uses AWS KMS to encrypt the EFS volume attached to the domain with an AWS managed customer master key (CMK) by default."
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The VPC subnets that Studio uses for communication."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DomainTag"
                    },
                    "description": "A list of tags to apply to the user profile."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication."
                }
            },
            "outputs": {
                "appNetworkAccessType": {
                    "$ref": "#/types/aws-native:sagemaker:DomainAppNetworkAccessType",
                    "description": "Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly."
                },
                "authMode": {
                    "$ref": "#/types/aws-native:sagemaker:DomainAuthMode",
                    "description": "The mode of authentication that members use to access the domain."
                },
                "defaultUserSettings": {
                    "$ref": "#/types/aws-native:sagemaker:DomainUserSettings",
                    "description": "The default user settings."
                },
                "domainArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the created domain."
                },
                "domainId": {
                    "type": "string",
                    "description": "The domain name."
                },
                "domainName": {
                    "type": "string",
                    "description": "A name for the domain."
                },
                "homeEfsFileSystemId": {
                    "type": "string",
                    "description": "The ID of the Amazon Elastic File System (EFS) managed by this Domain."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "SageMaker uses AWS KMS to encrypt the EFS volume attached to the domain with an AWS managed customer master key (CMK) by default."
                },
                "singleSignOnManagedApplicationInstanceId": {
                    "type": "string",
                    "description": "The SSO managed application instance ID."
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The VPC subnets that Studio uses for communication."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DomainTag"
                    },
                    "description": "A list of tags to apply to the user profile."
                },
                "url": {
                    "type": "string",
                    "description": "The URL to the created domain."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication."
                }
            },
            "required": [
                "authMode",
                "defaultUserSettings",
                "domainName",
                "subnetIds",
                "vpcId"
            ],
            "createOnly": [
                "appNetworkAccessType",
                "authMode",
                "domainName",
                "kmsKeyId",
                "subnetIds",
                "tags",
                "vpcId"
            ]
        },
        "aws-native:sagemaker:FeatureGroup": {
            "cf": "AWS::SageMaker::FeatureGroup",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Description about the FeatureGroup."
                },
                "eventTimeFeatureName": {
                    "type": "string",
                    "description": "The Event Time Feature Name."
                },
                "featureDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:FeatureGroupFeatureDefinition"
                    },
                    "description": "An Array of Feature Definition"
                },
                "featureGroupName": {
                    "type": "string",
                    "description": "The Name of the FeatureGroup."
                },
                "offlineStoreConfig": {
                    "$ref": "pulumi.json#/Any"
                },
                "onlineStoreConfig": {
                    "$ref": "pulumi.json#/Any"
                },
                "recordIdentifierFeatureName": {
                    "type": "string",
                    "description": "The Record Identifier Feature Name."
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role Arn"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:FeatureGroupTag"
                    },
                    "description": "An array of key-value pair to apply to this resource."
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "Description about the FeatureGroup."
                },
                "eventTimeFeatureName": {
                    "type": "string",
                    "description": "The Event Time Feature Name."
                },
                "featureDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:FeatureGroupFeatureDefinition"
                    },
                    "description": "An Array of Feature Definition"
                },
                "featureGroupName": {
                    "type": "string",
                    "description": "The Name of the FeatureGroup."
                },
                "offlineStoreConfig": {
                    "$ref": "pulumi.json#/Any"
                },
                "onlineStoreConfig": {
                    "$ref": "pulumi.json#/Any"
                },
                "recordIdentifierFeatureName": {
                    "type": "string",
                    "description": "The Record Identifier Feature Name."
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role Arn"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:FeatureGroupTag"
                    },
                    "description": "An array of key-value pair to apply to this resource."
                }
            },
            "required": [
                "eventTimeFeatureName",
                "featureDefinitions",
                "featureGroupName",
                "recordIdentifierFeatureName"
            ],
            "createOnly": [
                "description",
                "eventTimeFeatureName",
                "featureDefinitions",
                "featureGroupName",
                "offlineStoreConfig",
                "onlineStoreConfig",
                "recordIdentifierFeatureName",
                "roleArn",
                "tags"
            ]
        },
        "aws-native:sagemaker:Image": {
            "cf": "AWS::SageMaker::Image",
            "inputs": {
                "imageDescription": {
                    "type": "string"
                },
                "imageDisplayName": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imageRoleArn": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ImageTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "imageArn": {
                    "type": "string"
                },
                "imageDescription": {
                    "type": "string"
                },
                "imageDisplayName": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imageRoleArn": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ImageTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "imageName",
                "imageRoleArn"
            ],
            "createOnly": [
                "imageName"
            ]
        },
        "aws-native:sagemaker:ImageVersion": {
            "cf": "AWS::SageMaker::ImageVersion",
            "inputs": {
                "baseImage": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                }
            },
            "outputs": {
                "baseImage": {
                    "type": "string"
                },
                "containerImage": {
                    "type": "string"
                },
                "imageArn": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imageVersionArn": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "baseImage",
                "imageName"
            ],
            "createOnly": [
                "baseImage",
                "imageName"
            ]
        },
        "aws-native:sagemaker:ModelBiasJobDefinition": {
            "cf": "AWS::SageMaker::ModelBiasJobDefinition",
            "inputs": {
                "jobDefinitionName": {
                    "type": "string"
                },
                "jobResources": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionMonitoringResources"
                },
                "modelBiasAppSpecification": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionModelBiasAppSpecification"
                },
                "modelBiasBaselineConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionModelBiasBaselineConfig"
                },
                "modelBiasJobInput": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionModelBiasJobInput"
                },
                "modelBiasJobOutputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionMonitoringOutputConfig"
                },
                "networkConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionNetworkConfig"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
                },
                "stoppingCondition": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionStoppingCondition"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The time at which the job definition was created."
                },
                "jobDefinitionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of job definition."
                },
                "jobDefinitionName": {
                    "type": "string"
                },
                "jobResources": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionMonitoringResources"
                },
                "modelBiasAppSpecification": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionModelBiasAppSpecification"
                },
                "modelBiasBaselineConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionModelBiasBaselineConfig"
                },
                "modelBiasJobInput": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionModelBiasJobInput"
                },
                "modelBiasJobOutputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionMonitoringOutputConfig"
                },
                "networkConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionNetworkConfig"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
                },
                "stoppingCondition": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionStoppingCondition"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "jobResources",
                "modelBiasAppSpecification",
                "modelBiasJobInput",
                "modelBiasJobOutputConfig",
                "roleArn"
            ],
            "createOnly": [
                "jobDefinitionName",
                "jobResources",
                "modelBiasAppSpecification",
                "modelBiasBaselineConfig",
                "modelBiasJobInput",
                "modelBiasJobOutputConfig",
                "networkConfig",
                "roleArn",
                "stoppingCondition",
                "tags"
            ]
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinition": {
            "cf": "AWS::SageMaker::ModelExplainabilityJobDefinition",
            "inputs": {
                "jobDefinitionName": {
                    "type": "string"
                },
                "jobResources": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionMonitoringResources"
                },
                "modelExplainabilityAppSpecification": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification"
                },
                "modelExplainabilityBaselineConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig"
                },
                "modelExplainabilityJobInput": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionModelExplainabilityJobInput"
                },
                "modelExplainabilityJobOutputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionMonitoringOutputConfig"
                },
                "networkConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionNetworkConfig"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
                },
                "stoppingCondition": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionStoppingCondition"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The time at which the job definition was created."
                },
                "jobDefinitionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of job definition."
                },
                "jobDefinitionName": {
                    "type": "string"
                },
                "jobResources": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionMonitoringResources"
                },
                "modelExplainabilityAppSpecification": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification"
                },
                "modelExplainabilityBaselineConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig"
                },
                "modelExplainabilityJobInput": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionModelExplainabilityJobInput"
                },
                "modelExplainabilityJobOutputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionMonitoringOutputConfig"
                },
                "networkConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionNetworkConfig"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
                },
                "stoppingCondition": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionStoppingCondition"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "jobResources",
                "modelExplainabilityAppSpecification",
                "modelExplainabilityJobInput",
                "modelExplainabilityJobOutputConfig",
                "roleArn"
            ],
            "createOnly": [
                "jobDefinitionName",
                "jobResources",
                "modelExplainabilityAppSpecification",
                "modelExplainabilityBaselineConfig",
                "modelExplainabilityJobInput",
                "modelExplainabilityJobOutputConfig",
                "networkConfig",
                "roleArn",
                "stoppingCondition",
                "tags"
            ]
        },
        "aws-native:sagemaker:ModelPackageGroup": {
            "cf": "AWS::SageMaker::ModelPackageGroup",
            "inputs": {
                "modelPackageGroupDescription": {
                    "type": "string"
                },
                "modelPackageGroupName": {
                    "type": "string"
                },
                "modelPackageGroupPolicy": {
                    "$ref": "pulumi.json#/Any"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelPackageGroupTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The time at which the model package group was created."
                },
                "modelPackageGroupArn": {
                    "type": "string"
                },
                "modelPackageGroupDescription": {
                    "type": "string"
                },
                "modelPackageGroupName": {
                    "type": "string"
                },
                "modelPackageGroupPolicy": {
                    "$ref": "pulumi.json#/Any"
                },
                "modelPackageGroupStatus": {
                    "$ref": "#/types/aws-native:sagemaker:ModelPackageGroupModelPackageGroupStatus",
                    "description": "The status of a modelpackage group job."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelPackageGroupTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "modelPackageGroupName"
            ],
            "createOnly": [
                "modelPackageGroupDescription",
                "modelPackageGroupName"
            ]
        },
        "aws-native:sagemaker:ModelQualityJobDefinition": {
            "cf": "AWS::SageMaker::ModelQualityJobDefinition",
            "inputs": {
                "jobDefinitionName": {
                    "type": "string"
                },
                "jobResources": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionMonitoringResources"
                },
                "modelQualityAppSpecification": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionModelQualityAppSpecification"
                },
                "modelQualityBaselineConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionModelQualityBaselineConfig"
                },
                "modelQualityJobInput": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionModelQualityJobInput"
                },
                "modelQualityJobOutputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionMonitoringOutputConfig"
                },
                "networkConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionNetworkConfig"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
                },
                "stoppingCondition": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionStoppingCondition"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The time at which the job definition was created."
                },
                "jobDefinitionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of job definition."
                },
                "jobDefinitionName": {
                    "type": "string"
                },
                "jobResources": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionMonitoringResources"
                },
                "modelQualityAppSpecification": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionModelQualityAppSpecification"
                },
                "modelQualityBaselineConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionModelQualityBaselineConfig"
                },
                "modelQualityJobInput": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionModelQualityJobInput"
                },
                "modelQualityJobOutputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionMonitoringOutputConfig"
                },
                "networkConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionNetworkConfig"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
                },
                "stoppingCondition": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionStoppingCondition"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "jobResources",
                "modelQualityAppSpecification",
                "modelQualityJobInput",
                "modelQualityJobOutputConfig",
                "roleArn"
            ],
            "createOnly": [
                "jobDefinitionName",
                "jobResources",
                "modelQualityAppSpecification",
                "modelQualityBaselineConfig",
                "modelQualityJobInput",
                "modelQualityJobOutputConfig",
                "networkConfig",
                "roleArn",
                "stoppingCondition",
                "tags"
            ]
        },
        "aws-native:sagemaker:MonitoringSchedule": {
            "cf": "AWS::SageMaker::MonitoringSchedule",
            "inputs": {
                "endpointName": {
                    "type": "string"
                },
                "failureReason": {
                    "type": "string",
                    "description": "Contains the reason a monitoring job failed, if it failed."
                },
                "lastMonitoringExecutionSummary": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringExecutionSummary",
                    "description": "Describes metadata on the last execution to run, if there was one."
                },
                "monitoringScheduleConfig": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringScheduleConfig"
                },
                "monitoringScheduleName": {
                    "type": "string"
                },
                "monitoringScheduleStatus": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringScheduleStatus",
                    "description": "The status of a schedule job."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The time at which the schedule was created."
                },
                "endpointName": {
                    "type": "string"
                },
                "failureReason": {
                    "type": "string",
                    "description": "Contains the reason a monitoring job failed, if it failed."
                },
                "lastModifiedTime": {
                    "type": "string",
                    "description": "A timestamp that indicates the last time the monitoring job was modified."
                },
                "lastMonitoringExecutionSummary": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringExecutionSummary",
                    "description": "Describes metadata on the last execution to run, if there was one."
                },
                "monitoringScheduleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the monitoring schedule."
                },
                "monitoringScheduleConfig": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringScheduleConfig"
                },
                "monitoringScheduleName": {
                    "type": "string"
                },
                "monitoringScheduleStatus": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringScheduleStatus",
                    "description": "The status of a schedule job."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "monitoringScheduleConfig",
                "monitoringScheduleName"
            ],
            "createOnly": [
                "monitoringScheduleName"
            ]
        },
        "aws-native:sagemaker:Pipeline": {
            "cf": "AWS::SageMaker::Pipeline",
            "inputs": {
                "pipelineDefinition": {
                    "$ref": "pulumi.json#/Any"
                },
                "pipelineDescription": {
                    "type": "string",
                    "description": "The description of the Pipeline."
                },
                "pipelineDisplayName": {
                    "type": "string",
                    "description": "The display name of the Pipeline."
                },
                "pipelineName": {
                    "type": "string",
                    "description": "The name of the Pipeline."
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role Arn"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:PipelineTag"
                    }
                }
            },
            "outputs": {
                "pipelineDefinition": {
                    "$ref": "pulumi.json#/Any"
                },
                "pipelineDescription": {
                    "type": "string",
                    "description": "The description of the Pipeline."
                },
                "pipelineDisplayName": {
                    "type": "string",
                    "description": "The display name of the Pipeline."
                },
                "pipelineName": {
                    "type": "string",
                    "description": "The name of the Pipeline."
                },
                "roleArn": {
                    "type": "string",
                    "description": "Role Arn"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:PipelineTag"
                    }
                }
            },
            "required": [
                "pipelineDefinition",
                "pipelineName",
                "roleArn"
            ],
            "createOnly": [
                "pipelineName"
            ]
        },
        "aws-native:sagemaker:Project": {
            "cf": "AWS::SageMaker::Project",
            "inputs": {
                "projectDescription": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "serviceCatalogProvisioningDetails": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Input ServiceCatalog Provisioning Details"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ProjectTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "creationTime": {
                    "type": "string",
                    "description": "The time at which the project was created."
                },
                "projectArn": {
                    "type": "string"
                },
                "projectDescription": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "projectStatus": {
                    "$ref": "#/types/aws-native:sagemaker:ProjectProjectStatus",
                    "description": "The status of a project."
                },
                "serviceCatalogProvisionedProductDetails": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Provisioned ServiceCatalog  Details"
                },
                "serviceCatalogProvisioningDetails": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Input ServiceCatalog Provisioning Details"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ProjectTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "projectName",
                "serviceCatalogProvisioningDetails"
            ],
            "createOnly": [
                "projectDescription",
                "projectName",
                "serviceCatalogProvisioningDetails",
                "tags"
            ]
        },
        "aws-native:sagemaker:UserProfile": {
            "cf": "AWS::SageMaker::UserProfile",
            "inputs": {
                "domainId": {
                    "type": "string",
                    "description": "The ID of the associated Domain."
                },
                "singleSignOnUserIdentifier": {
                    "type": "string",
                    "description": "A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is \"UserName\". If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified."
                },
                "singleSignOnUserValue": {
                    "type": "string",
                    "description": "The username of the associated AWS Single Sign-On User for this UserProfile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:UserProfileTag"
                    },
                    "description": "A list of tags to apply to the user profile."
                },
                "userProfileName": {
                    "type": "string",
                    "description": "A name for the UserProfile."
                },
                "userSettings": {
                    "$ref": "#/types/aws-native:sagemaker:UserProfileUserSettings",
                    "description": "A collection of settings."
                }
            },
            "outputs": {
                "domainId": {
                    "type": "string",
                    "description": "The ID of the associated Domain."
                },
                "singleSignOnUserIdentifier": {
                    "type": "string",
                    "description": "A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is \"UserName\". If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified."
                },
                "singleSignOnUserValue": {
                    "type": "string",
                    "description": "The username of the associated AWS Single Sign-On User for this UserProfile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:UserProfileTag"
                    },
                    "description": "A list of tags to apply to the user profile."
                },
                "userProfileArn": {
                    "type": "string",
                    "description": "The user profile Amazon Resource Name (ARN)."
                },
                "userProfileName": {
                    "type": "string",
                    "description": "A name for the UserProfile."
                },
                "userSettings": {
                    "$ref": "#/types/aws-native:sagemaker:UserProfileUserSettings",
                    "description": "A collection of settings."
                }
            },
            "required": [
                "domainId",
                "userProfileName"
            ],
            "createOnly": [
                "domainId",
                "singleSignOnUserIdentifier",
                "singleSignOnUserValue",
                "tags",
                "userProfileName"
            ]
        },
        "aws-native:servicecatalog:CloudFormationProvisionedProduct": {
            "cf": "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
            "inputs": {
                "acceptLanguage": {
                    "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductAcceptLanguage"
                },
                "notificationArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pathId": {
                    "type": "string"
                },
                "pathName": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "provisionedProductName": {
                    "type": "string"
                },
                "provisioningArtifactId": {
                    "type": "string"
                },
                "provisioningArtifactName": {
                    "type": "string"
                },
                "provisioningParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningParameter"
                    }
                },
                "provisioningPreferences": {
                    "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningPreferences"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductTag"
                    }
                }
            },
            "outputs": {
                "acceptLanguage": {
                    "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductAcceptLanguage"
                },
                "cloudformationStackArn": {
                    "type": "string"
                },
                "notificationArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "outputs": {
                    "$ref": "pulumi.json#/Any",
                    "description": "List of key-value pair outputs."
                },
                "pathId": {
                    "type": "string"
                },
                "pathName": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "provisionedProductId": {
                    "type": "string"
                },
                "provisionedProductName": {
                    "type": "string"
                },
                "provisioningArtifactId": {
                    "type": "string"
                },
                "provisioningArtifactName": {
                    "type": "string"
                },
                "provisioningParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningParameter"
                    }
                },
                "provisioningPreferences": {
                    "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningPreferences"
                },
                "recordId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductTag"
                    }
                }
            },
            "createOnly": [
                "notificationArns",
                "provisionedProductName"
            ]
        },
        "aws-native:servicecatalog:ServiceAction": {
            "cf": "AWS::ServiceCatalog::ServiceAction",
            "inputs": {
                "acceptLanguage": {
                    "$ref": "#/types/aws-native:servicecatalog:ServiceActionAcceptLanguage"
                },
                "definition": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:servicecatalog:ServiceActionDefinitionParameter"
                    }
                },
                "definitionType": {
                    "$ref": "#/types/aws-native:servicecatalog:ServiceActionDefinitionType"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "outputs": {
                "acceptLanguage": {
                    "$ref": "#/types/aws-native:servicecatalog:ServiceActionAcceptLanguage"
                },
                "definition": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:servicecatalog:ServiceActionDefinitionParameter"
                    }
                },
                "definitionType": {
                    "$ref": "#/types/aws-native:servicecatalog:ServiceActionDefinitionType"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "definition",
                "definitionType",
                "name"
            ]
        },
        "aws-native:servicecatalog:ServiceActionAssociation": {
            "cf": "AWS::ServiceCatalog::ServiceActionAssociation",
            "inputs": {
                "productId": {
                    "type": "string"
                },
                "provisioningArtifactId": {
                    "type": "string"
                },
                "serviceActionId": {
                    "type": "string"
                }
            },
            "outputs": {
                "productId": {
                    "type": "string"
                },
                "provisioningArtifactId": {
                    "type": "string"
                },
                "serviceActionId": {
                    "type": "string"
                }
            },
            "required": [
                "productId",
                "provisioningArtifactId",
                "serviceActionId"
            ],
            "createOnly": [
                "productId",
                "provisioningArtifactId",
                "serviceActionId"
            ]
        },
        "aws-native:servicecatalogappregistry:Application": {
            "cf": "AWS::ServiceCatalogAppRegistry::Application",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The description of the application. "
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application. "
                },
                "tags": {
                    "$ref": "#/types/aws-native:servicecatalogappregistry:ApplicationTags"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the application. "
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application. "
                },
                "tags": {
                    "$ref": "#/types/aws-native:servicecatalogappregistry:ApplicationTags"
                }
            },
            "required": [
                "name"
            ]
        },
        "aws-native:servicecatalogappregistry:AttributeGroup": {
            "cf": "AWS::ServiceCatalogAppRegistry::AttributeGroup",
            "inputs": {
                "attributes": {
                    "$ref": "pulumi.json#/Any"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the attribute group. "
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute group. "
                },
                "tags": {
                    "$ref": "#/types/aws-native:servicecatalogappregistry:AttributeGroupTags"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "pulumi.json#/Any"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the attribute group. "
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute group. "
                },
                "tags": {
                    "$ref": "#/types/aws-native:servicecatalogappregistry:AttributeGroupTags"
                }
            },
            "required": [
                "attributes",
                "name"
            ]
        },
        "aws-native:servicecatalogappregistry:AttributeGroupAssociation": {
            "cf": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
            "inputs": {
                "application": {
                    "type": "string",
                    "description": "The name or the Id of the Application."
                },
                "attributeGroup": {
                    "type": "string",
                    "description": "The name or the Id of the AttributeGroup."
                }
            },
            "outputs": {
                "application": {
                    "type": "string",
                    "description": "The name or the Id of the Application."
                },
                "applicationArn": {
                    "type": "string"
                },
                "attributeGroup": {
                    "type": "string",
                    "description": "The name or the Id of the AttributeGroup."
                },
                "attributeGroupArn": {
                    "type": "string"
                }
            },
            "required": [
                "application",
                "attributeGroup"
            ]
        },
        "aws-native:servicecatalogappregistry:ResourceAssociation": {
            "cf": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
            "inputs": {
                "application": {
                    "type": "string",
                    "description": "The name or the Id of the Application."
                },
                "resource": {
                    "type": "string",
                    "description": "The name or the Id of the Resource."
                },
                "resourceType": {
                    "$ref": "#/types/aws-native:servicecatalogappregistry:ResourceAssociationResourceType",
                    "description": "The type of the CFN Resource for now it's enum CFN_STACK."
                }
            },
            "outputs": {
                "application": {
                    "type": "string",
                    "description": "The name or the Id of the Application."
                },
                "applicationArn": {
                    "type": "string"
                },
                "resource": {
                    "type": "string",
                    "description": "The name or the Id of the Resource."
                },
                "resourceArn": {
                    "type": "string"
                },
                "resourceType": {
                    "$ref": "#/types/aws-native:servicecatalogappregistry:ResourceAssociationResourceType",
                    "description": "The type of the CFN Resource for now it's enum CFN_STACK."
                }
            },
            "required": [
                "application",
                "resource",
                "resourceType"
            ]
        },
        "aws-native:ses:ConfigurationSet": {
            "cf": "AWS::SES::ConfigurationSet",
            "inputs": {
                "name": {
                    "type": "string",
                    "description": "The name of the configuration set."
                }
            },
            "outputs": {
                "name": {
                    "type": "string",
                    "description": "The name of the configuration set."
                }
            },
            "createOnly": [
                "name"
            ]
        },
        "aws-native:ses:ContactList": {
            "cf": "AWS::SES::ContactList",
            "inputs": {
                "contactListName": {
                    "type": "string",
                    "description": "The name of the contact list."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the contact list."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ses:ContactListTag"
                    },
                    "description": "The tags (keys and values) associated with the contact list."
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ses:ContactListTopic"
                    },
                    "description": "The topics associated with the contact list."
                }
            },
            "outputs": {
                "contactListName": {
                    "type": "string",
                    "description": "The name of the contact list."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the contact list."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ses:ContactListTag"
                    },
                    "description": "The tags (keys and values) associated with the contact list."
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ses:ContactListTopic"
                    },
                    "description": "The topics associated with the contact list."
                }
            },
            "createOnly": [
                "contactListName"
            ]
        },
        "aws-native:signer:ProfilePermission": {
            "cf": "AWS::Signer::ProfilePermission",
            "inputs": {
                "action": {
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                },
                "profileName": {
                    "type": "string"
                },
                "profileVersion": {
                    "type": "string"
                },
                "statementId": {
                    "type": "string"
                }
            },
            "outputs": {
                "action": {
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                },
                "profileName": {
                    "type": "string"
                },
                "profileVersion": {
                    "type": "string"
                },
                "statementId": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "principal",
                "profileName",
                "statementId"
            ],
            "createOnly": [
                "action",
                "principal",
                "profileName",
                "profileVersion",
                "statementId"
            ]
        },
        "aws-native:signer:SigningProfile": {
            "cf": "AWS::Signer::SigningProfile",
            "inputs": {
                "platformId": {
                    "$ref": "#/types/aws-native:signer:SigningProfilePlatformId",
                    "description": "The ID of the target signing platform."
                },
                "signatureValidityPeriod": {
                    "$ref": "#/types/aws-native:signer:SigningProfileSignatureValidityPeriod",
                    "description": "Signature validity period of the profile."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:signer:SigningProfileTag"
                    },
                    "description": "A list of tags associated with the signing profile."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the specified signing profile."
                },
                "platformId": {
                    "$ref": "#/types/aws-native:signer:SigningProfilePlatformId",
                    "description": "The ID of the target signing platform."
                },
                "profileName": {
                    "type": "string",
                    "description": "A name for the signing profile. AWS CloudFormation generates a unique physical ID and uses that ID for the signing profile name. "
                },
                "profileVersion": {
                    "type": "string",
                    "description": "A version for the signing profile. AWS Signer generates a unique version for each profile of the same profile name."
                },
                "profileVersionArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the specified signing profile version."
                },
                "signatureValidityPeriod": {
                    "$ref": "#/types/aws-native:signer:SigningProfileSignatureValidityPeriod",
                    "description": "Signature validity period of the profile."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:signer:SigningProfileTag"
                    },
                    "description": "A list of tags associated with the signing profile."
                }
            },
            "required": [
                "platformId"
            ],
            "createOnly": [
                "platformId",
                "signatureValidityPeriod"
            ]
        },
        "aws-native:ssm:Association": {
            "cf": "AWS::SSM::Association",
            "inputs": {
                "applyOnlyAtCronInterval": {
                    "type": "boolean"
                },
                "associationName": {
                    "type": "string",
                    "description": "The name of the association."
                },
                "automationTargetParameterName": {
                    "type": "string"
                },
                "calendarNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "complianceSeverity": {
                    "$ref": "#/types/aws-native:ssm:AssociationComplianceSeverity"
                },
                "documentVersion": {
                    "type": "string",
                    "description": "The version of the SSM document to associate with the target."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance that the SSM document is associated with."
                },
                "maxConcurrency": {
                    "type": "string"
                },
                "maxErrors": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the SSM document."
                },
                "outputLocation": {
                    "$ref": "#/types/aws-native:ssm:AssociationInstanceAssociationOutputLocation"
                },
                "parameters": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Parameter values that the SSM document uses at runtime."
                },
                "scheduleExpression": {
                    "type": "string",
                    "description": "A Cron or Rate expression that specifies when the association is applied to the target."
                },
                "syncCompliance": {
                    "$ref": "#/types/aws-native:ssm:AssociationSyncCompliance"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssm:AssociationTarget"
                    },
                    "description": "The targets that the SSM document sends commands to."
                },
                "waitForSuccessTimeoutSeconds": {
                    "type": "integer"
                }
            },
            "outputs": {
                "applyOnlyAtCronInterval": {
                    "type": "boolean"
                },
                "associationId": {
                    "type": "string",
                    "description": "Unique identifier of the association."
                },
                "associationName": {
                    "type": "string",
                    "description": "The name of the association."
                },
                "automationTargetParameterName": {
                    "type": "string"
                },
                "calendarNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "complianceSeverity": {
                    "$ref": "#/types/aws-native:ssm:AssociationComplianceSeverity"
                },
                "documentVersion": {
                    "type": "string",
                    "description": "The version of the SSM document to associate with the target."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance that the SSM document is associated with."
                },
                "maxConcurrency": {
                    "type": "string"
                },
                "maxErrors": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the SSM document."
                },
                "outputLocation": {
                    "$ref": "#/types/aws-native:ssm:AssociationInstanceAssociationOutputLocation"
                },
                "parameters": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Parameter values that the SSM document uses at runtime."
                },
                "scheduleExpression": {
                    "type": "string",
                    "description": "A Cron or Rate expression that specifies when the association is applied to the target."
                },
                "syncCompliance": {
                    "$ref": "#/types/aws-native:ssm:AssociationSyncCompliance"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssm:AssociationTarget"
                    },
                    "description": "The targets that the SSM document sends commands to."
                },
                "waitForSuccessTimeoutSeconds": {
                    "type": "integer"
                }
            },
            "required": [
                "name"
            ]
        },
        "aws-native:ssm:Document": {
            "cf": "AWS::SSM::Document",
            "inputs": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssm:DocumentAttachmentsSource"
                    },
                    "description": "A list of key and value pairs that describe attachments to a version of a document."
                },
                "content": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The content for the Systems Manager document in JSON, YAML or String format."
                },
                "documentFormat": {
                    "$ref": "#/types/aws-native:ssm:DocumentDocumentFormat",
                    "description": "Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format."
                },
                "documentType": {
                    "$ref": "#/types/aws-native:ssm:DocumentDocumentType",
                    "description": "The type of document to create."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the Systems Manager document."
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssm:DocumentDocumentRequires"
                    },
                    "description": "A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssm:DocumentTag"
                    },
                    "description": "Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment."
                },
                "targetType": {
                    "type": "string",
                    "description": "Specify a target type to define the kinds of resources the document can run on."
                },
                "versionName": {
                    "type": "string",
                    "description": "An optional field specifying the version of the artifact you are creating with the document. This value is unique across all versions of a document, and cannot be changed."
                }
            },
            "outputs": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssm:DocumentAttachmentsSource"
                    },
                    "description": "A list of key and value pairs that describe attachments to a version of a document."
                },
                "content": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The content for the Systems Manager document in JSON, YAML or String format."
                },
                "documentFormat": {
                    "$ref": "#/types/aws-native:ssm:DocumentDocumentFormat",
                    "description": "Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format."
                },
                "documentType": {
                    "$ref": "#/types/aws-native:ssm:DocumentDocumentType",
                    "description": "The type of document to create."
                },
                "name": {
                    "type": "string",
                    "description": "A name for the Systems Manager document."
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssm:DocumentDocumentRequires"
                    },
                    "description": "A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssm:DocumentTag"
                    },
                    "description": "Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment."
                },
                "targetType": {
                    "type": "string",
                    "description": "Specify a target type to define the kinds of resources the document can run on."
                },
                "versionName": {
                    "type": "string",
                    "description": "An optional field specifying the version of the artifact you are creating with the document. This value is unique across all versions of a document, and cannot be changed."
                }
            },
            "required": [
                "content"
            ],
            "createOnly": [
                "attachments",
                "content",
                "documentFormat",
                "documentType",
                "name",
                "requires",
                "targetType",
                "versionName"
            ]
        },
        "aws-native:ssm:ResourceDataSync": {
            "cf": "AWS::SSM::ResourceDataSync",
            "inputs": {
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                },
                "bucketRegion": {
                    "type": "string"
                },
                "kMSKeyArn": {
                    "type": "string"
                },
                "s3Destination": {
                    "$ref": "#/types/aws-native:ssm:ResourceDataSyncS3Destination"
                },
                "syncFormat": {
                    "type": "string"
                },
                "syncSource": {
                    "$ref": "#/types/aws-native:ssm:ResourceDataSyncSyncSource"
                },
                "syncType": {
                    "type": "string"
                }
            },
            "outputs": {
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                },
                "bucketRegion": {
                    "type": "string"
                },
                "kMSKeyArn": {
                    "type": "string"
                },
                "s3Destination": {
                    "$ref": "#/types/aws-native:ssm:ResourceDataSyncS3Destination"
                },
                "syncFormat": {
                    "type": "string"
                },
                "syncName": {
                    "type": "string"
                },
                "syncSource": {
                    "$ref": "#/types/aws-native:ssm:ResourceDataSyncSyncSource"
                },
                "syncType": {
                    "type": "string"
                }
            },
            "createOnly": [
                "bucketName",
                "bucketPrefix",
                "bucketRegion",
                "kMSKeyArn",
                "s3Destination",
                "syncFormat",
                "syncName",
                "syncType"
            ]
        },
        "aws-native:ssmcontacts:Contact": {
            "cf": "AWS::SSMContacts::Contact",
            "inputs": {
                "alias": {
                    "type": "string",
                    "description": "Alias of the contact. String value with 20 to 256 characters. Only alphabetical, numeric characters, dash, or underscore allowed."
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the contact. String value with 3 to 256 characters. Only alphabetical, space, numeric characters, dash, or underscore allowed."
                },
                "plan": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmcontacts:ContactStage"
                    },
                    "description": "The stages that an escalation plan or engagement plan engages contacts and contact methods in."
                },
                "type": {
                    "$ref": "#/types/aws-native:ssmcontacts:ContactType",
                    "description": "Contact type, which specify type of contact. Currently supported values: “PERSONAL”, “SHARED”, “OTHER“."
                }
            },
            "outputs": {
                "alias": {
                    "type": "string",
                    "description": "Alias of the contact. String value with 20 to 256 characters. Only alphabetical, numeric characters, dash, or underscore allowed."
                },
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the contact."
                },
                "displayName": {
                    "type": "string",
                    "description": "Name of the contact. String value with 3 to 256 characters. Only alphabetical, space, numeric characters, dash, or underscore allowed."
                },
                "plan": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmcontacts:ContactStage"
                    },
                    "description": "The stages that an escalation plan or engagement plan engages contacts and contact methods in."
                },
                "type": {
                    "$ref": "#/types/aws-native:ssmcontacts:ContactType",
                    "description": "Contact type, which specify type of contact. Currently supported values: “PERSONAL”, “SHARED”, “OTHER“."
                }
            },
            "required": [
                "alias",
                "displayName",
                "plan",
                "type"
            ],
            "createOnly": [
                "alias",
                "type"
            ]
        },
        "aws-native:ssmcontacts:ContactChannel": {
            "cf": "AWS::SSMContacts::ContactChannel",
            "inputs": {
                "channelAddress": {
                    "type": "string",
                    "description": "The details that SSM Incident Manager uses when trying to engage the contact channel."
                },
                "channelName": {
                    "type": "string",
                    "description": "The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters."
                },
                "channelType": {
                    "$ref": "#/types/aws-native:ssmcontacts:ContactChannelChannelType",
                    "description": "Device type, which specify notification channel. Currently supported values: “SMS”, “VOICE”, “EMAIL”, “CHATBOT."
                },
                "contactId": {
                    "type": "string",
                    "description": "ARN of the contact resource"
                },
                "deferActivation": {
                    "type": "boolean",
                    "description": "If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't engage your contact channel until it has been activated."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the engagement to a contact channel."
                },
                "channelAddress": {
                    "type": "string",
                    "description": "The details that SSM Incident Manager uses when trying to engage the contact channel."
                },
                "channelName": {
                    "type": "string",
                    "description": "The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters."
                },
                "channelType": {
                    "$ref": "#/types/aws-native:ssmcontacts:ContactChannelChannelType",
                    "description": "Device type, which specify notification channel. Currently supported values: “SMS”, “VOICE”, “EMAIL”, “CHATBOT."
                },
                "contactId": {
                    "type": "string",
                    "description": "ARN of the contact resource"
                },
                "deferActivation": {
                    "type": "boolean",
                    "description": "If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't engage your contact channel until it has been activated."
                }
            },
            "createOnly": [
                "channelType",
                "contactId"
            ]
        },
        "aws-native:ssmincidents:ReplicationSet": {
            "cf": "AWS::SSMIncidents::ReplicationSet",
            "inputs": {
                "deletionProtected": {
                    "type": "boolean"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmincidents:ReplicationSetReplicationRegion"
                    },
                    "description": "The ReplicationSet configuration."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the ReplicationSet."
                },
                "deletionProtected": {
                    "type": "boolean"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmincidents:ReplicationSetReplicationRegion"
                    },
                    "description": "The ReplicationSet configuration."
                }
            },
            "required": [
                "regions"
            ]
        },
        "aws-native:ssmincidents:ResponsePlan": {
            "cf": "AWS::SSMIncidents::ResponsePlan",
            "inputs": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmincidents:ResponsePlanAction"
                    },
                    "description": "The list of actions."
                },
                "chatChannel": {
                    "$ref": "#/types/aws-native:ssmincidents:ResponsePlanChatChannel"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the response plan."
                },
                "engagements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of engagements to use."
                },
                "incidentTemplate": {
                    "$ref": "#/types/aws-native:ssmincidents:ResponsePlanIncidentTemplate"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the response plan."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmincidents:ResponsePlanTag"
                    },
                    "description": "The tags to apply to the response plan."
                }
            },
            "outputs": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmincidents:ResponsePlanAction"
                    },
                    "description": "The list of actions."
                },
                "arn": {
                    "type": "string",
                    "description": "The ARN of the response plan."
                },
                "chatChannel": {
                    "$ref": "#/types/aws-native:ssmincidents:ResponsePlanChatChannel"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the response plan."
                },
                "engagements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of engagements to use."
                },
                "incidentTemplate": {
                    "$ref": "#/types/aws-native:ssmincidents:ResponsePlanIncidentTemplate"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the response plan."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmincidents:ResponsePlanTag"
                    },
                    "description": "The tags to apply to the response plan."
                }
            },
            "required": [
                "incidentTemplate",
                "name"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:sso:Assignment": {
            "cf": "AWS::SSO::Assignment",
            "inputs": {
                "instanceArn": {
                    "type": "string",
                    "description": "The sso instance that the permission set is owned."
                },
                "permissionSetArn": {
                    "type": "string",
                    "description": "The permission set that the assignemt will be assigned"
                },
                "principalId": {
                    "type": "string",
                    "description": "The assignee's identifier, user id/group id"
                },
                "principalType": {
                    "$ref": "#/types/aws-native:sso:AssignmentPrincipalType",
                    "description": "The assignee's type, user/group"
                },
                "targetId": {
                    "type": "string",
                    "description": "The account id to be provisioned."
                },
                "targetType": {
                    "$ref": "#/types/aws-native:sso:AssignmentTargetType",
                    "description": "The type of resource to be provsioned to, only aws account now"
                }
            },
            "outputs": {
                "instanceArn": {
                    "type": "string",
                    "description": "The sso instance that the permission set is owned."
                },
                "permissionSetArn": {
                    "type": "string",
                    "description": "The permission set that the assignemt will be assigned"
                },
                "principalId": {
                    "type": "string",
                    "description": "The assignee's identifier, user id/group id"
                },
                "principalType": {
                    "$ref": "#/types/aws-native:sso:AssignmentPrincipalType",
                    "description": "The assignee's type, user/group"
                },
                "targetId": {
                    "type": "string",
                    "description": "The account id to be provisioned."
                },
                "targetType": {
                    "$ref": "#/types/aws-native:sso:AssignmentTargetType",
                    "description": "The type of resource to be provsioned to, only aws account now"
                }
            },
            "required": [
                "instanceArn",
                "permissionSetArn",
                "principalId",
                "principalType",
                "targetId",
                "targetType"
            ],
            "createOnly": [
                "instanceArn",
                "permissionSetArn",
                "principalId",
                "principalType",
                "targetId",
                "targetType"
            ]
        },
        "aws-native:sso:InstanceAccessControlAttributeConfiguration": {
            "cf": "AWS::SSO::InstanceAccessControlAttributeConfiguration",
            "inputs": {
                "accessControlAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sso:InstanceAccessControlAttributeConfigurationAccessControlAttribute"
                    }
                },
                "instanceAccessControlAttributeConfiguration": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.",
                    "language": {
                        "csharp": {
                            "name": "InstanceAccessControlAttributeConfigurationValue"
                        }
                    }
                },
                "instanceArn": {
                    "type": "string",
                    "description": "The ARN of the AWS SSO instance under which the operation will be executed."
                }
            },
            "outputs": {
                "accessControlAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sso:InstanceAccessControlAttributeConfigurationAccessControlAttribute"
                    }
                },
                "instanceAccessControlAttributeConfiguration": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.",
                    "language": {
                        "csharp": {
                            "name": "InstanceAccessControlAttributeConfigurationValue"
                        }
                    }
                },
                "instanceArn": {
                    "type": "string",
                    "description": "The ARN of the AWS SSO instance under which the operation will be executed."
                }
            },
            "required": [
                "instanceArn"
            ],
            "createOnly": [
                "instanceArn"
            ]
        },
        "aws-native:sso:PermissionSet": {
            "cf": "AWS::SSO::PermissionSet",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "The permission set description."
                },
                "inlinePolicy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The inline policy to put in permission set."
                },
                "instanceArn": {
                    "type": "string",
                    "description": "The sso instance arn that the permission set is owned."
                },
                "managedPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name you want to assign to this permission set."
                },
                "relayStateType": {
                    "type": "string",
                    "description": "The relay state URL that redirect links to any service in the AWS Management Console."
                },
                "sessionDuration": {
                    "type": "string",
                    "description": "The length of time that a user can be signed in to an AWS account."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sso:PermissionSetTag"
                    }
                }
            },
            "outputs": {
                "description": {
                    "type": "string",
                    "description": "The permission set description."
                },
                "inlinePolicy": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The inline policy to put in permission set."
                },
                "instanceArn": {
                    "type": "string",
                    "description": "The sso instance arn that the permission set is owned."
                },
                "managedPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name you want to assign to this permission set."
                },
                "permissionSetArn": {
                    "type": "string",
                    "description": "The permission set that the policy will be attached to"
                },
                "relayStateType": {
                    "type": "string",
                    "description": "The relay state URL that redirect links to any service in the AWS Management Console."
                },
                "sessionDuration": {
                    "type": "string",
                    "description": "The length of time that a user can be signed in to an AWS account."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sso:PermissionSetTag"
                    }
                }
            },
            "required": [
                "instanceArn",
                "name"
            ],
            "createOnly": [
                "instanceArn",
                "name"
            ]
        },
        "aws-native:stepfunctions:StateMachine": {
            "cf": "AWS::StepFunctions::StateMachine",
            "inputs": {
                "definition": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineDefinition"
                },
                "definitionS3Location": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineS3Location"
                },
                "definitionString": {
                    "type": "string"
                },
                "definitionSubstitutions": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineDefinitionSubstitutions"
                },
                "loggingConfiguration": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineLoggingConfiguration"
                },
                "roleArn": {
                    "type": "string"
                },
                "stateMachineName": {
                    "type": "string"
                },
                "stateMachineType": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineStateMachineType"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:stepfunctions:StateMachineTagsEntry"
                    }
                },
                "tracingConfiguration": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineTracingConfiguration"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "definition": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineDefinition"
                },
                "definitionS3Location": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineS3Location"
                },
                "definitionString": {
                    "type": "string"
                },
                "definitionSubstitutions": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineDefinitionSubstitutions"
                },
                "loggingConfiguration": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineLoggingConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "stateMachineName": {
                    "type": "string"
                },
                "stateMachineType": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineStateMachineType"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:stepfunctions:StateMachineTagsEntry"
                    }
                },
                "tracingConfiguration": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineTracingConfiguration"
                }
            },
            "required": [
                "roleArn"
            ],
            "createOnly": [
                "stateMachineName"
            ]
        },
        "aws-native:synthetics:Canary": {
            "cf": "AWS::Synthetics::Canary",
            "inputs": {
                "artifactS3Location": {
                    "type": "string",
                    "description": "Provide the s3 bucket output location for test results"
                },
                "code": {
                    "$ref": "#/types/aws-native:synthetics:CanaryCode",
                    "description": "Provide the canary script source"
                },
                "executionRoleArn": {
                    "type": "string",
                    "description": "Lambda Execution role used to run your canaries"
                },
                "failureRetentionPeriod": {
                    "type": "integer",
                    "description": "Retention period of failed canary runs represented in number of days"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the canary."
                },
                "runConfig": {
                    "$ref": "#/types/aws-native:synthetics:CanaryRunConfig",
                    "description": "Provide canary run configuration"
                },
                "runtimeVersion": {
                    "type": "string",
                    "description": "Runtime version of Synthetics Library"
                },
                "schedule": {
                    "$ref": "#/types/aws-native:synthetics:CanarySchedule",
                    "description": "Frequency to run your canaries"
                },
                "startCanaryAfterCreation": {
                    "type": "boolean",
                    "description": "Runs canary if set to True. Default is False"
                },
                "successRetentionPeriod": {
                    "type": "integer",
                    "description": "Retention period of successful canary runs represented in number of days"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:synthetics:CanaryTag"
                    }
                },
                "vPCConfig": {
                    "$ref": "#/types/aws-native:synthetics:CanaryVPCConfig",
                    "description": "Provide VPC Configuration if enabled."
                },
                "visualReference": {
                    "$ref": "#/types/aws-native:synthetics:CanaryVisualReference",
                    "description": "Visual reference configuration for visual testing"
                }
            },
            "outputs": {
                "artifactS3Location": {
                    "type": "string",
                    "description": "Provide the s3 bucket output location for test results"
                },
                "code": {
                    "$ref": "#/types/aws-native:synthetics:CanaryCode",
                    "description": "Provide the canary script source"
                },
                "executionRoleArn": {
                    "type": "string",
                    "description": "Lambda Execution role used to run your canaries"
                },
                "failureRetentionPeriod": {
                    "type": "integer",
                    "description": "Retention period of failed canary runs represented in number of days"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the canary."
                },
                "runConfig": {
                    "$ref": "#/types/aws-native:synthetics:CanaryRunConfig",
                    "description": "Provide canary run configuration"
                },
                "runtimeVersion": {
                    "type": "string",
                    "description": "Runtime version of Synthetics Library"
                },
                "schedule": {
                    "$ref": "#/types/aws-native:synthetics:CanarySchedule",
                    "description": "Frequency to run your canaries"
                },
                "startCanaryAfterCreation": {
                    "type": "boolean",
                    "description": "Runs canary if set to True. Default is False"
                },
                "state": {
                    "type": "string",
                    "description": "State of the canary"
                },
                "successRetentionPeriod": {
                    "type": "integer",
                    "description": "Retention period of successful canary runs represented in number of days"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:synthetics:CanaryTag"
                    }
                },
                "vPCConfig": {
                    "$ref": "#/types/aws-native:synthetics:CanaryVPCConfig",
                    "description": "Provide VPC Configuration if enabled."
                },
                "visualReference": {
                    "$ref": "#/types/aws-native:synthetics:CanaryVisualReference",
                    "description": "Visual reference configuration for visual testing"
                }
            },
            "required": [
                "artifactS3Location",
                "code",
                "executionRoleArn",
                "name",
                "runtimeVersion",
                "schedule",
                "startCanaryAfterCreation"
            ],
            "createOnly": [
                "name"
            ]
        },
        "aws-native:timestream:Database": {
            "cf": "AWS::Timestream::Database",
            "inputs": {
                "databaseName": {
                    "type": "string",
                    "description": "The name for the database. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the database name."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key for the database. If the KMS key is not specified, the database will be encrypted with a Timestream managed KMS key located in your account."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:timestream:DatabaseTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string",
                    "description": "The name for the database. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the database name."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key for the database. If the KMS key is not specified, the database will be encrypted with a Timestream managed KMS key located in your account."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:timestream:DatabaseTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "createOnly": [
                "databaseName"
            ]
        },
        "aws-native:timestream:Table": {
            "cf": "AWS::Timestream::Table",
            "inputs": {
                "databaseName": {
                    "type": "string",
                    "description": "The name for the database which the table to be created belongs to."
                },
                "retentionProperties": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The retention duration of the memory store and the magnetic store."
                },
                "tableName": {
                    "type": "string",
                    "description": "The name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:timestream:TableTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string",
                    "description": "The name for the database which the table to be created belongs to."
                },
                "name": {
                    "type": "string",
                    "description": "The table name exposed as a read-only attribute."
                },
                "retentionProperties": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The retention duration of the memory store and the magnetic store."
                },
                "tableName": {
                    "type": "string",
                    "description": "The name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:timestream:TableTag"
                    },
                    "description": "An array of key-value pairs to apply to this resource."
                }
            },
            "required": [
                "databaseName"
            ],
            "createOnly": [
                "databaseName",
                "tableName"
            ]
        },
        "aws-native:wafv2:IPSet": {
            "cf": "AWS::WAFv2::IPSet",
            "inputs": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IPAddresses."
                },
                "description": {
                    "type": "string"
                },
                "iPAddressVersion": {
                    "$ref": "#/types/aws-native:wafv2:IPSetIPAddressVersion"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:IPSetScope"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:IPSetTag"
                    }
                }
            },
            "outputs": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IPAddresses."
                },
                "arn": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "iPAddressVersion": {
                    "$ref": "#/types/aws-native:wafv2:IPSetIPAddressVersion"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:IPSetScope"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:IPSetTag"
                    }
                }
            },
            "required": [
                "addresses",
                "iPAddressVersion",
                "scope"
            ],
            "createOnly": [
                "name",
                "scope"
            ]
        },
        "aws-native:wafv2:LoggingConfiguration": {
            "cf": "AWS::WAFv2::LoggingConfiguration",
            "inputs": {
                "logDestinationConfigs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Amazon Kinesis Data Firehose Amazon Resource Name (ARNs) that you want to associate with the web ACL."
                },
                "loggingFilter": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation."
                },
                "redactedFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:LoggingConfigurationFieldToMatch"
                    },
                    "description": "The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx."
                },
                "resourceArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs."
                }
            },
            "outputs": {
                "logDestinationConfigs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Amazon Kinesis Data Firehose Amazon Resource Name (ARNs) that you want to associate with the web ACL."
                },
                "loggingFilter": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation."
                },
                "managedByFirewallManager": {
                    "type": "boolean",
                    "description": "Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration."
                },
                "redactedFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:LoggingConfigurationFieldToMatch"
                    },
                    "description": "The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx."
                },
                "resourceArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs."
                }
            },
            "required": [
                "logDestinationConfigs",
                "resourceArn"
            ],
            "createOnly": [
                "resourceArn"
            ]
        },
        "aws-native:wafv2:RegexPatternSet": {
            "cf": "AWS::WAFv2::RegexPatternSet",
            "inputs": {
                "description": {
                    "type": "string",
                    "description": "Description of the entity."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the RegexPatternSet."
                },
                "regularExpressionList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:RegexPatternSetScope",
                    "description": "Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RegexPatternSetTag"
                    }
                }
            },
            "outputs": {
                "arn": {
                    "type": "string",
                    "description": "ARN of the WAF entity."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the entity."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the RegexPatternSet."
                },
                "regularExpressionList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:RegexPatternSetScope",
                    "description": "Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RegexPatternSetTag"
                    }
                }
            },
            "required": [
                "regularExpressionList",
                "scope"
            ],
            "createOnly": [
                "name",
                "scope"
            ]
        },
        "aws-native:wafv2:RuleGroup": {
            "cf": "AWS::WAFv2::RuleGroup",
            "inputs": {
                "capacity": {
                    "type": "integer"
                },
                "customResponseBodies": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupCustomResponseBodies"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupRule"
                    },
                    "description": "Collection of Rules."
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupScope"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupTag"
                    }
                },
                "visibilityConfig": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupVisibilityConfig"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "availableLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupLabelSummary"
                    },
                    "description": "Collection of Available Labels."
                },
                "capacity": {
                    "type": "integer"
                },
                "consumedLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupLabelSummary"
                    },
                    "description": "Collection of Consumed Labels."
                },
                "customResponseBodies": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupCustomResponseBodies"
                },
                "description": {
                    "type": "string"
                },
                "labelNamespace": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupRule"
                    },
                    "description": "Collection of Rules."
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupScope"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupTag"
                    }
                },
                "visibilityConfig": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupVisibilityConfig"
                }
            },
            "required": [
                "capacity",
                "scope",
                "visibilityConfig"
            ],
            "createOnly": [
                "name",
                "scope"
            ]
        },
        "aws-native:wafv2:WebACL": {
            "cf": "AWS::WAFv2::WebACL",
            "inputs": {
                "customResponseBodies": {
                    "$ref": "#/types/aws-native:wafv2:WebACLCustomResponseBodies"
                },
                "defaultAction": {
                    "$ref": "#/types/aws-native:wafv2:WebACLDefaultAction"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLRule"
                    },
                    "description": "Collection of Rules."
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:WebACLScope"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLTag"
                    }
                },
                "visibilityConfig": {
                    "$ref": "#/types/aws-native:wafv2:WebACLVisibilityConfig"
                }
            },
            "outputs": {
                "arn": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "customResponseBodies": {
                    "$ref": "#/types/aws-native:wafv2:WebACLCustomResponseBodies"
                },
                "defaultAction": {
                    "$ref": "#/types/aws-native:wafv2:WebACLDefaultAction"
                },
                "description": {
                    "type": "string"
                },
                "labelNamespace": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLRule"
                    },
                    "description": "Collection of Rules."
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:WebACLScope"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLTag"
                    }
                },
                "visibilityConfig": {
                    "$ref": "#/types/aws-native:wafv2:WebACLVisibilityConfig"
                }
            },
            "required": [
                "defaultAction",
                "scope",
                "visibilityConfig"
            ],
            "createOnly": [
                "name",
                "scope"
            ]
        },
        "aws-native:wafv2:WebACLAssociation": {
            "cf": "AWS::WAFv2::WebACLAssociation",
            "inputs": {
                "resourceArn": {
                    "type": "string"
                },
                "webACLArn": {
                    "type": "string"
                }
            },
            "outputs": {
                "resourceArn": {
                    "type": "string"
                },
                "webACLArn": {
                    "type": "string"
                }
            },
            "required": [
                "resourceArn",
                "webACLArn"
            ],
            "createOnly": [
                "resourceArn",
                "webACLArn"
            ]
        },
        "aws-native:workspaces:ConnectionAlias": {
            "cf": "AWS::WorkSpaces::ConnectionAlias",
            "inputs": {
                "connectionString": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:workspaces:ConnectionAliasTag"
                    }
                }
            },
            "outputs": {
                "aliasId": {
                    "type": "string"
                },
                "associations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:workspaces:ConnectionAliasConnectionAliasAssociation"
                    }
                },
                "connectionAliasState": {
                    "$ref": "#/types/aws-native:workspaces:ConnectionAliasConnectionAliasState"
                },
                "connectionString": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:workspaces:ConnectionAliasTag"
                    }
                }
            },
            "required": [
                "connectionString"
            ],
            "createOnly": [
                "connectionString",
                "tags"
            ]
        },
        "aws-native:xray:Group": {
            "cf": "AWS::XRay::Group",
            "inputs": {
                "filterExpression": {
                    "type": "string",
                    "description": "The filter expression defining criteria by which to group traces."
                },
                "groupName": {
                    "type": "string",
                    "description": "The case-sensitive name of the new group. Names must be unique."
                },
                "insightsConfiguration": {
                    "$ref": "#/types/aws-native:xray:GroupInsightsConfiguration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    }
                }
            },
            "outputs": {
                "filterExpression": {
                    "type": "string",
                    "description": "The filter expression defining criteria by which to group traces."
                },
                "groupARN": {
                    "type": "string",
                    "description": "The ARN of the group that was generated on creation."
                },
                "groupName": {
                    "type": "string",
                    "description": "The case-sensitive name of the new group. Names must be unique."
                },
                "insightsConfiguration": {
                    "$ref": "#/types/aws-native:xray:GroupInsightsConfiguration"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    }
                }
            }
        },
        "aws-native:xray:SamplingRule": {
            "cf": "AWS::XRay::SamplingRule",
            "inputs": {
                "ruleName": {
                    "type": "string"
                },
                "samplingRule": {
                    "$ref": "#/types/aws-native:xray:SamplingRuleSamplingRule",
                    "language": {
                        "csharp": {
                            "name": "SamplingRuleValue"
                        }
                    }
                },
                "samplingRuleRecord": {
                    "$ref": "#/types/aws-native:xray:SamplingRuleSamplingRuleRecord"
                },
                "samplingRuleUpdate": {
                    "$ref": "#/types/aws-native:xray:SamplingRuleSamplingRuleUpdate"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    }
                }
            },
            "outputs": {
                "ruleARN": {
                    "type": "string"
                },
                "ruleName": {
                    "type": "string"
                },
                "samplingRule": {
                    "$ref": "#/types/aws-native:xray:SamplingRuleSamplingRule",
                    "language": {
                        "csharp": {
                            "name": "SamplingRuleValue"
                        }
                    }
                },
                "samplingRuleRecord": {
                    "$ref": "#/types/aws-native:xray:SamplingRuleSamplingRuleRecord"
                },
                "samplingRuleUpdate": {
                    "$ref": "#/types/aws-native:xray:SamplingRuleSamplingRuleUpdate"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    }
                }
            }
        }
    },
    "types": {
        "aws-native:accessanalyzer:AnalyzerArchiveRule": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:accessanalyzer:AnalyzerFilter"
                    }
                },
                "ruleName": {
                    "type": "string",
                    "description": "The archive rule name"
                }
            }
        },
        "aws-native:accessanalyzer:AnalyzerFilter": {
            "type": "object",
            "properties": {
                "contains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "eq": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exists": {
                    "type": "boolean"
                },
                "neq": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "property": {
                    "type": "string"
                }
            }
        },
        "aws-native:accessanalyzer:AnalyzerTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:acmpca:CertificateApiPassthrough": {
            "type": "object",
            "properties": {
                "extensions": {
                    "$ref": "#/types/aws-native:acmpca:CertificateExtensions"
                },
                "subject": {
                    "$ref": "#/types/aws-native:acmpca:CertificateSubject"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityAccessDescription": {
            "type": "object",
            "properties": {
                "accessLocation": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityGeneralName"
                },
                "accessMethod": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityAccessMethod"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityAccessMethod": {
            "type": "object",
            "properties": {
                "accessMethodType": {
                    "type": "string"
                },
                "customObjectIdentifier": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityCrlConfiguration": {
            "type": "object",
            "properties": {
                "customCname": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "expirationInDays": {
                    "type": "integer"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3ObjectAcl": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityCsrExtensions": {
            "type": "object",
            "properties": {
                "keyUsage": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityKeyUsage"
                },
                "subjectInformationAccess": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:acmpca:CertificateAuthorityAccessDescription"
                    }
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityEdiPartyName": {
            "type": "object",
            "properties": {
                "nameAssigner": {
                    "type": "string"
                },
                "partyName": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityGeneralName": {
            "type": "object",
            "properties": {
                "directoryName": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthoritySubject"
                },
                "dnsName": {
                    "type": "string"
                },
                "ediPartyName": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityEdiPartyName"
                },
                "ipAddress": {
                    "type": "string"
                },
                "otherName": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityOtherName"
                },
                "registeredId": {
                    "type": "string"
                },
                "rfc822Name": {
                    "type": "string"
                },
                "uniformResourceIdentifier": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityKeyUsage": {
            "type": "object",
            "properties": {
                "cRLSign": {
                    "type": "boolean"
                },
                "dataEncipherment": {
                    "type": "boolean"
                },
                "decipherOnly": {
                    "type": "boolean"
                },
                "digitalSignature": {
                    "type": "boolean"
                },
                "encipherOnly": {
                    "type": "boolean"
                },
                "keyAgreement": {
                    "type": "boolean"
                },
                "keyCertSign": {
                    "type": "boolean"
                },
                "keyEncipherment": {
                    "type": "boolean"
                },
                "nonRepudiation": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityOcspConfiguration": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "ocspCustomCname": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityOtherName": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityRevocationConfiguration": {
            "type": "object",
            "properties": {
                "crlConfiguration": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityCrlConfiguration"
                },
                "ocspConfiguration": {
                    "$ref": "#/types/aws-native:acmpca:CertificateAuthorityOcspConfiguration"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthoritySubject": {
            "type": "object",
            "properties": {
                "commonName": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "distinguishedNameQualifier": {
                    "type": "string"
                },
                "generationQualifier": {
                    "type": "string"
                },
                "givenName": {
                    "type": "string"
                },
                "initials": {
                    "type": "string"
                },
                "locality": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "organizationalUnit": {
                    "type": "string"
                },
                "pseudonym": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateAuthorityTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateEdiPartyName": {
            "type": "object",
            "properties": {
                "nameAssigner": {
                    "type": "string"
                },
                "partyName": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateExtendedKeyUsage": {
            "type": "object",
            "properties": {
                "extendedKeyUsageObjectIdentifier": {
                    "type": "string"
                },
                "extendedKeyUsageType": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateExtensions": {
            "type": "object",
            "properties": {
                "certificatePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:acmpca:CertificatePolicyInformation"
                    }
                },
                "extendedKeyUsage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:acmpca:CertificateExtendedKeyUsage"
                    }
                },
                "keyUsage": {
                    "$ref": "#/types/aws-native:acmpca:CertificateKeyUsage"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:acmpca:CertificateGeneralName"
                    }
                }
            }
        },
        "aws-native:acmpca:CertificateGeneralName": {
            "type": "object",
            "properties": {
                "directoryName": {
                    "$ref": "#/types/aws-native:acmpca:CertificateSubject"
                },
                "dnsName": {
                    "type": "string"
                },
                "ediPartyName": {
                    "$ref": "#/types/aws-native:acmpca:CertificateEdiPartyName"
                },
                "ipAddress": {
                    "type": "string"
                },
                "otherName": {
                    "$ref": "#/types/aws-native:acmpca:CertificateOtherName"
                },
                "registeredId": {
                    "type": "string"
                },
                "rfc822Name": {
                    "type": "string"
                },
                "uniformResourceIdentifier": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateKeyUsage": {
            "type": "object",
            "properties": {
                "cRLSign": {
                    "type": "boolean"
                },
                "dataEncipherment": {
                    "type": "boolean"
                },
                "decipherOnly": {
                    "type": "boolean"
                },
                "digitalSignature": {
                    "type": "boolean"
                },
                "encipherOnly": {
                    "type": "boolean"
                },
                "keyAgreement": {
                    "type": "boolean"
                },
                "keyCertSign": {
                    "type": "boolean"
                },
                "keyEncipherment": {
                    "type": "boolean"
                },
                "nonRepudiation": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:acmpca:CertificateOtherName": {
            "type": "object",
            "properties": {
                "typeId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificatePolicyInformation": {
            "type": "object",
            "properties": {
                "certPolicyId": {
                    "type": "string"
                },
                "policyQualifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:acmpca:CertificatePolicyQualifierInfo"
                    }
                }
            }
        },
        "aws-native:acmpca:CertificatePolicyQualifierInfo": {
            "type": "object",
            "properties": {
                "policyQualifierId": {
                    "type": "string"
                },
                "qualifier": {
                    "$ref": "#/types/aws-native:acmpca:CertificateQualifier"
                }
            }
        },
        "aws-native:acmpca:CertificateQualifier": {
            "type": "object",
            "properties": {
                "cpsUri": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateSubject": {
            "type": "object",
            "properties": {
                "commonName": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "distinguishedNameQualifier": {
                    "type": "string"
                },
                "generationQualifier": {
                    "type": "string"
                },
                "givenName": {
                    "type": "string"
                },
                "initials": {
                    "type": "string"
                },
                "locality": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "organizationalUnit": {
                    "type": "string"
                },
                "pseudonym": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "aws-native:acmpca:CertificateValidity": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "aws-native:amplify:AppAutoBranchCreationConfig": {
            "type": "object",
            "properties": {
                "autoBranchCreationPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "basicAuthConfig": {
                    "$ref": "#/types/aws-native:amplify:AppBasicAuthConfig"
                },
                "buildSpec": {
                    "type": "string"
                },
                "enableAutoBranchCreation": {
                    "type": "boolean"
                },
                "enableAutoBuild": {
                    "type": "boolean"
                },
                "enablePerformanceMode": {
                    "type": "boolean"
                },
                "enablePullRequestPreview": {
                    "type": "boolean"
                },
                "environmentVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:amplify:AppEnvironmentVariable"
                    }
                },
                "pullRequestEnvironmentName": {
                    "type": "string"
                },
                "stage": {
                    "$ref": "#/types/aws-native:amplify:AppAutoBranchCreationConfigStage"
                }
            }
        },
        "aws-native:amplify:AppAutoBranchCreationConfigStage": {
            "type": "string"
        },
        "aws-native:amplify:AppBasicAuthConfig": {
            "type": "object",
            "properties": {
                "enableBasicAuth": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "aws-native:amplify:AppCustomRule": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "aws-native:amplify:AppEnvironmentVariable": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:amplify:AppTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:amplify:BranchBasicAuthConfig": {
            "type": "object",
            "properties": {
                "enableBasicAuth": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "aws-native:amplify:BranchEnvironmentVariable": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:amplify:BranchStage": {
            "type": "string"
        },
        "aws-native:amplify:BranchTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:amplify:DomainSubDomainSetting": {
            "type": "object",
            "properties": {
                "branchName": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                }
            }
        },
        "aws-native:apigateway:ApiKeyStageKey": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "type": "string",
                    "description": "The ID of a RestApi resource that includes the stage with which you want to associate the API key."
                },
                "stageName": {
                    "type": "string",
                    "description": "The name of the stage with which to associate the API key. The stage must be included in the RestApi resource that you specified in the RestApiId property. "
                }
            }
        },
        "aws-native:apigateway:ApiKeyTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:apigateway:ClientCertificateTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:apigateway:DomainNameEndpointConfiguration": {
            "type": "object",
            "properties": {
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:apigateway:DomainNameMutualTlsAuthentication": {
            "type": "object",
            "properties": {
                "truststoreUri": {
                    "type": "string"
                },
                "truststoreVersion": {
                    "type": "string"
                }
            }
        },
        "aws-native:apigateway:DomainNameTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:apigateway:UsagePlanApiStage": {
            "type": "object",
            "properties": {
                "apiId": {
                    "type": "string",
                    "description": "The ID of an API that is in the specified Stage property that you want to associate with the usage plan."
                },
                "stage": {
                    "type": "string",
                    "description": "The name of the stage to associate with the usage plan."
                },
                "throttle": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Map containing method-level throttling information for an API stage in a usage plan. The key for the map is the path and method for which to configure custom throttling, for example, '/pets/GET'. Duplicates are not allowed."
                }
            }
        },
        "aws-native:apigateway:UsagePlanKeyKeyType": {
            "type": "string"
        },
        "aws-native:apigateway:UsagePlanQuotaSettings": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of requests that users can make within the specified time period."
                },
                "offset": {
                    "type": "integer",
                    "description": "For the initial time period, the number of requests to subtract from the specified limit. When you first implement a usage plan, the plan might start in the middle of the week or month. With this property, you can decrease the limit for this initial time period."
                },
                "period": {
                    "type": "string",
                    "description": "The time period for which the maximum limit of requests applies, such as DAY or WEEK. For valid values, see the period property for the UsagePlan resource in the Amazon API Gateway REST API Reference."
                }
            }
        },
        "aws-native:apigateway:UsagePlanTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:apigateway:UsagePlanThrottleSettings": {
            "type": "object",
            "properties": {
                "burstLimit": {
                    "type": "integer",
                    "description": "The maximum API request rate limit over a time ranging from one to a few seconds. The maximum API request rate limit depends on whether the underlying token bucket is at its full capacity."
                },
                "rateLimit": {
                    "type": "number",
                    "description": "The API request steady-state rate limit (average requests per second over an extended period of time)."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileAmplitudeConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API."
                },
                "secretKey": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileConnectionMode": {
            "type": "string"
        },
        "aws-native:appflow:ConnectorProfileConnectorOAuthRequest": {
            "type": "object",
            "properties": {
                "authCode": {
                    "type": "string",
                    "description": "The code provided by the connector when it has been authenticated via the connected app."
                },
                "redirectUri": {
                    "type": "string",
                    "description": "The URL to which the authentication server redirects the browser after authorization has been\ngranted."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileConnectorProfileConfig": {
            "type": "object",
            "properties": {
                "connectorProfileCredentials": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorProfileCredentials"
                },
                "connectorProfileProperties": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorProfileProperties"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "amplitude": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileAmplitudeConnectorProfileCredentials"
                },
                "datadog": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileDatadogConnectorProfileCredentials"
                },
                "dynatrace": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileDynatraceConnectorProfileCredentials"
                },
                "googleAnalytics": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileGoogleAnalyticsConnectorProfileCredentials"
                },
                "inforNexus": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileInforNexusConnectorProfileCredentials"
                },
                "marketo": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileMarketoConnectorProfileCredentials"
                },
                "redshift": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileRedshiftConnectorProfileCredentials"
                },
                "salesforce": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileSalesforceConnectorProfileCredentials"
                },
                "serviceNow": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileServiceNowConnectorProfileCredentials"
                },
                "singular": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileSingularConnectorProfileCredentials"
                },
                "slack": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileSlackConnectorProfileCredentials"
                },
                "snowflake": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileSnowflakeConnectorProfileCredentials"
                },
                "trendmicro": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileTrendmicroConnectorProfileCredentials"
                },
                "veeva": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileVeevaConnectorProfileCredentials"
                },
                "zendesk": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileZendeskConnectorProfileCredentials"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "datadog": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileDatadogConnectorProfileProperties"
                },
                "dynatrace": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileDynatraceConnectorProfileProperties"
                },
                "inforNexus": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileInforNexusConnectorProfileProperties"
                },
                "marketo": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileMarketoConnectorProfileProperties"
                },
                "redshift": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileRedshiftConnectorProfileProperties"
                },
                "salesforce": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileSalesforceConnectorProfileProperties"
                },
                "serviceNow": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileServiceNowConnectorProfileProperties"
                },
                "slack": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileSlackConnectorProfileProperties"
                },
                "snowflake": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileSnowflakeConnectorProfileProperties"
                },
                "veeva": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileVeevaConnectorProfileProperties"
                },
                "zendesk": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileZendeskConnectorProfileProperties"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileConnectorType": {
            "type": "string"
        },
        "aws-native:appflow:ConnectorProfileDatadogConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API."
                },
                "applicationKey": {
                    "type": "string",
                    "description": "Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileDatadogConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "instanceUrl": {
                    "type": "string",
                    "description": "The location of the Datadog resource"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileDynatraceConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "The API tokens used by Dynatrace API to authenticate various API calls."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileDynatraceConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "instanceUrl": {
                    "type": "string",
                    "description": "The location of the Dynatrace resource"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileGoogleAnalyticsConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The credentials used to access protected resources."
                },
                "clientId": {
                    "type": "string",
                    "description": "The identiﬁer for the desired client."
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret used by the oauth client to authenticate to the authorization server."
                },
                "connectorOAuthRequest": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorOAuthRequest",
                    "description": "The oauth needed to request security tokens from the connector endpoint."
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The credentials used to acquire new access tokens."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileInforNexusConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "The Access Key portion of the credentials."
                },
                "datakey": {
                    "type": "string",
                    "description": "The encryption keys used to encrypt data."
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The secret key used to sign requests."
                },
                "userId": {
                    "type": "string",
                    "description": "The identiﬁer for the user."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileInforNexusConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "instanceUrl": {
                    "type": "string",
                    "description": "The location of the InforNexus resource"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileMarketoConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The credentials used to access protected resources."
                },
                "clientId": {
                    "type": "string",
                    "description": "The identiﬁer for the desired client."
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret used by the oauth client to authenticate to the authorization server."
                },
                "connectorOAuthRequest": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorOAuthRequest",
                    "description": "The oauth needed to request security tokens from the connector endpoint."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileMarketoConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "instanceUrl": {
                    "type": "string",
                    "description": "The location of the Marketo resource"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileRedshiftConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password that corresponds to the username."
                },
                "username": {
                    "type": "string",
                    "description": "The name of the user."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileRedshiftConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "The name of the Amazon S3 bucket associated with Redshift."
                },
                "bucketPrefix": {
                    "type": "string",
                    "description": "The object key for the destination bucket in which Amazon AppFlow will place the ﬁles."
                },
                "databaseUrl": {
                    "type": "string",
                    "description": "The JDBC URL of the Amazon Redshift cluster."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM role."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileSalesforceConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The credentials used to access protected resources."
                },
                "clientCredentialsArn": {
                    "type": "string",
                    "description": "The client credentials to fetch access token and refresh token."
                },
                "connectorOAuthRequest": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorOAuthRequest",
                    "description": "The oauth needed to request security tokens from the connector endpoint."
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The credentials used to acquire new access tokens."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileSalesforceConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "instanceUrl": {
                    "type": "string",
                    "description": "The location of the Salesforce resource"
                },
                "isSandboxEnvironment": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileServiceNowConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password that corresponds to the username."
                },
                "username": {
                    "type": "string",
                    "description": "The name of the user."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileServiceNowConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "instanceUrl": {
                    "type": "string",
                    "description": "The location of the ServiceNow resource"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileSingularConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileSlackConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The credentials used to access protected resources."
                },
                "clientId": {
                    "type": "string",
                    "description": "The identiﬁer for the desired client."
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret used by the oauth client to authenticate to the authorization server."
                },
                "connectorOAuthRequest": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorOAuthRequest",
                    "description": "The oauth needed to request security tokens from the connector endpoint."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileSlackConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "instanceUrl": {
                    "type": "string",
                    "description": "The location of the Slack resource"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileSnowflakeConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password that corresponds to the username."
                },
                "username": {
                    "type": "string",
                    "description": "The name of the user."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileSnowflakeConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "The name of the account."
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the Amazon S3 bucket associated with Snowﬂake."
                },
                "bucketPrefix": {
                    "type": "string",
                    "description": "The bucket prefix that refers to the Amazon S3 bucket associated with Snowﬂake."
                },
                "privateLinkServiceName": {
                    "type": "string",
                    "description": "The Snowﬂake Private Link service name to be used for private data transfers."
                },
                "region": {
                    "type": "string",
                    "description": "The region of the Snowﬂake account."
                },
                "stage": {
                    "type": "string",
                    "description": "The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the\nSnowﬂake account. This is written in the following format: \u003c Database\u003e\u003c Schema\u003e\u003cStage Name\u003e."
                },
                "warehouse": {
                    "type": "string",
                    "description": "The name of the Snowﬂake warehouse."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileTrendmicroConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "apiSecretKey": {
                    "type": "string",
                    "description": "The Secret Access Key portion of the credentials."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileVeevaConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password that corresponds to the username."
                },
                "username": {
                    "type": "string",
                    "description": "The name of the user."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileVeevaConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "instanceUrl": {
                    "type": "string",
                    "description": "The location of the Veeva resource"
                }
            }
        },
        "aws-native:appflow:ConnectorProfileZendeskConnectorProfileCredentials": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The credentials used to access protected resources."
                },
                "clientId": {
                    "type": "string",
                    "description": "The identiﬁer for the desired client."
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret used by the oauth client to authenticate to the authorization server."
                },
                "connectorOAuthRequest": {
                    "$ref": "#/types/aws-native:appflow:ConnectorProfileConnectorOAuthRequest",
                    "description": "The oauth needed to request security tokens from the connector endpoint."
                }
            }
        },
        "aws-native:appflow:ConnectorProfileZendeskConnectorProfileProperties": {
            "type": "object",
            "properties": {
                "instanceUrl": {
                    "type": "string",
                    "description": "The location of the Zendesk resource"
                }
            }
        },
        "aws-native:appflow:FlowAggregationConfig": {
            "type": "object",
            "properties": {
                "aggregationType": {
                    "$ref": "#/types/aws-native:appflow:FlowAggregationType"
                }
            }
        },
        "aws-native:appflow:FlowAggregationType": {
            "type": "string"
        },
        "aws-native:appflow:FlowAmplitudeConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowAmplitudeSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowConnectorOperator": {
            "type": "object",
            "properties": {
                "amplitude": {
                    "$ref": "#/types/aws-native:appflow:FlowAmplitudeConnectorOperator"
                },
                "datadog": {
                    "$ref": "#/types/aws-native:appflow:FlowDatadogConnectorOperator"
                },
                "dynatrace": {
                    "$ref": "#/types/aws-native:appflow:FlowDynatraceConnectorOperator"
                },
                "googleAnalytics": {
                    "$ref": "#/types/aws-native:appflow:FlowGoogleAnalyticsConnectorOperator"
                },
                "inforNexus": {
                    "$ref": "#/types/aws-native:appflow:FlowInforNexusConnectorOperator"
                },
                "marketo": {
                    "$ref": "#/types/aws-native:appflow:FlowMarketoConnectorOperator"
                },
                "s3": {
                    "$ref": "#/types/aws-native:appflow:FlowS3ConnectorOperator"
                },
                "salesforce": {
                    "$ref": "#/types/aws-native:appflow:FlowSalesforceConnectorOperator"
                },
                "serviceNow": {
                    "$ref": "#/types/aws-native:appflow:FlowServiceNowConnectorOperator"
                },
                "singular": {
                    "$ref": "#/types/aws-native:appflow:FlowSingularConnectorOperator"
                },
                "slack": {
                    "$ref": "#/types/aws-native:appflow:FlowSlackConnectorOperator"
                },
                "trendmicro": {
                    "$ref": "#/types/aws-native:appflow:FlowTrendmicroConnectorOperator"
                },
                "veeva": {
                    "$ref": "#/types/aws-native:appflow:FlowVeevaConnectorOperator"
                },
                "zendesk": {
                    "$ref": "#/types/aws-native:appflow:FlowZendeskConnectorOperator"
                }
            }
        },
        "aws-native:appflow:FlowConnectorType": {
            "type": "string"
        },
        "aws-native:appflow:FlowDatadogConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowDatadogSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowDestinationConnectorProperties": {
            "type": "object",
            "properties": {
                "eventBridge": {
                    "$ref": "#/types/aws-native:appflow:FlowEventBridgeDestinationProperties"
                },
                "lookoutMetrics": {
                    "$ref": "#/types/aws-native:appflow:FlowLookoutMetricsDestinationProperties"
                },
                "redshift": {
                    "$ref": "#/types/aws-native:appflow:FlowRedshiftDestinationProperties"
                },
                "s3": {
                    "$ref": "#/types/aws-native:appflow:FlowS3DestinationProperties"
                },
                "salesforce": {
                    "$ref": "#/types/aws-native:appflow:FlowSalesforceDestinationProperties"
                },
                "snowflake": {
                    "$ref": "#/types/aws-native:appflow:FlowSnowflakeDestinationProperties"
                },
                "upsolver": {
                    "$ref": "#/types/aws-native:appflow:FlowUpsolverDestinationProperties"
                },
                "zendesk": {
                    "$ref": "#/types/aws-native:appflow:FlowZendeskDestinationProperties"
                }
            }
        },
        "aws-native:appflow:FlowDestinationFlowConfig": {
            "type": "object",
            "properties": {
                "connectorProfileName": {
                    "type": "string",
                    "description": "Name of destination connector profile"
                },
                "connectorType": {
                    "$ref": "#/types/aws-native:appflow:FlowConnectorType",
                    "description": "Destination connector type"
                },
                "destinationConnectorProperties": {
                    "$ref": "#/types/aws-native:appflow:FlowDestinationConnectorProperties",
                    "description": "Destination connector details"
                }
            }
        },
        "aws-native:appflow:FlowDynatraceConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowDynatraceSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowErrorHandlingConfig": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                },
                "failOnFirstError": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:appflow:FlowEventBridgeDestinationProperties": {
            "type": "object",
            "properties": {
                "errorHandlingConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowErrorHandlingConfig"
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowFileType": {
            "type": "string"
        },
        "aws-native:appflow:FlowGoogleAnalyticsConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowGoogleAnalyticsSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowIncrementalPullConfig": {
            "type": "object",
            "properties": {
                "datetimeTypeFieldName": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowInforNexusConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowInforNexusSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowLookoutMetricsDestinationProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowMarketoConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowMarketoSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowOperatorPropertiesKeys": {
            "type": "string"
        },
        "aws-native:appflow:FlowPrefixConfig": {
            "type": "object",
            "properties": {
                "prefixFormat": {
                    "$ref": "#/types/aws-native:appflow:FlowPrefixFormat"
                },
                "prefixType": {
                    "$ref": "#/types/aws-native:appflow:FlowPrefixType"
                }
            }
        },
        "aws-native:appflow:FlowPrefixFormat": {
            "type": "string"
        },
        "aws-native:appflow:FlowPrefixType": {
            "type": "string"
        },
        "aws-native:appflow:FlowRedshiftDestinationProperties": {
            "type": "object",
            "properties": {
                "bucketPrefix": {
                    "type": "string"
                },
                "errorHandlingConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowErrorHandlingConfig"
                },
                "intermediateBucketName": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowS3ConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowS3DestinationProperties": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                },
                "s3OutputFormatConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowS3OutputFormatConfig"
                }
            }
        },
        "aws-native:appflow:FlowS3OutputFormatConfig": {
            "type": "object",
            "properties": {
                "aggregationConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowAggregationConfig"
                },
                "fileType": {
                    "$ref": "#/types/aws-native:appflow:FlowFileType"
                },
                "prefixConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowPrefixConfig"
                }
            }
        },
        "aws-native:appflow:FlowS3SourceProperties": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowSalesforceConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowSalesforceDestinationProperties": {
            "type": "object",
            "properties": {
                "errorHandlingConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowErrorHandlingConfig"
                },
                "idFieldNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields used as ID when performing a write operation."
                },
                "object": {
                    "type": "string"
                },
                "writeOperationType": {
                    "$ref": "#/types/aws-native:appflow:FlowWriteOperationType"
                }
            }
        },
        "aws-native:appflow:FlowSalesforceSourceProperties": {
            "type": "object",
            "properties": {
                "enableDynamicFieldUpdate": {
                    "type": "boolean"
                },
                "includeDeletedRecords": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowScheduledTriggerProperties": {
            "type": "object",
            "properties": {
                "dataPullMode": {
                    "$ref": "#/types/aws-native:appflow:FlowScheduledTriggerPropertiesDataPullMode"
                },
                "scheduleEndTime": {
                    "type": "number"
                },
                "scheduleExpression": {
                    "type": "string"
                },
                "scheduleOffset": {
                    "type": "number"
                },
                "scheduleStartTime": {
                    "type": "number"
                },
                "timeZone": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowScheduledTriggerPropertiesDataPullMode": {
            "type": "string"
        },
        "aws-native:appflow:FlowServiceNowConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowServiceNowSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowSingularConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowSingularSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowSlackConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowSlackSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowSnowflakeDestinationProperties": {
            "type": "object",
            "properties": {
                "bucketPrefix": {
                    "type": "string"
                },
                "errorHandlingConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowErrorHandlingConfig"
                },
                "intermediateBucketName": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowSourceConnectorProperties": {
            "type": "object",
            "properties": {
                "amplitude": {
                    "$ref": "#/types/aws-native:appflow:FlowAmplitudeSourceProperties"
                },
                "datadog": {
                    "$ref": "#/types/aws-native:appflow:FlowDatadogSourceProperties"
                },
                "dynatrace": {
                    "$ref": "#/types/aws-native:appflow:FlowDynatraceSourceProperties"
                },
                "googleAnalytics": {
                    "$ref": "#/types/aws-native:appflow:FlowGoogleAnalyticsSourceProperties"
                },
                "inforNexus": {
                    "$ref": "#/types/aws-native:appflow:FlowInforNexusSourceProperties"
                },
                "marketo": {
                    "$ref": "#/types/aws-native:appflow:FlowMarketoSourceProperties"
                },
                "s3": {
                    "$ref": "#/types/aws-native:appflow:FlowS3SourceProperties"
                },
                "salesforce": {
                    "$ref": "#/types/aws-native:appflow:FlowSalesforceSourceProperties"
                },
                "serviceNow": {
                    "$ref": "#/types/aws-native:appflow:FlowServiceNowSourceProperties"
                },
                "singular": {
                    "$ref": "#/types/aws-native:appflow:FlowSingularSourceProperties"
                },
                "slack": {
                    "$ref": "#/types/aws-native:appflow:FlowSlackSourceProperties"
                },
                "trendmicro": {
                    "$ref": "#/types/aws-native:appflow:FlowTrendmicroSourceProperties"
                },
                "veeva": {
                    "$ref": "#/types/aws-native:appflow:FlowVeevaSourceProperties"
                },
                "zendesk": {
                    "$ref": "#/types/aws-native:appflow:FlowZendeskSourceProperties"
                }
            }
        },
        "aws-native:appflow:FlowSourceFlowConfig": {
            "type": "object",
            "properties": {
                "connectorProfileName": {
                    "type": "string",
                    "description": "Name of source connector profile"
                },
                "connectorType": {
                    "$ref": "#/types/aws-native:appflow:FlowConnectorType",
                    "description": "Type of source connector"
                },
                "incrementalPullConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowIncrementalPullConfig",
                    "description": "Configuration for scheduled incremental data pull"
                },
                "sourceConnectorProperties": {
                    "$ref": "#/types/aws-native:appflow:FlowSourceConnectorProperties",
                    "description": "Source connector details required to query a connector"
                }
            }
        },
        "aws-native:appflow:FlowTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A string used to identify this tag"
                },
                "value": {
                    "type": "string",
                    "description": "A string containing the value for the tag"
                }
            }
        },
        "aws-native:appflow:FlowTask": {
            "type": "object",
            "properties": {
                "connectorOperator": {
                    "$ref": "#/types/aws-native:appflow:FlowConnectorOperator",
                    "description": "Operation to be performed on provided source fields"
                },
                "destinationField": {
                    "type": "string",
                    "description": "A field value on which source field should be validated"
                },
                "sourceFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source fields on which particular task will be applied"
                },
                "taskProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appflow:FlowTaskPropertiesObject"
                    },
                    "description": "A Map used to store task related info"
                },
                "taskType": {
                    "$ref": "#/types/aws-native:appflow:FlowTaskType",
                    "description": "Type of task"
                }
            }
        },
        "aws-native:appflow:FlowTaskPropertiesObject": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/types/aws-native:appflow:FlowOperatorPropertiesKeys"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowTaskType": {
            "type": "string"
        },
        "aws-native:appflow:FlowTrendmicroConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowTrendmicroSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowTriggerConfig": {
            "type": "object",
            "properties": {
                "triggerProperties": {
                    "$ref": "#/types/aws-native:appflow:FlowScheduledTriggerProperties",
                    "description": "Details required based on the type of trigger"
                },
                "triggerType": {
                    "$ref": "#/types/aws-native:appflow:FlowTriggerType",
                    "description": "Trigger type of the flow"
                }
            }
        },
        "aws-native:appflow:FlowTriggerType": {
            "type": "string"
        },
        "aws-native:appflow:FlowUpsolverDestinationProperties": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                },
                "s3OutputFormatConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowUpsolverS3OutputFormatConfig"
                }
            }
        },
        "aws-native:appflow:FlowUpsolverS3OutputFormatConfig": {
            "type": "object",
            "properties": {
                "aggregationConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowAggregationConfig"
                },
                "fileType": {
                    "$ref": "#/types/aws-native:appflow:FlowFileType"
                },
                "prefixConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowPrefixConfig"
                }
            }
        },
        "aws-native:appflow:FlowVeevaConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowVeevaSourceProperties": {
            "type": "object",
            "properties": {
                "documentType": {
                    "type": "string"
                },
                "includeAllVersions": {
                    "type": "boolean"
                },
                "includeRenditions": {
                    "type": "boolean"
                },
                "includeSourceFiles": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appflow:FlowWriteOperationType": {
            "type": "string"
        },
        "aws-native:appflow:FlowZendeskConnectorOperator": {
            "type": "string"
        },
        "aws-native:appflow:FlowZendeskDestinationProperties": {
            "type": "object",
            "properties": {
                "errorHandlingConfig": {
                    "$ref": "#/types/aws-native:appflow:FlowErrorHandlingConfig"
                },
                "idFieldNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields used as ID when performing a write operation."
                },
                "object": {
                    "type": "string"
                },
                "writeOperationType": {
                    "$ref": "#/types/aws-native:appflow:FlowWriteOperationType"
                }
            }
        },
        "aws-native:appflow:FlowZendeskSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:appintegrations:EventIntegrationEventFilter": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "string",
                    "description": "The source of the events."
                }
            }
        },
        "aws-native:appintegrations:EventIntegrationEventIntegrationAssociation": {
            "type": "object",
            "properties": {
                "clientAssociationMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:appintegrations:EventIntegrationMetadata"
                    },
                    "description": "The metadata associated with the client."
                },
                "clientId": {
                    "type": "string",
                    "description": "The identifier for the client that is associated with the event integration."
                },
                "eventBridgeRuleName": {
                    "type": "string",
                    "description": "The name of the Eventbridge rule."
                },
                "eventIntegrationAssociationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the event integration association."
                },
                "eventIntegrationAssociationId": {
                    "type": "string",
                    "description": "The identifier for the event integration association."
                }
            }
        },
        "aws-native:appintegrations:EventIntegrationMetadata": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A key to identify the metadata."
                },
                "value": {
                    "type": "string",
                    "description": "Corresponding metadata value for the key."
                }
            }
        },
        "aws-native:appintegrations:EventIntegrationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A key to identify the tag."
                },
                "value": {
                    "type": "string",
                    "description": "Corresponding tag value for the key."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationAlarm": {
            "type": "object",
            "properties": {
                "alarmName": {
                    "type": "string",
                    "description": "The name of the CloudWatch alarm to be monitored for the component."
                },
                "severity": {
                    "$ref": "#/types/aws-native:applicationinsights:ApplicationAlarmSeverity",
                    "description": "Indicates the degree of outage when the alarm goes off."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationAlarmMetric": {
            "type": "object",
            "properties": {
                "alarmMetricName": {
                    "type": "string",
                    "description": "The name of the metric to be monitored for the component."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationAlarmSeverity": {
            "type": "string"
        },
        "aws-native:applicationinsights:ApplicationComponentConfiguration": {
            "type": "object",
            "properties": {
                "configurationDetails": {
                    "$ref": "#/types/aws-native:applicationinsights:ApplicationConfigurationDetails",
                    "description": "The configuration settings"
                },
                "subComponentTypeConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationSubComponentTypeConfiguration"
                    },
                    "description": "Sub component configurations of the component."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationComponentMonitoringSetting": {
            "type": "object",
            "properties": {
                "componentARN": {
                    "type": "string",
                    "description": "The ARN of the compnonent."
                },
                "componentConfigurationMode": {
                    "$ref": "#/types/aws-native:applicationinsights:ApplicationComponentMonitoringSettingComponentConfigurationMode",
                    "description": "The component monitoring configuration mode."
                },
                "componentName": {
                    "type": "string",
                    "description": "The name of the component."
                },
                "customComponentConfiguration": {
                    "$ref": "#/types/aws-native:applicationinsights:ApplicationComponentConfiguration",
                    "description": "The monitoring configuration of the component."
                },
                "defaultOverwriteComponentConfiguration": {
                    "$ref": "#/types/aws-native:applicationinsights:ApplicationComponentConfiguration",
                    "description": "The overwritten settings on default component monitoring configuration."
                },
                "tier": {
                    "type": "string",
                    "description": "The tier of the application component."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationComponentMonitoringSettingComponentConfigurationMode": {
            "type": "string"
        },
        "aws-native:applicationinsights:ApplicationConfigurationDetails": {
            "type": "object",
            "properties": {
                "alarmMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationAlarmMetric"
                    },
                    "description": "A list of metrics to monitor for the component."
                },
                "alarms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationAlarm"
                    },
                    "description": "A list of alarms to monitor for the component."
                },
                "jMXPrometheusExporter": {
                    "$ref": "#/types/aws-native:applicationinsights:ApplicationJMXPrometheusExporter",
                    "description": "The JMX Prometheus Exporter settings."
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationLog"
                    },
                    "description": "A list of logs to monitor for the component."
                },
                "windowsEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationWindowsEvent"
                    },
                    "description": "A list of Windows Events to log."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationCustomComponent": {
            "type": "object",
            "properties": {
                "componentName": {
                    "type": "string",
                    "description": "The name of the component."
                },
                "resourceList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of resource ARNs that belong to the component."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationEventLevel": {
            "type": "string"
        },
        "aws-native:applicationinsights:ApplicationJMXPrometheusExporter": {
            "type": "object",
            "properties": {
                "hostPort": {
                    "type": "string",
                    "description": "Java agent host port"
                },
                "jMXURL": {
                    "type": "string",
                    "description": "JMX service URL."
                },
                "prometheusPort": {
                    "type": "string",
                    "description": "Prometheus exporter port"
                }
            }
        },
        "aws-native:applicationinsights:ApplicationLog": {
            "type": "object",
            "properties": {
                "encoding": {
                    "$ref": "#/types/aws-native:applicationinsights:ApplicationLogEncoding",
                    "description": "The type of encoding of the logs to be monitored."
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The CloudWatch log group name to be associated to the monitored log."
                },
                "logPath": {
                    "type": "string",
                    "description": "The path of the logs to be monitored."
                },
                "logType": {
                    "type": "string",
                    "description": "The log type decides the log patterns against which Application Insights analyzes the log."
                },
                "patternSet": {
                    "type": "string",
                    "description": "The name of the log pattern set."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationLogEncoding": {
            "type": "string"
        },
        "aws-native:applicationinsights:ApplicationLogPattern": {
            "type": "object",
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "The log pattern."
                },
                "patternName": {
                    "type": "string",
                    "description": "The name of the log pattern."
                },
                "rank": {
                    "type": "integer",
                    "description": "Rank of the log pattern."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationLogPatternSet": {
            "type": "object",
            "properties": {
                "logPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationLogPattern"
                    },
                    "description": "The log patterns of a set."
                },
                "patternSetName": {
                    "type": "string",
                    "description": "The name of the log pattern set."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationSubComponentConfigurationDetails": {
            "type": "object",
            "properties": {
                "alarmMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationAlarmMetric"
                    },
                    "description": "A list of metrics to monitor for the component."
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationLog"
                    },
                    "description": "A list of logs to monitor for the component."
                },
                "windowsEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationWindowsEvent"
                    },
                    "description": "A list of Windows Events to log."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationSubComponentTypeConfiguration": {
            "type": "object",
            "properties": {
                "subComponentConfigurationDetails": {
                    "$ref": "#/types/aws-native:applicationinsights:ApplicationSubComponentConfigurationDetails",
                    "description": "The configuration settings of sub components."
                },
                "subComponentType": {
                    "$ref": "#/types/aws-native:applicationinsights:ApplicationSubComponentTypeConfigurationSubComponentType",
                    "description": "The sub component type."
                }
            }
        },
        "aws-native:applicationinsights:ApplicationSubComponentTypeConfigurationSubComponentType": {
            "type": "string"
        },
        "aws-native:applicationinsights:ApplicationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:applicationinsights:ApplicationWindowsEvent": {
            "type": "object",
            "properties": {
                "eventLevels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:applicationinsights:ApplicationEventLevel"
                    },
                    "description": "The levels of event to log. "
                },
                "eventName": {
                    "type": "string",
                    "description": "The type of Windows Events to log."
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The CloudWatch log group name to be associated to the monitored log."
                },
                "patternSet": {
                    "type": "string",
                    "description": "The name of the log pattern set."
                }
            }
        },
        "aws-native:apprunner:ServiceAuthenticationConfiguration": {
            "type": "object",
            "properties": {
                "accessRoleArn": {
                    "type": "string",
                    "description": "Access Role Arn"
                },
                "connectionArn": {
                    "type": "string",
                    "description": "Connection Arn"
                }
            }
        },
        "aws-native:apprunner:ServiceCodeConfiguration": {
            "type": "object",
            "properties": {
                "codeConfigurationValues": {
                    "$ref": "#/types/aws-native:apprunner:ServiceCodeConfigurationValues"
                },
                "configurationSource": {
                    "$ref": "#/types/aws-native:apprunner:ServiceCodeConfigurationConfigurationSource",
                    "description": "Configuration Source"
                }
            }
        },
        "aws-native:apprunner:ServiceCodeConfigurationConfigurationSource": {
            "type": "string"
        },
        "aws-native:apprunner:ServiceCodeConfigurationValues": {
            "type": "object",
            "properties": {
                "buildCommand": {
                    "type": "string",
                    "description": "Build Command"
                },
                "port": {
                    "type": "string",
                    "description": "Port"
                },
                "runtime": {
                    "$ref": "#/types/aws-native:apprunner:ServiceCodeConfigurationValuesRuntime",
                    "description": "Runtime"
                },
                "runtimeEnvironmentVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apprunner:ServiceKeyValuePair"
                    }
                },
                "startCommand": {
                    "type": "string",
                    "description": "Start Command"
                }
            }
        },
        "aws-native:apprunner:ServiceCodeConfigurationValuesRuntime": {
            "type": "string"
        },
        "aws-native:apprunner:ServiceCodeRepository": {
            "type": "object",
            "properties": {
                "codeConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceCodeConfiguration"
                },
                "repositoryUrl": {
                    "type": "string",
                    "description": "Repository Url"
                },
                "sourceCodeVersion": {
                    "$ref": "#/types/aws-native:apprunner:ServiceSourceCodeVersion"
                }
            }
        },
        "aws-native:apprunner:ServiceEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "kmsKey": {
                    "type": "string",
                    "description": "The KMS Key"
                }
            }
        },
        "aws-native:apprunner:ServiceHealthCheckConfiguration": {
            "type": "object",
            "properties": {
                "healthyThreshold": {
                    "type": "integer",
                    "description": "Health check Healthy Threshold"
                },
                "interval": {
                    "type": "integer",
                    "description": "Health check Interval"
                },
                "path": {
                    "type": "string",
                    "description": "Health check Path"
                },
                "protocol": {
                    "$ref": "#/types/aws-native:apprunner:ServiceHealthCheckConfigurationProtocol",
                    "description": "Health Check Protocol"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Health check Timeout"
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "description": "Health check Unhealthy Threshold"
                }
            }
        },
        "aws-native:apprunner:ServiceHealthCheckConfigurationProtocol": {
            "type": "string"
        },
        "aws-native:apprunner:ServiceImageConfiguration": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "string",
                    "description": "Port"
                },
                "runtimeEnvironmentVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:apprunner:ServiceKeyValuePair"
                    }
                },
                "startCommand": {
                    "type": "string",
                    "description": "Start Command"
                }
            }
        },
        "aws-native:apprunner:ServiceImageRepository": {
            "type": "object",
            "properties": {
                "imageConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceImageConfiguration"
                },
                "imageIdentifier": {
                    "type": "string",
                    "description": "Image Identifier"
                },
                "imageRepositoryType": {
                    "$ref": "#/types/aws-native:apprunner:ServiceImageRepositoryImageRepositoryType",
                    "description": "Image Repository Type"
                }
            }
        },
        "aws-native:apprunner:ServiceImageRepositoryImageRepositoryType": {
            "type": "string"
        },
        "aws-native:apprunner:ServiceInstanceConfiguration": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "string",
                    "description": "CPU"
                },
                "instanceRoleArn": {
                    "type": "string",
                    "description": "Instance Role Arn"
                },
                "memory": {
                    "type": "string",
                    "description": "Memory"
                }
            }
        },
        "aws-native:apprunner:ServiceKeyValuePair": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:apprunner:ServiceSourceCodeVersion": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/types/aws-native:apprunner:ServiceSourceCodeVersionType",
                    "description": "Source Code Version Type"
                },
                "value": {
                    "type": "string",
                    "description": "Source Code Version Value"
                }
            }
        },
        "aws-native:apprunner:ServiceSourceCodeVersionType": {
            "type": "string"
        },
        "aws-native:apprunner:ServiceSourceConfiguration": {
            "type": "object",
            "properties": {
                "authenticationConfiguration": {
                    "$ref": "#/types/aws-native:apprunner:ServiceAuthenticationConfiguration"
                },
                "autoDeploymentsEnabled": {
                    "type": "boolean",
                    "description": "Auto Deployment enabled"
                },
                "codeRepository": {
                    "$ref": "#/types/aws-native:apprunner:ServiceCodeRepository"
                },
                "imageRepository": {
                    "$ref": "#/types/aws-native:apprunner:ServiceImageRepository"
                }
            }
        },
        "aws-native:apprunner:ServiceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:aps:WorkspaceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:athena:DataCatalogTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:athena:DataCatalogType": {
            "type": "string"
        },
        "aws-native:athena:WorkGroupEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "encryptionOption": {
                    "$ref": "#/types/aws-native:athena:WorkGroupEncryptionOption"
                },
                "kmsKey": {
                    "type": "string"
                }
            }
        },
        "aws-native:athena:WorkGroupEncryptionOption": {
            "type": "string"
        },
        "aws-native:athena:WorkGroupEngineVersion": {
            "type": "object",
            "properties": {
                "effectiveEngineVersion": {
                    "type": "string"
                },
                "selectedEngineVersion": {
                    "type": "string"
                }
            }
        },
        "aws-native:athena:WorkGroupResultConfiguration": {
            "type": "object",
            "properties": {
                "encryptionConfiguration": {
                    "$ref": "#/types/aws-native:athena:WorkGroupEncryptionConfiguration"
                },
                "outputLocation": {
                    "type": "string"
                }
            }
        },
        "aws-native:athena:WorkGroupResultConfigurationUpdates": {
            "type": "object",
            "properties": {
                "encryptionConfiguration": {
                    "$ref": "#/types/aws-native:athena:WorkGroupEncryptionConfiguration"
                },
                "outputLocation": {
                    "type": "string"
                },
                "removeEncryptionConfiguration": {
                    "type": "boolean"
                },
                "removeOutputLocation": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:athena:WorkGroupState": {
            "type": "string"
        },
        "aws-native:athena:WorkGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:athena:WorkGroupWorkGroupConfiguration": {
            "type": "object",
            "properties": {
                "bytesScannedCutoffPerQuery": {
                    "type": "integer"
                },
                "enforceWorkGroupConfiguration": {
                    "type": "boolean"
                },
                "engineVersion": {
                    "$ref": "#/types/aws-native:athena:WorkGroupEngineVersion"
                },
                "publishCloudWatchMetricsEnabled": {
                    "type": "boolean"
                },
                "requesterPaysEnabled": {
                    "type": "boolean"
                },
                "resultConfiguration": {
                    "$ref": "#/types/aws-native:athena:WorkGroupResultConfiguration"
                }
            }
        },
        "aws-native:athena:WorkGroupWorkGroupConfigurationUpdates": {
            "type": "object",
            "properties": {
                "bytesScannedCutoffPerQuery": {
                    "type": "integer"
                },
                "enforceWorkGroupConfiguration": {
                    "type": "boolean"
                },
                "engineVersion": {
                    "$ref": "#/types/aws-native:athena:WorkGroupEngineVersion"
                },
                "publishCloudWatchMetricsEnabled": {
                    "type": "boolean"
                },
                "removeBytesScannedCutoffPerQuery": {
                    "type": "boolean"
                },
                "requesterPaysEnabled": {
                    "type": "boolean"
                },
                "resultConfigurationUpdates": {
                    "$ref": "#/types/aws-native:athena:WorkGroupResultConfigurationUpdates"
                }
            }
        },
        "aws-native:auditmanager:AssessmentAWSAccount": {
            "type": "object",
            "properties": {
                "emailAddress": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:auditmanager:AssessmentAWSService": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "aws-native:auditmanager:AssessmentAssessmentReportDestinationType": {
            "type": "string"
        },
        "aws-native:auditmanager:AssessmentAssessmentReportsDestination": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string"
                },
                "destinationType": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentAssessmentReportDestinationType"
                }
            }
        },
        "aws-native:auditmanager:AssessmentAssessmentStatus": {
            "type": "string"
        },
        "aws-native:auditmanager:AssessmentDelegation": {
            "type": "object",
            "properties": {
                "assessmentId": {
                    "type": "string"
                },
                "assessmentName": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "controlSetId": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "creationTime": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "number"
                },
                "roleArn": {
                    "type": "string"
                },
                "roleType": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentRoleType"
                },
                "status": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentDelegationStatus"
                }
            }
        },
        "aws-native:auditmanager:AssessmentDelegationStatus": {
            "type": "string"
        },
        "aws-native:auditmanager:AssessmentRole": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "type": "string"
                },
                "roleType": {
                    "$ref": "#/types/aws-native:auditmanager:AssessmentRoleType"
                }
            }
        },
        "aws-native:auditmanager:AssessmentRoleType": {
            "type": "string"
        },
        "aws-native:auditmanager:AssessmentScope": {
            "type": "object",
            "properties": {
                "awsAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:auditmanager:AssessmentAWSAccount"
                    },
                    "description": "The AWS accounts included in scope."
                },
                "awsServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:auditmanager:AssessmentAWSService"
                    },
                    "description": "The AWS services included in scope."
                }
            }
        },
        "aws-native:auditmanager:AssessmentTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:backup:BackupPlanAdvancedBackupSettingResourceType": {
            "type": "object",
            "properties": {
                "backupOptions": {
                    "$ref": "pulumi.json#/Any"
                },
                "resourceType": {
                    "type": "string"
                }
            }
        },
        "aws-native:backup:BackupPlanBackupPlanResourceType": {
            "type": "object",
            "properties": {
                "advancedBackupSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:backup:BackupPlanAdvancedBackupSettingResourceType"
                    }
                },
                "backupPlanName": {
                    "type": "string"
                },
                "backupPlanRule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:backup:BackupPlanBackupRuleResourceType"
                    }
                }
            }
        },
        "aws-native:backup:BackupPlanBackupRuleResourceType": {
            "type": "object",
            "properties": {
                "completionWindowMinutes": {
                    "type": "number"
                },
                "copyActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:backup:BackupPlanCopyActionResourceType"
                    }
                },
                "enableContinuousBackup": {
                    "type": "boolean"
                },
                "lifecycle": {
                    "$ref": "#/types/aws-native:backup:BackupPlanLifecycleResourceType"
                },
                "recoveryPointTags": {
                    "$ref": "pulumi.json#/Any"
                },
                "ruleName": {
                    "type": "string"
                },
                "scheduleExpression": {
                    "type": "string"
                },
                "startWindowMinutes": {
                    "type": "number"
                },
                "targetBackupVault": {
                    "type": "string"
                }
            }
        },
        "aws-native:backup:BackupPlanCopyActionResourceType": {
            "type": "object",
            "properties": {
                "destinationBackupVaultArn": {
                    "type": "string"
                },
                "lifecycle": {
                    "$ref": "#/types/aws-native:backup:BackupPlanLifecycleResourceType"
                }
            }
        },
        "aws-native:backup:BackupPlanLifecycleResourceType": {
            "type": "object",
            "properties": {
                "deleteAfterDays": {
                    "type": "number"
                },
                "moveToColdStorageAfterDays": {
                    "type": "number"
                }
            }
        },
        "aws-native:backup:BackupSelectionBackupSelectionResourceType": {
            "type": "object",
            "properties": {
                "iamRoleArn": {
                    "type": "string"
                },
                "listOfTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:backup:BackupSelectionConditionResourceType"
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "selectionName": {
                    "type": "string"
                }
            }
        },
        "aws-native:backup:BackupSelectionConditionResourceType": {
            "type": "object",
            "properties": {
                "conditionKey": {
                    "type": "string"
                },
                "conditionType": {
                    "type": "string"
                },
                "conditionValue": {
                    "type": "string"
                }
            }
        },
        "aws-native:backup:BackupVaultLockConfigurationType": {
            "type": "object",
            "properties": {
                "changeableForDays": {
                    "type": "number"
                },
                "maxRetentionDays": {
                    "type": "number"
                },
                "minRetentionDays": {
                    "type": "number"
                }
            }
        },
        "aws-native:backup:BackupVaultNotificationObjectType": {
            "type": "object",
            "properties": {
                "backupVaultEvents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sNSTopicArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:budgets:BudgetsActionActionThreshold": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionActionThresholdType"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "aws-native:budgets:BudgetsActionActionThresholdType": {
            "type": "string"
        },
        "aws-native:budgets:BudgetsActionActionType": {
            "type": "string"
        },
        "aws-native:budgets:BudgetsActionApprovalModel": {
            "type": "string"
        },
        "aws-native:budgets:BudgetsActionDefinition": {
            "type": "object",
            "properties": {
                "iamActionDefinition": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionIamActionDefinition"
                },
                "scpActionDefinition": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionScpActionDefinition"
                },
                "ssmActionDefinition": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionSsmActionDefinition"
                }
            }
        },
        "aws-native:budgets:BudgetsActionIamActionDefinition": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policyArn": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:budgets:BudgetsActionNotificationType": {
            "type": "string"
        },
        "aws-native:budgets:BudgetsActionScpActionDefinition": {
            "type": "object",
            "properties": {
                "policyId": {
                    "type": "string"
                },
                "targetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:budgets:BudgetsActionSsmActionDefinition": {
            "type": "object",
            "properties": {
                "instanceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "subtype": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionSsmActionDefinitionSubtype"
                }
            }
        },
        "aws-native:budgets:BudgetsActionSsmActionDefinitionSubtype": {
            "type": "string"
        },
        "aws-native:budgets:BudgetsActionSubscriber": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/types/aws-native:budgets:BudgetsActionSubscriberType"
                }
            }
        },
        "aws-native:budgets:BudgetsActionSubscriberType": {
            "type": "string"
        },
        "aws-native:cassandra:KeyspaceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:cassandra:TableBillingMode": {
            "type": "object",
            "properties": {
                "mode": {
                    "$ref": "#/types/aws-native:cassandra:TableMode"
                },
                "provisionedThroughput": {
                    "$ref": "#/types/aws-native:cassandra:TableProvisionedThroughput"
                }
            }
        },
        "aws-native:cassandra:TableClusteringKeyColumn": {
            "type": "object",
            "properties": {
                "column": {
                    "$ref": "#/types/aws-native:cassandra:TableColumn"
                },
                "orderBy": {
                    "$ref": "#/types/aws-native:cassandra:TableClusteringKeyColumnOrderBy"
                }
            }
        },
        "aws-native:cassandra:TableClusteringKeyColumnOrderBy": {
            "type": "string"
        },
        "aws-native:cassandra:TableColumn": {
            "type": "object",
            "properties": {
                "columnName": {
                    "type": "string"
                },
                "columnType": {
                    "type": "string"
                }
            }
        },
        "aws-native:cassandra:TableEncryptionSpecification": {
            "type": "object",
            "properties": {
                "encryptionType": {
                    "$ref": "#/types/aws-native:cassandra:TableEncryptionType"
                },
                "kmsKeyIdentifier": {
                    "type": "string"
                }
            }
        },
        "aws-native:cassandra:TableEncryptionType": {
            "type": "string"
        },
        "aws-native:cassandra:TableMode": {
            "type": "string"
        },
        "aws-native:cassandra:TableProvisionedThroughput": {
            "type": "object",
            "properties": {
                "readCapacityUnits": {
                    "type": "integer"
                },
                "writeCapacityUnits": {
                    "type": "integer"
                }
            }
        },
        "aws-native:cassandra:TableTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ce:CostCategoryRuleVersion": {
            "type": "string"
        },
        "aws-native:certificatemanager:AccountExpiryEventsConfiguration": {
            "type": "object",
            "properties": {
                "daysBeforeExpiry": {
                    "type": "integer"
                }
            }
        },
        "aws-native:cloudformation:ModuleVersionVisibility": {
            "type": "string"
        },
        "aws-native:cloudformation:PublicTypeVersionType": {
            "type": "string"
        },
        "aws-native:cloudformation:PublisherIdentityProvider": {
            "type": "string"
        },
        "aws-native:cloudformation:PublisherPublisherStatus": {
            "type": "string"
        },
        "aws-native:cloudformation:ResourceVersionLoggingConfig": {
            "type": "object",
            "properties": {
                "logGroupName": {
                    "type": "string",
                    "description": "The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers."
                },
                "logRoleArn": {
                    "type": "string",
                    "description": "The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs."
                }
            }
        },
        "aws-native:cloudformation:ResourceVersionProvisioningType": {
            "type": "string"
        },
        "aws-native:cloudformation:ResourceVersionVisibility": {
            "type": "string"
        },
        "aws-native:cloudformation:StackSetAutoDeployment": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If set to true, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions."
                },
                "retainStacksOnAccountRemoval": {
                    "type": "boolean",
                    "description": "If set to true, stack resources are retained when an account is removed from a target organization or OU. If set to false, stack resources are deleted. Specify only if Enabled is set to True."
                }
            }
        },
        "aws-native:cloudformation:StackSetCallAs": {
            "type": "string"
        },
        "aws-native:cloudformation:StackSetCapability": {
            "type": "string"
        },
        "aws-native:cloudformation:StackSetDeploymentTargets": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "AWS accounts that you want to create stack instances in the specified Region(s) for."
                },
                "organizationalUnitIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The organization root ID or organizational unit (OU) IDs to which StackSets deploys."
                }
            }
        },
        "aws-native:cloudformation:StackSetOperationPreferences": {
            "type": "object",
            "properties": {
                "failureToleranceCount": {
                    "type": "integer"
                },
                "failureTolerancePercentage": {
                    "type": "integer"
                },
                "maxConcurrentCount": {
                    "type": "integer"
                },
                "maxConcurrentPercentage": {
                    "type": "integer"
                },
                "regionConcurrencyType": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetRegionConcurrencyType"
                },
                "regionOrder": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudformation:StackSetParameter": {
            "type": "object",
            "properties": {
                "parameterKey": {
                    "type": "string",
                    "description": "The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template."
                },
                "parameterValue": {
                    "type": "string",
                    "description": "The input value associated with the parameter."
                }
            }
        },
        "aws-native:cloudformation:StackSetPermissionModel": {
            "type": "string"
        },
        "aws-native:cloudformation:StackSetRegionConcurrencyType": {
            "type": "string"
        },
        "aws-native:cloudformation:StackSetStackInstances": {
            "type": "object",
            "properties": {
                "deploymentTargets": {
                    "$ref": "#/types/aws-native:cloudformation:StackSetDeploymentTargets"
                },
                "parameterOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudformation:StackSetParameter"
                    },
                    "description": "A list of stack set parameters whose values you want to override in the selected stack instances."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of one or more Regions where you want to create stack instances using the specified AWS account(s)."
                }
            }
        },
        "aws-native:cloudformation:StackSetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A string used to identify this tag. You can specify a maximum of 127 characters for a tag key."
                },
                "value": {
                    "type": "string",
                    "description": "A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value."
                }
            }
        },
        "aws-native:cloudformation:TypeActivationLoggingConfig": {
            "type": "object",
            "properties": {
                "logGroupName": {
                    "type": "string",
                    "description": "The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers."
                },
                "logRoleArn": {
                    "type": "string",
                    "description": "The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs."
                }
            }
        },
        "aws-native:cloudformation:TypeActivationType": {
            "type": "string"
        },
        "aws-native:cloudformation:TypeActivationVersionBump": {
            "type": "string"
        },
        "aws-native:cloudfront:CachePolicyCachePolicyConfig": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "defaultTTL": {
                    "type": "number"
                },
                "maxTTL": {
                    "type": "number"
                },
                "minTTL": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "parametersInCacheKeyAndForwardedToOrigin": {
                    "$ref": "#/types/aws-native:cloudfront:CachePolicyParametersInCacheKeyAndForwardedToOrigin"
                }
            }
        },
        "aws-native:cloudfront:CachePolicyCookiesConfig": {
            "type": "object",
            "properties": {
                "cookieBehavior": {
                    "type": "string"
                },
                "cookies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:CachePolicyHeadersConfig": {
            "type": "object",
            "properties": {
                "headerBehavior": {
                    "type": "string"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:CachePolicyParametersInCacheKeyAndForwardedToOrigin": {
            "type": "object",
            "properties": {
                "cookiesConfig": {
                    "$ref": "#/types/aws-native:cloudfront:CachePolicyCookiesConfig"
                },
                "enableAcceptEncodingBrotli": {
                    "type": "boolean"
                },
                "enableAcceptEncodingGzip": {
                    "type": "boolean"
                },
                "headersConfig": {
                    "$ref": "#/types/aws-native:cloudfront:CachePolicyHeadersConfig"
                },
                "queryStringsConfig": {
                    "$ref": "#/types/aws-native:cloudfront:CachePolicyQueryStringsConfig"
                }
            }
        },
        "aws-native:cloudfront:CachePolicyQueryStringsConfig": {
            "type": "object",
            "properties": {
                "queryStringBehavior": {
                    "type": "string"
                },
                "queryStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:CloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionCacheBehavior": {
            "type": "object",
            "properties": {
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cachePolicyId": {
                    "type": "string"
                },
                "cachedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "compress": {
                    "type": "boolean"
                },
                "defaultTTL": {
                    "type": "number"
                },
                "fieldLevelEncryptionId": {
                    "type": "string"
                },
                "forwardedValues": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionForwardedValues"
                },
                "functionAssociations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionFunctionAssociation"
                    }
                },
                "lambdaFunctionAssociations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionLambdaFunctionAssociation"
                    }
                },
                "maxTTL": {
                    "type": "number"
                },
                "minTTL": {
                    "type": "number"
                },
                "originRequestPolicyId": {
                    "type": "string"
                },
                "pathPattern": {
                    "type": "string"
                },
                "realtimeLogConfigArn": {
                    "type": "string"
                },
                "smoothStreaming": {
                    "type": "boolean"
                },
                "targetOriginId": {
                    "type": "string"
                },
                "trustedKeyGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trustedSigners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "viewerProtocolPolicy": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionCookies": {
            "type": "object",
            "properties": {
                "forward": {
                    "type": "string"
                },
                "whitelistedNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:DistributionCustomErrorResponse": {
            "type": "object",
            "properties": {
                "errorCachingMinTTL": {
                    "type": "number"
                },
                "errorCode": {
                    "type": "integer"
                },
                "responseCode": {
                    "type": "integer"
                },
                "responsePagePath": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionCustomOriginConfig": {
            "type": "object",
            "properties": {
                "hTTPPort": {
                    "type": "integer"
                },
                "hTTPSPort": {
                    "type": "integer"
                },
                "originKeepaliveTimeout": {
                    "type": "integer"
                },
                "originProtocolPolicy": {
                    "type": "string"
                },
                "originReadTimeout": {
                    "type": "integer"
                },
                "originSSLProtocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:DistributionDefaultCacheBehavior": {
            "type": "object",
            "properties": {
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cachePolicyId": {
                    "type": "string"
                },
                "cachedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "compress": {
                    "type": "boolean"
                },
                "defaultTTL": {
                    "type": "number"
                },
                "fieldLevelEncryptionId": {
                    "type": "string"
                },
                "forwardedValues": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionForwardedValues"
                },
                "functionAssociations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionFunctionAssociation"
                    }
                },
                "lambdaFunctionAssociations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionLambdaFunctionAssociation"
                    }
                },
                "maxTTL": {
                    "type": "number"
                },
                "minTTL": {
                    "type": "number"
                },
                "originRequestPolicyId": {
                    "type": "string"
                },
                "realtimeLogConfigArn": {
                    "type": "string"
                },
                "smoothStreaming": {
                    "type": "boolean"
                },
                "targetOriginId": {
                    "type": "string"
                },
                "trustedKeyGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trustedSigners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "viewerProtocolPolicy": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionDistributionConfig": {
            "type": "object",
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cNAMEs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cacheBehaviors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionCacheBehavior"
                    }
                },
                "comment": {
                    "type": "string"
                },
                "customErrorResponses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionCustomErrorResponse"
                    }
                },
                "customOrigin": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionLegacyCustomOrigin"
                },
                "defaultCacheBehavior": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionDefaultCacheBehavior"
                },
                "defaultRootObject": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "httpVersion": {
                    "type": "string"
                },
                "iPV6Enabled": {
                    "type": "boolean"
                },
                "logging": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionLogging"
                },
                "originGroups": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionOriginGroups"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionOrigin"
                    }
                },
                "priceClass": {
                    "type": "string"
                },
                "restrictions": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionRestrictions"
                },
                "s3Origin": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionLegacyS3Origin"
                },
                "viewerCertificate": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionViewerCertificate"
                },
                "webACLId": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionForwardedValues": {
            "type": "object",
            "properties": {
                "cookies": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionCookies"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "queryString": {
                    "type": "boolean"
                },
                "queryStringCacheKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:DistributionFunctionAssociation": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string"
                },
                "functionARN": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionGeoRestriction": {
            "type": "object",
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "restrictionType": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionLambdaFunctionAssociation": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string"
                },
                "includeBody": {
                    "type": "boolean"
                },
                "lambdaFunctionARN": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionLegacyCustomOrigin": {
            "type": "object",
            "properties": {
                "dNSName": {
                    "type": "string"
                },
                "hTTPPort": {
                    "type": "integer"
                },
                "hTTPSPort": {
                    "type": "integer"
                },
                "originProtocolPolicy": {
                    "type": "string"
                },
                "originSSLProtocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:DistributionLegacyS3Origin": {
            "type": "object",
            "properties": {
                "dNSName": {
                    "type": "string"
                },
                "originAccessIdentity": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionLogging": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "includeCookies": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionOrigin": {
            "type": "object",
            "properties": {
                "connectionAttempts": {
                    "type": "integer"
                },
                "connectionTimeout": {
                    "type": "integer"
                },
                "customOriginConfig": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionCustomOriginConfig"
                },
                "domainName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "originCustomHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionOriginCustomHeader"
                    }
                },
                "originPath": {
                    "type": "string"
                },
                "originShield": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionOriginShield"
                },
                "s3OriginConfig": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionS3OriginConfig"
                }
            }
        },
        "aws-native:cloudfront:DistributionOriginCustomHeader": {
            "type": "object",
            "properties": {
                "headerName": {
                    "type": "string"
                },
                "headerValue": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionOriginGroup": {
            "type": "object",
            "properties": {
                "failoverCriteria": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionOriginGroupFailoverCriteria"
                },
                "id": {
                    "type": "string"
                },
                "members": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionOriginGroupMembers"
                }
            }
        },
        "aws-native:cloudfront:DistributionOriginGroupFailoverCriteria": {
            "type": "object",
            "properties": {
                "statusCodes": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionStatusCodes"
                }
            }
        },
        "aws-native:cloudfront:DistributionOriginGroupMember": {
            "type": "object",
            "properties": {
                "originId": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionOriginGroupMembers": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionOriginGroupMember"
                    }
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "aws-native:cloudfront:DistributionOriginGroups": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudfront:DistributionOriginGroup"
                    }
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "aws-native:cloudfront:DistributionOriginShield": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "originShieldRegion": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionRestrictions": {
            "type": "object",
            "properties": {
                "geoRestriction": {
                    "$ref": "#/types/aws-native:cloudfront:DistributionGeoRestriction"
                }
            }
        },
        "aws-native:cloudfront:DistributionS3OriginConfig": {
            "type": "object",
            "properties": {
                "originAccessIdentity": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionStatusCodes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "aws-native:cloudfront:DistributionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:DistributionViewerCertificate": {
            "type": "object",
            "properties": {
                "acmCertificateArn": {
                    "type": "string"
                },
                "cloudFrontDefaultCertificate": {
                    "type": "boolean"
                },
                "iamCertificateId": {
                    "type": "string"
                },
                "minimumProtocolVersion": {
                    "type": "string"
                },
                "sslSupportMethod": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:FunctionFunctionConfig": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "runtime": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:FunctionFunctionMetadata": {
            "type": "object",
            "properties": {
                "functionARN": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:KeyGroupKeyGroupConfig": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:OriginRequestPolicyCookiesConfig": {
            "type": "object",
            "properties": {
                "cookieBehavior": {
                    "type": "string"
                },
                "cookies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:OriginRequestPolicyHeadersConfig": {
            "type": "object",
            "properties": {
                "headerBehavior": {
                    "type": "string"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:OriginRequestPolicyOriginRequestPolicyConfig": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "cookiesConfig": {
                    "$ref": "#/types/aws-native:cloudfront:OriginRequestPolicyCookiesConfig"
                },
                "headersConfig": {
                    "$ref": "#/types/aws-native:cloudfront:OriginRequestPolicyHeadersConfig"
                },
                "name": {
                    "type": "string"
                },
                "queryStringsConfig": {
                    "$ref": "#/types/aws-native:cloudfront:OriginRequestPolicyQueryStringsConfig"
                }
            }
        },
        "aws-native:cloudfront:OriginRequestPolicyQueryStringsConfig": {
            "type": "object",
            "properties": {
                "queryStringBehavior": {
                    "type": "string"
                },
                "queryStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:cloudfront:PublicKeyPublicKeyConfig": {
            "type": "object",
            "properties": {
                "callerReference": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "encodedKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:RealtimeLogConfigEndPoint": {
            "type": "object",
            "properties": {
                "kinesisStreamConfig": {
                    "$ref": "#/types/aws-native:cloudfront:RealtimeLogConfigKinesisStreamConfig"
                },
                "streamType": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudfront:RealtimeLogConfigKinesisStreamConfig": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "type": "string"
                },
                "streamArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:cloudtrail:TrailDataResource": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The resource type in which you want to log data events. You can specify AWS::S3::Object or AWS::Lambda::Function resources."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of Amazon Resource Name (ARN) strings or partial ARN strings for the specified objects."
                }
            }
        },
        "aws-native:cloudtrail:TrailEventSelector": {
            "type": "object",
            "properties": {
                "dataResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:cloudtrail:TrailDataResource"
                    }
                },
                "excludeManagementEventSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An optional list of service event sources from which you do not want management events to be logged on your trail. In this release, the list can be empty (disables the filter), or it can filter out AWS Key Management Service events by containing \"kms.amazonaws.com\". By default, ExcludeManagementEventSources is empty, and AWS KMS events are included in events that are logged to your trail."
                },
                "includeManagementEvents": {
                    "type": "boolean",
                    "description": "Specify if you want your event selector to include management events for your trail."
                },
                "readWriteType": {
                    "$ref": "#/types/aws-native:cloudtrail:TrailEventSelectorReadWriteType",
                    "description": "Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput is a read-only API operation and RunInstances is a write-only API operation."
                }
            }
        },
        "aws-native:cloudtrail:TrailEventSelectorReadWriteType": {
            "type": "string"
        },
        "aws-native:cloudtrail:TrailInsightSelector": {
            "type": "object",
            "properties": {
                "insightType": {
                    "type": "string",
                    "description": "The type of insight to log on a trail."
                }
            }
        },
        "aws-native:cloudtrail:TrailTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:cloudwatch:MetricStreamMetricStreamFilter": {
            "type": "object",
            "properties": {
                "namespace": {
                    "type": "string",
                    "description": "Only metrics with Namespace matching this value will be streamed."
                }
            }
        },
        "aws-native:cloudwatch:MetricStreamTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A unique identifier for the tag."
                },
                "value": {
                    "type": "string",
                    "description": "An optional string, which you can use to describe or define the tag."
                }
            }
        },
        "aws-native:codeartifact:DomainTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:codeartifact:RepositoryTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:codeguruprofiler:ProfilingGroupChannel": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "string"
                },
                "channelUri": {
                    "type": "string"
                }
            }
        },
        "aws-native:codeguruprofiler:ProfilingGroupComputePlatform": {
            "type": "string"
        },
        "aws-native:codeguruprofiler:ProfilingGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @."
                }
            }
        },
        "aws-native:codegurureviewer:RepositoryAssociationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @."
                }
            }
        },
        "aws-native:codegurureviewer:RepositoryAssociationType": {
            "type": "string"
        },
        "aws-native:codestarconnections:ConnectionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:codestarnotifications:NotificationRuleDetailType": {
            "type": "string"
        },
        "aws-native:codestarnotifications:NotificationRuleStatus": {
            "type": "string"
        },
        "aws-native:codestarnotifications:NotificationRuleTarget": {
            "type": "object",
            "properties": {
                "targetAddress": {
                    "type": "string"
                },
                "targetType": {
                    "type": "string"
                }
            }
        },
        "aws-native:configuration:AggregationAuthorizationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:configuration:ConfigurationAggregatorAccountAggregationSource": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allAwsRegions": {
                    "type": "boolean"
                },
                "awsRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:configuration:ConfigurationAggregatorOrganizationAggregationSource": {
            "type": "object",
            "properties": {
                "allAwsRegions": {
                    "type": "boolean"
                },
                "awsRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:configuration:ConfigurationAggregatorTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:configuration:ConformancePackConformancePackInputParameter": {
            "type": "object",
            "properties": {
                "parameterName": {
                    "type": "string"
                },
                "parameterValue": {
                    "type": "string"
                }
            }
        },
        "aws-native:configuration:OrganizationConformancePackConformancePackInputParameter": {
            "type": "object",
            "properties": {
                "parameterName": {
                    "type": "string"
                },
                "parameterValue": {
                    "type": "string"
                }
            }
        },
        "aws-native:configuration:StoredQueryTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:connect:QuickConnectPhoneNumberQuickConnectConfig": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "aws-native:connect:QuickConnectQueueQuickConnectConfig": {
            "type": "object",
            "properties": {
                "contactFlowArn": {
                    "type": "string"
                },
                "queueArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:connect:QuickConnectQuickConnectConfig": {
            "type": "object",
            "properties": {
                "phoneConfig": {
                    "$ref": "#/types/aws-native:connect:QuickConnectPhoneNumberQuickConnectConfig"
                },
                "queueConfig": {
                    "$ref": "#/types/aws-native:connect:QuickConnectQueueQuickConnectConfig"
                },
                "quickConnectType": {
                    "$ref": "#/types/aws-native:connect:QuickConnectQuickConnectType"
                },
                "userConfig": {
                    "$ref": "#/types/aws-native:connect:QuickConnectUserQuickConnectConfig"
                }
            }
        },
        "aws-native:connect:QuickConnectQuickConnectType": {
            "type": "string"
        },
        "aws-native:connect:QuickConnectTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:connect:QuickConnectUserQuickConnectConfig": {
            "type": "object",
            "properties": {
                "contactFlowArn": {
                    "type": "string"
                },
                "userArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:DomainTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationConnectorOperator": {
            "type": "object",
            "properties": {
                "marketo": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationMarketoConnectorOperator"
                },
                "s3": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationS3ConnectorOperator"
                },
                "salesforce": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationSalesforceConnectorOperator"
                },
                "serviceNow": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationServiceNowConnectorOperator"
                },
                "zendesk": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationZendeskConnectorOperator"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationConnectorType": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationFlowDefinition": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "flowName": {
                    "type": "string"
                },
                "kmsArn": {
                    "type": "string"
                },
                "sourceFlowConfig": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationSourceFlowConfig"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:IntegrationTask"
                    }
                },
                "triggerConfig": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationTriggerConfig"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationIncrementalPullConfig": {
            "type": "object",
            "properties": {
                "datetimeTypeFieldName": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationMarketoConnectorOperator": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationMarketoSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationOperatorPropertiesKeys": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationS3ConnectorOperator": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationS3SourceProperties": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationSalesforceConnectorOperator": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationSalesforceSourceProperties": {
            "type": "object",
            "properties": {
                "enableDynamicFieldUpdate": {
                    "type": "boolean"
                },
                "includeDeletedRecords": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationScheduledTriggerProperties": {
            "type": "object",
            "properties": {
                "dataPullMode": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationScheduledTriggerPropertiesDataPullMode"
                },
                "firstExecutionFrom": {
                    "type": "number"
                },
                "scheduleEndTime": {
                    "type": "number"
                },
                "scheduleExpression": {
                    "type": "string"
                },
                "scheduleOffset": {
                    "type": "integer"
                },
                "scheduleStartTime": {
                    "type": "number"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationScheduledTriggerPropertiesDataPullMode": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationServiceNowConnectorOperator": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationServiceNowSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationSourceConnectorProperties": {
            "type": "object",
            "properties": {
                "marketo": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationMarketoSourceProperties"
                },
                "s3": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationS3SourceProperties"
                },
                "salesforce": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationSalesforceSourceProperties"
                },
                "serviceNow": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationServiceNowSourceProperties"
                },
                "zendesk": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationZendeskSourceProperties"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationSourceFlowConfig": {
            "type": "object",
            "properties": {
                "connectorProfileName": {
                    "type": "string"
                },
                "connectorType": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationConnectorType"
                },
                "incrementalPullConfig": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationIncrementalPullConfig"
                },
                "sourceConnectorProperties": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationSourceConnectorProperties"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationTask": {
            "type": "object",
            "properties": {
                "connectorOperator": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationConnectorOperator"
                },
                "destinationField": {
                    "type": "string"
                },
                "sourceFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taskProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:IntegrationTaskPropertiesMap"
                    }
                },
                "taskType": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationTaskType"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationTaskPropertiesMap": {
            "type": "object",
            "properties": {
                "operatorPropertyKey": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationOperatorPropertiesKeys"
                },
                "property": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationTaskType": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationTriggerConfig": {
            "type": "object",
            "properties": {
                "triggerProperties": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationTriggerProperties"
                },
                "triggerType": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationTriggerType"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationTriggerProperties": {
            "type": "object",
            "properties": {
                "scheduled": {
                    "$ref": "#/types/aws-native:customerprofiles:IntegrationScheduledTriggerProperties"
                }
            }
        },
        "aws-native:customerprofiles:IntegrationTriggerType": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationZendeskConnectorOperator": {
            "type": "string"
        },
        "aws-native:customerprofiles:IntegrationZendeskSourceProperties": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "string"
                }
            }
        },
        "aws-native:customerprofiles:ObjectTypeFieldMap": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "objectTypeField": {
                    "$ref": "#/types/aws-native:customerprofiles:ObjectTypeObjectTypeField"
                }
            }
        },
        "aws-native:customerprofiles:ObjectTypeKeyMap": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "objectTypeKeyList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:ObjectTypeObjectTypeKey"
                    }
                }
            }
        },
        "aws-native:customerprofiles:ObjectTypeObjectTypeField": {
            "type": "object",
            "properties": {
                "contentType": {
                    "$ref": "#/types/aws-native:customerprofiles:ObjectTypeObjectTypeFieldContentType",
                    "description": "The content type of the field. Used for determining equality when searching."
                },
                "source": {
                    "type": "string",
                    "description": "A field of a ProfileObject. For example: _source.FirstName, where \"_source\" is a ProfileObjectType of a Zendesk user and \"FirstName\" is a field in that ObjectType."
                },
                "target": {
                    "type": "string",
                    "description": "The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode."
                }
            }
        },
        "aws-native:customerprofiles:ObjectTypeObjectTypeFieldContentType": {
            "type": "string"
        },
        "aws-native:customerprofiles:ObjectTypeObjectTypeKey": {
            "type": "object",
            "properties": {
                "fieldNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The reference for the key name of the fields map. "
                },
                "standardIdentifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:customerprofiles:ObjectTypeObjectTypeKeyStandardIdentifiersItem"
                    },
                    "description": "The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles."
                }
            }
        },
        "aws-native:customerprofiles:ObjectTypeObjectTypeKeyStandardIdentifiersItem": {
            "type": "string"
        },
        "aws-native:customerprofiles:ObjectTypeTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:DatasetCsvOptions": {
            "type": "object",
            "properties": {
                "delimiter": {
                    "type": "string"
                },
                "headerRow": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:databrew:DatasetDataCatalogInputDefinition": {
            "type": "object",
            "properties": {
                "catalogId": {
                    "type": "string",
                    "description": "Catalog id"
                },
                "databaseName": {
                    "type": "string",
                    "description": "Database name"
                },
                "tableName": {
                    "type": "string",
                    "description": "Table name"
                },
                "tempDirectory": {
                    "$ref": "#/types/aws-native:databrew:DatasetS3Location"
                }
            }
        },
        "aws-native:databrew:DatasetDatabaseInputDefinition": {
            "type": "object",
            "properties": {
                "databaseTableName": {
                    "type": "string",
                    "description": "Database table name"
                },
                "glueConnectionName": {
                    "type": "string",
                    "description": "Glue connection name"
                },
                "tempDirectory": {
                    "$ref": "#/types/aws-native:databrew:DatasetS3Location"
                }
            }
        },
        "aws-native:databrew:DatasetDatasetParameter": {
            "type": "object",
            "properties": {
                "createColumn": {
                    "type": "boolean",
                    "description": "Add the value of this parameter as a column in a dataset."
                },
                "datetimeOptions": {
                    "$ref": "#/types/aws-native:databrew:DatasetDatetimeOptions"
                },
                "filter": {
                    "$ref": "#/types/aws-native:databrew:DatasetFilterExpression"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/types/aws-native:databrew:DatasetDatasetParameterType",
                    "description": "Parameter type"
                }
            }
        },
        "aws-native:databrew:DatasetDatasetParameterType": {
            "type": "string"
        },
        "aws-native:databrew:DatasetDatetimeOptions": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Date/time format of a date parameter"
                },
                "localeCode": {
                    "type": "string",
                    "description": "Locale code for a date parameter"
                },
                "timezoneOffset": {
                    "type": "string",
                    "description": "Timezone offset"
                }
            }
        },
        "aws-native:databrew:DatasetExcelOptions": {
            "type": "object",
            "properties": {
                "headerRow": {
                    "type": "boolean"
                },
                "sheetIndexes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sheetNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:databrew:DatasetFilesLimit": {
            "type": "object",
            "properties": {
                "maxFiles": {
                    "type": "integer",
                    "description": "Maximum number of files"
                },
                "order": {
                    "$ref": "#/types/aws-native:databrew:DatasetFilesLimitOrder",
                    "description": "Order"
                },
                "orderedBy": {
                    "$ref": "#/types/aws-native:databrew:DatasetFilesLimitOrderedBy",
                    "description": "Ordered by"
                }
            }
        },
        "aws-native:databrew:DatasetFilesLimitOrder": {
            "type": "string"
        },
        "aws-native:databrew:DatasetFilesLimitOrderedBy": {
            "type": "string"
        },
        "aws-native:databrew:DatasetFilterExpression": {
            "type": "object",
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Filtering expression for a parameter"
                },
                "valuesMap": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:DatasetFilterValue"
                    }
                }
            }
        },
        "aws-native:databrew:DatasetFilterValue": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "valueReference": {
                    "type": "string",
                    "description": "Variable name"
                }
            }
        },
        "aws-native:databrew:DatasetFormat": {
            "type": "string"
        },
        "aws-native:databrew:DatasetFormatOptions": {
            "type": "object",
            "properties": {
                "csv": {
                    "$ref": "#/types/aws-native:databrew:DatasetCsvOptions"
                },
                "excel": {
                    "$ref": "#/types/aws-native:databrew:DatasetExcelOptions"
                },
                "json": {
                    "$ref": "#/types/aws-native:databrew:DatasetJsonOptions"
                }
            }
        },
        "aws-native:databrew:DatasetInput": {
            "type": "object",
            "properties": {
                "dataCatalogInputDefinition": {
                    "$ref": "#/types/aws-native:databrew:DatasetDataCatalogInputDefinition"
                },
                "databaseInputDefinition": {
                    "$ref": "#/types/aws-native:databrew:DatasetDatabaseInputDefinition"
                },
                "s3InputDefinition": {
                    "$ref": "#/types/aws-native:databrew:DatasetS3Location"
                }
            }
        },
        "aws-native:databrew:DatasetJsonOptions": {
            "type": "object",
            "properties": {
                "multiLine": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:databrew:DatasetPathOptions": {
            "type": "object",
            "properties": {
                "filesLimit": {
                    "$ref": "#/types/aws-native:databrew:DatasetFilesLimit"
                },
                "lastModifiedDateCondition": {
                    "$ref": "#/types/aws-native:databrew:DatasetFilterExpression"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:DatasetPathParameter"
                    }
                }
            }
        },
        "aws-native:databrew:DatasetPathParameter": {
            "type": "object",
            "properties": {
                "datasetParameter": {
                    "$ref": "#/types/aws-native:databrew:DatasetDatasetParameter"
                },
                "pathParameterName": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:DatasetS3Location": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:DatasetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:JobColumnSelector": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:JobColumnStatisticsConfiguration": {
            "type": "object",
            "properties": {
                "selectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobColumnSelector"
                    }
                },
                "statistics": {
                    "$ref": "#/types/aws-native:databrew:JobStatisticsConfiguration"
                }
            }
        },
        "aws-native:databrew:JobCsvOutputOptions": {
            "type": "object",
            "properties": {
                "delimiter": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:JobDataCatalogOutput": {
            "type": "object",
            "properties": {
                "catalogId": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "databaseOptions": {
                    "$ref": "#/types/aws-native:databrew:JobDatabaseTableOutputOptions"
                },
                "overwrite": {
                    "type": "boolean"
                },
                "s3Options": {
                    "$ref": "#/types/aws-native:databrew:JobS3TableOutputOptions"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:JobDatabaseOutput": {
            "type": "object",
            "properties": {
                "databaseOptions": {
                    "$ref": "#/types/aws-native:databrew:JobDatabaseTableOutputOptions"
                },
                "databaseOutputMode": {
                    "$ref": "#/types/aws-native:databrew:JobDatabaseOutputDatabaseOutputMode",
                    "description": "Database table name"
                },
                "glueConnectionName": {
                    "type": "string",
                    "description": "Glue connection name"
                }
            }
        },
        "aws-native:databrew:JobDatabaseOutputDatabaseOutputMode": {
            "type": "string"
        },
        "aws-native:databrew:JobDatabaseTableOutputOptions": {
            "type": "object",
            "properties": {
                "tableName": {
                    "type": "string"
                },
                "tempDirectory": {
                    "$ref": "#/types/aws-native:databrew:JobS3Location"
                }
            }
        },
        "aws-native:databrew:JobEncryptionMode": {
            "type": "string"
        },
        "aws-native:databrew:JobJobSample": {
            "type": "object",
            "properties": {
                "mode": {
                    "$ref": "#/types/aws-native:databrew:JobSampleMode"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "aws-native:databrew:JobLogSubscription": {
            "type": "string"
        },
        "aws-native:databrew:JobOutput": {
            "type": "object",
            "properties": {
                "compressionFormat": {
                    "$ref": "#/types/aws-native:databrew:JobOutputCompressionFormat"
                },
                "format": {
                    "$ref": "#/types/aws-native:databrew:JobOutputFormat"
                },
                "formatOptions": {
                    "$ref": "#/types/aws-native:databrew:JobOutputFormatOptions"
                },
                "location": {
                    "$ref": "#/types/aws-native:databrew:JobS3Location"
                },
                "overwrite": {
                    "type": "boolean"
                },
                "partitionColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:databrew:JobOutputCompressionFormat": {
            "type": "string"
        },
        "aws-native:databrew:JobOutputFormat": {
            "type": "string"
        },
        "aws-native:databrew:JobOutputFormatOptions": {
            "type": "object",
            "properties": {
                "csv": {
                    "$ref": "#/types/aws-native:databrew:JobCsvOutputOptions"
                }
            }
        },
        "aws-native:databrew:JobOutputLocation": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:JobParameterMap": {
            "type": "object"
        },
        "aws-native:databrew:JobProfileConfiguration": {
            "type": "object",
            "properties": {
                "columnStatisticsConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobColumnStatisticsConfiguration"
                    }
                },
                "datasetStatisticsConfiguration": {
                    "$ref": "#/types/aws-native:databrew:JobStatisticsConfiguration"
                },
                "profileColumns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobColumnSelector"
                    }
                }
            }
        },
        "aws-native:databrew:JobRecipe": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Recipe name"
                },
                "version": {
                    "type": "string",
                    "description": "Recipe version"
                }
            }
        },
        "aws-native:databrew:JobS3Location": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:JobS3TableOutputOptions": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/types/aws-native:databrew:JobS3Location"
                }
            }
        },
        "aws-native:databrew:JobSampleMode": {
            "type": "string"
        },
        "aws-native:databrew:JobStatisticOverride": {
            "type": "object",
            "properties": {
                "parameters": {
                    "$ref": "#/types/aws-native:databrew:JobParameterMap"
                },
                "statistic": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:JobStatisticsConfiguration": {
            "type": "object",
            "properties": {
                "includedStatistics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "overrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:JobStatisticOverride"
                    }
                }
            }
        },
        "aws-native:databrew:JobTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:JobType": {
            "type": "string"
        },
        "aws-native:databrew:ProjectSample": {
            "type": "object",
            "properties": {
                "size": {
                    "type": "integer",
                    "description": "Sample size"
                },
                "type": {
                    "$ref": "#/types/aws-native:databrew:ProjectSampleType",
                    "description": "Sample type"
                }
            }
        },
        "aws-native:databrew:ProjectSampleType": {
            "type": "string"
        },
        "aws-native:databrew:ProjectTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:RecipeAction": {
            "type": "object",
            "properties": {
                "operation": {
                    "type": "string",
                    "description": "Step action operation"
                },
                "parameters": {
                    "oneOf": [
                        {
                            "$ref": "#/types/aws-native:databrew:RecipeRecipeParameters"
                        },
                        {
                            "$ref": "#/types/aws-native:databrew:RecipeParameterMap"
                        }
                    ]
                }
            }
        },
        "aws-native:databrew:RecipeConditionExpression": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "Input condition to be applied to the target column"
                },
                "targetColumn": {
                    "type": "string",
                    "description": "Name of the target column"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the condition"
                }
            }
        },
        "aws-native:databrew:RecipeDataCatalogInputDefinition": {
            "type": "object",
            "properties": {
                "catalogId": {
                    "type": "string",
                    "description": "Catalog id"
                },
                "databaseName": {
                    "type": "string",
                    "description": "Database name"
                },
                "tableName": {
                    "type": "string",
                    "description": "Table name"
                },
                "tempDirectory": {
                    "$ref": "#/types/aws-native:databrew:RecipeS3Location"
                }
            }
        },
        "aws-native:databrew:RecipeParameterMap": {
            "type": "object"
        },
        "aws-native:databrew:RecipeRecipeParameters": {
            "type": "object",
            "properties": {
                "aggregateFunction": {
                    "type": "string"
                },
                "base": {
                    "type": "string"
                },
                "caseStatement": {
                    "type": "string"
                },
                "categoryMap": {
                    "type": "string"
                },
                "charsToRemove": {
                    "type": "string"
                },
                "collapseConsecutiveWhitespace": {
                    "type": "string"
                },
                "columnDataType": {
                    "type": "string"
                },
                "columnRange": {
                    "type": "string"
                },
                "count": {
                    "type": "string"
                },
                "customCharacters": {
                    "type": "string"
                },
                "customStopWords": {
                    "type": "string"
                },
                "customValue": {
                    "type": "string"
                },
                "datasetsColumns": {
                    "type": "string"
                },
                "dateAddValue": {
                    "type": "string"
                },
                "dateTimeFormat": {
                    "type": "string"
                },
                "dateTimeParameters": {
                    "type": "string"
                },
                "deleteOtherRows": {
                    "type": "string"
                },
                "delimiter": {
                    "type": "string"
                },
                "endPattern": {
                    "type": "string"
                },
                "endPosition": {
                    "type": "string"
                },
                "endValue": {
                    "type": "string"
                },
                "expandContractions": {
                    "type": "string"
                },
                "exponent": {
                    "type": "string"
                },
                "falseString": {
                    "type": "string"
                },
                "groupByAggFunctionOptions": {
                    "type": "string"
                },
                "groupByColumns": {
                    "type": "string"
                },
                "hiddenColumns": {
                    "type": "string"
                },
                "ignoreCase": {
                    "type": "string"
                },
                "includeInSplit": {
                    "type": "string"
                },
                "input": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Input"
                },
                "interval": {
                    "type": "string"
                },
                "isText": {
                    "type": "string"
                },
                "joinKeys": {
                    "type": "string"
                },
                "joinType": {
                    "type": "string"
                },
                "leftColumns": {
                    "type": "string"
                },
                "limit": {
                    "type": "string"
                },
                "lowerBound": {
                    "type": "string"
                },
                "mapType": {
                    "type": "string"
                },
                "modeType": {
                    "type": "string"
                },
                "multiLine": {
                    "type": "boolean"
                },
                "numRows": {
                    "type": "string"
                },
                "numRowsAfter": {
                    "type": "string"
                },
                "numRowsBefore": {
                    "type": "string"
                },
                "orderByColumn": {
                    "type": "string"
                },
                "orderByColumns": {
                    "type": "string"
                },
                "other": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "patternOption1": {
                    "type": "string"
                },
                "patternOption2": {
                    "type": "string"
                },
                "patternOptions": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "removeAllPunctuation": {
                    "type": "string"
                },
                "removeAllQuotes": {
                    "type": "string"
                },
                "removeAllWhitespace": {
                    "type": "string"
                },
                "removeCustomCharacters": {
                    "type": "string"
                },
                "removeCustomValue": {
                    "type": "string"
                },
                "removeLeadingAndTrailingPunctuation": {
                    "type": "string"
                },
                "removeLeadingAndTrailingQuotes": {
                    "type": "string"
                },
                "removeLeadingAndTrailingWhitespace": {
                    "type": "string"
                },
                "removeLetters": {
                    "type": "string"
                },
                "removeNumbers": {
                    "type": "string"
                },
                "removeSourceColumn": {
                    "type": "string"
                },
                "removeSpecialCharacters": {
                    "type": "string"
                },
                "rightColumns": {
                    "type": "string"
                },
                "sampleSize": {
                    "type": "string"
                },
                "sampleType": {
                    "type": "string"
                },
                "secondInput": {
                    "type": "string"
                },
                "secondaryInputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:RecipeSecondaryInput"
                    }
                },
                "sheetIndexes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sheetNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceColumn": {
                    "type": "string"
                },
                "sourceColumn1": {
                    "type": "string"
                },
                "sourceColumn2": {
                    "type": "string"
                },
                "sourceColumns": {
                    "type": "string"
                },
                "startColumnIndex": {
                    "type": "string"
                },
                "startPattern": {
                    "type": "string"
                },
                "startPosition": {
                    "type": "string"
                },
                "startValue": {
                    "type": "string"
                },
                "stemmingMode": {
                    "type": "string"
                },
                "stepCount": {
                    "type": "string"
                },
                "stepIndex": {
                    "type": "string"
                },
                "stopWordsMode": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string"
                },
                "targetColumn": {
                    "type": "string"
                },
                "targetColumnNames": {
                    "type": "string"
                },
                "targetDateFormat": {
                    "type": "string"
                },
                "targetIndex": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "tokenizerPattern": {
                    "type": "string"
                },
                "trueString": {
                    "type": "string"
                },
                "udfLang": {
                    "type": "string"
                },
                "units": {
                    "type": "string"
                },
                "unpivotColumn": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "string"
                },
                "useNewDataFrame": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "value1": {
                    "type": "string"
                },
                "value2": {
                    "type": "string"
                },
                "valueColumn": {
                    "type": "string"
                },
                "viewFrame": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:RecipeRecipeStep": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/types/aws-native:databrew:RecipeAction"
                },
                "conditionExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:databrew:RecipeConditionExpression"
                    },
                    "description": "Condition expressions applied to the step action"
                }
            }
        },
        "aws-native:databrew:RecipeS3Location": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:RecipeSecondaryInput": {
            "type": "object",
            "properties": {
                "dataCatalogInputDefinition": {
                    "$ref": "#/types/aws-native:databrew:RecipeDataCatalogInputDefinition"
                },
                "s3InputDefinition": {
                    "$ref": "#/types/aws-native:databrew:RecipeS3Location"
                }
            }
        },
        "aws-native:databrew:RecipeTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:databrew:ScheduleTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:datasync:AgentEndpointType": {
            "type": "string"
        },
        "aws-native:datasync:AgentTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for an AWS resource tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for an AWS resource tag."
                }
            }
        },
        "aws-native:datasync:LocationEFSEc2Config": {
            "type": "object",
            "properties": {
                "securityGroupArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Amazon Resource Names (ARNs) of the security groups that are configured for the Amazon EC2 resource."
                },
                "subnetArn": {
                    "type": "string",
                    "description": "The ARN of the subnet that DataSync uses to access the target EFS file system."
                }
            }
        },
        "aws-native:datasync:LocationEFSTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for an AWS resource tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for an AWS resource tag."
                }
            }
        },
        "aws-native:datasync:LocationFSxWindowsTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for an AWS resource tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for an AWS resource tag."
                }
            }
        },
        "aws-native:datasync:LocationNFSMountOptions": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/types/aws-native:datasync:LocationNFSMountOptionsVersion",
                    "description": "The specific NFS version that you want DataSync to use to mount your NFS share."
                }
            }
        },
        "aws-native:datasync:LocationNFSMountOptionsVersion": {
            "type": "string"
        },
        "aws-native:datasync:LocationNFSOnPremConfig": {
            "type": "object",
            "properties": {
                "agentArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "ARN(s) of the agent(s) to use for an NFS location."
                }
            }
        },
        "aws-native:datasync:LocationNFSTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for an AWS resource tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for an AWS resource tag."
                }
            }
        },
        "aws-native:datasync:LocationObjectStorageServerProtocol": {
            "type": "string"
        },
        "aws-native:datasync:LocationObjectStorageTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for an AWS resource tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for an AWS resource tag."
                }
            }
        },
        "aws-native:datasync:LocationS3S3Config": {
            "type": "object",
            "properties": {
                "bucketAccessRoleArn": {
                    "type": "string",
                    "description": "The ARN of the IAM role of the Amazon S3 bucket."
                }
            }
        },
        "aws-native:datasync:LocationS3S3StorageClass": {
            "type": "string"
        },
        "aws-native:datasync:LocationS3Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for an AWS resource tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for an AWS resource tag."
                }
            }
        },
        "aws-native:datasync:LocationSMBMountOptions": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/types/aws-native:datasync:LocationSMBMountOptionsVersion",
                    "description": "The specific SMB version that you want DataSync to use to mount your SMB share."
                }
            }
        },
        "aws-native:datasync:LocationSMBMountOptionsVersion": {
            "type": "string"
        },
        "aws-native:datasync:LocationSMBTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for an AWS resource tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for an AWS resource tag."
                }
            }
        },
        "aws-native:datasync:TaskFilterRule": {
            "type": "object",
            "properties": {
                "filterType": {
                    "$ref": "#/types/aws-native:datasync:TaskFilterRuleFilterType",
                    "description": "The type of filter rule to apply. AWS DataSync only supports the SIMPLE_PATTERN rule type."
                },
                "value": {
                    "type": "string",
                    "description": "A single filter string that consists of the patterns to include or exclude. The patterns are delimited by \"|\"."
                }
            }
        },
        "aws-native:datasync:TaskFilterRuleFilterType": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptions": {
            "type": "object",
            "properties": {
                "atime": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsAtime",
                    "description": "A file metadata value that shows the last time a file was accessed (that is, when the file was read or written to)."
                },
                "bytesPerSecond": {
                    "type": "integer",
                    "description": "A value that limits the bandwidth used by AWS DataSync."
                },
                "gid": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsGid",
                    "description": "The group ID (GID) of the file's owners."
                },
                "logLevel": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsLogLevel",
                    "description": "A value that determines the types of logs that DataSync publishes to a log stream in the Amazon CloudWatch log group that you provide."
                },
                "mtime": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsMtime",
                    "description": "A value that indicates the last time that a file was modified (that is, a file was written to) before the PREPARING phase."
                },
                "overwriteMode": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsOverwriteMode",
                    "description": "A value that determines whether files at the destination should be overwritten or preserved when copying files."
                },
                "posixPermissions": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsPosixPermissions",
                    "description": "A value that determines which users or groups can access a file for a specific purpose such as reading, writing, or execution of the file."
                },
                "preserveDeletedFiles": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsPreserveDeletedFiles",
                    "description": "A value that specifies whether files in the destination that don't exist in the source file system should be preserved."
                },
                "preserveDevices": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsPreserveDevices",
                    "description": "A value that determines whether AWS DataSync should preserve the metadata of block and character devices in the source file system, and recreate the files with that device name and metadata on the destination."
                },
                "securityDescriptorCopyFlags": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsSecurityDescriptorCopyFlags",
                    "description": "A value that determines which components of the SMB security descriptor are copied during transfer."
                },
                "taskQueueing": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsTaskQueueing",
                    "description": "A value that determines whether tasks should be queued before executing the tasks."
                },
                "transferMode": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsTransferMode",
                    "description": "A value that determines whether DataSync transfers only the data and metadata that differ between the source and the destination location, or whether DataSync transfers all the content from the source, without comparing to the destination location."
                },
                "uid": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsUid",
                    "description": "The user ID (UID) of the file's owner."
                },
                "verifyMode": {
                    "$ref": "#/types/aws-native:datasync:TaskOptionsVerifyMode",
                    "description": "A value that determines whether a data integrity verification should be performed at the end of a task execution after all data and metadata have been transferred."
                }
            }
        },
        "aws-native:datasync:TaskOptionsAtime": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsGid": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsLogLevel": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsMtime": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsOverwriteMode": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsPosixPermissions": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsPreserveDeletedFiles": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsPreserveDevices": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsSecurityDescriptorCopyFlags": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsTaskQueueing": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsTransferMode": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsUid": {
            "type": "string"
        },
        "aws-native:datasync:TaskOptionsVerifyMode": {
            "type": "string"
        },
        "aws-native:datasync:TaskStatus": {
            "type": "string"
        },
        "aws-native:datasync:TaskTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for an AWS resource tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for an AWS resource tag."
                }
            }
        },
        "aws-native:datasync:TaskTaskSchedule": {
            "type": "object",
            "properties": {
                "scheduleExpression": {
                    "type": "string",
                    "description": "A cron expression that specifies when AWS DataSync initiates a scheduled transfer from a source to a destination location"
                }
            }
        },
        "aws-native:detective:GraphTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. Valid characters are Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @ "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. Valid characters are Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @ "
                }
            }
        },
        "aws-native:devopsguru:NotificationChannelNotificationChannelConfig": {
            "type": "object",
            "properties": {
                "sns": {
                    "$ref": "#/types/aws-native:devopsguru:NotificationChannelSnsChannelConfig"
                }
            }
        },
        "aws-native:devopsguru:NotificationChannelSnsChannelConfig": {
            "type": "object",
            "properties": {
                "topicArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:devopsguru:ResourceCollectionCloudFormationCollectionFilter": {
            "type": "object",
            "properties": {
                "stackNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of CloudFormation stack names."
                }
            }
        },
        "aws-native:devopsguru:ResourceCollectionResourceCollectionFilter": {
            "type": "object",
            "properties": {
                "cloudFormation": {
                    "$ref": "#/types/aws-native:devopsguru:ResourceCollectionCloudFormationCollectionFilter"
                }
            }
        },
        "aws-native:devopsguru:ResourceCollectionResourceCollectionType": {
            "type": "string"
        },
        "aws-native:dynamodb:GlobalTableAttributeDefinition": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "type": "string"
                },
                "attributeType": {
                    "type": "string"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableCapacityAutoScalingSettings": {
            "type": "object",
            "properties": {
                "maxCapacity": {
                    "type": "integer"
                },
                "minCapacity": {
                    "type": "integer"
                },
                "seedCapacity": {
                    "type": "integer"
                },
                "targetTrackingScalingPolicyConfiguration": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableTargetTrackingScalingPolicyConfiguration"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableContributorInsightsSpecification": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableGlobalSecondaryIndex": {
            "type": "object",
            "properties": {
                "indexName": {
                    "type": "string"
                },
                "keySchema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableKeySchema"
                    }
                },
                "projection": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableProjection"
                },
                "writeProvisionedThroughputSettings": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableWriteProvisionedThroughputSettings"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableKeySchema": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "type": "string"
                },
                "keyType": {
                    "type": "string"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableLocalSecondaryIndex": {
            "type": "object",
            "properties": {
                "indexName": {
                    "type": "string"
                },
                "keySchema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableKeySchema"
                    }
                },
                "projection": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableProjection"
                }
            }
        },
        "aws-native:dynamodb:GlobalTablePointInTimeRecoverySpecification": {
            "type": "object",
            "properties": {
                "pointInTimeRecoveryEnabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableProjection": {
            "type": "object",
            "properties": {
                "nonKeyAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectionType": {
                    "type": "string"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableReadProvisionedThroughputSettings": {
            "type": "object",
            "properties": {
                "readCapacityAutoScalingSettings": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableCapacityAutoScalingSettings"
                },
                "readCapacityUnits": {
                    "type": "integer"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableReplicaGlobalSecondaryIndexSpecification": {
            "type": "object",
            "properties": {
                "contributorInsightsSpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableContributorInsightsSpecification"
                },
                "indexName": {
                    "type": "string"
                },
                "readProvisionedThroughputSettings": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableReadProvisionedThroughputSettings"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableReplicaSSESpecification": {
            "type": "object",
            "properties": {
                "kMSMasterKeyId": {
                    "type": "string"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableReplicaSpecification": {
            "type": "object",
            "properties": {
                "contributorInsightsSpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableContributorInsightsSpecification"
                },
                "globalSecondaryIndexes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableReplicaGlobalSecondaryIndexSpecification"
                    }
                },
                "pointInTimeRecoverySpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTablePointInTimeRecoverySpecification"
                },
                "readProvisionedThroughputSettings": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableReadProvisionedThroughputSettings"
                },
                "region": {
                    "type": "string"
                },
                "sSESpecification": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableReplicaSSESpecification"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:dynamodb:GlobalTableTag"
                    }
                }
            }
        },
        "aws-native:dynamodb:GlobalTableSSESpecification": {
            "type": "object",
            "properties": {
                "sSEEnabled": {
                    "type": "boolean"
                },
                "sSEType": {
                    "type": "string"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableStreamSpecification": {
            "type": "object",
            "properties": {
                "streamViewType": {
                    "type": "string"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableTargetTrackingScalingPolicyConfiguration": {
            "type": "object",
            "properties": {
                "disableScaleIn": {
                    "type": "boolean"
                },
                "scaleInCooldown": {
                    "type": "integer"
                },
                "scaleOutCooldown": {
                    "type": "integer"
                },
                "targetValue": {
                    "type": "number"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableTimeToLiveSpecification": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:dynamodb:GlobalTableWriteProvisionedThroughputSettings": {
            "type": "object",
            "properties": {
                "writeCapacityAutoScalingSettings": {
                    "$ref": "#/types/aws-native:dynamodb:GlobalTableCapacityAutoScalingSettings"
                }
            }
        },
        "aws-native:ec2:CarrierGatewayTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:DHCPOptionsTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:EC2FleetCapacityReservationOptionsRequest": {
            "type": "object",
            "properties": {
                "usageStrategy": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetCapacityReservationOptionsRequestUsageStrategy"
                }
            }
        },
        "aws-native:ec2:EC2FleetCapacityReservationOptionsRequestUsageStrategy": {
            "type": "string"
        },
        "aws-native:ec2:EC2FleetExcessCapacityTerminationPolicy": {
            "type": "string"
        },
        "aws-native:ec2:EC2FleetFleetLaunchTemplateConfigRequest": {
            "type": "object",
            "properties": {
                "launchTemplateSpecification": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetFleetLaunchTemplateSpecificationRequest"
                },
                "overrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:EC2FleetFleetLaunchTemplateOverridesRequest"
                    }
                }
            }
        },
        "aws-native:ec2:EC2FleetFleetLaunchTemplateOverridesRequest": {
            "type": "object",
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "maxPrice": {
                    "type": "string"
                },
                "placement": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetPlacement"
                },
                "priority": {
                    "type": "number"
                },
                "subnetId": {
                    "type": "string"
                },
                "weightedCapacity": {
                    "type": "number"
                }
            }
        },
        "aws-native:ec2:EC2FleetFleetLaunchTemplateSpecificationRequest": {
            "type": "object",
            "properties": {
                "launchTemplateId": {
                    "type": "string"
                },
                "launchTemplateName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:EC2FleetOnDemandOptionsRequest": {
            "type": "object",
            "properties": {
                "allocationStrategy": {
                    "type": "string"
                },
                "capacityReservationOptions": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetCapacityReservationOptionsRequest"
                },
                "maxTotalPrice": {
                    "type": "string"
                },
                "minTargetCapacity": {
                    "type": "integer"
                },
                "singleAvailabilityZone": {
                    "type": "boolean"
                },
                "singleInstanceType": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:ec2:EC2FleetPlacement": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "hostId": {
                    "type": "string"
                },
                "hostResourceGroupArn": {
                    "type": "string"
                },
                "partitionNumber": {
                    "type": "integer"
                },
                "spreadDomain": {
                    "type": "string"
                },
                "tenancy": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:EC2FleetSpotOptionsRequest": {
            "type": "object",
            "properties": {
                "allocationStrategy": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetSpotOptionsRequestAllocationStrategy"
                },
                "instanceInterruptionBehavior": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetSpotOptionsRequestInstanceInterruptionBehavior"
                },
                "instancePoolsToUseCount": {
                    "type": "integer"
                },
                "maxTotalPrice": {
                    "type": "string"
                },
                "minTargetCapacity": {
                    "type": "integer"
                },
                "singleAvailabilityZone": {
                    "type": "boolean"
                },
                "singleInstanceType": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:ec2:EC2FleetSpotOptionsRequestAllocationStrategy": {
            "type": "string"
        },
        "aws-native:ec2:EC2FleetSpotOptionsRequestInstanceInterruptionBehavior": {
            "type": "string"
        },
        "aws-native:ec2:EC2FleetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:EC2FleetTagSpecification": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetTagSpecificationResourceType"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:EC2FleetTag"
                    }
                }
            }
        },
        "aws-native:ec2:EC2FleetTagSpecificationResourceType": {
            "type": "string"
        },
        "aws-native:ec2:EC2FleetTargetCapacitySpecificationRequest": {
            "type": "object",
            "properties": {
                "defaultTargetCapacityType": {
                    "$ref": "#/types/aws-native:ec2:EC2FleetTargetCapacitySpecificationRequestDefaultTargetCapacityType"
                },
                "onDemandTargetCapacity": {
                    "type": "integer"
                },
                "spotTargetCapacity": {
                    "type": "integer"
                },
                "totalTargetCapacity": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ec2:EC2FleetTargetCapacitySpecificationRequestDefaultTargetCapacityType": {
            "type": "string"
        },
        "aws-native:ec2:EC2FleetType": {
            "type": "string"
        },
        "aws-native:ec2:FlowLogLogDestinationType": {
            "type": "string"
        },
        "aws-native:ec2:FlowLogResourceType": {
            "type": "string"
        },
        "aws-native:ec2:FlowLogTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:FlowLogTrafficType": {
            "type": "string"
        },
        "aws-native:ec2:LocalGatewayRouteTableVPCAssociationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisAlternatePathHint": {
            "type": "object",
            "properties": {
                "componentArn": {
                    "type": "string"
                },
                "componentId": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisAnalysisAclRule": {
            "type": "object",
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "egress": {
                    "type": "boolean"
                },
                "portRange": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisPortRange"
                },
                "protocol": {
                    "type": "string"
                },
                "ruleAction": {
                    "type": "string"
                },
                "ruleNumber": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisAnalysisLoadBalancerListener": {
            "type": "object",
            "properties": {
                "instancePort": {
                    "type": "integer"
                },
                "loadBalancerPort": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisAnalysisLoadBalancerTarget": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "instance": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "port": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisAnalysisPacketHeader": {
            "type": "object",
            "properties": {
                "destinationAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "destinationPortRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisPortRange"
                    }
                },
                "protocol": {
                    "type": "string"
                },
                "sourceAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourcePortRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisPortRange"
                    }
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisAnalysisRouteTableRoute": {
            "type": "object",
            "properties": {
                "destinationCidr": {
                    "type": "string"
                },
                "destinationPrefixListId": {
                    "type": "string"
                },
                "egressOnlyInternetGatewayId": {
                    "type": "string"
                },
                "gatewayId": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "natGatewayId": {
                    "type": "string"
                },
                "networkInterfaceId": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "transitGatewayId": {
                    "type": "string"
                },
                "vpcPeeringConnectionId": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisAnalysisSecurityGroupRule": {
            "type": "object",
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "portRange": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisPortRange"
                },
                "prefixListId": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisExplanation": {
            "type": "object",
            "properties": {
                "acl": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "aclRule": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisAclRule"
                },
                "address": {
                    "type": "string"
                },
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "attachedTo": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "classicLoadBalancerListener": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisLoadBalancerListener"
                },
                "component": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "customerGateway": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "destination": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "destinationVpc": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "direction": {
                    "type": "string"
                },
                "elasticLoadBalancerListener": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "explanationCode": {
                    "type": "string"
                },
                "ingressRouteTable": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "internetGateway": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "loadBalancerArn": {
                    "type": "string"
                },
                "loadBalancerListenerPort": {
                    "type": "integer"
                },
                "loadBalancerTarget": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisLoadBalancerTarget"
                },
                "loadBalancerTargetGroup": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "loadBalancerTargetGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                    }
                },
                "loadBalancerTargetPort": {
                    "type": "integer"
                },
                "missingComponent": {
                    "type": "string"
                },
                "natGateway": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "networkInterface": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "packetField": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "portRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisPortRange"
                    }
                },
                "prefixList": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "routeTable": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "routeTableRoute": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisRouteTableRoute"
                },
                "securityGroup": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "securityGroupRule": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisSecurityGroupRule"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                    }
                },
                "sourceVpc": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "state": {
                    "type": "string"
                },
                "subnet": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "subnetRouteTable": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "vpc": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "vpcEndpoint": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "vpcPeeringConnection": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "vpnConnection": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "vpnGateway": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisPathComponent": {
            "type": "object",
            "properties": {
                "aclRule": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisAclRule"
                },
                "component": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "destinationVpc": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "inboundHeader": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisPacketHeader"
                },
                "outboundHeader": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisPacketHeader"
                },
                "routeTableRoute": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisRouteTableRoute"
                },
                "securityGroupRule": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisSecurityGroupRule"
                },
                "sequenceNumber": {
                    "type": "integer"
                },
                "sourceVpc": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "subnet": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                },
                "vpc": {
                    "$ref": "#/types/aws-native:ec2:NetworkInsightsAnalysisAnalysisComponent"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisPortRange": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer"
                },
                "to": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsAnalysisStatus": {
            "type": "string"
        },
        "aws-native:ec2:NetworkInsightsAnalysisTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:NetworkInsightsPathProtocol": {
            "type": "string"
        },
        "aws-native:ec2:NetworkInsightsPathTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:PrefixListAddressFamily": {
            "type": "string"
        },
        "aws-native:ec2:PrefixListEntry": {
            "type": "object",
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:PrefixListTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetBlockDeviceMapping": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "ebs": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetEbsBlockDevice"
                },
                "noDevice": {
                    "type": "string"
                },
                "virtualName": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetClassicLoadBalancer": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetClassicLoadBalancersConfig": {
            "type": "object",
            "properties": {
                "classicLoadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetClassicLoadBalancer"
                    }
                }
            }
        },
        "aws-native:ec2:SpotFleetEbsBlockDevice": {
            "type": "object",
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "iops": {
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string"
                },
                "volumeSize": {
                    "type": "integer"
                },
                "volumeType": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetEbsBlockDeviceVolumeType"
                }
            }
        },
        "aws-native:ec2:SpotFleetEbsBlockDeviceVolumeType": {
            "type": "string"
        },
        "aws-native:ec2:SpotFleetFleetLaunchTemplateSpecification": {
            "type": "object",
            "properties": {
                "launchTemplateId": {
                    "type": "string"
                },
                "launchTemplateName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetGroupIdentifier": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetIamInstanceProfileSpecification": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetInstanceIpv6Address": {
            "type": "object",
            "properties": {
                "ipv6Address": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetInstanceNetworkInterfaceSpecification": {
            "type": "object",
            "properties": {
                "associatePublicIpAddress": {
                    "type": "boolean"
                },
                "deleteOnTermination": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "deviceIndex": {
                    "type": "integer"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6AddressCount": {
                    "type": "integer"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetInstanceIpv6Address"
                    }
                },
                "networkInterfaceId": {
                    "type": "string"
                },
                "privateIpAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetPrivateIpAddressSpecification"
                    }
                },
                "secondaryPrivateIpAddressCount": {
                    "type": "integer"
                },
                "subnetId": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetLaunchTemplateConfig": {
            "type": "object",
            "properties": {
                "launchTemplateSpecification": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetFleetLaunchTemplateSpecification"
                },
                "overrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetLaunchTemplateOverrides"
                    }
                }
            }
        },
        "aws-native:ec2:SpotFleetLaunchTemplateOverrides": {
            "type": "object",
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "spotPrice": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "weightedCapacity": {
                    "type": "number"
                }
            }
        },
        "aws-native:ec2:SpotFleetLoadBalancersConfig": {
            "type": "object",
            "properties": {
                "classicLoadBalancersConfig": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetClassicLoadBalancersConfig"
                },
                "targetGroupsConfig": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetTargetGroupsConfig"
                }
            }
        },
        "aws-native:ec2:SpotFleetPrivateIpAddressSpecification": {
            "type": "object",
            "properties": {
                "primary": {
                    "type": "boolean"
                },
                "privateIpAddress": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetSpotCapacityRebalance": {
            "type": "object",
            "properties": {
                "replacementStrategy": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotCapacityRebalanceReplacementStrategy"
                }
            }
        },
        "aws-native:ec2:SpotFleetSpotCapacityRebalanceReplacementStrategy": {
            "type": "string"
        },
        "aws-native:ec2:SpotFleetSpotFleetLaunchSpecification": {
            "type": "object",
            "properties": {
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetBlockDeviceMapping"
                    }
                },
                "ebsOptimized": {
                    "type": "boolean"
                },
                "iamInstanceProfile": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetIamInstanceProfileSpecification"
                },
                "imageId": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "kernelId": {
                    "type": "string"
                },
                "keyName": {
                    "type": "string"
                },
                "monitoring": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetMonitoring"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetInstanceNetworkInterfaceSpecification"
                    }
                },
                "placement": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotPlacement"
                },
                "ramdiskId": {
                    "type": "string"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetGroupIdentifier"
                    }
                },
                "spotPrice": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tagSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetTagSpecification"
                    }
                },
                "userData": {
                    "type": "string"
                },
                "weightedCapacity": {
                    "type": "number"
                }
            }
        },
        "aws-native:ec2:SpotFleetSpotFleetMonitoring": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:ec2:SpotFleetSpotFleetRequestConfigData": {
            "type": "object",
            "properties": {
                "allocationStrategy": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetRequestConfigDataAllocationStrategy"
                },
                "context": {
                    "type": "string"
                },
                "excessCapacityTerminationPolicy": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetRequestConfigDataExcessCapacityTerminationPolicy"
                },
                "iamFleetRole": {
                    "type": "string"
                },
                "instanceInterruptionBehavior": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetRequestConfigDataInstanceInterruptionBehavior"
                },
                "instancePoolsToUseCount": {
                    "type": "integer"
                },
                "launchSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetLaunchSpecification"
                    }
                },
                "launchTemplateConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetLaunchTemplateConfig"
                    }
                },
                "loadBalancersConfig": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetLoadBalancersConfig"
                },
                "onDemandAllocationStrategy": {
                    "type": "string"
                },
                "onDemandMaxTotalPrice": {
                    "type": "string"
                },
                "onDemandTargetCapacity": {
                    "type": "integer"
                },
                "replaceUnhealthyInstances": {
                    "type": "boolean"
                },
                "spotMaintenanceStrategies": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotMaintenanceStrategies"
                },
                "spotMaxTotalPrice": {
                    "type": "string"
                },
                "spotPrice": {
                    "type": "string"
                },
                "targetCapacity": {
                    "type": "integer"
                },
                "terminateInstancesWithExpiration": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetRequestConfigDataType"
                },
                "validFrom": {
                    "type": "string"
                },
                "validUntil": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetSpotFleetRequestConfigDataAllocationStrategy": {
            "type": "string"
        },
        "aws-native:ec2:SpotFleetSpotFleetRequestConfigDataExcessCapacityTerminationPolicy": {
            "type": "string"
        },
        "aws-native:ec2:SpotFleetSpotFleetRequestConfigDataInstanceInterruptionBehavior": {
            "type": "string"
        },
        "aws-native:ec2:SpotFleetSpotFleetRequestConfigDataType": {
            "type": "string"
        },
        "aws-native:ec2:SpotFleetSpotFleetTagSpecification": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotFleetTagSpecificationResourceType"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetTag"
                    }
                }
            }
        },
        "aws-native:ec2:SpotFleetSpotFleetTagSpecificationResourceType": {
            "type": "string"
        },
        "aws-native:ec2:SpotFleetSpotMaintenanceStrategies": {
            "type": "object",
            "properties": {
                "capacityRebalance": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotCapacityRebalance"
                }
            }
        },
        "aws-native:ec2:SpotFleetSpotPlacement": {
            "type": "object",
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "tenancy": {
                    "$ref": "#/types/aws-native:ec2:SpotFleetSpotPlacementTenancy"
                }
            }
        },
        "aws-native:ec2:SpotFleetSpotPlacementTenancy": {
            "type": "string"
        },
        "aws-native:ec2:SpotFleetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetTargetGroup": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:SpotFleetTargetGroupsConfig": {
            "type": "object",
            "properties": {
                "targetGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ec2:SpotFleetTargetGroup"
                    }
                }
            }
        },
        "aws-native:ec2:TransitGatewayConnectTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key of the tag. Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws:."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag. Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters."
                }
            }
        },
        "aws-native:ec2:TransitGatewayConnectTransitGatewayConnectOptions": {
            "type": "object",
            "properties": {
                "protocol": {
                    "type": "string",
                    "description": "The tunnel protocol."
                }
            }
        },
        "aws-native:ec2:TransitGatewayMulticastDomainTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key of the tag. Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws:."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag. Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters."
                }
            }
        },
        "aws-native:ec2:TransitGatewayPeeringAttachmentPeeringAttachmentStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The status code."
                },
                "message": {
                    "type": "string",
                    "description": "The status message, if applicable."
                }
            }
        },
        "aws-native:ec2:TransitGatewayPeeringAttachmentTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key of the tag. Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws:."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag. Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters."
                }
            }
        },
        "aws-native:ec2:TransitGatewayTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:TransitGatewayVpcAttachmentTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ec2:VPCTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecr:ReplicationConfigurationReplicationConfiguration": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecr:ReplicationConfigurationReplicationRule"
                    },
                    "description": "An array of objects representing the replication rules for a replication configuration. A replication configuration may contain only one replication rule but the rule may contain one or more replication destinations."
                }
            }
        },
        "aws-native:ecr:ReplicationConfigurationReplicationDestination": {
            "type": "object",
            "properties": {
                "region": {
                    "type": "string"
                },
                "registryId": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecr:ReplicationConfigurationReplicationRule": {
            "type": "object",
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecr:ReplicationConfigurationReplicationDestination"
                    },
                    "description": "An array of objects representing the details of a replication destination."
                }
            }
        },
        "aws-native:ecr:RepositoryEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "encryptionType": {
                    "$ref": "#/types/aws-native:ecr:RepositoryEncryptionType"
                },
                "kmsKey": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecr:RepositoryEncryptionType": {
            "type": "string"
        },
        "aws-native:ecr:RepositoryImageScanningConfiguration": {
            "type": "object",
            "properties": {
                "scanOnPush": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:ecr:RepositoryImageTagMutability": {
            "type": "string"
        },
        "aws-native:ecr:RepositoryLifecyclePolicy": {
            "type": "object",
            "properties": {
                "lifecyclePolicyText": {
                    "type": "string"
                },
                "registryId": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecr:RepositoryTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:ecs:CapacityProviderAutoScalingGroupProvider": {
            "type": "object",
            "properties": {
                "autoScalingGroupArn": {
                    "type": "string"
                },
                "managedScaling": {
                    "$ref": "#/types/aws-native:ecs:CapacityProviderManagedScaling"
                },
                "managedTerminationProtection": {
                    "$ref": "#/types/aws-native:ecs:CapacityProviderAutoScalingGroupProviderManagedTerminationProtection"
                }
            }
        },
        "aws-native:ecs:CapacityProviderAutoScalingGroupProviderManagedTerminationProtection": {
            "type": "string"
        },
        "aws-native:ecs:CapacityProviderManagedScaling": {
            "type": "object",
            "properties": {
                "instanceWarmupPeriod": {
                    "type": "integer"
                },
                "maximumScalingStepSize": {
                    "type": "integer"
                },
                "minimumScalingStepSize": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/types/aws-native:ecs:CapacityProviderManagedScalingStatus"
                },
                "targetCapacity": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ecs:CapacityProviderManagedScalingStatus": {
            "type": "string"
        },
        "aws-native:ecs:CapacityProviderTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:ClusterCapacityProviderAssociationsCapacityProvider": {
            "type": "string"
        },
        "aws-native:ecs:ClusterCapacityProviderAssociationsCapacityProviderStrategy": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "integer"
                },
                "capacityProvider": {
                    "oneOf": [
                        {
                            "$ref": "#/types/aws-native:ecs:ClusterCapacityProviderAssociationsCapacityProvider"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ecs:ClusterCapacityProviderStrategyItem": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "integer"
                },
                "capacityProvider": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ecs:ClusterClusterConfiguration": {
            "type": "object",
            "properties": {
                "executeCommandConfiguration": {
                    "$ref": "#/types/aws-native:ecs:ClusterExecuteCommandConfiguration"
                }
            }
        },
        "aws-native:ecs:ClusterClusterSettings": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:ClusterExecuteCommandConfiguration": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "type": "string"
                },
                "logConfiguration": {
                    "$ref": "#/types/aws-native:ecs:ClusterExecuteCommandLogConfiguration"
                },
                "logging": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:ClusterExecuteCommandLogConfiguration": {
            "type": "object",
            "properties": {
                "cloudWatchEncryptionEnabled": {
                    "type": "boolean"
                },
                "cloudWatchLogGroupName": {
                    "type": "string"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3EncryptionEnabled": {
                    "type": "boolean"
                },
                "s3KeyPrefix": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:ClusterTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:ServiceAwsVpcConfiguration": {
            "type": "object",
            "properties": {
                "assignPublicIp": {
                    "$ref": "#/types/aws-native:ecs:ServiceAwsVpcConfigurationAssignPublicIp"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:ecs:ServiceAwsVpcConfigurationAssignPublicIp": {
            "type": "string"
        },
        "aws-native:ecs:ServiceCapacityProviderStrategyItem": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "integer"
                },
                "capacityProvider": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ecs:ServiceDeploymentCircuitBreaker": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "rollback": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:ecs:ServiceDeploymentConfiguration": {
            "type": "object",
            "properties": {
                "deploymentCircuitBreaker": {
                    "$ref": "#/types/aws-native:ecs:ServiceDeploymentCircuitBreaker"
                },
                "maximumPercent": {
                    "type": "integer"
                },
                "minimumHealthyPercent": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ecs:ServiceDeploymentController": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/types/aws-native:ecs:ServiceDeploymentControllerType"
                }
            }
        },
        "aws-native:ecs:ServiceDeploymentControllerType": {
            "type": "string"
        },
        "aws-native:ecs:ServiceLaunchType": {
            "type": "string"
        },
        "aws-native:ecs:ServiceLoadBalancer": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "containerPort": {
                    "type": "integer"
                },
                "loadBalancerName": {
                    "type": "string"
                },
                "targetGroupArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:ServiceNetworkConfiguration": {
            "type": "object",
            "properties": {
                "awsvpcConfiguration": {
                    "$ref": "#/types/aws-native:ecs:ServiceAwsVpcConfiguration"
                }
            }
        },
        "aws-native:ecs:ServicePlacementConstraint": {
            "type": "object",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/types/aws-native:ecs:ServicePlacementConstraintType"
                }
            }
        },
        "aws-native:ecs:ServicePlacementConstraintType": {
            "type": "string"
        },
        "aws-native:ecs:ServicePlacementStrategy": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/types/aws-native:ecs:ServicePlacementStrategyType"
                }
            }
        },
        "aws-native:ecs:ServicePlacementStrategyType": {
            "type": "string"
        },
        "aws-native:ecs:ServicePropagateTags": {
            "type": "string"
        },
        "aws-native:ecs:ServiceSchedulingStrategy": {
            "type": "string"
        },
        "aws-native:ecs:ServiceServiceRegistry": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "containerPort": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "registryArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:ServiceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionAuthorizationConfig": {
            "type": "object",
            "properties": {
                "accessPointId": {
                    "type": "string"
                },
                "iAM": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionAuthorizationConfigIAM"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionAuthorizationConfigIAM": {
            "type": "string"
        },
        "aws-native:ecs:TaskDefinitionContainerDefinition": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cpu": {
                    "type": "integer"
                },
                "dependsOn": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionContainerDependency"
                    }
                },
                "disableNetworking": {
                    "type": "boolean"
                },
                "dnsSearchDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dockerLabels": {
                    "$ref": "pulumi.json#/Any"
                },
                "dockerSecurityOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entryPoint": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "environment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionKeyValuePair"
                    },
                    "description": "The environment variables to pass to a container"
                },
                "environmentFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionEnvironmentFile"
                    },
                    "description": "The list of one or more files that contain the environment variables to pass to a container"
                },
                "essential": {
                    "type": "boolean"
                },
                "extraHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionHostEntry"
                    }
                },
                "firelensConfiguration": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionFirelensConfiguration"
                },
                "healthCheck": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionHealthCheck"
                },
                "hostname": {
                    "type": "string"
                },
                "image": {
                    "type": "string",
                    "description": "The image used to start a container. This string is passed directly to the Docker daemon."
                },
                "interactive": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "linuxParameters": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionLinuxParameters"
                },
                "logConfiguration": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionLogConfiguration"
                },
                "memory": {
                    "type": "integer",
                    "description": "The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed."
                },
                "memoryReservation": {
                    "type": "integer"
                },
                "mountPoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionMountPoint"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of a container. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed"
                },
                "portMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionPortMapping"
                    },
                    "description": "Port mappings allow containers to access ports on the host container instance to send or receive traffic."
                },
                "privileged": {
                    "type": "boolean"
                },
                "pseudoTerminal": {
                    "type": "boolean"
                },
                "readonlyRootFilesystem": {
                    "type": "boolean"
                },
                "repositoryCredentials": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionRepositoryCredentials"
                },
                "resourceRequirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionResourceRequirement"
                    }
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionSecret"
                    }
                },
                "startTimeout": {
                    "type": "integer"
                },
                "stopTimeout": {
                    "type": "integer"
                },
                "systemControls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionSystemControl"
                    }
                },
                "ulimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionUlimit"
                    }
                },
                "user": {
                    "type": "string"
                },
                "volumesFrom": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionVolumeFrom"
                    }
                },
                "workingDirectory": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionContainerDependency": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionDevice": {
            "type": "object",
            "properties": {
                "containerPath": {
                    "type": "string"
                },
                "hostPath": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:ecs:TaskDefinitionDockerVolumeConfiguration": {
            "type": "object",
            "properties": {
                "autoprovision": {
                    "type": "boolean"
                },
                "driver": {
                    "type": "string"
                },
                "driverOpts": {
                    "$ref": "pulumi.json#/Any"
                },
                "labels": {
                    "$ref": "pulumi.json#/Any"
                },
                "scope": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionEFSVolumeConfiguration": {
            "type": "object",
            "properties": {
                "authorizationConfig": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionAuthorizationConfig"
                },
                "filesystemId": {
                    "type": "string"
                },
                "rootDirectory": {
                    "type": "string"
                },
                "transitEncryption": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionEFSVolumeConfigurationTransitEncryption"
                },
                "transitEncryptionPort": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionEFSVolumeConfigurationTransitEncryption": {
            "type": "string"
        },
        "aws-native:ecs:TaskDefinitionEnvironmentFile": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionEphemeralStorage": {
            "type": "object",
            "properties": {
                "sizeInGiB": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionFirelensConfiguration": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "pulumi.json#/Any"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionHealthCheck": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A string array representing the command that the container runs to determine if it is healthy."
                },
                "interval": {
                    "type": "integer",
                    "description": "The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds."
                },
                "retries": {
                    "type": "integer",
                    "description": "The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is three retries."
                },
                "startPeriod": {
                    "type": "integer",
                    "description": "The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The startPeriod is disabled by default."
                },
                "timeout": {
                    "type": "integer",
                    "description": "The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5 seconds."
                }
            }
        },
        "aws-native:ecs:TaskDefinitionHostEntry": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionHostVolumeProperties": {
            "type": "object",
            "properties": {
                "sourcePath": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionInferenceAccelerator": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionKernelCapabilities": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "drop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:ecs:TaskDefinitionKeyValuePair": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionLinuxParameters": {
            "type": "object",
            "properties": {
                "capabilities": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionKernelCapabilities"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionDevice"
                    }
                },
                "initProcessEnabled": {
                    "type": "boolean"
                },
                "maxSwap": {
                    "type": "integer"
                },
                "sharedMemorySize": {
                    "type": "integer"
                },
                "swappiness": {
                    "type": "integer"
                },
                "tmpfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionTmpfs"
                    }
                }
            }
        },
        "aws-native:ecs:TaskDefinitionLogConfiguration": {
            "type": "object",
            "properties": {
                "logDriver": {
                    "type": "string"
                },
                "options": {
                    "$ref": "pulumi.json#/Any"
                },
                "secretOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionSecret"
                    }
                }
            }
        },
        "aws-native:ecs:TaskDefinitionMountPoint": {
            "type": "object",
            "properties": {
                "containerPath": {
                    "type": "string"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "sourceVolume": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionPortMapping": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "type": "integer"
                },
                "hostPort": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionProxyConfiguration": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "proxyConfigurationProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ecs:TaskDefinitionKeyValuePair"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionRepositoryCredentials": {
            "type": "object",
            "properties": {
                "credentialsParameter": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionResourceRequirement": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionSecret": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "valueFrom": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionSystemControl": {
            "type": "object",
            "properties": {
                "namespace": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionTaskDefinitionPlacementConstraint": {
            "type": "object",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionTmpfs": {
            "type": "object",
            "properties": {
                "containerPath": {
                    "type": "string"
                },
                "mountOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionUlimit": {
            "type": "object",
            "properties": {
                "hardLimit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "softLimit": {
                    "type": "integer"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionVolume": {
            "type": "object",
            "properties": {
                "dockerVolumeConfiguration": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionDockerVolumeConfiguration"
                },
                "eFSVolumeConfiguration": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionEFSVolumeConfiguration"
                },
                "host": {
                    "$ref": "#/types/aws-native:ecs:TaskDefinitionHostVolumeProperties"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskDefinitionVolumeFrom": {
            "type": "object",
            "properties": {
                "readOnly": {
                    "type": "boolean"
                },
                "sourceContainer": {
                    "type": "string"
                }
            }
        },
        "aws-native:ecs:TaskSetAwsVpcConfiguration": {
            "type": "object",
            "properties": {
                "assignPublicIp": {
                    "$ref": "#/types/aws-native:ecs:TaskSetAwsVpcConfigurationAssignPublicIp",
                    "description": "Whether the task's elastic network interface receives a public IP address. The default value is DISABLED."
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used. There is a limit of 5 security groups that can be specified per AwsVpcConfiguration."
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnets associated with the task or service. There is a limit of 16 subnets that can be specified per AwsVpcConfiguration."
                }
            }
        },
        "aws-native:ecs:TaskSetAwsVpcConfigurationAssignPublicIp": {
            "type": "string"
        },
        "aws-native:ecs:TaskSetLaunchType": {
            "type": "string"
        },
        "aws-native:ecs:TaskSetLoadBalancer": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string",
                    "description": "The name of the container (as it appears in a container definition) to associate with the load balancer."
                },
                "containerPort": {
                    "type": "integer",
                    "description": "The port on the container to associate with the load balancer. This port must correspond to a containerPort in the task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they are launched on must allow ingress traffic on the hostPort of the port mapping."
                },
                "loadBalancerName": {
                    "type": "string",
                    "description": "The name of the load balancer to associate with the Amazon ECS service or task set. A load balancer name is only specified when using a Classic Load Balancer. If you are using an Application Load Balancer or a Network Load Balancer this should be omitted."
                },
                "targetGroupArn": {
                    "type": "string",
                    "description": "The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or task set. A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. If you are using a Classic Load Balancer this should be omitted. For services using the ECS deployment controller, you can specify one or multiple target groups. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html in the Amazon Elastic Container Service Developer Guide. For services using the CODE_DEPLOY deployment controller, you are required to define two target groups for the load balancer. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html in the Amazon Elastic Container Service Developer Guide. If your service's task definition uses the awsvpc network mode (which is required for the Fargate launch type), you must choose ip as the target type, not instance, when creating your target groups because tasks that use the awsvpc network mode are associated with an elastic network interface, not an Amazon EC2 instance."
                }
            }
        },
        "aws-native:ecs:TaskSetNetworkConfiguration": {
            "type": "object",
            "properties": {
                "awsVpcConfiguration": {
                    "$ref": "#/types/aws-native:ecs:TaskSetAwsVpcConfiguration"
                }
            }
        },
        "aws-native:ecs:TaskSetScale": {
            "type": "object",
            "properties": {
                "unit": {
                    "$ref": "#/types/aws-native:ecs:TaskSetScaleUnit",
                    "description": "The unit of measure for the scale value."
                },
                "value": {
                    "type": "number",
                    "description": "The value, specified as a percent total of a service's desiredCount, to scale the task set. Accepted values are numbers between 0 and 100."
                }
            }
        },
        "aws-native:ecs:TaskSetScaleUnit": {
            "type": "string"
        },
        "aws-native:ecs:TaskSetServiceRegistry": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string",
                    "description": "The container name value, already specified in the task definition, to be used for your service discovery service. If the task definition that your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition that your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both."
                },
                "containerPort": {
                    "type": "integer",
                    "description": "The port value, already specified in the task definition, to be used for your service discovery service. If the task definition your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both."
                },
                "port": {
                    "type": "integer",
                    "description": "The port value used if your service discovery service specified an SRV record. This field may be used if both the awsvpc network mode and SRV records are used."
                },
                "registryArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is AWS Cloud Map. For more information, see https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html"
                }
            }
        },
        "aws-native:efs:AccessPointAccessPointTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:efs:AccessPointCreationInfo": {
            "type": "object",
            "properties": {
                "ownerGid": {
                    "type": "string",
                    "description": "Specifies the POSIX group ID to apply to the RootDirectory. Accepts values from 0 to 2^32 (4294967295)."
                },
                "ownerUid": {
                    "type": "string",
                    "description": "Specifies the POSIX user ID to apply to the RootDirectory. Accepts values from 0 to 2^32 (4294967295)."
                },
                "permissions": {
                    "type": "string",
                    "description": "Specifies the POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits."
                }
            }
        },
        "aws-native:efs:AccessPointPosixUser": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "string",
                    "description": "The POSIX group ID used for all file system operations using this access point."
                },
                "secondaryGids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Secondary POSIX group IDs used for all file system operations using this access point."
                },
                "uid": {
                    "type": "string",
                    "description": "The POSIX user ID used for all file system operations using this access point."
                }
            }
        },
        "aws-native:efs:AccessPointRootDirectory": {
            "type": "object",
            "properties": {
                "creationInfo": {
                    "$ref": "#/types/aws-native:efs:AccessPointCreationInfo",
                    "description": "(Optional) Specifies the POSIX IDs and permissions to apply to the access point's RootDirectory. If the RootDirectory\u003ePath specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo, you must provide values for all properties.   If you do not provide CreationInfo and the specified RootDirectory\u003ePath does not exist, attempts to mount the file system using the access point will fail. "
                },
                "path": {
                    "type": "string",
                    "description": "Specifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo."
                }
            }
        },
        "aws-native:efs:FileSystemBackupPolicy": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "aws-native:efs:FileSystemElasticFileSystemTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:efs:FileSystemLifecyclePolicy": {
            "type": "object",
            "properties": {
                "transitionToIA": {
                    "type": "string"
                },
                "transitionToPrimaryStorageClass": {
                    "type": "string"
                }
            }
        },
        "aws-native:eks:AddonResolveConflicts": {
            "type": "string"
        },
        "aws-native:eks:AddonTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:eks:ClusterEncryptionConfig": {
            "type": "object",
            "properties": {
                "provider": {
                    "$ref": "#/types/aws-native:eks:ClusterProvider"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:eks:ClusterKubernetesNetworkConfig": {
            "type": "object",
            "properties": {
                "serviceIpv4Cidr": {
                    "type": "string"
                }
            }
        },
        "aws-native:eks:ClusterProvider": {
            "type": "object",
            "properties": {
                "keyArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:eks:ClusterResourcesVpcConfig": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:eks:FargateProfileLabel": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the label."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the label. "
                }
            }
        },
        "aws-native:eks:FargateProfileSelector": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:eks:FargateProfileLabel"
                    }
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "aws-native:eks:FargateProfileTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:elasticache:GlobalReplicationGroupGlobalReplicationGroupMember": {
            "type": "object",
            "properties": {
                "replicationGroupId": {
                    "type": "string",
                    "description": "Regionally unique identifier for the member i.e. ReplicationGroupId."
                },
                "replicationGroupRegion": {
                    "type": "string",
                    "description": "The AWS region of the Global Datastore member."
                },
                "role": {
                    "$ref": "#/types/aws-native:elasticache:GlobalReplicationGroupGlobalReplicationGroupMemberRole",
                    "description": "Indicates the role of the member, primary or secondary."
                }
            }
        },
        "aws-native:elasticache:GlobalReplicationGroupGlobalReplicationGroupMemberRole": {
            "type": "string"
        },
        "aws-native:elasticache:GlobalReplicationGroupRegionalConfiguration": {
            "type": "object",
            "properties": {
                "replicationGroupId": {
                    "type": "string",
                    "description": "The replication group id of the Global Datastore member."
                },
                "replicationGroupRegion": {
                    "type": "string",
                    "description": "The AWS region of the Global Datastore member."
                },
                "reshardingConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticache:GlobalReplicationGroupReshardingConfiguration"
                    },
                    "description": "A list of PreferredAvailabilityZones objects that specifies the configuration of a node group in the resharded cluster. "
                }
            }
        },
        "aws-native:elasticache:GlobalReplicationGroupReshardingConfiguration": {
            "type": "object",
            "properties": {
                "nodeGroupId": {
                    "type": "string",
                    "description": "Unique identifier for the Node Group. This is either auto-generated by ElastiCache (4-digit id) or a user supplied id."
                },
                "preferredAvailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of preferred availability zones for the nodes of new node groups."
                }
            }
        },
        "aws-native:elasticache:UserEngine": {
            "type": "string"
        },
        "aws-native:elasticache:UserGroupEngine": {
            "type": "string"
        },
        "aws-native:elasticloadbalancingv2:ListenerAction": {
            "type": "object",
            "properties": {
                "authenticateCognitoConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerAuthenticateCognitoConfig"
                },
                "authenticateOidcConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerAuthenticateOidcConfig"
                },
                "fixedResponseConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerFixedResponseConfig"
                },
                "forwardConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerForwardConfig"
                },
                "order": {
                    "type": "integer"
                },
                "redirectConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRedirectConfig"
                },
                "targetGroupArn": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerAuthenticateCognitoConfig": {
            "type": "object",
            "properties": {
                "authenticationRequestExtraParams": {
                    "$ref": "pulumi.json#/Any"
                },
                "onUnauthenticatedRequest": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "sessionCookieName": {
                    "type": "string"
                },
                "sessionTimeout": {
                    "type": "string"
                },
                "userPoolArn": {
                    "type": "string"
                },
                "userPoolClientId": {
                    "type": "string"
                },
                "userPoolDomain": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerAuthenticateOidcConfig": {
            "type": "object",
            "properties": {
                "authenticationRequestExtraParams": {
                    "$ref": "pulumi.json#/Any"
                },
                "authorizationEndpoint": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "onUnauthenticatedRequest": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "sessionCookieName": {
                    "type": "string"
                },
                "sessionTimeout": {
                    "type": "string"
                },
                "tokenEndpoint": {
                    "type": "string"
                },
                "userInfoEndpoint": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerCertificate": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerFixedResponseConfig": {
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "messageBody": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerForwardConfig": {
            "type": "object",
            "properties": {
                "targetGroupStickinessConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerTargetGroupStickinessConfig"
                },
                "targetGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerTargetGroupTuple"
                    }
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRedirectConfig": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleAction": {
            "type": "object",
            "properties": {
                "authenticateCognitoConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleAuthenticateCognitoConfig"
                },
                "authenticateOidcConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleAuthenticateOidcConfig"
                },
                "fixedResponseConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleFixedResponseConfig"
                },
                "forwardConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleForwardConfig"
                },
                "order": {
                    "type": "integer"
                },
                "redirectConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleRedirectConfig"
                },
                "targetGroupArn": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleAuthenticateCognitoConfig": {
            "type": "object",
            "properties": {
                "authenticationRequestExtraParams": {
                    "$ref": "pulumi.json#/Any"
                },
                "onUnauthenticatedRequest": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "sessionCookieName": {
                    "type": "string"
                },
                "sessionTimeout": {
                    "type": "integer"
                },
                "userPoolArn": {
                    "type": "string"
                },
                "userPoolClientId": {
                    "type": "string"
                },
                "userPoolDomain": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleAuthenticateOidcConfig": {
            "type": "object",
            "properties": {
                "authenticationRequestExtraParams": {
                    "$ref": "pulumi.json#/Any"
                },
                "authorizationEndpoint": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "onUnauthenticatedRequest": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "sessionCookieName": {
                    "type": "string"
                },
                "sessionTimeout": {
                    "type": "integer"
                },
                "tokenEndpoint": {
                    "type": "string"
                },
                "useExistingClientSecret": {
                    "type": "boolean"
                },
                "userInfoEndpoint": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleFixedResponseConfig": {
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "messageBody": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleForwardConfig": {
            "type": "object",
            "properties": {
                "targetGroupStickinessConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleTargetGroupStickinessConfig"
                },
                "targetGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleTargetGroupTuple"
                    }
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleHostHeaderConfig": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleHttpHeaderConfig": {
            "type": "object",
            "properties": {
                "httpHeaderName": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleHttpRequestMethodConfig": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRulePathPatternConfig": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleQueryStringConfig": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleQueryStringKeyValue"
                    }
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleQueryStringKeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleRedirectConfig": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleRuleCondition": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "hostHeaderConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleHostHeaderConfig"
                },
                "httpHeaderConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleHttpHeaderConfig"
                },
                "httpRequestMethodConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleHttpRequestMethodConfig"
                },
                "pathPatternConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRulePathPatternConfig"
                },
                "queryStringConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleQueryStringConfig"
                },
                "sourceIpConfig": {
                    "$ref": "#/types/aws-native:elasticloadbalancingv2:ListenerRuleSourceIpConfig"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleSourceIpConfig": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleTargetGroupStickinessConfig": {
            "type": "object",
            "properties": {
                "durationSeconds": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerRuleTargetGroupTuple": {
            "type": "object",
            "properties": {
                "targetGroupArn": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerTargetGroupStickinessConfig": {
            "type": "object",
            "properties": {
                "durationSeconds": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:elasticloadbalancingv2:ListenerTargetGroupTuple": {
            "type": "object",
            "properties": {
                "targetGroupArn": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "aws-native:emr:StudioAuthMode": {
            "type": "string"
        },
        "aws-native:emr:StudioSessionMappingIdentityType": {
            "type": "string"
        },
        "aws-native:emr:StudioTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:emrcontainers:VirtualClusterContainerInfo": {
            "type": "object",
            "properties": {
                "eksInfo": {
                    "$ref": "#/types/aws-native:emrcontainers:VirtualClusterEksInfo"
                }
            }
        },
        "aws-native:emrcontainers:VirtualClusterContainerProvider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the container cluster"
                },
                "info": {
                    "$ref": "#/types/aws-native:emrcontainers:VirtualClusterContainerInfo"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the container provider"
                }
            }
        },
        "aws-native:emrcontainers:VirtualClusterEksInfo": {
            "type": "object",
            "properties": {
                "namespace": {
                    "type": "string"
                }
            }
        },
        "aws-native:emrcontainers:VirtualClusterTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:events:ApiDestinationHttpMethod": {
            "type": "string"
        },
        "aws-native:events:ConnectionAuthorizationType": {
            "type": "string"
        },
        "aws-native:finspace:EnvironmentFederationMode": {
            "type": "string"
        },
        "aws-native:finspace:EnvironmentFederationParameters": {
            "type": "object",
            "properties": {
                "applicationCallBackURL": {
                    "type": "string",
                    "description": "SAML metadata URL to link with the Environment"
                },
                "attributeMap": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Attribute map for SAML configuration"
                },
                "federationProviderName": {
                    "type": "string",
                    "description": "Federation provider name to link with the Environment"
                },
                "federationURN": {
                    "type": "string",
                    "description": "SAML metadata URL to link with the Environment"
                },
                "samlMetadataDocument": {
                    "type": "string",
                    "description": "SAML metadata document to link the federation provider to the Environment"
                },
                "samlMetadataURL": {
                    "type": "string",
                    "description": "SAML metadata URL to link with the Environment"
                }
            }
        },
        "aws-native:finspace:EnvironmentStatus": {
            "type": "string"
        },
        "aws-native:fis:ExperimentTemplateExperimentTemplateActionMap": {
            "type": "object"
        },
        "aws-native:fis:ExperimentTemplateExperimentTemplateStopCondition": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:fis:ExperimentTemplateExperimentTemplateTargetMap": {
            "type": "object"
        },
        "aws-native:fms:PolicyIEMap": {
            "type": "object",
            "properties": {
                "aCCOUNT": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oRGUNIT": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:fms:PolicyPolicyTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:fms:PolicyResourceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:frauddetector:DetectorDetectorVersionStatus": {
            "type": "string"
        },
        "aws-native:frauddetector:DetectorEntityType": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the entity type was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "inline": {
                    "type": "boolean"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the entity type was last updated."
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorTag"
                    },
                    "description": "Tags associated with this entity type."
                }
            }
        },
        "aws-native:frauddetector:DetectorEventType": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the event type."
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the event type was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the event type."
                },
                "entityTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorEntityType"
                    }
                },
                "eventVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorEventVariable"
                    }
                },
                "inline": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorLabel"
                    }
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the event type was last updated."
                },
                "name": {
                    "type": "string",
                    "description": "The name for the event type"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorTag"
                    },
                    "description": "Tags associated with this event type."
                }
            }
        },
        "aws-native:frauddetector:DetectorEventVariable": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the event variable was created."
                },
                "dataSource": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorEventVariableDataSource"
                },
                "dataType": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorEventVariableDataType"
                },
                "defaultValue": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "inline": {
                    "type": "boolean"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the event variable was last updated."
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorTag"
                    },
                    "description": "Tags associated with this event variable."
                },
                "variableType": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorEventVariableVariableType"
                }
            }
        },
        "aws-native:frauddetector:DetectorEventVariableDataSource": {
            "type": "string"
        },
        "aws-native:frauddetector:DetectorEventVariableDataType": {
            "type": "string"
        },
        "aws-native:frauddetector:DetectorEventVariableVariableType": {
            "type": "string"
        },
        "aws-native:frauddetector:DetectorLabel": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the label was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "inline": {
                    "type": "boolean"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the label was last updated."
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorTag"
                    },
                    "description": "Tags associated with this label."
                }
            }
        },
        "aws-native:frauddetector:DetectorModel": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                }
            }
        },
        "aws-native:frauddetector:DetectorOutcome": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the outcome was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "inline": {
                    "type": "boolean"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the outcome was last updated."
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorTag"
                    },
                    "description": "Tags associated with this outcome."
                }
            }
        },
        "aws-native:frauddetector:DetectorRule": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the event type was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "detectorId": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "language": {
                    "$ref": "#/types/aws-native:frauddetector:DetectorRuleLanguage"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the event type was last updated."
                },
                "outcomes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorOutcome"
                    }
                },
                "ruleId": {
                    "type": "string"
                },
                "ruleVersion": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:DetectorTag"
                    },
                    "description": "Tags associated with this event type."
                }
            }
        },
        "aws-native:frauddetector:DetectorRuleExecutionMode": {
            "type": "string"
        },
        "aws-native:frauddetector:DetectorRuleLanguage": {
            "type": "string"
        },
        "aws-native:frauddetector:DetectorTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:frauddetector:EntityTypeTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:frauddetector:EventTypeEntityType": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the event type was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "inline": {
                    "type": "boolean"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the event type was last updated."
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeTag"
                    },
                    "description": "Tags associated with this event type."
                }
            }
        },
        "aws-native:frauddetector:EventTypeEventVariable": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the event type was created."
                },
                "dataSource": {
                    "$ref": "#/types/aws-native:frauddetector:EventTypeEventVariableDataSource"
                },
                "dataType": {
                    "$ref": "#/types/aws-native:frauddetector:EventTypeEventVariableDataType"
                },
                "defaultValue": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "inline": {
                    "type": "boolean"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the event type was last updated."
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeTag"
                    },
                    "description": "Tags associated with this event type."
                },
                "variableType": {
                    "$ref": "#/types/aws-native:frauddetector:EventTypeEventVariableVariableType"
                }
            }
        },
        "aws-native:frauddetector:EventTypeEventVariableDataSource": {
            "type": "string"
        },
        "aws-native:frauddetector:EventTypeEventVariableDataType": {
            "type": "string"
        },
        "aws-native:frauddetector:EventTypeEventVariableVariableType": {
            "type": "string"
        },
        "aws-native:frauddetector:EventTypeLabel": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time when the event type was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description."
                },
                "inline": {
                    "type": "boolean"
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "description": "The time when the event type was last updated."
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:frauddetector:EventTypeTag"
                    },
                    "description": "Tags associated with this event type."
                }
            }
        },
        "aws-native:frauddetector:EventTypeTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:frauddetector:LabelTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:frauddetector:OutcomeTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:frauddetector:VariableDataSource": {
            "type": "string"
        },
        "aws-native:frauddetector:VariableDataType": {
            "type": "string"
        },
        "aws-native:frauddetector:VariableTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:frauddetector:VariableVariableType": {
            "type": "string"
        },
        "aws-native:gamelift:AliasRoutingStrategy": {
            "type": "object",
            "properties": {
                "fleetId": {
                    "type": "string",
                    "description": "A unique identifier for a fleet that the alias points to. If you specify SIMPLE for the Type property, you must specify this property."
                },
                "message": {
                    "type": "string",
                    "description": "The message text to be used with a terminal routing strategy. If you specify TERMINAL for the Type property, you must specify this property."
                },
                "type": {
                    "$ref": "#/types/aws-native:gamelift:AliasRoutingStrategyType",
                    "description": "Simple routing strategy. The alias resolves to one specific fleet. Use this type when routing to active fleets."
                }
            }
        },
        "aws-native:gamelift:AliasRoutingStrategyType": {
            "type": "string"
        },
        "aws-native:gamelift:FleetCertificateConfiguration": {
            "type": "object",
            "properties": {
                "certificateType": {
                    "$ref": "#/types/aws-native:gamelift:FleetCertificateConfigurationCertificateType"
                }
            }
        },
        "aws-native:gamelift:FleetCertificateConfigurationCertificateType": {
            "type": "string"
        },
        "aws-native:gamelift:FleetFleetType": {
            "type": "string"
        },
        "aws-native:gamelift:FleetIpPermission": {
            "type": "object",
            "properties": {
                "fromPort": {
                    "type": "integer",
                    "description": "A starting value for a range of allowed port numbers."
                },
                "ipRange": {
                    "type": "string",
                    "description": "A range of allowed IP addresses. This value must be expressed in CIDR notation. Example: \"000.000.000.000/[subnet mask]\" or optionally the shortened version \"0.0.0.0/[subnet mask]\"."
                },
                "protocol": {
                    "$ref": "#/types/aws-native:gamelift:FleetIpPermissionProtocol",
                    "description": "The network communication protocol used by the fleet."
                },
                "toPort": {
                    "type": "integer",
                    "description": "An ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than FromPort."
                }
            }
        },
        "aws-native:gamelift:FleetIpPermissionProtocol": {
            "type": "string"
        },
        "aws-native:gamelift:FleetLocationCapacity": {
            "type": "object",
            "properties": {
                "desiredEC2Instances": {
                    "type": "integer",
                    "description": "The number of EC2 instances you want to maintain in the specified fleet location. This value must fall between the minimum and maximum size limits."
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum value that is allowed for the fleet's instance count for a location. When creating a new fleet, GameLift automatically sets this value to \"1\". Once the fleet is active, you can change this value."
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum value allowed for the fleet's instance count for a location. When creating a new fleet, GameLift automatically sets this value to \"0\". After the fleet is active, you can change this value."
                }
            }
        },
        "aws-native:gamelift:FleetLocationConfiguration": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "locationCapacity": {
                    "$ref": "#/types/aws-native:gamelift:FleetLocationCapacity"
                }
            }
        },
        "aws-native:gamelift:FleetNewGameSessionProtectionPolicy": {
            "type": "string"
        },
        "aws-native:gamelift:FleetResourceCreationLimitPolicy": {
            "type": "object",
            "properties": {
                "newGameSessionsPerCreator": {
                    "type": "integer",
                    "description": "The maximum number of game sessions that an individual can create during the policy period."
                },
                "policyPeriodInMinutes": {
                    "type": "integer",
                    "description": "The time span used in evaluating the resource creation limit policy."
                }
            }
        },
        "aws-native:gamelift:FleetRuntimeConfiguration": {
            "type": "object",
            "properties": {
                "gameSessionActivationTimeoutSeconds": {
                    "type": "integer",
                    "description": "The maximum amount of time (in seconds) that a game session can remain in status ACTIVATING. If the game session is not active before the timeout, activation is terminated and the game session status is changed to TERMINATED."
                },
                "maxConcurrentGameSessionActivations": {
                    "type": "integer",
                    "description": "The maximum number of game sessions with status ACTIVATING to allow on an instance simultaneously. This setting limits the amount of instance resources that can be used for new game activations at any one time."
                },
                "serverProcesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:gamelift:FleetServerProcess"
                    },
                    "description": "A collection of server process configurations that describe which server processes to run on each instance in a fleet."
                }
            }
        },
        "aws-native:gamelift:FleetServerProcess": {
            "type": "object",
            "properties": {
                "concurrentExecutions": {
                    "type": "integer",
                    "description": "The number of server processes that use this configuration to run concurrently on an instance."
                },
                "launchPath": {
                    "type": "string",
                    "description": "The location of the server executable in a custom game build or the name of the Realtime script file that contains the Init() function. Game builds and Realtime scripts are installed on instances at the root:\n\nWindows (for custom game builds only): C:\\game. Example: \"C:\\game\\MyGame\\server.exe\"\n\nLinux: /local/game. Examples: \"/local/game/MyGame/server.exe\" or \"/local/game/MyRealtimeScript.js\""
                },
                "parameters": {
                    "type": "string",
                    "description": "An optional list of parameters to pass to the server executable or Realtime script on launch."
                }
            }
        },
        "aws-native:gamelift:GameServerGroupAutoScalingPolicy": {
            "type": "object",
            "properties": {
                "estimatedInstanceWarmup": {
                    "type": "number"
                },
                "targetTrackingConfiguration": {
                    "$ref": "#/types/aws-native:gamelift:GameServerGroupTargetTrackingConfiguration"
                }
            }
        },
        "aws-native:gamelift:GameServerGroupBalancingStrategy": {
            "type": "string"
        },
        "aws-native:gamelift:GameServerGroupDeleteOption": {
            "type": "string"
        },
        "aws-native:gamelift:GameServerGroupGameServerProtectionPolicy": {
            "type": "string"
        },
        "aws-native:gamelift:GameServerGroupInstanceDefinition": {
            "type": "object",
            "properties": {
                "instanceType": {
                    "type": "string"
                },
                "weightedCapacity": {
                    "type": "string"
                }
            }
        },
        "aws-native:gamelift:GameServerGroupLaunchTemplate": {
            "type": "object",
            "properties": {
                "launchTemplateId": {
                    "type": "string"
                },
                "launchTemplateName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "aws-native:gamelift:GameServerGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key for a developer-defined key:value pair for tagging an AWS resource."
                },
                "value": {
                    "type": "string",
                    "description": "The value for a developer-defined key:value pair for tagging an AWS resource."
                }
            }
        },
        "aws-native:gamelift:GameServerGroupTargetTrackingConfiguration": {
            "type": "object",
            "properties": {
                "targetValue": {
                    "type": "number"
                }
            }
        },
        "aws-native:globalaccelerator:AcceleratorIpAddressType": {
            "type": "string"
        },
        "aws-native:globalaccelerator:AcceleratorTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key of the tag. Value can be 1 to 127 characters."
                },
                "value": {
                    "type": "string",
                    "description": "Value for the tag. Value can be 1 to 255 characters."
                }
            }
        },
        "aws-native:globalaccelerator:EndpointGroupEndpointConfiguration": {
            "type": "object",
            "properties": {
                "clientIPPreservationEnabled": {
                    "type": "boolean",
                    "description": "true if client ip should be preserved"
                },
                "endpointId": {
                    "type": "string",
                    "description": "Id of the endpoint. For Network/Application Load Balancer this value is the ARN.  For EIP, this value is the allocation ID.  For EC2 instances, this is the EC2 instance ID"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for the endpoint."
                }
            }
        },
        "aws-native:globalaccelerator:EndpointGroupHealthCheckProtocol": {
            "type": "string"
        },
        "aws-native:globalaccelerator:EndpointGroupPortOverride": {
            "type": "object",
            "properties": {
                "endpointPort": {
                    "type": "integer"
                },
                "listenerPort": {
                    "type": "integer"
                }
            }
        },
        "aws-native:globalaccelerator:ListenerClientAffinity": {
            "type": "string"
        },
        "aws-native:globalaccelerator:ListenerPortRange": {
            "type": "object",
            "properties": {
                "fromPort": {
                    "type": "integer"
                },
                "toPort": {
                    "type": "integer"
                }
            }
        },
        "aws-native:globalaccelerator:ListenerProtocol": {
            "type": "string"
        },
        "aws-native:glue:RegistryTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A key to identify the tag."
                },
                "value": {
                    "type": "string",
                    "description": "Corresponding tag value for the key."
                }
            }
        },
        "aws-native:glue:SchemaCompatibility": {
            "type": "string"
        },
        "aws-native:glue:SchemaDataFormat": {
            "type": "string"
        },
        "aws-native:glue:SchemaRegistry": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name for the Registry."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the registry in which the schema will be created."
                }
            }
        },
        "aws-native:glue:SchemaSchemaVersion": {
            "type": "object",
            "properties": {
                "isLatest": {
                    "type": "boolean",
                    "description": "Indicates if the latest version needs to be updated."
                },
                "versionNumber": {
                    "type": "integer",
                    "description": "Indicates the version number in the schema to update."
                }
            }
        },
        "aws-native:glue:SchemaTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A key to identify the tag."
                },
                "value": {
                    "type": "string",
                    "description": "Corresponding tag value for the key."
                }
            }
        },
        "aws-native:glue:SchemaVersionSchema": {
            "type": "object",
            "properties": {
                "registryName": {
                    "type": "string",
                    "description": "Name of the registry to identify where the Schema is located."
                },
                "schemaArn": {
                    "type": "string",
                    "description": "Amazon Resource Name for the Schema. This attribute can be used to uniquely represent the Schema."
                },
                "schemaName": {
                    "type": "string",
                    "description": "Name of the schema. This parameter requires RegistryName to be provided."
                }
            }
        },
        "aws-native:greengrassv2:ComponentVersionComponentPlatform": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "pulumi.json#/Any"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:greengrassv2:ComponentVersionLambdaContainerParams": {
            "type": "object",
            "properties": {
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaDeviceMount"
                    }
                },
                "memorySizeInKB": {
                    "type": "integer"
                },
                "mountROSysfs": {
                    "type": "boolean"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaVolumeMount"
                    }
                }
            }
        },
        "aws-native:greengrassv2:ComponentVersionLambdaDeviceMount": {
            "type": "object",
            "properties": {
                "addGroupOwner": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "permission": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaFilesystemPermission"
                }
            }
        },
        "aws-native:greengrassv2:ComponentVersionLambdaEventSource": {
            "type": "object",
            "properties": {
                "topic": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaEventSourceType"
                }
            }
        },
        "aws-native:greengrassv2:ComponentVersionLambdaEventSourceType": {
            "type": "string"
        },
        "aws-native:greengrassv2:ComponentVersionLambdaExecutionParameters": {
            "type": "object",
            "properties": {
                "environmentVariables": {
                    "$ref": "pulumi.json#/Any"
                },
                "eventSources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaEventSource"
                    }
                },
                "execArgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inputPayloadEncodingType": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaExecutionParametersInputPayloadEncodingType"
                },
                "linuxProcessParams": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaLinuxProcessParams"
                },
                "maxIdleTimeInSeconds": {
                    "type": "integer"
                },
                "maxInstancesCount": {
                    "type": "integer"
                },
                "maxQueueSize": {
                    "type": "integer"
                },
                "pinned": {
                    "type": "boolean"
                },
                "statusTimeoutInSeconds": {
                    "type": "integer"
                },
                "timeoutInSeconds": {
                    "type": "integer"
                }
            }
        },
        "aws-native:greengrassv2:ComponentVersionLambdaExecutionParametersInputPayloadEncodingType": {
            "type": "string"
        },
        "aws-native:greengrassv2:ComponentVersionLambdaFilesystemPermission": {
            "type": "string"
        },
        "aws-native:greengrassv2:ComponentVersionLambdaFunctionRecipeSource": {
            "type": "object",
            "properties": {
                "componentDependencies": {
                    "$ref": "pulumi.json#/Any"
                },
                "componentLambdaParameters": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaExecutionParameters"
                },
                "componentName": {
                    "type": "string"
                },
                "componentPlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:greengrassv2:ComponentVersionComponentPlatform"
                    }
                },
                "componentVersion": {
                    "type": "string"
                },
                "lambdaArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:greengrassv2:ComponentVersionLambdaLinuxProcessParams": {
            "type": "object",
            "properties": {
                "containerParams": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaContainerParams"
                },
                "isolationMode": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaLinuxProcessParamsIsolationMode"
                }
            }
        },
        "aws-native:greengrassv2:ComponentVersionLambdaLinuxProcessParamsIsolationMode": {
            "type": "string"
        },
        "aws-native:greengrassv2:ComponentVersionLambdaVolumeMount": {
            "type": "object",
            "properties": {
                "addGroupOwner": {
                    "type": "boolean"
                },
                "destinationPath": {
                    "type": "string"
                },
                "permission": {
                    "$ref": "#/types/aws-native:greengrassv2:ComponentVersionLambdaFilesystemPermission"
                },
                "sourcePath": {
                    "type": "string"
                }
            }
        },
        "aws-native:groundstation:ConfigAntennaDownlinkConfig": {
            "type": "object",
            "properties": {
                "spectrumConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigSpectrumConfig"
                }
            }
        },
        "aws-native:groundstation:ConfigAntennaDownlinkDemodDecodeConfig": {
            "type": "object",
            "properties": {
                "decodeConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigDecodeConfig"
                },
                "demodulationConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigDemodulationConfig"
                },
                "spectrumConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigSpectrumConfig"
                }
            }
        },
        "aws-native:groundstation:ConfigAntennaUplinkConfig": {
            "type": "object",
            "properties": {
                "spectrumConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigUplinkSpectrumConfig"
                },
                "targetEirp": {
                    "$ref": "#/types/aws-native:groundstation:ConfigEirp"
                },
                "transmitDisabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:groundstation:ConfigBandwidthUnits": {
            "type": "string"
        },
        "aws-native:groundstation:ConfigConfigData": {
            "type": "object",
            "properties": {
                "antennaDownlinkConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigAntennaDownlinkConfig"
                },
                "antennaDownlinkDemodDecodeConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigAntennaDownlinkDemodDecodeConfig"
                },
                "antennaUplinkConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigAntennaUplinkConfig"
                },
                "dataflowEndpointConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigDataflowEndpointConfig"
                },
                "s3RecordingConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigS3RecordingConfig"
                },
                "trackingConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigTrackingConfig"
                },
                "uplinkEchoConfig": {
                    "$ref": "#/types/aws-native:groundstation:ConfigUplinkEchoConfig"
                }
            }
        },
        "aws-native:groundstation:ConfigDataflowEndpointConfig": {
            "type": "object",
            "properties": {
                "dataflowEndpointName": {
                    "type": "string"
                },
                "dataflowEndpointRegion": {
                    "type": "string"
                }
            }
        },
        "aws-native:groundstation:ConfigDecodeConfig": {
            "type": "object",
            "properties": {
                "unvalidatedJSON": {
                    "type": "string"
                }
            }
        },
        "aws-native:groundstation:ConfigDemodulationConfig": {
            "type": "object",
            "properties": {
                "unvalidatedJSON": {
                    "type": "string"
                }
            }
        },
        "aws-native:groundstation:ConfigEirp": {
            "type": "object",
            "properties": {
                "units": {
                    "$ref": "#/types/aws-native:groundstation:ConfigEirpUnits"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "aws-native:groundstation:ConfigEirpUnits": {
            "type": "string"
        },
        "aws-native:groundstation:ConfigFrequency": {
            "type": "object",
            "properties": {
                "units": {
                    "$ref": "#/types/aws-native:groundstation:ConfigFrequencyUnits"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "aws-native:groundstation:ConfigFrequencyBandwidth": {
            "type": "object",
            "properties": {
                "units": {
                    "$ref": "#/types/aws-native:groundstation:ConfigBandwidthUnits"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "aws-native:groundstation:ConfigFrequencyUnits": {
            "type": "string"
        },
        "aws-native:groundstation:ConfigPolarization": {
            "type": "string"
        },
        "aws-native:groundstation:ConfigS3RecordingConfig": {
            "type": "object",
            "properties": {
                "bucketArn": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:groundstation:ConfigSpectrumConfig": {
            "type": "object",
            "properties": {
                "bandwidth": {
                    "$ref": "#/types/aws-native:groundstation:ConfigFrequencyBandwidth"
                },
                "centerFrequency": {
                    "$ref": "#/types/aws-native:groundstation:ConfigFrequency"
                },
                "polarization": {
                    "$ref": "#/types/aws-native:groundstation:ConfigPolarization"
                }
            }
        },
        "aws-native:groundstation:ConfigTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:groundstation:ConfigTrackingConfig": {
            "type": "object",
            "properties": {
                "autotrack": {
                    "$ref": "#/types/aws-native:groundstation:ConfigTrackingConfigAutotrack"
                }
            }
        },
        "aws-native:groundstation:ConfigTrackingConfigAutotrack": {
            "type": "string"
        },
        "aws-native:groundstation:ConfigUplinkEchoConfig": {
            "type": "object",
            "properties": {
                "antennaUplinkConfigArn": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:groundstation:ConfigUplinkSpectrumConfig": {
            "type": "object",
            "properties": {
                "centerFrequency": {
                    "$ref": "#/types/aws-native:groundstation:ConfigFrequency"
                },
                "polarization": {
                    "$ref": "#/types/aws-native:groundstation:ConfigPolarization"
                }
            }
        },
        "aws-native:groundstation:DataflowEndpointGroupDataflowEndpoint": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/types/aws-native:groundstation:DataflowEndpointGroupSocketAddress"
                },
                "mtu": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:groundstation:DataflowEndpointGroupEndpointDetails": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "$ref": "#/types/aws-native:groundstation:DataflowEndpointGroupDataflowEndpoint"
                },
                "securityDetails": {
                    "$ref": "#/types/aws-native:groundstation:DataflowEndpointGroupSecurityDetails"
                }
            }
        },
        "aws-native:groundstation:DataflowEndpointGroupSecurityDetails": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:groundstation:DataflowEndpointGroupSocketAddress": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            }
        },
        "aws-native:groundstation:DataflowEndpointGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:groundstation:MissionProfileDataflowEdge": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "aws-native:groundstation:MissionProfileTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:healthlake:FHIRDatastoreCreatedAt": {
            "type": "object",
            "properties": {
                "nanos": {
                    "type": "integer",
                    "description": "Nanoseconds."
                },
                "seconds": {
                    "type": "string",
                    "description": "Seconds since epoch."
                }
            }
        },
        "aws-native:healthlake:FHIRDatastoreDatastoreStatus": {
            "type": "string"
        },
        "aws-native:healthlake:FHIRDatastoreDatastoreTypeVersion": {
            "type": "string"
        },
        "aws-native:healthlake:FHIRDatastoreKmsEncryptionConfig": {
            "type": "object",
            "properties": {
                "cmkType": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastoreKmsEncryptionConfigCmkType",
                    "description": "The type of customer-managed-key (CMK) used for encryption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS encryption key id/alias used to encrypt the Data Store contents at rest."
                }
            }
        },
        "aws-native:healthlake:FHIRDatastoreKmsEncryptionConfigCmkType": {
            "type": "string"
        },
        "aws-native:healthlake:FHIRDatastorePreloadDataConfig": {
            "type": "object",
            "properties": {
                "preloadDataType": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastorePreloadDataConfigPreloadDataType",
                    "description": "The type of preloaded data. Only Synthea preloaded data is supported."
                }
            }
        },
        "aws-native:healthlake:FHIRDatastorePreloadDataConfigPreloadDataType": {
            "type": "string"
        },
        "aws-native:healthlake:FHIRDatastoreSseConfiguration": {
            "type": "object",
            "properties": {
                "kmsEncryptionConfig": {
                    "$ref": "#/types/aws-native:healthlake:FHIRDatastoreKmsEncryptionConfig"
                }
            }
        },
        "aws-native:healthlake:FHIRDatastoreTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key of the tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag."
                }
            }
        },
        "aws-native:iam:OIDCProviderTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:iam:SAMLProviderTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:iam:ServerCertificateTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:iam:VirtualMFADeviceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:imagebuilder:ComponentPlatform": {
            "type": "string"
        },
        "aws-native:imagebuilder:ComponentType": {
            "type": "string"
        },
        "aws-native:imagebuilder:ContainerRecipeComponentConfiguration": {
            "type": "object",
            "properties": {
                "componentArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the component."
                }
            }
        },
        "aws-native:imagebuilder:ContainerRecipeContainerType": {
            "type": "string"
        },
        "aws-native:imagebuilder:ContainerRecipeEbsInstanceBlockDeviceSpecification": {
            "type": "object",
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "description": "Use to configure delete on termination of the associated device."
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Use to configure device encryption."
                },
                "iops": {
                    "type": "integer",
                    "description": "Use to configure device IOPS."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "Use to configure the KMS key to use when encrypting the device."
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The snapshot that defines the device contents."
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Use to override the device's volume size."
                },
                "volumeType": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType",
                    "description": "Use to override the device's volume type."
                }
            }
        },
        "aws-native:imagebuilder:ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType": {
            "type": "string"
        },
        "aws-native:imagebuilder:ContainerRecipeInstanceBlockDeviceMapping": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "The device to which these mappings apply."
                },
                "ebs": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeEbsInstanceBlockDeviceSpecification",
                    "description": "Use to manage Amazon EBS-specific configuration for this mapping."
                },
                "noDevice": {
                    "type": "string",
                    "description": "Use to remove a mapping from the parent image."
                },
                "virtualName": {
                    "type": "string",
                    "description": "Use to manage instance ephemeral devices."
                }
            }
        },
        "aws-native:imagebuilder:ContainerRecipeInstanceConfiguration": {
            "type": "object",
            "properties": {
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeInstanceBlockDeviceMapping"
                    },
                    "description": "Defines the block devices to attach for building an instance from this Image Builder AMI."
                },
                "image": {
                    "type": "string",
                    "description": "The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image."
                }
            }
        },
        "aws-native:imagebuilder:ContainerRecipePlatformOverride": {
            "type": "string"
        },
        "aws-native:imagebuilder:ContainerRecipeTargetContainerRepository": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "type": "string",
                    "description": "The name of the container repository where the output container image is stored. This name is prefixed by the repository location."
                },
                "service": {
                    "$ref": "#/types/aws-native:imagebuilder:ContainerRecipeTargetContainerRepositoryService",
                    "description": "Specifies the service in which this image was registered."
                }
            }
        },
        "aws-native:imagebuilder:ContainerRecipeTargetContainerRepositoryService": {
            "type": "string"
        },
        "aws-native:imagebuilder:DistributionConfigurationDistribution": {
            "type": "object",
            "properties": {
                "amiDistributionConfiguration": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The specific AMI settings (for example, launch permissions, AMI tags)."
                },
                "containerDistributionConfiguration": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Container distribution settings for encryption, licensing, and sharing in a specific Region."
                },
                "launchTemplateConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:DistributionConfigurationLaunchTemplateConfiguration"
                    },
                    "description": "A group of launchTemplateConfiguration settings that apply to image distribution."
                },
                "licenseConfigurationArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The License Manager Configuration to associate with the AMI in the specified Region."
                },
                "region": {
                    "type": "string",
                    "description": "region"
                }
            }
        },
        "aws-native:imagebuilder:DistributionConfigurationLaunchTemplateConfiguration": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID that this configuration applies to."
                },
                "launchTemplateId": {
                    "type": "string",
                    "description": "Identifies the EC2 launch template to use."
                },
                "setDefaultVersion": {
                    "type": "boolean",
                    "description": "Set the specified EC2 launch template as the default launch template for the specified account."
                }
            }
        },
        "aws-native:imagebuilder:ImageImageTestsConfiguration": {
            "type": "object",
            "properties": {
                "imageTestsEnabled": {
                    "type": "boolean",
                    "description": "ImageTestsEnabled"
                },
                "timeoutMinutes": {
                    "type": "integer",
                    "description": "TimeoutMinutes"
                }
            }
        },
        "aws-native:imagebuilder:ImagePipelineImageTestsConfiguration": {
            "type": "object",
            "properties": {
                "imageTestsEnabled": {
                    "type": "boolean",
                    "description": "Defines if tests should be executed when building this image."
                },
                "timeoutMinutes": {
                    "type": "integer",
                    "description": "The maximum time in minutes that tests are permitted to run."
                }
            }
        },
        "aws-native:imagebuilder:ImagePipelineSchedule": {
            "type": "object",
            "properties": {
                "pipelineExecutionStartCondition": {
                    "$ref": "#/types/aws-native:imagebuilder:ImagePipelineSchedulePipelineExecutionStartCondition",
                    "description": "The condition configures when the pipeline should trigger a new image build."
                },
                "scheduleExpression": {
                    "type": "string",
                    "description": "The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition."
                }
            }
        },
        "aws-native:imagebuilder:ImagePipelineSchedulePipelineExecutionStartCondition": {
            "type": "string"
        },
        "aws-native:imagebuilder:ImagePipelineStatus": {
            "type": "string"
        },
        "aws-native:imagebuilder:ImageRecipeAdditionalInstanceConfiguration": {
            "type": "object",
            "properties": {
                "systemsManagerAgent": {
                    "$ref": "#/types/aws-native:imagebuilder:ImageRecipeSystemsManagerAgent",
                    "description": "Contains settings for the SSM agent on your build instance."
                },
                "userDataOverride": {
                    "type": "string",
                    "description": "Use this property to provide commands or a command script to run when you launch your build instance."
                }
            }
        },
        "aws-native:imagebuilder:ImageRecipeComponentConfiguration": {
            "type": "object",
            "properties": {
                "componentArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the component."
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:imagebuilder:ImageRecipeComponentParameter"
                    },
                    "description": "A group of parameter settings that are used to configure the component for a specific recipe."
                }
            }
        },
        "aws-native:imagebuilder:ImageRecipeComponentParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the component parameter to set."
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Sets the value for the named component parameter."
                }
            }
        },
        "aws-native:imagebuilder:ImageRecipeEbsInstanceBlockDeviceSpecification": {
            "type": "object",
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "description": "Use to configure delete on termination of the associated device."
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Use to configure device encryption."
                },
                "iops": {
                    "type": "integer",
                    "description": "Use to configure device IOPS."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "Use to configure the KMS key to use when encrypting the device."
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The snapshot that defines the device contents."
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Use to override the device's volume size."
                },
                "volumeType": {
                    "$ref": "#/types/aws-native:imagebuilder:ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType",
                    "description": "Use to override the device's volume type."
                }
            }
        },
        "aws-native:imagebuilder:ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType": {
            "type": "string"
        },
        "aws-native:imagebuilder:ImageRecipeInstanceBlockDeviceMapping": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "The device to which these mappings apply."
                },
                "ebs": {
                    "$ref": "#/types/aws-native:imagebuilder:ImageRecipeEbsInstanceBlockDeviceSpecification",
                    "description": "Use to manage Amazon EBS-specific configuration for this mapping."
                },
                "noDevice": {
                    "type": "string",
                    "description": "Use to remove a mapping from the parent image."
                },
                "virtualName": {
                    "type": "string",
                    "description": "Use to manage instance ephemeral devices."
                }
            }
        },
        "aws-native:imagebuilder:ImageRecipeSystemsManagerAgent": {
            "type": "object",
            "properties": {
                "uninstallAfterBuild": {
                    "type": "boolean",
                    "description": "Controls whether the SSM agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it's set to false, then the agent is left in, so that it is included in the new AMI. The default value is false."
                }
            }
        },
        "aws-native:imagebuilder:InfrastructureConfigurationLogging": {
            "type": "object",
            "properties": {
                "s3Logs": {
                    "$ref": "#/types/aws-native:imagebuilder:InfrastructureConfigurationS3Logs"
                }
            }
        },
        "aws-native:imagebuilder:InfrastructureConfigurationS3Logs": {
            "type": "object",
            "properties": {
                "s3BucketName": {
                    "type": "string",
                    "description": "S3BucketName"
                },
                "s3KeyPrefix": {
                    "type": "string",
                    "description": "S3KeyPrefix"
                }
            }
        },
        "aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "True if the check is enabled."
                }
            }
        },
        "aws-native:iot:AccountAuditConfigurationAuditCheckConfigurations": {
            "type": "object",
            "properties": {
                "authenticatedCognitoRoleOverlyPermissiveCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "caCertificateExpiringCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "caCertificateKeyQualityCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "conflictingClientIdsCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "deviceCertificateExpiringCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "deviceCertificateKeyQualityCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "deviceCertificateSharedCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "iotPolicyOverlyPermissiveCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "iotRoleAliasAllowsAccessToUnusedServicesCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "iotRoleAliasOverlyPermissiveCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "loggingDisabledCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "revokedCaCertificateStillActiveCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "revokedDeviceCertificateStillActiveCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                },
                "unauthenticatedCognitoRoleOverlyPermissiveCheck": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditCheckConfiguration"
                }
            }
        },
        "aws-native:iot:AccountAuditConfigurationAuditNotificationTarget": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "True if notifications to the target are enabled."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that grants permission to send notifications to the target."
                },
                "targetArn": {
                    "type": "string",
                    "description": "The ARN of the target (SNS topic) to which audit notifications are sent."
                }
            }
        },
        "aws-native:iot:AccountAuditConfigurationAuditNotificationTargetConfigurations": {
            "type": "object",
            "properties": {
                "sns": {
                    "$ref": "#/types/aws-native:iot:AccountAuditConfigurationAuditNotificationTarget"
                }
            }
        },
        "aws-native:iot:AuthorizerStatus": {
            "type": "string"
        },
        "aws-native:iot:AuthorizerTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:CertificateCertificateMode": {
            "type": "string"
        },
        "aws-native:iot:CertificateStatus": {
            "type": "string"
        },
        "aws-native:iot:CustomMetricMetricType": {
            "type": "string"
        },
        "aws-native:iot:CustomMetricTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key."
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value."
                }
            }
        },
        "aws-native:iot:DimensionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key."
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value."
                }
            }
        },
        "aws-native:iot:DimensionType": {
            "type": "string"
        },
        "aws-native:iot:DomainConfigurationAuthorizerConfig": {
            "type": "object",
            "properties": {
                "allowAuthorizerOverride": {
                    "type": "boolean"
                },
                "defaultAuthorizerName": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:DomainConfigurationDomainConfigurationStatus": {
            "type": "string"
        },
        "aws-native:iot:DomainConfigurationDomainType": {
            "type": "string"
        },
        "aws-native:iot:DomainConfigurationServerCertificateSummary": {
            "type": "object",
            "properties": {
                "serverCertificateArn": {
                    "type": "string"
                },
                "serverCertificateStatus": {
                    "$ref": "#/types/aws-native:iot:DomainConfigurationServerCertificateSummaryServerCertificateStatus"
                },
                "serverCertificateStatusDetail": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:DomainConfigurationServerCertificateSummaryServerCertificateStatus": {
            "type": "string"
        },
        "aws-native:iot:DomainConfigurationServiceType": {
            "type": "string"
        },
        "aws-native:iot:DomainConfigurationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:FleetMetricAggregationType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fleet Indexing aggregation type values"
                }
            }
        },
        "aws-native:iot:FleetMetricTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key"
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value"
                }
            }
        },
        "aws-native:iot:MitigationActionActionParams": {
            "type": "object",
            "properties": {
                "addThingsToThingGroupParams": {
                    "$ref": "#/types/aws-native:iot:MitigationActionAddThingsToThingGroupParams"
                },
                "enableIoTLoggingParams": {
                    "$ref": "#/types/aws-native:iot:MitigationActionEnableIoTLoggingParams"
                },
                "publishFindingToSnsParams": {
                    "$ref": "#/types/aws-native:iot:MitigationActionPublishFindingToSnsParams"
                },
                "replaceDefaultPolicyVersionParams": {
                    "$ref": "#/types/aws-native:iot:MitigationActionReplaceDefaultPolicyVersionParams"
                },
                "updateCACertificateParams": {
                    "$ref": "#/types/aws-native:iot:MitigationActionUpdateCACertificateParams"
                },
                "updateDeviceCertificateParams": {
                    "$ref": "#/types/aws-native:iot:MitigationActionUpdateDeviceCertificateParams"
                }
            }
        },
        "aws-native:iot:MitigationActionAddThingsToThingGroupParams": {
            "type": "object",
            "properties": {
                "overrideDynamicGroups": {
                    "type": "boolean",
                    "description": "Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups."
                },
                "thingGroupNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of groups to which you want to add the things that triggered the mitigation action."
                }
            }
        },
        "aws-native:iot:MitigationActionEnableIoTLoggingParams": {
            "type": "object",
            "properties": {
                "logLevel": {
                    "$ref": "#/types/aws-native:iot:MitigationActionEnableIoTLoggingParamsLogLevel",
                    "description": " Specifies which types of information are logged."
                },
                "roleArnForLogging": {
                    "type": "string",
                    "description": " The ARN of the IAM role used for logging."
                }
            }
        },
        "aws-native:iot:MitigationActionEnableIoTLoggingParamsLogLevel": {
            "type": "string"
        },
        "aws-native:iot:MitigationActionPublishFindingToSnsParams": {
            "type": "object",
            "properties": {
                "topicArn": {
                    "type": "string",
                    "description": "The ARN of the topic to which you want to publish the findings."
                }
            }
        },
        "aws-native:iot:MitigationActionReplaceDefaultPolicyVersionParams": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/types/aws-native:iot:MitigationActionReplaceDefaultPolicyVersionParamsTemplateName"
                }
            }
        },
        "aws-native:iot:MitigationActionReplaceDefaultPolicyVersionParamsTemplateName": {
            "type": "string"
        },
        "aws-native:iot:MitigationActionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key."
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value."
                }
            }
        },
        "aws-native:iot:MitigationActionUpdateCACertificateParams": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/types/aws-native:iot:MitigationActionUpdateCACertificateParamsAction"
                }
            }
        },
        "aws-native:iot:MitigationActionUpdateCACertificateParamsAction": {
            "type": "string"
        },
        "aws-native:iot:MitigationActionUpdateDeviceCertificateParams": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/types/aws-native:iot:MitigationActionUpdateDeviceCertificateParamsAction"
                }
            }
        },
        "aws-native:iot:MitigationActionUpdateDeviceCertificateParamsAction": {
            "type": "string"
        },
        "aws-native:iot:ProvisioningTemplateProvisioningHook": {
            "type": "object",
            "properties": {
                "payloadVersion": {
                    "type": "string"
                },
                "targetArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:ProvisioningTemplateTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:ScheduledAuditDayOfWeek": {
            "type": "string"
        },
        "aws-native:iot:ScheduledAuditFrequency": {
            "type": "string"
        },
        "aws-native:iot:ScheduledAuditTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key."
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value."
                }
            }
        },
        "aws-native:iot:SecurityProfileBehavior": {
            "type": "object",
            "properties": {
                "criteria": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileBehaviorCriteria"
                },
                "metric": {
                    "type": "string",
                    "description": "What is measured by the behavior."
                },
                "metricDimension": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileMetricDimension"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the behavior."
                },
                "suppressAlerts": {
                    "type": "boolean",
                    "description": "Manage Detect alarm SNS notifications by setting behavior notification to on or suppressed. Detect will continue to performing device behavior evaluations. However, suppressed alarms wouldn't be forwarded for SNS notification."
                }
            }
        },
        "aws-native:iot:SecurityProfileBehaviorCriteria": {
            "type": "object",
            "properties": {
                "comparisonOperator": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileBehaviorCriteriaComparisonOperator",
                    "description": "The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold)."
                },
                "consecutiveDatapointsToAlarm": {
                    "type": "integer",
                    "description": "If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1."
                },
                "consecutiveDatapointsToClear": {
                    "type": "integer",
                    "description": "If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1."
                },
                "durationSeconds": {
                    "type": "integer",
                    "description": "Use this to specify the time duration over which the behavior is evaluated."
                },
                "mlDetectionConfig": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileMachineLearningDetectionConfig"
                },
                "statisticalThreshold": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileStatisticalThreshold"
                },
                "value": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileMetricValue"
                }
            }
        },
        "aws-native:iot:SecurityProfileBehaviorCriteriaComparisonOperator": {
            "type": "string"
        },
        "aws-native:iot:SecurityProfileMachineLearningDetectionConfig": {
            "type": "object",
            "properties": {
                "confidenceLevel": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileMachineLearningDetectionConfigConfidenceLevel",
                    "description": "The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High."
                }
            }
        },
        "aws-native:iot:SecurityProfileMachineLearningDetectionConfigConfidenceLevel": {
            "type": "string"
        },
        "aws-native:iot:SecurityProfileMetricDimension": {
            "type": "object",
            "properties": {
                "dimensionName": {
                    "type": "string",
                    "description": "A unique identifier for the dimension."
                },
                "operator": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileMetricDimensionOperator",
                    "description": "Defines how the dimensionValues of a dimension are interpreted."
                }
            }
        },
        "aws-native:iot:SecurityProfileMetricDimensionOperator": {
            "type": "string"
        },
        "aws-native:iot:SecurityProfileMetricToRetain": {
            "type": "object",
            "properties": {
                "metric": {
                    "type": "string",
                    "description": "What is measured by the behavior."
                },
                "metricDimension": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileMetricDimension"
                }
            }
        },
        "aws-native:iot:SecurityProfileMetricValue": {
            "type": "object",
            "properties": {
                "cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric."
                },
                "count": {
                    "type": "string",
                    "description": "If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric."
                },
                "number": {
                    "type": "number",
                    "description": "The numeral value of a metric."
                },
                "numbers": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "The numeral values of a metric."
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric."
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The string values of a metric."
                }
            }
        },
        "aws-native:iot:SecurityProfileStatisticalThreshold": {
            "type": "object",
            "properties": {
                "statistic": {
                    "$ref": "#/types/aws-native:iot:SecurityProfileStatisticalThresholdStatistic",
                    "description": "The percentile which resolves to a threshold value by which compliance with a behavior is determined"
                }
            }
        },
        "aws-native:iot:SecurityProfileStatisticalThresholdStatistic": {
            "type": "string"
        },
        "aws-native:iot:SecurityProfileTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key."
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value."
                }
            }
        },
        "aws-native:iot:TopicRuleAction": {
            "type": "object",
            "properties": {
                "cloudwatchAlarm": {
                    "$ref": "#/types/aws-native:iot:TopicRuleCloudwatchAlarmAction"
                },
                "cloudwatchLogs": {
                    "$ref": "#/types/aws-native:iot:TopicRuleCloudwatchLogsAction"
                },
                "cloudwatchMetric": {
                    "$ref": "#/types/aws-native:iot:TopicRuleCloudwatchMetricAction"
                },
                "dynamoDB": {
                    "$ref": "#/types/aws-native:iot:TopicRuleDynamoDBAction"
                },
                "dynamoDBv2": {
                    "$ref": "#/types/aws-native:iot:TopicRuleDynamoDBv2Action"
                },
                "elasticsearch": {
                    "$ref": "#/types/aws-native:iot:TopicRuleElasticsearchAction"
                },
                "firehose": {
                    "$ref": "#/types/aws-native:iot:TopicRuleFirehoseAction"
                },
                "http": {
                    "$ref": "#/types/aws-native:iot:TopicRuleHttpAction"
                },
                "iotAnalytics": {
                    "$ref": "#/types/aws-native:iot:TopicRuleIotAnalyticsAction"
                },
                "iotEvents": {
                    "$ref": "#/types/aws-native:iot:TopicRuleIotEventsAction"
                },
                "iotSiteWise": {
                    "$ref": "#/types/aws-native:iot:TopicRuleIotSiteWiseAction"
                },
                "kafka": {
                    "$ref": "#/types/aws-native:iot:TopicRuleKafkaAction"
                },
                "kinesis": {
                    "$ref": "#/types/aws-native:iot:TopicRuleKinesisAction"
                },
                "lambda": {
                    "$ref": "#/types/aws-native:iot:TopicRuleLambdaAction"
                },
                "openSearch": {
                    "$ref": "#/types/aws-native:iot:TopicRuleOpenSearchAction"
                },
                "republish": {
                    "$ref": "#/types/aws-native:iot:TopicRuleRepublishAction"
                },
                "s3": {
                    "$ref": "#/types/aws-native:iot:TopicRuleS3Action"
                },
                "sns": {
                    "$ref": "#/types/aws-native:iot:TopicRuleSnsAction"
                },
                "sqs": {
                    "$ref": "#/types/aws-native:iot:TopicRuleSqsAction"
                },
                "stepFunctions": {
                    "$ref": "#/types/aws-native:iot:TopicRuleStepFunctionsAction"
                },
                "timestream": {
                    "$ref": "#/types/aws-native:iot:TopicRuleTimestreamAction"
                }
            }
        },
        "aws-native:iot:TopicRuleAssetPropertyTimestamp": {
            "type": "object",
            "properties": {
                "offsetInNanos": {
                    "type": "string"
                },
                "timeInSeconds": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleAssetPropertyValue": {
            "type": "object",
            "properties": {
                "quality": {
                    "type": "string"
                },
                "timestamp": {
                    "$ref": "#/types/aws-native:iot:TopicRuleAssetPropertyTimestamp"
                },
                "value": {
                    "$ref": "#/types/aws-native:iot:TopicRuleAssetPropertyVariant"
                }
            }
        },
        "aws-native:iot:TopicRuleAssetPropertyVariant": {
            "type": "object",
            "properties": {
                "booleanValue": {
                    "type": "string"
                },
                "doubleValue": {
                    "type": "string"
                },
                "integerValue": {
                    "type": "string"
                },
                "stringValue": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleCannedAccessControlList": {
            "type": "string"
        },
        "aws-native:iot:TopicRuleCloudwatchAlarmAction": {
            "type": "object",
            "properties": {
                "alarmName": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "stateReason": {
                    "type": "string"
                },
                "stateValue": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleCloudwatchLogsAction": {
            "type": "object",
            "properties": {
                "logGroupName": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleCloudwatchMetricAction": {
            "type": "object",
            "properties": {
                "metricName": {
                    "type": "string"
                },
                "metricNamespace": {
                    "type": "string"
                },
                "metricTimestamp": {
                    "type": "string"
                },
                "metricUnit": {
                    "type": "string"
                },
                "metricValue": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleDestinationHttpUrlDestinationSummary": {
            "type": "object",
            "properties": {
                "confirmationUrl": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleDestinationTopicRuleDestinationStatus": {
            "type": "string"
        },
        "aws-native:iot:TopicRuleDestinationVpcDestinationProperties": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "type": "string"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleDynamoDBAction": {
            "type": "object",
            "properties": {
                "hashKeyField": {
                    "type": "string"
                },
                "hashKeyType": {
                    "type": "string"
                },
                "hashKeyValue": {
                    "type": "string"
                },
                "payloadField": {
                    "type": "string"
                },
                "rangeKeyField": {
                    "type": "string"
                },
                "rangeKeyType": {
                    "type": "string"
                },
                "rangeKeyValue": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleDynamoDBv2Action": {
            "type": "object",
            "properties": {
                "putItem": {
                    "$ref": "#/types/aws-native:iot:TopicRulePutItemInput"
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleElasticsearchAction": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "index": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleFirehoseAction": {
            "type": "object",
            "properties": {
                "batchMode": {
                    "type": "boolean"
                },
                "deliveryStreamName": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "separator": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleHttpAction": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/types/aws-native:iot:TopicRuleHttpAuthorization"
                },
                "confirmationUrl": {
                    "type": "string"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:TopicRuleHttpActionHeader"
                    }
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleHttpActionHeader": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleHttpAuthorization": {
            "type": "object",
            "properties": {
                "sigv4": {
                    "$ref": "#/types/aws-native:iot:TopicRuleSigV4Authorization"
                }
            }
        },
        "aws-native:iot:TopicRuleIotAnalyticsAction": {
            "type": "object",
            "properties": {
                "batchMode": {
                    "type": "boolean"
                },
                "channelName": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleIotEventsAction": {
            "type": "object",
            "properties": {
                "batchMode": {
                    "type": "boolean"
                },
                "inputName": {
                    "type": "string"
                },
                "messageId": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleIotSiteWiseAction": {
            "type": "object",
            "properties": {
                "putAssetPropertyValueEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:TopicRulePutAssetPropertyValueEntry"
                    }
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleKafkaAction": {
            "type": "object",
            "properties": {
                "clientProperties": {
                    "$ref": "pulumi.json#/Any"
                },
                "destinationArn": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "partition": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleKinesisAction": {
            "type": "object",
            "properties": {
                "partitionKey": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleLambdaAction": {
            "type": "object",
            "properties": {
                "functionArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleOpenSearchAction": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "index": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRulePutAssetPropertyValueEntry": {
            "type": "object",
            "properties": {
                "assetId": {
                    "type": "string"
                },
                "entryId": {
                    "type": "string"
                },
                "propertyAlias": {
                    "type": "string"
                },
                "propertyId": {
                    "type": "string"
                },
                "propertyValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:TopicRuleAssetPropertyValue"
                    }
                }
            }
        },
        "aws-native:iot:TopicRulePutItemInput": {
            "type": "object",
            "properties": {
                "tableName": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleRepublishAction": {
            "type": "object",
            "properties": {
                "qos": {
                    "type": "integer"
                },
                "roleArn": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleS3Action": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "cannedAcl": {
                    "$ref": "#/types/aws-native:iot:TopicRuleCannedAccessControlList"
                },
                "key": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleSigV4Authorization": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "signingRegion": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleSnsAction": {
            "type": "object",
            "properties": {
                "messageFormat": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "targetArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleSqsAction": {
            "type": "object",
            "properties": {
                "queueUrl": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "useBase64": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:iot:TopicRuleStepFunctionsAction": {
            "type": "object",
            "properties": {
                "executionNamePrefix": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "stateMachineName": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleTimestreamAction": {
            "type": "object",
            "properties": {
                "batchMode": {
                    "type": "boolean"
                },
                "databaseName": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:TopicRuleTimestreamDimension"
                    }
                },
                "roleArn": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "timestamp": {
                    "$ref": "#/types/aws-native:iot:TopicRuleTimestreamTimestamp"
                }
            }
        },
        "aws-native:iot:TopicRuleTimestreamDimension": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleTimestreamTimestamp": {
            "type": "object",
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iot:TopicRuleTopicRulePayload": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iot:TopicRuleAction"
                    }
                },
                "awsIotSqlVersion": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "errorAction": {
                    "$ref": "#/types/aws-native:iot:TopicRuleAction"
                },
                "ruleDisabled": {
                    "type": "boolean"
                },
                "sql": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotcoredeviceadvisor:SuiteDefinitionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:iotevents:DetectorModelAction": {
            "type": "object",
            "properties": {
                "clearTimer": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelClearTimer"
                },
                "dynamoDB": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelDynamoDB"
                },
                "dynamoDBv2": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelDynamoDBv2"
                },
                "firehose": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelFirehose"
                },
                "iotEvents": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelIotEvents"
                },
                "iotSiteWise": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelIotSiteWise"
                },
                "iotTopicPublish": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelIotTopicPublish"
                },
                "lambda": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelLambda"
                },
                "resetTimer": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelResetTimer"
                },
                "setTimer": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelSetTimer"
                },
                "setVariable": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelSetVariable"
                },
                "sns": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelSns"
                },
                "sqs": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelSqs"
                }
            }
        },
        "aws-native:iotevents:DetectorModelAssetPropertyTimestamp": {
            "type": "object",
            "properties": {
                "offsetInNanos": {
                    "type": "string",
                    "description": "The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression."
                },
                "timeInSeconds": {
                    "type": "string",
                    "description": "The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression."
                }
            }
        },
        "aws-native:iotevents:DetectorModelAssetPropertyValue": {
            "type": "object",
            "properties": {
                "quality": {
                    "type": "string",
                    "description": "The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression."
                },
                "timestamp": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelAssetPropertyTimestamp"
                },
                "value": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelAssetPropertyVariant"
                }
            }
        },
        "aws-native:iotevents:DetectorModelAssetPropertyVariant": {
            "type": "object",
            "properties": {
                "booleanValue": {
                    "type": "string",
                    "description": "The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value."
                },
                "doubleValue": {
                    "type": "string",
                    "description": "The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double."
                },
                "integerValue": {
                    "type": "string",
                    "description": "The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer."
                },
                "stringValue": {
                    "type": "string",
                    "description": "The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string."
                }
            }
        },
        "aws-native:iotevents:DetectorModelClearTimer": {
            "type": "object",
            "properties": {
                "timerName": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotevents:DetectorModelDetectorModelDefinition": {
            "type": "object",
            "properties": {
                "initialStateName": {
                    "type": "string",
                    "description": "The state that is entered at the creation of each detector (instance)."
                },
                "states": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:DetectorModelState"
                    },
                    "description": "Information about the states of the detector."
                }
            }
        },
        "aws-native:iotevents:DetectorModelDynamoDB": {
            "type": "object",
            "properties": {
                "hashKeyField": {
                    "type": "string",
                    "description": "The name of the hash key (also called the partition key)."
                },
                "hashKeyType": {
                    "type": "string",
                    "description": "The data type for the hash key (also called the partition key). You can specify the following values:\n\n* `STRING` - The hash key is a string.\n\n* `NUMBER` - The hash key is a number.\n\nIf you don't specify `hashKeyType`, the default value is `STRING`."
                },
                "hashKeyValue": {
                    "type": "string",
                    "description": "The value of the hash key (also called the partition key)."
                },
                "operation": {
                    "type": "string",
                    "description": "The type of operation to perform. You can specify the following values:\n\n* `INSERT` - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n* `UPDATE` - Update an existing item of the DynamoDB table with new data. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.\n\n* `DELETE` - Delete an existing item of the DynamoDB table. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.\n\nIf you don't specify this parameter, AWS IoT Events triggers the `INSERT` operation."
                },
                "payload": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelPayload"
                },
                "payloadField": {
                    "type": "string",
                    "description": "The name of the DynamoDB column that receives the action payload.\n\nIf you don't specify this parameter, the name of the DynamoDB column is `payload`."
                },
                "rangeKeyField": {
                    "type": "string",
                    "description": "The name of the range key (also called the sort key)."
                },
                "rangeKeyType": {
                    "type": "string",
                    "description": "The data type for the range key (also called the sort key), You can specify the following values:\n\n* `STRING` - The range key is a string.\n\n* `NUMBER` - The range key is number.\n\nIf you don't specify `rangeKeyField`, the default value is `STRING`."
                },
                "rangeKeyValue": {
                    "type": "string",
                    "description": "The value of the range key (also called the sort key)."
                },
                "tableName": {
                    "type": "string",
                    "description": "The name of the DynamoDB table."
                }
            }
        },
        "aws-native:iotevents:DetectorModelDynamoDBv2": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelPayload"
                },
                "tableName": {
                    "type": "string",
                    "description": "The name of the DynamoDB table."
                }
            }
        },
        "aws-native:iotevents:DetectorModelEvaluationMethod": {
            "type": "string"
        },
        "aws-native:iotevents:DetectorModelEvent": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:DetectorModelAction"
                    },
                    "description": "The actions to be performed."
                },
                "condition": {
                    "type": "string",
                    "description": "The Boolean expression that, when `TRUE`, causes the `actions` to be performed. If not present, the `actions` are performed (=`TRUE`). If the expression result is not a `Boolean` value, the `actions` are not performed (=`FALSE`)."
                },
                "eventName": {
                    "type": "string",
                    "description": "The name of the event."
                }
            }
        },
        "aws-native:iotevents:DetectorModelFirehose": {
            "type": "object",
            "properties": {
                "deliveryStreamName": {
                    "type": "string",
                    "description": "The name of the Kinesis Data Firehose delivery stream where the data is written."
                },
                "payload": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelPayload"
                },
                "separator": {
                    "type": "string",
                    "description": "A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma)."
                }
            }
        },
        "aws-native:iotevents:DetectorModelIotEvents": {
            "type": "object",
            "properties": {
                "inputName": {
                    "type": "string",
                    "description": "The name of the AWS IoT Events input where the data is sent."
                },
                "payload": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelPayload"
                }
            }
        },
        "aws-native:iotevents:DetectorModelIotSiteWise": {
            "type": "object",
            "properties": {
                "assetId": {
                    "type": "string",
                    "description": "The ID of the asset that has the specified property. You can specify an expression."
                },
                "entryId": {
                    "type": "string",
                    "description": "A unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier. You can also specify an expression."
                },
                "propertyAlias": {
                    "type": "string",
                    "description": "The alias of the asset property. You can also specify an expression."
                },
                "propertyId": {
                    "type": "string",
                    "description": "The ID of the asset property. You can specify an expression."
                },
                "propertyValue": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelAssetPropertyValue"
                }
            }
        },
        "aws-native:iotevents:DetectorModelIotTopicPublish": {
            "type": "object",
            "properties": {
                "mqttTopic": {
                    "type": "string",
                    "description": "The MQTT topic of the message. You can use a string expression that includes variables (`$variable.\u003cvariable-name\u003e`) and input values (`$input.\u003cinput-name\u003e.\u003cpath-to-datum\u003e`) as the topic string."
                },
                "payload": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelPayload"
                }
            }
        },
        "aws-native:iotevents:DetectorModelLambda": {
            "type": "object",
            "properties": {
                "functionArn": {
                    "type": "string",
                    "description": "The ARN of the Lambda function that is executed."
                },
                "payload": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelPayload"
                }
            }
        },
        "aws-native:iotevents:DetectorModelOnEnter": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:DetectorModelEvent"
                    },
                    "description": "Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`."
                }
            }
        },
        "aws-native:iotevents:DetectorModelOnExit": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:DetectorModelEvent"
                    },
                    "description": "Specifies the `actions` that are performed when the state is exited and the `condition` is `TRUE`."
                }
            }
        },
        "aws-native:iotevents:DetectorModelOnInput": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:DetectorModelEvent"
                    },
                    "description": "Specifies the `actions` performed when the `condition` evaluates to `TRUE`."
                },
                "transitionEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:DetectorModelTransitionEvent"
                    },
                    "description": "Specifies the `actions` performed, and the next `state` entered, when a `condition` evaluates to `TRUE`."
                }
            }
        },
        "aws-native:iotevents:DetectorModelPayload": {
            "type": "object",
            "properties": {
                "contentExpression": {
                    "type": "string",
                    "description": "The content of the payload. You can use a string expression that includes quoted strings (`'\u003cstring\u003e'`), variables (`$variable.\u003cvariable-name\u003e`), input values (`$input.\u003cinput-name\u003e.\u003cpath-to-datum\u003e`), string concatenations, and quoted strings that contain `${}` as the content. The recommended maximum size of a content expression is 1 KB."
                },
                "type": {
                    "type": "string",
                    "description": "The value of the payload type can be either `STRING` or `JSON`."
                }
            }
        },
        "aws-native:iotevents:DetectorModelResetTimer": {
            "type": "object",
            "properties": {
                "timerName": {
                    "type": "string",
                    "description": "The name of the timer to reset."
                }
            }
        },
        "aws-native:iotevents:DetectorModelSetTimer": {
            "type": "object",
            "properties": {
                "durationExpression": {
                    "type": "string",
                    "description": "The duration of the timer, in seconds. You can use a string expression that includes numbers, variables (`$variable.\u003cvariable-name\u003e`), and input values (`$input.\u003cinput-name\u003e.\u003cpath-to-datum\u003e`) as the duration. The range of the duration is `1-31622400` seconds. To ensure accuracy, the minimum duration is `60` seconds. The evaluated result of the duration is rounded down to the nearest whole number."
                },
                "seconds": {
                    "type": "integer",
                    "description": "The number of seconds until the timer expires. The minimum value is `60` seconds to ensure accuracy. The maximum value is `31622400` seconds."
                },
                "timerName": {
                    "type": "string",
                    "description": "The name of the timer."
                }
            }
        },
        "aws-native:iotevents:DetectorModelSetVariable": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The new value of the variable."
                },
                "variableName": {
                    "type": "string",
                    "description": "The name of the variable."
                }
            }
        },
        "aws-native:iotevents:DetectorModelSns": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelPayload"
                },
                "targetArn": {
                    "type": "string",
                    "description": "The ARN of the Amazon SNS target where the message is sent."
                }
            }
        },
        "aws-native:iotevents:DetectorModelSqs": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelPayload"
                },
                "queueUrl": {
                    "type": "string",
                    "description": "The URL of the SQS queue where the data is written."
                },
                "useBase64": {
                    "type": "boolean",
                    "description": "Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`."
                }
            }
        },
        "aws-native:iotevents:DetectorModelState": {
            "type": "object",
            "properties": {
                "onEnter": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelOnEnter"
                },
                "onExit": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelOnExit"
                },
                "onInput": {
                    "$ref": "#/types/aws-native:iotevents:DetectorModelOnInput"
                },
                "stateName": {
                    "type": "string",
                    "description": "The name of the state."
                }
            }
        },
        "aws-native:iotevents:DetectorModelTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key of the Tag."
                },
                "value": {
                    "type": "string",
                    "description": "Value of the Tag."
                }
            }
        },
        "aws-native:iotevents:DetectorModelTransitionEvent": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:DetectorModelAction"
                    },
                    "description": "The actions to be performed."
                },
                "condition": {
                    "type": "string",
                    "description": "A Boolean expression that when `TRUE` causes the `actions` to be performed and the `nextState` to be entered."
                },
                "eventName": {
                    "type": "string",
                    "description": "The name of the event."
                },
                "nextState": {
                    "type": "string",
                    "description": "The next state to enter."
                }
            }
        },
        "aws-native:iotevents:InputAttribute": {
            "type": "object",
            "properties": {
                "jsonPath": {
                    "type": "string",
                    "description": "An expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (`BatchPutMessage`). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the `condition` expressions used by detectors.\n\n_Syntax_: `\u003cfield-name\u003e.\u003cfield-name\u003e...`"
                }
            }
        },
        "aws-native:iotevents:InputInputDefinition": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotevents:InputAttribute"
                    },
                    "description": "The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input."
                }
            }
        },
        "aws-native:iotevents:InputTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key of the Tag."
                },
                "value": {
                    "type": "string",
                    "description": "Value of the Tag."
                }
            }
        },
        "aws-native:iotfleethub:ApplicationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:iotsitewise:AccessPolicyAccessPolicyIdentity": {
            "type": "object",
            "properties": {
                "iamRole": {
                    "$ref": "#/types/aws-native:iotsitewise:AccessPolicyIamRole"
                },
                "iamUser": {
                    "$ref": "#/types/aws-native:iotsitewise:AccessPolicyIamUser"
                },
                "user": {
                    "$ref": "#/types/aws-native:iotsitewise:AccessPolicyUser"
                }
            }
        },
        "aws-native:iotsitewise:AccessPolicyAccessPolicyResource": {
            "type": "object",
            "properties": {
                "portal": {
                    "$ref": "#/types/aws-native:iotsitewise:AccessPolicyPortal"
                },
                "project": {
                    "$ref": "#/types/aws-native:iotsitewise:AccessPolicyProject"
                }
            }
        },
        "aws-native:iotsitewise:AccessPolicyIamRole": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the IAM role."
                }
            }
        },
        "aws-native:iotsitewise:AccessPolicyIamUser": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the IAM user."
                }
            }
        },
        "aws-native:iotsitewise:AccessPolicyPortal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the portal."
                }
            }
        },
        "aws-native:iotsitewise:AccessPolicyProject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the project."
                }
            }
        },
        "aws-native:iotsitewise:AccessPolicyUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The AWS SSO ID of the user."
                }
            }
        },
        "aws-native:iotsitewise:AssetAssetHierarchy": {
            "type": "object",
            "properties": {
                "childAssetId": {
                    "type": "string",
                    "description": "The ID of the child asset to be associated."
                },
                "logicalId": {
                    "type": "string",
                    "description": "The LogicalID of a hierarchy in the parent asset's model."
                }
            }
        },
        "aws-native:iotsitewise:AssetAssetProperty": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "The property alias that identifies the property."
                },
                "logicalId": {
                    "type": "string",
                    "description": "Customer provided ID for property."
                },
                "notificationState": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetAssetPropertyNotificationState",
                    "description": "The MQTT notification state (ENABLED or DISABLED) for this asset property."
                }
            }
        },
        "aws-native:iotsitewise:AssetAssetPropertyNotificationState": {
            "type": "string"
        },
        "aws-native:iotsitewise:AssetModelAssetModelCompositeModel": {
            "type": "object",
            "properties": {
                "compositeModelProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelAssetModelProperty"
                    },
                    "description": "The property definitions of the asset model. You can specify up to 200 properties per asset model."
                },
                "description": {
                    "type": "string",
                    "description": "A description for the asset composite model."
                },
                "name": {
                    "type": "string",
                    "description": "A unique, friendly name for the asset composite model."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the composite model. For alarm composite models, this type is AWS/ALARM"
                }
            }
        },
        "aws-native:iotsitewise:AssetModelAssetModelHierarchy": {
            "type": "object",
            "properties": {
                "childAssetModelId": {
                    "type": "string",
                    "description": "The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model."
                },
                "logicalId": {
                    "type": "string",
                    "description": "Customer provided ID for hierarchy."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the asset model hierarchy."
                }
            }
        },
        "aws-native:iotsitewise:AssetModelAssetModelProperty": {
            "type": "object",
            "properties": {
                "dataType": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelDataType",
                    "description": "The data type of the asset model property."
                },
                "dataTypeSpec": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelDataTypeSpec",
                    "description": "The data type of the structure for this property."
                },
                "logicalId": {
                    "type": "string",
                    "description": "Customer provided ID for property."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the asset model property."
                },
                "type": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelPropertyType",
                    "description": "The property type"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of the asset model property, such as Newtons or RPM."
                }
            }
        },
        "aws-native:iotsitewise:AssetModelAttribute": {
            "type": "object",
            "properties": {
                "defaultValue": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotsitewise:AssetModelDataType": {
            "type": "string"
        },
        "aws-native:iotsitewise:AssetModelDataTypeSpec": {
            "type": "string"
        },
        "aws-native:iotsitewise:AssetModelExpressionVariable": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The friendly name of the variable to be used in the expression."
                },
                "value": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelVariableValue",
                    "description": "The variable that identifies an asset property from which to use values."
                }
            }
        },
        "aws-native:iotsitewise:AssetModelMetric": {
            "type": "object",
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression."
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelExpressionVariable"
                    },
                    "description": "The list of variables used in the expression."
                },
                "window": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelMetricWindow",
                    "description": "The window (time interval) over which AWS IoT SiteWise computes the metric's aggregation expression"
                }
            }
        },
        "aws-native:iotsitewise:AssetModelMetricWindow": {
            "type": "object",
            "properties": {
                "tumbling": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelTumblingWindow"
                }
            }
        },
        "aws-native:iotsitewise:AssetModelPropertyType": {
            "type": "object",
            "properties": {
                "attribute": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelAttribute"
                },
                "metric": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelMetric"
                },
                "transform": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelTransform"
                },
                "typeName": {
                    "$ref": "#/types/aws-native:iotsitewise:AssetModelTypeName"
                }
            }
        },
        "aws-native:iotsitewise:AssetModelTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotsitewise:AssetModelTransform": {
            "type": "object",
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression."
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:iotsitewise:AssetModelExpressionVariable"
                    },
                    "description": "The list of variables used in the expression."
                }
            }
        },
        "aws-native:iotsitewise:AssetModelTumblingWindow": {
            "type": "object",
            "properties": {
                "interval": {
                    "type": "string"
                },
                "offset": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotsitewise:AssetModelTypeName": {
            "type": "string"
        },
        "aws-native:iotsitewise:AssetModelVariableValue": {
            "type": "object",
            "properties": {
                "hierarchyLogicalId": {
                    "type": "string"
                },
                "propertyLogicalId": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotsitewise:AssetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotsitewise:DashboardTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotsitewise:GatewayGatewayCapabilitySummary": {
            "type": "object",
            "properties": {
                "capabilityConfiguration": {
                    "type": "string"
                },
                "capabilityNamespace": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotsitewise:GatewayGatewayPlatform": {
            "type": "object",
            "properties": {
                "greengrass": {
                    "$ref": "#/types/aws-native:iotsitewise:GatewayGreengrass",
                    "description": "A gateway that runs on AWS IoT Greengrass."
                }
            }
        },
        "aws-native:iotsitewise:GatewayGreengrass": {
            "type": "object",
            "properties": {
                "groupArn": {
                    "type": "string",
                    "description": "The ARN of the Greengrass group."
                }
            }
        },
        "aws-native:iotsitewise:GatewayTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotsitewise:PortalTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotsitewise:ProjectTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:DestinationExpressionType": {
            "type": "string"
        },
        "aws-native:iotwireless:DestinationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:DeviceProfileLoRaWANDeviceProfile": {
            "type": "object",
            "properties": {
                "classBTimeout": {
                    "type": "integer"
                },
                "classCTimeout": {
                    "type": "integer"
                },
                "macVersion": {
                    "type": "string"
                },
                "maxDutyCycle": {
                    "type": "integer"
                },
                "maxEirp": {
                    "type": "integer"
                },
                "pingSlotDr": {
                    "type": "integer"
                },
                "pingSlotFreq": {
                    "type": "integer"
                },
                "pingSlotPeriod": {
                    "type": "integer"
                },
                "regParamsRevision": {
                    "type": "string"
                },
                "rfRegion": {
                    "type": "string"
                },
                "supports32BitFCnt": {
                    "type": "boolean"
                },
                "supportsClassB": {
                    "type": "boolean"
                },
                "supportsClassC": {
                    "type": "boolean"
                },
                "supportsJoin": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:iotwireless:DeviceProfileTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:ServiceProfileLoRaWANServiceProfile": {
            "type": "object",
            "properties": {
                "addGwMetadata": {
                    "type": "boolean"
                },
                "channelMask": {
                    "type": "string"
                },
                "devStatusReqFreq": {
                    "type": "integer"
                },
                "dlBucketSize": {
                    "type": "integer"
                },
                "dlRate": {
                    "type": "integer"
                },
                "dlRatePolicy": {
                    "type": "string"
                },
                "drMax": {
                    "type": "integer"
                },
                "drMin": {
                    "type": "integer"
                },
                "hrAllowed": {
                    "type": "boolean"
                },
                "minGwDiversity": {
                    "type": "integer"
                },
                "nwkGeoLoc": {
                    "type": "boolean"
                },
                "prAllowed": {
                    "type": "boolean"
                },
                "raAllowed": {
                    "type": "boolean"
                },
                "reportDevStatusBattery": {
                    "type": "boolean"
                },
                "reportDevStatusMargin": {
                    "type": "boolean"
                },
                "targetPer": {
                    "type": "integer"
                },
                "ulBucketSize": {
                    "type": "integer"
                },
                "ulRate": {
                    "type": "integer"
                },
                "ulRatePolicy": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:ServiceProfileTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:TaskDefinitionLoRaWANGatewayVersion": {
            "type": "object",
            "properties": {
                "model": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "station": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:TaskDefinitionLoRaWANUpdateGatewayTaskCreate": {
            "type": "object",
            "properties": {
                "currentVersion": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionLoRaWANGatewayVersion"
                },
                "sigKeyCrc": {
                    "type": "integer"
                },
                "updateSignature": {
                    "type": "string"
                },
                "updateVersion": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionLoRaWANGatewayVersion"
                }
            }
        },
        "aws-native:iotwireless:TaskDefinitionLoRaWANUpdateGatewayTaskEntry": {
            "type": "object",
            "properties": {
                "currentVersion": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionLoRaWANGatewayVersion"
                },
                "updateVersion": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionLoRaWANGatewayVersion"
                }
            }
        },
        "aws-native:iotwireless:TaskDefinitionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:TaskDefinitionTaskDefinitionType": {
            "type": "string"
        },
        "aws-native:iotwireless:TaskDefinitionUpdateWirelessGatewayTaskCreate": {
            "type": "object",
            "properties": {
                "loRaWAN": {
                    "$ref": "#/types/aws-native:iotwireless:TaskDefinitionLoRaWANUpdateGatewayTaskCreate"
                },
                "updateDataRole": {
                    "type": "string"
                },
                "updateDataSource": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:WirelessDeviceAbpV10x": {
            "type": "object",
            "properties": {
                "devAddr": {
                    "type": "string"
                },
                "sessionKeys": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceSessionKeysAbpV10x"
                }
            }
        },
        "aws-native:iotwireless:WirelessDeviceAbpV11": {
            "type": "object",
            "properties": {
                "devAddr": {
                    "type": "string"
                },
                "sessionKeys": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceSessionKeysAbpV11"
                }
            }
        },
        "aws-native:iotwireless:WirelessDeviceLoRaWANDevice": {
            "type": "object",
            "properties": {
                "abpV10x": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceAbpV10x"
                },
                "abpV11": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceAbpV11"
                },
                "devEui": {
                    "type": "string"
                },
                "deviceProfileId": {
                    "type": "string"
                },
                "otaaV10x": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceOtaaV10x"
                },
                "otaaV11": {
                    "$ref": "#/types/aws-native:iotwireless:WirelessDeviceOtaaV11"
                },
                "serviceProfileId": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:WirelessDeviceOtaaV10x": {
            "type": "object",
            "properties": {
                "appEui": {
                    "type": "string"
                },
                "appKey": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:WirelessDeviceOtaaV11": {
            "type": "object",
            "properties": {
                "appKey": {
                    "type": "string"
                },
                "joinEui": {
                    "type": "string"
                },
                "nwkKey": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:WirelessDeviceSessionKeysAbpV10x": {
            "type": "object",
            "properties": {
                "appSKey": {
                    "type": "string"
                },
                "nwkSKey": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:WirelessDeviceSessionKeysAbpV11": {
            "type": "object",
            "properties": {
                "appSKey": {
                    "type": "string"
                },
                "fNwkSIntKey": {
                    "type": "string"
                },
                "nwkSEncKey": {
                    "type": "string"
                },
                "sNwkSIntKey": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:WirelessDeviceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:WirelessDeviceType": {
            "type": "string"
        },
        "aws-native:iotwireless:WirelessGatewayLoRaWANGateway": {
            "type": "object",
            "properties": {
                "gatewayEui": {
                    "type": "string"
                },
                "rfRegion": {
                    "type": "string"
                }
            }
        },
        "aws-native:iotwireless:WirelessGatewayTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ivs:ChannelLatencyMode": {
            "type": "string"
        },
        "aws-native:ivs:ChannelTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ivs:ChannelType": {
            "type": "string"
        },
        "aws-native:ivs:PlaybackKeyPairTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ivs:RecordingConfigurationDestinationConfiguration": {
            "type": "object",
            "properties": {
                "s3": {
                    "$ref": "#/types/aws-native:ivs:RecordingConfigurationS3DestinationConfiguration"
                }
            }
        },
        "aws-native:ivs:RecordingConfigurationS3DestinationConfiguration": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string"
                }
            }
        },
        "aws-native:ivs:RecordingConfigurationState": {
            "type": "string"
        },
        "aws-native:ivs:RecordingConfigurationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ivs:StreamKeyTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceAccessControlListConfiguration": {
            "type": "object",
            "properties": {
                "keyPath": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceAclConfiguration": {
            "type": "object",
            "properties": {
                "allowedGroupsColumnName": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceColumnConfiguration": {
            "type": "object",
            "properties": {
                "changeDetectingColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "documentDataColumnName": {
                    "type": "string"
                },
                "documentIdColumnName": {
                    "type": "string"
                },
                "documentTitleColumnName": {
                    "type": "string"
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceConfluenceAttachmentConfiguration": {
            "type": "object",
            "properties": {
                "attachmentFieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceConfluenceAttachmentToIndexFieldMapping"
                    }
                },
                "crawlAttachments": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:kendra:DataSourceConfluenceAttachmentFieldName": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceConfluenceAttachmentToIndexFieldMapping": {
            "type": "object",
            "properties": {
                "dataSourceFieldName": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluenceAttachmentFieldName"
                },
                "dateFieldFormat": {
                    "type": "string"
                },
                "indexFieldName": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceConfluenceBlogConfiguration": {
            "type": "object",
            "properties": {
                "blogFieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceConfluenceBlogToIndexFieldMapping"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceConfluenceBlogFieldName": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceConfluenceBlogToIndexFieldMapping": {
            "type": "object",
            "properties": {
                "dataSourceFieldName": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluenceBlogFieldName"
                },
                "dateFieldFormat": {
                    "type": "string"
                },
                "indexFieldName": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceConfluenceConfiguration": {
            "type": "object",
            "properties": {
                "attachmentConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluenceAttachmentConfiguration"
                },
                "blogConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluenceBlogConfiguration"
                },
                "exclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pageConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluencePageConfiguration"
                },
                "secretArn": {
                    "type": "string"
                },
                "serverUrl": {
                    "type": "string"
                },
                "spaceConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluenceSpaceConfiguration"
                },
                "version": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluenceVersion"
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceDataSourceVpcConfiguration"
                }
            }
        },
        "aws-native:kendra:DataSourceConfluencePageConfiguration": {
            "type": "object",
            "properties": {
                "pageFieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceConfluencePageToIndexFieldMapping"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceConfluencePageFieldName": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceConfluencePageToIndexFieldMapping": {
            "type": "object",
            "properties": {
                "dataSourceFieldName": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluencePageFieldName"
                },
                "dateFieldFormat": {
                    "type": "string"
                },
                "indexFieldName": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceConfluenceSpaceConfiguration": {
            "type": "object",
            "properties": {
                "crawlArchivedSpaces": {
                    "type": "boolean"
                },
                "crawlPersonalSpaces": {
                    "type": "boolean"
                },
                "excludeSpaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeSpaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spaceFieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceConfluenceSpaceToIndexFieldMapping"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceConfluenceSpaceFieldName": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceConfluenceSpaceToIndexFieldMapping": {
            "type": "object",
            "properties": {
                "dataSourceFieldName": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluenceSpaceFieldName"
                },
                "dateFieldFormat": {
                    "type": "string"
                },
                "indexFieldName": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceConfluenceVersion": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceConnectionConfiguration": {
            "type": "object",
            "properties": {
                "databaseHost": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "databasePort": {
                    "type": "integer"
                },
                "secretArn": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceDataSourceConfiguration": {
            "type": "object",
            "properties": {
                "confluenceConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConfluenceConfiguration"
                },
                "databaseConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceDatabaseConfiguration"
                },
                "googleDriveConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceGoogleDriveConfiguration"
                },
                "oneDriveConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceOneDriveConfiguration"
                },
                "s3Configuration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceS3DataSourceConfiguration"
                },
                "salesforceConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceSalesforceConfiguration"
                },
                "serviceNowConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceServiceNowConfiguration"
                },
                "sharePointConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceSharePointConfiguration"
                }
            }
        },
        "aws-native:kendra:DataSourceDataSourceToIndexFieldMapping": {
            "type": "object",
            "properties": {
                "dataSourceFieldName": {
                    "type": "string"
                },
                "dateFieldFormat": {
                    "type": "string"
                },
                "indexFieldName": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceDataSourceVpcConfiguration": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceDatabaseConfiguration": {
            "type": "object",
            "properties": {
                "aclConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceAclConfiguration"
                },
                "columnConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceColumnConfiguration"
                },
                "connectionConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceConnectionConfiguration"
                },
                "databaseEngineType": {
                    "$ref": "#/types/aws-native:kendra:DataSourceDatabaseEngineType"
                },
                "sqlConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceSqlConfiguration"
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceDataSourceVpcConfiguration"
                }
            }
        },
        "aws-native:kendra:DataSourceDatabaseEngineType": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceDocumentsMetadataConfiguration": {
            "type": "object",
            "properties": {
                "s3Prefix": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceGoogleDriveConfiguration": {
            "type": "object",
            "properties": {
                "excludeMimeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludeSharedDrives": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludeUserAccounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                },
                "inclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secretArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceOneDriveConfiguration": {
            "type": "object",
            "properties": {
                "disableLocalGroups": {
                    "type": "boolean"
                },
                "exclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                },
                "inclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oneDriveUsers": {
                    "$ref": "#/types/aws-native:kendra:DataSourceOneDriveUsers"
                },
                "secretArn": {
                    "type": "string"
                },
                "tenantDomain": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceOneDriveUsers": {
            "type": "object",
            "properties": {
                "oneDriveUserList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oneDriveUserS3Path": {
                    "$ref": "#/types/aws-native:kendra:DataSourceS3Path"
                }
            }
        },
        "aws-native:kendra:DataSourceQueryIdentifiersEnclosingOption": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceS3DataSourceConfiguration": {
            "type": "object",
            "properties": {
                "accessControlListConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceAccessControlListConfiguration"
                },
                "bucketName": {
                    "type": "string"
                },
                "documentsMetadataConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceDocumentsMetadataConfiguration"
                },
                "exclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inclusionPrefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceS3Path": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceSalesforceChatterFeedConfiguration": {
            "type": "object",
            "properties": {
                "documentDataFieldName": {
                    "type": "string"
                },
                "documentTitleFieldName": {
                    "type": "string"
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                },
                "includeFilterTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceSalesforceChatterFeedIncludeFilterType"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceSalesforceChatterFeedIncludeFilterType": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceSalesforceConfiguration": {
            "type": "object",
            "properties": {
                "chatterFeedConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceSalesforceChatterFeedConfiguration"
                },
                "crawlAttachments": {
                    "type": "boolean"
                },
                "excludeAttachmentFilePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "includeAttachmentFilePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "knowledgeArticleConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceSalesforceKnowledgeArticleConfiguration"
                },
                "secretArn": {
                    "type": "string"
                },
                "serverUrl": {
                    "type": "string"
                },
                "standardObjectAttachmentConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceSalesforceStandardObjectAttachmentConfiguration"
                },
                "standardObjectConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceSalesforceStandardObjectConfiguration"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceSalesforceCustomKnowledgeArticleTypeConfiguration": {
            "type": "object",
            "properties": {
                "documentDataFieldName": {
                    "type": "string"
                },
                "documentTitleFieldName": {
                    "type": "string"
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:DataSourceSalesforceKnowledgeArticleConfiguration": {
            "type": "object",
            "properties": {
                "customKnowledgeArticleTypeConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceSalesforceCustomKnowledgeArticleTypeConfiguration"
                    }
                },
                "includedStates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceSalesforceKnowledgeArticleState"
                    }
                },
                "standardKnowledgeArticleTypeConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceSalesforceStandardKnowledgeArticleTypeConfiguration"
                }
            }
        },
        "aws-native:kendra:DataSourceSalesforceKnowledgeArticleState": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceSalesforceStandardKnowledgeArticleTypeConfiguration": {
            "type": "object",
            "properties": {
                "documentDataFieldName": {
                    "type": "string"
                },
                "documentTitleFieldName": {
                    "type": "string"
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceSalesforceStandardObjectAttachmentConfiguration": {
            "type": "object",
            "properties": {
                "documentTitleFieldName": {
                    "type": "string"
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceSalesforceStandardObjectConfiguration": {
            "type": "object",
            "properties": {
                "documentDataFieldName": {
                    "type": "string"
                },
                "documentTitleFieldName": {
                    "type": "string"
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                },
                "name": {
                    "$ref": "#/types/aws-native:kendra:DataSourceSalesforceStandardObjectName"
                }
            }
        },
        "aws-native:kendra:DataSourceSalesforceStandardObjectName": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceServiceNowBuildVersionType": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceServiceNowConfiguration": {
            "type": "object",
            "properties": {
                "hostUrl": {
                    "type": "string"
                },
                "knowledgeArticleConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceServiceNowKnowledgeArticleConfiguration"
                },
                "secretArn": {
                    "type": "string"
                },
                "serviceCatalogConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceServiceNowServiceCatalogConfiguration"
                },
                "serviceNowBuildVersion": {
                    "$ref": "#/types/aws-native:kendra:DataSourceServiceNowBuildVersionType"
                }
            }
        },
        "aws-native:kendra:DataSourceServiceNowKnowledgeArticleConfiguration": {
            "type": "object",
            "properties": {
                "crawlAttachments": {
                    "type": "boolean"
                },
                "documentDataFieldName": {
                    "type": "string"
                },
                "documentTitleFieldName": {
                    "type": "string"
                },
                "excludeAttachmentFilePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                },
                "includeAttachmentFilePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceServiceNowServiceCatalogConfiguration": {
            "type": "object",
            "properties": {
                "crawlAttachments": {
                    "type": "boolean"
                },
                "documentDataFieldName": {
                    "type": "string"
                },
                "documentTitleFieldName": {
                    "type": "string"
                },
                "excludeAttachmentFilePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                },
                "includeAttachmentFilePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:kendra:DataSourceSharePointConfiguration": {
            "type": "object",
            "properties": {
                "crawlAttachments": {
                    "type": "boolean"
                },
                "disableLocalGroups": {
                    "type": "boolean"
                },
                "documentTitleFieldName": {
                    "type": "string"
                },
                "exclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fieldMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:DataSourceDataSourceToIndexFieldMapping"
                    }
                },
                "inclusionPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secretArn": {
                    "type": "string"
                },
                "sharePointVersion": {
                    "$ref": "#/types/aws-native:kendra:DataSourceSharePointConfigurationSharePointVersion"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "useChangeLog": {
                    "type": "boolean"
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:kendra:DataSourceDataSourceVpcConfiguration"
                }
            }
        },
        "aws-native:kendra:DataSourceSharePointConfigurationSharePointVersion": {
            "type": "string"
        },
        "aws-native:kendra:DataSourceSqlConfiguration": {
            "type": "object",
            "properties": {
                "queryIdentifiersEnclosingOption": {
                    "$ref": "#/types/aws-native:kendra:DataSourceQueryIdentifiersEnclosingOption"
                }
            }
        },
        "aws-native:kendra:DataSourceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A string used to identify this tag"
                },
                "value": {
                    "type": "string",
                    "description": "A string containing the value for the tag"
                }
            }
        },
        "aws-native:kendra:DataSourceType": {
            "type": "string"
        },
        "aws-native:kendra:FaqFileFormat": {
            "type": "string"
        },
        "aws-native:kendra:FaqS3Path": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:FaqTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A string used to identify this tag"
                },
                "value": {
                    "type": "string",
                    "description": "A string containing the value for the tag"
                }
            }
        },
        "aws-native:kendra:IndexCapacityUnitsConfiguration": {
            "type": "object",
            "properties": {
                "queryCapacityUnits": {
                    "type": "integer"
                },
                "storageCapacityUnits": {
                    "type": "integer"
                }
            }
        },
        "aws-native:kendra:IndexDocumentAttributeValueType": {
            "type": "string"
        },
        "aws-native:kendra:IndexDocumentMetadataConfiguration": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "relevance": {
                    "$ref": "#/types/aws-native:kendra:IndexRelevance"
                },
                "search": {
                    "$ref": "#/types/aws-native:kendra:IndexSearch"
                },
                "type": {
                    "$ref": "#/types/aws-native:kendra:IndexDocumentAttributeValueType"
                }
            }
        },
        "aws-native:kendra:IndexEdition": {
            "type": "string"
        },
        "aws-native:kendra:IndexJsonTokenTypeConfiguration": {
            "type": "object",
            "properties": {
                "groupAttributeField": {
                    "type": "string"
                },
                "userNameAttributeField": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:IndexJwtTokenTypeConfiguration": {
            "type": "object",
            "properties": {
                "claimRegex": {
                    "type": "string"
                },
                "groupAttributeField": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "keyLocation": {
                    "$ref": "#/types/aws-native:kendra:IndexKeyLocation"
                },
                "secretManagerArn": {
                    "type": "string"
                },
                "uRL": {
                    "type": "string"
                },
                "userNameAttributeField": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:IndexKeyLocation": {
            "type": "string"
        },
        "aws-native:kendra:IndexOrder": {
            "type": "string"
        },
        "aws-native:kendra:IndexRelevance": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "string"
                },
                "freshness": {
                    "type": "boolean"
                },
                "importance": {
                    "type": "integer"
                },
                "rankOrder": {
                    "$ref": "#/types/aws-native:kendra:IndexOrder"
                },
                "valueImportanceItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kendra:IndexValueImportanceItem"
                    }
                }
            }
        },
        "aws-native:kendra:IndexSearch": {
            "type": "object",
            "properties": {
                "displayable": {
                    "type": "boolean"
                },
                "facetable": {
                    "type": "boolean"
                },
                "searchable": {
                    "type": "boolean"
                },
                "sortable": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:kendra:IndexServerSideEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "type": "string"
                }
            }
        },
        "aws-native:kendra:IndexTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A string used to identify this tag"
                },
                "value": {
                    "type": "string",
                    "description": "A string containing the value for the tag"
                }
            }
        },
        "aws-native:kendra:IndexUserContextPolicy": {
            "type": "string"
        },
        "aws-native:kendra:IndexUserTokenConfiguration": {
            "type": "object",
            "properties": {
                "jsonTokenTypeConfiguration": {
                    "$ref": "#/types/aws-native:kendra:IndexJsonTokenTypeConfiguration"
                },
                "jwtTokenTypeConfiguration": {
                    "$ref": "#/types/aws-native:kendra:IndexJwtTokenTypeConfiguration"
                }
            }
        },
        "aws-native:kendra:IndexValueImportanceItem": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "aws-native:kinesis:StreamStreamEncryption": {
            "type": "object",
            "properties": {
                "encryptionType": {
                    "$ref": "#/types/aws-native:kinesis:StreamStreamEncryptionEncryptionType",
                    "description": "The encryption type to use. The only valid value is KMS. "
                },
                "keyId": {
                    "type": "string",
                    "description": "The GUID for the customer-managed AWS KMS key to use for encryption. This value can be a globally unique identifier, a fully specified Amazon Resource Name (ARN) to either an alias or a key, or an alias name prefixed by \"alias/\".You can also use a master key owned by Kinesis Data Streams by specifying the alias aws/kinesis."
                }
            }
        },
        "aws-native:kinesis:StreamStreamEncryptionEncryptionType": {
            "type": "string"
        },
        "aws-native:kinesis:StreamTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamBufferingHints": {
            "type": "object",
            "properties": {
                "intervalInSeconds": {
                    "type": "integer"
                },
                "sizeInMBs": {
                    "type": "integer"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamCloudWatchLoggingOptions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "logGroupName": {
                    "type": "string"
                },
                "logStreamName": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamCopyCommand": {
            "type": "object",
            "properties": {
                "copyOptions": {
                    "type": "string"
                },
                "dataTableColumns": {
                    "type": "string"
                },
                "dataTableName": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamDataFormatConversionConfiguration": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "inputFormatConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamInputFormatConfiguration"
                },
                "outputFormatConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamOutputFormatConfiguration"
                },
                "schemaConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamSchemaConfiguration"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamDeliveryStreamEncryptionConfigurationInput": {
            "type": "object",
            "properties": {
                "keyARN": {
                    "type": "string"
                },
                "keyType": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamDeliveryStreamEncryptionConfigurationInputKeyType"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamDeliveryStreamEncryptionConfigurationInputKeyType": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamDeliveryStreamType": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamDeserializer": {
            "type": "object",
            "properties": {
                "hiveJsonSerDe": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamHiveJsonSerDe"
                },
                "openXJsonSerDe": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamOpenXJsonSerDe"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamDynamicPartitioningConfiguration": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "retryOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamRetryOptions"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamElasticsearchBufferingHints": {
            "type": "object",
            "properties": {
                "intervalInSeconds": {
                    "type": "integer"
                },
                "sizeInMBs": {
                    "type": "integer"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamElasticsearchDestinationConfiguration": {
            "type": "object",
            "properties": {
                "bufferingHints": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamElasticsearchBufferingHints"
                },
                "cloudWatchLoggingOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamCloudWatchLoggingOptions"
                },
                "clusterEndpoint": {
                    "type": "string"
                },
                "domainARN": {
                    "type": "string"
                },
                "indexName": {
                    "type": "string"
                },
                "indexRotationPeriod": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod"
                },
                "processingConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamProcessingConfiguration"
                },
                "retryOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamElasticsearchRetryOptions"
                },
                "roleARN": {
                    "type": "string"
                },
                "s3BackupMode": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode"
                },
                "s3Configuration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfiguration"
                },
                "typeName": {
                    "type": "string"
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamVpcConfiguration"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamElasticsearchRetryOptions": {
            "type": "object",
            "properties": {
                "durationInSeconds": {
                    "type": "integer"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "kMSEncryptionConfig": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamKMSEncryptionConfig"
                },
                "noEncryptionConfig": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamEncryptionConfigurationNoEncryptionConfig"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamEncryptionConfigurationNoEncryptionConfig": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamExtendedS3DestinationConfiguration": {
            "type": "object",
            "properties": {
                "bucketARN": {
                    "type": "string"
                },
                "bufferingHints": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamBufferingHints"
                },
                "cloudWatchLoggingOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamCloudWatchLoggingOptions"
                },
                "compressionFormat": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat"
                },
                "dataFormatConversionConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamDataFormatConversionConfiguration"
                },
                "dynamicPartitioningConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamDynamicPartitioningConfiguration"
                },
                "encryptionConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamEncryptionConfiguration"
                },
                "errorOutputPrefix": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "processingConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamProcessingConfiguration"
                },
                "roleARN": {
                    "type": "string"
                },
                "s3BackupConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfiguration"
                },
                "s3BackupMode": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamHiveJsonSerDe": {
            "type": "object",
            "properties": {
                "timestampFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamHttpEndpointCommonAttribute": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "type": "string"
                },
                "attributeValue": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamHttpEndpointConfiguration": {
            "type": "object",
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamHttpEndpointDestinationConfiguration": {
            "type": "object",
            "properties": {
                "bufferingHints": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamBufferingHints"
                },
                "cloudWatchLoggingOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamCloudWatchLoggingOptions"
                },
                "endpointConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamHttpEndpointConfiguration"
                },
                "processingConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamProcessingConfiguration"
                },
                "requestConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamHttpEndpointRequestConfiguration"
                },
                "retryOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamRetryOptions"
                },
                "roleARN": {
                    "type": "string"
                },
                "s3BackupMode": {
                    "type": "string"
                },
                "s3Configuration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfiguration"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamHttpEndpointRequestConfiguration": {
            "type": "object",
            "properties": {
                "commonAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamHttpEndpointCommonAttribute"
                    }
                },
                "contentEncoding": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamHttpEndpointRequestConfigurationContentEncoding"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamHttpEndpointRequestConfigurationContentEncoding": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamInputFormatConfiguration": {
            "type": "object",
            "properties": {
                "deserializer": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamDeserializer"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamKMSEncryptionConfig": {
            "type": "object",
            "properties": {
                "aWSKMSKeyARN": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamKinesisStreamSourceConfiguration": {
            "type": "object",
            "properties": {
                "kinesisStreamARN": {
                    "type": "string"
                },
                "roleARN": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamOpenXJsonSerDe": {
            "type": "object",
            "properties": {
                "caseInsensitive": {
                    "type": "boolean"
                },
                "columnToJsonKeyMappings": {
                    "$ref": "pulumi.json#/Any"
                },
                "convertDotsInJsonKeysToUnderscores": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamOrcSerDe": {
            "type": "object",
            "properties": {
                "blockSizeBytes": {
                    "type": "integer"
                },
                "bloomFilterColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bloomFilterFalsePositiveProbability": {
                    "type": "number"
                },
                "compression": {
                    "type": "string"
                },
                "dictionaryKeyThreshold": {
                    "type": "number"
                },
                "enablePadding": {
                    "type": "boolean"
                },
                "formatVersion": {
                    "type": "string"
                },
                "paddingTolerance": {
                    "type": "number"
                },
                "rowIndexStride": {
                    "type": "integer"
                },
                "stripeSizeBytes": {
                    "type": "integer"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamOutputFormatConfiguration": {
            "type": "object",
            "properties": {
                "serializer": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamSerializer"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamParquetSerDe": {
            "type": "object",
            "properties": {
                "blockSizeBytes": {
                    "type": "integer"
                },
                "compression": {
                    "type": "string"
                },
                "enableDictionaryCompression": {
                    "type": "boolean"
                },
                "maxPaddingBytes": {
                    "type": "integer"
                },
                "pageSizeBytes": {
                    "type": "integer"
                },
                "writerVersion": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamProcessingConfiguration": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamProcessor"
                    }
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamProcessor": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamProcessorParameter"
                    }
                },
                "type": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamProcessorType"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamProcessorParameter": {
            "type": "object",
            "properties": {
                "parameterName": {
                    "type": "string"
                },
                "parameterValue": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamProcessorType": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamRedshiftDestinationConfiguration": {
            "type": "object",
            "properties": {
                "cloudWatchLoggingOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamCloudWatchLoggingOptions"
                },
                "clusterJDBCURL": {
                    "type": "string"
                },
                "copyCommand": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamCopyCommand"
                },
                "password": {
                    "type": "string"
                },
                "processingConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamProcessingConfiguration"
                },
                "retryOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamRedshiftRetryOptions"
                },
                "roleARN": {
                    "type": "string"
                },
                "s3BackupConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfiguration"
                },
                "s3BackupMode": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamRedshiftDestinationConfigurationS3BackupMode"
                },
                "s3Configuration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfiguration"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamRedshiftDestinationConfigurationS3BackupMode": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamRedshiftRetryOptions": {
            "type": "object",
            "properties": {
                "durationInSeconds": {
                    "type": "integer"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamRetryOptions": {
            "type": "object",
            "properties": {
                "durationInSeconds": {
                    "type": "integer"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfiguration": {
            "type": "object",
            "properties": {
                "bucketARN": {
                    "type": "string"
                },
                "bufferingHints": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamBufferingHints"
                },
                "cloudWatchLoggingOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamCloudWatchLoggingOptions"
                },
                "compressionFormat": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfigurationCompressionFormat"
                },
                "encryptionConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamEncryptionConfiguration"
                },
                "errorOutputPrefix": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "roleARN": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfigurationCompressionFormat": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamSchemaConfiguration": {
            "type": "object",
            "properties": {
                "catalogId": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "roleARN": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamSerializer": {
            "type": "object",
            "properties": {
                "orcSerDe": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamOrcSerDe"
                },
                "parquetSerDe": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamParquetSerDe"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamSplunkDestinationConfiguration": {
            "type": "object",
            "properties": {
                "cloudWatchLoggingOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamCloudWatchLoggingOptions"
                },
                "hECAcknowledgmentTimeoutInSeconds": {
                    "type": "integer"
                },
                "hECEndpoint": {
                    "type": "string"
                },
                "hECEndpointType": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamSplunkDestinationConfigurationHECEndpointType"
                },
                "hECToken": {
                    "type": "string"
                },
                "processingConfiguration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamProcessingConfiguration"
                },
                "retryOptions": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamSplunkRetryOptions"
                },
                "s3BackupMode": {
                    "type": "string"
                },
                "s3Configuration": {
                    "$ref": "#/types/aws-native:kinesisfirehose:DeliveryStreamS3DestinationConfiguration"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamSplunkDestinationConfigurationHECEndpointType": {
            "type": "string"
        },
        "aws-native:kinesisfirehose:DeliveryStreamSplunkRetryOptions": {
            "type": "object",
            "properties": {
                "durationInSeconds": {
                    "type": "integer"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:kinesisfirehose:DeliveryStreamVpcConfiguration": {
            "type": "object",
            "properties": {
                "roleARN": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:kms:KeyKeySpec": {
            "type": "string"
        },
        "aws-native:kms:KeyKeyUsage": {
            "type": "string"
        },
        "aws-native:kms:KeyTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:kms:ReplicaKeyTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:lambda:CodeSigningConfigAllowedPublishers": {
            "type": "object",
            "properties": {
                "signingProfileVersionArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Signing profile version Arns"
                }
            }
        },
        "aws-native:lambda:CodeSigningConfigCodeSigningPolicies": {
            "type": "object",
            "properties": {
                "untrustedArtifactOnDeployment": {
                    "$ref": "#/types/aws-native:lambda:CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment",
                    "description": "Indicates how Lambda operations involve updating the code artifact will operate. Default to Warn if not provided"
                }
            }
        },
        "aws-native:lambda:CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment": {
            "type": "string"
        },
        "aws-native:lambda:EventSourceMappingDestinationConfig": {
            "type": "object",
            "properties": {
                "onFailure": {
                    "$ref": "#/types/aws-native:lambda:EventSourceMappingOnFailure",
                    "description": "The destination configuration for failed invocations."
                }
            }
        },
        "aws-native:lambda:EventSourceMappingEndpoints": {
            "type": "object",
            "properties": {
                "kafkaBootstrapServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Kafka server endpoints."
                }
            }
        },
        "aws-native:lambda:EventSourceMappingFunctionResponseTypesItem": {
            "type": "string"
        },
        "aws-native:lambda:EventSourceMappingOnFailure": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the destination resource."
                }
            }
        },
        "aws-native:lambda:EventSourceMappingSelfManagedEventSource": {
            "type": "object",
            "properties": {
                "endpoints": {
                    "$ref": "#/types/aws-native:lambda:EventSourceMappingEndpoints",
                    "description": "The endpoints for a self-managed event source."
                }
            }
        },
        "aws-native:lambda:EventSourceMappingSourceAccessConfiguration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/types/aws-native:lambda:EventSourceMappingSourceAccessConfigurationType",
                    "description": "The type of source access configuration."
                },
                "uRI": {
                    "type": "string",
                    "description": "The URI for the source access configuration resource."
                }
            }
        },
        "aws-native:lambda:EventSourceMappingSourceAccessConfigurationType": {
            "type": "string"
        },
        "aws-native:lambda:FunctionCode": {
            "type": "object",
            "properties": {
                "imageUri": {
                    "type": "string",
                    "description": "ImageUri."
                },
                "s3Bucket": {
                    "type": "string",
                    "description": "An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account."
                },
                "s3Key": {
                    "type": "string",
                    "description": "The Amazon S3 key of the deployment package."
                },
                "s3ObjectVersion": {
                    "type": "string",
                    "description": "For versioned objects, the version of the deployment package object to use."
                },
                "zipFile": {
                    "type": "string",
                    "description": "The source code of your Lambda function. If you include your function source inline with this parameter, AWS CloudFormation places it in a file named index and zips it to create a deployment package.."
                }
            }
        },
        "aws-native:lambda:FunctionDeadLetterConfig": {
            "type": "object",
            "properties": {
                "targetArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic."
                }
            }
        },
        "aws-native:lambda:FunctionEnvironment": {
            "type": "object",
            "properties": {
                "variables": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Environment variable key-value pairs."
                }
            }
        },
        "aws-native:lambda:FunctionFileSystemConfig": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system."
                },
                "localMountPath": {
                    "type": "string",
                    "description": "The path where the function can access the file system, starting with /mnt/."
                }
            }
        },
        "aws-native:lambda:FunctionImageConfig": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Command."
                },
                "entryPoint": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "EntryPoint."
                },
                "workingDirectory": {
                    "type": "string",
                    "description": "WorkingDirectory."
                }
            }
        },
        "aws-native:lambda:FunctionPackageType": {
            "type": "string"
        },
        "aws-native:lambda:FunctionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:lambda:FunctionTracingConfig": {
            "type": "object",
            "properties": {
                "mode": {
                    "$ref": "#/types/aws-native:lambda:FunctionTracingConfigMode",
                    "description": "The tracing mode."
                }
            }
        },
        "aws-native:lambda:FunctionTracingConfigMode": {
            "type": "string"
        },
        "aws-native:lambda:FunctionVpcConfig": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of VPC security groups IDs."
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of VPC subnet IDs."
                }
            }
        },
        "aws-native:licensemanager:LicenseBorrowConfiguration": {
            "type": "object",
            "properties": {
                "allowEarlyCheckIn": {
                    "type": "boolean"
                },
                "maxTimeToLiveInMinutes": {
                    "type": "integer"
                }
            }
        },
        "aws-native:licensemanager:LicenseConsumptionConfiguration": {
            "type": "object",
            "properties": {
                "borrowConfiguration": {
                    "$ref": "#/types/aws-native:licensemanager:LicenseBorrowConfiguration"
                },
                "provisionalConfiguration": {
                    "$ref": "#/types/aws-native:licensemanager:LicenseProvisionalConfiguration"
                },
                "renewType": {
                    "type": "string"
                }
            }
        },
        "aws-native:licensemanager:LicenseEntitlement": {
            "type": "object",
            "properties": {
                "allowCheckIn": {
                    "type": "boolean"
                },
                "maxCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overage": {
                    "type": "boolean"
                },
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:licensemanager:LicenseIssuerData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "signKey": {
                    "type": "string"
                }
            }
        },
        "aws-native:licensemanager:LicenseMetadata": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:licensemanager:LicenseProvisionalConfiguration": {
            "type": "object",
            "properties": {
                "maxTimeToLiveInMinutes": {
                    "type": "integer"
                }
            }
        },
        "aws-native:licensemanager:LicenseValidityDateFormat": {
            "type": "object",
            "properties": {
                "begin": {
                    "type": "string",
                    "description": "Validity begin date for the license."
                },
                "end": {
                    "type": "string",
                    "description": "Validity begin date for the license."
                }
            }
        },
        "aws-native:location:GeofenceCollectionPricingPlan": {
            "type": "string"
        },
        "aws-native:location:MapMapConfiguration": {
            "type": "object",
            "properties": {
                "style": {
                    "type": "string"
                }
            }
        },
        "aws-native:location:MapPricingPlan": {
            "type": "string"
        },
        "aws-native:location:PlaceIndexDataSourceConfiguration": {
            "type": "object",
            "properties": {
                "intendedUse": {
                    "$ref": "#/types/aws-native:location:PlaceIndexIntendedUse"
                }
            }
        },
        "aws-native:location:PlaceIndexIntendedUse": {
            "type": "string"
        },
        "aws-native:location:PlaceIndexPricingPlan": {
            "type": "string"
        },
        "aws-native:location:RouteCalculatorPricingPlan": {
            "type": "string"
        },
        "aws-native:location:TrackerPricingPlan": {
            "type": "string"
        },
        "aws-native:lookoutmetrics:AlertAction": {
            "type": "object",
            "properties": {
                "lambdaConfiguration": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AlertLambdaConfiguration"
                },
                "sNSConfiguration": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AlertSNSConfiguration"
                }
            }
        },
        "aws-native:lookoutmetrics:AlertLambdaConfiguration": {
            "type": "object",
            "properties": {
                "lambdaArn": {
                    "type": "string",
                    "description": "ARN of a Lambda to send alert notifications to."
                },
                "roleArn": {
                    "type": "string",
                    "description": "ARN of an IAM role that LookoutMetrics should assume to access the Lambda function."
                }
            }
        },
        "aws-native:lookoutmetrics:AlertSNSConfiguration": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "type": "string",
                    "description": "ARN of an IAM role that LookoutMetrics should assume to access the SNS topic."
                },
                "snsTopicArn": {
                    "type": "string",
                    "description": "ARN of an SNS topic to send alert notifications to."
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorAnomalyDetectorConfig": {
            "type": "object",
            "properties": {
                "anomalyDetectorFrequency": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorAnomalyDetectorFrequency",
                    "description": "Frequency of anomaly detection"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorAnomalyDetectorFrequency": {
            "type": "string"
        },
        "aws-native:lookoutmetrics:AnomalyDetectorAppFlowConfig": {
            "type": "object",
            "properties": {
                "flowName": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorCloudwatchConfig": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorCsvFormatDescriptor": {
            "type": "object",
            "properties": {
                "charset": {
                    "type": "string"
                },
                "containsHeader": {
                    "type": "boolean"
                },
                "delimiter": {
                    "type": "string"
                },
                "fileCompression": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorCsvFormatDescriptorFileCompression"
                },
                "headerList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "quoteSymbol": {
                    "type": "string"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorCsvFormatDescriptorFileCompression": {
            "type": "string"
        },
        "aws-native:lookoutmetrics:AnomalyDetectorFileFormatDescriptor": {
            "type": "object",
            "properties": {
                "csvFormatDescriptor": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorCsvFormatDescriptor"
                },
                "jsonFormatDescriptor": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorJsonFormatDescriptor"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorJsonFormatDescriptor": {
            "type": "object",
            "properties": {
                "charset": {
                    "type": "string"
                },
                "fileCompression": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorJsonFormatDescriptorFileCompression"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorJsonFormatDescriptorFileCompression": {
            "type": "string"
        },
        "aws-native:lookoutmetrics:AnomalyDetectorMetric": {
            "type": "object",
            "properties": {
                "aggregationFunction": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorMetricAggregationFunction",
                    "description": "Operator used to aggregate metric values"
                },
                "metricName": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorMetricAggregationFunction": {
            "type": "string"
        },
        "aws-native:lookoutmetrics:AnomalyDetectorMetricSet": {
            "type": "object",
            "properties": {
                "dimensionList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Dimensions for this MetricSet."
                },
                "metricList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorMetric"
                    },
                    "description": "Metrics captured by this MetricSet."
                },
                "metricSetDescription": {
                    "type": "string",
                    "description": "A description for the MetricSet."
                },
                "metricSetFrequency": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorMetricSetMetricSetFrequency",
                    "description": "A frequency period to aggregate the data"
                },
                "metricSetName": {
                    "type": "string",
                    "description": "The name of the MetricSet."
                },
                "metricSource": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorMetricSource"
                },
                "offset": {
                    "type": "integer",
                    "description": "Offset, in seconds, between the frequency interval and the time at which the metrics are available."
                },
                "timestampColumn": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorTimestampColumn"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorMetricSetMetricSetFrequency": {
            "type": "string"
        },
        "aws-native:lookoutmetrics:AnomalyDetectorMetricSource": {
            "type": "object",
            "properties": {
                "appFlowConfig": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorAppFlowConfig"
                },
                "cloudwatchConfig": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorCloudwatchConfig"
                },
                "rDSSourceConfig": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorRDSSourceConfig"
                },
                "redshiftSourceConfig": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorRedshiftSourceConfig"
                },
                "s3SourceConfig": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorS3SourceConfig"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorRDSSourceConfig": {
            "type": "object",
            "properties": {
                "dBInstanceIdentifier": {
                    "type": "string"
                },
                "databaseHost": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "databasePort": {
                    "type": "integer"
                },
                "roleArn": {
                    "type": "string"
                },
                "secretManagerArn": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorVpcConfiguration"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorRedshiftSourceConfig": {
            "type": "object",
            "properties": {
                "clusterIdentifier": {
                    "type": "string"
                },
                "databaseHost": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "databasePort": {
                    "type": "integer"
                },
                "roleArn": {
                    "type": "string"
                },
                "secretManagerArn": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "vpcConfiguration": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorVpcConfiguration"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorS3SourceConfig": {
            "type": "object",
            "properties": {
                "fileFormatDescriptor": {
                    "$ref": "#/types/aws-native:lookoutmetrics:AnomalyDetectorFileFormatDescriptor"
                },
                "historicalDataPathList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roleArn": {
                    "type": "string"
                },
                "templatedPathList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorTimestampColumn": {
            "type": "object",
            "properties": {
                "columnFormat": {
                    "type": "string",
                    "description": "A timestamp format for the timestamps in the dataset"
                },
                "columnName": {
                    "type": "string"
                }
            }
        },
        "aws-native:lookoutmetrics:AnomalyDetectorVpcConfiguration": {
            "type": "object",
            "properties": {
                "securityGroupIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:macie:FindingsFilterCriterion": {
            "type": "object"
        },
        "aws-native:macie:FindingsFilterFindingCriteria": {
            "type": "object",
            "properties": {
                "criterion": {
                    "$ref": "#/types/aws-native:macie:FindingsFilterCriterion"
                }
            }
        },
        "aws-native:macie:FindingsFilterFindingFilterAction": {
            "type": "string"
        },
        "aws-native:macie:FindingsFilterFindingsFilterListItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:macie:SessionFindingPublishingFrequency": {
            "type": "string"
        },
        "aws-native:macie:SessionStatus": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowEncryption": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowEncryptionAlgorithm",
                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256)."
                },
                "constantInitializationVector": {
                    "type": "string",
                    "description": "A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption."
                },
                "deviceId": {
                    "type": "string",
                    "description": "The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                },
                "keyType": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowEncryptionKeyType",
                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key)."
                },
                "region": {
                    "type": "string",
                    "description": "The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                },
                "resourceId": {
                    "type": "string",
                    "description": "An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity)."
                },
                "secretArn": {
                    "type": "string",
                    "description": " The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption."
                },
                "url": {
                    "type": "string",
                    "description": "The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                }
            }
        },
        "aws-native:mediaconnect:FlowEncryptionAlgorithm": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowEncryptionKeyType": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowEntitlementEncryption": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowEntitlementEncryptionAlgorithm",
                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256)."
                },
                "constantInitializationVector": {
                    "type": "string",
                    "description": "A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption."
                },
                "deviceId": {
                    "type": "string",
                    "description": "The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                },
                "keyType": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowEntitlementEncryptionKeyType",
                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key)."
                },
                "region": {
                    "type": "string",
                    "description": "The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                },
                "resourceId": {
                    "type": "string",
                    "description": "An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity)."
                },
                "secretArn": {
                    "type": "string",
                    "description": " The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption."
                },
                "url": {
                    "type": "string",
                    "description": "The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                }
            }
        },
        "aws-native:mediaconnect:FlowEntitlementEncryptionAlgorithm": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowEntitlementEncryptionKeyType": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowEntitlementEntitlementStatus": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowFailoverConfig": {
            "type": "object",
            "properties": {
                "recoveryWindow": {
                    "type": "integer",
                    "description": "Search window time to look for dash-7 packets"
                },
                "state": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowFailoverConfigState"
                }
            }
        },
        "aws-native:mediaconnect:FlowFailoverConfigState": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowOutputEncryption": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowOutputEncryptionAlgorithm",
                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256)."
                },
                "keyType": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowOutputEncryptionKeyType",
                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key)."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity)."
                },
                "secretArn": {
                    "type": "string",
                    "description": " The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption."
                }
            }
        },
        "aws-native:mediaconnect:FlowOutputEncryptionAlgorithm": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowOutputEncryptionKeyType": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowOutputProtocol": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowOutputVpcInterfaceAttachment": {
            "type": "object",
            "properties": {
                "vpcInterfaceName": {
                    "type": "string",
                    "description": "The name of the VPC interface to use for this output."
                }
            }
        },
        "aws-native:mediaconnect:FlowSource": {
            "type": "object",
            "properties": {
                "decryption": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowEncryption",
                    "description": "The type of encryption that is used on the content ingested from this source."
                },
                "description": {
                    "type": "string",
                    "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account."
                },
                "entitlementArn": {
                    "type": "string",
                    "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow."
                },
                "ingestIp": {
                    "type": "string",
                    "description": "The IP address that the flow will be listening on for incoming content."
                },
                "ingestPort": {
                    "type": "integer",
                    "description": "The port that the flow will be listening on for incoming content."
                },
                "maxBitrate": {
                    "type": "integer",
                    "description": "The smoothing max bitrate for RIST, RTP, and RTP-FEC streams."
                },
                "maxLatency": {
                    "type": "integer",
                    "description": "The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the source."
                },
                "protocol": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowSourceProtocol",
                    "description": "The protocol that is used by the source or output."
                },
                "sourceArn": {
                    "type": "string",
                    "description": "The ARN of the source."
                },
                "streamId": {
                    "type": "string",
                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams."
                },
                "vpcInterfaceName": {
                    "type": "string",
                    "description": "The name of the VPC Interface this Source is configured with."
                },
                "whitelistCidr": {
                    "type": "string",
                    "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16."
                }
            }
        },
        "aws-native:mediaconnect:FlowSourceEncryption": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowSourceEncryptionAlgorithm",
                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256)."
                },
                "constantInitializationVector": {
                    "type": "string",
                    "description": "A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption."
                },
                "deviceId": {
                    "type": "string",
                    "description": "The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                },
                "keyType": {
                    "$ref": "#/types/aws-native:mediaconnect:FlowSourceEncryptionKeyType",
                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key)."
                },
                "region": {
                    "type": "string",
                    "description": "The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                },
                "resourceId": {
                    "type": "string",
                    "description": "An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity)."
                },
                "secretArn": {
                    "type": "string",
                    "description": " The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption."
                },
                "url": {
                    "type": "string",
                    "description": "The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption."
                }
            }
        },
        "aws-native:mediaconnect:FlowSourceEncryptionAlgorithm": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowSourceEncryptionKeyType": {
            "type": "string"
        },
        "aws-native:mediaconnect:FlowSourceProtocol": {
            "type": "string"
        },
        "aws-native:mediapackage:AssetEgressEndpoint": {
            "type": "object",
            "properties": {
                "packagingConfigurationId": {
                    "type": "string",
                    "description": "The ID of the PackagingConfiguration being applied to the Asset."
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the parent manifest for the repackaged Asset."
                }
            }
        },
        "aws-native:mediapackage:AssetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:mediapackage:ChannelHlsIngest": {
            "type": "object",
            "properties": {
                "ingestEndpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:ChannelIngestEndpoint"
                    },
                    "description": "A list of endpoints to which the source stream should be sent."
                }
            }
        },
        "aws-native:mediapackage:ChannelIngestEndpoint": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The system generated unique identifier for the IngestEndpoint"
                },
                "password": {
                    "type": "string",
                    "description": "The system generated password for ingest authentication."
                },
                "url": {
                    "type": "string",
                    "description": "The ingest URL to which the source stream should be sent."
                },
                "username": {
                    "type": "string",
                    "description": "The system generated username for ingest authentication."
                }
            }
        },
        "aws-native:mediapackage:ChannelLogConfiguration": {
            "type": "object",
            "properties": {
                "logGroupName": {
                    "type": "string",
                    "description": "Sets a custom AWS CloudWatch log group name for access logs. If a log group name isn't specified, the defaults are used: /aws/MediaPackage/EgressAccessLogs for egress access logs and /aws/MediaPackage/IngressAccessLogs for ingress access logs."
                }
            }
        },
        "aws-native:mediapackage:ChannelTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointAdsOnDeliveryRestrictions": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointAuthorization": {
            "type": "object",
            "properties": {
                "cdnIdentifierSecret": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint."
                },
                "secretsRoleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager."
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointCmafEncryption": {
            "type": "object",
            "properties": {
                "constantInitializationVector": {
                    "type": "string",
                    "description": "An optional 128-bit, 16-byte hex value represented by a 32-character string, used in conjunction with the key for encrypting blocks. If you don't specify a value, then MediaPackage creates the constant initialization vector (IV)."
                },
                "keyRotationIntervalSeconds": {
                    "type": "integer",
                    "description": "Time (in seconds) between each encryption key rotation."
                },
                "spekeKeyProvider": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointSpekeKeyProvider"
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointCmafPackage": {
            "type": "object",
            "properties": {
                "encryption": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointCmafEncryption"
                },
                "hlsManifests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsManifest"
                    },
                    "description": "A list of HLS manifest configurations"
                },
                "segmentDurationSeconds": {
                    "type": "integer",
                    "description": "Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration."
                },
                "segmentPrefix": {
                    "type": "string",
                    "description": "An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId."
                },
                "streamSelection": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointStreamSelection"
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointDashEncryption": {
            "type": "object",
            "properties": {
                "keyRotationIntervalSeconds": {
                    "type": "integer",
                    "description": "Time (in seconds) between each encryption key rotation."
                },
                "spekeKeyProvider": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointSpekeKeyProvider"
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointDashPackage": {
            "type": "object",
            "properties": {
                "adTriggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashPackageAdTriggersItem"
                    },
                    "description": "A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types."
                },
                "adsOnDeliveryRestrictions": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointAdsOnDeliveryRestrictions"
                },
                "encryption": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashEncryption"
                },
                "manifestLayout": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashPackageManifestLayout",
                    "description": "Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level."
                },
                "manifestWindowSeconds": {
                    "type": "integer",
                    "description": "Time window (in seconds) contained in each manifest."
                },
                "minBufferTimeSeconds": {
                    "type": "integer",
                    "description": "Minimum duration (in seconds) that a player will buffer media before starting the presentation."
                },
                "minUpdatePeriodSeconds": {
                    "type": "integer",
                    "description": "Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD)."
                },
                "periodTriggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashPackagePeriodTriggersItem"
                    },
                    "description": "A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains \"ADS\", new periods will be created where the Channel source contains SCTE-35 ad markers."
                },
                "profile": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashPackageProfile",
                    "description": "The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled."
                },
                "segmentDurationSeconds": {
                    "type": "integer",
                    "description": "Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration."
                },
                "segmentTemplateFormat": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashPackageSegmentTemplateFormat",
                    "description": "Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs."
                },
                "streamSelection": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointStreamSelection"
                },
                "suggestedPresentationDelaySeconds": {
                    "type": "integer",
                    "description": "Duration (in seconds) to delay live content before presentation."
                },
                "utcTiming": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointDashPackageUtcTiming",
                    "description": "Determines the type of UTCTiming included in the Media Presentation Description (MPD)"
                },
                "utcTimingUri": {
                    "type": "string",
                    "description": "Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD"
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointDashPackageAdTriggersItem": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointDashPackageManifestLayout": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointDashPackagePeriodTriggersItem": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointDashPackageProfile": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointDashPackageSegmentTemplateFormat": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointDashPackageUtcTiming": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointHlsEncryption": {
            "type": "object",
            "properties": {
                "constantInitializationVector": {
                    "type": "string",
                    "description": "A constant initialization vector for encryption (optional). When not specified the initialization vector will be periodically rotated."
                },
                "encryptionMethod": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsEncryptionEncryptionMethod",
                    "description": "The encryption method to use."
                },
                "keyRotationIntervalSeconds": {
                    "type": "integer",
                    "description": "Interval (in seconds) between each encryption key rotation."
                },
                "repeatExtXKey": {
                    "type": "boolean",
                    "description": "When enabled, the EXT-X-KEY tag will be repeated in output manifests."
                },
                "spekeKeyProvider": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointSpekeKeyProvider"
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointHlsEncryptionEncryptionMethod": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointHlsManifest": {
            "type": "object",
            "properties": {
                "adMarkers": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsManifestAdMarkers",
                    "description": "This setting controls how ad markers are included in the packaged OriginEndpoint. \"NONE\" will omit all SCTE-35 ad markers from the output. \"PASSTHROUGH\" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. \"SCTE35_ENHANCED\" generates ad markers and blackout tags based on SCTE-35 messages in the input source. \"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0."
                },
                "adTriggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsManifestAdTriggersItem"
                    },
                    "description": "A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types."
                },
                "adsOnDeliveryRestrictions": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointAdsOnDeliveryRestrictions"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created."
                },
                "includeIframeOnlyStream": {
                    "type": "boolean",
                    "description": "When enabled, an I-Frame only stream will be included in the output."
                },
                "manifestName": {
                    "type": "string",
                    "description": "An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint."
                },
                "playlistType": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsManifestPlaylistType",
                    "description": "The HTTP Live Streaming (HLS) playlist type. When either \"EVENT\" or \"VOD\" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist."
                },
                "playlistWindowSeconds": {
                    "type": "integer",
                    "description": "Time window (in seconds) contained in each parent manifest."
                },
                "programDateTimeIntervalSeconds": {
                    "type": "integer",
                    "description": "The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output."
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the packaged OriginEndpoint for consumption."
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointHlsManifestAdMarkers": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointHlsManifestAdTriggersItem": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointHlsManifestPlaylistType": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointHlsPackage": {
            "type": "object",
            "properties": {
                "adMarkers": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsPackageAdMarkers",
                    "description": "This setting controls how ad markers are included in the packaged OriginEndpoint. \"NONE\" will omit all SCTE-35 ad markers from the output. \"PASSTHROUGH\" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. \"SCTE35_ENHANCED\" generates ad markers and blackout tags based on SCTE-35 messages in the input source. \"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0."
                },
                "adTriggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsPackageAdTriggersItem"
                    },
                    "description": "A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types."
                },
                "adsOnDeliveryRestrictions": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointAdsOnDeliveryRestrictions"
                },
                "encryption": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsEncryption"
                },
                "includeIframeOnlyStream": {
                    "type": "boolean",
                    "description": "When enabled, an I-Frame only stream will be included in the output."
                },
                "playlistType": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointHlsPackagePlaylistType",
                    "description": "The HTTP Live Streaming (HLS) playlist type. When either \"EVENT\" or \"VOD\" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist."
                },
                "playlistWindowSeconds": {
                    "type": "integer",
                    "description": "Time window (in seconds) contained in each parent manifest."
                },
                "programDateTimeIntervalSeconds": {
                    "type": "integer",
                    "description": "The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output."
                },
                "segmentDurationSeconds": {
                    "type": "integer",
                    "description": "Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration."
                },
                "streamSelection": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointStreamSelection"
                },
                "useAudioRenditionGroup": {
                    "type": "boolean",
                    "description": "When enabled, audio streams will be placed in rendition groups in the output."
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointHlsPackageAdMarkers": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointHlsPackageAdTriggersItem": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointHlsPackagePlaylistType": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointMssEncryption": {
            "type": "object",
            "properties": {
                "spekeKeyProvider": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointSpekeKeyProvider"
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointMssPackage": {
            "type": "object",
            "properties": {
                "encryption": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointMssEncryption"
                },
                "manifestWindowSeconds": {
                    "type": "integer",
                    "description": "The time window (in seconds) contained in each manifest."
                },
                "segmentDurationSeconds": {
                    "type": "integer",
                    "description": "The duration (in seconds) of each segment."
                },
                "streamSelection": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointStreamSelection"
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointOrigination": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointSpekeKeyProvider": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "type": "string",
                    "description": "An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service."
                },
                "resourceId": {
                    "type": "string",
                    "description": "The resource ID to include in key requests."
                },
                "roleArn": {
                    "type": "string",
                    "description": "An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service."
                },
                "systemIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The system IDs to include in key requests."
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the external key provider service."
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointStreamSelection": {
            "type": "object",
            "properties": {
                "maxVideoBitsPerSecond": {
                    "type": "integer",
                    "description": "The maximum video bitrate (bps) to include in output."
                },
                "minVideoBitsPerSecond": {
                    "type": "integer",
                    "description": "The minimum video bitrate (bps) to include in output."
                },
                "streamOrder": {
                    "$ref": "#/types/aws-native:mediapackage:OriginEndpointStreamSelectionStreamOrder",
                    "description": "A directive that determines the order of streams in the output."
                }
            }
        },
        "aws-native:mediapackage:OriginEndpointStreamSelectionStreamOrder": {
            "type": "string"
        },
        "aws-native:mediapackage:OriginEndpointTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationCmafEncryption": {
            "type": "object",
            "properties": {
                "spekeKeyProvider": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationSpekeKeyProvider"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationCmafPackage": {
            "type": "object",
            "properties": {
                "encryption": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationCmafEncryption"
                },
                "hlsManifests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationHlsManifest"
                    },
                    "description": "A list of HLS manifest configurations."
                },
                "includeEncoderConfigurationInSegments": {
                    "type": "boolean",
                    "description": "When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback."
                },
                "segmentDurationSeconds": {
                    "type": "integer"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationDashEncryption": {
            "type": "object",
            "properties": {
                "spekeKeyProvider": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationSpekeKeyProvider"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationDashManifest": {
            "type": "object",
            "properties": {
                "manifestLayout": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationDashManifestManifestLayout",
                    "description": "Determines the position of some tags in the Media Presentation Description (MPD). When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation. When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level."
                },
                "manifestName": {
                    "type": "string"
                },
                "minBufferTimeSeconds": {
                    "type": "integer",
                    "description": "Minimum duration (in seconds) that a player will buffer media before starting the presentation."
                },
                "profile": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationDashManifestProfile",
                    "description": "The Dynamic Adaptive Streaming over HTTP (DASH) profile type. When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled."
                },
                "streamSelection": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationStreamSelection"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationDashManifestManifestLayout": {
            "type": "string"
        },
        "aws-native:mediapackage:PackagingConfigurationDashManifestProfile": {
            "type": "string"
        },
        "aws-native:mediapackage:PackagingConfigurationDashPackage": {
            "type": "object",
            "properties": {
                "dashManifests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationDashManifest"
                    },
                    "description": "A list of DASH manifest configurations."
                },
                "encryption": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationDashEncryption"
                },
                "includeEncoderConfigurationInSegments": {
                    "type": "boolean",
                    "description": "When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback."
                },
                "periodTriggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains \"ADS\", new periods will be created where the Asset contains SCTE-35 ad markers."
                },
                "segmentDurationSeconds": {
                    "type": "integer"
                },
                "segmentTemplateFormat": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationDashPackageSegmentTemplateFormat",
                    "description": "Determines the type of SegmentTemplate included in the Media Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs. When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs."
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationDashPackageSegmentTemplateFormat": {
            "type": "string"
        },
        "aws-native:mediapackage:PackagingConfigurationHlsEncryption": {
            "type": "object",
            "properties": {
                "constantInitializationVector": {
                    "type": "string",
                    "description": "An HTTP Live Streaming (HLS) encryption configuration."
                },
                "encryptionMethod": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationHlsEncryptionEncryptionMethod",
                    "description": "The encryption method to use."
                },
                "spekeKeyProvider": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationSpekeKeyProvider"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationHlsEncryptionEncryptionMethod": {
            "type": "string"
        },
        "aws-native:mediapackage:PackagingConfigurationHlsManifest": {
            "type": "object",
            "properties": {
                "adMarkers": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationHlsManifestAdMarkers",
                    "description": "This setting controls how ad markers are included in the packaged OriginEndpoint. \"NONE\" will omit all SCTE-35 ad markers from the output. \"PASSTHROUGH\" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. \"SCTE35_ENHANCED\" generates ad markers and blackout tags based on SCTE-35 messages in the input source."
                },
                "includeIframeOnlyStream": {
                    "type": "boolean",
                    "description": "When enabled, an I-Frame only stream will be included in the output."
                },
                "manifestName": {
                    "type": "string"
                },
                "programDateTimeIntervalSeconds": {
                    "type": "integer",
                    "description": "The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output."
                },
                "repeatExtXKey": {
                    "type": "boolean",
                    "description": "When enabled, the EXT-X-KEY tag will be repeated in output manifests."
                },
                "streamSelection": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationStreamSelection"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationHlsManifestAdMarkers": {
            "type": "string"
        },
        "aws-native:mediapackage:PackagingConfigurationHlsPackage": {
            "type": "object",
            "properties": {
                "encryption": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationHlsEncryption"
                },
                "hlsManifests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationHlsManifest"
                    },
                    "description": "A list of HLS manifest configurations."
                },
                "segmentDurationSeconds": {
                    "type": "integer"
                },
                "useAudioRenditionGroup": {
                    "type": "boolean",
                    "description": "When enabled, audio streams will be placed in rendition groups in the output."
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationMssEncryption": {
            "type": "object",
            "properties": {
                "spekeKeyProvider": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationSpekeKeyProvider"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationMssManifest": {
            "type": "object",
            "properties": {
                "manifestName": {
                    "type": "string"
                },
                "streamSelection": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationStreamSelection"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationMssPackage": {
            "type": "object",
            "properties": {
                "encryption": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationMssEncryption"
                },
                "mssManifests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationMssManifest"
                    },
                    "description": "A list of MSS manifest configurations."
                },
                "segmentDurationSeconds": {
                    "type": "integer"
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationSpekeKeyProvider": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "type": "string"
                },
                "systemIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The system IDs to include in key requests."
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the external key provider service."
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationStreamSelection": {
            "type": "object",
            "properties": {
                "maxVideoBitsPerSecond": {
                    "type": "integer",
                    "description": "The maximum video bitrate (bps) to include in output."
                },
                "minVideoBitsPerSecond": {
                    "type": "integer",
                    "description": "The minimum video bitrate (bps) to include in output."
                },
                "streamOrder": {
                    "$ref": "#/types/aws-native:mediapackage:PackagingConfigurationStreamSelectionStreamOrder",
                    "description": "A directive that determines the order of streams in the output."
                }
            }
        },
        "aws-native:mediapackage:PackagingConfigurationStreamSelectionStreamOrder": {
            "type": "string"
        },
        "aws-native:mediapackage:PackagingConfigurationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:mediapackage:PackagingGroupAuthorization": {
            "type": "object",
            "properties": {
                "cdnIdentifierSecret": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization."
                },
                "secretsRoleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager."
                }
            }
        },
        "aws-native:mediapackage:PackagingGroupLogConfiguration": {
            "type": "object",
            "properties": {
                "logGroupName": {
                    "type": "string",
                    "description": "Sets a custom AWS CloudWatch log group name for egress logs. If a log group name isn't specified, the default name is used: /aws/MediaPackage/VodEgressAccessLogs."
                }
            }
        },
        "aws-native:mediapackage:PackagingGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:mwaa:EnvironmentLoggingConfiguration": {
            "type": "object",
            "properties": {
                "dagProcessingLogs": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentModuleLoggingConfiguration"
                },
                "schedulerLogs": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentModuleLoggingConfiguration"
                },
                "taskLogs": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentModuleLoggingConfiguration"
                },
                "webserverLogs": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentModuleLoggingConfiguration"
                },
                "workerLogs": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentModuleLoggingConfiguration"
                }
            }
        },
        "aws-native:mwaa:EnvironmentLoggingLevel": {
            "type": "string"
        },
        "aws-native:mwaa:EnvironmentModuleLoggingConfiguration": {
            "type": "object",
            "properties": {
                "cloudWatchLogGroupArn": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "logLevel": {
                    "$ref": "#/types/aws-native:mwaa:EnvironmentLoggingLevel"
                }
            }
        },
        "aws-native:mwaa:EnvironmentNetworkConfiguration": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of security groups to use for the environment."
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of subnets to use for the environment. These must be private subnets, in the same VPC, in two different availability zones."
                }
            }
        },
        "aws-native:mwaa:EnvironmentTagMap": {
            "type": "object"
        },
        "aws-native:mwaa:EnvironmentWebserverAccessMode": {
            "type": "string"
        },
        "aws-native:networkfirewall:FirewallPolicyActionDefinition": {
            "type": "object",
            "properties": {
                "publishMetricAction": {
                    "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyPublishMetricAction"
                }
            }
        },
        "aws-native:networkfirewall:FirewallPolicyCustomAction": {
            "type": "object",
            "properties": {
                "actionDefinition": {
                    "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyActionDefinition"
                },
                "actionName": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:FirewallPolicyDimension": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:FirewallPolicyFirewallPolicy": {
            "type": "object",
            "properties": {
                "statefulRuleGroupReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyStatefulRuleGroupReference"
                    }
                },
                "statelessCustomActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyCustomAction"
                    }
                },
                "statelessDefaultActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "statelessFragmentDefaultActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "statelessRuleGroupReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyStatelessRuleGroupReference"
                    }
                }
            }
        },
        "aws-native:networkfirewall:FirewallPolicyPublishMetricAction": {
            "type": "object",
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:FirewallPolicyDimension"
                    }
                }
            }
        },
        "aws-native:networkfirewall:FirewallPolicyStatefulRuleGroupReference": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:FirewallPolicyStatelessRuleGroupReference": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "resourceArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:FirewallPolicyTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:FirewallSubnetMapping": {
            "type": "object",
            "properties": {
                "subnetId": {
                    "type": "string",
                    "description": "A SubnetId."
                }
            }
        },
        "aws-native:networkfirewall:FirewallTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:LoggingConfigurationLogDestinationConfig": {
            "type": "object",
            "properties": {
                "logDestination": {
                    "$ref": "pulumi.json#/Any",
                    "description": "A key-value pair to configure the logDestinations."
                },
                "logDestinationType": {
                    "$ref": "#/types/aws-native:networkfirewall:LoggingConfigurationLogDestinationConfigLogDestinationType"
                },
                "logType": {
                    "$ref": "#/types/aws-native:networkfirewall:LoggingConfigurationLogDestinationConfigLogType"
                }
            }
        },
        "aws-native:networkfirewall:LoggingConfigurationLogDestinationConfigLogDestinationType": {
            "type": "string"
        },
        "aws-native:networkfirewall:LoggingConfigurationLogDestinationConfigLogType": {
            "type": "string"
        },
        "aws-native:networkfirewall:LoggingConfigurationLoggingConfiguration": {
            "type": "object",
            "properties": {
                "logDestinationConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:LoggingConfigurationLogDestinationConfig"
                    }
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupActionDefinition": {
            "type": "object",
            "properties": {
                "publishMetricAction": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupPublishMetricAction"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupAddress": {
            "type": "object",
            "properties": {
                "addressDefinition": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupCustomAction": {
            "type": "object",
            "properties": {
                "actionDefinition": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupActionDefinition"
                },
                "actionName": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupDimension": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupGeneratedRulesType": {
            "type": "string"
        },
        "aws-native:networkfirewall:RuleGroupHeader": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string"
                },
                "destinationPort": {
                    "type": "string"
                },
                "direction": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupHeaderDirection"
                },
                "protocol": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupHeaderProtocol"
                },
                "source": {
                    "type": "string"
                },
                "sourcePort": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupHeaderDirection": {
            "type": "string"
        },
        "aws-native:networkfirewall:RuleGroupHeaderProtocol": {
            "type": "string"
        },
        "aws-native:networkfirewall:RuleGroupMatchAttributes": {
            "type": "object",
            "properties": {
                "destinationPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupPortRange"
                    }
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupAddress"
                    }
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sourcePorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupPortRange"
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupAddress"
                    }
                },
                "tCPFlags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupTCPFlagField"
                    }
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupPortRange": {
            "type": "object",
            "properties": {
                "fromPort": {
                    "type": "integer"
                },
                "toPort": {
                    "type": "integer"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupPublishMetricAction": {
            "type": "object",
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupDimension"
                    }
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupRuleDefinition": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchAttributes": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupMatchAttributes"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupRuleGroup": {
            "type": "object",
            "properties": {
                "ruleVariables": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupRuleVariables"
                },
                "rulesSource": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupRulesSource"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupRuleOption": {
            "type": "object",
            "properties": {
                "keyword": {
                    "type": "string"
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupRuleVariables": {
            "type": "object",
            "properties": {
                "iPSets": {
                    "$ref": "pulumi.json#/Any"
                },
                "portSets": {
                    "$ref": "pulumi.json#/Any"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupRulesSource": {
            "type": "object",
            "properties": {
                "rulesSourceList": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupRulesSourceList"
                },
                "rulesString": {
                    "type": "string"
                },
                "statefulRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupStatefulRule"
                    }
                },
                "statelessRulesAndCustomActions": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupStatelessRulesAndCustomActions"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupRulesSourceList": {
            "type": "object",
            "properties": {
                "generatedRulesType": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupGeneratedRulesType"
                },
                "targetTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupTargetType"
                    }
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupStatefulRule": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupStatefulRuleAction"
                },
                "header": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupHeader"
                },
                "ruleOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupRuleOption"
                    }
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupStatefulRuleAction": {
            "type": "string"
        },
        "aws-native:networkfirewall:RuleGroupStatelessRule": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "ruleDefinition": {
                    "$ref": "#/types/aws-native:networkfirewall:RuleGroupRuleDefinition"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupStatelessRulesAndCustomActions": {
            "type": "object",
            "properties": {
                "customActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupCustomAction"
                    }
                },
                "statelessRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupStatelessRule"
                    }
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupTCPFlag": {
            "type": "string"
        },
        "aws-native:networkfirewall:RuleGroupTCPFlagField": {
            "type": "object",
            "properties": {
                "flags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupTCPFlag"
                    }
                },
                "masks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:networkfirewall:RuleGroupTCPFlag"
                    }
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkfirewall:RuleGroupTargetType": {
            "type": "string"
        },
        "aws-native:networkfirewall:RuleGroupType": {
            "type": "string"
        },
        "aws-native:networkmanager:DeviceLocation": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The physical address."
                },
                "latitude": {
                    "type": "string",
                    "description": "The latitude."
                },
                "longitude": {
                    "type": "string",
                    "description": "The longitude."
                }
            }
        },
        "aws-native:networkmanager:DeviceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkmanager:GlobalNetworkTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkmanager:LinkBandwidth": {
            "type": "object",
            "properties": {
                "downloadSpeed": {
                    "type": "integer",
                    "description": "Download speed in Mbps."
                },
                "uploadSpeed": {
                    "type": "integer",
                    "description": "Upload speed in Mbps."
                }
            }
        },
        "aws-native:networkmanager:LinkTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:networkmanager:SiteLocation": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The physical address."
                },
                "latitude": {
                    "type": "string",
                    "description": "The latitude."
                },
                "longitude": {
                    "type": "string",
                    "description": "The longitude."
                }
            }
        },
        "aws-native:networkmanager:SiteTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:nimblestudio:LaunchProfileStreamConfiguration": {
            "type": "object",
            "properties": {
                "clipboardMode": {
                    "type": "string"
                },
                "ec2InstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxSessionLengthInMinutes": {
                    "type": "number"
                },
                "streamingImageIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:nimblestudio:StreamingImageStreamingImageEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "keyArn": {
                    "type": "string"
                },
                "keyType": {
                    "type": "string"
                }
            }
        },
        "aws-native:nimblestudio:StudioComponentActiveDirectoryComputerAttribute": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:nimblestudio:StudioComponentActiveDirectoryConfiguration": {
            "type": "object",
            "properties": {
                "computerAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:nimblestudio:StudioComponentActiveDirectoryComputerAttribute"
                    }
                },
                "directoryId": {
                    "type": "string"
                },
                "organizationalUnitDistinguishedName": {
                    "type": "string"
                }
            }
        },
        "aws-native:nimblestudio:StudioComponentComputeFarmConfiguration": {
            "type": "object",
            "properties": {
                "activeDirectoryUser": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "aws-native:nimblestudio:StudioComponentLicenseServiceConfiguration": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "aws-native:nimblestudio:StudioComponentScriptParameterKeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:nimblestudio:StudioComponentSharedFileSystemConfiguration": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "fileSystemId": {
                    "type": "string"
                },
                "linuxMountPoint": {
                    "type": "string"
                },
                "shareName": {
                    "type": "string"
                },
                "windowsMountDrive": {
                    "type": "string"
                }
            }
        },
        "aws-native:nimblestudio:StudioComponentStudioComponentConfiguration": {
            "type": "object",
            "properties": {
                "activeDirectoryConfiguration": {
                    "$ref": "#/types/aws-native:nimblestudio:StudioComponentActiveDirectoryConfiguration"
                },
                "computeFarmConfiguration": {
                    "$ref": "#/types/aws-native:nimblestudio:StudioComponentComputeFarmConfiguration"
                },
                "licenseServiceConfiguration": {
                    "$ref": "#/types/aws-native:nimblestudio:StudioComponentLicenseServiceConfiguration"
                },
                "sharedFileSystemConfiguration": {
                    "$ref": "#/types/aws-native:nimblestudio:StudioComponentSharedFileSystemConfiguration"
                }
            }
        },
        "aws-native:nimblestudio:StudioComponentStudioComponentInitializationScript": {
            "type": "object",
            "properties": {
                "launchProfileProtocolVersion": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "runContext": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                }
            }
        },
        "aws-native:nimblestudio:StudioStudioEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "keyArn": {
                    "type": "string"
                },
                "keyType": {
                    "type": "string"
                }
            }
        },
        "aws-native:opensearchservice:DomainAdvancedSecurityOptionsInput": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "internalUserDatabaseEnabled": {
                    "type": "boolean"
                },
                "masterUserOptions": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainMasterUserOptions"
                }
            }
        },
        "aws-native:opensearchservice:DomainClusterConfig": {
            "type": "object",
            "properties": {
                "dedicatedMasterCount": {
                    "type": "integer"
                },
                "dedicatedMasterEnabled": {
                    "type": "boolean"
                },
                "dedicatedMasterType": {
                    "type": "string"
                },
                "instanceCount": {
                    "type": "integer"
                },
                "instanceType": {
                    "type": "string"
                },
                "warmCount": {
                    "type": "integer"
                },
                "warmEnabled": {
                    "type": "boolean"
                },
                "warmType": {
                    "type": "string"
                },
                "zoneAwarenessConfig": {
                    "$ref": "#/types/aws-native:opensearchservice:DomainZoneAwarenessConfig"
                },
                "zoneAwarenessEnabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:opensearchservice:DomainCognitoOptions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "identityPoolId": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "userPoolId": {
                    "type": "string"
                }
            }
        },
        "aws-native:opensearchservice:DomainDomainEndpointOptions": {
            "type": "object",
            "properties": {
                "customEndpoint": {
                    "type": "string"
                },
                "customEndpointCertificateArn": {
                    "type": "string"
                },
                "customEndpointEnabled": {
                    "type": "boolean"
                },
                "enforceHTTPS": {
                    "type": "boolean"
                },
                "tLSSecurityPolicy": {
                    "type": "string"
                }
            }
        },
        "aws-native:opensearchservice:DomainEBSOptions": {
            "type": "object",
            "properties": {
                "eBSEnabled": {
                    "type": "boolean"
                },
                "iops": {
                    "type": "integer"
                },
                "volumeSize": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string"
                }
            }
        },
        "aws-native:opensearchservice:DomainEncryptionAtRestOptions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "kmsKeyId": {
                    "type": "string"
                }
            }
        },
        "aws-native:opensearchservice:DomainMasterUserOptions": {
            "type": "object",
            "properties": {
                "masterUserARN": {
                    "type": "string"
                },
                "masterUserName": {
                    "type": "string"
                },
                "masterUserPassword": {
                    "type": "string"
                }
            }
        },
        "aws-native:opensearchservice:DomainNodeToNodeEncryptionOptions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:opensearchservice:DomainServiceSoftwareOptions": {
            "type": "object",
            "properties": {
                "automatedUpdateDate": {
                    "type": "string"
                },
                "cancellable": {
                    "type": "boolean"
                },
                "currentVersion": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "newVersion": {
                    "type": "string"
                },
                "optionalDeployment": {
                    "type": "boolean"
                },
                "updateAvailable": {
                    "type": "boolean"
                },
                "updateStatus": {
                    "type": "string"
                }
            }
        },
        "aws-native:opensearchservice:DomainSnapshotOptions": {
            "type": "object",
            "properties": {
                "automatedSnapshotStartHour": {
                    "type": "integer"
                }
            }
        },
        "aws-native:opensearchservice:DomainTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:opensearchservice:DomainVPCOptions": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:opensearchservice:DomainZoneAwarenessConfig": {
            "type": "object",
            "properties": {
                "availabilityZoneCount": {
                    "type": "integer"
                }
            }
        },
        "aws-native:opsworkscm:ServerEngineAttribute": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:opsworkscm:ServerTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:qldb:StreamKinesisConfiguration": {
            "type": "object",
            "properties": {
                "aggregationEnabled": {
                    "type": "boolean"
                },
                "streamArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:qldb:StreamTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:quicksight:AnalysisAnalysisError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "\u003cp\u003eThe message associated with the analysis error.\u003c/p\u003e"
                },
                "type": {
                    "$ref": "#/types/aws-native:quicksight:AnalysisAnalysisErrorType"
                }
            }
        },
        "aws-native:quicksight:AnalysisAnalysisErrorType": {
            "type": "string"
        },
        "aws-native:quicksight:AnalysisAnalysisSourceEntity": {
            "type": "object",
            "properties": {
                "sourceTemplate": {
                    "$ref": "#/types/aws-native:quicksight:AnalysisAnalysisSourceTemplate"
                }
            }
        },
        "aws-native:quicksight:AnalysisAnalysisSourceTemplate": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the source template of an analysis.\u003c/p\u003e"
                },
                "dataSetReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisDataSetReference"
                    },
                    "description": "\u003cp\u003eThe dataset references of the source template of an analysis.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:AnalysisDataSetReference": {
            "type": "object",
            "properties": {
                "dataSetArn": {
                    "type": "string",
                    "description": "\u003cp\u003eDataset Amazon Resource Name (ARN).\u003c/p\u003e"
                },
                "dataSetPlaceholder": {
                    "type": "string",
                    "description": "\u003cp\u003eDataset placeholder.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:AnalysisDateTimeParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the date-time parameter.\u003c/p\u003e"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe values for the date-time parameter.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:AnalysisDecimalParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the decimal parameter.\u003c/p\u003e"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "\u003cp\u003eThe values for the decimal parameter.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:AnalysisIntegerParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe name of the integer parameter.\u003c/p\u003e"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "\u003cp\u003eThe values for the integer parameter.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:AnalysisParameters": {
            "type": "object",
            "properties": {
                "dateTimeParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisDateTimeParameter"
                    },
                    "description": "\u003cp\u003eDate-time parameters.\u003c/p\u003e"
                },
                "decimalParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisDecimalParameter"
                    },
                    "description": "\u003cp\u003eDecimal parameters.\u003c/p\u003e"
                },
                "integerParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisIntegerParameter"
                    },
                    "description": "\u003cp\u003eInteger parameters.\u003c/p\u003e"
                },
                "stringParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:AnalysisStringParameter"
                    },
                    "description": "\u003cp\u003eString parameters.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:AnalysisResourcePermission": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe IAM action to grant or revoke permissions on.\u003c/p\u003e"
                },
                "principal": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:\u003c/p\u003e\n        \u003cul\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) \u003c/p\u003e\n            \u003c/li\u003e\n         \u003c/ul\u003e"
                }
            }
        },
        "aws-native:quicksight:AnalysisResourceStatus": {
            "type": "string"
        },
        "aws-native:quicksight:AnalysisSheet": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe name of a sheet. This name is displayed on the sheet's tab in the QuickSight\n            console.\u003c/p\u003e"
                },
                "sheetId": {
                    "type": "string",
                    "description": "\u003cp\u003eThe unique identifier associated with a sheet.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:AnalysisStringParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for a string parameter.\u003c/p\u003e"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe values of a string parameter.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:AnalysisTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "\u003cp\u003eTag key.\u003c/p\u003e"
                },
                "value": {
                    "type": "string",
                    "description": "\u003cp\u003eTag value.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardAdHocFilteringOption": {
            "type": "object",
            "properties": {
                "availabilityStatus": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardBehavior"
                }
            }
        },
        "aws-native:quicksight:DashboardDashboardBehavior": {
            "type": "string"
        },
        "aws-native:quicksight:DashboardDashboardError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "\u003cp\u003eMessage.\u003c/p\u003e"
                },
                "type": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardErrorType"
                }
            }
        },
        "aws-native:quicksight:DashboardDashboardErrorType": {
            "type": "string"
        },
        "aws-native:quicksight:DashboardDashboardPublishOptions": {
            "type": "object",
            "properties": {
                "adHocFilteringOption": {
                    "$ref": "#/types/aws-native:quicksight:DashboardAdHocFilteringOption"
                },
                "exportToCSVOption": {
                    "$ref": "#/types/aws-native:quicksight:DashboardExportToCSVOption"
                },
                "sheetControlsOption": {
                    "$ref": "#/types/aws-native:quicksight:DashboardSheetControlsOption"
                }
            }
        },
        "aws-native:quicksight:DashboardDashboardSourceEntity": {
            "type": "object",
            "properties": {
                "sourceTemplate": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardSourceTemplate"
                }
            }
        },
        "aws-native:quicksight:DashboardDashboardSourceTemplate": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the resource.\u003c/p\u003e"
                },
                "dataSetReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardDataSetReference"
                    },
                    "description": "\u003cp\u003eDataset references.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardDashboardUIState": {
            "type": "string"
        },
        "aws-native:quicksight:DashboardDashboardVersion": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the resource.\u003c/p\u003e"
                },
                "createdTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe time that this dashboard version was created.\u003c/p\u003e"
                },
                "dataSetArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe Amazon Resource Numbers (ARNs) for the datasets that are associated with this\n            version of the dashboard.\u003c/p\u003e"
                },
                "description": {
                    "type": "string",
                    "description": "\u003cp\u003eDescription.\u003c/p\u003e"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardDashboardError"
                    },
                    "description": "\u003cp\u003eErrors associated with this dashboard version.\u003c/p\u003e"
                },
                "sheets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardSheet"
                    },
                    "description": "\u003cp\u003eA list of the associated sheets with the unique identifier and name of each sheet.\u003c/p\u003e"
                },
                "sourceEntityArn": {
                    "type": "string",
                    "description": "\u003cp\u003eSource entity ARN.\u003c/p\u003e"
                },
                "status": {
                    "$ref": "#/types/aws-native:quicksight:DashboardResourceStatus"
                },
                "themeArn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe ARN of the theme associated with a version of the dashboard.\u003c/p\u003e"
                },
                "versionNumber": {
                    "type": "number",
                    "description": "\u003cp\u003eVersion number for this version of the dashboard.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardDataSetReference": {
            "type": "object",
            "properties": {
                "dataSetArn": {
                    "type": "string",
                    "description": "\u003cp\u003eDataset Amazon Resource Name (ARN).\u003c/p\u003e"
                },
                "dataSetPlaceholder": {
                    "type": "string",
                    "description": "\u003cp\u003eDataset placeholder.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardDateTimeParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the date-time parameter.\u003c/p\u003e"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe values for the date-time parameter.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardDecimalParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the decimal parameter.\u003c/p\u003e"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "\u003cp\u003eThe values for the decimal parameter.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardExportToCSVOption": {
            "type": "object",
            "properties": {
                "availabilityStatus": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardBehavior"
                }
            }
        },
        "aws-native:quicksight:DashboardIntegerParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe name of the integer parameter.\u003c/p\u003e"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "\u003cp\u003eThe values for the integer parameter.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardParameters": {
            "type": "object",
            "properties": {
                "dateTimeParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardDateTimeParameter"
                    },
                    "description": "\u003cp\u003eDate-time parameters.\u003c/p\u003e"
                },
                "decimalParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardDecimalParameter"
                    },
                    "description": "\u003cp\u003eDecimal parameters.\u003c/p\u003e"
                },
                "integerParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardIntegerParameter"
                    },
                    "description": "\u003cp\u003eInteger parameters.\u003c/p\u003e"
                },
                "stringParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DashboardStringParameter"
                    },
                    "description": "\u003cp\u003eString parameters.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardResourcePermission": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe IAM action to grant or revoke permissions on.\u003c/p\u003e"
                },
                "principal": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:\u003c/p\u003e\n        \u003cul\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) \u003c/p\u003e\n            \u003c/li\u003e\n         \u003c/ul\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardResourceStatus": {
            "type": "string"
        },
        "aws-native:quicksight:DashboardSheet": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe name of a sheet. This name is displayed on the sheet's tab in the QuickSight\n            console.\u003c/p\u003e"
                },
                "sheetId": {
                    "type": "string",
                    "description": "\u003cp\u003eThe unique identifier associated with a sheet.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardSheetControlsOption": {
            "type": "object",
            "properties": {
                "visibilityState": {
                    "$ref": "#/types/aws-native:quicksight:DashboardDashboardUIState"
                }
            }
        },
        "aws-native:quicksight:DashboardStringParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for a string parameter.\u003c/p\u003e"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe values of a string parameter.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DashboardTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "\u003cp\u003eTag key.\u003c/p\u003e"
                },
                "value": {
                    "type": "string",
                    "description": "\u003cp\u003eTag value.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSetColumnDataType": {
            "type": "string"
        },
        "aws-native:quicksight:DataSetColumnGroup": {
            "type": "object",
            "properties": {
                "geoSpatialColumnGroup": {
                    "$ref": "#/types/aws-native:quicksight:DataSetGeoSpatialColumnGroup"
                }
            }
        },
        "aws-native:quicksight:DataSetColumnLevelPermissionRule": {
            "type": "object",
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:quicksight:DataSetDataSetImportMode": {
            "type": "string"
        },
        "aws-native:quicksight:DataSetFieldFolderMap": {
            "type": "object"
        },
        "aws-native:quicksight:DataSetGeoSpatialColumnGroup": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eColumns in this hierarchy.\u003c/p\u003e"
                },
                "countryCode": {
                    "$ref": "#/types/aws-native:quicksight:DataSetGeoSpatialCountryCode"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the hierarchy.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSetGeoSpatialCountryCode": {
            "type": "string"
        },
        "aws-native:quicksight:DataSetIngestionWaitPolicy": {
            "type": "object",
            "properties": {
                "ingestionWaitTimeInHours": {
                    "type": "number",
                    "description": "\u003cp\u003eThe maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.\n Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.\u003c/p\u003e"
                },
                "waitForSpiceIngestion": {
                    "type": "boolean",
                    "description": "\u003cp\u003eWait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).\n  Applicable only when DataSetImportMode mode is set to SPICE.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSetLogicalTableMap": {
            "type": "object"
        },
        "aws-native:quicksight:DataSetOutputColumn": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "\u003cp\u003eA description for a column.\u003c/p\u003e"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eA display name for the dataset.\u003c/p\u003e"
                },
                "type": {
                    "$ref": "#/types/aws-native:quicksight:DataSetColumnDataType"
                }
            }
        },
        "aws-native:quicksight:DataSetPhysicalTableMap": {
            "type": "object"
        },
        "aws-native:quicksight:DataSetResourcePermission": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe IAM action to grant or revoke permissions on.\u003c/p\u003e"
                },
                "principal": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:\u003c/p\u003e\n        \u003cul\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) \u003c/p\u003e\n            \u003c/li\u003e\n         \u003c/ul\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSetRowLevelPermissionDataSet": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the permission dataset.\u003c/p\u003e"
                },
                "formatVersion": {
                    "$ref": "#/types/aws-native:quicksight:DataSetRowLevelPermissionFormatVersion"
                },
                "namespace": {
                    "type": "string",
                    "description": "\u003cp\u003eThe namespace associated with the row-level permissions dataset.\u003c/p\u003e"
                },
                "permissionPolicy": {
                    "$ref": "#/types/aws-native:quicksight:DataSetRowLevelPermissionPolicy"
                }
            }
        },
        "aws-native:quicksight:DataSetRowLevelPermissionFormatVersion": {
            "type": "string"
        },
        "aws-native:quicksight:DataSetRowLevelPermissionPolicy": {
            "type": "string"
        },
        "aws-native:quicksight:DataSetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "\u003cp\u003eTag key.\u003c/p\u003e"
                },
                "value": {
                    "type": "string",
                    "description": "\u003cp\u003eTag value.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceAmazonElasticsearchParameters": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Elasticsearch Service domain.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceAthenaParameters": {
            "type": "object",
            "properties": {
                "workGroup": {
                    "type": "string",
                    "description": "\u003cp\u003eThe workgroup that Amazon Athena uses.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceAuroraParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceAuroraPostgreSqlParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceCredentialPair": {
            "type": "object",
            "properties": {
                "alternateDataSourceParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceParameters"
                    },
                    "description": "\u003cp\u003eA set of alternate data source parameters that you want to share for these\n            credentials. The credentials are applied in tandem with the data source parameters when\n            you copy a data source by using a create or update request. The API operation compares\n            the \u003ccode\u003eDataSourceParameters\u003c/code\u003e structure that's in the request with the\n            structures in the \u003ccode\u003eAlternateDataSourceParameters\u003c/code\u003e allow list. If the\n            structures are an exact match, the request is allowed to use the new data source with\n            the existing credentials. If the \u003ccode\u003eAlternateDataSourceParameters\u003c/code\u003e list is\n            null, the \u003ccode\u003eDataSourceParameters\u003c/code\u003e originally used with these\n                \u003ccode\u003eCredentials\u003c/code\u003e is automatically allowed.\u003c/p\u003e"
                },
                "password": {
                    "type": "string",
                    "description": "\u003cp\u003ePassword.\u003c/p\u003e"
                },
                "username": {
                    "type": "string",
                    "description": "\u003cp\u003eUser name.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceDataSourceCredentials": {
            "type": "object",
            "properties": {
                "copySourceArn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of a data source that has the credential pair that you\n            want to use. When \u003ccode\u003eCopySourceArn\u003c/code\u003e is not null, the credential pair from the\n            data source in the ARN is used as the credentials for the\n            \u003ccode\u003eDataSourceCredentials\u003c/code\u003e structure.\u003c/p\u003e"
                },
                "credentialPair": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceCredentialPair"
                }
            }
        },
        "aws-native:quicksight:DataSourceDataSourceErrorInfo": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "\u003cp\u003eError message.\u003c/p\u003e"
                },
                "type": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceDataSourceErrorInfoType"
                }
            }
        },
        "aws-native:quicksight:DataSourceDataSourceErrorInfoType": {
            "type": "string"
        },
        "aws-native:quicksight:DataSourceDataSourceParameters": {
            "type": "object",
            "properties": {
                "amazonElasticsearchParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceAmazonElasticsearchParameters"
                },
                "athenaParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceAthenaParameters"
                },
                "auroraParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceAuroraParameters"
                },
                "auroraPostgreSqlParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceAuroraPostgreSqlParameters"
                },
                "mariaDbParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceMariaDbParameters"
                },
                "mySqlParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceMySqlParameters"
                },
                "oracleParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceOracleParameters"
                },
                "postgreSqlParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourcePostgreSqlParameters"
                },
                "prestoParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourcePrestoParameters"
                },
                "rdsParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceRdsParameters"
                },
                "redshiftParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceRedshiftParameters"
                },
                "s3Parameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceS3Parameters"
                },
                "snowflakeParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceSnowflakeParameters"
                },
                "sparkParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceSparkParameters"
                },
                "sqlServerParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceSqlServerParameters"
                },
                "teradataParameters": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceTeradataParameters"
                }
            }
        },
        "aws-native:quicksight:DataSourceDataSourceType": {
            "type": "string"
        },
        "aws-native:quicksight:DataSourceManifestFileLocation": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "\u003cp\u003eAmazon S3 bucket.\u003c/p\u003e"
                },
                "key": {
                    "type": "string",
                    "description": "\u003cp\u003eAmazon S3 key that identifies an object.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceMariaDbParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceMySqlParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceOracleParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "number"
                }
            }
        },
        "aws-native:quicksight:DataSourcePostgreSqlParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourcePrestoParameters": {
            "type": "object",
            "properties": {
                "catalog": {
                    "type": "string",
                    "description": "\u003cp\u003eCatalog.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceRdsParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "instanceId": {
                    "type": "string",
                    "description": "\u003cp\u003eInstance ID.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceRedshiftParameters": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "\u003cp\u003eCluster ID. This field can be blank if the \u003ccode\u003eHost\u003c/code\u003e and \u003ccode\u003ePort\u003c/code\u003e are\n            provided.\u003c/p\u003e"
                },
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost. This field can be blank if \u003ccode\u003eClusterId\u003c/code\u003e is provided.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort. This field can be blank if the \u003ccode\u003eClusterId\u003c/code\u003e is provided.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceResourcePermission": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe IAM action to grant or revoke permissions on.\u003c/p\u003e"
                },
                "principal": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:\u003c/p\u003e\n        \u003cul\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) \u003c/p\u003e\n            \u003c/li\u003e\n         \u003c/ul\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceResourceStatus": {
            "type": "string"
        },
        "aws-native:quicksight:DataSourceS3Parameters": {
            "type": "object",
            "properties": {
                "manifestFileLocation": {
                    "$ref": "#/types/aws-native:quicksight:DataSourceManifestFileLocation"
                }
            }
        },
        "aws-native:quicksight:DataSourceSnowflakeParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "warehouse": {
                    "type": "string",
                    "description": "\u003cp\u003eWarehouse.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceSparkParameters": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceSqlServerParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceSslProperties": {
            "type": "object",
            "properties": {
                "disableSsl": {
                    "type": "boolean",
                    "description": "\u003cp\u003eA Boolean option to control whether SSL should be disabled.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "\u003cp\u003eTag key.\u003c/p\u003e"
                },
                "value": {
                    "type": "string",
                    "description": "\u003cp\u003eTag value.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceTeradataParameters": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "\u003cp\u003eDatabase.\u003c/p\u003e"
                },
                "host": {
                    "type": "string",
                    "description": "\u003cp\u003eHost.\u003c/p\u003e"
                },
                "port": {
                    "type": "number",
                    "description": "\u003cp\u003ePort.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:DataSourceVpcConnectionProperties": {
            "type": "object",
            "properties": {
                "vpcConnectionArn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) for the VPC connection.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateColumnGroupColumnSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe name of the column group's column schema.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateColumnGroupSchema": {
            "type": "object",
            "properties": {
                "columnGroupColumnSchemaList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateColumnGroupColumnSchema"
                    },
                    "description": "\u003cp\u003eA structure containing the list of schemas for column group columns.\u003c/p\u003e"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe name of the column group schema.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateColumnSchema": {
            "type": "object",
            "properties": {
                "dataType": {
                    "type": "string",
                    "description": "\u003cp\u003eThe data type of the column schema.\u003c/p\u003e"
                },
                "geographicRole": {
                    "type": "string",
                    "description": "\u003cp\u003eThe geographic role of the column schema.\u003c/p\u003e"
                },
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe name of the column schema.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateDataSetConfiguration": {
            "type": "object",
            "properties": {
                "columnGroupSchemaList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateColumnGroupSchema"
                    },
                    "description": "\u003cp\u003eA structure containing the list of column group schemas.\u003c/p\u003e"
                },
                "dataSetSchema": {
                    "$ref": "#/types/aws-native:quicksight:TemplateDataSetSchema"
                },
                "placeholder": {
                    "type": "string",
                    "description": "\u003cp\u003ePlaceholder.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateDataSetReference": {
            "type": "object",
            "properties": {
                "dataSetArn": {
                    "type": "string",
                    "description": "\u003cp\u003eDataset Amazon Resource Name (ARN).\u003c/p\u003e"
                },
                "dataSetPlaceholder": {
                    "type": "string",
                    "description": "\u003cp\u003eDataset placeholder.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateDataSetSchema": {
            "type": "object",
            "properties": {
                "columnSchemaList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateColumnSchema"
                    },
                    "description": "\u003cp\u003eA structure containing the list of column schemas.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateResourcePermission": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe IAM action to grant or revoke permissions on.\u003c/p\u003e"
                },
                "principal": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:\u003c/p\u003e\n        \u003cul\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) \u003c/p\u003e\n            \u003c/li\u003e\n         \u003c/ul\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateResourceStatus": {
            "type": "string"
        },
        "aws-native:quicksight:TemplateSheet": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\u003cp\u003eThe name of a sheet. This name is displayed on the sheet's tab in the QuickSight\n            console.\u003c/p\u003e"
                },
                "sheetId": {
                    "type": "string",
                    "description": "\u003cp\u003eThe unique identifier associated with a sheet.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "\u003cp\u003eTag key.\u003c/p\u003e"
                },
                "value": {
                    "type": "string",
                    "description": "\u003cp\u003eTag value.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateTemplateError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "\u003cp\u003eDescription of the error type.\u003c/p\u003e"
                },
                "type": {
                    "$ref": "#/types/aws-native:quicksight:TemplateTemplateErrorType"
                }
            }
        },
        "aws-native:quicksight:TemplateTemplateErrorType": {
            "type": "string"
        },
        "aws-native:quicksight:TemplateTemplateSourceAnalysis": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the resource.\u003c/p\u003e"
                },
                "dataSetReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateDataSetReference"
                    },
                    "description": "\u003cp\u003eA structure containing information about the dataset references used as placeholders\n            in the template.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateTemplateSourceEntity": {
            "type": "object",
            "properties": {
                "sourceAnalysis": {
                    "$ref": "#/types/aws-native:quicksight:TemplateTemplateSourceAnalysis"
                },
                "sourceTemplate": {
                    "$ref": "#/types/aws-native:quicksight:TemplateTemplateSourceTemplate"
                }
            }
        },
        "aws-native:quicksight:TemplateTemplateSourceTemplate": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the resource.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:TemplateTemplateVersion": {
            "type": "object",
            "properties": {
                "createdTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe time that this template version was created.\u003c/p\u003e"
                },
                "dataSetConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateDataSetConfiguration"
                    },
                    "description": "\u003cp\u003eSchema of the dataset identified by the placeholder. Any dashboard created from this\n            template should be bound to new datasets matching the same schema described through this\n            API operation.\u003c/p\u003e"
                },
                "description": {
                    "type": "string",
                    "description": "\u003cp\u003eThe description of the template.\u003c/p\u003e"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateTemplateError"
                    },
                    "description": "\u003cp\u003eErrors associated with this template version.\u003c/p\u003e"
                },
                "sheets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:TemplateSheet"
                    },
                    "description": "\u003cp\u003eA list of the associated sheets with the unique identifier and name of each sheet.\u003c/p\u003e"
                },
                "sourceEntityArn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of an analysis or template that was used to create this\n            template.\u003c/p\u003e"
                },
                "status": {
                    "$ref": "#/types/aws-native:quicksight:TemplateResourceStatus"
                },
                "themeArn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe ARN of the theme associated with this version of the template.\u003c/p\u003e"
                },
                "versionNumber": {
                    "type": "number",
                    "description": "\u003cp\u003eThe version number of the template version.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:ThemeBorderStyle": {
            "type": "object",
            "properties": {
                "show": {
                    "type": "boolean",
                    "description": "\u003cp\u003eThe option to enable display of borders for visuals.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:ThemeDataColorPalette": {
            "type": "object",
            "properties": {
                "colors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe hexadecimal codes for the colors.\u003c/p\u003e"
                },
                "emptyFillColor": {
                    "type": "string",
                    "description": "\u003cp\u003eThe hexadecimal code of a color that applies to charts where a lack of data is\n            highlighted.\u003c/p\u003e"
                },
                "minMaxGradient": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe minimum and maximum hexadecimal codes that describe a color gradient. \u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:ThemeFont": {
            "type": "object",
            "properties": {
                "fontFamily": {
                    "type": "string"
                }
            }
        },
        "aws-native:quicksight:ThemeGutterStyle": {
            "type": "object",
            "properties": {
                "show": {
                    "type": "boolean",
                    "description": "\u003cp\u003eThis Boolean value controls whether to display a gutter space between sheet tiles.\n        \u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:ThemeMarginStyle": {
            "type": "object",
            "properties": {
                "show": {
                    "type": "boolean",
                    "description": "\u003cp\u003eThis Boolean value controls whether to display sheet margins.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:ThemeResourcePermission": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "\u003cp\u003eThe IAM action to grant or revoke permissions on.\u003c/p\u003e"
                },
                "principal": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:\u003c/p\u003e\n        \u003cul\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) \u003c/p\u003e\n            \u003c/li\u003e\n         \u003c/ul\u003e"
                }
            }
        },
        "aws-native:quicksight:ThemeResourceStatus": {
            "type": "string"
        },
        "aws-native:quicksight:ThemeSheetStyle": {
            "type": "object",
            "properties": {
                "tile": {
                    "$ref": "#/types/aws-native:quicksight:ThemeTileStyle"
                },
                "tileLayout": {
                    "$ref": "#/types/aws-native:quicksight:ThemeTileLayoutStyle"
                }
            }
        },
        "aws-native:quicksight:ThemeTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "\u003cp\u003eTag key.\u003c/p\u003e"
                },
                "value": {
                    "type": "string",
                    "description": "\u003cp\u003eTag value.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:ThemeThemeConfiguration": {
            "type": "object",
            "properties": {
                "dataColorPalette": {
                    "$ref": "#/types/aws-native:quicksight:ThemeDataColorPalette"
                },
                "sheet": {
                    "$ref": "#/types/aws-native:quicksight:ThemeSheetStyle"
                },
                "typography": {
                    "$ref": "#/types/aws-native:quicksight:ThemeTypography"
                },
                "uIColorPalette": {
                    "$ref": "#/types/aws-native:quicksight:ThemeUIColorPalette"
                }
            }
        },
        "aws-native:quicksight:ThemeThemeError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "\u003cp\u003eThe error message.\u003c/p\u003e"
                },
                "type": {
                    "$ref": "#/types/aws-native:quicksight:ThemeThemeErrorType"
                }
            }
        },
        "aws-native:quicksight:ThemeThemeErrorType": {
            "type": "string"
        },
        "aws-native:quicksight:ThemeThemeType": {
            "type": "string"
        },
        "aws-native:quicksight:ThemeThemeVersion": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the resource.\u003c/p\u003e"
                },
                "baseThemeId": {
                    "type": "string",
                    "description": "\u003cp\u003eThe Amazon QuickSight-defined ID of the theme that a custom theme inherits from. All\n            themes initially inherit from a default QuickSight theme.\u003c/p\u003e"
                },
                "configuration": {
                    "$ref": "#/types/aws-native:quicksight:ThemeThemeConfiguration"
                },
                "createdTime": {
                    "type": "string",
                    "description": "\u003cp\u003eThe date and time that this theme version was created.\u003c/p\u003e"
                },
                "description": {
                    "type": "string",
                    "description": "\u003cp\u003eThe description of the theme.\u003c/p\u003e"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:ThemeThemeError"
                    },
                    "description": "\u003cp\u003eErrors associated with the theme.\u003c/p\u003e"
                },
                "status": {
                    "$ref": "#/types/aws-native:quicksight:ThemeResourceStatus"
                },
                "versionNumber": {
                    "type": "number",
                    "description": "\u003cp\u003eThe version number of the theme.\u003c/p\u003e"
                }
            }
        },
        "aws-native:quicksight:ThemeTileLayoutStyle": {
            "type": "object",
            "properties": {
                "gutter": {
                    "$ref": "#/types/aws-native:quicksight:ThemeGutterStyle"
                },
                "margin": {
                    "$ref": "#/types/aws-native:quicksight:ThemeMarginStyle"
                }
            }
        },
        "aws-native:quicksight:ThemeTileStyle": {
            "type": "object",
            "properties": {
                "border": {
                    "$ref": "#/types/aws-native:quicksight:ThemeBorderStyle"
                }
            }
        },
        "aws-native:quicksight:ThemeTypography": {
            "type": "object",
            "properties": {
                "fontFamilies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:quicksight:ThemeFont"
                    }
                }
            }
        },
        "aws-native:quicksight:ThemeUIColorPalette": {
            "type": "object",
            "properties": {
                "accent": {
                    "type": "string",
                    "description": "\u003cp\u003eThis color is that applies to selected states and buttons.\u003c/p\u003e"
                },
                "accentForeground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            accent color.\u003c/p\u003e"
                },
                "danger": {
                    "type": "string",
                    "description": "\u003cp\u003eThe color that applies to error messages.\u003c/p\u003e"
                },
                "dangerForeground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            error color.\u003c/p\u003e"
                },
                "dimension": {
                    "type": "string",
                    "description": "\u003cp\u003eThe color that applies to the names of fields that are identified as\n            dimensions.\u003c/p\u003e"
                },
                "dimensionForeground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            dimension color.\u003c/p\u003e"
                },
                "measure": {
                    "type": "string",
                    "description": "\u003cp\u003eThe color that applies to the names of fields that are identified as measures.\u003c/p\u003e"
                },
                "measureForeground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            measure color.\u003c/p\u003e"
                },
                "primaryBackground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe background color that applies to visuals and other high emphasis UI.\u003c/p\u003e"
                },
                "primaryForeground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe color of text and other foreground elements that appear over the primary\n            background regions, such as grid lines, borders, table banding, icons, and so on.\u003c/p\u003e"
                },
                "secondaryBackground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe background color that applies to the sheet background and sheet controls.\u003c/p\u003e"
                },
                "secondaryForeground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe foreground color that applies to any sheet title, sheet control text, or UI that\n            appears over the secondary background.\u003c/p\u003e"
                },
                "success": {
                    "type": "string",
                    "description": "\u003cp\u003eThe color that applies to success messages, for example the check mark for a\n            successful download.\u003c/p\u003e"
                },
                "successForeground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            success color.\u003c/p\u003e"
                },
                "warning": {
                    "type": "string",
                    "description": "\u003cp\u003eThis color that applies to warning and informational messages.\u003c/p\u003e"
                },
                "warningForeground": {
                    "type": "string",
                    "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            warning color.\u003c/p\u003e"
                }
            }
        },
        "aws-native:rds:DBProxyAuthFormat": {
            "type": "object",
            "properties": {
                "authScheme": {
                    "$ref": "#/types/aws-native:rds:DBProxyAuthFormatAuthScheme",
                    "description": "The type of authentication that the proxy uses for connections from the proxy to the underlying database. "
                },
                "description": {
                    "type": "string",
                    "description": "A user-specified description about the authentication used by a proxy to log in as a specific database user. "
                },
                "iAMAuth": {
                    "$ref": "#/types/aws-native:rds:DBProxyAuthFormatIAMAuth",
                    "description": "Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. "
                },
                "secretArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager. "
                },
                "userName": {
                    "type": "string",
                    "description": "The name of the database user to which the proxy connects."
                }
            }
        },
        "aws-native:rds:DBProxyAuthFormatAuthScheme": {
            "type": "string"
        },
        "aws-native:rds:DBProxyAuthFormatIAMAuth": {
            "type": "string"
        },
        "aws-native:rds:DBProxyEndpointTagFormat": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:rds:DBProxyEndpointTargetRole": {
            "type": "string"
        },
        "aws-native:rds:DBProxyEngineFamily": {
            "type": "string"
        },
        "aws-native:rds:DBProxyTagFormat": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:rds:DBProxyTargetGroupConnectionPoolConfigurationInfoFormat": {
            "type": "object",
            "properties": {
                "connectionBorrowTimeout": {
                    "type": "integer",
                    "description": "The number of seconds for a proxy to wait for a connection to become available in the connection pool."
                },
                "initQuery": {
                    "type": "string",
                    "description": "One or more SQL statements for the proxy to run when opening each new database connection."
                },
                "maxConnectionsPercent": {
                    "type": "integer",
                    "description": "The maximum size of the connection pool for each target in a target group."
                },
                "maxIdleConnectionsPercent": {
                    "type": "integer",
                    "description": "Controls how actively the proxy closes idle database connections in the connection pool."
                },
                "sessionPinningFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection."
                }
            }
        },
        "aws-native:rds:DBProxyTargetGroupTargetGroupName": {
            "type": "string"
        },
        "aws-native:rds:GlobalClusterEngine": {
            "type": "string"
        },
        "aws-native:redshift:ClusterEndpoint": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            }
        },
        "aws-native:redshift:ClusterLoggingProperties": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "s3KeyPrefix": {
                    "type": "string"
                }
            }
        },
        "aws-native:redshift:ClusterTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:resourcegroups:GroupConfigurationItem": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:resourcegroups:GroupConfigurationParameter"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "aws-native:resourcegroups:GroupConfigurationParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:resourcegroups:GroupQuery": {
            "type": "object",
            "properties": {
                "resourceTypeFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stackIdentifier": {
                    "type": "string"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:resourcegroups:GroupTagFilter"
                    }
                }
            }
        },
        "aws-native:resourcegroups:GroupResourceQuery": {
            "type": "object",
            "properties": {
                "query": {
                    "$ref": "#/types/aws-native:resourcegroups:GroupQuery"
                },
                "type": {
                    "$ref": "#/types/aws-native:resourcegroups:GroupResourceQueryType"
                }
            }
        },
        "aws-native:resourcegroups:GroupResourceQueryType": {
            "type": "string"
        },
        "aws-native:resourcegroups:GroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:resourcegroups:GroupTagFilter": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:robomaker:FleetTags": {
            "type": "object"
        },
        "aws-native:robomaker:RobotArchitecture": {
            "type": "string"
        },
        "aws-native:robomaker:RobotTags": {
            "type": "object"
        },
        "aws-native:robomaker:SimulationApplicationRenderingEngine": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationRenderingEngineName",
                    "description": "The name of the rendering engine."
                },
                "version": {
                    "type": "string",
                    "description": "The version of the rendering engine."
                }
            }
        },
        "aws-native:robomaker:SimulationApplicationRenderingEngineName": {
            "type": "string"
        },
        "aws-native:robomaker:SimulationApplicationRobotSoftwareSuite": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationRobotSoftwareSuiteName",
                    "description": "The name of the robot software suite (ROS distribution)."
                },
                "version": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationRobotSoftwareSuiteVersion",
                    "description": "The version of the robot software suite (ROS distribution)."
                }
            }
        },
        "aws-native:robomaker:SimulationApplicationRobotSoftwareSuiteName": {
            "type": "string"
        },
        "aws-native:robomaker:SimulationApplicationRobotSoftwareSuiteVersion": {
            "type": "string"
        },
        "aws-native:robomaker:SimulationApplicationSimulationSoftwareSuite": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationSimulationSoftwareSuiteName",
                    "description": "The name of the simulation software suite."
                },
                "version": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationSimulationSoftwareSuiteVersion",
                    "description": "The version of the simulation software suite."
                }
            }
        },
        "aws-native:robomaker:SimulationApplicationSimulationSoftwareSuiteName": {
            "type": "string"
        },
        "aws-native:robomaker:SimulationApplicationSimulationSoftwareSuiteVersion": {
            "type": "string"
        },
        "aws-native:robomaker:SimulationApplicationSourceConfig": {
            "type": "object",
            "properties": {
                "architecture": {
                    "$ref": "#/types/aws-native:robomaker:SimulationApplicationSourceConfigArchitecture",
                    "description": "The target processor architecture for the application."
                },
                "s3Bucket": {
                    "type": "string",
                    "description": "The Amazon S3 bucket name."
                },
                "s3Key": {
                    "type": "string",
                    "description": "The s3 object key."
                }
            }
        },
        "aws-native:robomaker:SimulationApplicationSourceConfigArchitecture": {
            "type": "string"
        },
        "aws-native:robomaker:SimulationApplicationTags": {
            "type": "object"
        },
        "aws-native:route53:HealthCheckHealthCheckTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag."
                }
            }
        },
        "aws-native:route53:HostedZoneHostedZoneConfig": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Any comments that you want to include about the hosted zone."
                }
            }
        },
        "aws-native:route53:HostedZoneHostedZoneTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag."
                }
            }
        },
        "aws-native:route53:HostedZoneQueryLoggingConfig": {
            "type": "object",
            "properties": {
                "cloudWatchLogsLogGroupArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to."
                }
            }
        },
        "aws-native:route53:HostedZoneVPC": {
            "type": "object",
            "properties": {
                "vPCId": {
                    "type": "string",
                    "description": "The ID of an Amazon VPC."
                },
                "vPCRegion": {
                    "type": "string",
                    "description": "The region that an Amazon VPC was created in. See https://docs.aws.amazon.com/general/latest/gr/rande.html for a list of up to date regions."
                }
            }
        },
        "aws-native:route53:KeySigningKeyStatus": {
            "type": "string"
        },
        "aws-native:route53recoverycontrol:ClusterClusterEndpoint": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "aws-native:route53recoverycontrol:ClusterStatus": {
            "type": "string"
        },
        "aws-native:route53recoverycontrol:ControlPanelStatus": {
            "type": "string"
        },
        "aws-native:route53recoverycontrol:RoutingControlStatus": {
            "type": "string"
        },
        "aws-native:route53recoverycontrol:SafetyRuleAssertionRule": {
            "type": "object",
            "properties": {
                "assertedControls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three AWS Regions."
                },
                "waitPeriodMs": {
                    "type": "integer",
                    "description": "An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value."
                }
            }
        },
        "aws-native:route53recoverycontrol:SafetyRuleGatingRule": {
            "type": "object",
            "properties": {
                "gatingControls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The gating controls for the gating rule. That is, routing controls that are evaluated by the rule configuration that you specify."
                },
                "targetControls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Routing controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three AWS Regions. Now you specify AtLeast 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true. \nIn other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls."
                },
                "waitPeriodMs": {
                    "type": "integer",
                    "description": "An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value."
                }
            }
        },
        "aws-native:route53recoverycontrol:SafetyRuleRuleConfig": {
            "type": "object",
            "properties": {
                "inverted": {
                    "type": "boolean",
                    "description": "Logical negation of the rule. If the rule would usually evaluate true, it's evaluated as false, and vice versa."
                },
                "threshold": {
                    "type": "integer",
                    "description": "The value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type."
                },
                "type": {
                    "$ref": "#/types/aws-native:route53recoverycontrol:SafetyRuleRuleType"
                }
            }
        },
        "aws-native:route53recoverycontrol:SafetyRuleRuleType": {
            "type": "string"
        },
        "aws-native:route53recoverycontrol:SafetyRuleStatus": {
            "type": "string"
        },
        "aws-native:route53recoveryreadiness:CellTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:route53recoveryreadiness:ReadinessCheckTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:route53recoveryreadiness:RecoveryGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:route53recoveryreadiness:ResourceSetDNSTargetResource": {
            "type": "object",
            "properties": {
                "domainName": {
                    "type": "string",
                    "description": "The domain name that acts as an ingress point to a portion of the customer application."
                },
                "hostedZoneArn": {
                    "type": "string",
                    "description": "The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource."
                },
                "recordSetId": {
                    "type": "string",
                    "description": "The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type."
                },
                "recordType": {
                    "type": "string",
                    "description": "The type of DNS record of the target resource."
                },
                "targetResource": {
                    "$ref": "#/types/aws-native:route53recoveryreadiness:ResourceSetTargetResource"
                }
            }
        },
        "aws-native:route53recoveryreadiness:ResourceSetNLBResource": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "A Network Load Balancer resource Amazon Resource Name (ARN)."
                }
            }
        },
        "aws-native:route53recoveryreadiness:ResourceSetR53ResourceRecord": {
            "type": "object",
            "properties": {
                "domainName": {
                    "type": "string",
                    "description": "The DNS target domain name."
                },
                "recordSetId": {
                    "type": "string",
                    "description": "The Resource Record set id."
                }
            }
        },
        "aws-native:route53recoveryreadiness:ResourceSetResource": {
            "type": "object",
            "properties": {
                "componentId": {
                    "type": "string",
                    "description": "The component identifier of the resource, generated when DNS target resource is used."
                },
                "dnsTargetResource": {
                    "$ref": "#/types/aws-native:route53recoveryreadiness:ResourceSetDNSTargetResource"
                },
                "readinessScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of recovery group Amazon Resource Names (ARNs) and cell ARNs that this resource is contained within."
                },
                "resourceArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the AWS resource."
                }
            }
        },
        "aws-native:route53recoveryreadiness:ResourceSetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:route53recoveryreadiness:ResourceSetTargetResource": {
            "type": "object",
            "properties": {
                "nLBResource": {
                    "$ref": "#/types/aws-native:route53recoveryreadiness:ResourceSetNLBResource"
                },
                "r53Resource": {
                    "$ref": "#/types/aws-native:route53recoveryreadiness:ResourceSetR53ResourceRecord"
                }
            }
        },
        "aws-native:route53resolver:FirewallDomainListStatus": {
            "type": "string"
        },
        "aws-native:route53resolver:FirewallDomainListTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:route53resolver:FirewallRuleGroupAssociationMutationProtection": {
            "type": "string"
        },
        "aws-native:route53resolver:FirewallRuleGroupAssociationStatus": {
            "type": "string"
        },
        "aws-native:route53resolver:FirewallRuleGroupAssociationTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:route53resolver:FirewallRuleGroupFirewallRule": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupFirewallRuleAction",
                    "description": "Rule Action"
                },
                "blockOverrideDnsType": {
                    "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupFirewallRuleBlockOverrideDnsType",
                    "description": "BlockOverrideDnsType"
                },
                "blockOverrideDomain": {
                    "type": "string",
                    "description": "BlockOverrideDomain"
                },
                "blockOverrideTtl": {
                    "type": "integer",
                    "description": "BlockOverrideTtl"
                },
                "blockResponse": {
                    "$ref": "#/types/aws-native:route53resolver:FirewallRuleGroupFirewallRuleBlockResponse",
                    "description": "BlockResponse"
                },
                "firewallDomainListId": {
                    "type": "string",
                    "description": "ResourceId"
                },
                "priority": {
                    "type": "integer",
                    "description": "Rule Priority"
                }
            }
        },
        "aws-native:route53resolver:FirewallRuleGroupFirewallRuleAction": {
            "type": "string"
        },
        "aws-native:route53resolver:FirewallRuleGroupFirewallRuleBlockOverrideDnsType": {
            "type": "string"
        },
        "aws-native:route53resolver:FirewallRuleGroupFirewallRuleBlockResponse": {
            "type": "string"
        },
        "aws-native:route53resolver:FirewallRuleGroupShareStatus": {
            "type": "string"
        },
        "aws-native:route53resolver:FirewallRuleGroupStatus": {
            "type": "string"
        },
        "aws-native:route53resolver:FirewallRuleGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
                }
            }
        },
        "aws-native:route53resolver:ResolverDNSSECConfigValidationStatus": {
            "type": "string"
        },
        "aws-native:route53resolver:ResolverQueryLoggingConfigAssociationError": {
            "type": "string"
        },
        "aws-native:route53resolver:ResolverQueryLoggingConfigAssociationStatus": {
            "type": "string"
        },
        "aws-native:route53resolver:ResolverQueryLoggingConfigShareStatus": {
            "type": "string"
        },
        "aws-native:route53resolver:ResolverQueryLoggingConfigStatus": {
            "type": "string"
        },
        "aws-native:s3:AccessPointNetworkOrigin": {
            "type": "string"
        },
        "aws-native:s3:AccessPointPublicAccessBlockConfiguration": {
            "type": "object",
            "properties": {
                "blockPublicAcls": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:\n- PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.\n - PUT Object calls fail if the request includes a public ACL.\n. - PUT Bucket calls fail if the request includes a public ACL.\nEnabling this setting doesn't affect existing policies or ACLs."
                },
                "blockPublicPolicy": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies."
                },
                "ignorePublicAcls": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set."
                },
                "restrictPublicBuckets": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.\nEnabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked."
                }
            }
        },
        "aws-native:s3:AccessPointVpcConfiguration": {
            "type": "object",
            "properties": {
                "vpcId": {
                    "type": "string",
                    "description": "If this field is specified, this access point will only allow connections from the specified VPC ID."
                }
            }
        },
        "aws-native:s3:MultiRegionAccessPointPublicAccessBlockConfiguration": {
            "type": "object",
            "properties": {
                "blockPublicAcls": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:\n- PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.\n - PUT Object calls fail if the request includes a public ACL.\n. - PUT Bucket calls fail if the request includes a public ACL.\nEnabling this setting doesn't affect existing policies or ACLs."
                },
                "blockPublicPolicy": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies."
                },
                "ignorePublicAcls": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set."
                },
                "restrictPublicBuckets": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.\nEnabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked."
                }
            }
        },
        "aws-native:s3:MultiRegionAccessPointRegion": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                }
            }
        },
        "aws-native:s3:StorageLensAccountLevel": {
            "type": "object",
            "properties": {
                "activityMetrics": {
                    "$ref": "#/types/aws-native:s3:StorageLensActivityMetrics"
                },
                "bucketLevel": {
                    "$ref": "#/types/aws-native:s3:StorageLensBucketLevel"
                }
            }
        },
        "aws-native:s3:StorageLensActivityMetrics": {
            "type": "object",
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether activity metrics are enabled or disabled."
                }
            }
        },
        "aws-native:s3:StorageLensAwsOrg": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                }
            }
        },
        "aws-native:s3:StorageLensBucketLevel": {
            "type": "object",
            "properties": {
                "activityMetrics": {
                    "$ref": "#/types/aws-native:s3:StorageLensActivityMetrics"
                },
                "prefixLevel": {
                    "$ref": "#/types/aws-native:s3:StorageLensPrefixLevel"
                }
            }
        },
        "aws-native:s3:StorageLensBucketsAndRegions": {
            "type": "object",
            "properties": {
                "buckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:s3:StorageLensDataExport": {
            "type": "object",
            "properties": {
                "s3BucketDestination": {
                    "$ref": "#/types/aws-native:s3:StorageLensS3BucketDestination"
                }
            }
        },
        "aws-native:s3:StorageLensEncryption": {
            "type": "object"
        },
        "aws-native:s3:StorageLensPrefixLevel": {
            "type": "object",
            "properties": {
                "storageMetrics": {
                    "$ref": "#/types/aws-native:s3:StorageLensPrefixLevelStorageMetrics"
                }
            }
        },
        "aws-native:s3:StorageLensPrefixLevelStorageMetrics": {
            "type": "object",
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether prefix-level storage metrics are enabled or disabled."
                },
                "selectionCriteria": {
                    "$ref": "#/types/aws-native:s3:StorageLensSelectionCriteria"
                }
            }
        },
        "aws-native:s3:StorageLensS3BucketDestination": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The AWS account ID that owns the destination S3 bucket."
                },
                "arn": {
                    "type": "string",
                    "description": "The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed."
                },
                "encryption": {
                    "$ref": "#/types/aws-native:s3:StorageLensEncryption"
                },
                "format": {
                    "$ref": "#/types/aws-native:s3:StorageLensS3BucketDestinationFormat",
                    "description": "Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export."
                },
                "outputSchemaVersion": {
                    "$ref": "#/types/aws-native:s3:StorageLensS3BucketDestinationOutputSchemaVersion",
                    "description": "The version of the output schema to use when exporting Amazon S3 Storage Lens metrics."
                },
                "prefix": {
                    "type": "string",
                    "description": "The prefix to use for Amazon S3 Storage Lens export."
                }
            }
        },
        "aws-native:s3:StorageLensS3BucketDestinationFormat": {
            "type": "string"
        },
        "aws-native:s3:StorageLensS3BucketDestinationOutputSchemaVersion": {
            "type": "string"
        },
        "aws-native:s3:StorageLensSelectionCriteria": {
            "type": "object",
            "properties": {
                "delimiter": {
                    "type": "string",
                    "description": "Delimiter to divide S3 key into hierarchy of prefixes."
                },
                "maxDepth": {
                    "type": "integer",
                    "description": "Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze."
                },
                "minStorageBytesPercentage": {
                    "type": "number",
                    "description": "The minimum storage bytes threshold for the prefixes to be included in the analysis."
                }
            }
        },
        "aws-native:s3:StorageLensStorageLensConfiguration": {
            "type": "object",
            "properties": {
                "accountLevel": {
                    "$ref": "#/types/aws-native:s3:StorageLensAccountLevel"
                },
                "awsOrg": {
                    "$ref": "#/types/aws-native:s3:StorageLensAwsOrg"
                },
                "dataExport": {
                    "$ref": "#/types/aws-native:s3:StorageLensDataExport"
                },
                "exclude": {
                    "$ref": "#/types/aws-native:s3:StorageLensBucketsAndRegions"
                },
                "id": {
                    "type": "string"
                },
                "include": {
                    "$ref": "#/types/aws-native:s3:StorageLensBucketsAndRegions"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled."
                },
                "storageLensArn": {
                    "type": "string",
                    "description": "The ARN for the Amazon S3 Storage Lens configuration."
                }
            }
        },
        "aws-native:s3:StorageLensTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:s3objectlambda:AccessPointObjectLambdaConfiguration": {
            "type": "object",
            "properties": {
                "allowedFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cloudWatchMetricsEnabled": {
                    "type": "boolean"
                },
                "supportingAccessPoint": {
                    "type": "string"
                },
                "transformationConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:s3objectlambda:AccessPointTransformationConfiguration"
                    }
                }
            }
        },
        "aws-native:s3objectlambda:AccessPointPublicAccessBlockConfiguration": {
            "type": "object",
            "properties": {
                "blockPublicAcls": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should block public access control lists (ACLs) to this object lambda access point. Setting this element to TRUE causes the following behavior:\n- PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.\n - PUT Object calls fail if the request includes a public ACL.\n. - PUT Bucket calls fail if the request includes a public ACL.\nEnabling this setting doesn't affect existing policies or ACLs."
                },
                "blockPublicPolicy": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies."
                },
                "ignorePublicAcls": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set."
                },
                "restrictPublicBuckets": {
                    "type": "boolean",
                    "description": "Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.\nEnabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked."
                }
            }
        },
        "aws-native:s3objectlambda:AccessPointTransformationConfiguration": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contentTransformation": {
                    "$ref": "pulumi.json#/Any"
                }
            }
        },
        "aws-native:s3outposts:AccessPointVpcConfiguration": {
            "type": "object",
            "properties": {
                "vpcId": {
                    "type": "string",
                    "description": "Virtual Private Cloud (VPC) Id from which AccessPoint will allow requests."
                }
            }
        },
        "aws-native:s3outposts:BucketAbortIncompleteMultipartUpload": {
            "type": "object",
            "properties": {
                "daysAfterInitiation": {
                    "type": "integer",
                    "description": "Specifies the number of days after which Amazon S3Outposts aborts an incomplete multipart upload."
                }
            }
        },
        "aws-native:s3outposts:BucketLifecycleConfiguration": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:s3outposts:BucketRule"
                    },
                    "description": "A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket."
                }
            }
        },
        "aws-native:s3outposts:BucketRule": {
            "type": "object",
            "properties": {
                "abortIncompleteMultipartUpload": {
                    "$ref": "#/types/aws-native:s3outposts:BucketAbortIncompleteMultipartUpload",
                    "description": "Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3Outposts bucket."
                },
                "expirationDate": {
                    "type": "string",
                    "description": "Indicates when objects are deleted from Amazon S3Outposts. The date value must be in ISO 8601 format. The time is always midnight UTC."
                },
                "expirationInDays": {
                    "type": "integer",
                    "description": "Indicates the number of days after creation when objects are deleted from Amazon S3Outposts."
                },
                "filter": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The container for the filter of the lifecycle rule."
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the lifecycle rule. The value can't be longer than 255 characters."
                },
                "status": {
                    "$ref": "#/types/aws-native:s3outposts:BucketRuleStatus"
                }
            }
        },
        "aws-native:s3outposts:BucketRuleStatus": {
            "type": "string"
        },
        "aws-native:s3outposts:BucketTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:s3outposts:EndpointAccessType": {
            "type": "string"
        },
        "aws-native:s3outposts:EndpointNetworkInterface": {
            "type": "object",
            "properties": {
                "networkInterfaceId": {
                    "type": "string"
                }
            }
        },
        "aws-native:s3outposts:EndpointStatus": {
            "type": "string"
        },
        "aws-native:sagemaker:AppAppType": {
            "type": "string"
        },
        "aws-native:sagemaker:AppImageConfigFileSystemConfig": {
            "type": "object",
            "properties": {
                "defaultGid": {
                    "type": "integer",
                    "description": "The default POSIX group ID (GID). If not specified, defaults to 100."
                },
                "defaultUid": {
                    "type": "integer",
                    "description": "The default POSIX user ID (UID). If not specified, defaults to 1000."
                },
                "mountPath": {
                    "type": "string",
                    "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user."
                }
            }
        },
        "aws-native:sagemaker:AppImageConfigKernelGatewayImageConfig": {
            "type": "object",
            "properties": {
                "fileSystemConfig": {
                    "$ref": "#/types/aws-native:sagemaker:AppImageConfigFileSystemConfig",
                    "description": "The Amazon Elastic File System (EFS) storage configuration for a SageMaker image."
                },
                "kernelSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:AppImageConfigKernelSpec"
                    },
                    "description": "The specification of the Jupyter kernels in the image."
                }
            }
        },
        "aws-native:sagemaker:AppImageConfigKernelSpec": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name of the kernel."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the kernel."
                }
            }
        },
        "aws-native:sagemaker:AppImageConfigTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:sagemaker:AppResourceSpec": {
            "type": "object",
            "properties": {
                "instanceType": {
                    "$ref": "#/types/aws-native:sagemaker:AppResourceSpecInstanceType",
                    "description": "The instance type that the image version runs on."
                },
                "sageMakerImageArn": {
                    "type": "string",
                    "description": "The ARN of the SageMaker image that the image version belongs to."
                },
                "sageMakerImageVersionArn": {
                    "type": "string",
                    "description": "The ARN of the image version created on the instance."
                }
            }
        },
        "aws-native:sagemaker:AppResourceSpecInstanceType": {
            "type": "string"
        },
        "aws-native:sagemaker:AppTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionClusterConfig": {
            "type": "object",
            "properties": {
                "instanceCount": {
                    "type": "integer",
                    "description": "The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1."
                },
                "instanceType": {
                    "type": "string",
                    "description": "The ML compute instance type for the processing job."
                },
                "volumeKmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job."
                },
                "volumeSizeInGB": {
                    "type": "integer",
                    "description": "The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario."
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionConstraintsResource": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "type": "string",
                    "description": "The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against."
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionDataQualityAppSpecification": {
            "type": "object",
            "properties": {
                "containerArguments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of arguments for the container used to run the monitoring job."
                },
                "containerEntrypoint": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the entrypoint for a container used to run the monitoring job."
                },
                "environment": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Sets the environment variables in the Docker container"
                },
                "imageUri": {
                    "type": "string",
                    "description": "The container image to be run by the monitoring job."
                },
                "postAnalyticsProcessorSourceUri": {
                    "type": "string",
                    "description": "An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers."
                },
                "recordPreprocessorSourceUri": {
                    "type": "string",
                    "description": "An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers"
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionDataQualityBaselineConfig": {
            "type": "object",
            "properties": {
                "baseliningJobName": {
                    "type": "string"
                },
                "constraintsResource": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionConstraintsResource"
                },
                "statisticsResource": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionStatisticsResource"
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionDataQualityJobInput": {
            "type": "object",
            "properties": {
                "endpointInput": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionEndpointInput"
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionEndpointInput": {
            "type": "object",
            "properties": {
                "endpointName": {
                    "type": "string"
                },
                "localPath": {
                    "type": "string",
                    "description": "Path to the filesystem where the endpoint data is available to the container."
                },
                "s3DataDistributionType": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionEndpointInputS3DataDistributionType",
                    "description": "Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated"
                },
                "s3InputMode": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionEndpointInputS3InputMode",
                    "description": "Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File."
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionEndpointInputS3DataDistributionType": {
            "type": "string"
        },
        "aws-native:sagemaker:DataQualityJobDefinitionEndpointInputS3InputMode": {
            "type": "string"
        },
        "aws-native:sagemaker:DataQualityJobDefinitionMonitoringOutput": {
            "type": "object",
            "properties": {
                "s3Output": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionS3Output"
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionMonitoringOutputConfig": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption."
                },
                "monitoringOutputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionMonitoringOutput"
                    },
                    "description": "Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded."
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionMonitoringResources": {
            "type": "object",
            "properties": {
                "clusterConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionClusterConfig"
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionNetworkConfig": {
            "type": "object",
            "properties": {
                "enableInterContainerTrafficEncryption": {
                    "type": "boolean",
                    "description": "Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer."
                },
                "enableNetworkIsolation": {
                    "type": "boolean",
                    "description": "Whether to allow inbound and outbound network calls to and from the containers used for the processing job."
                },
                "vpcConfig": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionVpcConfig"
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionS3Output": {
            "type": "object",
            "properties": {
                "localPath": {
                    "type": "string",
                    "description": "The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data."
                },
                "s3UploadMode": {
                    "$ref": "#/types/aws-native:sagemaker:DataQualityJobDefinitionS3OutputS3UploadMode",
                    "description": "Whether to upload the results of the monitoring job continuously or after the job completes."
                },
                "s3Uri": {
                    "type": "string",
                    "description": "A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job."
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionS3OutputS3UploadMode": {
            "type": "string"
        },
        "aws-native:sagemaker:DataQualityJobDefinitionStatisticsResource": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "type": "string",
                    "description": "The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against."
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionStoppingCondition": {
            "type": "object",
            "properties": {
                "maxRuntimeInSeconds": {
                    "type": "integer",
                    "description": "The maximum runtime allowed in seconds."
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:DataQualityJobDefinitionVpcConfig": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field."
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the subnets in the VPC to which you want to connect to your monitoring jobs."
                }
            }
        },
        "aws-native:sagemaker:DeviceDevice": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the device"
                },
                "deviceName": {
                    "type": "string",
                    "description": "The name of the device"
                },
                "iotThingName": {
                    "type": "string",
                    "description": "AWS Internet of Things (IoT) object name."
                }
            }
        },
        "aws-native:sagemaker:DeviceFleetEdgeOutputConfig": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key id used for encryption on the S3 bucket"
                },
                "s3OutputLocation": {
                    "type": "string",
                    "description": "The Amazon Simple Storage (S3) bucket URI"
                }
            }
        },
        "aws-native:sagemaker:DeviceFleetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:DeviceTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:DomainAppNetworkAccessType": {
            "type": "string"
        },
        "aws-native:sagemaker:DomainAuthMode": {
            "type": "string"
        },
        "aws-native:sagemaker:DomainCustomImage": {
            "type": "object",
            "properties": {
                "appImageConfigName": {
                    "type": "string",
                    "description": "The Name of the AppImageConfig."
                },
                "imageName": {
                    "type": "string",
                    "description": "The name of the CustomImage. Must be unique to your account."
                },
                "imageVersionNumber": {
                    "type": "integer",
                    "description": "The version number of the CustomImage."
                }
            }
        },
        "aws-native:sagemaker:DomainJupyterServerAppSettings": {
            "type": "object",
            "properties": {
                "defaultResourceSpec": {
                    "$ref": "#/types/aws-native:sagemaker:DomainResourceSpec"
                }
            }
        },
        "aws-native:sagemaker:DomainKernelGatewayAppSettings": {
            "type": "object",
            "properties": {
                "customImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:DomainCustomImage"
                    },
                    "description": "A list of custom SageMaker images that are configured to run as a KernelGateway app."
                },
                "defaultResourceSpec": {
                    "$ref": "#/types/aws-native:sagemaker:DomainResourceSpec",
                    "description": "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app."
                }
            }
        },
        "aws-native:sagemaker:DomainResourceSpec": {
            "type": "object",
            "properties": {
                "instanceType": {
                    "$ref": "#/types/aws-native:sagemaker:DomainResourceSpecInstanceType",
                    "description": "The instance type that the image version runs on."
                },
                "sageMakerImageArn": {
                    "type": "string",
                    "description": "The ARN of the SageMaker image that the image version belongs to."
                },
                "sageMakerImageVersionArn": {
                    "type": "string",
                    "description": "The ARN of the image version created on the instance."
                }
            }
        },
        "aws-native:sagemaker:DomainResourceSpecInstanceType": {
            "type": "string"
        },
        "aws-native:sagemaker:DomainSharingSettings": {
            "type": "object",
            "properties": {
                "notebookOutputOption": {
                    "$ref": "#/types/aws-native:sagemaker:DomainSharingSettingsNotebookOutputOption",
                    "description": "Whether to include the notebook cell output when sharing the notebook. The default is Disabled."
                },
                "s3KmsKeyId": {
                    "type": "string",
                    "description": "When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket."
                },
                "s3OutputPath": {
                    "type": "string",
                    "description": "When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots."
                }
            }
        },
        "aws-native:sagemaker:DomainSharingSettingsNotebookOutputOption": {
            "type": "string"
        },
        "aws-native:sagemaker:DomainTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:sagemaker:DomainUserSettings": {
            "type": "object",
            "properties": {
                "executionRole": {
                    "type": "string",
                    "description": "The user profile Amazon Resource Name (ARN)."
                },
                "jupyterServerAppSettings": {
                    "$ref": "#/types/aws-native:sagemaker:DomainJupyterServerAppSettings",
                    "description": "The Jupyter server's app settings."
                },
                "kernelGatewayAppSettings": {
                    "$ref": "#/types/aws-native:sagemaker:DomainKernelGatewayAppSettings",
                    "description": "The kernel gateway app settings."
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication."
                },
                "sharingSettings": {
                    "$ref": "#/types/aws-native:sagemaker:DomainSharingSettings",
                    "description": "The sharing settings."
                }
            }
        },
        "aws-native:sagemaker:FeatureGroupFeatureDefinition": {
            "type": "object",
            "properties": {
                "featureName": {
                    "type": "string"
                },
                "featureType": {
                    "$ref": "#/types/aws-native:sagemaker:FeatureGroupFeatureDefinitionFeatureType"
                }
            }
        },
        "aws-native:sagemaker:FeatureGroupFeatureDefinitionFeatureType": {
            "type": "string"
        },
        "aws-native:sagemaker:FeatureGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:sagemaker:ImageTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionClusterConfig": {
            "type": "object",
            "properties": {
                "instanceCount": {
                    "type": "integer",
                    "description": "The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1."
                },
                "instanceType": {
                    "type": "string",
                    "description": "The ML compute instance type for the processing job."
                },
                "volumeKmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job."
                },
                "volumeSizeInGB": {
                    "type": "integer",
                    "description": "The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario."
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionConstraintsResource": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "type": "string",
                    "description": "The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against."
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionEndpointInput": {
            "type": "object",
            "properties": {
                "endTimeOffset": {
                    "type": "string",
                    "description": "Monitoring end time offset, e.g. PT0H"
                },
                "endpointName": {
                    "type": "string"
                },
                "featuresAttribute": {
                    "type": "string",
                    "description": "JSONpath to locate features in JSONlines dataset"
                },
                "inferenceAttribute": {
                    "type": "string",
                    "description": "Index or JSONpath to locate predicted label(s)"
                },
                "localPath": {
                    "type": "string",
                    "description": "Path to the filesystem where the endpoint data is available to the container."
                },
                "probabilityAttribute": {
                    "type": "string",
                    "description": "Index or JSONpath to locate probabilities"
                },
                "probabilityThresholdAttribute": {
                    "type": "number"
                },
                "s3DataDistributionType": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionEndpointInputS3DataDistributionType",
                    "description": "Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated"
                },
                "s3InputMode": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionEndpointInputS3InputMode",
                    "description": "Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File."
                },
                "startTimeOffset": {
                    "type": "string",
                    "description": "Monitoring start time offset, e.g. -PT1H"
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionEndpointInputS3DataDistributionType": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionEndpointInputS3InputMode": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionModelBiasAppSpecification": {
            "type": "object",
            "properties": {
                "configUri": {
                    "type": "string",
                    "description": "The S3 URI to an analysis configuration file"
                },
                "environment": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Sets the environment variables in the Docker container"
                },
                "imageUri": {
                    "type": "string",
                    "description": "The container image to be run by the monitoring job."
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionModelBiasBaselineConfig": {
            "type": "object",
            "properties": {
                "baseliningJobName": {
                    "type": "string"
                },
                "constraintsResource": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionConstraintsResource"
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionModelBiasJobInput": {
            "type": "object",
            "properties": {
                "endpointInput": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionEndpointInput"
                },
                "groundTruthS3Input": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionMonitoringGroundTruthS3Input"
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionMonitoringGroundTruthS3Input": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "type": "string",
                    "description": "A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job."
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionMonitoringOutput": {
            "type": "object",
            "properties": {
                "s3Output": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionS3Output"
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionMonitoringOutputConfig": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption."
                },
                "monitoringOutputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionMonitoringOutput"
                    },
                    "description": "Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded."
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionMonitoringResources": {
            "type": "object",
            "properties": {
                "clusterConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionClusterConfig"
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionNetworkConfig": {
            "type": "object",
            "properties": {
                "enableInterContainerTrafficEncryption": {
                    "type": "boolean",
                    "description": "Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer."
                },
                "enableNetworkIsolation": {
                    "type": "boolean",
                    "description": "Whether to allow inbound and outbound network calls to and from the containers used for the processing job."
                },
                "vpcConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionVpcConfig"
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionS3Output": {
            "type": "object",
            "properties": {
                "localPath": {
                    "type": "string",
                    "description": "The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data."
                },
                "s3UploadMode": {
                    "$ref": "#/types/aws-native:sagemaker:ModelBiasJobDefinitionS3OutputS3UploadMode",
                    "description": "Whether to upload the results of the monitoring job continuously or after the job completes."
                },
                "s3Uri": {
                    "type": "string",
                    "description": "A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job."
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionS3OutputS3UploadMode": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionStoppingCondition": {
            "type": "object",
            "properties": {
                "maxRuntimeInSeconds": {
                    "type": "integer",
                    "description": "The maximum runtime allowed in seconds."
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:ModelBiasJobDefinitionVpcConfig": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field."
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the subnets in the VPC to which you want to connect to your monitoring jobs."
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionClusterConfig": {
            "type": "object",
            "properties": {
                "instanceCount": {
                    "type": "integer",
                    "description": "The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1."
                },
                "instanceType": {
                    "type": "string",
                    "description": "The ML compute instance type for the processing job."
                },
                "volumeKmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job."
                },
                "volumeSizeInGB": {
                    "type": "integer",
                    "description": "The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario."
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionConstraintsResource": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "type": "string",
                    "description": "The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against."
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionEndpointInput": {
            "type": "object",
            "properties": {
                "endpointName": {
                    "type": "string"
                },
                "featuresAttribute": {
                    "type": "string",
                    "description": "JSONpath to locate features in JSONlines dataset"
                },
                "inferenceAttribute": {
                    "type": "string",
                    "description": "Index or JSONpath to locate predicted label(s)"
                },
                "localPath": {
                    "type": "string",
                    "description": "Path to the filesystem where the endpoint data is available to the container."
                },
                "probabilityAttribute": {
                    "type": "string",
                    "description": "Index or JSONpath to locate probabilities"
                },
                "s3DataDistributionType": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType",
                    "description": "Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated"
                },
                "s3InputMode": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionEndpointInputS3InputMode",
                    "description": "Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File."
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionEndpointInputS3InputMode": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification": {
            "type": "object",
            "properties": {
                "configUri": {
                    "type": "string",
                    "description": "The S3 URI to an analysis configuration file"
                },
                "environment": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Sets the environment variables in the Docker container"
                },
                "imageUri": {
                    "type": "string",
                    "description": "The container image to be run by the monitoring job."
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig": {
            "type": "object",
            "properties": {
                "baseliningJobName": {
                    "type": "string"
                },
                "constraintsResource": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionConstraintsResource"
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionModelExplainabilityJobInput": {
            "type": "object",
            "properties": {
                "endpointInput": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionEndpointInput"
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionMonitoringOutput": {
            "type": "object",
            "properties": {
                "s3Output": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionS3Output"
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionMonitoringOutputConfig": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption."
                },
                "monitoringOutputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionMonitoringOutput"
                    },
                    "description": "Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded."
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionMonitoringResources": {
            "type": "object",
            "properties": {
                "clusterConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionClusterConfig"
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionNetworkConfig": {
            "type": "object",
            "properties": {
                "enableInterContainerTrafficEncryption": {
                    "type": "boolean",
                    "description": "Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer."
                },
                "enableNetworkIsolation": {
                    "type": "boolean",
                    "description": "Whether to allow inbound and outbound network calls to and from the containers used for the processing job."
                },
                "vpcConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionVpcConfig"
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionS3Output": {
            "type": "object",
            "properties": {
                "localPath": {
                    "type": "string",
                    "description": "The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data."
                },
                "s3UploadMode": {
                    "$ref": "#/types/aws-native:sagemaker:ModelExplainabilityJobDefinitionS3OutputS3UploadMode",
                    "description": "Whether to upload the results of the monitoring job continuously or after the job completes."
                },
                "s3Uri": {
                    "type": "string",
                    "description": "A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job."
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionS3OutputS3UploadMode": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionStoppingCondition": {
            "type": "object",
            "properties": {
                "maxRuntimeInSeconds": {
                    "type": "integer",
                    "description": "The maximum runtime allowed in seconds."
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:ModelExplainabilityJobDefinitionVpcConfig": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field."
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the subnets in the VPC to which you want to connect to your monitoring jobs."
                }
            }
        },
        "aws-native:sagemaker:ModelPackageGroupModelPackageGroupStatus": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelPackageGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionClusterConfig": {
            "type": "object",
            "properties": {
                "instanceCount": {
                    "type": "integer",
                    "description": "The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1."
                },
                "instanceType": {
                    "type": "string",
                    "description": "The ML compute instance type for the processing job."
                },
                "volumeKmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job."
                },
                "volumeSizeInGB": {
                    "type": "integer",
                    "description": "The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario."
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionConstraintsResource": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "type": "string",
                    "description": "The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against."
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionEndpointInput": {
            "type": "object",
            "properties": {
                "endTimeOffset": {
                    "type": "string",
                    "description": "Monitoring end time offset, e.g. PT0H"
                },
                "endpointName": {
                    "type": "string"
                },
                "inferenceAttribute": {
                    "type": "string",
                    "description": "Index or JSONpath to locate predicted label(s)"
                },
                "localPath": {
                    "type": "string",
                    "description": "Path to the filesystem where the endpoint data is available to the container."
                },
                "probabilityAttribute": {
                    "type": "string",
                    "description": "Index or JSONpath to locate probabilities"
                },
                "probabilityThresholdAttribute": {
                    "type": "number"
                },
                "s3DataDistributionType": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionEndpointInputS3DataDistributionType",
                    "description": "Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated"
                },
                "s3InputMode": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionEndpointInputS3InputMode",
                    "description": "Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File."
                },
                "startTimeOffset": {
                    "type": "string",
                    "description": "Monitoring start time offset, e.g. -PT1H"
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionEndpointInputS3DataDistributionType": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionEndpointInputS3InputMode": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionModelQualityAppSpecification": {
            "type": "object",
            "properties": {
                "containerArguments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of arguments for the container used to run the monitoring job."
                },
                "containerEntrypoint": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the entrypoint for a container used to run the monitoring job."
                },
                "environment": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Sets the environment variables in the Docker container"
                },
                "imageUri": {
                    "type": "string",
                    "description": "The container image to be run by the monitoring job."
                },
                "postAnalyticsProcessorSourceUri": {
                    "type": "string",
                    "description": "An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers."
                },
                "problemType": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionProblemType"
                },
                "recordPreprocessorSourceUri": {
                    "type": "string",
                    "description": "An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers"
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionModelQualityBaselineConfig": {
            "type": "object",
            "properties": {
                "baseliningJobName": {
                    "type": "string"
                },
                "constraintsResource": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionConstraintsResource"
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionModelQualityJobInput": {
            "type": "object",
            "properties": {
                "endpointInput": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionEndpointInput"
                },
                "groundTruthS3Input": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionMonitoringGroundTruthS3Input"
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionMonitoringGroundTruthS3Input": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "type": "string",
                    "description": "A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job."
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionMonitoringOutput": {
            "type": "object",
            "properties": {
                "s3Output": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionS3Output"
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionMonitoringOutputConfig": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption."
                },
                "monitoringOutputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionMonitoringOutput"
                    },
                    "description": "Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded."
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionMonitoringResources": {
            "type": "object",
            "properties": {
                "clusterConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionClusterConfig"
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionNetworkConfig": {
            "type": "object",
            "properties": {
                "enableInterContainerTrafficEncryption": {
                    "type": "boolean",
                    "description": "Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer."
                },
                "enableNetworkIsolation": {
                    "type": "boolean",
                    "description": "Whether to allow inbound and outbound network calls to and from the containers used for the processing job."
                },
                "vpcConfig": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionVpcConfig"
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionProblemType": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionS3Output": {
            "type": "object",
            "properties": {
                "localPath": {
                    "type": "string",
                    "description": "The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data."
                },
                "s3UploadMode": {
                    "$ref": "#/types/aws-native:sagemaker:ModelQualityJobDefinitionS3OutputS3UploadMode",
                    "description": "Whether to upload the results of the monitoring job continuously or after the job completes."
                },
                "s3Uri": {
                    "type": "string",
                    "description": "A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job."
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionS3OutputS3UploadMode": {
            "type": "string"
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionStoppingCondition": {
            "type": "object",
            "properties": {
                "maxRuntimeInSeconds": {
                    "type": "integer",
                    "description": "The maximum runtime allowed in seconds."
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:ModelQualityJobDefinitionVpcConfig": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field."
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the subnets in the VPC to which you want to connect to your monitoring jobs."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleBaselineConfig": {
            "type": "object",
            "properties": {
                "constraintsResource": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleConstraintsResource"
                },
                "statisticsResource": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleStatisticsResource"
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleClusterConfig": {
            "type": "object",
            "properties": {
                "instanceCount": {
                    "type": "integer",
                    "description": "The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1."
                },
                "instanceType": {
                    "type": "string",
                    "description": "The ML compute instance type for the processing job."
                },
                "volumeKmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job."
                },
                "volumeSizeInGB": {
                    "type": "integer",
                    "description": "The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleConstraintsResource": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "type": "string",
                    "description": "The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleEndpointInput": {
            "type": "object",
            "properties": {
                "endpointName": {
                    "type": "string"
                },
                "localPath": {
                    "type": "string",
                    "description": "Path to the filesystem where the endpoint data is available to the container."
                },
                "s3DataDistributionType": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleEndpointInputS3DataDistributionType",
                    "description": "Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated"
                },
                "s3InputMode": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleEndpointInputS3InputMode",
                    "description": "Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleEndpointInputS3DataDistributionType": {
            "type": "string"
        },
        "aws-native:sagemaker:MonitoringScheduleEndpointInputS3InputMode": {
            "type": "string"
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringAppSpecification": {
            "type": "object",
            "properties": {
                "containerArguments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of arguments for the container used to run the monitoring job."
                },
                "containerEntrypoint": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the entrypoint for a container used to run the monitoring job."
                },
                "imageUri": {
                    "type": "string",
                    "description": "The container image to be run by the monitoring job."
                },
                "postAnalyticsProcessorSourceUri": {
                    "type": "string",
                    "description": "An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers."
                },
                "recordPreprocessorSourceUri": {
                    "type": "string",
                    "description": "An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers"
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringExecutionSummary": {
            "type": "object",
            "properties": {
                "creationTime": {
                    "type": "string",
                    "description": "The time at which the monitoring job was created."
                },
                "endpointName": {
                    "type": "string"
                },
                "failureReason": {
                    "type": "string",
                    "description": "Contains the reason a monitoring job failed, if it failed."
                },
                "lastModifiedTime": {
                    "type": "string",
                    "description": "A timestamp that indicates the last time the monitoring job was modified."
                },
                "monitoringExecutionStatus": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus",
                    "description": "The status of the monitoring job."
                },
                "monitoringScheduleName": {
                    "type": "string"
                },
                "processingJobArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the monitoring job."
                },
                "scheduledTime": {
                    "type": "string",
                    "description": "The time the monitoring job was scheduled."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus": {
            "type": "string"
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringInput": {
            "type": "object",
            "properties": {
                "endpointInput": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleEndpointInput"
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringJobDefinition": {
            "type": "object",
            "properties": {
                "baselineConfig": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleBaselineConfig"
                },
                "environment": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Sets the environment variables in the Docker container"
                },
                "monitoringAppSpecification": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringAppSpecification"
                },
                "monitoringInputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringInput"
                    }
                },
                "monitoringOutputConfig": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringOutputConfig"
                },
                "monitoringResources": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringResources"
                },
                "networkConfig": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleNetworkConfig"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
                },
                "stoppingCondition": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleStoppingCondition"
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringOutput": {
            "type": "object",
            "properties": {
                "s3Output": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleS3Output"
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringOutputConfig": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "type": "string",
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption."
                },
                "monitoringOutputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringOutput"
                    },
                    "description": "Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringResources": {
            "type": "object",
            "properties": {
                "clusterConfig": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleClusterConfig"
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringScheduleConfig": {
            "type": "object",
            "properties": {
                "monitoringJobDefinition": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringJobDefinition"
                },
                "monitoringJobDefinitionName": {
                    "type": "string",
                    "description": "Name of the job definition"
                },
                "monitoringType": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleMonitoringType"
                },
                "scheduleConfig": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleScheduleConfig"
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringScheduleStatus": {
            "type": "string"
        },
        "aws-native:sagemaker:MonitoringScheduleMonitoringType": {
            "type": "string"
        },
        "aws-native:sagemaker:MonitoringScheduleNetworkConfig": {
            "type": "object",
            "properties": {
                "enableInterContainerTrafficEncryption": {
                    "type": "boolean",
                    "description": "Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer."
                },
                "enableNetworkIsolation": {
                    "type": "boolean",
                    "description": "Whether to allow inbound and outbound network calls to and from the containers used for the processing job."
                },
                "vpcConfig": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleVpcConfig"
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleS3Output": {
            "type": "object",
            "properties": {
                "localPath": {
                    "type": "string",
                    "description": "The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data."
                },
                "s3UploadMode": {
                    "$ref": "#/types/aws-native:sagemaker:MonitoringScheduleS3OutputS3UploadMode",
                    "description": "Whether to upload the results of the monitoring job continuously or after the job completes."
                },
                "s3Uri": {
                    "type": "string",
                    "description": "A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleS3OutputS3UploadMode": {
            "type": "string"
        },
        "aws-native:sagemaker:MonitoringScheduleScheduleConfig": {
            "type": "object",
            "properties": {
                "scheduleExpression": {
                    "type": "string",
                    "description": "A cron expression that describes details about the monitoring schedule."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleStatisticsResource": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "type": "string",
                    "description": "The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleStoppingCondition": {
            "type": "object",
            "properties": {
                "maxRuntimeInSeconds": {
                    "type": "integer",
                    "description": "The maximum runtime allowed in seconds."
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:MonitoringScheduleVpcConfig": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field."
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the subnets in the VPC to which you want to connect to your monitoring jobs."
                }
            }
        },
        "aws-native:sagemaker:PipelineTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:sagemaker:ProjectProjectStatus": {
            "type": "string"
        },
        "aws-native:sagemaker:ProjectTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:sagemaker:UserProfileCustomImage": {
            "type": "object",
            "properties": {
                "appImageConfigName": {
                    "type": "string",
                    "description": "The Name of the AppImageConfig."
                },
                "imageName": {
                    "type": "string",
                    "description": "The name of the CustomImage. Must be unique to your account."
                },
                "imageVersionNumber": {
                    "type": "integer",
                    "description": "The version number of the CustomImage."
                }
            }
        },
        "aws-native:sagemaker:UserProfileJupyterServerAppSettings": {
            "type": "object",
            "properties": {
                "defaultResourceSpec": {
                    "$ref": "#/types/aws-native:sagemaker:UserProfileResourceSpec"
                }
            }
        },
        "aws-native:sagemaker:UserProfileKernelGatewayAppSettings": {
            "type": "object",
            "properties": {
                "customImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:sagemaker:UserProfileCustomImage"
                    },
                    "description": "A list of custom SageMaker images that are configured to run as a KernelGateway app."
                },
                "defaultResourceSpec": {
                    "$ref": "#/types/aws-native:sagemaker:UserProfileResourceSpec",
                    "description": "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app."
                }
            }
        },
        "aws-native:sagemaker:UserProfileResourceSpec": {
            "type": "object",
            "properties": {
                "instanceType": {
                    "$ref": "#/types/aws-native:sagemaker:UserProfileResourceSpecInstanceType",
                    "description": "The instance type that the image version runs on."
                },
                "sageMakerImageArn": {
                    "type": "string",
                    "description": "The ARN of the SageMaker image that the image version belongs to."
                },
                "sageMakerImageVersionArn": {
                    "type": "string",
                    "description": "The ARN of the image version created on the instance."
                }
            }
        },
        "aws-native:sagemaker:UserProfileResourceSpecInstanceType": {
            "type": "string"
        },
        "aws-native:sagemaker:UserProfileSharingSettings": {
            "type": "object",
            "properties": {
                "notebookOutputOption": {
                    "$ref": "#/types/aws-native:sagemaker:UserProfileSharingSettingsNotebookOutputOption",
                    "description": "Whether to include the notebook cell output when sharing the notebook. The default is Disabled."
                },
                "s3KmsKeyId": {
                    "type": "string",
                    "description": "When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket."
                },
                "s3OutputPath": {
                    "type": "string",
                    "description": "When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots."
                }
            }
        },
        "aws-native:sagemaker:UserProfileSharingSettingsNotebookOutputOption": {
            "type": "string"
        },
        "aws-native:sagemaker:UserProfileTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:sagemaker:UserProfileUserSettings": {
            "type": "object",
            "properties": {
                "executionRole": {
                    "type": "string",
                    "description": "The user profile Amazon Resource Name (ARN)."
                },
                "jupyterServerAppSettings": {
                    "$ref": "#/types/aws-native:sagemaker:UserProfileJupyterServerAppSettings",
                    "description": "The Jupyter server's app settings."
                },
                "kernelGatewayAppSettings": {
                    "$ref": "#/types/aws-native:sagemaker:UserProfileKernelGatewayAppSettings",
                    "description": "The kernel gateway app settings."
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication."
                },
                "sharingSettings": {
                    "$ref": "#/types/aws-native:sagemaker:UserProfileSharingSettings",
                    "description": "The sharing settings."
                }
            }
        },
        "aws-native:servicecatalog:CloudFormationProvisionedProductAcceptLanguage": {
            "type": "string"
        },
        "aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningParameter": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningPreferences": {
            "type": "object",
            "properties": {
                "stackSetAccounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stackSetFailureToleranceCount": {
                    "type": "integer"
                },
                "stackSetFailureTolerancePercentage": {
                    "type": "integer"
                },
                "stackSetMaxConcurrencyCount": {
                    "type": "integer"
                },
                "stackSetMaxConcurrencyPercentage": {
                    "type": "integer"
                },
                "stackSetOperationType": {
                    "$ref": "#/types/aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType"
                },
                "stackSetRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:servicecatalog:CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType": {
            "type": "string"
        },
        "aws-native:servicecatalog:CloudFormationProvisionedProductTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:servicecatalog:ServiceActionAcceptLanguage": {
            "type": "string"
        },
        "aws-native:servicecatalog:ServiceActionDefinitionParameter": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:servicecatalog:ServiceActionDefinitionType": {
            "type": "string"
        },
        "aws-native:servicecatalogappregistry:ApplicationTags": {
            "type": "object"
        },
        "aws-native:servicecatalogappregistry:AttributeGroupTags": {
            "type": "object"
        },
        "aws-native:servicecatalogappregistry:ResourceAssociationResourceType": {
            "type": "string"
        },
        "aws-native:ses:ContactListTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ses:ContactListTopic": {
            "type": "object",
            "properties": {
                "defaultSubscriptionStatus": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the topic."
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the topic."
                },
                "topicName": {
                    "type": "string",
                    "description": "The name of the topic."
                }
            }
        },
        "aws-native:signer:SigningProfilePlatformId": {
            "type": "string"
        },
        "aws-native:signer:SigningProfileSignatureValidityPeriod": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/types/aws-native:signer:SigningProfileSignatureValidityPeriodType"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "aws-native:signer:SigningProfileSignatureValidityPeriodType": {
            "type": "string"
        },
        "aws-native:signer:SigningProfileTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:ssm:AssociationComplianceSeverity": {
            "type": "string"
        },
        "aws-native:ssm:AssociationInstanceAssociationOutputLocation": {
            "type": "object",
            "properties": {
                "s3Location": {
                    "$ref": "#/types/aws-native:ssm:AssociationS3OutputLocation"
                }
            }
        },
        "aws-native:ssm:AssociationS3OutputLocation": {
            "type": "object",
            "properties": {
                "outputS3BucketName": {
                    "type": "string"
                },
                "outputS3KeyPrefix": {
                    "type": "string"
                },
                "outputS3Region": {
                    "type": "string"
                }
            }
        },
        "aws-native:ssm:AssociationSyncCompliance": {
            "type": "string"
        },
        "aws-native:ssm:AssociationTarget": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:ssm:DocumentAttachmentsSource": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/types/aws-native:ssm:DocumentAttachmentsSourceKey",
                    "description": "The key of a key-value pair that identifies the location of an attachment to a document."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the document attachment file."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value of a key-value pair that identifies the location of an attachment to a document. The format for Value depends on the type of key you specify."
                }
            }
        },
        "aws-native:ssm:DocumentAttachmentsSourceKey": {
            "type": "string"
        },
        "aws-native:ssm:DocumentDocumentFormat": {
            "type": "string"
        },
        "aws-native:ssm:DocumentDocumentRequires": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the required SSM document. The name can be an Amazon Resource Name (ARN)."
                },
                "version": {
                    "type": "string",
                    "description": "The document version required by the current document."
                }
            }
        },
        "aws-native:ssm:DocumentDocumentType": {
            "type": "string"
        },
        "aws-native:ssm:DocumentTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The name of the tag."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag."
                }
            }
        },
        "aws-native:ssm:ResourceDataSyncAwsOrganizationsSource": {
            "type": "object",
            "properties": {
                "organizationSourceType": {
                    "type": "string"
                },
                "organizationalUnits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:ssm:ResourceDataSyncS3Destination": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                },
                "bucketRegion": {
                    "type": "string"
                },
                "kMSKeyArn": {
                    "type": "string"
                },
                "syncFormat": {
                    "type": "string"
                }
            }
        },
        "aws-native:ssm:ResourceDataSyncSyncSource": {
            "type": "object",
            "properties": {
                "awsOrganizationsSource": {
                    "$ref": "#/types/aws-native:ssm:ResourceDataSyncAwsOrganizationsSource"
                },
                "includeFutureRegions": {
                    "type": "boolean"
                },
                "sourceRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                }
            }
        },
        "aws-native:ssmcontacts:ContactChannelChannelType": {
            "type": "string"
        },
        "aws-native:ssmcontacts:ContactChannelTargetInfo": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the contact channel."
                },
                "retryIntervalInMinutes": {
                    "type": "integer",
                    "description": "The number of minutes to wait to retry sending engagement in the case the engagement initially fails."
                }
            }
        },
        "aws-native:ssmcontacts:ContactContactTargetInfo": {
            "type": "object",
            "properties": {
                "contactId": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the contact."
                },
                "isEssential": {
                    "type": "boolean",
                    "description": "A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan."
                }
            }
        },
        "aws-native:ssmcontacts:ContactStage": {
            "type": "object",
            "properties": {
                "durationInMinutes": {
                    "type": "integer",
                    "description": "The time to wait until beginning the next stage."
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmcontacts:ContactTargets"
                    },
                    "description": "The contacts or contact methods that the escalation plan or engagement plan is engaging."
                }
            }
        },
        "aws-native:ssmcontacts:ContactTargets": {
            "type": "object",
            "properties": {
                "channelTargetInfo": {
                    "$ref": "#/types/aws-native:ssmcontacts:ContactChannelTargetInfo"
                },
                "contactTargetInfo": {
                    "$ref": "#/types/aws-native:ssmcontacts:ContactContactTargetInfo"
                }
            }
        },
        "aws-native:ssmcontacts:ContactType": {
            "type": "string"
        },
        "aws-native:ssmincidents:ReplicationSetRegionConfiguration": {
            "type": "object",
            "properties": {
                "sseKmsKeyId": {
                    "type": "string"
                }
            }
        },
        "aws-native:ssmincidents:ReplicationSetReplicationRegion": {
            "type": "object",
            "properties": {
                "regionConfiguration": {
                    "$ref": "#/types/aws-native:ssmincidents:ReplicationSetRegionConfiguration"
                },
                "regionName": {
                    "type": "string"
                }
            }
        },
        "aws-native:ssmincidents:ResponsePlanAction": {
            "type": "object",
            "properties": {
                "ssmAutomation": {
                    "$ref": "#/types/aws-native:ssmincidents:ResponsePlanSsmAutomation"
                }
            }
        },
        "aws-native:ssmincidents:ResponsePlanChatChannel": {
            "type": "object",
            "properties": {
                "chatbotSns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:ssmincidents:ResponsePlanIncidentTemplate": {
            "type": "object",
            "properties": {
                "dedupeString": {
                    "type": "string",
                    "description": "The deduplication string."
                },
                "impact": {
                    "type": "integer",
                    "description": "The impact value."
                },
                "notificationTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmincidents:ResponsePlanNotificationTargetItem"
                    },
                    "description": "The list of notification targets."
                },
                "summary": {
                    "type": "string",
                    "description": "The summary string."
                },
                "title": {
                    "type": "string",
                    "description": "The title string."
                }
            }
        },
        "aws-native:ssmincidents:ResponsePlanNotificationTargetItem": {
            "type": "object",
            "properties": {
                "snsTopicArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:ssmincidents:ResponsePlanSsmAutomation": {
            "type": "object",
            "properties": {
                "documentName": {
                    "type": "string",
                    "description": "The document name to use when starting the SSM automation document."
                },
                "documentVersion": {
                    "type": "string",
                    "description": "The version of the document to use when starting the SSM automation document."
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:ssmincidents:ResponsePlanSsmParameter"
                    },
                    "description": "The parameters to set when starting the SSM automation document."
                },
                "roleArn": {
                    "type": "string",
                    "description": "The role ARN to use when starting the SSM automation document."
                },
                "targetAccount": {
                    "$ref": "#/types/aws-native:ssmincidents:ResponsePlanSsmAutomationTargetAccount",
                    "description": "The account type to use when starting the SSM automation document."
                }
            }
        },
        "aws-native:ssmincidents:ResponsePlanSsmAutomationTargetAccount": {
            "type": "string"
        },
        "aws-native:ssmincidents:ResponsePlanSsmParameter": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:ssmincidents:ResponsePlanTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:sso:AssignmentPrincipalType": {
            "type": "string"
        },
        "aws-native:sso:AssignmentTargetType": {
            "type": "string"
        },
        "aws-native:sso:InstanceAccessControlAttributeConfigurationAccessControlAttribute": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/aws-native:sso:InstanceAccessControlAttributeConfigurationAccessControlAttributeValue"
                }
            }
        },
        "aws-native:sso:InstanceAccessControlAttributeConfigurationAccessControlAttributeValue": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:sso:PermissionSetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:stepfunctions:StateMachineCloudWatchLogsLogGroup": {
            "type": "object",
            "properties": {
                "logGroupArn": {
                    "type": "string"
                }
            }
        },
        "aws-native:stepfunctions:StateMachineDefinition": {
            "type": "object"
        },
        "aws-native:stepfunctions:StateMachineDefinitionSubstitutions": {
            "type": "object"
        },
        "aws-native:stepfunctions:StateMachineLogDestination": {
            "type": "object",
            "properties": {
                "cloudWatchLogsLogGroup": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineCloudWatchLogsLogGroup"
                }
            }
        },
        "aws-native:stepfunctions:StateMachineLoggingConfiguration": {
            "type": "object",
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:stepfunctions:StateMachineLogDestination"
                    }
                },
                "includeExecutionData": {
                    "type": "boolean"
                },
                "level": {
                    "$ref": "#/types/aws-native:stepfunctions:StateMachineLoggingConfigurationLevel"
                }
            }
        },
        "aws-native:stepfunctions:StateMachineLoggingConfigurationLevel": {
            "type": "string"
        },
        "aws-native:stepfunctions:StateMachineS3Location": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "aws-native:stepfunctions:StateMachineStateMachineType": {
            "type": "string"
        },
        "aws-native:stepfunctions:StateMachineTagsEntry": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:stepfunctions:StateMachineTracingConfiguration": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:synthetics:CanaryBaseScreenshot": {
            "type": "object",
            "properties": {
                "ignoreCoordinates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of coordinates of rectangles to be ignored during visual testing"
                },
                "screenshotName": {
                    "type": "string",
                    "description": "Name of the screenshot to be used as base reference for visual testing"
                }
            }
        },
        "aws-native:synthetics:CanaryCode": {
            "type": "object",
            "properties": {
                "handler": {
                    "type": "string"
                },
                "s3Bucket": {
                    "type": "string"
                },
                "s3Key": {
                    "type": "string"
                },
                "s3ObjectVersion": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                }
            }
        },
        "aws-native:synthetics:CanaryRunConfig": {
            "type": "object",
            "properties": {
                "activeTracing": {
                    "type": "boolean",
                    "description": "Enable active tracing if set to true"
                },
                "environmentVariables": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Environment variable key-value pairs."
                },
                "memoryInMB": {
                    "type": "integer",
                    "description": "Provide maximum memory available for canary in MB"
                },
                "timeoutInSeconds": {
                    "type": "integer",
                    "description": "Provide maximum canary timeout per run in seconds"
                }
            }
        },
        "aws-native:synthetics:CanarySchedule": {
            "type": "object",
            "properties": {
                "durationInSeconds": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                }
            }
        },
        "aws-native:synthetics:CanaryTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                },
                "value": {
                    "type": "string",
                    "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
                }
            }
        },
        "aws-native:synthetics:CanaryVPCConfig": {
            "type": "object",
            "properties": {
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            }
        },
        "aws-native:synthetics:CanaryVisualReference": {
            "type": "object",
            "properties": {
                "baseCanaryRunId": {
                    "type": "string",
                    "description": "Canary run id to be used as base reference for visual testing"
                },
                "baseScreenshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:synthetics:CanaryBaseScreenshot"
                    },
                    "description": "List of screenshots used as base reference for visual testing"
                }
            }
        },
        "aws-native:timestream:DatabaseTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:timestream:TableTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:IPSetIPAddressVersion": {
            "type": "string"
        },
        "aws-native:wafv2:IPSetScope": {
            "type": "string"
        },
        "aws-native:wafv2:IPSetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:LoggingConfigurationFieldToMatch": {
            "type": "object",
            "properties": {
                "jsonBody": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Inspect the request body as JSON. The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form. "
                },
                "method": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform. "
                },
                "queryString": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Inspect the query string. This is the part of a URL that appears after a ? character, if any. "
                },
                "singleHeader": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Inspect a single header. Provide the name of the header to inspect, for example, User-Agent or Referer. This setting isn't case sensitive."
                },
                "uriPath": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Inspect the request URI path. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg. "
                }
            }
        },
        "aws-native:wafv2:RegexPatternSetScope": {
            "type": "string"
        },
        "aws-native:wafv2:RegexPatternSetTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:RuleGroupAndStatement": {
            "type": "object",
            "properties": {
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupStatement"
                    }
                }
            }
        },
        "aws-native:wafv2:RuleGroupBodyParsingFallbackBehavior": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupByteMatchStatement": {
            "type": "object",
            "properties": {
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupFieldToMatch"
                },
                "positionalConstraint": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupPositionalConstraint"
                },
                "searchString": {
                    "type": "string"
                },
                "searchStringBase64": {
                    "type": "string"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupTextTransformation"
                    }
                }
            }
        },
        "aws-native:wafv2:RuleGroupCustomResponseBodies": {
            "type": "object"
        },
        "aws-native:wafv2:RuleGroupFieldToMatch": {
            "type": "object",
            "properties": {
                "allQueryArguments": {
                    "$ref": "pulumi.json#/Any",
                    "description": "All query arguments of a web request."
                },
                "body": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The body of a web request. This immediately follows the request headers."
                },
                "jsonBody": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupJsonBody"
                },
                "method": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform."
                },
                "queryString": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The query string of a web request. This is the part of a URL that appears after a ? character, if any."
                },
                "singleHeader": {
                    "$ref": "pulumi.json#/Any"
                },
                "singleQueryArgument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive."
                },
                "uriPath": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg."
                }
            }
        },
        "aws-native:wafv2:RuleGroupForwardedIPConfiguration": {
            "type": "object",
            "properties": {
                "fallbackBehavior": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupForwardedIPConfigurationFallbackBehavior"
                },
                "headerName": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:RuleGroupForwardedIPConfigurationFallbackBehavior": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupGeoMatchStatement": {
            "type": "object",
            "properties": {
                "countryCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "forwardedIPConfig": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupForwardedIPConfiguration"
                }
            }
        },
        "aws-native:wafv2:RuleGroupIPSetForwardedIPConfiguration": {
            "type": "object",
            "properties": {
                "fallbackBehavior": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupIPSetForwardedIPConfigurationFallbackBehavior"
                },
                "headerName": {
                    "type": "string"
                },
                "position": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupIPSetForwardedIPConfigurationPosition"
                }
            }
        },
        "aws-native:wafv2:RuleGroupIPSetForwardedIPConfigurationFallbackBehavior": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupIPSetForwardedIPConfigurationPosition": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupIPSetReferenceStatement": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "iPSetForwardedIPConfig": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupIPSetForwardedIPConfiguration"
                }
            }
        },
        "aws-native:wafv2:RuleGroupJsonBody": {
            "type": "object",
            "properties": {
                "invalidFallbackBehavior": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupBodyParsingFallbackBehavior"
                },
                "matchPattern": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupJsonMatchPattern"
                },
                "matchScope": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupJsonMatchScope"
                }
            }
        },
        "aws-native:wafv2:RuleGroupJsonMatchPattern": {
            "type": "object",
            "properties": {
                "all": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Inspect all parts of the web request's JSON body."
                },
                "includedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:wafv2:RuleGroupJsonMatchScope": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupLabel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:RuleGroupLabelMatchScope": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupLabelMatchStatement": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupLabelMatchScope"
                }
            }
        },
        "aws-native:wafv2:RuleGroupLabelSummary": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:RuleGroupNotStatement": {
            "type": "object",
            "properties": {
                "statement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupStatement"
                }
            }
        },
        "aws-native:wafv2:RuleGroupOrStatement": {
            "type": "object",
            "properties": {
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupStatement"
                    }
                }
            }
        },
        "aws-native:wafv2:RuleGroupPositionalConstraint": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupRateBasedStatement": {
            "type": "object",
            "properties": {
                "aggregateKeyType": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupRateBasedStatementAggregateKeyType"
                },
                "forwardedIPConfig": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupForwardedIPConfiguration"
                },
                "limit": {
                    "type": "integer"
                },
                "scopeDownStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupStatement"
                }
            }
        },
        "aws-native:wafv2:RuleGroupRateBasedStatementAggregateKeyType": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupRegexPatternSetReferenceStatement": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupFieldToMatch"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupTextTransformation"
                    }
                }
            }
        },
        "aws-native:wafv2:RuleGroupRule": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupRuleAction"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "ruleLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupLabel"
                    },
                    "description": "Collection of Rule Labels."
                },
                "statement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupStatement"
                },
                "visibilityConfig": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupVisibilityConfig"
                }
            }
        },
        "aws-native:wafv2:RuleGroupRuleAction": {
            "type": "object",
            "properties": {
                "allow": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Allow traffic towards application."
                },
                "block": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Block traffic towards application."
                },
                "count": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Count traffic towards application."
                }
            }
        },
        "aws-native:wafv2:RuleGroupScope": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupSizeConstraintStatement": {
            "type": "object",
            "properties": {
                "comparisonOperator": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupSizeConstraintStatementComparisonOperator"
                },
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupFieldToMatch"
                },
                "size": {
                    "type": "number"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupTextTransformation"
                    }
                }
            }
        },
        "aws-native:wafv2:RuleGroupSizeConstraintStatementComparisonOperator": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupSqliMatchStatement": {
            "type": "object",
            "properties": {
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupFieldToMatch"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupTextTransformation"
                    }
                }
            }
        },
        "aws-native:wafv2:RuleGroupStatement": {
            "type": "object",
            "properties": {
                "andStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupAndStatement"
                },
                "byteMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupByteMatchStatement"
                },
                "geoMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupGeoMatchStatement"
                },
                "iPSetReferenceStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupIPSetReferenceStatement"
                },
                "labelMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupLabelMatchStatement"
                },
                "notStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupNotStatement"
                },
                "orStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupOrStatement"
                },
                "rateBasedStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupRateBasedStatement"
                },
                "regexPatternSetReferenceStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupRegexPatternSetReferenceStatement"
                },
                "sizeConstraintStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupSizeConstraintStatement"
                },
                "sqliMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupSqliMatchStatement"
                },
                "xssMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupXssMatchStatement"
                }
            }
        },
        "aws-native:wafv2:RuleGroupTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:RuleGroupTextTransformation": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupTextTransformationType"
                }
            }
        },
        "aws-native:wafv2:RuleGroupTextTransformationType": {
            "type": "string"
        },
        "aws-native:wafv2:RuleGroupVisibilityConfig": {
            "type": "object",
            "properties": {
                "cloudWatchMetricsEnabled": {
                    "type": "boolean"
                },
                "metricName": {
                    "type": "string"
                },
                "sampledRequestsEnabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:wafv2:RuleGroupXssMatchStatement": {
            "type": "object",
            "properties": {
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:RuleGroupFieldToMatch"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:RuleGroupTextTransformation"
                    }
                }
            }
        },
        "aws-native:wafv2:WebACLAllowAction": {
            "type": "object",
            "properties": {
                "customRequestHandling": {
                    "$ref": "#/types/aws-native:wafv2:WebACLCustomRequestHandling"
                }
            }
        },
        "aws-native:wafv2:WebACLAndStatement": {
            "type": "object",
            "properties": {
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLStatement"
                    }
                }
            }
        },
        "aws-native:wafv2:WebACLBlockAction": {
            "type": "object",
            "properties": {
                "customResponse": {
                    "$ref": "#/types/aws-native:wafv2:WebACLCustomResponse"
                }
            }
        },
        "aws-native:wafv2:WebACLBodyParsingFallbackBehavior": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLByteMatchStatement": {
            "type": "object",
            "properties": {
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:WebACLFieldToMatch"
                },
                "positionalConstraint": {
                    "$ref": "#/types/aws-native:wafv2:WebACLPositionalConstraint"
                },
                "searchString": {
                    "type": "string"
                },
                "searchStringBase64": {
                    "type": "string"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLTextTransformation"
                    }
                }
            }
        },
        "aws-native:wafv2:WebACLCountAction": {
            "type": "object",
            "properties": {
                "customRequestHandling": {
                    "$ref": "#/types/aws-native:wafv2:WebACLCustomRequestHandling"
                }
            }
        },
        "aws-native:wafv2:WebACLCustomHTTPHeader": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:WebACLCustomRequestHandling": {
            "type": "object",
            "properties": {
                "insertHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLCustomHTTPHeader"
                    },
                    "description": "Collection of HTTP headers."
                }
            }
        },
        "aws-native:wafv2:WebACLCustomResponse": {
            "type": "object",
            "properties": {
                "customResponseBodyKey": {
                    "type": "string",
                    "description": "Custom response body key."
                },
                "responseCode": {
                    "type": "integer"
                },
                "responseHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLCustomHTTPHeader"
                    },
                    "description": "Collection of HTTP headers."
                }
            }
        },
        "aws-native:wafv2:WebACLCustomResponseBodies": {
            "type": "object"
        },
        "aws-native:wafv2:WebACLDefaultAction": {
            "type": "object",
            "properties": {
                "allow": {
                    "$ref": "#/types/aws-native:wafv2:WebACLAllowAction"
                },
                "block": {
                    "$ref": "#/types/aws-native:wafv2:WebACLBlockAction"
                }
            }
        },
        "aws-native:wafv2:WebACLExcludedRule": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:WebACLFieldToMatch": {
            "type": "object",
            "properties": {
                "allQueryArguments": {
                    "$ref": "pulumi.json#/Any",
                    "description": "All query arguments of a web request."
                },
                "body": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The body of a web request. This immediately follows the request headers."
                },
                "jsonBody": {
                    "$ref": "#/types/aws-native:wafv2:WebACLJsonBody"
                },
                "method": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform."
                },
                "queryString": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The query string of a web request. This is the part of a URL that appears after a ? character, if any."
                },
                "singleHeader": {
                    "$ref": "pulumi.json#/Any"
                },
                "singleQueryArgument": {
                    "$ref": "pulumi.json#/Any",
                    "description": "One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive."
                },
                "uriPath": {
                    "$ref": "pulumi.json#/Any",
                    "description": "The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg."
                }
            }
        },
        "aws-native:wafv2:WebACLForwardedIPConfiguration": {
            "type": "object",
            "properties": {
                "fallbackBehavior": {
                    "$ref": "#/types/aws-native:wafv2:WebACLForwardedIPConfigurationFallbackBehavior"
                },
                "headerName": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:WebACLForwardedIPConfigurationFallbackBehavior": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLGeoMatchStatement": {
            "type": "object",
            "properties": {
                "countryCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "forwardedIPConfig": {
                    "$ref": "#/types/aws-native:wafv2:WebACLForwardedIPConfiguration"
                }
            }
        },
        "aws-native:wafv2:WebACLIPSetForwardedIPConfiguration": {
            "type": "object",
            "properties": {
                "fallbackBehavior": {
                    "$ref": "#/types/aws-native:wafv2:WebACLIPSetForwardedIPConfigurationFallbackBehavior"
                },
                "headerName": {
                    "type": "string"
                },
                "position": {
                    "$ref": "#/types/aws-native:wafv2:WebACLIPSetForwardedIPConfigurationPosition"
                }
            }
        },
        "aws-native:wafv2:WebACLIPSetForwardedIPConfigurationFallbackBehavior": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLIPSetForwardedIPConfigurationPosition": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLIPSetReferenceStatement": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "iPSetForwardedIPConfig": {
                    "$ref": "#/types/aws-native:wafv2:WebACLIPSetForwardedIPConfiguration"
                }
            }
        },
        "aws-native:wafv2:WebACLJsonBody": {
            "type": "object",
            "properties": {
                "invalidFallbackBehavior": {
                    "$ref": "#/types/aws-native:wafv2:WebACLBodyParsingFallbackBehavior"
                },
                "matchPattern": {
                    "$ref": "#/types/aws-native:wafv2:WebACLJsonMatchPattern"
                },
                "matchScope": {
                    "$ref": "#/types/aws-native:wafv2:WebACLJsonMatchScope"
                }
            }
        },
        "aws-native:wafv2:WebACLJsonMatchPattern": {
            "type": "object",
            "properties": {
                "all": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Inspect all parts of the web request's JSON body."
                },
                "includedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws-native:wafv2:WebACLJsonMatchScope": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLLabel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:WebACLLabelMatchScope": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLLabelMatchStatement": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/types/aws-native:wafv2:WebACLLabelMatchScope"
                }
            }
        },
        "aws-native:wafv2:WebACLManagedRuleGroupStatement": {
            "type": "object",
            "properties": {
                "excludedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLExcludedRule"
                    }
                },
                "name": {
                    "type": "string"
                },
                "scopeDownStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLStatement"
                },
                "vendorName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:WebACLNotStatement": {
            "type": "object",
            "properties": {
                "statement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLStatement"
                }
            }
        },
        "aws-native:wafv2:WebACLOrStatement": {
            "type": "object",
            "properties": {
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLStatement"
                    }
                }
            }
        },
        "aws-native:wafv2:WebACLOverrideAction": {
            "type": "object",
            "properties": {
                "count": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Count traffic towards application."
                },
                "none": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Keep the RuleGroup or ManagedRuleGroup behavior as is."
                }
            }
        },
        "aws-native:wafv2:WebACLPositionalConstraint": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLRateBasedStatement": {
            "type": "object",
            "properties": {
                "aggregateKeyType": {
                    "$ref": "#/types/aws-native:wafv2:WebACLRateBasedStatementAggregateKeyType"
                },
                "forwardedIPConfig": {
                    "$ref": "#/types/aws-native:wafv2:WebACLForwardedIPConfiguration"
                },
                "limit": {
                    "type": "integer"
                },
                "scopeDownStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLStatement"
                }
            }
        },
        "aws-native:wafv2:WebACLRateBasedStatementAggregateKeyType": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLRegexPatternSetReferenceStatement": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:WebACLFieldToMatch"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLTextTransformation"
                    }
                }
            }
        },
        "aws-native:wafv2:WebACLRule": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/types/aws-native:wafv2:WebACLRuleAction"
                },
                "name": {
                    "type": "string"
                },
                "overrideAction": {
                    "$ref": "#/types/aws-native:wafv2:WebACLOverrideAction"
                },
                "priority": {
                    "type": "integer"
                },
                "ruleLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLLabel"
                    },
                    "description": "Collection of Rule Labels."
                },
                "statement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLStatement"
                },
                "visibilityConfig": {
                    "$ref": "#/types/aws-native:wafv2:WebACLVisibilityConfig"
                }
            }
        },
        "aws-native:wafv2:WebACLRuleAction": {
            "type": "object",
            "properties": {
                "allow": {
                    "$ref": "#/types/aws-native:wafv2:WebACLAllowAction"
                },
                "block": {
                    "$ref": "#/types/aws-native:wafv2:WebACLBlockAction"
                },
                "count": {
                    "$ref": "#/types/aws-native:wafv2:WebACLCountAction"
                }
            }
        },
        "aws-native:wafv2:WebACLRuleGroupReferenceStatement": {
            "type": "object",
            "properties": {
                "arn": {
                    "type": "string"
                },
                "excludedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLExcludedRule"
                    }
                }
            }
        },
        "aws-native:wafv2:WebACLScope": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLSizeConstraintStatement": {
            "type": "object",
            "properties": {
                "comparisonOperator": {
                    "$ref": "#/types/aws-native:wafv2:WebACLSizeConstraintStatementComparisonOperator"
                },
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:WebACLFieldToMatch"
                },
                "size": {
                    "type": "number"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLTextTransformation"
                    }
                }
            }
        },
        "aws-native:wafv2:WebACLSizeConstraintStatementComparisonOperator": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLSqliMatchStatement": {
            "type": "object",
            "properties": {
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:WebACLFieldToMatch"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLTextTransformation"
                    }
                }
            }
        },
        "aws-native:wafv2:WebACLStatement": {
            "type": "object",
            "properties": {
                "andStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLAndStatement"
                },
                "byteMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLByteMatchStatement"
                },
                "geoMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLGeoMatchStatement"
                },
                "iPSetReferenceStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLIPSetReferenceStatement"
                },
                "labelMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLLabelMatchStatement"
                },
                "managedRuleGroupStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLManagedRuleGroupStatement"
                },
                "notStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLNotStatement"
                },
                "orStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLOrStatement"
                },
                "rateBasedStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLRateBasedStatement"
                },
                "regexPatternSetReferenceStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLRegexPatternSetReferenceStatement"
                },
                "ruleGroupReferenceStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLRuleGroupReferenceStatement"
                },
                "sizeConstraintStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLSizeConstraintStatement"
                },
                "sqliMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLSqliMatchStatement"
                },
                "xssMatchStatement": {
                    "$ref": "#/types/aws-native:wafv2:WebACLXssMatchStatement"
                }
            }
        },
        "aws-native:wafv2:WebACLTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:wafv2:WebACLTextTransformation": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/types/aws-native:wafv2:WebACLTextTransformationType"
                }
            }
        },
        "aws-native:wafv2:WebACLTextTransformationType": {
            "type": "string"
        },
        "aws-native:wafv2:WebACLVisibilityConfig": {
            "type": "object",
            "properties": {
                "cloudWatchMetricsEnabled": {
                    "type": "boolean"
                },
                "metricName": {
                    "type": "string"
                },
                "sampledRequestsEnabled": {
                    "type": "boolean"
                }
            }
        },
        "aws-native:wafv2:WebACLXssMatchStatement": {
            "type": "object",
            "properties": {
                "fieldToMatch": {
                    "$ref": "#/types/aws-native:wafv2:WebACLFieldToMatch"
                },
                "textTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws-native:wafv2:WebACLTextTransformation"
                    }
                }
            }
        },
        "aws-native:workspaces:ConnectionAliasConnectionAliasAssociation": {
            "type": "object",
            "properties": {
                "associatedAccountId": {
                    "type": "string"
                },
                "associationStatus": {
                    "$ref": "#/types/aws-native:workspaces:ConnectionAliasConnectionAliasAssociationAssociationStatus"
                },
                "connectionIdentifier": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                }
            }
        },
        "aws-native:workspaces:ConnectionAliasConnectionAliasAssociationAssociationStatus": {
            "type": "string"
        },
        "aws-native:workspaces:ConnectionAliasConnectionAliasState": {
            "type": "string"
        },
        "aws-native:workspaces:ConnectionAliasTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "aws-native:xray:GroupInsightsConfiguration": {
            "type": "object",
            "properties": {
                "insightsEnabled": {
                    "type": "boolean",
                    "description": "Set the InsightsEnabled value to true to enable insights or false to disable insights."
                },
                "notificationsEnabled": {
                    "type": "boolean",
                    "description": "Set the NotificationsEnabled value to true to enable insights notifications. Notifications can only be enabled on a group with InsightsEnabled set to true."
                }
            }
        },
        "aws-native:xray:SamplingRuleSamplingRule": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Matches attributes derived from the request."
                },
                "fixedRate": {
                    "type": "number",
                    "description": "The percentage of matching requests to instrument, after the reservoir is exhausted."
                },
                "hTTPMethod": {
                    "type": "string",
                    "description": "Matches the HTTP method from a request URL."
                },
                "host": {
                    "type": "string",
                    "description": "Matches the hostname from a request URL."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the sampling rule."
                },
                "reservoirSize": {
                    "type": "integer",
                    "description": "A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively."
                },
                "resourceARN": {
                    "type": "string",
                    "description": "Matches the ARN of the AWS resource on which the service runs."
                },
                "ruleARN": {
                    "type": "string"
                },
                "ruleName": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Matches the name that the service uses to identify itself in segments."
                },
                "serviceType": {
                    "type": "string",
                    "description": "Matches the origin that the service uses to identify its type in segments."
                },
                "uRLPath": {
                    "type": "string",
                    "description": "Matches the path from a request URL."
                },
                "version": {
                    "type": "integer",
                    "description": "The version of the sampling rule format (1)"
                }
            }
        },
        "aws-native:xray:SamplingRuleSamplingRuleRecord": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "When the rule was created, in Unix time seconds."
                },
                "modifiedAt": {
                    "type": "string",
                    "description": "When the rule was modified, in Unix time seconds."
                },
                "samplingRule": {
                    "$ref": "#/types/aws-native:xray:SamplingRuleSamplingRule"
                }
            }
        },
        "aws-native:xray:SamplingRuleSamplingRuleUpdate": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "pulumi.json#/Any",
                    "description": "Matches attributes derived from the request."
                },
                "fixedRate": {
                    "type": "number",
                    "description": "The percentage of matching requests to instrument, after the reservoir is exhausted."
                },
                "hTTPMethod": {
                    "type": "string",
                    "description": "Matches the HTTP method from a request URL."
                },
                "host": {
                    "type": "string",
                    "description": "Matches the hostname from a request URL."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the sampling rule."
                },
                "reservoirSize": {
                    "type": "integer",
                    "description": "A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively."
                },
                "resourceARN": {
                    "type": "string",
                    "description": "Matches the ARN of the AWS resource on which the service runs."
                },
                "ruleARN": {
                    "type": "string"
                },
                "ruleName": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Matches the name that the service uses to identify itself in segments."
                },
                "serviceType": {
                    "type": "string",
                    "description": "Matches the origin that the service uses to identify its type in segments."
                },
                "uRLPath": {
                    "type": "string",
                    "description": "Matches the path from a request URL."
                }
            }
        }
    }
}