{
  "typeName" : "AWS::RDS::CustomDBEngineVersion",
  "description" : "The AWS::RDS::CustomDBEngineVersion resource creates an Amazon RDS custom DB engine version.",
  "sourceUrl" : "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "tagging" : {
    "taggable" : true
  },
  "definitions" : {
    "Tag" : {
      "description" : "A key-value pair to associate with a resource.",
      "type" : "object",
      "properties" : {
        "Key" : {
          "type" : "string",
          "description" : "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength" : 1,
          "maxLength" : 128
        },
        "Value" : {
          "type" : "string",
          "description" : "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength" : 0,
          "maxLength" : 256
        }
      },
      "required" : [ "Key" ],
      "additionalProperties" : false
    }
  },
  "properties" : {
    "DatabaseInstallationFilesS3BucketName" : {
      "type" : "string",
      "description" : "The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is `my-custom-installation-files`.",
      "minLength" : 3,
      "maxLength" : 63
    },
    "DatabaseInstallationFilesS3Prefix" : {
      "type" : "string",
      "description" : "The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is `123456789012/cev1`. If this setting isn't specified, no prefix is assumed.",
      "minLength" : 1,
      "maxLength" : 255
    },
    "Description" : {
      "type" : "string",
      "description" : "An optional description of your CEV.",
      "minLength" : 1,
      "maxLength" : 1000
    },
    "Engine" : {
      "type" : "string",
      "description" : "The database engine to use for your custom engine version (CEV). The only supported value is `custom-oracle-ee`.",
      "minLength" : 1,
      "maxLength" : 35
    },
    "EngineVersion" : {
      "type" : "string",
      "description" : "The name of your CEV. The name format is 19.customized_string . For example, a valid name is 19.my_cev1. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of Engine and EngineVersion is unique per customer per Region.",
      "minLength" : 1,
      "maxLength" : 60
    },
    "KMSKeyId" : {
      "type" : "string",
      "description" : "The AWS KMS key identifier for an encrypted CEV. A symmetric KMS key is required for RDS Custom, but optional for Amazon RDS.",
      "minLength" : 1,
      "maxLength" : 2048
    },
    "Manifest" : {
      "type" : "string",
      "description" : "The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.",
      "minLength" : 1,
      "maxLength" : 51000
    },
    "DBEngineVersionArn" : {
      "type" : "string",
      "description" : "The ARN of the custom engine version."
    },
    "Status" : {
      "type" : "string",
      "description" : "The availability status to be assigned to the CEV.",
      "default" : "available",
      "enum" : [ "available", "inactive", "inactive-except-restore" ]
    },
    "Tags" : {
      "description" : "An array of key-value pairs to apply to this resource.",
      "type" : "array",
      "uniqueItems" : false,
      "insertionOrder" : false,
      "items" : {
        "$ref" : "#/definitions/Tag"
      }
    }
  },
  "additionalProperties" : false,
  "propertyTransform" : {
    "/properties/Engine" : "$lowercase(Engine)",
    "/properties/EngineVersion" : "$lowercase(EngineVersion)",
    "/properties/KMSKeyId" : "$join([\"arn:(aws)[-]{0,1}[a-z]{0,2}[-]{0,1}[a-z]{0,3}:kms:[a-z]{2}[-]{1}[a-z]{3,10}[-]{0,1}[a-z]{0,10}[-]{1}[1-3]{1}:[0-9]{12}[:]{1}key\\/\", KMSKeyId])"
  },
  "required" : [ "DatabaseInstallationFilesS3BucketName", "Engine", "EngineVersion" ],
  "writeOnlyProperties" : [ "/properties/Manifest" ],
  "readOnlyProperties" : [ "/properties/DBEngineVersionArn" ],
  "primaryIdentifier" : [ "/properties/Engine", "/properties/EngineVersion" ],
  "createOnlyProperties" : [ "/properties/Engine", "/properties/EngineVersion", "/properties/DatabaseInstallationFilesS3BucketName", "/properties/DatabaseInstallationFilesS3Prefix", "/properties/KMSKeyId", "/properties/Manifest" ],
  "handlers" : {
    "create" : {
      "permissions" : [ "iam:PassRole", "kms:CreateGrant", "kms:DescribeKey", "mediaimport:CreateDatabaseBinarySnapshot", "rds:AddTagsToResource", "rds:CreateCustomDBEngineVersion", "rds:DescribeDBEngineVersions", "rds:ModifyCustomDBEngineVersion", "s3:CreateBucket", "s3:GetObject", "s3:GetObjectAcl", "s3:GetObjectTagging", "s3:ListBucket", "s3:PutBucketObjectLockConfiguration", "s3:PutBucketPolicy", "s3:PutBucketVersioning" ],
      "timeoutInMinutes" : 600
    },
    "read" : {
      "permissions" : [ "rds:DescribeDBEngineVersions" ]
    },
    "update" : {
      "permissions" : [ "rds:AddTagsToResource", "rds:DescribeDBEngineVersions", "rds:ModifyCustomDBEngineVersion", "rds:RemoveTagsFromResource" ],
      "timeoutInMinutes" : 600
    },
    "delete" : {
      "permissions" : [ "rds:DeleteCustomDBEngineVersion", "rds:DescribeDBEngineVersions" ],
      "timeoutInMinutes" : 600
    },
    "list" : {
      "permissions" : [ "rds:DescribeDBEngineVersions" ]
    }
  }
}