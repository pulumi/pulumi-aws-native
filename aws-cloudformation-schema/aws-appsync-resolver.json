{
  "typeName" : "AWS::AppSync::Resolver",
  "description" : "Resource Type definition for AWS::AppSync::Resolver",
  "sourceUrl" : "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-appsync.git",
  "definitions" : {
    "AppSyncRuntime" : {
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "RuntimeVersion" : {
          "type" : "string",
          "description" : "The version of the runtime to use."
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the runtime to use."
        }
      },
      "required" : [ "RuntimeVersion", "Name" ]
    },
    "PipelineConfig" : {
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "Functions" : {
          "type" : "array",
          "description" : "A list of Function objects.",
          "uniqueItems" : false,
          "insertionOrder" : false,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CachingConfig" : {
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "CachingKeys" : {
          "type" : "array",
          "description" : "The caching keys for a resolver that has caching activated. Valid values are entries from the $context.arguments, $context.source, and $context.identity maps.",
          "uniqueItems" : false,
          "insertionOrder" : false,
          "items" : {
            "type" : "string"
          }
        },
        "Ttl" : {
          "type" : "number",
          "description" : "The TTL in seconds for a resolver that has caching activated. Valid values are 1-36.00 seconds."
        }
      },
      "required" : [ "Ttl" ]
    },
    "SyncConfig" : {
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "ConflictHandler" : {
          "type" : "string",
          "description" : "The Conflict Resolution strategy to perform in the event of a conflict."
        },
        "ConflictDetection" : {
          "type" : "string",
          "description" : "The Conflict Detection strategy to use."
        },
        "LambdaConflictHandlerConfig" : {
          "$ref" : "#/definitions/LambdaConflictHandlerConfig"
        }
      },
      "required" : [ "ConflictDetection" ]
    },
    "LambdaConflictHandlerConfig" : {
      "type" : "object",
      "description" : "The LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.",
      "additionalProperties" : false,
      "properties" : {
        "LambdaConflictHandlerArn" : {
          "type" : "string",
          "description" : "The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler."
        }
      }
    }
  },
  "properties" : {
    "ApiId" : {
      "type" : "string",
      "description" : "The AWS AppSync GraphQL API to which you want to attach this resolver."
    },
    "CachingConfig" : {
      "$ref" : "#/definitions/CachingConfig",
      "description" : "The caching configuration for the resolver."
    },
    "Code" : {
      "type" : "string",
      "description" : "The resolver code that contains the request and response functions. When code is used, the runtime is required."
    },
    "CodeS3Location" : {
      "type" : "string",
      "description" : "The Amazon S3 endpoint."
    },
    "DataSourceName" : {
      "type" : "string",
      "description" : "The resolver data source name."
    },
    "FieldName" : {
      "type" : "string",
      "description" : "The GraphQL field on a type that invokes the resolver."
    },
    "Kind" : {
      "type" : "string",
      "description" : "The resolver type."
    },
    "MaxBatchSize" : {
      "type" : "integer",
      "description" : "The maximum number of resolver request inputs that will be sent to a single AWS Lambda function in a BatchInvoke operation."
    },
    "PipelineConfig" : {
      "$ref" : "#/definitions/PipelineConfig",
      "description" : "Functions linked with the pipeline resolver."
    },
    "RequestMappingTemplate" : {
      "type" : "string",
      "description" : "Request mapping templates are optional when using a Lambda data source. For all other data sources, a request mapping template is required."
    },
    "RequestMappingTemplateS3Location" : {
      "type" : "string",
      "description" : "The location of a request mapping template in an Amazon S3 bucket. Use this if you want to provision with a template file in Amazon S3 rather than embedding it in your CloudFormation template."
    },
    "ResolverArn" : {
      "type" : "string",
      "description" : "The Amazon Resource Name (ARN) for the resolver."
    },
    "ResponseMappingTemplate" : {
      "type" : "string",
      "description" : "The response mapping template."
    },
    "ResponseMappingTemplateS3Location" : {
      "type" : "string",
      "description" : "The location of a response mapping template in an Amazon S3 bucket. Use this if you want to provision with a template file in Amazon S3 rather than embedding it in your CloudFormation template."
    },
    "Runtime" : {
      "$ref" : "#/definitions/AppSyncRuntime",
      "description" : "Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified."
    },
    "SyncConfig" : {
      "$ref" : "#/definitions/SyncConfig",
      "description" : "The SyncConfig for a resolver attached to a versioned data source."
    },
    "TypeName" : {
      "type" : "string",
      "description" : "The GraphQL type that invokes this resolver."
    }
  },
  "tagging" : {
    "taggable" : false
  },
  "additionalProperties" : false,
  "required" : [ "TypeName", "ApiId", "FieldName" ],
  "createOnlyProperties" : [ "/properties/ApiId", "/properties/FieldName", "/properties/TypeName" ],
  "primaryIdentifier" : [ "/properties/ResolverArn" ],
  "readOnlyProperties" : [ "/properties/ResolverArn" ],
  "writeOnlyProperties" : [ "/properties/RequestMappingTemplateS3Location", "/properties/ResponseMappingTemplateS3Location", "/properties/CodeS3Location" ],
  "handlers" : {
    "create" : {
      "permissions" : [ "s3:GetObject", "appsync:CreateResolver", "appsync:GetResolver" ]
    },
    "read" : {
      "permissions" : [ "appsync:GetResolver" ]
    },
    "update" : {
      "permissions" : [ "s3:GetObject", "appsync:UpdateResolver" ]
    },
    "delete" : {
      "permissions" : [ "appsync:DeleteResolver" ]
    },
    "list" : {
      "permissions" : [ "appsync:ListResolvers" ],
      "handlerSchema" : {
        "properties" : {
          "ApiId" : {
            "$ref" : "resource-schema.json#/properties/ApiId"
          },
          "TypeName" : {
            "$ref" : "resource-schema.json#/properties/TypeName"
          }
        },
        "required" : [ "ApiId", "TypeName" ]
      }
    }
  }
}