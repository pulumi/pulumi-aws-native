# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AccessGrantGranteeGranteeType',
    'AccessGrantPermission',
    'AccessGrantS3PrefixType',
    'AccessPointNetworkOrigin',
    'BucketAccelerateConfigurationAccelerationStatus',
    'BucketAccessControl',
    'BucketCorsRuleAllowedMethodsItem',
    'BucketDefaultRetentionMode',
    'BucketDeleteMarkerReplicationStatus',
    'BucketDestinationFormat',
    'BucketIntelligentTieringConfigurationStatus',
    'BucketInventoryConfigurationIncludedObjectVersions',
    'BucketInventoryConfigurationOptionalFieldsItem',
    'BucketInventoryConfigurationScheduleFrequency',
    'BucketMetricsStatus',
    'BucketNoncurrentVersionTransitionStorageClass',
    'BucketOwnershipControlsRuleObjectOwnership',
    'BucketRedirectAllRequestsToProtocol',
    'BucketRedirectRuleProtocol',
    'BucketReplicaModificationsStatus',
    'BucketReplicationDestinationStorageClass',
    'BucketReplicationRuleStatus',
    'BucketReplicationTimeStatus',
    'BucketRuleStatus',
    'BucketServerSideEncryptionByDefaultSseAlgorithm',
    'BucketSseKmsEncryptedObjectsStatus',
    'BucketTieringAccessTier',
    'BucketTransitionStorageClass',
    'BucketVersioningConfigurationStatus',
    'MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublic',
    'StorageLensS3BucketDestinationFormat',
    'StorageLensS3BucketDestinationOutputSchemaVersion',
]


class AccessGrantGranteeGranteeType(str, Enum):
    """
    Configures the transfer acceleration state for an Amazon S3 bucket.
    """
    IAM = "IAM"
    DIRECTORY_USER = "DIRECTORY_USER"
    DIRECTORY_GROUP = "DIRECTORY_GROUP"


class AccessGrantPermission(str, Enum):
    """
    The level of access to be afforded to the grantee
    """
    READ = "READ"
    WRITE = "WRITE"
    READWRITE = "READWRITE"


class AccessGrantS3PrefixType(str, Enum):
    """
    The type of S3SubPrefix.
    """
    OBJECT = "Object"


class AccessPointNetworkOrigin(str, Enum):
    """
    Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise, NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and bucket access policies.
    """
    INTERNET = "Internet"
    VPC = "VPC"


class BucketAccelerateConfigurationAccelerationStatus(str, Enum):
    """
    Specifies the transfer acceleration status of the bucket.
    """
    ENABLED = "Enabled"
    SUSPENDED = "Suspended"


class BucketAccessControl(str, Enum):
    """
    This is a legacy property, and it is not recommended for most use cases. A majority of modern use cases in Amazon S3 no longer require the use of ACLs, and we recommend that you keep ACLs disabled. For more information, see [Controlling object ownership](https://docs.aws.amazon.com//AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
      A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide*.
      S3 buckets are created with ACLs disabled by default. Therefore, unless you explicitly set the [AWS::S3::OwnershipControls](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html) property to enable ACLs, your resource will fail to deploy with any value other than Private. Use cases requiring ACLs are uncommon.
      The majority of access control configurations can be successfully and more easily achieved with bucket policies. For more information, see [AWS::S3::BucketPolicy](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html). For examples of common policy configurations, including S3 Server Access Logs buckets and more, see [Bucket policy examples](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html) in the *Amazon S3 User Guide*.
    """
    AUTHENTICATED_READ = "AuthenticatedRead"
    AWS_EXEC_READ = "AwsExecRead"
    BUCKET_OWNER_FULL_CONTROL = "BucketOwnerFullControl"
    BUCKET_OWNER_READ = "BucketOwnerRead"
    LOG_DELIVERY_WRITE = "LogDeliveryWrite"
    PRIVATE = "Private"
    PUBLIC_READ = "PublicRead"
    PUBLIC_READ_WRITE = "PublicReadWrite"


class BucketCorsRuleAllowedMethodsItem(str, Enum):
    GET = "GET"
    PUT = "PUT"
    HEAD = "HEAD"
    POST = "POST"
    DELETE = "DELETE"


class BucketDefaultRetentionMode(str, Enum):
    """
    The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, you must specify ``Mode`` and specify either ``Days`` or ``Years``.
    """
    COMPLIANCE = "COMPLIANCE"
    GOVERNANCE = "GOVERNANCE"


class BucketDeleteMarkerReplicationStatus(str, Enum):
    """
    Indicates whether to replicate delete markers. Disabled by default.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class BucketDestinationFormat(str, Enum):
    """
    Specifies the file format used when exporting data to Amazon S3.
     *Allowed values*: ``CSV`` | ``ORC`` | ``Parquet``
    """
    CSV = "CSV"
    ORC = "ORC"
    PARQUET = "Parquet"


class BucketIntelligentTieringConfigurationStatus(str, Enum):
    """
    Specifies the status of the configuration.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class BucketInventoryConfigurationIncludedObjectVersions(str, Enum):
    """
    Object versions to include in the inventory list. If set to ``All``, the list includes all the object versions, which adds the version-related fields ``VersionId``, ``IsLatest``, and ``DeleteMarker`` to the list. If set to ``Current``, the list does not contain these version-related fields.
    """
    ALL = "All"
    CURRENT = "Current"


class BucketInventoryConfigurationOptionalFieldsItem(str, Enum):
    SIZE = "Size"
    LAST_MODIFIED_DATE = "LastModifiedDate"
    STORAGE_CLASS = "StorageClass"
    E_TAG = "ETag"
    IS_MULTIPART_UPLOADED = "IsMultipartUploaded"
    REPLICATION_STATUS = "ReplicationStatus"
    ENCRYPTION_STATUS = "EncryptionStatus"
    OBJECT_LOCK_RETAIN_UNTIL_DATE = "ObjectLockRetainUntilDate"
    OBJECT_LOCK_MODE = "ObjectLockMode"
    OBJECT_LOCK_LEGAL_HOLD_STATUS = "ObjectLockLegalHoldStatus"
    INTELLIGENT_TIERING_ACCESS_TIER = "IntelligentTieringAccessTier"
    BUCKET_KEY_STATUS = "BucketKeyStatus"
    CHECKSUM_ALGORITHM = "ChecksumAlgorithm"
    OBJECT_ACCESS_CONTROL_LIST = "ObjectAccessControlList"
    OBJECT_OWNER = "ObjectOwner"


class BucketInventoryConfigurationScheduleFrequency(str, Enum):
    """
    Specifies the schedule for generating inventory results.
    """
    DAILY = "Daily"
    WEEKLY = "Weekly"


class BucketMetricsStatus(str, Enum):
    """
    Specifies whether the replication metrics are enabled.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class BucketNoncurrentVersionTransitionStorageClass(str, Enum):
    """
    The class of storage used to store the object.
    """
    DEEP_ARCHIVE = "DEEP_ARCHIVE"
    GLACIER = "GLACIER"
    GLACIER_IR = "GLACIER_IR"
    INTELLIGENT_TIERING = "INTELLIGENT_TIERING"
    ONEZONE_IA = "ONEZONE_IA"
    STANDARD_IA = "STANDARD_IA"


class BucketOwnershipControlsRuleObjectOwnership(str, Enum):
    """
    Specifies an object ownership rule.
    """
    OBJECT_WRITER = "ObjectWriter"
    BUCKET_OWNER_PREFERRED = "BucketOwnerPreferred"
    BUCKET_OWNER_ENFORCED = "BucketOwnerEnforced"


class BucketRedirectAllRequestsToProtocol(str, Enum):
    """
    Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
    """
    HTTP = "http"
    HTTPS = "https"


class BucketRedirectRuleProtocol(str, Enum):
    """
    Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
    """
    HTTP = "http"
    HTTPS = "https"


class BucketReplicaModificationsStatus(str, Enum):
    """
    Specifies whether Amazon S3 replicates modifications on replicas.
     *Allowed values*: ``Enabled`` | ``Disabled``
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class BucketReplicationDestinationStorageClass(str, Enum):
    """
    The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica. 
     For valid values, see the ``StorageClass`` element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
    """
    DEEP_ARCHIVE = "DEEP_ARCHIVE"
    GLACIER = "GLACIER"
    GLACIER_IR = "GLACIER_IR"
    INTELLIGENT_TIERING = "INTELLIGENT_TIERING"
    ONEZONE_IA = "ONEZONE_IA"
    REDUCED_REDUNDANCY = "REDUCED_REDUNDANCY"
    STANDARD = "STANDARD"
    STANDARD_IA = "STANDARD_IA"


class BucketReplicationRuleStatus(str, Enum):
    """
    Specifies whether the rule is enabled.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class BucketReplicationTimeStatus(str, Enum):
    """
    Specifies whether the replication time is enabled.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class BucketRuleStatus(str, Enum):
    """
    If ``Enabled``, the rule is currently being applied. If ``Disabled``, the rule is not currently being applied.
    """
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class BucketServerSideEncryptionByDefaultSseAlgorithm(str, Enum):
    """
    Server-side encryption algorithm to use for the default encryption.
    """
    AWSKMS = "aws:kms"
    AES256 = "AES256"
    AWSKMSDSSE = "aws:kms:dsse"


class BucketSseKmsEncryptedObjectsStatus(str, Enum):
    """
    Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
    """
    DISABLED = "Disabled"
    ENABLED = "Enabled"


class BucketTieringAccessTier(str, Enum):
    """
    S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
    """
    ARCHIVE_ACCESS = "ARCHIVE_ACCESS"
    DEEP_ARCHIVE_ACCESS = "DEEP_ARCHIVE_ACCESS"


class BucketTransitionStorageClass(str, Enum):
    """
    The storage class to which you want the object to transition.
    """
    DEEP_ARCHIVE = "DEEP_ARCHIVE"
    GLACIER = "GLACIER"
    GLACIER_IR = "GLACIER_IR"
    INTELLIGENT_TIERING = "INTELLIGENT_TIERING"
    ONEZONE_IA = "ONEZONE_IA"
    STANDARD_IA = "STANDARD_IA"


class BucketVersioningConfigurationStatus(str, Enum):
    """
    The versioning state of the bucket.
    """
    ENABLED = "Enabled"
    SUSPENDED = "Suspended"


class MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublic(str, Enum):
    """
    Specifies whether the policy is public or not.
    """
    TRUE = "true"
    FALSE = "false"


class StorageLensS3BucketDestinationFormat(str, Enum):
    """
    Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
    """
    CSV = "CSV"
    PARQUET = "Parquet"


class StorageLensS3BucketDestinationOutputSchemaVersion(str, Enum):
    """
    The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
    """
    V1 = "V_1"
