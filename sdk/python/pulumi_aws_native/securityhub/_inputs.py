# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'StandardsControlArgs',
]

@pulumi.input_type
class StandardsControlArgs:
    def __init__(__self__, *,
                 standards_control_arn: pulumi.Input[str],
                 reason: Optional[pulumi.Input[str]] = None):
        """
        An individual StandardsControl within the Standard.
        :param pulumi.Input[str] standards_control_arn: the Arn for the standard control.
        :param pulumi.Input[str] reason: the reason the standard control is disabled
        """
        pulumi.set(__self__, "standards_control_arn", standards_control_arn)
        if reason is not None:
            pulumi.set(__self__, "reason", reason)

    @property
    @pulumi.getter(name="standardsControlArn")
    def standards_control_arn(self) -> pulumi.Input[str]:
        """
        the Arn for the standard control.
        """
        return pulumi.get(self, "standards_control_arn")

    @standards_control_arn.setter
    def standards_control_arn(self, value: pulumi.Input[str]):
        pulumi.set(self, "standards_control_arn", value)

    @property
    @pulumi.getter
    def reason(self) -> Optional[pulumi.Input[str]]:
        """
        the reason the standard control is disabled
        """
        return pulumi.get(self, "reason")

    @reason.setter
    def reason(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reason", value)


