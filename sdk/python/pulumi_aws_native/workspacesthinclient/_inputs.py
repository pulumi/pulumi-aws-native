# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'EnvironmentMaintenanceWindowArgs',
    'EnvironmentTagArgs',
]

@pulumi.input_type
class EnvironmentMaintenanceWindowArgs:
    def __init__(__self__, *,
                 type: pulumi.Input['EnvironmentMaintenanceWindowType'],
                 apply_time_of: Optional[pulumi.Input['EnvironmentMaintenanceWindowApplyTimeOf']] = None,
                 days_of_the_week: Optional[pulumi.Input[Sequence[pulumi.Input['EnvironmentDayOfWeek']]]] = None,
                 end_time_hour: Optional[pulumi.Input[int]] = None,
                 end_time_minute: Optional[pulumi.Input[int]] = None,
                 start_time_hour: Optional[pulumi.Input[int]] = None,
                 start_time_minute: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input['EnvironmentMaintenanceWindowType'] type: The type of maintenance window.
        :param pulumi.Input['EnvironmentMaintenanceWindowApplyTimeOf'] apply_time_of: The desired time zone maintenance window.
        :param pulumi.Input[Sequence[pulumi.Input['EnvironmentDayOfWeek']]] days_of_the_week: The date of maintenance window.
        :param pulumi.Input[int] end_time_hour: The hour end time of maintenance window.
        :param pulumi.Input[int] end_time_minute: The minute end time of maintenance window.
        :param pulumi.Input[int] start_time_hour: The hour start time of maintenance window.
        :param pulumi.Input[int] start_time_minute: The minute start time of maintenance window.
        """
        pulumi.set(__self__, "type", type)
        if apply_time_of is not None:
            pulumi.set(__self__, "apply_time_of", apply_time_of)
        if days_of_the_week is not None:
            pulumi.set(__self__, "days_of_the_week", days_of_the_week)
        if end_time_hour is not None:
            pulumi.set(__self__, "end_time_hour", end_time_hour)
        if end_time_minute is not None:
            pulumi.set(__self__, "end_time_minute", end_time_minute)
        if start_time_hour is not None:
            pulumi.set(__self__, "start_time_hour", start_time_hour)
        if start_time_minute is not None:
            pulumi.set(__self__, "start_time_minute", start_time_minute)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input['EnvironmentMaintenanceWindowType']:
        """
        The type of maintenance window.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input['EnvironmentMaintenanceWindowType']):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="applyTimeOf")
    def apply_time_of(self) -> Optional[pulumi.Input['EnvironmentMaintenanceWindowApplyTimeOf']]:
        """
        The desired time zone maintenance window.
        """
        return pulumi.get(self, "apply_time_of")

    @apply_time_of.setter
    def apply_time_of(self, value: Optional[pulumi.Input['EnvironmentMaintenanceWindowApplyTimeOf']]):
        pulumi.set(self, "apply_time_of", value)

    @property
    @pulumi.getter(name="daysOfTheWeek")
    def days_of_the_week(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EnvironmentDayOfWeek']]]]:
        """
        The date of maintenance window.
        """
        return pulumi.get(self, "days_of_the_week")

    @days_of_the_week.setter
    def days_of_the_week(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EnvironmentDayOfWeek']]]]):
        pulumi.set(self, "days_of_the_week", value)

    @property
    @pulumi.getter(name="endTimeHour")
    def end_time_hour(self) -> Optional[pulumi.Input[int]]:
        """
        The hour end time of maintenance window.
        """
        return pulumi.get(self, "end_time_hour")

    @end_time_hour.setter
    def end_time_hour(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "end_time_hour", value)

    @property
    @pulumi.getter(name="endTimeMinute")
    def end_time_minute(self) -> Optional[pulumi.Input[int]]:
        """
        The minute end time of maintenance window.
        """
        return pulumi.get(self, "end_time_minute")

    @end_time_minute.setter
    def end_time_minute(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "end_time_minute", value)

    @property
    @pulumi.getter(name="startTimeHour")
    def start_time_hour(self) -> Optional[pulumi.Input[int]]:
        """
        The hour start time of maintenance window.
        """
        return pulumi.get(self, "start_time_hour")

    @start_time_hour.setter
    def start_time_hour(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "start_time_hour", value)

    @property
    @pulumi.getter(name="startTimeMinute")
    def start_time_minute(self) -> Optional[pulumi.Input[int]]:
        """
        The minute start time of maintenance window.
        """
        return pulumi.get(self, "start_time_minute")

    @start_time_minute.setter
    def start_time_minute(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "start_time_minute", value)


@pulumi.input_type
class EnvironmentTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        A key-value pair to associate with a resource.
        :param pulumi.Input[str] key: The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        :param pulumi.Input[str] value: The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


