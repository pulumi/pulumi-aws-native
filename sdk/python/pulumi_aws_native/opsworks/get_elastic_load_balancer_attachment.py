# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetElasticLoadBalancerAttachmentResult',
    'AwaitableGetElasticLoadBalancerAttachmentResult',
    'get_elastic_load_balancer_attachment',
    'get_elastic_load_balancer_attachment_output',
]

@pulumi.output_type
class GetElasticLoadBalancerAttachmentResult:
    def __init__(__self__, elastic_load_balancer_name=None, id=None, layer_id=None):
        if elastic_load_balancer_name and not isinstance(elastic_load_balancer_name, str):
            raise TypeError("Expected argument 'elastic_load_balancer_name' to be a str")
        pulumi.set(__self__, "elastic_load_balancer_name", elastic_load_balancer_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if layer_id and not isinstance(layer_id, str):
            raise TypeError("Expected argument 'layer_id' to be a str")
        pulumi.set(__self__, "layer_id", layer_id)

    @property
    @pulumi.getter(name="elasticLoadBalancerName")
    def elastic_load_balancer_name(self) -> Optional[str]:
        return pulumi.get(self, "elastic_load_balancer_name")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="layerId")
    def layer_id(self) -> Optional[str]:
        return pulumi.get(self, "layer_id")


class AwaitableGetElasticLoadBalancerAttachmentResult(GetElasticLoadBalancerAttachmentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetElasticLoadBalancerAttachmentResult(
            elastic_load_balancer_name=self.elastic_load_balancer_name,
            id=self.id,
            layer_id=self.layer_id)


def get_elastic_load_balancer_attachment(id: Optional[str] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetElasticLoadBalancerAttachmentResult:
    """
    Resource Type definition for AWS::OpsWorks::ElasticLoadBalancerAttachment
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:opsworks:getElasticLoadBalancerAttachment', __args__, opts=opts, typ=GetElasticLoadBalancerAttachmentResult).value

    return AwaitableGetElasticLoadBalancerAttachmentResult(
        elastic_load_balancer_name=pulumi.get(__ret__, 'elastic_load_balancer_name'),
        id=pulumi.get(__ret__, 'id'),
        layer_id=pulumi.get(__ret__, 'layer_id'))


@_utilities.lift_output_func(get_elastic_load_balancer_attachment)
def get_elastic_load_balancer_attachment_output(id: Optional[pulumi.Input[str]] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetElasticLoadBalancerAttachmentResult]:
    """
    Resource Type definition for AWS::OpsWorks::ElasticLoadBalancerAttachment
    """
    ...
