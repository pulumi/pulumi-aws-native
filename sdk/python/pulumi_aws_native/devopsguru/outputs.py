# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'NotificationChannelNotificationChannelConfig',
    'NotificationChannelSnsChannelConfig',
    'ResourceCollectionCloudFormationCollectionFilter',
    'ResourceCollectionResourceCollectionFilter',
]

@pulumi.output_type
class NotificationChannelNotificationChannelConfig(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-notificationchannelconfig.html
    """
    def __init__(__self__, *,
                 sns: Optional['outputs.NotificationChannelSnsChannelConfig'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-notificationchannelconfig.html
        :param 'NotificationChannelSnsChannelConfig' sns: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-notificationchannelconfig.html#cfn-devopsguru-notificationchannel-notificationchannelconfig-sns
        """
        if sns is not None:
            pulumi.set(__self__, "sns", sns)

    @property
    @pulumi.getter
    def sns(self) -> Optional['outputs.NotificationChannelSnsChannelConfig']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-notificationchannelconfig.html#cfn-devopsguru-notificationchannel-notificationchannelconfig-sns
        """
        return pulumi.get(self, "sns")


@pulumi.output_type
class NotificationChannelSnsChannelConfig(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-snschannelconfig.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "topicArn":
            suggest = "topic_arn"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in NotificationChannelSnsChannelConfig. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        NotificationChannelSnsChannelConfig.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        NotificationChannelSnsChannelConfig.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 topic_arn: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-snschannelconfig.html
        :param str topic_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-snschannelconfig.html#cfn-devopsguru-notificationchannel-snschannelconfig-topicarn
        """
        if topic_arn is not None:
            pulumi.set(__self__, "topic_arn", topic_arn)

    @property
    @pulumi.getter(name="topicArn")
    def topic_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-snschannelconfig.html#cfn-devopsguru-notificationchannel-snschannelconfig-topicarn
        """
        return pulumi.get(self, "topic_arn")


@pulumi.output_type
class ResourceCollectionCloudFormationCollectionFilter(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-cloudformationcollectionfilter.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "stackNames":
            suggest = "stack_names"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceCollectionCloudFormationCollectionFilter. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceCollectionCloudFormationCollectionFilter.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceCollectionCloudFormationCollectionFilter.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 stack_names: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-cloudformationcollectionfilter.html
        :param Sequence[str] stack_names: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-cloudformationcollectionfilter.html#cfn-devopsguru-resourcecollection-cloudformationcollectionfilter-stacknames
        """
        if stack_names is not None:
            pulumi.set(__self__, "stack_names", stack_names)

    @property
    @pulumi.getter(name="stackNames")
    def stack_names(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-cloudformationcollectionfilter.html#cfn-devopsguru-resourcecollection-cloudformationcollectionfilter-stacknames
        """
        return pulumi.get(self, "stack_names")


@pulumi.output_type
class ResourceCollectionResourceCollectionFilter(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-resourcecollectionfilter.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "cloudFormation":
            suggest = "cloud_formation"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceCollectionResourceCollectionFilter. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceCollectionResourceCollectionFilter.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceCollectionResourceCollectionFilter.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 cloud_formation: Optional['outputs.ResourceCollectionCloudFormationCollectionFilter'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-resourcecollectionfilter.html
        :param 'ResourceCollectionCloudFormationCollectionFilter' cloud_formation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-resourcecollectionfilter.html#cfn-devopsguru-resourcecollection-resourcecollectionfilter-cloudformation
        """
        if cloud_formation is not None:
            pulumi.set(__self__, "cloud_formation", cloud_formation)

    @property
    @pulumi.getter(name="cloudFormation")
    def cloud_formation(self) -> Optional['outputs.ResourceCollectionCloudFormationCollectionFilter']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-resourcecollectionfilter.html#cfn-devopsguru-resourcecollection-resourcecollectionfilter-cloudformation
        """
        return pulumi.get(self, "cloud_formation")


