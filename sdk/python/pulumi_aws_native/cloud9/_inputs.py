# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'EnvironmentEc2RepositoryArgs',
    'EnvironmentEc2TagArgs',
]

@pulumi.input_type
class EnvironmentEc2RepositoryArgs:
    def __init__(__self__, *,
                 path_component: pulumi.Input[str],
                 repository_url: pulumi.Input[str]):
        EnvironmentEc2RepositoryArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            path_component=path_component,
            repository_url=repository_url,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             path_component: pulumi.Input[str],
             repository_url: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("path_component", path_component)
        _setter("repository_url", repository_url)

    @property
    @pulumi.getter(name="pathComponent")
    def path_component(self) -> pulumi.Input[str]:
        return pulumi.get(self, "path_component")

    @path_component.setter
    def path_component(self, value: pulumi.Input[str]):
        pulumi.set(self, "path_component", value)

    @property
    @pulumi.getter(name="repositoryUrl")
    def repository_url(self) -> pulumi.Input[str]:
        return pulumi.get(self, "repository_url")

    @repository_url.setter
    def repository_url(self, value: pulumi.Input[str]):
        pulumi.set(self, "repository_url", value)


@pulumi.input_type
class EnvironmentEc2TagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        EnvironmentEc2TagArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            key=key,
            value=value,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             key: pulumi.Input[str],
             value: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("key", key)
        _setter("value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


