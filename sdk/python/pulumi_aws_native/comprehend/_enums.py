# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'DocumentClassifierAugmentedManifestsListItemSplit',
    'DocumentClassifierDocumentReaderConfigDocumentReadAction',
    'DocumentClassifierDocumentReaderConfigDocumentReadMode',
    'DocumentClassifierDocumentReaderConfigFeatureTypesItem',
    'DocumentClassifierInputDataConfigDataFormat',
    'DocumentClassifierInputDataConfigDocumentType',
    'DocumentClassifierLanguageCode',
    'DocumentClassifierMode',
    'FlywheelDocumentClassificationConfigMode',
    'FlywheelModelType',
    'FlywheelTaskConfigLanguageCode',
]


class DocumentClassifierAugmentedManifestsListItemSplit(str, Enum):
    """
    The purpose of the data you've provided in the augmented manifest. You can either train or test this data. If you don't specify, the default is train.

    TRAIN - all of the documents in the manifest will be used for training. If no test documents are provided, Amazon Comprehend will automatically reserve a portion of the training documents for testing.

    TEST - all of the documents in the manifest will be used for testing.
    """
    TRAIN = "TRAIN"
    TEST = "TEST"


class DocumentClassifierDocumentReaderConfigDocumentReadAction(str, Enum):
    """
    This field defines the Amazon Textract API operation that Amazon Comprehend uses to extract text from PDF files and image files. Enter one of the following values:

    - `TEXTRACT_DETECT_DOCUMENT_TEXT` - The Amazon Comprehend service uses the `DetectDocumentText` API operation.
    - `TEXTRACT_ANALYZE_DOCUMENT` - The Amazon Comprehend service uses the `AnalyzeDocument` API operation.
    """
    TEXTRACT_DETECT_DOCUMENT_TEXT = "TEXTRACT_DETECT_DOCUMENT_TEXT"
    TEXTRACT_ANALYZE_DOCUMENT = "TEXTRACT_ANALYZE_DOCUMENT"


class DocumentClassifierDocumentReaderConfigDocumentReadMode(str, Enum):
    """
    Determines the text extraction actions for PDF files. Enter one of the following values:

    - `SERVICE_DEFAULT` - use the Amazon Comprehend service defaults for PDF files.
    - `FORCE_DOCUMENT_READ_ACTION` - Amazon Comprehend uses the Textract API specified by DocumentReadAction for all PDF files, including digital PDF files.
    """
    SERVICE_DEFAULT = "SERVICE_DEFAULT"
    FORCE_DOCUMENT_READ_ACTION = "FORCE_DOCUMENT_READ_ACTION"


class DocumentClassifierDocumentReaderConfigFeatureTypesItem(str, Enum):
    TABLES = "TABLES"
    FORMS = "FORMS"


class DocumentClassifierInputDataConfigDataFormat(str, Enum):
    """
    The format of your training data:

    - `COMPREHEND_CSV` : A two-column CSV file, where labels are provided in the first column, and documents are provided in the second. If you use this value, you must provide the `S3Uri` parameter in your request.
    - `AUGMENTED_MANIFEST` : A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its associated labels.

    If you use this value, you must provide the `AugmentedManifests` parameter in your request.

    If you don't specify a value, Amazon Comprehend uses `COMPREHEND_CSV` as the default.
    """
    COMPREHEND_CSV = "COMPREHEND_CSV"
    AUGMENTED_MANIFEST = "AUGMENTED_MANIFEST"


class DocumentClassifierInputDataConfigDocumentType(str, Enum):
    """
    The type of input documents for training the model. Provide plain-text documents to create a plain-text model, and provide semi-structured documents to create a native document model.
    """
    PLAIN_TEXT_DOCUMENT = "PLAIN_TEXT_DOCUMENT"
    SEMI_STRUCTURED_DOCUMENT = "SEMI_STRUCTURED_DOCUMENT"


class DocumentClassifierLanguageCode(str, Enum):
    """
    The language of the input documents. You can specify any of the languages supported by Amazon Comprehend. All documents must be in the same language.
    """
    EN = "en"
    ES = "es"
    FR = "fr"
    IT = "it"
    DE = "de"
    PT = "pt"


class DocumentClassifierMode(str, Enum):
    """
    Indicates the mode in which the classifier will be trained. The classifier can be trained in multi-class (single-label) mode or multi-label mode. Multi-class mode identifies a single class label for each document and multi-label mode identifies one or more class labels for each document. Multiple labels for an individual document are separated by a delimiter. The default delimiter between labels is a pipe (|).
    """
    MULTI_CLASS = "MULTI_CLASS"
    MULTI_LABEL = "MULTI_LABEL"


class FlywheelDocumentClassificationConfigMode(str, Enum):
    """
    Classification mode indicates whether the documents are `MULTI_CLASS` or `MULTI_LABEL` .
    """
    MULTI_CLASS = "MULTI_CLASS"
    MULTI_LABEL = "MULTI_LABEL"


class FlywheelModelType(str, Enum):
    """
    Model type of the flywheel's model.
    """
    DOCUMENT_CLASSIFIER = "DOCUMENT_CLASSIFIER"
    ENTITY_RECOGNIZER = "ENTITY_RECOGNIZER"


class FlywheelTaskConfigLanguageCode(str, Enum):
    """
    Language code for the language that the model supports.
    """
    EN = "en"
    ES = "es"
    FR = "fr"
    IT = "it"
    DE = "de"
    PT = "pt"
