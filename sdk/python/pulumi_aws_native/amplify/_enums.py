# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AppAutoBranchCreationConfigStage',
    'AppCacheConfigType',
    'AppPlatform',
    'BranchStage',
    'DomainCertificateCertificateType',
    'DomainCertificateSettingsCertificateType',
]


class AppAutoBranchCreationConfigStage(str, Enum):
    """
    Stage for the auto created branch.
    """
    EXPERIMENTAL = "EXPERIMENTAL"
    BETA = "BETA"
    PULL_REQUEST = "PULL_REQUEST"
    PRODUCTION = "PRODUCTION"
    DEVELOPMENT = "DEVELOPMENT"


class AppCacheConfigType(str, Enum):
    """
    The type of cache configuration to use for an Amplify app.

    The `AMPLIFY_MANAGED` cache configuration automatically applies an optimized cache configuration for your app based on its platform, routing rules, and rewrite rules. This is the default setting.

    The `AMPLIFY_MANAGED_NO_COOKIES` cache configuration type is the same as `AMPLIFY_MANAGED` , except that it excludes all cookies from the cache key.
    """
    AMPLIFY_MANAGED = "AMPLIFY_MANAGED"
    AMPLIFY_MANAGED_NO_COOKIES = "AMPLIFY_MANAGED_NO_COOKIES"


class AppPlatform(str, Enum):
    """
    The platform for the Amplify app. For a static app, set the platform type to `WEB` . For a dynamic server-side rendered (SSR) app, set the platform type to `WEB_COMPUTE` . For an app requiring Amplify Hosting's original SSR support only, set the platform type to `WEB_DYNAMIC` .

    If you are deploying an SSG only app with Next.js version 14 or later, you must set the platform type to `WEB_COMPUTE` and set the artifacts `baseDirectory` to `.next` in the application's build settings. For an example of the build specification settings, see [Amplify build settings for a Next.js 14 SSG application](https://docs.aws.amazon.com/amplify/latest/userguide/deploy-nextjs-app.html#build-setting-detection-ssg-14) in the *Amplify Hosting User Guide* .
    """
    WEB = "WEB"
    WEB_DYNAMIC = "WEB_DYNAMIC"
    WEB_COMPUTE = "WEB_COMPUTE"


class BranchStage(str, Enum):
    """
    Describes the current stage for the branch.
    """
    EXPERIMENTAL = "EXPERIMENTAL"
    BETA = "BETA"
    PULL_REQUEST = "PULL_REQUEST"
    PRODUCTION = "PRODUCTION"
    DEVELOPMENT = "DEVELOPMENT"


class DomainCertificateCertificateType(str, Enum):
    """
    The type of SSL/TLS certificate that you want to use.

    Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.

    Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
    """
    AMPLIFY_MANAGED = "AMPLIFY_MANAGED"
    CUSTOM = "CUSTOM"


class DomainCertificateSettingsCertificateType(str, Enum):
    """
    The certificate type.

    Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.

    Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
    """
    AMPLIFY_MANAGED = "AMPLIFY_MANAGED"
    CUSTOM = "CUSTOM"
