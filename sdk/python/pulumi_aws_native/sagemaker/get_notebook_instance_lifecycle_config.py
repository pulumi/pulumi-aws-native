# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetNotebookInstanceLifecycleConfigResult',
    'AwaitableGetNotebookInstanceLifecycleConfigResult',
    'get_notebook_instance_lifecycle_config',
    'get_notebook_instance_lifecycle_config_output',
]

@pulumi.output_type
class GetNotebookInstanceLifecycleConfigResult:
    def __init__(__self__, id=None, on_create=None, on_start=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if on_create and not isinstance(on_create, list):
            raise TypeError("Expected argument 'on_create' to be a list")
        pulumi.set(__self__, "on_create", on_create)
        if on_start and not isinstance(on_start, list):
            raise TypeError("Expected argument 'on_start' to be a list")
        pulumi.set(__self__, "on_start", on_start)

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="onCreate")
    def on_create(self) -> Optional[Sequence['outputs.NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook']]:
        return pulumi.get(self, "on_create")

    @property
    @pulumi.getter(name="onStart")
    def on_start(self) -> Optional[Sequence['outputs.NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook']]:
        return pulumi.get(self, "on_start")


class AwaitableGetNotebookInstanceLifecycleConfigResult(GetNotebookInstanceLifecycleConfigResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNotebookInstanceLifecycleConfigResult(
            id=self.id,
            on_create=self.on_create,
            on_start=self.on_start)


def get_notebook_instance_lifecycle_config(id: Optional[str] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNotebookInstanceLifecycleConfigResult:
    """
    Resource Type definition for AWS::SageMaker::NotebookInstanceLifecycleConfig
    """
    __args__ = dict()
    __args__['id'] = id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aws-native:sagemaker:getNotebookInstanceLifecycleConfig', __args__, opts=opts, typ=GetNotebookInstanceLifecycleConfigResult).value

    return AwaitableGetNotebookInstanceLifecycleConfigResult(
        id=__ret__.id,
        on_create=__ret__.on_create,
        on_start=__ret__.on_start)


@_utilities.lift_output_func(get_notebook_instance_lifecycle_config)
def get_notebook_instance_lifecycle_config_output(id: Optional[pulumi.Input[str]] = None,
                                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNotebookInstanceLifecycleConfigResult]:
    """
    Resource Type definition for AWS::SageMaker::NotebookInstanceLifecycleConfig
    """
    ...
