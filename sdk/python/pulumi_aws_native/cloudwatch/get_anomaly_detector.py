# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAnomalyDetectorResult',
    'AwaitableGetAnomalyDetectorResult',
    'get_anomaly_detector',
    'get_anomaly_detector_output',
]

@pulumi.output_type
class GetAnomalyDetectorResult:
    def __init__(__self__, configuration=None, id=None):
        if configuration and not isinstance(configuration, dict):
            raise TypeError("Expected argument 'configuration' to be a dict")
        pulumi.set(__self__, "configuration", configuration)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def configuration(self) -> Optional['outputs.AnomalyDetectorConfiguration']:
        return pulumi.get(self, "configuration")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")


class AwaitableGetAnomalyDetectorResult(GetAnomalyDetectorResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAnomalyDetectorResult(
            configuration=self.configuration,
            id=self.id)


def get_anomaly_detector(id: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAnomalyDetectorResult:
    """
    Resource Type definition for AWS::CloudWatch::AnomalyDetector
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:cloudwatch:getAnomalyDetector', __args__, opts=opts, typ=GetAnomalyDetectorResult).value

    return AwaitableGetAnomalyDetectorResult(
        configuration=pulumi.get(__ret__, 'configuration'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_anomaly_detector)
def get_anomaly_detector_output(id: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAnomalyDetectorResult]:
    """
    Resource Type definition for AWS::CloudWatch::AnomalyDetector
    """
    ...
