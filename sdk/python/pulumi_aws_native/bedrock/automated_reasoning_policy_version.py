# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import _inputs as _root_inputs
from .. import outputs as _root_outputs

__all__ = ['AutomatedReasoningPolicyVersionArgs', 'AutomatedReasoningPolicyVersion']

@pulumi.input_type
class AutomatedReasoningPolicyVersionArgs:
    def __init__(__self__, *,
                 policy_arn: pulumi.Input[builtins.str],
                 last_updated_definition_hash: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.CreateOnlyTagArgs']]]] = None):
        """
        The set of arguments for constructing a AutomatedReasoningPolicyVersion resource.
        :param pulumi.Input[builtins.str] policy_arn: The Amazon Resource Name (ARN) of the policy.
        :param pulumi.Input[builtins.str] last_updated_definition_hash: The hash of the policy definition that was last updated.
        :param pulumi.Input[Sequence[pulumi.Input['_root_inputs.CreateOnlyTagArgs']]] tags: The tags associated with the Automated Reasoning policy version.
        """
        pulumi.set(__self__, "policy_arn", policy_arn)
        if last_updated_definition_hash is not None:
            pulumi.set(__self__, "last_updated_definition_hash", last_updated_definition_hash)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="policyArn")
    def policy_arn(self) -> pulumi.Input[builtins.str]:
        """
        The Amazon Resource Name (ARN) of the policy.
        """
        return pulumi.get(self, "policy_arn")

    @policy_arn.setter
    def policy_arn(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "policy_arn", value)

    @property
    @pulumi.getter(name="lastUpdatedDefinitionHash")
    def last_updated_definition_hash(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The hash of the policy definition that was last updated.
        """
        return pulumi.get(self, "last_updated_definition_hash")

    @last_updated_definition_hash.setter
    def last_updated_definition_hash(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "last_updated_definition_hash", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.CreateOnlyTagArgs']]]]:
        """
        The tags associated with the Automated Reasoning policy version.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.CreateOnlyTagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.type_token("aws-native:bedrock:AutomatedReasoningPolicyVersion")
class AutomatedReasoningPolicyVersion(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 last_updated_definition_hash: Optional[pulumi.Input[builtins.str]] = None,
                 policy_arn: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.CreateOnlyTagArgs', '_root_inputs.CreateOnlyTagArgsDict']]]]] = None,
                 __props__=None):
        """
        Definition of AWS::Bedrock::AutomatedReasoningPolicyVersion Resource Type

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] last_updated_definition_hash: The hash of the policy definition that was last updated.
        :param pulumi.Input[builtins.str] policy_arn: The Amazon Resource Name (ARN) of the policy.
        :param pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.CreateOnlyTagArgs', '_root_inputs.CreateOnlyTagArgsDict']]]] tags: The tags associated with the Automated Reasoning policy version.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AutomatedReasoningPolicyVersionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Definition of AWS::Bedrock::AutomatedReasoningPolicyVersion Resource Type

        :param str resource_name: The name of the resource.
        :param AutomatedReasoningPolicyVersionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AutomatedReasoningPolicyVersionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 last_updated_definition_hash: Optional[pulumi.Input[builtins.str]] = None,
                 policy_arn: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.CreateOnlyTagArgs', '_root_inputs.CreateOnlyTagArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AutomatedReasoningPolicyVersionArgs.__new__(AutomatedReasoningPolicyVersionArgs)

            __props__.__dict__["last_updated_definition_hash"] = last_updated_definition_hash
            if policy_arn is None and not opts.urn:
                raise TypeError("Missing required property 'policy_arn'")
            __props__.__dict__["policy_arn"] = policy_arn
            __props__.__dict__["tags"] = tags
            __props__.__dict__["created_at"] = None
            __props__.__dict__["definition_hash"] = None
            __props__.__dict__["description"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["policy_id"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["version"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["lastUpdatedDefinitionHash", "policyArn", "tags[*]"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(AutomatedReasoningPolicyVersion, __self__).__init__(
            'aws-native:bedrock:AutomatedReasoningPolicyVersion',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'AutomatedReasoningPolicyVersion':
        """
        Get an existing AutomatedReasoningPolicyVersion resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = AutomatedReasoningPolicyVersionArgs.__new__(AutomatedReasoningPolicyVersionArgs)

        __props__.__dict__["created_at"] = None
        __props__.__dict__["definition_hash"] = None
        __props__.__dict__["description"] = None
        __props__.__dict__["last_updated_definition_hash"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["policy_arn"] = None
        __props__.__dict__["policy_id"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["updated_at"] = None
        __props__.__dict__["version"] = None
        return AutomatedReasoningPolicyVersion(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[builtins.str]:
        """
        The timestamp when the policy version was created.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="definitionHash")
    def definition_hash(self) -> pulumi.Output[builtins.str]:
        """
        A hash of the policy definition used to identify the version.
        """
        return pulumi.get(self, "definition_hash")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[builtins.str]:
        """
        The description of the policy version.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="lastUpdatedDefinitionHash")
    def last_updated_definition_hash(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The hash of the policy definition that was last updated.
        """
        return pulumi.get(self, "last_updated_definition_hash")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the policy version.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="policyArn")
    def policy_arn(self) -> pulumi.Output[builtins.str]:
        """
        The Amazon Resource Name (ARN) of the policy.
        """
        return pulumi.get(self, "policy_arn")

    @property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> pulumi.Output[builtins.str]:
        """
        The unique identifier of the policy.
        """
        return pulumi.get(self, "policy_id")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['_root_outputs.CreateOnlyTag']]]:
        """
        The tags associated with the Automated Reasoning policy version.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[builtins.str]:
        """
        The timestamp when the policy version was last updated.
        """
        return pulumi.get(self, "updated_at")

    @property
    @pulumi.getter
    def version(self) -> pulumi.Output[builtins.str]:
        """
        The version number of the policy version.
        """
        return pulumi.get(self, "version")

