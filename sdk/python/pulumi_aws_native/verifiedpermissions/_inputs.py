# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'IdentitySourceCognitoUserPoolConfigurationArgs',
    'IdentitySourceConfigurationArgs',
    'PolicyDefinitionArgs',
    'PolicyStoreSchemaDefinitionArgs',
    'PolicyStoreValidationSettingsArgs',
]

@pulumi.input_type
class IdentitySourceCognitoUserPoolConfigurationArgs:
    def __init__(__self__, *,
                 user_pool_arn: pulumi.Input[str],
                 client_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        pulumi.set(__self__, "user_pool_arn", user_pool_arn)
        if client_ids is not None:
            pulumi.set(__self__, "client_ids", client_ids)

    @property
    @pulumi.getter(name="userPoolArn")
    def user_pool_arn(self) -> pulumi.Input[str]:
        return pulumi.get(self, "user_pool_arn")

    @user_pool_arn.setter
    def user_pool_arn(self, value: pulumi.Input[str]):
        pulumi.set(self, "user_pool_arn", value)

    @property
    @pulumi.getter(name="clientIds")
    def client_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "client_ids")

    @client_ids.setter
    def client_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "client_ids", value)


@pulumi.input_type
class IdentitySourceConfigurationArgs:
    def __init__(__self__, *,
                 cognito_user_pool_configuration: pulumi.Input['IdentitySourceCognitoUserPoolConfigurationArgs']):
        pulumi.set(__self__, "cognito_user_pool_configuration", cognito_user_pool_configuration)

    @property
    @pulumi.getter(name="cognitoUserPoolConfiguration")
    def cognito_user_pool_configuration(self) -> pulumi.Input['IdentitySourceCognitoUserPoolConfigurationArgs']:
        return pulumi.get(self, "cognito_user_pool_configuration")

    @cognito_user_pool_configuration.setter
    def cognito_user_pool_configuration(self, value: pulumi.Input['IdentitySourceCognitoUserPoolConfigurationArgs']):
        pulumi.set(self, "cognito_user_pool_configuration", value)


@pulumi.input_type
class PolicyDefinitionArgs:
    def __init__(__self__):
        pass


@pulumi.input_type
class PolicyStoreSchemaDefinitionArgs:
    def __init__(__self__, *,
                 cedar_json: Optional[pulumi.Input[str]] = None):
        if cedar_json is not None:
            pulumi.set(__self__, "cedar_json", cedar_json)

    @property
    @pulumi.getter(name="cedarJson")
    def cedar_json(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "cedar_json")

    @cedar_json.setter
    def cedar_json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cedar_json", value)


@pulumi.input_type
class PolicyStoreValidationSettingsArgs:
    def __init__(__self__, *,
                 mode: pulumi.Input['PolicyStoreValidationMode']):
        pulumi.set(__self__, "mode", mode)

    @property
    @pulumi.getter
    def mode(self) -> pulumi.Input['PolicyStoreValidationMode']:
        return pulumi.get(self, "mode")

    @mode.setter
    def mode(self, value: pulumi.Input['PolicyStoreValidationMode']):
        pulumi.set(self, "mode", value)


