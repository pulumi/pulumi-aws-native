# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .cache_policy import *
from .cloud_front_origin_access_identity import *
from .key_group import *
from .origin_request_policy import *
from .public_key import *
from .realtime_log_config import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "aws-native:CloudFront:CachePolicy":
                return CachePolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:CloudFront:CloudFrontOriginAccessIdentity":
                return CloudFrontOriginAccessIdentity(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:CloudFront:KeyGroup":
                return KeyGroup(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:CloudFront:OriginRequestPolicy":
                return OriginRequestPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:CloudFront:PublicKey":
                return PublicKey(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:CloudFront:RealtimeLogConfig":
                return RealtimeLogConfig(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("aws-native", "CloudFront", _module_instance)

_register_module()
