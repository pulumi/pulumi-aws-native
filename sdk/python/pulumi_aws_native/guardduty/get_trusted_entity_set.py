# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import outputs as _root_outputs
from ._enums import *

__all__ = [
    'GetTrustedEntitySetResult',
    'AwaitableGetTrustedEntitySetResult',
    'get_trusted_entity_set',
    'get_trusted_entity_set_output',
]

@pulumi.output_type
class GetTrustedEntitySetResult:
    def __init__(__self__, created_at=None, error_details=None, expected_bucket_owner=None, id=None, location=None, name=None, status=None, tags=None, updated_at=None):
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if error_details and not isinstance(error_details, str):
            raise TypeError("Expected argument 'error_details' to be a str")
        pulumi.set(__self__, "error_details", error_details)
        if expected_bucket_owner and not isinstance(expected_bucket_owner, str):
            raise TypeError("Expected argument 'expected_bucket_owner' to be a str")
        pulumi.set(__self__, "expected_bucket_owner", expected_bucket_owner)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)
        if updated_at and not isinstance(updated_at, str):
            raise TypeError("Expected argument 'updated_at' to be a str")
        pulumi.set(__self__, "updated_at", updated_at)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[builtins.str]:
        """
        The timestamp when the trusted entity set was created.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="errorDetails")
    def error_details(self) -> Optional[builtins.str]:
        """
        Specifies the error details when the status of the trusted entity set shows as *Error* .
        """
        return pulumi.get(self, "error_details")

    @property
    @pulumi.getter(name="expectedBucketOwner")
    def expected_bucket_owner(self) -> Optional[builtins.str]:
        """
        The AWS account ID that owns the Amazon S3 bucket specified in the *Location* field.

        Whether or not you provide the account ID for this optional field, GuardDuty validates that the account ID associated with the `DetectorId` value owns the S3 bucket in the `Location` field. If GuardDuty finds that this S3 bucket doesn't belong to the specified account ID, you will get an error at the time of activating this list.
        """
        return pulumi.get(self, "expected_bucket_owner")

    @property
    @pulumi.getter
    def id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def location(self) -> Optional[builtins.str]:
        """
        The URI of the file that contains the trusted entity set.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> Optional[builtins.str]:
        """
        A user-friendly name to identify the trusted entity set. Valid characters include lowercase letters, uppercase letters, numbers, dash(-), and underscore (_).
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def status(self) -> Optional['TrustedEntitySetStatus']:
        """
        The status of your `TrustedEntitySet` . For information about valid status values, see [Understanding list statuses](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#guardduty-entity-list-statuses) in the *Amazon GuardDuty User Guide* .
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        The tags to be added to a new trusted entity set resource. Each tag consists of a key and an optional value, both of which you define.

        For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[builtins.str]:
        """
        The timestamp when the trusted entity set was updated.
        """
        return pulumi.get(self, "updated_at")


class AwaitableGetTrustedEntitySetResult(GetTrustedEntitySetResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTrustedEntitySetResult(
            created_at=self.created_at,
            error_details=self.error_details,
            expected_bucket_owner=self.expected_bucket_owner,
            id=self.id,
            location=self.location,
            name=self.name,
            status=self.status,
            tags=self.tags,
            updated_at=self.updated_at)


def get_trusted_entity_set(detector_id: Optional[builtins.str] = None,
                           id: Optional[builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTrustedEntitySetResult:
    """
    Resource Type definition for AWS::GuardDuty::TrustedEntitySet


    :param builtins.str detector_id: The unique regional detector ID of the GuardDuty account for which you want to create a trusted entity set.
           
           To find the `detectorId` in the current Region, see the Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
    """
    __args__ = dict()
    __args__['detectorId'] = detector_id
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:guardduty:getTrustedEntitySet', __args__, opts=opts, typ=GetTrustedEntitySetResult).value

    return AwaitableGetTrustedEntitySetResult(
        created_at=pulumi.get(__ret__, 'created_at'),
        error_details=pulumi.get(__ret__, 'error_details'),
        expected_bucket_owner=pulumi.get(__ret__, 'expected_bucket_owner'),
        id=pulumi.get(__ret__, 'id'),
        location=pulumi.get(__ret__, 'location'),
        name=pulumi.get(__ret__, 'name'),
        status=pulumi.get(__ret__, 'status'),
        tags=pulumi.get(__ret__, 'tags'),
        updated_at=pulumi.get(__ret__, 'updated_at'))
def get_trusted_entity_set_output(detector_id: Optional[pulumi.Input[builtins.str]] = None,
                                  id: Optional[pulumi.Input[builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTrustedEntitySetResult]:
    """
    Resource Type definition for AWS::GuardDuty::TrustedEntitySet


    :param builtins.str detector_id: The unique regional detector ID of the GuardDuty account for which you want to create a trusted entity set.
           
           To find the `detectorId` in the current Region, see the Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
    """
    __args__ = dict()
    __args__['detectorId'] = detector_id
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:guardduty:getTrustedEntitySet', __args__, opts=opts, typ=GetTrustedEntitySetResult)
    return __ret__.apply(lambda __response__: GetTrustedEntitySetResult(
        created_at=pulumi.get(__response__, 'created_at'),
        error_details=pulumi.get(__response__, 'error_details'),
        expected_bucket_owner=pulumi.get(__response__, 'expected_bucket_owner'),
        id=pulumi.get(__response__, 'id'),
        location=pulumi.get(__response__, 'location'),
        name=pulumi.get(__response__, 'name'),
        status=pulumi.get(__response__, 'status'),
        tags=pulumi.get(__response__, 'tags'),
        updated_at=pulumi.get(__response__, 'updated_at')))
