# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'AppPhysicalResourceIdArgs',
    'AppResourceMappingArgs',
    'AppTagMapArgs',
    'ResiliencyPolicyPolicyMapArgs',
    'ResiliencyPolicyTagMapArgs',
]

@pulumi.input_type
class AppPhysicalResourceIdArgs:
    def __init__(__self__, *,
                 identifier: pulumi.Input[str],
                 type: pulumi.Input[str],
                 aws_account_id: Optional[pulumi.Input[str]] = None,
                 aws_region: Optional[pulumi.Input[str]] = None):
        pulumi.set(__self__, "identifier", identifier)
        pulumi.set(__self__, "type", type)
        if aws_account_id is not None:
            pulumi.set(__self__, "aws_account_id", aws_account_id)
        if aws_region is not None:
            pulumi.set(__self__, "aws_region", aws_region)

    @property
    @pulumi.getter
    def identifier(self) -> pulumi.Input[str]:
        return pulumi.get(self, "identifier")

    @identifier.setter
    def identifier(self, value: pulumi.Input[str]):
        pulumi.set(self, "identifier", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="awsAccountId")
    def aws_account_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "aws_account_id")

    @aws_account_id.setter
    def aws_account_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_account_id", value)

    @property
    @pulumi.getter(name="awsRegion")
    def aws_region(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "aws_region")

    @aws_region.setter
    def aws_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_region", value)


@pulumi.input_type
class AppResourceMappingArgs:
    def __init__(__self__, *,
                 mapping_type: pulumi.Input[str],
                 physical_resource_id: pulumi.Input['AppPhysicalResourceIdArgs'],
                 logical_stack_name: Optional[pulumi.Input[str]] = None,
                 resource_name: Optional[pulumi.Input[str]] = None):
        """
        Resource mapping is used to map logical resources from template to physical resource
        """
        pulumi.set(__self__, "mapping_type", mapping_type)
        pulumi.set(__self__, "physical_resource_id", physical_resource_id)
        if logical_stack_name is not None:
            pulumi.set(__self__, "logical_stack_name", logical_stack_name)
        if resource_name is not None:
            pulumi.set(__self__, "resource_name", resource_name)

    @property
    @pulumi.getter(name="mappingType")
    def mapping_type(self) -> pulumi.Input[str]:
        return pulumi.get(self, "mapping_type")

    @mapping_type.setter
    def mapping_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "mapping_type", value)

    @property
    @pulumi.getter(name="physicalResourceId")
    def physical_resource_id(self) -> pulumi.Input['AppPhysicalResourceIdArgs']:
        return pulumi.get(self, "physical_resource_id")

    @physical_resource_id.setter
    def physical_resource_id(self, value: pulumi.Input['AppPhysicalResourceIdArgs']):
        pulumi.set(self, "physical_resource_id", value)

    @property
    @pulumi.getter(name="logicalStackName")
    def logical_stack_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "logical_stack_name")

    @logical_stack_name.setter
    def logical_stack_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "logical_stack_name", value)

    @property
    @pulumi.getter(name="resourceName")
    def resource_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "resource_name")

    @resource_name.setter
    def resource_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_name", value)


@pulumi.input_type
class AppTagMapArgs:
    def __init__(__self__):
        pass


@pulumi.input_type
class ResiliencyPolicyPolicyMapArgs:
    def __init__(__self__):
        pass


@pulumi.input_type
class ResiliencyPolicyTagMapArgs:
    def __init__(__self__):
        pass


