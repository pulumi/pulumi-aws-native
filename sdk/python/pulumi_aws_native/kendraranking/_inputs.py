# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ExecutionPlanCapacityUnitsConfigurationArgs',
]

@pulumi.input_type
class ExecutionPlanCapacityUnitsConfigurationArgs:
    def __init__(__self__, *,
                 rescore_capacity_units: pulumi.Input[int]):
        """
        :param pulumi.Input[int] rescore_capacity_units: The amount of extra capacity for your rescore execution plan.
               
               A single extra capacity unit for a rescore execution plan provides 0.01 rescore requests per second. You can add up to 1000 extra capacity units.
        """
        pulumi.set(__self__, "rescore_capacity_units", rescore_capacity_units)

    @property
    @pulumi.getter(name="rescoreCapacityUnits")
    def rescore_capacity_units(self) -> pulumi.Input[int]:
        """
        The amount of extra capacity for your rescore execution plan.

        A single extra capacity unit for a rescore execution plan provides 0.01 rescore requests per second. You can add up to 1000 extra capacity units.
        """
        return pulumi.get(self, "rescore_capacity_units")

    @rescore_capacity_units.setter
    def rescore_capacity_units(self, value: pulumi.Input[int]):
        pulumi.set(self, "rescore_capacity_units", value)


