# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetPortfolioShareResult',
    'AwaitableGetPortfolioShareResult',
    'get_portfolio_share',
    'get_portfolio_share_output',
]

@pulumi.output_type
class GetPortfolioShareResult:
    def __init__(__self__, id=None, share_tag_options=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if share_tag_options and not isinstance(share_tag_options, bool):
            raise TypeError("Expected argument 'share_tag_options' to be a bool")
        pulumi.set(__self__, "share_tag_options", share_tag_options)

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="shareTagOptions")
    def share_tag_options(self) -> Optional[bool]:
        return pulumi.get(self, "share_tag_options")


class AwaitableGetPortfolioShareResult(GetPortfolioShareResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPortfolioShareResult(
            id=self.id,
            share_tag_options=self.share_tag_options)


def get_portfolio_share(id: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPortfolioShareResult:
    """
    Resource Type definition for AWS::ServiceCatalog::PortfolioShare
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:servicecatalog:getPortfolioShare', __args__, opts=opts, typ=GetPortfolioShareResult).value

    return AwaitableGetPortfolioShareResult(
        id=pulumi.get(__ret__, 'id'),
        share_tag_options=pulumi.get(__ret__, 'share_tag_options'))


@_utilities.lift_output_func(get_portfolio_share)
def get_portfolio_share_output(id: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPortfolioShareResult]:
    """
    Resource Type definition for AWS::ServiceCatalog::PortfolioShare
    """
    ...
