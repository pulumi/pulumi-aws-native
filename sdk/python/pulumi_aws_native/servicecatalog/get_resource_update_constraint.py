# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetResourceUpdateConstraintResult',
    'AwaitableGetResourceUpdateConstraintResult',
    'get_resource_update_constraint',
    'get_resource_update_constraint_output',
]

@pulumi.output_type
class GetResourceUpdateConstraintResult:
    def __init__(__self__, description=None, id=None, tag_update_on_provisioned_product=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if tag_update_on_provisioned_product and not isinstance(tag_update_on_provisioned_product, str):
            raise TypeError("Expected argument 'tag_update_on_provisioned_product' to be a str")
        pulumi.set(__self__, "tag_update_on_provisioned_product", tag_update_on_provisioned_product)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The description of the constraint
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        Unique identifier for the constraint
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="tagUpdateOnProvisionedProduct")
    def tag_update_on_provisioned_product(self) -> Optional[_builtins.str]:
        """
        ALLOWED or NOT_ALLOWED, to permit or prevent changes to the tags on provisioned instances of the specified portfolio / product combination
        """
        return pulumi.get(self, "tag_update_on_provisioned_product")


class AwaitableGetResourceUpdateConstraintResult(GetResourceUpdateConstraintResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourceUpdateConstraintResult(
            description=self.description,
            id=self.id,
            tag_update_on_provisioned_product=self.tag_update_on_provisioned_product)


def get_resource_update_constraint(id: Optional[_builtins.str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourceUpdateConstraintResult:
    """
    Resource type definition for AWS::ServiceCatalog::ResourceUpdateConstraint


    :param _builtins.str id: Unique identifier for the constraint
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:servicecatalog:getResourceUpdateConstraint', __args__, opts=opts, typ=GetResourceUpdateConstraintResult).value

    return AwaitableGetResourceUpdateConstraintResult(
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        tag_update_on_provisioned_product=pulumi.get(__ret__, 'tag_update_on_provisioned_product'))
def get_resource_update_constraint_output(id: Optional[pulumi.Input[_builtins.str]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetResourceUpdateConstraintResult]:
    """
    Resource type definition for AWS::ServiceCatalog::ResourceUpdateConstraint


    :param _builtins.str id: Unique identifier for the constraint
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:servicecatalog:getResourceUpdateConstraint', __args__, opts=opts, typ=GetResourceUpdateConstraintResult)
    return __ret__.apply(lambda __response__: GetResourceUpdateConstraintResult(
        description=pulumi.get(__response__, 'description'),
        id=pulumi.get(__response__, 'id'),
        tag_update_on_provisioned_product=pulumi.get(__response__, 'tag_update_on_provisioned_product')))
