# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetTagOptionResult',
    'AwaitableGetTagOptionResult',
    'get_tag_option',
    'get_tag_option_output',
]

@pulumi.output_type
class GetTagOptionResult:
    def __init__(__self__, active=None, id=None):
        if active and not isinstance(active, bool):
            raise TypeError("Expected argument 'active' to be a bool")
        pulumi.set(__self__, "active", active)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def active(self) -> Optional[builtins.bool]:
        """
        The TagOption active state.
        """
        return pulumi.get(self, "active")

    @property
    @pulumi.getter
    def id(self) -> Optional[builtins.str]:
        """
        The TagOption identifier.
        """
        return pulumi.get(self, "id")


class AwaitableGetTagOptionResult(GetTagOptionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTagOptionResult(
            active=self.active,
            id=self.id)


def get_tag_option(id: Optional[builtins.str] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTagOptionResult:
    """
    Resource type definition for AWS::ServiceCatalog::TagOption


    :param builtins.str id: The TagOption identifier.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:servicecatalog:getTagOption', __args__, opts=opts, typ=GetTagOptionResult).value

    return AwaitableGetTagOptionResult(
        active=pulumi.get(__ret__, 'active'),
        id=pulumi.get(__ret__, 'id'))
def get_tag_option_output(id: Optional[pulumi.Input[builtins.str]] = None,
                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTagOptionResult]:
    """
    Resource type definition for AWS::ServiceCatalog::TagOption


    :param builtins.str id: The TagOption identifier.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:servicecatalog:getTagOption', __args__, opts=opts, typ=GetTagOptionResult)
    return __ret__.apply(lambda __response__: GetTagOptionResult(
        active=pulumi.get(__response__, 'active'),
        id=pulumi.get(__response__, 'id')))
