# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetLaunchConfigurationResult',
    'AwaitableGetLaunchConfigurationResult',
    'get_launch_configuration',
    'get_launch_configuration_output',
]

@pulumi.output_type
class GetLaunchConfigurationResult:
    def __init__(__self__):


class AwaitableGetLaunchConfigurationResult(GetLaunchConfigurationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLaunchConfigurationResult(
)


def get_launch_configuration(launch_configuration_name: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLaunchConfigurationResult:
    """
    The AWS::AutoScaling::LaunchConfiguration resource specifies the launch configuration that can be used by an Auto Scaling group to configure Amazon EC2 instances.


    :param str launch_configuration_name: The name of the launch configuration. This name must be unique per Region per account.
    """
    __args__ = dict()
    __args__['launchConfigurationName'] = launch_configuration_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aws-native:autoscaling:getLaunchConfiguration', __args__, opts=opts, typ=GetLaunchConfigurationResult).value

    return AwaitableGetLaunchConfigurationResult(


@_utilities.lift_output_func(get_launch_configuration)
def get_launch_configuration_output(launch_configuration_name: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetLaunchConfigurationResult]:
    """
    The AWS::AutoScaling::LaunchConfiguration resource specifies the launch configuration that can be used by an Auto Scaling group to configure Amazon EC2 instances.


    :param str launch_configuration_name: The name of the launch configuration. This name must be unique per Region per account.
    """
    ...
