# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetStorageProfileResult',
    'AwaitableGetStorageProfileResult',
    'get_storage_profile',
    'get_storage_profile_output',
]

@pulumi.output_type
class GetStorageProfileResult:
    def __init__(__self__, display_name=None, file_system_locations=None, os_family=None, storage_profile_id=None):
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        pulumi.set(__self__, "display_name", display_name)
        if file_system_locations and not isinstance(file_system_locations, list):
            raise TypeError("Expected argument 'file_system_locations' to be a list")
        pulumi.set(__self__, "file_system_locations", file_system_locations)
        if os_family and not isinstance(os_family, str):
            raise TypeError("Expected argument 'os_family' to be a str")
        pulumi.set(__self__, "os_family", os_family)
        if storage_profile_id and not isinstance(storage_profile_id, str):
            raise TypeError("Expected argument 'storage_profile_id' to be a str")
        pulumi.set(__self__, "storage_profile_id", storage_profile_id)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[str]:
        """
        The display name of the storage profile summary to update.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="fileSystemLocations")
    def file_system_locations(self) -> Optional[Sequence['outputs.StorageProfileFileSystemLocation']]:
        """
        Operating system specific file system path to the storage location.
        """
        return pulumi.get(self, "file_system_locations")

    @property
    @pulumi.getter(name="osFamily")
    def os_family(self) -> Optional['StorageProfileOperatingSystemFamily']:
        """
        The operating system (OS) family.
        """
        return pulumi.get(self, "os_family")

    @property
    @pulumi.getter(name="storageProfileId")
    def storage_profile_id(self) -> Optional[str]:
        """
        The storage profile ID.
        """
        return pulumi.get(self, "storage_profile_id")


class AwaitableGetStorageProfileResult(GetStorageProfileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetStorageProfileResult(
            display_name=self.display_name,
            file_system_locations=self.file_system_locations,
            os_family=self.os_family,
            storage_profile_id=self.storage_profile_id)


def get_storage_profile(farm_id: Optional[str] = None,
                        storage_profile_id: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetStorageProfileResult:
    """
    Definition of AWS::Deadline::StorageProfile Resource Type


    :param str farm_id: The unique identifier of the farm that contains the storage profile.
    :param str storage_profile_id: The storage profile ID.
    """
    __args__ = dict()
    __args__['farmId'] = farm_id
    __args__['storageProfileId'] = storage_profile_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:deadline:getStorageProfile', __args__, opts=opts, typ=GetStorageProfileResult).value

    return AwaitableGetStorageProfileResult(
        display_name=pulumi.get(__ret__, 'display_name'),
        file_system_locations=pulumi.get(__ret__, 'file_system_locations'),
        os_family=pulumi.get(__ret__, 'os_family'),
        storage_profile_id=pulumi.get(__ret__, 'storage_profile_id'))


@_utilities.lift_output_func(get_storage_profile)
def get_storage_profile_output(farm_id: Optional[pulumi.Input[str]] = None,
                               storage_profile_id: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetStorageProfileResult]:
    """
    Definition of AWS::Deadline::StorageProfile Resource Type


    :param str farm_id: The unique identifier of the farm that contains the storage profile.
    :param str storage_profile_id: The storage profile ID.
    """
    ...
