# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetUserToGroupAdditionResult',
    'AwaitableGetUserToGroupAdditionResult',
    'get_user_to_group_addition',
    'get_user_to_group_addition_output',
]

@pulumi.output_type
class GetUserToGroupAdditionResult:
    def __init__(__self__, group_name=None, id=None, users=None):
        if group_name and not isinstance(group_name, str):
            raise TypeError("Expected argument 'group_name' to be a str")
        pulumi.set(__self__, "group_name", group_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if users and not isinstance(users, list):
            raise TypeError("Expected argument 'users' to be a list")
        pulumi.set(__self__, "users", users)

    @property
    @pulumi.getter(name="groupName")
    def group_name(self) -> Optional[str]:
        return pulumi.get(self, "group_name")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def users(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "users")


class AwaitableGetUserToGroupAdditionResult(GetUserToGroupAdditionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUserToGroupAdditionResult(
            group_name=self.group_name,
            id=self.id,
            users=self.users)


def get_user_to_group_addition(id: Optional[str] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUserToGroupAdditionResult:
    """
    Resource Type definition for AWS::IAM::UserToGroupAddition
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:iam:getUserToGroupAddition', __args__, opts=opts, typ=GetUserToGroupAdditionResult).value

    return AwaitableGetUserToGroupAdditionResult(
        group_name=__ret__.group_name,
        id=__ret__.id,
        users=__ret__.users)


@_utilities.lift_output_func(get_user_to_group_addition)
def get_user_to_group_addition_output(id: Optional[pulumi.Input[str]] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetUserToGroupAdditionResult]:
    """
    Resource Type definition for AWS::IAM::UserToGroupAddition
    """
    ...
