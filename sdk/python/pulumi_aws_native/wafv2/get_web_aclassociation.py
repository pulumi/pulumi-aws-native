# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetWebACLAssociationResult',
    'AwaitableGetWebACLAssociationResult',
    'get_web_aclassociation',
    'get_web_aclassociation_output',
]

@pulumi.output_type
class GetWebACLAssociationResult:
    def __init__(__self__):


class AwaitableGetWebACLAssociationResult(GetWebACLAssociationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWebACLAssociationResult(
)


def get_web_aclassociation(resource_arn: Optional[str] = None,
                           web_acl_arn: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWebACLAssociationResult:
    """
    Associates WebACL to Application Load Balancer, CloudFront or API Gateway.
    """
    __args__ = dict()
    __args__['resourceArn'] = resource_arn
    __args__['webACLArn'] = web_acl_arn
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aws-native:wafv2:getWebACLAssociation', __args__, opts=opts, typ=GetWebACLAssociationResult).value

    return AwaitableGetWebACLAssociationResult(


@_utilities.lift_output_func(get_web_aclassociation)
def get_web_aclassociation_output(resource_arn: Optional[pulumi.Input[str]] = None,
                                  web_acl_arn: Optional[pulumi.Input[str]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetWebACLAssociationResult]:
    """
    Associates WebACL to Application Load Balancer, CloudFront or API Gateway.
    """
    ...
