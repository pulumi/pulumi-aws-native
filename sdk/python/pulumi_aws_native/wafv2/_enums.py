# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'IpSetIpAddressVersion',
    'IpSetScope',
    'LoggingConfigurationConditionActionConditionPropertiesAction',
    'LoggingConfigurationFilterBehavior',
    'LoggingConfigurationFilterRequirement',
    'LoggingConfigurationLoggingFilterPropertiesDefaultBehavior',
    'RegexPatternSetScope',
    'RuleGroupBodyParsingFallbackBehavior',
    'RuleGroupForwardedIpConfigurationFallbackBehavior',
    'RuleGroupIpSetForwardedIpConfigurationFallbackBehavior',
    'RuleGroupIpSetForwardedIpConfigurationPosition',
    'RuleGroupJa3FingerprintFallbackBehavior',
    'RuleGroupJsonMatchScope',
    'RuleGroupLabelMatchScope',
    'RuleGroupMapMatchScope',
    'RuleGroupOversizeHandling',
    'RuleGroupPositionalConstraint',
    'RuleGroupRateBasedStatementAggregateKeyType',
    'RuleGroupResponseContentType',
    'RuleGroupScope',
    'RuleGroupSensitivityLevel',
    'RuleGroupSizeConstraintStatementComparisonOperator',
    'RuleGroupTextTransformationType',
    'WebAclAwsManagedRulesBotControlRuleSetInspectionLevel',
    'WebAclBodyParsingFallbackBehavior',
    'WebAclForwardedIpConfigurationFallbackBehavior',
    'WebAclIpSetForwardedIpConfigurationFallbackBehavior',
    'WebAclIpSetForwardedIpConfigurationPosition',
    'WebAclJa3FingerprintFallbackBehavior',
    'WebAclJsonMatchScope',
    'WebAclLabelMatchScope',
    'WebAclManagedRuleGroupConfigPayloadType',
    'WebAclMapMatchScope',
    'WebAclOversizeHandling',
    'WebAclPositionalConstraint',
    'WebAclRateBasedStatementAggregateKeyType',
    'WebAclRequestInspectionAcfpPayloadType',
    'WebAclRequestInspectionPayloadType',
    'WebAclResponseContentType',
    'WebAclScope',
    'WebAclSensitivityLevel',
    'WebAclSizeConstraintStatementComparisonOperator',
    'WebAclSizeInspectionLimit',
    'WebAclTextTransformationType',
]


class IpSetIpAddressVersion(str, Enum):
    """
    Type of addresses in the IPSet, use IPV4 for IPV4 IP addresses, IPV6 for IPV6 address.
    """
    IPV4 = "IPV4"
    IPV6 = "IPV6"


class IpSetScope(str, Enum):
    """
    Use CLOUDFRONT for CloudFront IPSet, use REGIONAL for Application Load Balancer and API Gateway.
    """
    CLOUDFRONT = "CLOUDFRONT"
    REGIONAL = "REGIONAL"


class LoggingConfigurationConditionActionConditionPropertiesAction(str, Enum):
    """
    Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
    """
    ALLOW = "ALLOW"
    BLOCK = "BLOCK"
    COUNT = "COUNT"
    CAPTCHA = "CAPTCHA"
    CHALLENGE = "CHALLENGE"
    EXCLUDED_AS_COUNT = "EXCLUDED_AS_COUNT"


class LoggingConfigurationFilterBehavior(str, Enum):
    """
    How to handle logs that satisfy the filter's conditions and requirement. 
    """
    KEEP = "KEEP"
    DROP = "DROP"


class LoggingConfigurationFilterRequirement(str, Enum):
    """
    Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
    """
    MEETS_ALL = "MEETS_ALL"
    MEETS_ANY = "MEETS_ANY"


class LoggingConfigurationLoggingFilterPropertiesDefaultBehavior(str, Enum):
    """
    Default handling for logs that don't match any of the specified filtering conditions.
    """
    KEEP = "KEEP"
    DROP = "DROP"


class RegexPatternSetScope(str, Enum):
    """
    Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway.
    """
    CLOUDFRONT = "CLOUDFRONT"
    REGIONAL = "REGIONAL"


class RuleGroupBodyParsingFallbackBehavior(str, Enum):
    """
    The inspection behavior to fall back to if the JSON in the request body is invalid.
    """
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"
    EVALUATE_AS_STRING = "EVALUATE_AS_STRING"


class RuleGroupForwardedIpConfigurationFallbackBehavior(str, Enum):
    """
    The match status to assign to the web request if the request doesn't have a valid IP address in the specified position.

    > If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all. 

    You can specify the following fallback behaviors:

    - `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.
    - `NO_MATCH` - Treat the web request as not matching the rule statement.
    """
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"


class RuleGroupIpSetForwardedIpConfigurationFallbackBehavior(str, Enum):
    """
    The match status to assign to the web request if the request doesn't have a valid IP address in the specified position.

    > If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all. 

    You can specify the following fallback behaviors:

    - `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.
    - `NO_MATCH` - Treat the web request as not matching the rule statement.
    """
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"


class RuleGroupIpSetForwardedIpConfigurationPosition(str, Enum):
    """
    The position in the header to search for the IP address. The header can contain IP addresses of the original client and also of proxies. For example, the header value could be `10.1.1.1, 127.0.0.0, 10.10.10.10` where the first IP address identifies the original client and the rest identify proxies that the request went through.

    The options for this setting are the following:

    - FIRST - Inspect the first IP address in the list of IP addresses in the header. This is usually the client's original IP.
    - LAST - Inspect the last IP address in the list of IP addresses in the header.
    - ANY - Inspect all IP addresses in the header for a match. If the header contains more than 10 IP addresses, AWS WAF inspects the last 10.
    """
    FIRST = "FIRST"
    LAST = "LAST"
    ANY = "ANY"


class RuleGroupJa3FingerprintFallbackBehavior(str, Enum):
    """
    The match status to assign to the web request if the request doesn't have a JA3 fingerprint.

    You can specify the following fallback behaviors:

    - `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.
    - `NO_MATCH` - Treat the web request as not matching the rule statement.
    """
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"


class RuleGroupJsonMatchScope(str, Enum):
    """
    The parts of the JSON to match against using the MatchPattern.
    """
    ALL = "ALL"
    KEY = "KEY"
    VALUE = "VALUE"


class RuleGroupLabelMatchScope(str, Enum):
    LABEL = "LABEL"
    NAMESPACE = "NAMESPACE"


class RuleGroupMapMatchScope(str, Enum):
    """
    The parts of the request to match against using the MatchPattern.
    """
    ALL = "ALL"
    KEY = "KEY"
    VALUE = "VALUE"


class RuleGroupOversizeHandling(str, Enum):
    """
    Handling of requests containing oversize fields
    """
    CONTINUE_ = "CONTINUE"
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"


class RuleGroupPositionalConstraint(str, Enum):
    """
    Position of the evaluation in the FieldToMatch of request.
    """
    EXACTLY = "EXACTLY"
    STARTS_WITH = "STARTS_WITH"
    ENDS_WITH = "ENDS_WITH"
    CONTAINS = "CONTAINS"
    CONTAINS_WORD = "CONTAINS_WORD"


class RuleGroupRateBasedStatementAggregateKeyType(str, Enum):
    """
    Setting that indicates how to aggregate the request counts.

    > Web requests that are missing any of the components specified in the aggregation keys are omitted from the rate-based rule evaluation and handling. 

    - `CONSTANT` - Count and limit the requests that match the rate-based rule's scope-down statement. With this option, the counted requests aren't further aggregated. The scope-down statement is the only specification used. When the count of all requests that satisfy the scope-down statement goes over the limit, AWS WAF applies the rule action to all requests that satisfy the scope-down statement.

    With this option, you must configure the `ScopeDownStatement` property.
    - `CUSTOM_KEYS` - Aggregate the request counts using one or more web request components as the aggregate keys.

    With this option, you must specify the aggregate keys in the `CustomKeys` property.

    To aggregate on only the IP address or only the forwarded IP address, don't use custom keys. Instead, set the aggregate key type to `IP` or `FORWARDED_IP` .
    - `FORWARDED_IP` - Aggregate the request counts on the first IP address in an HTTP header.

    With this option, you must specify the header to use in the `ForwardedIPConfig` property.

    To aggregate on a combination of the forwarded IP address with other aggregate keys, use `CUSTOM_KEYS` .
    - `IP` - Aggregate the request counts on the IP address from the web request origin.

    To aggregate on a combination of the IP address with other aggregate keys, use `CUSTOM_KEYS` .
    """
    IP = "IP"
    FORWARDED_IP = "FORWARDED_IP"
    CONSTANT = "CONSTANT"
    CUSTOM_KEYS = "CUSTOM_KEYS"


class RuleGroupResponseContentType(str, Enum):
    """
    Valid values are TEXT_PLAIN, TEXT_HTML, and APPLICATION_JSON.
    """
    TEXT_PLAIN = "TEXT_PLAIN"
    TEXT_HTML = "TEXT_HTML"
    APPLICATION_JSON = "APPLICATION_JSON"


class RuleGroupScope(str, Enum):
    """
    Use CLOUDFRONT for CloudFront RuleGroup, use REGIONAL for Application Load Balancer and API Gateway.
    """
    CLOUDFRONT = "CLOUDFRONT"
    REGIONAL = "REGIONAL"


class RuleGroupSensitivityLevel(str, Enum):
    """
    Sensitivity Level current only used for sqli match statements.
    """
    LOW = "LOW"
    HIGH = "HIGH"


class RuleGroupSizeConstraintStatementComparisonOperator(str, Enum):
    """
    The operator to use to compare the request part to the size setting.
    """
    EQ = "EQ"
    NE = "NE"
    LE = "LE"
    LT = "LT"
    GE = "GE"
    GT = "GT"


class RuleGroupTextTransformationType(str, Enum):
    """
    Type of text transformation.
    """
    NONE = "NONE"
    COMPRESS_WHITE_SPACE = "COMPRESS_WHITE_SPACE"
    HTML_ENTITY_DECODE = "HTML_ENTITY_DECODE"
    LOWERCASE = "LOWERCASE"
    CMD_LINE = "CMD_LINE"
    URL_DECODE = "URL_DECODE"
    BASE64_DECODE = "BASE64_DECODE"
    HEX_DECODE = "HEX_DECODE"
    MD5 = "MD5"
    REPLACE_COMMENTS = "REPLACE_COMMENTS"
    ESCAPE_SEQ_DECODE = "ESCAPE_SEQ_DECODE"
    SQL_HEX_DECODE = "SQL_HEX_DECODE"
    CSS_DECODE = "CSS_DECODE"
    JS_DECODE = "JS_DECODE"
    NORMALIZE_PATH = "NORMALIZE_PATH"
    NORMALIZE_PATH_WIN = "NORMALIZE_PATH_WIN"
    REMOVE_NULLS = "REMOVE_NULLS"
    REPLACE_NULLS = "REPLACE_NULLS"
    BASE64_DECODE_EXT = "BASE64_DECODE_EXT"
    URL_DECODE_UNI = "URL_DECODE_UNI"
    UTF8_TO_UNICODE = "UTF8_TO_UNICODE"


class WebAclAwsManagedRulesBotControlRuleSetInspectionLevel(str, Enum):
    """
    The inspection level to use for the Bot Control rule group. The common level is the least expensive. The targeted level includes all common level rules and adds rules with more advanced inspection criteria. For details, see [AWS WAF Bot Control rule group](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-bot.html) in the *AWS WAF Developer Guide* .
    """
    COMMON = "COMMON"
    TARGETED = "TARGETED"


class WebAclBodyParsingFallbackBehavior(str, Enum):
    """
    The inspection behavior to fall back to if the JSON in the request body is invalid.
    """
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"
    EVALUATE_AS_STRING = "EVALUATE_AS_STRING"


class WebAclForwardedIpConfigurationFallbackBehavior(str, Enum):
    """
    The match status to assign to the web request if the request doesn't have a valid IP address in the specified position.

    > If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all. 

    You can specify the following fallback behaviors:

    - `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.
    - `NO_MATCH` - Treat the web request as not matching the rule statement.
    """
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"


class WebAclIpSetForwardedIpConfigurationFallbackBehavior(str, Enum):
    """
    The match status to assign to the web request if the request doesn't have a valid IP address in the specified position.

    > If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all. 

    You can specify the following fallback behaviors:

    - `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.
    - `NO_MATCH` - Treat the web request as not matching the rule statement.
    """
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"


class WebAclIpSetForwardedIpConfigurationPosition(str, Enum):
    """
    The position in the header to search for the IP address. The header can contain IP addresses of the original client and also of proxies. For example, the header value could be `10.1.1.1, 127.0.0.0, 10.10.10.10` where the first IP address identifies the original client and the rest identify proxies that the request went through.

    The options for this setting are the following:

    - FIRST - Inspect the first IP address in the list of IP addresses in the header. This is usually the client's original IP.
    - LAST - Inspect the last IP address in the list of IP addresses in the header.
    - ANY - Inspect all IP addresses in the header for a match. If the header contains more than 10 IP addresses, AWS WAF inspects the last 10.
    """
    FIRST = "FIRST"
    LAST = "LAST"
    ANY = "ANY"


class WebAclJa3FingerprintFallbackBehavior(str, Enum):
    """
    The match status to assign to the web request if the request doesn't have a JA3 fingerprint.

    You can specify the following fallback behaviors:

    - `MATCH` - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.
    - `NO_MATCH` - Treat the web request as not matching the rule statement.
    """
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"


class WebAclJsonMatchScope(str, Enum):
    """
    The parts of the JSON to match against using the MatchPattern.
    """
    ALL = "ALL"
    KEY = "KEY"
    VALUE = "VALUE"


class WebAclLabelMatchScope(str, Enum):
    LABEL = "LABEL"
    NAMESPACE = "NAMESPACE"


class WebAclManagedRuleGroupConfigPayloadType(str, Enum):
    """
    > Instead of this setting, provide your configuration under the request inspection configuration for `AWSManagedRulesATPRuleSet` or `AWSManagedRulesACFPRuleSet` .
    """
    JSON = "JSON"
    FORM_ENCODED = "FORM_ENCODED"


class WebAclMapMatchScope(str, Enum):
    """
    The parts of the request to match against using the MatchPattern.
    """
    ALL = "ALL"
    KEY = "KEY"
    VALUE = "VALUE"


class WebAclOversizeHandling(str, Enum):
    """
    Handling of requests containing oversize fields
    """
    CONTINUE_ = "CONTINUE"
    MATCH = "MATCH"
    NO_MATCH = "NO_MATCH"


class WebAclPositionalConstraint(str, Enum):
    """
    Position of the evaluation in the FieldToMatch of request.
    """
    EXACTLY = "EXACTLY"
    STARTS_WITH = "STARTS_WITH"
    ENDS_WITH = "ENDS_WITH"
    CONTAINS = "CONTAINS"
    CONTAINS_WORD = "CONTAINS_WORD"


class WebAclRateBasedStatementAggregateKeyType(str, Enum):
    """
    Setting that indicates how to aggregate the request counts.

    > Web requests that are missing any of the components specified in the aggregation keys are omitted from the rate-based rule evaluation and handling. 

    - `CONSTANT` - Count and limit the requests that match the rate-based rule's scope-down statement. With this option, the counted requests aren't further aggregated. The scope-down statement is the only specification used. When the count of all requests that satisfy the scope-down statement goes over the limit, AWS WAF applies the rule action to all requests that satisfy the scope-down statement.

    With this option, you must configure the `ScopeDownStatement` property.
    - `CUSTOM_KEYS` - Aggregate the request counts using one or more web request components as the aggregate keys.

    With this option, you must specify the aggregate keys in the `CustomKeys` property.

    To aggregate on only the IP address or only the forwarded IP address, don't use custom keys. Instead, set the aggregate key type to `IP` or `FORWARDED_IP` .
    - `FORWARDED_IP` - Aggregate the request counts on the first IP address in an HTTP header.

    With this option, you must specify the header to use in the `ForwardedIPConfig` property.

    To aggregate on a combination of the forwarded IP address with other aggregate keys, use `CUSTOM_KEYS` .
    - `IP` - Aggregate the request counts on the IP address from the web request origin.

    To aggregate on a combination of the IP address with other aggregate keys, use `CUSTOM_KEYS` .
    """
    CONSTANT = "CONSTANT"
    IP = "IP"
    FORWARDED_IP = "FORWARDED_IP"
    CUSTOM_KEYS = "CUSTOM_KEYS"


class WebAclRequestInspectionAcfpPayloadType(str, Enum):
    """
    The payload type for your account creation endpoint, either JSON or form encoded.
    """
    JSON = "JSON"
    FORM_ENCODED = "FORM_ENCODED"


class WebAclRequestInspectionPayloadType(str, Enum):
    """
    The payload type for your login endpoint, either JSON or form encoded.
    """
    JSON = "JSON"
    FORM_ENCODED = "FORM_ENCODED"


class WebAclResponseContentType(str, Enum):
    """
    Valid values are TEXT_PLAIN, TEXT_HTML, and APPLICATION_JSON.
    """
    TEXT_PLAIN = "TEXT_PLAIN"
    TEXT_HTML = "TEXT_HTML"
    APPLICATION_JSON = "APPLICATION_JSON"


class WebAclScope(str, Enum):
    """
    Use CLOUDFRONT for CloudFront WebACL, use REGIONAL for Application Load Balancer and API Gateway.
    """
    CLOUDFRONT = "CLOUDFRONT"
    REGIONAL = "REGIONAL"


class WebAclSensitivityLevel(str, Enum):
    """
    Sensitivity Level current only used for sqli match statements.
    """
    LOW = "LOW"
    HIGH = "HIGH"


class WebAclSizeConstraintStatementComparisonOperator(str, Enum):
    """
    The operator to use to compare the request part to the size setting.
    """
    EQ = "EQ"
    NE = "NE"
    LE = "LE"
    LT = "LT"
    GE = "GE"
    GT = "GT"


class WebAclSizeInspectionLimit(str, Enum):
    KB16 = "KB_16"
    KB32 = "KB_32"
    KB48 = "KB_48"
    KB64 = "KB_64"


class WebAclTextTransformationType(str, Enum):
    """
    Type of text transformation.
    """
    NONE = "NONE"
    COMPRESS_WHITE_SPACE = "COMPRESS_WHITE_SPACE"
    HTML_ENTITY_DECODE = "HTML_ENTITY_DECODE"
    LOWERCASE = "LOWERCASE"
    CMD_LINE = "CMD_LINE"
    URL_DECODE = "URL_DECODE"
    BASE64_DECODE = "BASE64_DECODE"
    HEX_DECODE = "HEX_DECODE"
    MD5 = "MD5"
    REPLACE_COMMENTS = "REPLACE_COMMENTS"
    ESCAPE_SEQ_DECODE = "ESCAPE_SEQ_DECODE"
    SQL_HEX_DECODE = "SQL_HEX_DECODE"
    CSS_DECODE = "CSS_DECODE"
    JS_DECODE = "JS_DECODE"
    NORMALIZE_PATH = "NORMALIZE_PATH"
    NORMALIZE_PATH_WIN = "NORMALIZE_PATH_WIN"
    REMOVE_NULLS = "REMOVE_NULLS"
    REPLACE_NULLS = "REPLACE_NULLS"
    BASE64_DECODE_EXT = "BASE64_DECODE_EXT"
    URL_DECODE_UNI = "URL_DECODE_UNI"
    UTF8_TO_UNICODE = "UTF8_TO_UNICODE"
