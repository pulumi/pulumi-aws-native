# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'GetCodeSecurityIntegrationResult',
    'AwaitableGetCodeSecurityIntegrationResult',
    'get_code_security_integration',
    'get_code_security_integration_output',
]

@pulumi.output_type
class GetCodeSecurityIntegrationResult:
    def __init__(__self__, arn=None, authorization_url=None, created_at=None, last_updated_at=None, name=None, status=None, status_reason=None, type=None):
        if arn and not isinstance(arn, str):
            raise TypeError("Expected argument 'arn' to be a str")
        pulumi.set(__self__, "arn", arn)
        if authorization_url and not isinstance(authorization_url, str):
            raise TypeError("Expected argument 'authorization_url' to be a str")
        pulumi.set(__self__, "authorization_url", authorization_url)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if last_updated_at and not isinstance(last_updated_at, str):
            raise TypeError("Expected argument 'last_updated_at' to be a str")
        pulumi.set(__self__, "last_updated_at", last_updated_at)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if status_reason and not isinstance(status_reason, str):
            raise TypeError("Expected argument 'status_reason' to be a str")
        pulumi.set(__self__, "status_reason", status_reason)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def arn(self) -> Optional[builtins.str]:
        """
        Code Security Integration ARN
        """
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="authorizationUrl")
    def authorization_url(self) -> Optional[builtins.str]:
        """
        Authorization URL for OAuth flow
        """
        return pulumi.get(self, "authorization_url")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[builtins.str]:
        """
        Creation timestamp
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="lastUpdatedAt")
    def last_updated_at(self) -> Optional[builtins.str]:
        """
        Last update timestamp
        """
        return pulumi.get(self, "last_updated_at")

    @property
    @pulumi.getter
    def name(self) -> Optional[builtins.str]:
        """
        Code Security Integration name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def status(self) -> Optional['CodeSecurityIntegrationIntegrationStatus']:
        """
        Integration Status
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusReason")
    def status_reason(self) -> Optional[builtins.str]:
        """
        Reason for the current status
        """
        return pulumi.get(self, "status_reason")

    @property
    @pulumi.getter
    def type(self) -> Optional['CodeSecurityIntegrationIntegrationType']:
        """
        Integration Type
        """
        return pulumi.get(self, "type")


class AwaitableGetCodeSecurityIntegrationResult(GetCodeSecurityIntegrationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCodeSecurityIntegrationResult(
            arn=self.arn,
            authorization_url=self.authorization_url,
            created_at=self.created_at,
            last_updated_at=self.last_updated_at,
            name=self.name,
            status=self.status,
            status_reason=self.status_reason,
            type=self.type)


def get_code_security_integration(arn: Optional[builtins.str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCodeSecurityIntegrationResult:
    """
    Inspector CodeSecurityIntegration resource schema


    :param builtins.str arn: Code Security Integration ARN
    """
    __args__ = dict()
    __args__['arn'] = arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:inspectorv2:getCodeSecurityIntegration', __args__, opts=opts, typ=GetCodeSecurityIntegrationResult).value

    return AwaitableGetCodeSecurityIntegrationResult(
        arn=pulumi.get(__ret__, 'arn'),
        authorization_url=pulumi.get(__ret__, 'authorization_url'),
        created_at=pulumi.get(__ret__, 'created_at'),
        last_updated_at=pulumi.get(__ret__, 'last_updated_at'),
        name=pulumi.get(__ret__, 'name'),
        status=pulumi.get(__ret__, 'status'),
        status_reason=pulumi.get(__ret__, 'status_reason'),
        type=pulumi.get(__ret__, 'type'))
def get_code_security_integration_output(arn: Optional[pulumi.Input[builtins.str]] = None,
                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCodeSecurityIntegrationResult]:
    """
    Inspector CodeSecurityIntegration resource schema


    :param builtins.str arn: Code Security Integration ARN
    """
    __args__ = dict()
    __args__['arn'] = arn
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:inspectorv2:getCodeSecurityIntegration', __args__, opts=opts, typ=GetCodeSecurityIntegrationResult)
    return __ret__.apply(lambda __response__: GetCodeSecurityIntegrationResult(
        arn=pulumi.get(__response__, 'arn'),
        authorization_url=pulumi.get(__response__, 'authorization_url'),
        created_at=pulumi.get(__response__, 'created_at'),
        last_updated_at=pulumi.get(__response__, 'last_updated_at'),
        name=pulumi.get(__response__, 'name'),
        status=pulumi.get(__response__, 'status'),
        status_reason=pulumi.get(__response__, 'status_reason'),
        type=pulumi.get(__response__, 'type')))
