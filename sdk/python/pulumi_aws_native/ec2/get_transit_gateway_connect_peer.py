# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import outputs as _root_outputs

__all__ = [
    'GetTransitGatewayConnectPeerResult',
    'AwaitableGetTransitGatewayConnectPeerResult',
    'get_transit_gateway_connect_peer',
    'get_transit_gateway_connect_peer_output',
]

@pulumi.output_type
class GetTransitGatewayConnectPeerResult:
    def __init__(__self__, creation_time=None, state=None, tags=None, transit_gateway_connect_peer_id=None):
        if creation_time and not isinstance(creation_time, str):
            raise TypeError("Expected argument 'creation_time' to be a str")
        pulumi.set(__self__, "creation_time", creation_time)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)
        if transit_gateway_connect_peer_id and not isinstance(transit_gateway_connect_peer_id, str):
            raise TypeError("Expected argument 'transit_gateway_connect_peer_id' to be a str")
        pulumi.set(__self__, "transit_gateway_connect_peer_id", transit_gateway_connect_peer_id)

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> Optional[builtins.str]:
        """
        The creation time.
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter
    def state(self) -> Optional[builtins.str]:
        """
        The state of the Connect peer.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        The tags for the Connect Peer.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="transitGatewayConnectPeerId")
    def transit_gateway_connect_peer_id(self) -> Optional[builtins.str]:
        """
        The ID of the Connect peer.
        """
        return pulumi.get(self, "transit_gateway_connect_peer_id")


class AwaitableGetTransitGatewayConnectPeerResult(GetTransitGatewayConnectPeerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTransitGatewayConnectPeerResult(
            creation_time=self.creation_time,
            state=self.state,
            tags=self.tags,
            transit_gateway_connect_peer_id=self.transit_gateway_connect_peer_id)


def get_transit_gateway_connect_peer(transit_gateway_connect_peer_id: Optional[builtins.str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTransitGatewayConnectPeerResult:
    """
    Resource Type definition for AWS::EC2::TransitGatewayConnectPeer


    :param builtins.str transit_gateway_connect_peer_id: The ID of the Connect peer.
    """
    __args__ = dict()
    __args__['transitGatewayConnectPeerId'] = transit_gateway_connect_peer_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:ec2:getTransitGatewayConnectPeer', __args__, opts=opts, typ=GetTransitGatewayConnectPeerResult).value

    return AwaitableGetTransitGatewayConnectPeerResult(
        creation_time=pulumi.get(__ret__, 'creation_time'),
        state=pulumi.get(__ret__, 'state'),
        tags=pulumi.get(__ret__, 'tags'),
        transit_gateway_connect_peer_id=pulumi.get(__ret__, 'transit_gateway_connect_peer_id'))
def get_transit_gateway_connect_peer_output(transit_gateway_connect_peer_id: Optional[pulumi.Input[builtins.str]] = None,
                                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTransitGatewayConnectPeerResult]:
    """
    Resource Type definition for AWS::EC2::TransitGatewayConnectPeer


    :param builtins.str transit_gateway_connect_peer_id: The ID of the Connect peer.
    """
    __args__ = dict()
    __args__['transitGatewayConnectPeerId'] = transit_gateway_connect_peer_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:ec2:getTransitGatewayConnectPeer', __args__, opts=opts, typ=GetTransitGatewayConnectPeerResult)
    return __ret__.apply(lambda __response__: GetTransitGatewayConnectPeerResult(
        creation_time=pulumi.get(__response__, 'creation_time'),
        state=pulumi.get(__response__, 'state'),
        tags=pulumi.get(__response__, 'tags'),
        transit_gateway_connect_peer_id=pulumi.get(__response__, 'transit_gateway_connect_peer_id')))
