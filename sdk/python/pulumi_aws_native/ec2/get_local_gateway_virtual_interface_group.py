# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import outputs as _root_outputs

__all__ = [
    'GetLocalGatewayVirtualInterfaceGroupResult',
    'AwaitableGetLocalGatewayVirtualInterfaceGroupResult',
    'get_local_gateway_virtual_interface_group',
    'get_local_gateway_virtual_interface_group_output',
]

@pulumi.output_type
class GetLocalGatewayVirtualInterfaceGroupResult:
    def __init__(__self__, configuration_state=None, local_gateway_virtual_interface_group_arn=None, local_gateway_virtual_interface_group_id=None, local_gateway_virtual_interface_ids=None, owner_id=None, tags=None):
        if configuration_state and not isinstance(configuration_state, str):
            raise TypeError("Expected argument 'configuration_state' to be a str")
        pulumi.set(__self__, "configuration_state", configuration_state)
        if local_gateway_virtual_interface_group_arn and not isinstance(local_gateway_virtual_interface_group_arn, str):
            raise TypeError("Expected argument 'local_gateway_virtual_interface_group_arn' to be a str")
        pulumi.set(__self__, "local_gateway_virtual_interface_group_arn", local_gateway_virtual_interface_group_arn)
        if local_gateway_virtual_interface_group_id and not isinstance(local_gateway_virtual_interface_group_id, str):
            raise TypeError("Expected argument 'local_gateway_virtual_interface_group_id' to be a str")
        pulumi.set(__self__, "local_gateway_virtual_interface_group_id", local_gateway_virtual_interface_group_id)
        if local_gateway_virtual_interface_ids and not isinstance(local_gateway_virtual_interface_ids, list):
            raise TypeError("Expected argument 'local_gateway_virtual_interface_ids' to be a list")
        pulumi.set(__self__, "local_gateway_virtual_interface_ids", local_gateway_virtual_interface_ids)
        if owner_id and not isinstance(owner_id, str):
            raise TypeError("Expected argument 'owner_id' to be a str")
        pulumi.set(__self__, "owner_id", owner_id)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="configurationState")
    def configuration_state(self) -> Optional[_builtins.str]:
        """
        The current state of the local gateway virtual interface group
        """
        return pulumi.get(self, "configuration_state")

    @_builtins.property
    @pulumi.getter(name="localGatewayVirtualInterfaceGroupArn")
    def local_gateway_virtual_interface_group_arn(self) -> Optional[_builtins.str]:
        """
        The Amazon Resource Number (ARN) of the local gateway virtual interface group
        """
        return pulumi.get(self, "local_gateway_virtual_interface_group_arn")

    @_builtins.property
    @pulumi.getter(name="localGatewayVirtualInterfaceGroupId")
    def local_gateway_virtual_interface_group_id(self) -> Optional[_builtins.str]:
        """
        The ID of the virtual interface group
        """
        return pulumi.get(self, "local_gateway_virtual_interface_group_id")

    @_builtins.property
    @pulumi.getter(name="localGatewayVirtualInterfaceIds")
    def local_gateway_virtual_interface_ids(self) -> Optional[Sequence[_builtins.str]]:
        """
        The IDs of the virtual interfaces
        """
        return pulumi.get(self, "local_gateway_virtual_interface_ids")

    @_builtins.property
    @pulumi.getter(name="ownerId")
    def owner_id(self) -> Optional[_builtins.str]:
        """
        The ID of the Amazon Web Services account that owns the local gateway virtual interface group
        """
        return pulumi.get(self, "owner_id")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        The tags assigned to the virtual interface group
        """
        return pulumi.get(self, "tags")


class AwaitableGetLocalGatewayVirtualInterfaceGroupResult(GetLocalGatewayVirtualInterfaceGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLocalGatewayVirtualInterfaceGroupResult(
            configuration_state=self.configuration_state,
            local_gateway_virtual_interface_group_arn=self.local_gateway_virtual_interface_group_arn,
            local_gateway_virtual_interface_group_id=self.local_gateway_virtual_interface_group_id,
            local_gateway_virtual_interface_ids=self.local_gateway_virtual_interface_ids,
            owner_id=self.owner_id,
            tags=self.tags)


def get_local_gateway_virtual_interface_group(local_gateway_virtual_interface_group_id: Optional[_builtins.str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLocalGatewayVirtualInterfaceGroupResult:
    """
    Resource Type definition for LocalGatewayVirtualInterfaceGroup which describes a group of LocalGateway VirtualInterfaces


    :param _builtins.str local_gateway_virtual_interface_group_id: The ID of the virtual interface group
    """
    __args__ = dict()
    __args__['localGatewayVirtualInterfaceGroupId'] = local_gateway_virtual_interface_group_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:ec2:getLocalGatewayVirtualInterfaceGroup', __args__, opts=opts, typ=GetLocalGatewayVirtualInterfaceGroupResult).value

    return AwaitableGetLocalGatewayVirtualInterfaceGroupResult(
        configuration_state=pulumi.get(__ret__, 'configuration_state'),
        local_gateway_virtual_interface_group_arn=pulumi.get(__ret__, 'local_gateway_virtual_interface_group_arn'),
        local_gateway_virtual_interface_group_id=pulumi.get(__ret__, 'local_gateway_virtual_interface_group_id'),
        local_gateway_virtual_interface_ids=pulumi.get(__ret__, 'local_gateway_virtual_interface_ids'),
        owner_id=pulumi.get(__ret__, 'owner_id'),
        tags=pulumi.get(__ret__, 'tags'))
def get_local_gateway_virtual_interface_group_output(local_gateway_virtual_interface_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetLocalGatewayVirtualInterfaceGroupResult]:
    """
    Resource Type definition for LocalGatewayVirtualInterfaceGroup which describes a group of LocalGateway VirtualInterfaces


    :param _builtins.str local_gateway_virtual_interface_group_id: The ID of the virtual interface group
    """
    __args__ = dict()
    __args__['localGatewayVirtualInterfaceGroupId'] = local_gateway_virtual_interface_group_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:ec2:getLocalGatewayVirtualInterfaceGroup', __args__, opts=opts, typ=GetLocalGatewayVirtualInterfaceGroupResult)
    return __ret__.apply(lambda __response__: GetLocalGatewayVirtualInterfaceGroupResult(
        configuration_state=pulumi.get(__response__, 'configuration_state'),
        local_gateway_virtual_interface_group_arn=pulumi.get(__response__, 'local_gateway_virtual_interface_group_arn'),
        local_gateway_virtual_interface_group_id=pulumi.get(__response__, 'local_gateway_virtual_interface_group_id'),
        local_gateway_virtual_interface_ids=pulumi.get(__response__, 'local_gateway_virtual_interface_ids'),
        owner_id=pulumi.get(__response__, 'owner_id'),
        tags=pulumi.get(__response__, 'tags')))
