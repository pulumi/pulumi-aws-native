# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .carrier_gateway import *
from .flow_log import *
from .gateway_route_table_association import *
from .local_gateway_route import *
from .local_gateway_route_table_vpcassociation import *
from .network_insights_analysis import *
from .network_insights_path import *
from .prefix_list import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "aws-native:EC2:CarrierGateway":
                return CarrierGateway(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:EC2:FlowLog":
                return FlowLog(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:EC2:GatewayRouteTableAssociation":
                return GatewayRouteTableAssociation(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:EC2:LocalGatewayRoute":
                return LocalGatewayRoute(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:EC2:LocalGatewayRouteTableVPCAssociation":
                return LocalGatewayRouteTableVPCAssociation(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:EC2:NetworkInsightsAnalysis":
                return NetworkInsightsAnalysis(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:EC2:NetworkInsightsPath":
                return NetworkInsightsPath(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:EC2:PrefixList":
                return PrefixList(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("aws-native", "EC2", _module_instance)

_register_module()
