# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetVPCGatewayAttachmentResult',
    'AwaitableGetVPCGatewayAttachmentResult',
    'get_vpc_gateway_attachment',
    'get_vpc_gateway_attachment_output',
]

@pulumi.output_type
class GetVPCGatewayAttachmentResult:
    def __init__(__self__, id=None, internet_gateway_id=None, vpc_id=None, vpn_gateway_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if internet_gateway_id and not isinstance(internet_gateway_id, str):
            raise TypeError("Expected argument 'internet_gateway_id' to be a str")
        pulumi.set(__self__, "internet_gateway_id", internet_gateway_id)
        if vpc_id and not isinstance(vpc_id, str):
            raise TypeError("Expected argument 'vpc_id' to be a str")
        pulumi.set(__self__, "vpc_id", vpc_id)
        if vpn_gateway_id and not isinstance(vpn_gateway_id, str):
            raise TypeError("Expected argument 'vpn_gateway_id' to be a str")
        pulumi.set(__self__, "vpn_gateway_id", vpn_gateway_id)

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="internetGatewayId")
    def internet_gateway_id(self) -> Optional[str]:
        return pulumi.get(self, "internet_gateway_id")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[str]:
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="vpnGatewayId")
    def vpn_gateway_id(self) -> Optional[str]:
        return pulumi.get(self, "vpn_gateway_id")


class AwaitableGetVPCGatewayAttachmentResult(GetVPCGatewayAttachmentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVPCGatewayAttachmentResult(
            id=self.id,
            internet_gateway_id=self.internet_gateway_id,
            vpc_id=self.vpc_id,
            vpn_gateway_id=self.vpn_gateway_id)


def get_vpc_gateway_attachment(id: Optional[str] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVPCGatewayAttachmentResult:
    """
    Resource Type definition for AWS::EC2::VPCGatewayAttachment
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:ec2:getVPCGatewayAttachment', __args__, opts=opts, typ=GetVPCGatewayAttachmentResult).value

    return AwaitableGetVPCGatewayAttachmentResult(
        id=__ret__.id,
        internet_gateway_id=__ret__.internet_gateway_id,
        vpc_id=__ret__.vpc_id,
        vpn_gateway_id=__ret__.vpn_gateway_id)


@_utilities.lift_output_func(get_vpc_gateway_attachment)
def get_vpc_gateway_attachment_output(id: Optional[pulumi.Input[str]] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetVPCGatewayAttachmentResult]:
    """
    Resource Type definition for AWS::EC2::VPCGatewayAttachment
    """
    ...
