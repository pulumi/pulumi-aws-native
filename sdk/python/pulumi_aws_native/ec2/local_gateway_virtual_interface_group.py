# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import _inputs as _root_inputs
from .. import outputs as _root_outputs

__all__ = ['LocalGatewayVirtualInterfaceGroupArgs', 'LocalGatewayVirtualInterfaceGroup']

@pulumi.input_type
class LocalGatewayVirtualInterfaceGroupArgs:
    def __init__(__self__, *,
                 local_gateway_id: pulumi.Input[_builtins.str],
                 local_bgp_asn: Optional[pulumi.Input[_builtins.int]] = None,
                 local_bgp_asn_extended: Optional[pulumi.Input[_builtins.int]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]] = None):
        """
        The set of arguments for constructing a LocalGatewayVirtualInterfaceGroup resource.
        :param pulumi.Input[_builtins.str] local_gateway_id: The ID of the local gateway
        :param pulumi.Input[_builtins.int] local_bgp_asn: The Autonomous System Number(ASN) for the local Border Gateway Protocol (BGP)
        :param pulumi.Input[_builtins.int] local_bgp_asn_extended: The extended 32-bit ASN for the local BGP configuration
        :param pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]] tags: The tags assigned to the virtual interface group
        """
        pulumi.set(__self__, "local_gateway_id", local_gateway_id)
        if local_bgp_asn is not None:
            pulumi.set(__self__, "local_bgp_asn", local_bgp_asn)
        if local_bgp_asn_extended is not None:
            pulumi.set(__self__, "local_bgp_asn_extended", local_bgp_asn_extended)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="localGatewayId")
    def local_gateway_id(self) -> pulumi.Input[_builtins.str]:
        """
        The ID of the local gateway
        """
        return pulumi.get(self, "local_gateway_id")

    @local_gateway_id.setter
    def local_gateway_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "local_gateway_id", value)

    @_builtins.property
    @pulumi.getter(name="localBgpAsn")
    def local_bgp_asn(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The Autonomous System Number(ASN) for the local Border Gateway Protocol (BGP)
        """
        return pulumi.get(self, "local_bgp_asn")

    @local_bgp_asn.setter
    def local_bgp_asn(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "local_bgp_asn", value)

    @_builtins.property
    @pulumi.getter(name="localBgpAsnExtended")
    def local_bgp_asn_extended(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The extended 32-bit ASN for the local BGP configuration
        """
        return pulumi.get(self, "local_bgp_asn_extended")

    @local_bgp_asn_extended.setter
    def local_bgp_asn_extended(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "local_bgp_asn_extended", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]:
        """
        The tags assigned to the virtual interface group
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.type_token("aws-native:ec2:LocalGatewayVirtualInterfaceGroup")
class LocalGatewayVirtualInterfaceGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 local_bgp_asn: Optional[pulumi.Input[_builtins.int]] = None,
                 local_bgp_asn_extended: Optional[pulumi.Input[_builtins.int]] = None,
                 local_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 __props__=None):
        """
        Resource Type definition for LocalGatewayVirtualInterfaceGroup which describes a group of LocalGateway VirtualInterfaces

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] local_bgp_asn: The Autonomous System Number(ASN) for the local Border Gateway Protocol (BGP)
        :param pulumi.Input[_builtins.int] local_bgp_asn_extended: The extended 32-bit ASN for the local BGP configuration
        :param pulumi.Input[_builtins.str] local_gateway_id: The ID of the local gateway
        :param pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]] tags: The tags assigned to the virtual interface group
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: LocalGatewayVirtualInterfaceGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Resource Type definition for LocalGatewayVirtualInterfaceGroup which describes a group of LocalGateway VirtualInterfaces

        :param str resource_name: The name of the resource.
        :param LocalGatewayVirtualInterfaceGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LocalGatewayVirtualInterfaceGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 local_bgp_asn: Optional[pulumi.Input[_builtins.int]] = None,
                 local_bgp_asn_extended: Optional[pulumi.Input[_builtins.int]] = None,
                 local_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LocalGatewayVirtualInterfaceGroupArgs.__new__(LocalGatewayVirtualInterfaceGroupArgs)

            __props__.__dict__["local_bgp_asn"] = local_bgp_asn
            __props__.__dict__["local_bgp_asn_extended"] = local_bgp_asn_extended
            if local_gateway_id is None and not opts.urn:
                raise TypeError("Missing required property 'local_gateway_id'")
            __props__.__dict__["local_gateway_id"] = local_gateway_id
            __props__.__dict__["tags"] = tags
            __props__.__dict__["configuration_state"] = None
            __props__.__dict__["local_gateway_virtual_interface_group_arn"] = None
            __props__.__dict__["local_gateway_virtual_interface_group_id"] = None
            __props__.__dict__["local_gateway_virtual_interface_ids"] = None
            __props__.__dict__["owner_id"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["localBgpAsn", "localBgpAsnExtended", "localGatewayId"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(LocalGatewayVirtualInterfaceGroup, __self__).__init__(
            'aws-native:ec2:LocalGatewayVirtualInterfaceGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'LocalGatewayVirtualInterfaceGroup':
        """
        Get an existing LocalGatewayVirtualInterfaceGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = LocalGatewayVirtualInterfaceGroupArgs.__new__(LocalGatewayVirtualInterfaceGroupArgs)

        __props__.__dict__["configuration_state"] = None
        __props__.__dict__["local_bgp_asn"] = None
        __props__.__dict__["local_bgp_asn_extended"] = None
        __props__.__dict__["local_gateway_id"] = None
        __props__.__dict__["local_gateway_virtual_interface_group_arn"] = None
        __props__.__dict__["local_gateway_virtual_interface_group_id"] = None
        __props__.__dict__["local_gateway_virtual_interface_ids"] = None
        __props__.__dict__["owner_id"] = None
        __props__.__dict__["tags"] = None
        return LocalGatewayVirtualInterfaceGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="configurationState")
    def configuration_state(self) -> pulumi.Output[_builtins.str]:
        """
        The current state of the local gateway virtual interface group
        """
        return pulumi.get(self, "configuration_state")

    @_builtins.property
    @pulumi.getter(name="localBgpAsn")
    def local_bgp_asn(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        The Autonomous System Number(ASN) for the local Border Gateway Protocol (BGP)
        """
        return pulumi.get(self, "local_bgp_asn")

    @_builtins.property
    @pulumi.getter(name="localBgpAsnExtended")
    def local_bgp_asn_extended(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        The extended 32-bit ASN for the local BGP configuration
        """
        return pulumi.get(self, "local_bgp_asn_extended")

    @_builtins.property
    @pulumi.getter(name="localGatewayId")
    def local_gateway_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the local gateway
        """
        return pulumi.get(self, "local_gateway_id")

    @_builtins.property
    @pulumi.getter(name="localGatewayVirtualInterfaceGroupArn")
    def local_gateway_virtual_interface_group_arn(self) -> pulumi.Output[_builtins.str]:
        """
        The Amazon Resource Number (ARN) of the local gateway virtual interface group
        """
        return pulumi.get(self, "local_gateway_virtual_interface_group_arn")

    @_builtins.property
    @pulumi.getter(name="localGatewayVirtualInterfaceGroupId")
    def local_gateway_virtual_interface_group_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the virtual interface group
        """
        return pulumi.get(self, "local_gateway_virtual_interface_group_id")

    @_builtins.property
    @pulumi.getter(name="localGatewayVirtualInterfaceIds")
    def local_gateway_virtual_interface_ids(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        The IDs of the virtual interfaces
        """
        return pulumi.get(self, "local_gateway_virtual_interface_ids")

    @_builtins.property
    @pulumi.getter(name="ownerId")
    def owner_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the Amazon Web Services account that owns the local gateway virtual interface group
        """
        return pulumi.get(self, "owner_id")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['_root_outputs.Tag']]]:
        """
        The tags assigned to the virtual interface group
        """
        return pulumi.get(self, "tags")

