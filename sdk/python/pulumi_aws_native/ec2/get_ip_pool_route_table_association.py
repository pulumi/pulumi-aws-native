# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetIpPoolRouteTableAssociationResult',
    'AwaitableGetIpPoolRouteTableAssociationResult',
    'get_ip_pool_route_table_association',
    'get_ip_pool_route_table_association_output',
]

@pulumi.output_type
class GetIpPoolRouteTableAssociationResult:
    def __init__(__self__, association_id=None):
        if association_id and not isinstance(association_id, str):
            raise TypeError("Expected argument 'association_id' to be a str")
        pulumi.set(__self__, "association_id", association_id)

    @property
    @pulumi.getter(name="associationId")
    def association_id(self) -> Optional[builtins.str]:
        """
        The route table association ID.
        """
        return pulumi.get(self, "association_id")


class AwaitableGetIpPoolRouteTableAssociationResult(GetIpPoolRouteTableAssociationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIpPoolRouteTableAssociationResult(
            association_id=self.association_id)


def get_ip_pool_route_table_association(association_id: Optional[builtins.str] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIpPoolRouteTableAssociationResult:
    """
    Resource Type definition for AWS::EC2::IpPoolRouteTableAssociation


    :param builtins.str association_id: The route table association ID.
    """
    __args__ = dict()
    __args__['associationId'] = association_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:ec2:getIpPoolRouteTableAssociation', __args__, opts=opts, typ=GetIpPoolRouteTableAssociationResult).value

    return AwaitableGetIpPoolRouteTableAssociationResult(
        association_id=pulumi.get(__ret__, 'association_id'))
def get_ip_pool_route_table_association_output(association_id: Optional[pulumi.Input[builtins.str]] = None,
                                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIpPoolRouteTableAssociationResult]:
    """
    Resource Type definition for AWS::EC2::IpPoolRouteTableAssociation


    :param builtins.str association_id: The route table association ID.
    """
    __args__ = dict()
    __args__['associationId'] = association_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:ec2:getIpPoolRouteTableAssociation', __args__, opts=opts, typ=GetIpPoolRouteTableAssociationResult)
    return __ret__.apply(lambda __response__: GetIpPoolRouteTableAssociationResult(
        association_id=pulumi.get(__response__, 'association_id')))
