# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import outputs as _root_outputs

__all__ = [
    'GetCapacityManagerDataExportResult',
    'AwaitableGetCapacityManagerDataExportResult',
    'get_capacity_manager_data_export',
    'get_capacity_manager_data_export_output',
]

@pulumi.output_type
class GetCapacityManagerDataExportResult:
    def __init__(__self__, capacity_manager_data_export_id=None, tags=None):
        if capacity_manager_data_export_id and not isinstance(capacity_manager_data_export_id, str):
            raise TypeError("Expected argument 'capacity_manager_data_export_id' to be a str")
        pulumi.set(__self__, "capacity_manager_data_export_id", capacity_manager_data_export_id)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="capacityManagerDataExportId")
    def capacity_manager_data_export_id(self) -> Optional[_builtins.str]:
        """
        The unique identifier of the capacity manager data export.
        """
        return pulumi.get(self, "capacity_manager_data_export_id")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        An array of key-value pairs to apply to the capacity manager data export.
        """
        return pulumi.get(self, "tags")


class AwaitableGetCapacityManagerDataExportResult(GetCapacityManagerDataExportResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCapacityManagerDataExportResult(
            capacity_manager_data_export_id=self.capacity_manager_data_export_id,
            tags=self.tags)


def get_capacity_manager_data_export(capacity_manager_data_export_id: Optional[_builtins.str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCapacityManagerDataExportResult:
    """
    Resource Type definition for AWS::EC2::CapacityManagerDataExport


    :param _builtins.str capacity_manager_data_export_id: The unique identifier of the capacity manager data export.
    """
    __args__ = dict()
    __args__['capacityManagerDataExportId'] = capacity_manager_data_export_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:ec2:getCapacityManagerDataExport', __args__, opts=opts, typ=GetCapacityManagerDataExportResult).value

    return AwaitableGetCapacityManagerDataExportResult(
        capacity_manager_data_export_id=pulumi.get(__ret__, 'capacity_manager_data_export_id'),
        tags=pulumi.get(__ret__, 'tags'))
def get_capacity_manager_data_export_output(capacity_manager_data_export_id: Optional[pulumi.Input[_builtins.str]] = None,
                                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCapacityManagerDataExportResult]:
    """
    Resource Type definition for AWS::EC2::CapacityManagerDataExport


    :param _builtins.str capacity_manager_data_export_id: The unique identifier of the capacity manager data export.
    """
    __args__ = dict()
    __args__['capacityManagerDataExportId'] = capacity_manager_data_export_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:ec2:getCapacityManagerDataExport', __args__, opts=opts, typ=GetCapacityManagerDataExportResult)
    return __ret__.apply(lambda __response__: GetCapacityManagerDataExportResult(
        capacity_manager_data_export_id=pulumi.get(__response__, 'capacity_manager_data_export_id'),
        tags=pulumi.get(__response__, 'tags')))
