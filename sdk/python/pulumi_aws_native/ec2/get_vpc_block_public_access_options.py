# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'GetVpcBlockPublicAccessOptionsResult',
    'AwaitableGetVpcBlockPublicAccessOptionsResult',
    'get_vpc_block_public_access_options',
    'get_vpc_block_public_access_options_output',
]

@pulumi.output_type
class GetVpcBlockPublicAccessOptionsResult:
    def __init__(__self__, account_id=None, internet_gateway_block_mode=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if internet_gateway_block_mode and not isinstance(internet_gateway_block_mode, str):
            raise TypeError("Expected argument 'internet_gateway_block_mode' to be a str")
        pulumi.set(__self__, "internet_gateway_block_mode", internet_gateway_block_mode)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[str]:
        """
        The identifier for the specified AWS account.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter(name="internetGatewayBlockMode")
    def internet_gateway_block_mode(self) -> Optional['VpcBlockPublicAccessOptionsInternetGatewayBlockMode']:
        """
        The desired Block Public Access mode for Internet Gateways in your account. We do not allow to create in a off mode as this is the default value
        """
        return pulumi.get(self, "internet_gateway_block_mode")


class AwaitableGetVpcBlockPublicAccessOptionsResult(GetVpcBlockPublicAccessOptionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVpcBlockPublicAccessOptionsResult(
            account_id=self.account_id,
            internet_gateway_block_mode=self.internet_gateway_block_mode)


def get_vpc_block_public_access_options(account_id: Optional[str] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVpcBlockPublicAccessOptionsResult:
    """
    Resource Type definition for AWS::EC2::VPCBlockPublicAccessOptions


    :param str account_id: The identifier for the specified AWS account.
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:ec2:getVpcBlockPublicAccessOptions', __args__, opts=opts, typ=GetVpcBlockPublicAccessOptionsResult).value

    return AwaitableGetVpcBlockPublicAccessOptionsResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        internet_gateway_block_mode=pulumi.get(__ret__, 'internet_gateway_block_mode'))
def get_vpc_block_public_access_options_output(account_id: Optional[pulumi.Input[str]] = None,
                                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetVpcBlockPublicAccessOptionsResult]:
    """
    Resource Type definition for AWS::EC2::VPCBlockPublicAccessOptions


    :param str account_id: The identifier for the specified AWS account.
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:ec2:getVpcBlockPublicAccessOptions', __args__, opts=opts, typ=GetVpcBlockPublicAccessOptionsResult)
    return __ret__.apply(lambda __response__: GetVpcBlockPublicAccessOptionsResult(
        account_id=pulumi.get(__response__, 'account_id'),
        internet_gateway_block_mode=pulumi.get(__response__, 'internet_gateway_block_mode')))
