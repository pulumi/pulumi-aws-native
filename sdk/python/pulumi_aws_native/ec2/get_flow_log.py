# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetFlowLogResult',
    'AwaitableGetFlowLogResult',
    'get_flow_log',
    'get_flow_log_output',
]

@pulumi.output_type
class GetFlowLogResult:
    def __init__(__self__, id=None, tags=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The Flow Log ID
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['outputs.FlowLogTag']]:
        """
        The tags to apply to the flow logs.
        """
        return pulumi.get(self, "tags")


class AwaitableGetFlowLogResult(GetFlowLogResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFlowLogResult(
            id=self.id,
            tags=self.tags)


def get_flow_log(id: Optional[str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFlowLogResult:
    """
    Specifies a VPC flow log, which enables you to capture IP traffic for a specific network interface, subnet, or VPC.


    :param str id: The Flow Log ID
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:ec2:getFlowLog', __args__, opts=opts, typ=GetFlowLogResult).value

    return AwaitableGetFlowLogResult(
        id=pulumi.get(__ret__, 'id'),
        tags=pulumi.get(__ret__, 'tags'))


@_utilities.lift_output_func(get_flow_log)
def get_flow_log_output(id: Optional[pulumi.Input[str]] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFlowLogResult]:
    """
    Specifies a VPC flow log, which enables you to capture IP traffic for a specific network interface, subnet, or VPC.


    :param str id: The Flow Log ID
    """
    ...
