# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetPermissionResult',
    'AwaitableGetPermissionResult',
    'get_permission',
    'get_permission_output',
]

@pulumi.output_type
class GetPermissionResult:
    def __init__(__self__):


class AwaitableGetPermissionResult(GetPermissionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPermissionResult(
)


def get_permission(certificate_authority_arn: Optional[str] = None,
                   principal: Optional[str] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPermissionResult:
    """
    Permission set on private certificate authority


    :param str certificate_authority_arn: The Amazon Resource Name (ARN) of the Private Certificate Authority that grants the permission.
    :param str principal: The AWS service or identity that receives the permission. At this time, the only valid principal is acm.amazonaws.com.
    """
    __args__ = dict()
    __args__['certificateAuthorityArn'] = certificate_authority_arn
    __args__['principal'] = principal
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aws-native:acmpca:getPermission', __args__, opts=opts, typ=GetPermissionResult).value

    return AwaitableGetPermissionResult(


@_utilities.lift_output_func(get_permission)
def get_permission_output(certificate_authority_arn: Optional[pulumi.Input[str]] = None,
                          principal: Optional[pulumi.Input[str]] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPermissionResult]:
    """
    Permission set on private certificate authority


    :param str certificate_authority_arn: The Amazon Resource Name (ARN) of the Private Certificate Authority that grants the permission.
    :param str principal: The AWS service or identity that receives the permission. At this time, the only valid principal is acm.amazonaws.com.
    """
    ...
