# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['MemoryArgs', 'Memory']

@pulumi.input_type
class MemoryArgs:
    def __init__(__self__, *,
                 event_expiry_duration: pulumi.Input[_builtins.int],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 encryption_key_arn: Optional[pulumi.Input[_builtins.str]] = None,
                 memory_execution_role_arn: Optional[pulumi.Input[_builtins.str]] = None,
                 memory_strategies: Optional[pulumi.Input[Sequence[pulumi.Input['MemoryStrategyArgs']]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a Memory resource.
        :param pulumi.Input[_builtins.int] event_expiry_duration: Duration in days until memory events expire
        :param pulumi.Input[_builtins.str] encryption_key_arn: The memory encryption key Amazon Resource Name (ARN).
        :param pulumi.Input[_builtins.str] memory_execution_role_arn: The memory role ARN.
        :param pulumi.Input[Sequence[pulumi.Input['MemoryStrategyArgs']]] memory_strategies: The memory strategies.
        :param pulumi.Input[_builtins.str] name: The memory name.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: The tags for the resources.
        """
        pulumi.set(__self__, "event_expiry_duration", event_expiry_duration)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if encryption_key_arn is not None:
            pulumi.set(__self__, "encryption_key_arn", encryption_key_arn)
        if memory_execution_role_arn is not None:
            pulumi.set(__self__, "memory_execution_role_arn", memory_execution_role_arn)
        if memory_strategies is not None:
            pulumi.set(__self__, "memory_strategies", memory_strategies)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="eventExpiryDuration")
    def event_expiry_duration(self) -> pulumi.Input[_builtins.int]:
        """
        Duration in days until memory events expire
        """
        return pulumi.get(self, "event_expiry_duration")

    @event_expiry_duration.setter
    def event_expiry_duration(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "event_expiry_duration", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="encryptionKeyArn")
    def encryption_key_arn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The memory encryption key Amazon Resource Name (ARN).
        """
        return pulumi.get(self, "encryption_key_arn")

    @encryption_key_arn.setter
    def encryption_key_arn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "encryption_key_arn", value)

    @_builtins.property
    @pulumi.getter(name="memoryExecutionRoleArn")
    def memory_execution_role_arn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The memory role ARN.
        """
        return pulumi.get(self, "memory_execution_role_arn")

    @memory_execution_role_arn.setter
    def memory_execution_role_arn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "memory_execution_role_arn", value)

    @_builtins.property
    @pulumi.getter(name="memoryStrategies")
    def memory_strategies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['MemoryStrategyArgs']]]]:
        """
        The memory strategies.
        """
        return pulumi.get(self, "memory_strategies")

    @memory_strategies.setter
    def memory_strategies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['MemoryStrategyArgs']]]]):
        pulumi.set(self, "memory_strategies", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The memory name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        The tags for the resources.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.type_token("aws-native:bedrockagentcore:Memory")
class Memory(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 encryption_key_arn: Optional[pulumi.Input[_builtins.str]] = None,
                 event_expiry_duration: Optional[pulumi.Input[_builtins.int]] = None,
                 memory_execution_role_arn: Optional[pulumi.Input[_builtins.str]] = None,
                 memory_strategies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['MemoryStrategyArgs', 'MemoryStrategyArgsDict']]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Resource Type definition for AWS::BedrockAgentCore::Memory

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] encryption_key_arn: The memory encryption key Amazon Resource Name (ARN).
        :param pulumi.Input[_builtins.int] event_expiry_duration: Duration in days until memory events expire
        :param pulumi.Input[_builtins.str] memory_execution_role_arn: The memory role ARN.
        :param pulumi.Input[Sequence[pulumi.Input[Union['MemoryStrategyArgs', 'MemoryStrategyArgsDict']]]] memory_strategies: The memory strategies.
        :param pulumi.Input[_builtins.str] name: The memory name.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: The tags for the resources.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: MemoryArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Resource Type definition for AWS::BedrockAgentCore::Memory

        :param str resource_name: The name of the resource.
        :param MemoryArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(MemoryArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 encryption_key_arn: Optional[pulumi.Input[_builtins.str]] = None,
                 event_expiry_duration: Optional[pulumi.Input[_builtins.int]] = None,
                 memory_execution_role_arn: Optional[pulumi.Input[_builtins.str]] = None,
                 memory_strategies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['MemoryStrategyArgs', 'MemoryStrategyArgsDict']]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = MemoryArgs.__new__(MemoryArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["encryption_key_arn"] = encryption_key_arn
            if event_expiry_duration is None and not opts.urn:
                raise TypeError("Missing required property 'event_expiry_duration'")
            __props__.__dict__["event_expiry_duration"] = event_expiry_duration
            __props__.__dict__["memory_execution_role_arn"] = memory_execution_role_arn
            __props__.__dict__["memory_strategies"] = memory_strategies
            __props__.__dict__["name"] = name
            __props__.__dict__["tags"] = tags
            __props__.__dict__["created_at"] = None
            __props__.__dict__["failure_reason"] = None
            __props__.__dict__["memory_arn"] = None
            __props__.__dict__["memory_id"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["encryptionKeyArn", "name"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(Memory, __self__).__init__(
            'aws-native:bedrockagentcore:Memory',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Memory':
        """
        Get an existing Memory resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = MemoryArgs.__new__(MemoryArgs)

        __props__.__dict__["created_at"] = None
        __props__.__dict__["description"] = None
        __props__.__dict__["encryption_key_arn"] = None
        __props__.__dict__["event_expiry_duration"] = None
        __props__.__dict__["failure_reason"] = None
        __props__.__dict__["memory_arn"] = None
        __props__.__dict__["memory_execution_role_arn"] = None
        __props__.__dict__["memory_id"] = None
        __props__.__dict__["memory_strategies"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["status"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["updated_at"] = None
        return Memory(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The timestamp when the memory record was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="encryptionKeyArn")
    def encryption_key_arn(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The memory encryption key Amazon Resource Name (ARN).
        """
        return pulumi.get(self, "encryption_key_arn")

    @_builtins.property
    @pulumi.getter(name="eventExpiryDuration")
    def event_expiry_duration(self) -> pulumi.Output[_builtins.int]:
        """
        Duration in days until memory events expire
        """
        return pulumi.get(self, "event_expiry_duration")

    @_builtins.property
    @pulumi.getter(name="failureReason")
    def failure_reason(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "failure_reason")

    @_builtins.property
    @pulumi.getter(name="memoryArn")
    def memory_arn(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "memory_arn")

    @_builtins.property
    @pulumi.getter(name="memoryExecutionRoleArn")
    def memory_execution_role_arn(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The memory role ARN.
        """
        return pulumi.get(self, "memory_execution_role_arn")

    @_builtins.property
    @pulumi.getter(name="memoryId")
    def memory_id(self) -> pulumi.Output[_builtins.str]:
        """
        The memory ID.
        """
        return pulumi.get(self, "memory_id")

    @_builtins.property
    @pulumi.getter(name="memoryStrategies")
    def memory_strategies(self) -> pulumi.Output[Optional[Sequence['outputs.MemoryStrategy']]]:
        """
        The memory strategies.
        """
        return pulumi.get(self, "memory_strategies")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The memory name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output['MemoryStatus']:
        """
        The memory status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, _builtins.str]]]:
        """
        The tags for the resources.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "updated_at")

