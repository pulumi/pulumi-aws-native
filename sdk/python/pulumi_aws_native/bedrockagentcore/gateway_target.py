# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['GatewayTargetArgs', 'GatewayTarget']

@pulumi.input_type
class GatewayTargetArgs:
    def __init__(__self__, *,
                 credential_provider_configurations: pulumi.Input[Sequence[pulumi.Input['GatewayTargetCredentialProviderConfigurationArgs']]],
                 target_configuration: pulumi.Input['GatewayTargetTargetConfigurationPropertiesArgs'],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 gateway_identifier: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a GatewayTarget resource.
        :param pulumi.Input[Sequence[pulumi.Input['GatewayTargetCredentialProviderConfigurationArgs']]] credential_provider_configurations: The OAuth credential provider configuration.
        :param pulumi.Input['GatewayTargetTargetConfigurationPropertiesArgs'] target_configuration: The target configuration for the Smithy model target.
        :param pulumi.Input[_builtins.str] description: The description for the gateway target.
        :param pulumi.Input[_builtins.str] gateway_identifier: The gateway ID for the gateway target.
        :param pulumi.Input[_builtins.str] name: The name for the gateway target.
        """
        pulumi.set(__self__, "credential_provider_configurations", credential_provider_configurations)
        pulumi.set(__self__, "target_configuration", target_configuration)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if gateway_identifier is not None:
            pulumi.set(__self__, "gateway_identifier", gateway_identifier)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="credentialProviderConfigurations")
    def credential_provider_configurations(self) -> pulumi.Input[Sequence[pulumi.Input['GatewayTargetCredentialProviderConfigurationArgs']]]:
        """
        The OAuth credential provider configuration.
        """
        return pulumi.get(self, "credential_provider_configurations")

    @credential_provider_configurations.setter
    def credential_provider_configurations(self, value: pulumi.Input[Sequence[pulumi.Input['GatewayTargetCredentialProviderConfigurationArgs']]]):
        pulumi.set(self, "credential_provider_configurations", value)

    @_builtins.property
    @pulumi.getter(name="targetConfiguration")
    def target_configuration(self) -> pulumi.Input['GatewayTargetTargetConfigurationPropertiesArgs']:
        """
        The target configuration for the Smithy model target.
        """
        return pulumi.get(self, "target_configuration")

    @target_configuration.setter
    def target_configuration(self, value: pulumi.Input['GatewayTargetTargetConfigurationPropertiesArgs']):
        pulumi.set(self, "target_configuration", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description for the gateway target.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="gatewayIdentifier")
    def gateway_identifier(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The gateway ID for the gateway target.
        """
        return pulumi.get(self, "gateway_identifier")

    @gateway_identifier.setter
    def gateway_identifier(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "gateway_identifier", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name for the gateway target.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.type_token("aws-native:bedrockagentcore:GatewayTarget")
class GatewayTarget(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 credential_provider_configurations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['GatewayTargetCredentialProviderConfigurationArgs', 'GatewayTargetCredentialProviderConfigurationArgsDict']]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 gateway_identifier: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 target_configuration: Optional[pulumi.Input[Union['GatewayTargetTargetConfigurationPropertiesArgs', 'GatewayTargetTargetConfigurationPropertiesArgsDict']]] = None,
                 __props__=None):
        """
        Definition of AWS::BedrockAgentCore::GatewayTarget Resource Type

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['GatewayTargetCredentialProviderConfigurationArgs', 'GatewayTargetCredentialProviderConfigurationArgsDict']]]] credential_provider_configurations: The OAuth credential provider configuration.
        :param pulumi.Input[_builtins.str] description: The description for the gateway target.
        :param pulumi.Input[_builtins.str] gateway_identifier: The gateway ID for the gateway target.
        :param pulumi.Input[_builtins.str] name: The name for the gateway target.
        :param pulumi.Input[Union['GatewayTargetTargetConfigurationPropertiesArgs', 'GatewayTargetTargetConfigurationPropertiesArgsDict']] target_configuration: The target configuration for the Smithy model target.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: GatewayTargetArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Definition of AWS::BedrockAgentCore::GatewayTarget Resource Type

        :param str resource_name: The name of the resource.
        :param GatewayTargetArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(GatewayTargetArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 credential_provider_configurations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['GatewayTargetCredentialProviderConfigurationArgs', 'GatewayTargetCredentialProviderConfigurationArgsDict']]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 gateway_identifier: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 target_configuration: Optional[pulumi.Input[Union['GatewayTargetTargetConfigurationPropertiesArgs', 'GatewayTargetTargetConfigurationPropertiesArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = GatewayTargetArgs.__new__(GatewayTargetArgs)

            if credential_provider_configurations is None and not opts.urn:
                raise TypeError("Missing required property 'credential_provider_configurations'")
            __props__.__dict__["credential_provider_configurations"] = credential_provider_configurations
            __props__.__dict__["description"] = description
            __props__.__dict__["gateway_identifier"] = gateway_identifier
            __props__.__dict__["name"] = name
            if target_configuration is None and not opts.urn:
                raise TypeError("Missing required property 'target_configuration'")
            __props__.__dict__["target_configuration"] = target_configuration
            __props__.__dict__["created_at"] = None
            __props__.__dict__["gateway_arn"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["status_reasons"] = None
            __props__.__dict__["target_id"] = None
            __props__.__dict__["updated_at"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["gatewayIdentifier"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(GatewayTarget, __self__).__init__(
            'aws-native:bedrockagentcore:GatewayTarget',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'GatewayTarget':
        """
        Get an existing GatewayTarget resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = GatewayTargetArgs.__new__(GatewayTargetArgs)

        __props__.__dict__["created_at"] = None
        __props__.__dict__["credential_provider_configurations"] = None
        __props__.__dict__["description"] = None
        __props__.__dict__["gateway_arn"] = None
        __props__.__dict__["gateway_identifier"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["status"] = None
        __props__.__dict__["status_reasons"] = None
        __props__.__dict__["target_configuration"] = None
        __props__.__dict__["target_id"] = None
        __props__.__dict__["updated_at"] = None
        return GatewayTarget(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date and time at which the gateway target was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="credentialProviderConfigurations")
    def credential_provider_configurations(self) -> pulumi.Output[Sequence['outputs.GatewayTargetCredentialProviderConfiguration']]:
        """
        The OAuth credential provider configuration.
        """
        return pulumi.get(self, "credential_provider_configurations")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The description for the gateway target.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="gatewayArn")
    def gateway_arn(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "gateway_arn")

    @_builtins.property
    @pulumi.getter(name="gatewayIdentifier")
    def gateway_identifier(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The gateway ID for the gateway target.
        """
        return pulumi.get(self, "gateway_identifier")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name for the gateway target.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output['GatewayTargetTargetStatus']:
        """
        The status for the gateway target.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="statusReasons")
    def status_reasons(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        The status reasons for the gateway target.
        """
        return pulumi.get(self, "status_reasons")

    @_builtins.property
    @pulumi.getter(name="targetConfiguration")
    def target_configuration(self) -> pulumi.Output['outputs.GatewayTargetTargetConfigurationProperties']:
        """
        The target configuration for the Smithy model target.
        """
        return pulumi.get(self, "target_configuration")

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> pulumi.Output[_builtins.str]:
        """
        The target ID for the gateway target.
        """
        return pulumi.get(self, "target_id")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time at which the resource was updated.
        """
        return pulumi.get(self, "updated_at")

