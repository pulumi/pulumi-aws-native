# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from .. import outputs as _root_outputs
from ._enums import *

__all__ = [
    'GetPhoneNumberResult',
    'AwaitableGetPhoneNumberResult',
    'get_phone_number',
    'get_phone_number_output',
]

@pulumi.output_type
class GetPhoneNumberResult:
    def __init__(__self__, arn=None, deletion_protection_enabled=None, mandatory_keywords=None, opt_out_list_name=None, optional_keywords=None, phone_number=None, phone_number_id=None, self_managed_opt_outs_enabled=None, tags=None, two_way=None):
        if arn and not isinstance(arn, str):
            raise TypeError("Expected argument 'arn' to be a str")
        pulumi.set(__self__, "arn", arn)
        if deletion_protection_enabled and not isinstance(deletion_protection_enabled, bool):
            raise TypeError("Expected argument 'deletion_protection_enabled' to be a bool")
        pulumi.set(__self__, "deletion_protection_enabled", deletion_protection_enabled)
        if mandatory_keywords and not isinstance(mandatory_keywords, dict):
            raise TypeError("Expected argument 'mandatory_keywords' to be a dict")
        pulumi.set(__self__, "mandatory_keywords", mandatory_keywords)
        if opt_out_list_name and not isinstance(opt_out_list_name, str):
            raise TypeError("Expected argument 'opt_out_list_name' to be a str")
        pulumi.set(__self__, "opt_out_list_name", opt_out_list_name)
        if optional_keywords and not isinstance(optional_keywords, list):
            raise TypeError("Expected argument 'optional_keywords' to be a list")
        pulumi.set(__self__, "optional_keywords", optional_keywords)
        if phone_number and not isinstance(phone_number, str):
            raise TypeError("Expected argument 'phone_number' to be a str")
        pulumi.set(__self__, "phone_number", phone_number)
        if phone_number_id and not isinstance(phone_number_id, str):
            raise TypeError("Expected argument 'phone_number_id' to be a str")
        pulumi.set(__self__, "phone_number_id", phone_number_id)
        if self_managed_opt_outs_enabled and not isinstance(self_managed_opt_outs_enabled, bool):
            raise TypeError("Expected argument 'self_managed_opt_outs_enabled' to be a bool")
        pulumi.set(__self__, "self_managed_opt_outs_enabled", self_managed_opt_outs_enabled)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)
        if two_way and not isinstance(two_way, dict):
            raise TypeError("Expected argument 'two_way' to be a dict")
        pulumi.set(__self__, "two_way", two_way)

    @property
    @pulumi.getter
    def arn(self) -> Optional[builtins.str]:
        """
        The `PhoneNumber` 's Amazon Resource Name (ARN)
        """
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="deletionProtectionEnabled")
    def deletion_protection_enabled(self) -> Optional[builtins.bool]:
        """
        When set to true the sender ID can't be deleted. By default this is set to false.
        """
        return pulumi.get(self, "deletion_protection_enabled")

    @property
    @pulumi.getter(name="mandatoryKeywords")
    def mandatory_keywords(self) -> Optional['outputs.MandatoryKeywordsProperties']:
        """
        A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
        """
        return pulumi.get(self, "mandatory_keywords")

    @property
    @pulumi.getter(name="optOutListName")
    def opt_out_list_name(self) -> Optional[builtins.str]:
        """
        The name of the OptOutList to associate with the phone number. You can use the OptOutListName or OptOutListArn.
        """
        return pulumi.get(self, "opt_out_list_name")

    @property
    @pulumi.getter(name="optionalKeywords")
    def optional_keywords(self) -> Optional[Sequence['outputs.PhoneNumberOptionalKeyword']]:
        """
        A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
        """
        return pulumi.get(self, "optional_keywords")

    @property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> Optional[builtins.str]:
        """
        The phone number in E.164 format.
        """
        return pulumi.get(self, "phone_number")

    @property
    @pulumi.getter(name="phoneNumberId")
    def phone_number_id(self) -> Optional[builtins.str]:
        """
        The unique identifier for the phone number.
        """
        return pulumi.get(self, "phone_number_id")

    @property
    @pulumi.getter(name="selfManagedOptOutsEnabled")
    def self_managed_opt_outs_enabled(self) -> Optional[builtins.bool]:
        """
        By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.
        """
        return pulumi.get(self, "self_managed_opt_outs_enabled")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        An array of key-value pairs to apply to this resource.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="twoWay")
    def two_way(self) -> Optional['outputs.TwoWayProperties']:
        """
        When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
        """
        return pulumi.get(self, "two_way")


class AwaitableGetPhoneNumberResult(GetPhoneNumberResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPhoneNumberResult(
            arn=self.arn,
            deletion_protection_enabled=self.deletion_protection_enabled,
            mandatory_keywords=self.mandatory_keywords,
            opt_out_list_name=self.opt_out_list_name,
            optional_keywords=self.optional_keywords,
            phone_number=self.phone_number,
            phone_number_id=self.phone_number_id,
            self_managed_opt_outs_enabled=self.self_managed_opt_outs_enabled,
            tags=self.tags,
            two_way=self.two_way)


def get_phone_number(phone_number_id: Optional[builtins.str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPhoneNumberResult:
    """
    Resource Type definition for AWS::SMSVOICE::PhoneNumber


    :param builtins.str phone_number_id: The unique identifier for the phone number.
    """
    __args__ = dict()
    __args__['phoneNumberId'] = phone_number_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:smsvoice:getPhoneNumber', __args__, opts=opts, typ=GetPhoneNumberResult).value

    return AwaitableGetPhoneNumberResult(
        arn=pulumi.get(__ret__, 'arn'),
        deletion_protection_enabled=pulumi.get(__ret__, 'deletion_protection_enabled'),
        mandatory_keywords=pulumi.get(__ret__, 'mandatory_keywords'),
        opt_out_list_name=pulumi.get(__ret__, 'opt_out_list_name'),
        optional_keywords=pulumi.get(__ret__, 'optional_keywords'),
        phone_number=pulumi.get(__ret__, 'phone_number'),
        phone_number_id=pulumi.get(__ret__, 'phone_number_id'),
        self_managed_opt_outs_enabled=pulumi.get(__ret__, 'self_managed_opt_outs_enabled'),
        tags=pulumi.get(__ret__, 'tags'),
        two_way=pulumi.get(__ret__, 'two_way'))
def get_phone_number_output(phone_number_id: Optional[pulumi.Input[builtins.str]] = None,
                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPhoneNumberResult]:
    """
    Resource Type definition for AWS::SMSVOICE::PhoneNumber


    :param builtins.str phone_number_id: The unique identifier for the phone number.
    """
    __args__ = dict()
    __args__['phoneNumberId'] = phone_number_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:smsvoice:getPhoneNumber', __args__, opts=opts, typ=GetPhoneNumberResult)
    return __ret__.apply(lambda __response__: GetPhoneNumberResult(
        arn=pulumi.get(__response__, 'arn'),
        deletion_protection_enabled=pulumi.get(__response__, 'deletion_protection_enabled'),
        mandatory_keywords=pulumi.get(__response__, 'mandatory_keywords'),
        opt_out_list_name=pulumi.get(__response__, 'opt_out_list_name'),
        optional_keywords=pulumi.get(__response__, 'optional_keywords'),
        phone_number=pulumi.get(__response__, 'phone_number'),
        phone_number_id=pulumi.get(__response__, 'phone_number_id'),
        self_managed_opt_outs_enabled=pulumi.get(__response__, 'self_managed_opt_outs_enabled'),
        tags=pulumi.get(__response__, 'tags'),
        two_way=pulumi.get(__response__, 'two_way')))
