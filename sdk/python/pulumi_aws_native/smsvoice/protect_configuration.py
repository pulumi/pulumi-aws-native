# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from .. import _inputs as _root_inputs
from .. import outputs as _root_outputs
from ._enums import *
from ._inputs import *

__all__ = ['ProtectConfigurationArgs', 'ProtectConfiguration']

@pulumi.input_type
class ProtectConfigurationArgs:
    def __init__(__self__, *,
                 country_rule_set: Optional[pulumi.Input['ProtectConfigurationCountryRuleSetArgs']] = None,
                 deletion_protection_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]] = None):
        """
        The set of arguments for constructing a ProtectConfiguration resource.
        :param pulumi.Input['ProtectConfigurationCountryRuleSetArgs'] country_rule_set: An array of CountryRule containing the rules for the NumberCapability.
        :param pulumi.Input[builtins.bool] deletion_protection_enabled: When set to true deletion protection is enabled and protect configuration cannot be deleted. By default this is set to false.
        :param pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]] tags: An array of key-value pairs to apply to this resource.
        """
        if country_rule_set is not None:
            pulumi.set(__self__, "country_rule_set", country_rule_set)
        if deletion_protection_enabled is not None:
            pulumi.set(__self__, "deletion_protection_enabled", deletion_protection_enabled)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="countryRuleSet")
    def country_rule_set(self) -> Optional[pulumi.Input['ProtectConfigurationCountryRuleSetArgs']]:
        """
        An array of CountryRule containing the rules for the NumberCapability.
        """
        return pulumi.get(self, "country_rule_set")

    @country_rule_set.setter
    def country_rule_set(self, value: Optional[pulumi.Input['ProtectConfigurationCountryRuleSetArgs']]):
        pulumi.set(self, "country_rule_set", value)

    @property
    @pulumi.getter(name="deletionProtectionEnabled")
    def deletion_protection_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        When set to true deletion protection is enabled and protect configuration cannot be deleted. By default this is set to false.
        """
        return pulumi.get(self, "deletion_protection_enabled")

    @deletion_protection_enabled.setter
    def deletion_protection_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "deletion_protection_enabled", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]:
        """
        An array of key-value pairs to apply to this resource.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.type_token("aws-native:smsvoice:ProtectConfiguration")
class ProtectConfiguration(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 country_rule_set: Optional[pulumi.Input[Union['ProtectConfigurationCountryRuleSetArgs', 'ProtectConfigurationCountryRuleSetArgsDict']]] = None,
                 deletion_protection_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 __props__=None):
        """
        Resource Type definition for AWS::SMSVOICE::ProtectConfiguration

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['ProtectConfigurationCountryRuleSetArgs', 'ProtectConfigurationCountryRuleSetArgsDict']] country_rule_set: An array of CountryRule containing the rules for the NumberCapability.
        :param pulumi.Input[builtins.bool] deletion_protection_enabled: When set to true deletion protection is enabled and protect configuration cannot be deleted. By default this is set to false.
        :param pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]] tags: An array of key-value pairs to apply to this resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ProtectConfigurationArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Resource Type definition for AWS::SMSVOICE::ProtectConfiguration

        :param str resource_name: The name of the resource.
        :param ProtectConfigurationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProtectConfigurationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 country_rule_set: Optional[pulumi.Input[Union['ProtectConfigurationCountryRuleSetArgs', 'ProtectConfigurationCountryRuleSetArgsDict']]] = None,
                 deletion_protection_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProtectConfigurationArgs.__new__(ProtectConfigurationArgs)

            __props__.__dict__["country_rule_set"] = country_rule_set
            __props__.__dict__["deletion_protection_enabled"] = deletion_protection_enabled
            __props__.__dict__["tags"] = tags
            __props__.__dict__["arn"] = None
            __props__.__dict__["protect_configuration_id"] = None
        super(ProtectConfiguration, __self__).__init__(
            'aws-native:smsvoice:ProtectConfiguration',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'ProtectConfiguration':
        """
        Get an existing ProtectConfiguration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = ProtectConfigurationArgs.__new__(ProtectConfigurationArgs)

        __props__.__dict__["arn"] = None
        __props__.__dict__["country_rule_set"] = None
        __props__.__dict__["deletion_protection_enabled"] = None
        __props__.__dict__["protect_configuration_id"] = None
        __props__.__dict__["tags"] = None
        return ProtectConfiguration(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def arn(self) -> pulumi.Output[builtins.str]:
        """
        The Amazon Resource Name (ARN) of the protect configuration.
        """
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="countryRuleSet")
    def country_rule_set(self) -> pulumi.Output[Optional['outputs.ProtectConfigurationCountryRuleSet']]:
        """
        An array of CountryRule containing the rules for the NumberCapability.
        """
        return pulumi.get(self, "country_rule_set")

    @property
    @pulumi.getter(name="deletionProtectionEnabled")
    def deletion_protection_enabled(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        When set to true deletion protection is enabled and protect configuration cannot be deleted. By default this is set to false.
        """
        return pulumi.get(self, "deletion_protection_enabled")

    @property
    @pulumi.getter(name="protectConfigurationId")
    def protect_configuration_id(self) -> pulumi.Output[builtins.str]:
        """
        The unique identifier for the protect configuration.
        """
        return pulumi.get(self, "protect_configuration_id")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['_root_outputs.Tag']]]:
        """
        An array of key-value pairs to apply to this resource.
        """
        return pulumi.get(self, "tags")

