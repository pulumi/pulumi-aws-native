# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from .. import _inputs as _root_inputs
from .. import outputs as _root_outputs
from ._enums import *
from ._inputs import *

__all__ = ['PoolArgs', 'Pool']

@pulumi.input_type
class PoolArgs:
    def __init__(__self__, *,
                 mandatory_keywords: pulumi.Input['MandatoryKeywordsPropertiesArgs'],
                 origination_identities: pulumi.Input[Sequence[pulumi.Input[builtins.str]]],
                 deletion_protection_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 opt_out_list_name: Optional[pulumi.Input[builtins.str]] = None,
                 optional_keywords: Optional[pulumi.Input[Sequence[pulumi.Input['PoolOptionalKeywordArgs']]]] = None,
                 self_managed_opt_outs_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 shared_routes_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]] = None,
                 two_way: Optional[pulumi.Input['TwoWayPropertiesArgs']] = None):
        """
        The set of arguments for constructing a Pool resource.
        :param pulumi.Input['MandatoryKeywordsPropertiesArgs'] mandatory_keywords: A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] origination_identities: The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn and it's IsoCountryCode.
        :param pulumi.Input[builtins.bool] deletion_protection_enabled: When set to true the pool can't be deleted. By default this is set to false.
        :param pulumi.Input[builtins.str] opt_out_list_name: The name of the OptOutList to associate with the pool. You can use the OptOutListName or OptOutListArn.
        :param pulumi.Input[Sequence[pulumi.Input['PoolOptionalKeywordArgs']]] optional_keywords: A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
        :param pulumi.Input[builtins.bool] self_managed_opt_outs_enabled: By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.
        :param pulumi.Input[builtins.bool] shared_routes_enabled: Indicates whether shared routes are enabled for the pool.
        :param pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]] tags: An array of key-value pairs to apply to this resource.
        :param pulumi.Input['TwoWayPropertiesArgs'] two_way: When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
        """
        pulumi.set(__self__, "mandatory_keywords", mandatory_keywords)
        pulumi.set(__self__, "origination_identities", origination_identities)
        if deletion_protection_enabled is not None:
            pulumi.set(__self__, "deletion_protection_enabled", deletion_protection_enabled)
        if opt_out_list_name is not None:
            pulumi.set(__self__, "opt_out_list_name", opt_out_list_name)
        if optional_keywords is not None:
            pulumi.set(__self__, "optional_keywords", optional_keywords)
        if self_managed_opt_outs_enabled is not None:
            pulumi.set(__self__, "self_managed_opt_outs_enabled", self_managed_opt_outs_enabled)
        if shared_routes_enabled is not None:
            pulumi.set(__self__, "shared_routes_enabled", shared_routes_enabled)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if two_way is not None:
            pulumi.set(__self__, "two_way", two_way)

    @property
    @pulumi.getter(name="mandatoryKeywords")
    def mandatory_keywords(self) -> pulumi.Input['MandatoryKeywordsPropertiesArgs']:
        """
        A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
        """
        return pulumi.get(self, "mandatory_keywords")

    @mandatory_keywords.setter
    def mandatory_keywords(self, value: pulumi.Input['MandatoryKeywordsPropertiesArgs']):
        pulumi.set(self, "mandatory_keywords", value)

    @property
    @pulumi.getter(name="originationIdentities")
    def origination_identities(self) -> pulumi.Input[Sequence[pulumi.Input[builtins.str]]]:
        """
        The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn and it's IsoCountryCode.
        """
        return pulumi.get(self, "origination_identities")

    @origination_identities.setter
    def origination_identities(self, value: pulumi.Input[Sequence[pulumi.Input[builtins.str]]]):
        pulumi.set(self, "origination_identities", value)

    @property
    @pulumi.getter(name="deletionProtectionEnabled")
    def deletion_protection_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        When set to true the pool can't be deleted. By default this is set to false.
        """
        return pulumi.get(self, "deletion_protection_enabled")

    @deletion_protection_enabled.setter
    def deletion_protection_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "deletion_protection_enabled", value)

    @property
    @pulumi.getter(name="optOutListName")
    def opt_out_list_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the OptOutList to associate with the pool. You can use the OptOutListName or OptOutListArn.
        """
        return pulumi.get(self, "opt_out_list_name")

    @opt_out_list_name.setter
    def opt_out_list_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "opt_out_list_name", value)

    @property
    @pulumi.getter(name="optionalKeywords")
    def optional_keywords(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PoolOptionalKeywordArgs']]]]:
        """
        A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
        """
        return pulumi.get(self, "optional_keywords")

    @optional_keywords.setter
    def optional_keywords(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PoolOptionalKeywordArgs']]]]):
        pulumi.set(self, "optional_keywords", value)

    @property
    @pulumi.getter(name="selfManagedOptOutsEnabled")
    def self_managed_opt_outs_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.
        """
        return pulumi.get(self, "self_managed_opt_outs_enabled")

    @self_managed_opt_outs_enabled.setter
    def self_managed_opt_outs_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "self_managed_opt_outs_enabled", value)

    @property
    @pulumi.getter(name="sharedRoutesEnabled")
    def shared_routes_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Indicates whether shared routes are enabled for the pool.
        """
        return pulumi.get(self, "shared_routes_enabled")

    @shared_routes_enabled.setter
    def shared_routes_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "shared_routes_enabled", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]:
        """
        An array of key-value pairs to apply to this resource.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="twoWay")
    def two_way(self) -> Optional[pulumi.Input['TwoWayPropertiesArgs']]:
        """
        When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
        """
        return pulumi.get(self, "two_way")

    @two_way.setter
    def two_way(self, value: Optional[pulumi.Input['TwoWayPropertiesArgs']]):
        pulumi.set(self, "two_way", value)


@pulumi.type_token("aws-native:smsvoice:Pool")
class Pool(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 deletion_protection_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 mandatory_keywords: Optional[pulumi.Input[Union['MandatoryKeywordsPropertiesArgs', 'MandatoryKeywordsPropertiesArgsDict']]] = None,
                 opt_out_list_name: Optional[pulumi.Input[builtins.str]] = None,
                 optional_keywords: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PoolOptionalKeywordArgs', 'PoolOptionalKeywordArgsDict']]]]] = None,
                 origination_identities: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 self_managed_opt_outs_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 shared_routes_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 two_way: Optional[pulumi.Input[Union['TwoWayPropertiesArgs', 'TwoWayPropertiesArgsDict']]] = None,
                 __props__=None):
        """
        Resource Type definition for AWS::SMSVOICE::Pool

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.bool] deletion_protection_enabled: When set to true the pool can't be deleted. By default this is set to false.
        :param pulumi.Input[Union['MandatoryKeywordsPropertiesArgs', 'MandatoryKeywordsPropertiesArgsDict']] mandatory_keywords: A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
        :param pulumi.Input[builtins.str] opt_out_list_name: The name of the OptOutList to associate with the pool. You can use the OptOutListName or OptOutListArn.
        :param pulumi.Input[Sequence[pulumi.Input[Union['PoolOptionalKeywordArgs', 'PoolOptionalKeywordArgsDict']]]] optional_keywords: A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] origination_identities: The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn and it's IsoCountryCode.
        :param pulumi.Input[builtins.bool] self_managed_opt_outs_enabled: By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.
        :param pulumi.Input[builtins.bool] shared_routes_enabled: Indicates whether shared routes are enabled for the pool.
        :param pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]] tags: An array of key-value pairs to apply to this resource.
        :param pulumi.Input[Union['TwoWayPropertiesArgs', 'TwoWayPropertiesArgsDict']] two_way: When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PoolArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Resource Type definition for AWS::SMSVOICE::Pool

        :param str resource_name: The name of the resource.
        :param PoolArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PoolArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 deletion_protection_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 mandatory_keywords: Optional[pulumi.Input[Union['MandatoryKeywordsPropertiesArgs', 'MandatoryKeywordsPropertiesArgsDict']]] = None,
                 opt_out_list_name: Optional[pulumi.Input[builtins.str]] = None,
                 optional_keywords: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PoolOptionalKeywordArgs', 'PoolOptionalKeywordArgsDict']]]]] = None,
                 origination_identities: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 self_managed_opt_outs_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 shared_routes_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 two_way: Optional[pulumi.Input[Union['TwoWayPropertiesArgs', 'TwoWayPropertiesArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PoolArgs.__new__(PoolArgs)

            __props__.__dict__["deletion_protection_enabled"] = deletion_protection_enabled
            if mandatory_keywords is None and not opts.urn:
                raise TypeError("Missing required property 'mandatory_keywords'")
            __props__.__dict__["mandatory_keywords"] = mandatory_keywords
            __props__.__dict__["opt_out_list_name"] = opt_out_list_name
            __props__.__dict__["optional_keywords"] = optional_keywords
            if origination_identities is None and not opts.urn:
                raise TypeError("Missing required property 'origination_identities'")
            __props__.__dict__["origination_identities"] = origination_identities
            __props__.__dict__["self_managed_opt_outs_enabled"] = self_managed_opt_outs_enabled
            __props__.__dict__["shared_routes_enabled"] = shared_routes_enabled
            __props__.__dict__["tags"] = tags
            __props__.__dict__["two_way"] = two_way
            __props__.__dict__["arn"] = None
            __props__.__dict__["pool_id"] = None
        super(Pool, __self__).__init__(
            'aws-native:smsvoice:Pool',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Pool':
        """
        Get an existing Pool resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = PoolArgs.__new__(PoolArgs)

        __props__.__dict__["arn"] = None
        __props__.__dict__["deletion_protection_enabled"] = None
        __props__.__dict__["mandatory_keywords"] = None
        __props__.__dict__["opt_out_list_name"] = None
        __props__.__dict__["optional_keywords"] = None
        __props__.__dict__["origination_identities"] = None
        __props__.__dict__["pool_id"] = None
        __props__.__dict__["self_managed_opt_outs_enabled"] = None
        __props__.__dict__["shared_routes_enabled"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["two_way"] = None
        return Pool(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def arn(self) -> pulumi.Output[builtins.str]:
        """
        The Amazon Resource Name of the `Pool` .
        """
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="deletionProtectionEnabled")
    def deletion_protection_enabled(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        When set to true the pool can't be deleted. By default this is set to false.
        """
        return pulumi.get(self, "deletion_protection_enabled")

    @property
    @pulumi.getter(name="mandatoryKeywords")
    def mandatory_keywords(self) -> pulumi.Output['outputs.MandatoryKeywordsProperties']:
        """
        A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
        """
        return pulumi.get(self, "mandatory_keywords")

    @property
    @pulumi.getter(name="optOutListName")
    def opt_out_list_name(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The name of the OptOutList to associate with the pool. You can use the OptOutListName or OptOutListArn.
        """
        return pulumi.get(self, "opt_out_list_name")

    @property
    @pulumi.getter(name="optionalKeywords")
    def optional_keywords(self) -> pulumi.Output[Optional[Sequence['outputs.PoolOptionalKeyword']]]:
        """
        A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
        """
        return pulumi.get(self, "optional_keywords")

    @property
    @pulumi.getter(name="originationIdentities")
    def origination_identities(self) -> pulumi.Output[Sequence[builtins.str]]:
        """
        The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn and it's IsoCountryCode.
        """
        return pulumi.get(self, "origination_identities")

    @property
    @pulumi.getter(name="poolId")
    def pool_id(self) -> pulumi.Output[builtins.str]:
        """
        The unique identifier for the pool.
        """
        return pulumi.get(self, "pool_id")

    @property
    @pulumi.getter(name="selfManagedOptOutsEnabled")
    def self_managed_opt_outs_enabled(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.
        """
        return pulumi.get(self, "self_managed_opt_outs_enabled")

    @property
    @pulumi.getter(name="sharedRoutesEnabled")
    def shared_routes_enabled(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Indicates whether shared routes are enabled for the pool.
        """
        return pulumi.get(self, "shared_routes_enabled")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['_root_outputs.Tag']]]:
        """
        An array of key-value pairs to apply to this resource.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="twoWay")
    def two_way(self) -> pulumi.Output[Optional['outputs.TwoWayProperties']]:
        """
        When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
        """
        return pulumi.get(self, "two_way")

