# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import _inputs as _root_inputs
from .. import outputs as _root_outputs

__all__ = ['SenderIdArgs', 'SenderId']

@pulumi.input_type
class SenderIdArgs:
    def __init__(__self__, *,
                 iso_country_code: pulumi.Input[builtins.str],
                 sender_id: pulumi.Input[builtins.str],
                 deletion_protection_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]] = None):
        """
        The set of arguments for constructing a SenderId resource.
        :param pulumi.Input[builtins.str] iso_country_code: The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
        :param pulumi.Input[builtins.str] sender_id: The sender ID string to request.
        :param pulumi.Input[builtins.bool] deletion_protection_enabled: When set to true the sender ID can't be deleted. By default this is set to false.
        :param pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]] tags: An array of key-value pairs to apply to this resource.
        """
        pulumi.set(__self__, "iso_country_code", iso_country_code)
        pulumi.set(__self__, "sender_id", sender_id)
        if deletion_protection_enabled is not None:
            pulumi.set(__self__, "deletion_protection_enabled", deletion_protection_enabled)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="isoCountryCode")
    def iso_country_code(self) -> pulumi.Input[builtins.str]:
        """
        The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
        """
        return pulumi.get(self, "iso_country_code")

    @iso_country_code.setter
    def iso_country_code(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "iso_country_code", value)

    @property
    @pulumi.getter(name="senderId")
    def sender_id(self) -> pulumi.Input[builtins.str]:
        """
        The sender ID string to request.
        """
        return pulumi.get(self, "sender_id")

    @sender_id.setter
    def sender_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "sender_id", value)

    @property
    @pulumi.getter(name="deletionProtectionEnabled")
    def deletion_protection_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        When set to true the sender ID can't be deleted. By default this is set to false.
        """
        return pulumi.get(self, "deletion_protection_enabled")

    @deletion_protection_enabled.setter
    def deletion_protection_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "deletion_protection_enabled", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]:
        """
        An array of key-value pairs to apply to this resource.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.type_token("aws-native:smsvoice:SenderId")
class SenderId(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 deletion_protection_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 iso_country_code: Optional[pulumi.Input[builtins.str]] = None,
                 sender_id: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 __props__=None):
        """
        Resource Type definition for AWS::SMSVOICE::SenderId

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.bool] deletion_protection_enabled: When set to true the sender ID can't be deleted. By default this is set to false.
        :param pulumi.Input[builtins.str] iso_country_code: The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
        :param pulumi.Input[builtins.str] sender_id: The sender ID string to request.
        :param pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]] tags: An array of key-value pairs to apply to this resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SenderIdArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Resource Type definition for AWS::SMSVOICE::SenderId

        :param str resource_name: The name of the resource.
        :param SenderIdArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SenderIdArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 deletion_protection_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 iso_country_code: Optional[pulumi.Input[builtins.str]] = None,
                 sender_id: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SenderIdArgs.__new__(SenderIdArgs)

            __props__.__dict__["deletion_protection_enabled"] = deletion_protection_enabled
            if iso_country_code is None and not opts.urn:
                raise TypeError("Missing required property 'iso_country_code'")
            __props__.__dict__["iso_country_code"] = iso_country_code
            if sender_id is None and not opts.urn:
                raise TypeError("Missing required property 'sender_id'")
            __props__.__dict__["sender_id"] = sender_id
            __props__.__dict__["tags"] = tags
            __props__.__dict__["arn"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["isoCountryCode", "senderId"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(SenderId, __self__).__init__(
            'aws-native:smsvoice:SenderId',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'SenderId':
        """
        Get an existing SenderId resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = SenderIdArgs.__new__(SenderIdArgs)

        __props__.__dict__["arn"] = None
        __props__.__dict__["deletion_protection_enabled"] = None
        __props__.__dict__["iso_country_code"] = None
        __props__.__dict__["sender_id"] = None
        __props__.__dict__["tags"] = None
        return SenderId(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def arn(self) -> pulumi.Output[builtins.str]:
        """
        The Amazon Resource Name (ARN) associated with the SenderId.
        """
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="deletionProtectionEnabled")
    def deletion_protection_enabled(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        When set to true the sender ID can't be deleted. By default this is set to false.
        """
        return pulumi.get(self, "deletion_protection_enabled")

    @property
    @pulumi.getter(name="isoCountryCode")
    def iso_country_code(self) -> pulumi.Output[builtins.str]:
        """
        The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
        """
        return pulumi.get(self, "iso_country_code")

    @property
    @pulumi.getter(name="senderId")
    def sender_id(self) -> pulumi.Output[builtins.str]:
        """
        The sender ID string to request.
        """
        return pulumi.get(self, "sender_id")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['_root_outputs.Tag']]]:
        """
        An array of key-value pairs to apply to this resource.
        """
        return pulumi.get(self, "tags")

