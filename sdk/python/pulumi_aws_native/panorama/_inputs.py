# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'ApplicationInstanceManifestOverridesPayloadArgs',
    'ApplicationInstanceManifestPayloadArgs',
    'PackageStorageLocationArgs',
]

@pulumi.input_type
class ApplicationInstanceManifestOverridesPayloadArgs:
    def __init__(__self__, *,
                 payload_data: Optional[pulumi.Input[str]] = None):
        if payload_data is not None:
            pulumi.set(__self__, "payload_data", payload_data)

    @property
    @pulumi.getter(name="payloadData")
    def payload_data(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "payload_data")

    @payload_data.setter
    def payload_data(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "payload_data", value)


@pulumi.input_type
class ApplicationInstanceManifestPayloadArgs:
    def __init__(__self__, *,
                 payload_data: Optional[pulumi.Input[str]] = None):
        if payload_data is not None:
            pulumi.set(__self__, "payload_data", payload_data)

    @property
    @pulumi.getter(name="payloadData")
    def payload_data(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "payload_data")

    @payload_data.setter
    def payload_data(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "payload_data", value)


@pulumi.input_type
class PackageStorageLocationArgs:
    def __init__(__self__, *,
                 binary_prefix_location: Optional[pulumi.Input[str]] = None,
                 bucket: Optional[pulumi.Input[str]] = None,
                 generated_prefix_location: Optional[pulumi.Input[str]] = None,
                 manifest_prefix_location: Optional[pulumi.Input[str]] = None,
                 repo_prefix_location: Optional[pulumi.Input[str]] = None):
        if binary_prefix_location is not None:
            pulumi.set(__self__, "binary_prefix_location", binary_prefix_location)
        if bucket is not None:
            pulumi.set(__self__, "bucket", bucket)
        if generated_prefix_location is not None:
            pulumi.set(__self__, "generated_prefix_location", generated_prefix_location)
        if manifest_prefix_location is not None:
            pulumi.set(__self__, "manifest_prefix_location", manifest_prefix_location)
        if repo_prefix_location is not None:
            pulumi.set(__self__, "repo_prefix_location", repo_prefix_location)

    @property
    @pulumi.getter(name="binaryPrefixLocation")
    def binary_prefix_location(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "binary_prefix_location")

    @binary_prefix_location.setter
    def binary_prefix_location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "binary_prefix_location", value)

    @property
    @pulumi.getter
    def bucket(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "bucket")

    @bucket.setter
    def bucket(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bucket", value)

    @property
    @pulumi.getter(name="generatedPrefixLocation")
    def generated_prefix_location(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "generated_prefix_location")

    @generated_prefix_location.setter
    def generated_prefix_location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "generated_prefix_location", value)

    @property
    @pulumi.getter(name="manifestPrefixLocation")
    def manifest_prefix_location(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "manifest_prefix_location")

    @manifest_prefix_location.setter
    def manifest_prefix_location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "manifest_prefix_location", value)

    @property
    @pulumi.getter(name="repoPrefixLocation")
    def repo_prefix_location(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "repo_prefix_location")

    @repo_prefix_location.setter
    def repo_prefix_location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "repo_prefix_location", value)


