# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import _inputs as _root_inputs
from .. import outputs as _root_outputs

__all__ = ['OdbNetworkArgs', 'OdbNetwork']

@pulumi.input_type
class OdbNetworkArgs:
    def __init__(__self__, *,
                 availability_zone: Optional[pulumi.Input[builtins.str]] = None,
                 availability_zone_id: Optional[pulumi.Input[builtins.str]] = None,
                 backup_subnet_cidr: Optional[pulumi.Input[builtins.str]] = None,
                 client_subnet_cidr: Optional[pulumi.Input[builtins.str]] = None,
                 default_dns_prefix: Optional[pulumi.Input[builtins.str]] = None,
                 delete_associated_resources: Optional[pulumi.Input[builtins.bool]] = None,
                 display_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]] = None):
        """
        The set of arguments for constructing a OdbNetwork resource.
        :param pulumi.Input[builtins.str] availability_zone: The AWS Availability Zone (AZ) where the ODB network is located.
        :param pulumi.Input[builtins.str] availability_zone_id: The AZ ID of the AZ where the ODB network is located.
        :param pulumi.Input[builtins.str] backup_subnet_cidr: The CIDR range of the backup subnet in the ODB network.
        :param pulumi.Input[builtins.str] client_subnet_cidr: The CIDR range of the client subnet in the ODB network.
        :param pulumi.Input[builtins.str] default_dns_prefix: The DNS prefix to the default DNS domain name. The default DNS domain name is oraclevcn.com.
        :param pulumi.Input[builtins.bool] delete_associated_resources: Specifies whether to delete associated OCI networking resources along with the ODB network.
        :param pulumi.Input[builtins.str] display_name: The user-friendly name of the ODB network.
        :param pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]] tags: Tags to assign to the Odb Network.
        """
        if availability_zone is not None:
            pulumi.set(__self__, "availability_zone", availability_zone)
        if availability_zone_id is not None:
            pulumi.set(__self__, "availability_zone_id", availability_zone_id)
        if backup_subnet_cidr is not None:
            pulumi.set(__self__, "backup_subnet_cidr", backup_subnet_cidr)
        if client_subnet_cidr is not None:
            pulumi.set(__self__, "client_subnet_cidr", client_subnet_cidr)
        if default_dns_prefix is not None:
            pulumi.set(__self__, "default_dns_prefix", default_dns_prefix)
        if delete_associated_resources is not None:
            pulumi.set(__self__, "delete_associated_resources", delete_associated_resources)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The AWS Availability Zone (AZ) where the ODB network is located.
        """
        return pulumi.get(self, "availability_zone")

    @availability_zone.setter
    def availability_zone(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "availability_zone", value)

    @property
    @pulumi.getter(name="availabilityZoneId")
    def availability_zone_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The AZ ID of the AZ where the ODB network is located.
        """
        return pulumi.get(self, "availability_zone_id")

    @availability_zone_id.setter
    def availability_zone_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "availability_zone_id", value)

    @property
    @pulumi.getter(name="backupSubnetCidr")
    def backup_subnet_cidr(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The CIDR range of the backup subnet in the ODB network.
        """
        return pulumi.get(self, "backup_subnet_cidr")

    @backup_subnet_cidr.setter
    def backup_subnet_cidr(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "backup_subnet_cidr", value)

    @property
    @pulumi.getter(name="clientSubnetCidr")
    def client_subnet_cidr(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The CIDR range of the client subnet in the ODB network.
        """
        return pulumi.get(self, "client_subnet_cidr")

    @client_subnet_cidr.setter
    def client_subnet_cidr(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "client_subnet_cidr", value)

    @property
    @pulumi.getter(name="defaultDnsPrefix")
    def default_dns_prefix(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The DNS prefix to the default DNS domain name. The default DNS domain name is oraclevcn.com.
        """
        return pulumi.get(self, "default_dns_prefix")

    @default_dns_prefix.setter
    def default_dns_prefix(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "default_dns_prefix", value)

    @property
    @pulumi.getter(name="deleteAssociatedResources")
    def delete_associated_resources(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Specifies whether to delete associated OCI networking resources along with the ODB network.
        """
        return pulumi.get(self, "delete_associated_resources")

    @delete_associated_resources.setter
    def delete_associated_resources(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "delete_associated_resources", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The user-friendly name of the ODB network.
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]:
        """
        Tags to assign to the Odb Network.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.type_token("aws-native:odb:OdbNetwork")
class OdbNetwork(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 availability_zone: Optional[pulumi.Input[builtins.str]] = None,
                 availability_zone_id: Optional[pulumi.Input[builtins.str]] = None,
                 backup_subnet_cidr: Optional[pulumi.Input[builtins.str]] = None,
                 client_subnet_cidr: Optional[pulumi.Input[builtins.str]] = None,
                 default_dns_prefix: Optional[pulumi.Input[builtins.str]] = None,
                 delete_associated_resources: Optional[pulumi.Input[builtins.bool]] = None,
                 display_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 __props__=None):
        """
        The AWS::ODB::OdbNetwork resource creates an ODB Network

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] availability_zone: The AWS Availability Zone (AZ) where the ODB network is located.
        :param pulumi.Input[builtins.str] availability_zone_id: The AZ ID of the AZ where the ODB network is located.
        :param pulumi.Input[builtins.str] backup_subnet_cidr: The CIDR range of the backup subnet in the ODB network.
        :param pulumi.Input[builtins.str] client_subnet_cidr: The CIDR range of the client subnet in the ODB network.
        :param pulumi.Input[builtins.str] default_dns_prefix: The DNS prefix to the default DNS domain name. The default DNS domain name is oraclevcn.com.
        :param pulumi.Input[builtins.bool] delete_associated_resources: Specifies whether to delete associated OCI networking resources along with the ODB network.
        :param pulumi.Input[builtins.str] display_name: The user-friendly name of the ODB network.
        :param pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]] tags: Tags to assign to the Odb Network.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[OdbNetworkArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The AWS::ODB::OdbNetwork resource creates an ODB Network

        :param str resource_name: The name of the resource.
        :param OdbNetworkArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OdbNetworkArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 availability_zone: Optional[pulumi.Input[builtins.str]] = None,
                 availability_zone_id: Optional[pulumi.Input[builtins.str]] = None,
                 backup_subnet_cidr: Optional[pulumi.Input[builtins.str]] = None,
                 client_subnet_cidr: Optional[pulumi.Input[builtins.str]] = None,
                 default_dns_prefix: Optional[pulumi.Input[builtins.str]] = None,
                 delete_associated_resources: Optional[pulumi.Input[builtins.bool]] = None,
                 display_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['_root_inputs.TagArgs', '_root_inputs.TagArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OdbNetworkArgs.__new__(OdbNetworkArgs)

            __props__.__dict__["availability_zone"] = availability_zone
            __props__.__dict__["availability_zone_id"] = availability_zone_id
            __props__.__dict__["backup_subnet_cidr"] = backup_subnet_cidr
            __props__.__dict__["client_subnet_cidr"] = client_subnet_cidr
            __props__.__dict__["default_dns_prefix"] = default_dns_prefix
            __props__.__dict__["delete_associated_resources"] = delete_associated_resources
            __props__.__dict__["display_name"] = display_name
            __props__.__dict__["tags"] = tags
            __props__.__dict__["oci_network_anchor_id"] = None
            __props__.__dict__["oci_resource_anchor_name"] = None
            __props__.__dict__["oci_vcn_url"] = None
            __props__.__dict__["odb_network_arn"] = None
            __props__.__dict__["odb_network_id"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["availabilityZone", "availabilityZoneId", "backupSubnetCidr", "clientSubnetCidr", "defaultDnsPrefix", "displayName"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(OdbNetwork, __self__).__init__(
            'aws-native:odb:OdbNetwork',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'OdbNetwork':
        """
        Get an existing OdbNetwork resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = OdbNetworkArgs.__new__(OdbNetworkArgs)

        __props__.__dict__["availability_zone"] = None
        __props__.__dict__["availability_zone_id"] = None
        __props__.__dict__["backup_subnet_cidr"] = None
        __props__.__dict__["client_subnet_cidr"] = None
        __props__.__dict__["default_dns_prefix"] = None
        __props__.__dict__["delete_associated_resources"] = None
        __props__.__dict__["display_name"] = None
        __props__.__dict__["oci_network_anchor_id"] = None
        __props__.__dict__["oci_resource_anchor_name"] = None
        __props__.__dict__["oci_vcn_url"] = None
        __props__.__dict__["odb_network_arn"] = None
        __props__.__dict__["odb_network_id"] = None
        __props__.__dict__["tags"] = None
        return OdbNetwork(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The AWS Availability Zone (AZ) where the ODB network is located.
        """
        return pulumi.get(self, "availability_zone")

    @property
    @pulumi.getter(name="availabilityZoneId")
    def availability_zone_id(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The AZ ID of the AZ where the ODB network is located.
        """
        return pulumi.get(self, "availability_zone_id")

    @property
    @pulumi.getter(name="backupSubnetCidr")
    def backup_subnet_cidr(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The CIDR range of the backup subnet in the ODB network.
        """
        return pulumi.get(self, "backup_subnet_cidr")

    @property
    @pulumi.getter(name="clientSubnetCidr")
    def client_subnet_cidr(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The CIDR range of the client subnet in the ODB network.
        """
        return pulumi.get(self, "client_subnet_cidr")

    @property
    @pulumi.getter(name="defaultDnsPrefix")
    def default_dns_prefix(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The DNS prefix to the default DNS domain name. The default DNS domain name is oraclevcn.com.
        """
        return pulumi.get(self, "default_dns_prefix")

    @property
    @pulumi.getter(name="deleteAssociatedResources")
    def delete_associated_resources(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Specifies whether to delete associated OCI networking resources along with the ODB network.
        """
        return pulumi.get(self, "delete_associated_resources")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The user-friendly name of the ODB network.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="ociNetworkAnchorId")
    def oci_network_anchor_id(self) -> pulumi.Output[builtins.str]:
        """
        The unique identifier of the OCI network anchor for the ODB network.
        """
        return pulumi.get(self, "oci_network_anchor_id")

    @property
    @pulumi.getter(name="ociResourceAnchorName")
    def oci_resource_anchor_name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the OCI resource anchor that's associated with the ODB network.
        """
        return pulumi.get(self, "oci_resource_anchor_name")

    @property
    @pulumi.getter(name="ociVcnUrl")
    def oci_vcn_url(self) -> pulumi.Output[builtins.str]:
        """
        The URL for the VCN that's associated with the ODB network.
        """
        return pulumi.get(self, "oci_vcn_url")

    @property
    @pulumi.getter(name="odbNetworkArn")
    def odb_network_arn(self) -> pulumi.Output[builtins.str]:
        """
        The Amazon Resource Name (ARN) of the ODB network.
        """
        return pulumi.get(self, "odb_network_arn")

    @property
    @pulumi.getter(name="odbNetworkId")
    def odb_network_id(self) -> pulumi.Output[builtins.str]:
        """
        The unique identifier of the ODB network.
        """
        return pulumi.get(self, "odb_network_id")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['_root_outputs.Tag']]]:
        """
        Tags to assign to the Odb Network.
        """
        return pulumi.get(self, "tags")

