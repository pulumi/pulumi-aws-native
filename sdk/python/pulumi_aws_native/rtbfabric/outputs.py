# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'ResponderGatewayManagedEndpointConfiguration',
    'ResponderGatewayTrustStoreConfiguration',
]

@pulumi.output_type
class ResponderGatewayManagedEndpointConfiguration(dict):
    def __init__(__self__):
        pass


@pulumi.output_type
class ResponderGatewayTrustStoreConfiguration(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateAuthorityCertificates":
            suggest = "certificate_authority_certificates"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResponderGatewayTrustStoreConfiguration. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResponderGatewayTrustStoreConfiguration.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResponderGatewayTrustStoreConfiguration.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 certificate_authority_certificates: Sequence[_builtins.str]):
        pulumi.set(__self__, "certificate_authority_certificates", certificate_authority_certificates)

    @_builtins.property
    @pulumi.getter(name="certificateAuthorityCertificates")
    def certificate_authority_certificates(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "certificate_authority_certificates")


