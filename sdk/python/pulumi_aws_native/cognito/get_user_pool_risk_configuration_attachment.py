# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetUserPoolRiskConfigurationAttachmentResult',
    'AwaitableGetUserPoolRiskConfigurationAttachmentResult',
    'get_user_pool_risk_configuration_attachment',
    'get_user_pool_risk_configuration_attachment_output',
]

@pulumi.output_type
class GetUserPoolRiskConfigurationAttachmentResult:
    def __init__(__self__, account_takeover_risk_configuration=None, compromised_credentials_risk_configuration=None, risk_exception_configuration=None):
        if account_takeover_risk_configuration and not isinstance(account_takeover_risk_configuration, dict):
            raise TypeError("Expected argument 'account_takeover_risk_configuration' to be a dict")
        pulumi.set(__self__, "account_takeover_risk_configuration", account_takeover_risk_configuration)
        if compromised_credentials_risk_configuration and not isinstance(compromised_credentials_risk_configuration, dict):
            raise TypeError("Expected argument 'compromised_credentials_risk_configuration' to be a dict")
        pulumi.set(__self__, "compromised_credentials_risk_configuration", compromised_credentials_risk_configuration)
        if risk_exception_configuration and not isinstance(risk_exception_configuration, dict):
            raise TypeError("Expected argument 'risk_exception_configuration' to be a dict")
        pulumi.set(__self__, "risk_exception_configuration", risk_exception_configuration)

    @property
    @pulumi.getter(name="accountTakeoverRiskConfiguration")
    def account_takeover_risk_configuration(self) -> Optional['outputs.UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType']:
        """
        The settings for automated responses and notification templates for adaptive authentication with advanced security features.
        """
        return pulumi.get(self, "account_takeover_risk_configuration")

    @property
    @pulumi.getter(name="compromisedCredentialsRiskConfiguration")
    def compromised_credentials_risk_configuration(self) -> Optional['outputs.UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType']:
        """
        Settings for compromised-credentials actions and authentication types with advanced security features in full-function `ENFORCED` mode.
        """
        return pulumi.get(self, "compromised_credentials_risk_configuration")

    @property
    @pulumi.getter(name="riskExceptionConfiguration")
    def risk_exception_configuration(self) -> Optional['outputs.UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType']:
        """
        Exceptions to the risk evaluation configuration, including always-allow and always-block IP address ranges.
        """
        return pulumi.get(self, "risk_exception_configuration")


class AwaitableGetUserPoolRiskConfigurationAttachmentResult(GetUserPoolRiskConfigurationAttachmentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUserPoolRiskConfigurationAttachmentResult(
            account_takeover_risk_configuration=self.account_takeover_risk_configuration,
            compromised_credentials_risk_configuration=self.compromised_credentials_risk_configuration,
            risk_exception_configuration=self.risk_exception_configuration)


def get_user_pool_risk_configuration_attachment(client_id: Optional[str] = None,
                                                user_pool_id: Optional[str] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUserPoolRiskConfigurationAttachmentResult:
    """
    Resource Type definition for AWS::Cognito::UserPoolRiskConfigurationAttachment


    :param str client_id: The app client where this configuration is applied. When this parameter isn't present, the risk configuration applies to all user pool app clients that don't have client-level settings.
    :param str user_pool_id: The ID of the user pool that has the risk configuration applied.
    """
    __args__ = dict()
    __args__['clientId'] = client_id
    __args__['userPoolId'] = user_pool_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:cognito:getUserPoolRiskConfigurationAttachment', __args__, opts=opts, typ=GetUserPoolRiskConfigurationAttachmentResult).value

    return AwaitableGetUserPoolRiskConfigurationAttachmentResult(
        account_takeover_risk_configuration=pulumi.get(__ret__, 'account_takeover_risk_configuration'),
        compromised_credentials_risk_configuration=pulumi.get(__ret__, 'compromised_credentials_risk_configuration'),
        risk_exception_configuration=pulumi.get(__ret__, 'risk_exception_configuration'))
def get_user_pool_risk_configuration_attachment_output(client_id: Optional[pulumi.Input[str]] = None,
                                                       user_pool_id: Optional[pulumi.Input[str]] = None,
                                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetUserPoolRiskConfigurationAttachmentResult]:
    """
    Resource Type definition for AWS::Cognito::UserPoolRiskConfigurationAttachment


    :param str client_id: The app client where this configuration is applied. When this parameter isn't present, the risk configuration applies to all user pool app clients that don't have client-level settings.
    :param str user_pool_id: The ID of the user pool that has the risk configuration applied.
    """
    __args__ = dict()
    __args__['clientId'] = client_id
    __args__['userPoolId'] = user_pool_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:cognito:getUserPoolRiskConfigurationAttachment', __args__, opts=opts, typ=GetUserPoolRiskConfigurationAttachmentResult)
    return __ret__.apply(lambda __response__: GetUserPoolRiskConfigurationAttachmentResult(
        account_takeover_risk_configuration=pulumi.get(__response__, 'account_takeover_risk_configuration'),
        compromised_credentials_risk_configuration=pulumi.get(__response__, 'compromised_credentials_risk_configuration'),
        risk_exception_configuration=pulumi.get(__response__, 'risk_exception_configuration')))
