# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetUserPoolUiCustomizationAttachmentResult',
    'AwaitableGetUserPoolUiCustomizationAttachmentResult',
    'get_user_pool_ui_customization_attachment',
    'get_user_pool_ui_customization_attachment_output',
]

@pulumi.output_type
class GetUserPoolUiCustomizationAttachmentResult:
    def __init__(__self__, css=None):
        if css and not isinstance(css, str):
            raise TypeError("Expected argument 'css' to be a str")
        pulumi.set(__self__, "css", css)

    @property
    @pulumi.getter
    def css(self) -> Optional[str]:
        """
        The CSS values in the UI customization.
        """
        return pulumi.get(self, "css")


class AwaitableGetUserPoolUiCustomizationAttachmentResult(GetUserPoolUiCustomizationAttachmentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUserPoolUiCustomizationAttachmentResult(
            css=self.css)


def get_user_pool_ui_customization_attachment(client_id: Optional[str] = None,
                                              user_pool_id: Optional[str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUserPoolUiCustomizationAttachmentResult:
    """
    Resource Type definition for AWS::Cognito::UserPoolUICustomizationAttachment


    :param str client_id: The app client ID for your UI customization. When this value isn't present, the customization applies to all user pool app clients that don't have client-level settings..
    :param str user_pool_id: The user pool ID for the user pool.
    """
    __args__ = dict()
    __args__['clientId'] = client_id
    __args__['userPoolId'] = user_pool_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:cognito:getUserPoolUiCustomizationAttachment', __args__, opts=opts, typ=GetUserPoolUiCustomizationAttachmentResult).value

    return AwaitableGetUserPoolUiCustomizationAttachmentResult(
        css=pulumi.get(__ret__, 'css'))
def get_user_pool_ui_customization_attachment_output(client_id: Optional[pulumi.Input[str]] = None,
                                                     user_pool_id: Optional[pulumi.Input[str]] = None,
                                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetUserPoolUiCustomizationAttachmentResult]:
    """
    Resource Type definition for AWS::Cognito::UserPoolUICustomizationAttachment


    :param str client_id: The app client ID for your UI customization. When this value isn't present, the customization applies to all user pool app clients that don't have client-level settings..
    :param str user_pool_id: The user pool ID for the user pool.
    """
    __args__ = dict()
    __args__['clientId'] = client_id
    __args__['userPoolId'] = user_pool_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:cognito:getUserPoolUiCustomizationAttachment', __args__, opts=opts, typ=GetUserPoolUiCustomizationAttachmentResult)
    return __ret__.apply(lambda __response__: GetUserPoolUiCustomizationAttachmentResult(
        css=pulumi.get(__response__, 'css')))
