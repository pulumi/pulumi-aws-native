# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'DataFilterExpressionProperties',
    'DataFilterExpressionPropertiesDimensionsProperties',
    'DataFilterExpressionPropertiesTagsProperties',
]

@pulumi.output_type
class DataFilterExpressionProperties(dict):
    def __init__(__self__, *,
                 dimensions: Optional['outputs.DataFilterExpressionPropertiesDimensionsProperties'] = None,
                 tags: Optional['outputs.DataFilterExpressionPropertiesTagsProperties'] = None):
        if dimensions is not None:
            pulumi.set(__self__, "dimensions", dimensions)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def dimensions(self) -> Optional['outputs.DataFilterExpressionPropertiesDimensionsProperties']:
        return pulumi.get(self, "dimensions")

    @property
    @pulumi.getter
    def tags(self) -> Optional['outputs.DataFilterExpressionPropertiesTagsProperties']:
        return pulumi.get(self, "tags")


@pulumi.output_type
class DataFilterExpressionPropertiesDimensionsProperties(dict):
    def __init__(__self__, *,
                 key: Optional['BillingViewDimensionKey'] = None,
                 values: Optional[Sequence[builtins.str]] = None):
        if key is not None:
            pulumi.set(__self__, "key", key)
        if values is not None:
            pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def key(self) -> Optional['BillingViewDimensionKey']:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def values(self) -> Optional[Sequence[builtins.str]]:
        return pulumi.get(self, "values")


@pulumi.output_type
class DataFilterExpressionPropertiesTagsProperties(dict):
    def __init__(__self__, *,
                 key: Optional[builtins.str] = None,
                 values: Optional[Sequence[builtins.str]] = None):
        if key is not None:
            pulumi.set(__self__, "key", key)
        if values is not None:
            pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def key(self) -> Optional[builtins.str]:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def values(self) -> Optional[Sequence[builtins.str]]:
        return pulumi.get(self, "values")


