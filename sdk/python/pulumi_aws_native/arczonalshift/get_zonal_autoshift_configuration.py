# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetZonalAutoshiftConfigurationResult',
    'AwaitableGetZonalAutoshiftConfigurationResult',
    'get_zonal_autoshift_configuration',
    'get_zonal_autoshift_configuration_output',
]

@pulumi.output_type
class GetZonalAutoshiftConfigurationResult:
    def __init__(__self__, practice_run_configuration=None, zonal_autoshift_status=None):
        if practice_run_configuration and not isinstance(practice_run_configuration, dict):
            raise TypeError("Expected argument 'practice_run_configuration' to be a dict")
        pulumi.set(__self__, "practice_run_configuration", practice_run_configuration)
        if zonal_autoshift_status and not isinstance(zonal_autoshift_status, str):
            raise TypeError("Expected argument 'zonal_autoshift_status' to be a str")
        pulumi.set(__self__, "zonal_autoshift_status", zonal_autoshift_status)

    @property
    @pulumi.getter(name="practiceRunConfiguration")
    def practice_run_configuration(self) -> Optional['outputs.ZonalAutoshiftConfigurationPracticeRunConfiguration']:
        return pulumi.get(self, "practice_run_configuration")

    @property
    @pulumi.getter(name="zonalAutoshiftStatus")
    def zonal_autoshift_status(self) -> Optional['ZonalAutoshiftConfigurationZonalAutoshiftStatus']:
        return pulumi.get(self, "zonal_autoshift_status")


class AwaitableGetZonalAutoshiftConfigurationResult(GetZonalAutoshiftConfigurationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetZonalAutoshiftConfigurationResult(
            practice_run_configuration=self.practice_run_configuration,
            zonal_autoshift_status=self.zonal_autoshift_status)


def get_zonal_autoshift_configuration(resource_identifier: Optional[str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetZonalAutoshiftConfigurationResult:
    """
    Definition of AWS::ARCZonalShift::ZonalAutoshiftConfiguration Resource Type
    """
    __args__ = dict()
    __args__['resourceIdentifier'] = resource_identifier
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:arczonalshift:getZonalAutoshiftConfiguration', __args__, opts=opts, typ=GetZonalAutoshiftConfigurationResult).value

    return AwaitableGetZonalAutoshiftConfigurationResult(
        practice_run_configuration=pulumi.get(__ret__, 'practice_run_configuration'),
        zonal_autoshift_status=pulumi.get(__ret__, 'zonal_autoshift_status'))


@_utilities.lift_output_func(get_zonal_autoshift_configuration)
def get_zonal_autoshift_configuration_output(resource_identifier: Optional[pulumi.Input[str]] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetZonalAutoshiftConfigurationResult]:
    """
    Definition of AWS::ARCZonalShift::ZonalAutoshiftConfiguration Resource Type
    """
    ...
