# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetAutoshiftObserverNotificationStatusResult',
    'AwaitableGetAutoshiftObserverNotificationStatusResult',
    'get_autoshift_observer_notification_status',
    'get_autoshift_observer_notification_status_output',
]

@pulumi.output_type
class GetAutoshiftObserverNotificationStatusResult:
    def __init__(__self__, account_id=None, region=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[str]:
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def region(self) -> Optional[str]:
        return pulumi.get(self, "region")


class AwaitableGetAutoshiftObserverNotificationStatusResult(GetAutoshiftObserverNotificationStatusResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAutoshiftObserverNotificationStatusResult(
            account_id=self.account_id,
            region=self.region)


def get_autoshift_observer_notification_status(account_id: Optional[str] = None,
                                               region: Optional[str] = None,
                                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAutoshiftObserverNotificationStatusResult:
    """
    Definition of AWS::ARCZonalShift::AutoshiftObserverNotificationStatus Resource Type
    """
    __args__ = dict()
    __args__['accountId'] = account_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:arczonalshift:getAutoshiftObserverNotificationStatus', __args__, opts=opts, typ=GetAutoshiftObserverNotificationStatusResult).value

    return AwaitableGetAutoshiftObserverNotificationStatusResult(
        account_id=pulumi.get(__ret__, 'account_id'),
        region=pulumi.get(__ret__, 'region'))


@_utilities.lift_output_func(get_autoshift_observer_notification_status)
def get_autoshift_observer_notification_status_output(account_id: Optional[pulumi.Input[str]] = None,
                                                      region: Optional[pulumi.Input[str]] = None,
                                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAutoshiftObserverNotificationStatusResult]:
    """
    Definition of AWS::ARCZonalShift::AutoshiftObserverNotificationStatus Resource Type
    """
    ...
