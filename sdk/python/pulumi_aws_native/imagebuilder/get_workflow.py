# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetWorkflowResult',
    'AwaitableGetWorkflowResult',
    'get_workflow',
    'get_workflow_output',
]

@pulumi.output_type
class GetWorkflowResult:
    def __init__(__self__, arn=None, latest_version=None, tags=None):
        if arn and not isinstance(arn, str):
            raise TypeError("Expected argument 'arn' to be a str")
        pulumi.set(__self__, "arn", arn)
        if latest_version and not isinstance(latest_version, dict):
            raise TypeError("Expected argument 'latest_version' to be a dict")
        pulumi.set(__self__, "latest_version", latest_version)
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def arn(self) -> Optional[_builtins.str]:
        """
        The Amazon Resource Name (ARN) of the workflow.
        """
        return pulumi.get(self, "arn")

    @_builtins.property
    @pulumi.getter(name="latestVersion")
    def latest_version(self) -> Optional['outputs.WorkflowLatestVersion']:
        """
        The latest version references of the workflow.
        """
        return pulumi.get(self, "latest_version")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[Mapping[str, _builtins.str]]:
        """
        The tags associated with the workflow.
        """
        return pulumi.get(self, "tags")


class AwaitableGetWorkflowResult(GetWorkflowResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWorkflowResult(
            arn=self.arn,
            latest_version=self.latest_version,
            tags=self.tags)


def get_workflow(arn: Optional[_builtins.str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWorkflowResult:
    """
    Resource schema for AWS::ImageBuilder::Workflow


    :param _builtins.str arn: The Amazon Resource Name (ARN) of the workflow.
    """
    __args__ = dict()
    __args__['arn'] = arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:imagebuilder:getWorkflow', __args__, opts=opts, typ=GetWorkflowResult).value

    return AwaitableGetWorkflowResult(
        arn=pulumi.get(__ret__, 'arn'),
        latest_version=pulumi.get(__ret__, 'latest_version'),
        tags=pulumi.get(__ret__, 'tags'))
def get_workflow_output(arn: Optional[pulumi.Input[_builtins.str]] = None,
                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetWorkflowResult]:
    """
    Resource schema for AWS::ImageBuilder::Workflow


    :param _builtins.str arn: The Amazon Resource Name (ARN) of the workflow.
    """
    __args__ = dict()
    __args__['arn'] = arn
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:imagebuilder:getWorkflow', __args__, opts=opts, typ=GetWorkflowResult)
    return __ret__.apply(lambda __response__: GetWorkflowResult(
        arn=pulumi.get(__response__, 'arn'),
        latest_version=pulumi.get(__response__, 'latest_version'),
        tags=pulumi.get(__response__, 'tags')))
