# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'GetComponentResult',
    'AwaitableGetComponentResult',
    'get_component',
    'get_component_output',
]

@pulumi.output_type
class GetComponentResult:
    def __init__(__self__, arn=None, encrypted=None, type=None):
        if arn and not isinstance(arn, str):
            raise TypeError("Expected argument 'arn' to be a str")
        pulumi.set(__self__, "arn", arn)
        if encrypted and not isinstance(encrypted, bool):
            raise TypeError("Expected argument 'encrypted' to be a bool")
        pulumi.set(__self__, "encrypted", encrypted)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def arn(self) -> Optional[str]:
        """
        The Amazon Resource Name (ARN) of the component.
        """
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter
    def encrypted(self) -> Optional[bool]:
        """
        The encryption status of the component.
        """
        return pulumi.get(self, "encrypted")

    @property
    @pulumi.getter
    def type(self) -> Optional['ComponentType']:
        """
        The type of the component denotes whether the component is used to build the image or only to test it. 
        """
        return pulumi.get(self, "type")


class AwaitableGetComponentResult(GetComponentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetComponentResult(
            arn=self.arn,
            encrypted=self.encrypted,
            type=self.type)


def get_component(arn: Optional[str] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetComponentResult:
    """
    Resource schema for AWS::ImageBuilder::Component


    :param str arn: The Amazon Resource Name (ARN) of the component.
    """
    __args__ = dict()
    __args__['arn'] = arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:imagebuilder:getComponent', __args__, opts=opts, typ=GetComponentResult).value

    return AwaitableGetComponentResult(
        arn=pulumi.get(__ret__, 'arn'),
        encrypted=pulumi.get(__ret__, 'encrypted'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_component)
def get_component_output(arn: Optional[pulumi.Input[str]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetComponentResult]:
    """
    Resource schema for AWS::ImageBuilder::Component


    :param str arn: The Amazon Resource Name (ARN) of the component.
    """
    ...
