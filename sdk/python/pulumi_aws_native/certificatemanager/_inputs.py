# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'AccountExpiryEventsConfigurationArgs',
]

@pulumi.input_type
class AccountExpiryEventsConfigurationArgs:
    def __init__(__self__, *,
                 days_before_expiry: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[int] days_before_expiry: This option specifies the number of days prior to certificate expiration when ACM starts generating `EventBridge` events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.
        """
        if days_before_expiry is not None:
            pulumi.set(__self__, "days_before_expiry", days_before_expiry)

    @property
    @pulumi.getter(name="daysBeforeExpiry")
    def days_before_expiry(self) -> Optional[pulumi.Input[int]]:
        """
        This option specifies the number of days prior to certificate expiration when ACM starts generating `EventBridge` events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.
        """
        return pulumi.get(self, "days_before_expiry")

    @days_before_expiry.setter
    def days_before_expiry(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "days_before_expiry", value)


