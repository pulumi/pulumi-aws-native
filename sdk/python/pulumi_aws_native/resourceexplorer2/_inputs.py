# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'IndexTagMapArgs',
    'ViewFiltersArgs',
    'ViewIncludedPropertyArgs',
    'ViewTagMapArgs',
]

@pulumi.input_type
class IndexTagMapArgs:
    def __init__(__self__):
        pass
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             opts: Optional[pulumi.ResourceOptions]=None):
        pass


@pulumi.input_type
class ViewFiltersArgs:
    def __init__(__self__, *,
                 filter_string: pulumi.Input[str]):
        ViewFiltersArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            filter_string=filter_string,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             filter_string: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("filter_string", filter_string)

    @property
    @pulumi.getter(name="filterString")
    def filter_string(self) -> pulumi.Input[str]:
        return pulumi.get(self, "filter_string")

    @filter_string.setter
    def filter_string(self, value: pulumi.Input[str]):
        pulumi.set(self, "filter_string", value)


@pulumi.input_type
class ViewIncludedPropertyArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str]):
        ViewIncludedPropertyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("name", name)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class ViewTagMapArgs:
    def __init__(__self__):
        pass
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             opts: Optional[pulumi.ResourceOptions]=None):
        pass


