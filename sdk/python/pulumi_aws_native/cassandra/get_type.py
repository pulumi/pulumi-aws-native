# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetTypeResult',
    'AwaitableGetTypeResult',
    'get_type',
    'get_type_output',
]

@pulumi.output_type
class GetTypeResult:
    def __init__(__self__, direct_parent_types=None, direct_referring_tables=None, keyspace_arn=None, last_modified_timestamp=None, max_nesting_depth=None):
        if direct_parent_types and not isinstance(direct_parent_types, list):
            raise TypeError("Expected argument 'direct_parent_types' to be a list")
        pulumi.set(__self__, "direct_parent_types", direct_parent_types)
        if direct_referring_tables and not isinstance(direct_referring_tables, list):
            raise TypeError("Expected argument 'direct_referring_tables' to be a list")
        pulumi.set(__self__, "direct_referring_tables", direct_referring_tables)
        if keyspace_arn and not isinstance(keyspace_arn, str):
            raise TypeError("Expected argument 'keyspace_arn' to be a str")
        pulumi.set(__self__, "keyspace_arn", keyspace_arn)
        if last_modified_timestamp and not isinstance(last_modified_timestamp, float):
            raise TypeError("Expected argument 'last_modified_timestamp' to be a float")
        pulumi.set(__self__, "last_modified_timestamp", last_modified_timestamp)
        if max_nesting_depth and not isinstance(max_nesting_depth, int):
            raise TypeError("Expected argument 'max_nesting_depth' to be a int")
        pulumi.set(__self__, "max_nesting_depth", max_nesting_depth)

    @property
    @pulumi.getter(name="directParentTypes")
    def direct_parent_types(self) -> Optional[Sequence[str]]:
        """
        List of parent User-Defined Types that directly reference the User-Defined Type in their fields.
        """
        return pulumi.get(self, "direct_parent_types")

    @property
    @pulumi.getter(name="directReferringTables")
    def direct_referring_tables(self) -> Optional[Sequence[str]]:
        """
        List of Tables that directly reference the User-Defined Type in their columns.
        """
        return pulumi.get(self, "direct_referring_tables")

    @property
    @pulumi.getter(name="keyspaceArn")
    def keyspace_arn(self) -> Optional[str]:
        """
        ARN of the Keyspace which contains the User-Defined Type.
        """
        return pulumi.get(self, "keyspace_arn")

    @property
    @pulumi.getter(name="lastModifiedTimestamp")
    def last_modified_timestamp(self) -> Optional[float]:
        """
        Timestamp of the last time the User-Defined Type's meta data was modified.
        """
        return pulumi.get(self, "last_modified_timestamp")

    @property
    @pulumi.getter(name="maxNestingDepth")
    def max_nesting_depth(self) -> Optional[int]:
        """
        Maximum nesting depth of the User-Defined Type across the field types.
        """
        return pulumi.get(self, "max_nesting_depth")


class AwaitableGetTypeResult(GetTypeResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTypeResult(
            direct_parent_types=self.direct_parent_types,
            direct_referring_tables=self.direct_referring_tables,
            keyspace_arn=self.keyspace_arn,
            last_modified_timestamp=self.last_modified_timestamp,
            max_nesting_depth=self.max_nesting_depth)


def get_type(keyspace_name: Optional[str] = None,
             type_name: Optional[str] = None,
             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTypeResult:
    """
    Resource schema for AWS::Cassandra::Type


    :param str keyspace_name: Name of the Keyspace which contains the User-Defined Type.
    :param str type_name: Name of the User-Defined Type.
    """
    __args__ = dict()
    __args__['keyspaceName'] = keyspace_name
    __args__['typeName'] = type_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:cassandra:getType', __args__, opts=opts, typ=GetTypeResult).value

    return AwaitableGetTypeResult(
        direct_parent_types=pulumi.get(__ret__, 'direct_parent_types'),
        direct_referring_tables=pulumi.get(__ret__, 'direct_referring_tables'),
        keyspace_arn=pulumi.get(__ret__, 'keyspace_arn'),
        last_modified_timestamp=pulumi.get(__ret__, 'last_modified_timestamp'),
        max_nesting_depth=pulumi.get(__ret__, 'max_nesting_depth'))
def get_type_output(keyspace_name: Optional[pulumi.Input[str]] = None,
                    type_name: Optional[pulumi.Input[str]] = None,
                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTypeResult]:
    """
    Resource schema for AWS::Cassandra::Type


    :param str keyspace_name: Name of the Keyspace which contains the User-Defined Type.
    :param str type_name: Name of the User-Defined Type.
    """
    __args__ = dict()
    __args__['keyspaceName'] = keyspace_name
    __args__['typeName'] = type_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:cassandra:getType', __args__, opts=opts, typ=GetTypeResult)
    return __ret__.apply(lambda __response__: GetTypeResult(
        direct_parent_types=pulumi.get(__response__, 'direct_parent_types'),
        direct_referring_tables=pulumi.get(__response__, 'direct_referring_tables'),
        keyspace_arn=pulumi.get(__response__, 'keyspace_arn'),
        last_modified_timestamp=pulumi.get(__response__, 'last_modified_timestamp'),
        max_nesting_depth=pulumi.get(__response__, 'max_nesting_depth')))
