# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetDocumentationPartResult',
    'AwaitableGetDocumentationPartResult',
    'get_documentation_part',
    'get_documentation_part_output',
]

@pulumi.output_type
class GetDocumentationPartResult:
    def __init__(__self__, documentation_part_id=None, properties=None):
        if documentation_part_id and not isinstance(documentation_part_id, str):
            raise TypeError("Expected argument 'documentation_part_id' to be a str")
        pulumi.set(__self__, "documentation_part_id", documentation_part_id)
        if properties and not isinstance(properties, str):
            raise TypeError("Expected argument 'properties' to be a str")
        pulumi.set(__self__, "properties", properties)

    @property
    @pulumi.getter(name="documentationPartId")
    def documentation_part_id(self) -> Optional[str]:
        """
        The identifier of the documentation Part.
        """
        return pulumi.get(self, "documentation_part_id")

    @property
    @pulumi.getter
    def properties(self) -> Optional[str]:
        """
        The new documentation content map of the targeted API entity. Enclosed key-value pairs are API-specific, but only OpenAPI-compliant key-value pairs can be exported and, hence, published.
        """
        return pulumi.get(self, "properties")


class AwaitableGetDocumentationPartResult(GetDocumentationPartResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDocumentationPartResult(
            documentation_part_id=self.documentation_part_id,
            properties=self.properties)


def get_documentation_part(documentation_part_id: Optional[str] = None,
                           rest_api_id: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDocumentationPartResult:
    """
    The ``AWS::ApiGateway::DocumentationPart`` resource creates a documentation part for an API. For more information, see [Representation of API Documentation in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api-content-representation.html) in the *API Gateway Developer Guide*.


    :param str documentation_part_id: The identifier of the documentation Part.
    :param str rest_api_id: The string identifier of the associated RestApi.
    """
    __args__ = dict()
    __args__['documentationPartId'] = documentation_part_id
    __args__['restApiId'] = rest_api_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:apigateway:getDocumentationPart', __args__, opts=opts, typ=GetDocumentationPartResult).value

    return AwaitableGetDocumentationPartResult(
        documentation_part_id=pulumi.get(__ret__, 'documentation_part_id'),
        properties=pulumi.get(__ret__, 'properties'))


@_utilities.lift_output_func(get_documentation_part)
def get_documentation_part_output(documentation_part_id: Optional[pulumi.Input[str]] = None,
                                  rest_api_id: Optional[pulumi.Input[str]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDocumentationPartResult]:
    """
    The ``AWS::ApiGateway::DocumentationPart`` resource creates a documentation part for an API. For more information, see [Representation of API Documentation in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api-content-representation.html) in the *API Gateway Developer Guide*.


    :param str documentation_part_id: The identifier of the documentation Part.
    :param str rest_api_id: The string identifier of the associated RestApi.
    """
    ...
