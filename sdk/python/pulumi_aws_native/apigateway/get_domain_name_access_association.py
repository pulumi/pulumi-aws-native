# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetDomainNameAccessAssociationResult',
    'AwaitableGetDomainNameAccessAssociationResult',
    'get_domain_name_access_association',
    'get_domain_name_access_association_output',
]

@pulumi.output_type
class GetDomainNameAccessAssociationResult:
    def __init__(__self__, domain_name_access_association_arn=None):
        if domain_name_access_association_arn and not isinstance(domain_name_access_association_arn, str):
            raise TypeError("Expected argument 'domain_name_access_association_arn' to be a str")
        pulumi.set(__self__, "domain_name_access_association_arn", domain_name_access_association_arn)

    @property
    @pulumi.getter(name="domainNameAccessAssociationArn")
    def domain_name_access_association_arn(self) -> Optional[str]:
        """
        The amazon resource name (ARN) of the domain name access association resource.
        """
        return pulumi.get(self, "domain_name_access_association_arn")


class AwaitableGetDomainNameAccessAssociationResult(GetDomainNameAccessAssociationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDomainNameAccessAssociationResult(
            domain_name_access_association_arn=self.domain_name_access_association_arn)


def get_domain_name_access_association(domain_name_access_association_arn: Optional[str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDomainNameAccessAssociationResult:
    """
    Resource Type definition for AWS::ApiGateway::DomainNameAccessAssociation.


    :param str domain_name_access_association_arn: The amazon resource name (ARN) of the domain name access association resource.
    """
    __args__ = dict()
    __args__['domainNameAccessAssociationArn'] = domain_name_access_association_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:apigateway:getDomainNameAccessAssociation', __args__, opts=opts, typ=GetDomainNameAccessAssociationResult).value

    return AwaitableGetDomainNameAccessAssociationResult(
        domain_name_access_association_arn=pulumi.get(__ret__, 'domain_name_access_association_arn'))
def get_domain_name_access_association_output(domain_name_access_association_arn: Optional[pulumi.Input[str]] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDomainNameAccessAssociationResult]:
    """
    Resource Type definition for AWS::ApiGateway::DomainNameAccessAssociation.


    :param str domain_name_access_association_arn: The amazon resource name (ARN) of the domain name access association resource.
    """
    __args__ = dict()
    __args__['domainNameAccessAssociationArn'] = domain_name_access_association_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:apigateway:getDomainNameAccessAssociation', __args__, opts=opts, typ=GetDomainNameAccessAssociationResult)
    return __ret__.apply(lambda __response__: GetDomainNameAccessAssociationResult(
        domain_name_access_association_arn=pulumi.get(__response__, 'domain_name_access_association_arn')))
