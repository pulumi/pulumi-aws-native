# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetBasePathMappingResult',
    'AwaitableGetBasePathMappingResult',
    'get_base_path_mapping',
    'get_base_path_mapping_output',
]

@pulumi.output_type
class GetBasePathMappingResult:
    def __init__(__self__, id=None, rest_api_id=None, stage=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if rest_api_id and not isinstance(rest_api_id, str):
            raise TypeError("Expected argument 'rest_api_id' to be a str")
        pulumi.set(__self__, "rest_api_id", rest_api_id)
        if stage and not isinstance(stage, str):
            raise TypeError("Expected argument 'stage' to be a str")
        pulumi.set(__self__, "stage", stage)

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="restApiId")
    def rest_api_id(self) -> Optional[str]:
        """
        The ID of the API.
        """
        return pulumi.get(self, "rest_api_id")

    @property
    @pulumi.getter
    def stage(self) -> Optional[str]:
        """
        The name of the API's stage.
        """
        return pulumi.get(self, "stage")


class AwaitableGetBasePathMappingResult(GetBasePathMappingResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBasePathMappingResult(
            id=self.id,
            rest_api_id=self.rest_api_id,
            stage=self.stage)


def get_base_path_mapping(base_path: Optional[str] = None,
                          domain_name: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBasePathMappingResult:
    """
    Resource Type definition for AWS::ApiGateway::BasePathMapping


    :param str base_path: The base path name that callers of the API must provide in the URL after the domain name.
    :param str domain_name: The DomainName of an AWS::ApiGateway::DomainName resource.
    """
    __args__ = dict()
    __args__['basePath'] = base_path
    __args__['domainName'] = domain_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:apigateway:getBasePathMapping', __args__, opts=opts, typ=GetBasePathMappingResult).value

    return AwaitableGetBasePathMappingResult(
        id=__ret__.id,
        rest_api_id=__ret__.rest_api_id,
        stage=__ret__.stage)


@_utilities.lift_output_func(get_base_path_mapping)
def get_base_path_mapping_output(base_path: Optional[pulumi.Input[str]] = None,
                                 domain_name: Optional[pulumi.Input[str]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBasePathMappingResult]:
    """
    Resource Type definition for AWS::ApiGateway::BasePathMapping


    :param str base_path: The base path name that callers of the API must provide in the URL after the domain name.
    :param str domain_name: The DomainName of an AWS::ApiGateway::DomainName resource.
    """
    ...
