# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import outputs as _root_outputs

__all__ = [
    'GetVpcEndpointAssociationResult',
    'AwaitableGetVpcEndpointAssociationResult',
    'get_vpc_endpoint_association',
    'get_vpc_endpoint_association_output',
]

@pulumi.output_type
class GetVpcEndpointAssociationResult:
    def __init__(__self__, endpoint_id=None, tags=None, vpc_endpoint_association_arn=None, vpc_endpoint_association_id=None):
        if endpoint_id and not isinstance(endpoint_id, str):
            raise TypeError("Expected argument 'endpoint_id' to be a str")
        pulumi.set(__self__, "endpoint_id", endpoint_id)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)
        if vpc_endpoint_association_arn and not isinstance(vpc_endpoint_association_arn, str):
            raise TypeError("Expected argument 'vpc_endpoint_association_arn' to be a str")
        pulumi.set(__self__, "vpc_endpoint_association_arn", vpc_endpoint_association_arn)
        if vpc_endpoint_association_id and not isinstance(vpc_endpoint_association_id, str):
            raise TypeError("Expected argument 'vpc_endpoint_association_id' to be a str")
        pulumi.set(__self__, "vpc_endpoint_association_id", vpc_endpoint_association_id)

    @property
    @pulumi.getter(name="endpointId")
    def endpoint_id(self) -> Optional[builtins.str]:
        return pulumi.get(self, "endpoint_id")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        The key:value pairs to associate with the resource.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="vpcEndpointAssociationArn")
    def vpc_endpoint_association_arn(self) -> Optional[builtins.str]:
        """
        The Amazon Resource Name (ARN) of a VPC endpoint association.
        """
        return pulumi.get(self, "vpc_endpoint_association_arn")

    @property
    @pulumi.getter(name="vpcEndpointAssociationId")
    def vpc_endpoint_association_id(self) -> Optional[builtins.str]:
        """
        The unique identifier of the VPC endpoint association.
        """
        return pulumi.get(self, "vpc_endpoint_association_id")


class AwaitableGetVpcEndpointAssociationResult(GetVpcEndpointAssociationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVpcEndpointAssociationResult(
            endpoint_id=self.endpoint_id,
            tags=self.tags,
            vpc_endpoint_association_arn=self.vpc_endpoint_association_arn,
            vpc_endpoint_association_id=self.vpc_endpoint_association_id)


def get_vpc_endpoint_association(vpc_endpoint_association_arn: Optional[builtins.str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVpcEndpointAssociationResult:
    """
    Resource type definition for AWS::NetworkFirewall::VpcEndpointAssociation


    :param builtins.str vpc_endpoint_association_arn: The Amazon Resource Name (ARN) of a VPC endpoint association.
    """
    __args__ = dict()
    __args__['vpcEndpointAssociationArn'] = vpc_endpoint_association_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:networkfirewall:getVpcEndpointAssociation', __args__, opts=opts, typ=GetVpcEndpointAssociationResult).value

    return AwaitableGetVpcEndpointAssociationResult(
        endpoint_id=pulumi.get(__ret__, 'endpoint_id'),
        tags=pulumi.get(__ret__, 'tags'),
        vpc_endpoint_association_arn=pulumi.get(__ret__, 'vpc_endpoint_association_arn'),
        vpc_endpoint_association_id=pulumi.get(__ret__, 'vpc_endpoint_association_id'))
def get_vpc_endpoint_association_output(vpc_endpoint_association_arn: Optional[pulumi.Input[builtins.str]] = None,
                                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetVpcEndpointAssociationResult]:
    """
    Resource type definition for AWS::NetworkFirewall::VpcEndpointAssociation


    :param builtins.str vpc_endpoint_association_arn: The Amazon Resource Name (ARN) of a VPC endpoint association.
    """
    __args__ = dict()
    __args__['vpcEndpointAssociationArn'] = vpc_endpoint_association_arn
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:networkfirewall:getVpcEndpointAssociation', __args__, opts=opts, typ=GetVpcEndpointAssociationResult)
    return __ret__.apply(lambda __response__: GetVpcEndpointAssociationResult(
        endpoint_id=pulumi.get(__response__, 'endpoint_id'),
        tags=pulumi.get(__response__, 'tags'),
        vpc_endpoint_association_arn=pulumi.get(__response__, 'vpc_endpoint_association_arn'),
        vpc_endpoint_association_id=pulumi.get(__response__, 'vpc_endpoint_association_id')))
