# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetLinkAssociationResult',
    'AwaitableGetLinkAssociationResult',
    'get_link_association',
    'get_link_association_output',
]

@pulumi.output_type
class GetLinkAssociationResult:
    def __init__(__self__):


class AwaitableGetLinkAssociationResult(GetLinkAssociationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLinkAssociationResult(
)


def get_link_association(device_id: Optional[str] = None,
                         global_network_id: Optional[str] = None,
                         link_id: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLinkAssociationResult:
    """
    The AWS::NetworkManager::LinkAssociation type associates a link to a device. The device and link must be in the same global network and the same site.


    :param str device_id: The ID of the device
    :param str global_network_id: The ID of the global network.
    :param str link_id: The ID of the link
    """
    __args__ = dict()
    __args__['deviceId'] = device_id
    __args__['globalNetworkId'] = global_network_id
    __args__['linkId'] = link_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aws-native:networkmanager:getLinkAssociation', __args__, opts=opts, typ=GetLinkAssociationResult).value

    return AwaitableGetLinkAssociationResult(


@_utilities.lift_output_func(get_link_association)
def get_link_association_output(device_id: Optional[pulumi.Input[str]] = None,
                                global_network_id: Optional[pulumi.Input[str]] = None,
                                link_id: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetLinkAssociationResult]:
    """
    The AWS::NetworkManager::LinkAssociation type associates a link to a device. The device and link must be in the same global network and the same site.


    :param str device_id: The ID of the device
    :param str global_network_id: The ID of the global network.
    :param str link_id: The ID of the link
    """
    ...
