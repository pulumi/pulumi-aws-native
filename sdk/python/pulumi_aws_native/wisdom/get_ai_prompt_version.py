# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAiPromptVersionResult',
    'AwaitableGetAiPromptVersionResult',
    'get_ai_prompt_version',
    'get_ai_prompt_version_output',
]

@pulumi.output_type
class GetAiPromptVersionResult:
    def __init__(__self__, ai_prompt_arn=None, ai_prompt_version_id=None, assistant_arn=None, version_number=None):
        if ai_prompt_arn and not isinstance(ai_prompt_arn, str):
            raise TypeError("Expected argument 'ai_prompt_arn' to be a str")
        pulumi.set(__self__, "ai_prompt_arn", ai_prompt_arn)
        if ai_prompt_version_id and not isinstance(ai_prompt_version_id, str):
            raise TypeError("Expected argument 'ai_prompt_version_id' to be a str")
        pulumi.set(__self__, "ai_prompt_version_id", ai_prompt_version_id)
        if assistant_arn and not isinstance(assistant_arn, str):
            raise TypeError("Expected argument 'assistant_arn' to be a str")
        pulumi.set(__self__, "assistant_arn", assistant_arn)
        if version_number and not isinstance(version_number, float):
            raise TypeError("Expected argument 'version_number' to be a float")
        pulumi.set(__self__, "version_number", version_number)

    @property
    @pulumi.getter(name="aiPromptArn")
    def ai_prompt_arn(self) -> Optional[str]:
        return pulumi.get(self, "ai_prompt_arn")

    @property
    @pulumi.getter(name="aiPromptVersionId")
    def ai_prompt_version_id(self) -> Optional[str]:
        return pulumi.get(self, "ai_prompt_version_id")

    @property
    @pulumi.getter(name="assistantArn")
    def assistant_arn(self) -> Optional[str]:
        return pulumi.get(self, "assistant_arn")

    @property
    @pulumi.getter(name="versionNumber")
    def version_number(self) -> Optional[float]:
        """
        The version number for this AI Prompt version.
        """
        return pulumi.get(self, "version_number")


class AwaitableGetAiPromptVersionResult(GetAiPromptVersionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAiPromptVersionResult(
            ai_prompt_arn=self.ai_prompt_arn,
            ai_prompt_version_id=self.ai_prompt_version_id,
            assistant_arn=self.assistant_arn,
            version_number=self.version_number)


def get_ai_prompt_version(ai_prompt_id: Optional[str] = None,
                          assistant_id: Optional[str] = None,
                          version_number: Optional[float] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAiPromptVersionResult:
    """
    Definition of AWS::Wisdom::AIPromptVersion Resource Type


    :param str ai_prompt_id: The identifier of the Amazon Q in Connect AI prompt.
    :param str assistant_id: The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
    :param float version_number: The version number for this AI Prompt version.
    """
    __args__ = dict()
    __args__['aiPromptId'] = ai_prompt_id
    __args__['assistantId'] = assistant_id
    __args__['versionNumber'] = version_number
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:wisdom:getAiPromptVersion', __args__, opts=opts, typ=GetAiPromptVersionResult).value

    return AwaitableGetAiPromptVersionResult(
        ai_prompt_arn=pulumi.get(__ret__, 'ai_prompt_arn'),
        ai_prompt_version_id=pulumi.get(__ret__, 'ai_prompt_version_id'),
        assistant_arn=pulumi.get(__ret__, 'assistant_arn'),
        version_number=pulumi.get(__ret__, 'version_number'))
def get_ai_prompt_version_output(ai_prompt_id: Optional[pulumi.Input[str]] = None,
                                 assistant_id: Optional[pulumi.Input[str]] = None,
                                 version_number: Optional[pulumi.Input[float]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAiPromptVersionResult]:
    """
    Definition of AWS::Wisdom::AIPromptVersion Resource Type


    :param str ai_prompt_id: The identifier of the Amazon Q in Connect AI prompt.
    :param str assistant_id: The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
    :param float version_number: The version number for this AI Prompt version.
    """
    __args__ = dict()
    __args__['aiPromptId'] = ai_prompt_id
    __args__['assistantId'] = assistant_id
    __args__['versionNumber'] = version_number
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:wisdom:getAiPromptVersion', __args__, opts=opts, typ=GetAiPromptVersionResult)
    return __ret__.apply(lambda __response__: GetAiPromptVersionResult(
        ai_prompt_arn=pulumi.get(__response__, 'ai_prompt_arn'),
        ai_prompt_version_id=pulumi.get(__response__, 'ai_prompt_version_id'),
        assistant_arn=pulumi.get(__response__, 'assistant_arn'),
        version_number=pulumi.get(__response__, 'version_number')))
