# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetAttributeGroupAssociationResult',
    'AwaitableGetAttributeGroupAssociationResult',
    'get_attribute_group_association',
    'get_attribute_group_association_output',
]

@pulumi.output_type
class GetAttributeGroupAssociationResult:
    def __init__(__self__, application_arn=None, attribute_group_arn=None):
        if application_arn and not isinstance(application_arn, str):
            raise TypeError("Expected argument 'application_arn' to be a str")
        pulumi.set(__self__, "application_arn", application_arn)
        if attribute_group_arn and not isinstance(attribute_group_arn, str):
            raise TypeError("Expected argument 'attribute_group_arn' to be a str")
        pulumi.set(__self__, "attribute_group_arn", attribute_group_arn)

    @property
    @pulumi.getter(name="applicationArn")
    def application_arn(self) -> Optional[str]:
        return pulumi.get(self, "application_arn")

    @property
    @pulumi.getter(name="attributeGroupArn")
    def attribute_group_arn(self) -> Optional[str]:
        return pulumi.get(self, "attribute_group_arn")


class AwaitableGetAttributeGroupAssociationResult(GetAttributeGroupAssociationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAttributeGroupAssociationResult(
            application_arn=self.application_arn,
            attribute_group_arn=self.attribute_group_arn)


def get_attribute_group_association(application_arn: Optional[str] = None,
                                    attribute_group_arn: Optional[str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAttributeGroupAssociationResult:
    """
    Resource Schema for AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation.
    """
    __args__ = dict()
    __args__['applicationArn'] = application_arn
    __args__['attributeGroupArn'] = attribute_group_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:servicecatalogappregistry:getAttributeGroupAssociation', __args__, opts=opts, typ=GetAttributeGroupAssociationResult).value

    return AwaitableGetAttributeGroupAssociationResult(
        application_arn=pulumi.get(__ret__, 'application_arn'),
        attribute_group_arn=pulumi.get(__ret__, 'attribute_group_arn'))


@_utilities.lift_output_func(get_attribute_group_association)
def get_attribute_group_association_output(application_arn: Optional[pulumi.Input[str]] = None,
                                           attribute_group_arn: Optional[pulumi.Input[str]] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAttributeGroupAssociationResult]:
    """
    Resource Schema for AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation.
    """
    ...
