# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'GetAssignmentResult',
    'AwaitableGetAssignmentResult',
    'get_assignment',
    'get_assignment_output',
]

@pulumi.output_type
class GetAssignmentResult:
    def __init__(__self__):


class AwaitableGetAssignmentResult(GetAssignmentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAssignmentResult(
)


def get_assignment(instance_arn: Optional[str] = None,
                   permission_set_arn: Optional[str] = None,
                   principal_id: Optional[str] = None,
                   principal_type: Optional['AssignmentPrincipalType'] = None,
                   target_id: Optional[str] = None,
                   target_type: Optional['AssignmentTargetType'] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAssignmentResult:
    """
    Resource Type definition for SSO assignmet


    :param str instance_arn: The sso instance that the permission set is owned.
    :param str permission_set_arn: The permission set that the assignemt will be assigned
    :param str principal_id: The assignee's identifier, user id/group id
    :param 'AssignmentPrincipalType' principal_type: The assignee's type, user/group
    :param str target_id: The account id to be provisioned.
    :param 'AssignmentTargetType' target_type: The type of resource to be provsioned to, only aws account now
    """
    __args__ = dict()
    __args__['instanceArn'] = instance_arn
    __args__['permissionSetArn'] = permission_set_arn
    __args__['principalId'] = principal_id
    __args__['principalType'] = principal_type
    __args__['targetId'] = target_id
    __args__['targetType'] = target_type
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aws-native:sso:getAssignment', __args__, opts=opts, typ=GetAssignmentResult).value

    return AwaitableGetAssignmentResult(


@_utilities.lift_output_func(get_assignment)
def get_assignment_output(instance_arn: Optional[pulumi.Input[str]] = None,
                          permission_set_arn: Optional[pulumi.Input[str]] = None,
                          principal_id: Optional[pulumi.Input[str]] = None,
                          principal_type: Optional[pulumi.Input['AssignmentPrincipalType']] = None,
                          target_id: Optional[pulumi.Input[str]] = None,
                          target_type: Optional[pulumi.Input['AssignmentTargetType']] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAssignmentResult]:
    """
    Resource Type definition for SSO assignmet


    :param str instance_arn: The sso instance that the permission set is owned.
    :param str permission_set_arn: The permission set that the assignemt will be assigned
    :param str principal_id: The assignee's identifier, user id/group id
    :param 'AssignmentPrincipalType' principal_type: The assignee's type, user/group
    :param str target_id: The account id to be provisioned.
    :param 'AssignmentTargetType' target_type: The type of resource to be provsioned to, only aws account now
    """
    ...
