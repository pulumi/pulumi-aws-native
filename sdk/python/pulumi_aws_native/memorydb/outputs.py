# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'AuthenticationModeProperties',
    'ClusterEndpoint',
]

@pulumi.output_type
class AuthenticationModeProperties(dict):
    def __init__(__self__, *,
                 passwords: Optional[Sequence[str]] = None,
                 type: Optional['UserAuthenticationModePropertiesType'] = None):
        """
        :param Sequence[str] passwords: Passwords used for this user account. You can create up to two passwords for each user.
        :param 'UserAuthenticationModePropertiesType' type: Type of authentication strategy for this user.
        """
        if passwords is not None:
            pulumi.set(__self__, "passwords", passwords)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def passwords(self) -> Optional[Sequence[str]]:
        """
        Passwords used for this user account. You can create up to two passwords for each user.
        """
        return pulumi.get(self, "passwords")

    @property
    @pulumi.getter
    def type(self) -> Optional['UserAuthenticationModePropertiesType']:
        """
        Type of authentication strategy for this user.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class ClusterEndpoint(dict):
    def __init__(__self__, *,
                 address: Optional[str] = None,
                 port: Optional[int] = None):
        """
        :param str address: The DNS address of the primary read-write node.
        :param int port: The port number that the engine is listening on. 
        """
        if address is not None:
            pulumi.set(__self__, "address", address)
        if port is not None:
            pulumi.set(__self__, "port", port)

    @property
    @pulumi.getter
    def address(self) -> Optional[str]:
        """
        The DNS address of the primary read-write node.
        """
        return pulumi.get(self, "address")

    @property
    @pulumi.getter
    def port(self) -> Optional[int]:
        """
        The port number that the engine is listening on. 
        """
        return pulumi.get(self, "port")


