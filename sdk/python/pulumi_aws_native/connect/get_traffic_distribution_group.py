# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetTrafficDistributionGroupResult',
    'AwaitableGetTrafficDistributionGroupResult',
    'get_traffic_distribution_group',
    'get_traffic_distribution_group_output',
]

@pulumi.output_type
class GetTrafficDistributionGroupResult:
    def __init__(__self__, instance_arn=None, is_default=None, status=None, tags=None, traffic_distribution_group_arn=None):
        if instance_arn and not isinstance(instance_arn, str):
            raise TypeError("Expected argument 'instance_arn' to be a str")
        pulumi.set(__self__, "instance_arn", instance_arn)
        if is_default and not isinstance(is_default, bool):
            raise TypeError("Expected argument 'is_default' to be a bool")
        pulumi.set(__self__, "is_default", is_default)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)
        if traffic_distribution_group_arn and not isinstance(traffic_distribution_group_arn, str):
            raise TypeError("Expected argument 'traffic_distribution_group_arn' to be a str")
        pulumi.set(__self__, "traffic_distribution_group_arn", traffic_distribution_group_arn)

    @property
    @pulumi.getter(name="instanceArn")
    def instance_arn(self) -> Optional[str]:
        """
        The identifier of the Amazon Connect instance that has been replicated.
        """
        return pulumi.get(self, "instance_arn")

    @property
    @pulumi.getter(name="isDefault")
    def is_default(self) -> Optional[bool]:
        """
        If this is the default traffic distribution group.
        """
        return pulumi.get(self, "is_default")

    @property
    @pulumi.getter
    def status(self) -> Optional['TrafficDistributionGroupStatus']:
        """
        The status of the traffic distribution group.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['outputs.TrafficDistributionGroupTag']]:
        """
        One or more tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="trafficDistributionGroupArn")
    def traffic_distribution_group_arn(self) -> Optional[str]:
        """
        The identifier of the traffic distribution group.
        """
        return pulumi.get(self, "traffic_distribution_group_arn")


class AwaitableGetTrafficDistributionGroupResult(GetTrafficDistributionGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTrafficDistributionGroupResult(
            instance_arn=self.instance_arn,
            is_default=self.is_default,
            status=self.status,
            tags=self.tags,
            traffic_distribution_group_arn=self.traffic_distribution_group_arn)


def get_traffic_distribution_group(traffic_distribution_group_arn: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTrafficDistributionGroupResult:
    """
    Resource Type definition for AWS::Connect::TrafficDistributionGroup


    :param str traffic_distribution_group_arn: The identifier of the traffic distribution group.
    """
    __args__ = dict()
    __args__['trafficDistributionGroupArn'] = traffic_distribution_group_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:connect:getTrafficDistributionGroup', __args__, opts=opts, typ=GetTrafficDistributionGroupResult).value

    return AwaitableGetTrafficDistributionGroupResult(
        instance_arn=pulumi.get(__ret__, 'instance_arn'),
        is_default=pulumi.get(__ret__, 'is_default'),
        status=pulumi.get(__ret__, 'status'),
        tags=pulumi.get(__ret__, 'tags'),
        traffic_distribution_group_arn=pulumi.get(__ret__, 'traffic_distribution_group_arn'))


@_utilities.lift_output_func(get_traffic_distribution_group)
def get_traffic_distribution_group_output(traffic_distribution_group_arn: Optional[pulumi.Input[str]] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetTrafficDistributionGroupResult]:
    """
    Resource Type definition for AWS::Connect::TrafficDistributionGroup


    :param str traffic_distribution_group_arn: The identifier of the traffic distribution group.
    """
    ...
