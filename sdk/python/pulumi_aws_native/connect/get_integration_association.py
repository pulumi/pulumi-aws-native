# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'GetIntegrationAssociationResult',
    'AwaitableGetIntegrationAssociationResult',
    'get_integration_association',
    'get_integration_association_output',
]

@pulumi.output_type
class GetIntegrationAssociationResult:
    def __init__(__self__, integration_association_id=None):
        if integration_association_id and not isinstance(integration_association_id, str):
            raise TypeError("Expected argument 'integration_association_id' to be a str")
        pulumi.set(__self__, "integration_association_id", integration_association_id)

    @property
    @pulumi.getter(name="integrationAssociationId")
    def integration_association_id(self) -> Optional[str]:
        return pulumi.get(self, "integration_association_id")


class AwaitableGetIntegrationAssociationResult(GetIntegrationAssociationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIntegrationAssociationResult(
            integration_association_id=self.integration_association_id)


def get_integration_association(instance_id: Optional[str] = None,
                                integration_arn: Optional[str] = None,
                                integration_type: Optional['IntegrationAssociationIntegrationType'] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIntegrationAssociationResult:
    """
    Resource Type definition for AWS::Connect::IntegrationAssociation
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['integrationArn'] = integration_arn
    __args__['integrationType'] = integration_type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:connect:getIntegrationAssociation', __args__, opts=opts, typ=GetIntegrationAssociationResult).value

    return AwaitableGetIntegrationAssociationResult(
        integration_association_id=pulumi.get(__ret__, 'integration_association_id'))


@_utilities.lift_output_func(get_integration_association)
def get_integration_association_output(instance_id: Optional[pulumi.Input[str]] = None,
                                       integration_arn: Optional[pulumi.Input[str]] = None,
                                       integration_type: Optional[pulumi.Input['IntegrationAssociationIntegrationType']] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetIntegrationAssociationResult]:
    """
    Resource Type definition for AWS::Connect::IntegrationAssociation
    """
    ...
