# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetUserHierarchyStructureResult',
    'AwaitableGetUserHierarchyStructureResult',
    'get_user_hierarchy_structure',
    'get_user_hierarchy_structure_output',
]

@pulumi.output_type
class GetUserHierarchyStructureResult:
    def __init__(__self__, user_hierarchy_structure=None, user_hierarchy_structure_arn=None):
        if user_hierarchy_structure and not isinstance(user_hierarchy_structure, dict):
            raise TypeError("Expected argument 'user_hierarchy_structure' to be a dict")
        pulumi.set(__self__, "user_hierarchy_structure", user_hierarchy_structure)
        if user_hierarchy_structure_arn and not isinstance(user_hierarchy_structure_arn, str):
            raise TypeError("Expected argument 'user_hierarchy_structure_arn' to be a str")
        pulumi.set(__self__, "user_hierarchy_structure_arn", user_hierarchy_structure_arn)

    @property
    @pulumi.getter(name="userHierarchyStructure")
    def user_hierarchy_structure(self) -> Optional['outputs.UserHierarchyStructureProperties']:
        """
        Information about the hierarchy structure.
        """
        return pulumi.get(self, "user_hierarchy_structure")

    @property
    @pulumi.getter(name="userHierarchyStructureArn")
    def user_hierarchy_structure_arn(self) -> Optional[str]:
        """
        The identifier of the User Hierarchy Structure.
        """
        return pulumi.get(self, "user_hierarchy_structure_arn")


class AwaitableGetUserHierarchyStructureResult(GetUserHierarchyStructureResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUserHierarchyStructureResult(
            user_hierarchy_structure=self.user_hierarchy_structure,
            user_hierarchy_structure_arn=self.user_hierarchy_structure_arn)


def get_user_hierarchy_structure(user_hierarchy_structure_arn: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUserHierarchyStructureResult:
    """
    Resource Type definition for AWS::Connect::UserHierarchyStructure


    :param str user_hierarchy_structure_arn: The identifier of the User Hierarchy Structure.
    """
    __args__ = dict()
    __args__['userHierarchyStructureArn'] = user_hierarchy_structure_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:connect:getUserHierarchyStructure', __args__, opts=opts, typ=GetUserHierarchyStructureResult).value

    return AwaitableGetUserHierarchyStructureResult(
        user_hierarchy_structure=pulumi.get(__ret__, 'user_hierarchy_structure'),
        user_hierarchy_structure_arn=pulumi.get(__ret__, 'user_hierarchy_structure_arn'))
def get_user_hierarchy_structure_output(user_hierarchy_structure_arn: Optional[pulumi.Input[str]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetUserHierarchyStructureResult]:
    """
    Resource Type definition for AWS::Connect::UserHierarchyStructure


    :param str user_hierarchy_structure_arn: The identifier of the User Hierarchy Structure.
    """
    __args__ = dict()
    __args__['userHierarchyStructureArn'] = user_hierarchy_structure_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:connect:getUserHierarchyStructure', __args__, opts=opts, typ=GetUserHierarchyStructureResult)
    return __ret__.apply(lambda __response__: GetUserHierarchyStructureResult(
        user_hierarchy_structure=pulumi.get(__response__, 'user_hierarchy_structure'),
        user_hierarchy_structure_arn=pulumi.get(__response__, 'user_hierarchy_structure_arn')))
