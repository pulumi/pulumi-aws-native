# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'GetIntegrationResult',
    'AwaitableGetIntegrationResult',
    'get_integration',
    'get_integration_output',
]

@pulumi.output_type
class GetIntegrationResult:
    def __init__(__self__, integration_status=None):
        if integration_status and not isinstance(integration_status, str):
            raise TypeError("Expected argument 'integration_status' to be a str")
        pulumi.set(__self__, "integration_status", integration_status)

    @property
    @pulumi.getter(name="integrationStatus")
    def integration_status(self) -> Optional['IntegrationStatus']:
        """
        Status of creation for the Integration and its resources
        """
        return pulumi.get(self, "integration_status")


class AwaitableGetIntegrationResult(GetIntegrationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIntegrationResult(
            integration_status=self.integration_status)


def get_integration(integration_name: Optional[str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIntegrationResult:
    """
    Resource Schema for Logs Integration Resource


    :param str integration_name: User provided identifier for integration, unique to the user account.
    """
    __args__ = dict()
    __args__['integrationName'] = integration_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:logs:getIntegration', __args__, opts=opts, typ=GetIntegrationResult).value

    return AwaitableGetIntegrationResult(
        integration_status=pulumi.get(__ret__, 'integration_status'))
def get_integration_output(integration_name: Optional[pulumi.Input[str]] = None,
                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIntegrationResult]:
    """
    Resource Schema for Logs Integration Resource


    :param str integration_name: User provided identifier for integration, unique to the user account.
    """
    __args__ = dict()
    __args__['integrationName'] = integration_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:logs:getIntegration', __args__, opts=opts, typ=GetIntegrationResult)
    return __ret__.apply(lambda __response__: GetIntegrationResult(
        integration_status=pulumi.get(__response__, 'integration_status')))
