# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetSubscriptionFilterResult',
    'AwaitableGetSubscriptionFilterResult',
    'get_subscription_filter',
    'get_subscription_filter_output',
]

@pulumi.output_type
class GetSubscriptionFilterResult:
    def __init__(__self__, filter_name=None):
        if filter_name and not isinstance(filter_name, str):
            raise TypeError("Expected argument 'filter_name' to be a str")
        pulumi.set(__self__, "filter_name", filter_name)

    @property
    @pulumi.getter(name="filterName")
    def filter_name(self) -> Optional[str]:
        """
        The name of the filter generated by resource.
        """
        return pulumi.get(self, "filter_name")


class AwaitableGetSubscriptionFilterResult(GetSubscriptionFilterResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSubscriptionFilterResult(
            filter_name=self.filter_name)


def get_subscription_filter(filter_name: Optional[str] = None,
                            log_group_name: Optional[str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSubscriptionFilterResult:
    """
    An example resource schema demonstrating some basic constructs and validation rules.


    :param str filter_name: The name of the filter generated by resource.
    :param str log_group_name: Existing log group that you want to associate with this filter.
    """
    __args__ = dict()
    __args__['filterName'] = filter_name
    __args__['logGroupName'] = log_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:logs:getSubscriptionFilter', __args__, opts=opts, typ=GetSubscriptionFilterResult).value

    return AwaitableGetSubscriptionFilterResult(
        filter_name=__ret__.filter_name)


@_utilities.lift_output_func(get_subscription_filter)
def get_subscription_filter_output(filter_name: Optional[pulumi.Input[str]] = None,
                                   log_group_name: Optional[pulumi.Input[str]] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSubscriptionFilterResult]:
    """
    An example resource schema demonstrating some basic constructs and validation rules.


    :param str filter_name: The name of the filter generated by resource.
    :param str log_group_name: Existing log group that you want to associate with this filter.
    """
    ...
