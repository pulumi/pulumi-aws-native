# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetAccountIdResult',
    'AwaitableGetAccountIdResult',
    'get_account_id',
]

@pulumi.output_type
class GetAccountIdResult:
    def __init__(__self__, account_id=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        pulumi.set(__self__, "account_id", account_id)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> str:
        return pulumi.get(self, "account_id")


class AwaitableGetAccountIdResult(GetAccountIdResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccountIdResult(
            account_id=self.account_id)


def get_account_id(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAccountIdResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:index:getAccountId', __args__, opts=opts, typ=GetAccountIdResult).value

    return AwaitableGetAccountIdResult(
        account_id=__ret__.account_id)
