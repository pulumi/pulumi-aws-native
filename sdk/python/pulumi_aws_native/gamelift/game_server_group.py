# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables
from . import outputs
from .. import _inputs as _root_inputs
from .. import outputs as _root_outputs
from ._inputs import *

__all__ = ['GameServerGroup']


class GameServerGroup(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_scaling_policy: Optional[pulumi.Input[pulumi.InputType['GameServerGroupAutoScalingPolicyArgs']]] = None,
                 balancing_strategy: Optional[pulumi.Input[str]] = None,
                 delete_option: Optional[pulumi.Input[str]] = None,
                 game_server_group_name: Optional[pulumi.Input[str]] = None,
                 game_server_protection_policy: Optional[pulumi.Input[str]] = None,
                 instance_definitions: Optional[pulumi.Input[pulumi.InputType['GameServerGroupInstanceDefinitionsArgs']]] = None,
                 launch_template: Optional[pulumi.Input[pulumi.InputType['GameServerGroupLaunchTemplateArgs']]] = None,
                 max_size: Optional[pulumi.Input[float]] = None,
                 min_size: Optional[pulumi.Input[float]] = None,
                 role_arn: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[pulumi.InputType['GameServerGroupTagsArgs']]] = None,
                 vpc_subnets: Optional[pulumi.Input[pulumi.InputType['GameServerGroupVpcSubnetsArgs']]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['GameServerGroupAutoScalingPolicyArgs']] auto_scaling_policy: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-autoscalingpolicy
        :param pulumi.Input[str] balancing_strategy: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-balancingstrategy
        :param pulumi.Input[str] delete_option: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-deleteoption
        :param pulumi.Input[str] game_server_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-gameservergroupname
        :param pulumi.Input[str] game_server_protection_policy: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-gameserverprotectionpolicy
        :param pulumi.Input[pulumi.InputType['GameServerGroupInstanceDefinitionsArgs']] instance_definitions: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-instancedefinitions
        :param pulumi.Input[pulumi.InputType['GameServerGroupLaunchTemplateArgs']] launch_template: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-launchtemplate
        :param pulumi.Input[float] max_size: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-maxsize
        :param pulumi.Input[float] min_size: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-minsize
        :param pulumi.Input[str] role_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-rolearn
        :param pulumi.Input[pulumi.InputType['GameServerGroupTagsArgs']] tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-tags
        :param pulumi.Input[pulumi.InputType['GameServerGroupVpcSubnetsArgs']] vpc_subnets: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-vpcsubnets
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['auto_scaling_policy'] = auto_scaling_policy
            __props__['balancing_strategy'] = balancing_strategy
            __props__['delete_option'] = delete_option
            if game_server_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'game_server_group_name'")
            __props__['game_server_group_name'] = game_server_group_name
            __props__['game_server_protection_policy'] = game_server_protection_policy
            if instance_definitions is None and not opts.urn:
                raise TypeError("Missing required property 'instance_definitions'")
            __props__['instance_definitions'] = instance_definitions
            if launch_template is None and not opts.urn:
                raise TypeError("Missing required property 'launch_template'")
            __props__['launch_template'] = launch_template
            __props__['max_size'] = max_size
            __props__['min_size'] = min_size
            if role_arn is None and not opts.urn:
                raise TypeError("Missing required property 'role_arn'")
            __props__['role_arn'] = role_arn
            __props__['tags'] = tags
            __props__['vpc_subnets'] = vpc_subnets
            __props__['auto_scaling_group_arn'] = None
            __props__['game_server_group_arn'] = None
        super(GameServerGroup, __self__).__init__(
            'aws-native:GameLift:GameServerGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'GameServerGroup':
        """
        Get an existing GameServerGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return GameServerGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="AutoScalingGroupArn")
    def auto_scaling_group_arn(self) -> pulumi.Output[str]:
        return pulumi.get(self, "auto_scaling_group_arn")

    @property
    @pulumi.getter(name="AutoScalingPolicy")
    def auto_scaling_policy(self) -> pulumi.Output[Optional['outputs.GameServerGroupAutoScalingPolicy']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-autoscalingpolicy
        """
        return pulumi.get(self, "auto_scaling_policy")

    @property
    @pulumi.getter(name="BalancingStrategy")
    def balancing_strategy(self) -> pulumi.Output[Optional[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-balancingstrategy
        """
        return pulumi.get(self, "balancing_strategy")

    @property
    @pulumi.getter(name="DeleteOption")
    def delete_option(self) -> pulumi.Output[Optional[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-deleteoption
        """
        return pulumi.get(self, "delete_option")

    @property
    @pulumi.getter(name="GameServerGroupArn")
    def game_server_group_arn(self) -> pulumi.Output[str]:
        return pulumi.get(self, "game_server_group_arn")

    @property
    @pulumi.getter(name="GameServerGroupName")
    def game_server_group_name(self) -> pulumi.Output[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-gameservergroupname
        """
        return pulumi.get(self, "game_server_group_name")

    @property
    @pulumi.getter(name="GameServerProtectionPolicy")
    def game_server_protection_policy(self) -> pulumi.Output[Optional[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-gameserverprotectionpolicy
        """
        return pulumi.get(self, "game_server_protection_policy")

    @property
    @pulumi.getter(name="InstanceDefinitions")
    def instance_definitions(self) -> pulumi.Output['outputs.GameServerGroupInstanceDefinitions']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-instancedefinitions
        """
        return pulumi.get(self, "instance_definitions")

    @property
    @pulumi.getter(name="LaunchTemplate")
    def launch_template(self) -> pulumi.Output['outputs.GameServerGroupLaunchTemplate']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-launchtemplate
        """
        return pulumi.get(self, "launch_template")

    @property
    @pulumi.getter(name="MaxSize")
    def max_size(self) -> pulumi.Output[Optional[float]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-maxsize
        """
        return pulumi.get(self, "max_size")

    @property
    @pulumi.getter(name="MinSize")
    def min_size(self) -> pulumi.Output[Optional[float]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-minsize
        """
        return pulumi.get(self, "min_size")

    @property
    @pulumi.getter(name="RoleArn")
    def role_arn(self) -> pulumi.Output[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-rolearn
        """
        return pulumi.get(self, "role_arn")

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> pulumi.Output[Optional['outputs.GameServerGroupTags']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-tags
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="VpcSubnets")
    def vpc_subnets(self) -> pulumi.Output[Optional['outputs.GameServerGroupVpcSubnets']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-vpcsubnets
        """
        return pulumi.get(self, "vpc_subnets")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

