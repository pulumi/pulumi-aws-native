# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'LoggingConfigurationCloudWatchLogsDestinationConfigurationArgs',
    'LoggingConfigurationDestinationConfigurationArgs',
    'LoggingConfigurationFirehoseDestinationConfigurationArgs',
    'LoggingConfigurationS3DestinationConfigurationArgs',
    'LoggingConfigurationTagArgs',
    'RoomMessageReviewHandlerArgs',
    'RoomTagArgs',
]

@pulumi.input_type
class LoggingConfigurationCloudWatchLogsDestinationConfigurationArgs:
    def __init__(__self__, *,
                 log_group_name: pulumi.Input[str]):
        """
        CloudWatch destination configuration for IVS Chat logging.
        :param pulumi.Input[str] log_group_name: Name of the Amazon CloudWatch Logs log group where chat activity will be logged.
        """
        pulumi.set(__self__, "log_group_name", log_group_name)

    @property
    @pulumi.getter(name="logGroupName")
    def log_group_name(self) -> pulumi.Input[str]:
        """
        Name of the Amazon CloudWatch Logs log group where chat activity will be logged.
        """
        return pulumi.get(self, "log_group_name")

    @log_group_name.setter
    def log_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "log_group_name", value)


@pulumi.input_type
class LoggingConfigurationDestinationConfigurationArgs:
    def __init__(__self__, *,
                 cloud_watch_logs: Optional[pulumi.Input['LoggingConfigurationCloudWatchLogsDestinationConfigurationArgs']] = None,
                 firehose: Optional[pulumi.Input['LoggingConfigurationFirehoseDestinationConfigurationArgs']] = None,
                 s3: Optional[pulumi.Input['LoggingConfigurationS3DestinationConfigurationArgs']] = None):
        """
        Destination configuration for IVS Chat logging.
        """
        if cloud_watch_logs is not None:
            pulumi.set(__self__, "cloud_watch_logs", cloud_watch_logs)
        if firehose is not None:
            pulumi.set(__self__, "firehose", firehose)
        if s3 is not None:
            pulumi.set(__self__, "s3", s3)

    @property
    @pulumi.getter(name="cloudWatchLogs")
    def cloud_watch_logs(self) -> Optional[pulumi.Input['LoggingConfigurationCloudWatchLogsDestinationConfigurationArgs']]:
        return pulumi.get(self, "cloud_watch_logs")

    @cloud_watch_logs.setter
    def cloud_watch_logs(self, value: Optional[pulumi.Input['LoggingConfigurationCloudWatchLogsDestinationConfigurationArgs']]):
        pulumi.set(self, "cloud_watch_logs", value)

    @property
    @pulumi.getter
    def firehose(self) -> Optional[pulumi.Input['LoggingConfigurationFirehoseDestinationConfigurationArgs']]:
        return pulumi.get(self, "firehose")

    @firehose.setter
    def firehose(self, value: Optional[pulumi.Input['LoggingConfigurationFirehoseDestinationConfigurationArgs']]):
        pulumi.set(self, "firehose", value)

    @property
    @pulumi.getter
    def s3(self) -> Optional[pulumi.Input['LoggingConfigurationS3DestinationConfigurationArgs']]:
        return pulumi.get(self, "s3")

    @s3.setter
    def s3(self, value: Optional[pulumi.Input['LoggingConfigurationS3DestinationConfigurationArgs']]):
        pulumi.set(self, "s3", value)


@pulumi.input_type
class LoggingConfigurationFirehoseDestinationConfigurationArgs:
    def __init__(__self__, *,
                 delivery_stream_name: pulumi.Input[str]):
        """
        Kinesis Firehose destination configuration for IVS Chat logging.
        :param pulumi.Input[str] delivery_stream_name: Name of the Amazon Kinesis Firehose delivery stream where chat activity will be logged.
        """
        pulumi.set(__self__, "delivery_stream_name", delivery_stream_name)

    @property
    @pulumi.getter(name="deliveryStreamName")
    def delivery_stream_name(self) -> pulumi.Input[str]:
        """
        Name of the Amazon Kinesis Firehose delivery stream where chat activity will be logged.
        """
        return pulumi.get(self, "delivery_stream_name")

    @delivery_stream_name.setter
    def delivery_stream_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "delivery_stream_name", value)


@pulumi.input_type
class LoggingConfigurationS3DestinationConfigurationArgs:
    def __init__(__self__, *,
                 bucket_name: pulumi.Input[str]):
        """
        S3 destination configuration for IVS Chat logging.
        :param pulumi.Input[str] bucket_name: Name of the Amazon S3 bucket where chat activity will be logged.
        """
        pulumi.set(__self__, "bucket_name", bucket_name)

    @property
    @pulumi.getter(name="bucketName")
    def bucket_name(self) -> pulumi.Input[str]:
        """
        Name of the Amazon S3 bucket where chat activity will be logged.
        """
        return pulumi.get(self, "bucket_name")

    @bucket_name.setter
    def bucket_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "bucket_name", value)


@pulumi.input_type
class LoggingConfigurationTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        A key-value pair to associate with a resource.
        :param pulumi.Input[str] key: The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        :param pulumi.Input[str] value: The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class RoomMessageReviewHandlerArgs:
    def __init__(__self__, *,
                 fallback_result: Optional[pulumi.Input['RoomMessageReviewHandlerFallbackResult']] = None,
                 uri: Optional[pulumi.Input[str]] = None):
        """
        Configuration information for optional review of messages.
        :param pulumi.Input['RoomMessageReviewHandlerFallbackResult'] fallback_result: Specifies the fallback behavior if the handler does not return a valid response, encounters an error, or times out.
        :param pulumi.Input[str] uri: Identifier of the message review handler.
        """
        if fallback_result is not None:
            pulumi.set(__self__, "fallback_result", fallback_result)
        if uri is not None:
            pulumi.set(__self__, "uri", uri)

    @property
    @pulumi.getter(name="fallbackResult")
    def fallback_result(self) -> Optional[pulumi.Input['RoomMessageReviewHandlerFallbackResult']]:
        """
        Specifies the fallback behavior if the handler does not return a valid response, encounters an error, or times out.
        """
        return pulumi.get(self, "fallback_result")

    @fallback_result.setter
    def fallback_result(self, value: Optional[pulumi.Input['RoomMessageReviewHandlerFallbackResult']]):
        pulumi.set(self, "fallback_result", value)

    @property
    @pulumi.getter
    def uri(self) -> Optional[pulumi.Input[str]]:
        """
        Identifier of the message review handler.
        """
        return pulumi.get(self, "uri")

    @uri.setter
    def uri(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uri", value)


@pulumi.input_type
class RoomTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        A key-value pair to associate with a resource.
        :param pulumi.Input[str] key: The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        :param pulumi.Input[str] value: The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


