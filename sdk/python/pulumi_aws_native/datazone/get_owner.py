# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'GetOwnerResult',
    'AwaitableGetOwnerResult',
    'get_owner',
    'get_owner_output',
]

@pulumi.output_type
class GetOwnerResult:
    def __init__(__self__, owner_identifier=None, owner_type=None):
        if owner_identifier and not isinstance(owner_identifier, str):
            raise TypeError("Expected argument 'owner_identifier' to be a str")
        pulumi.set(__self__, "owner_identifier", owner_identifier)
        if owner_type and not isinstance(owner_type, str):
            raise TypeError("Expected argument 'owner_type' to be a str")
        pulumi.set(__self__, "owner_type", owner_type)

    @_builtins.property
    @pulumi.getter(name="ownerIdentifier")
    def owner_identifier(self) -> Optional[_builtins.str]:
        """
        The ID of the entity to which you want to add an owner.
        """
        return pulumi.get(self, "owner_identifier")

    @_builtins.property
    @pulumi.getter(name="ownerType")
    def owner_type(self) -> Optional['OwnerType']:
        """
        The owner that you want to add to the entity.
        """
        return pulumi.get(self, "owner_type")


class AwaitableGetOwnerResult(GetOwnerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOwnerResult(
            owner_identifier=self.owner_identifier,
            owner_type=self.owner_type)


def get_owner(domain_identifier: Optional[_builtins.str] = None,
              entity_identifier: Optional[_builtins.str] = None,
              entity_type: Optional['OwnerEntityType'] = None,
              owner_identifier: Optional[_builtins.str] = None,
              owner_type: Optional['OwnerType'] = None,
              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOwnerResult:
    """
    A owner can set up authorization permissions on their resources.


    :param _builtins.str domain_identifier: The ID of the domain in which you want to add the entity owner.
    :param _builtins.str entity_identifier: The ID of the entity to which you want to add an owner.
    :param 'OwnerEntityType' entity_type: The type of an entity.
    :param _builtins.str owner_identifier: The ID of the entity to which you want to add an owner.
    :param 'OwnerType' owner_type: The owner that you want to add to the entity.
    """
    __args__ = dict()
    __args__['domainIdentifier'] = domain_identifier
    __args__['entityIdentifier'] = entity_identifier
    __args__['entityType'] = entity_type
    __args__['ownerIdentifier'] = owner_identifier
    __args__['ownerType'] = owner_type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:datazone:getOwner', __args__, opts=opts, typ=GetOwnerResult).value

    return AwaitableGetOwnerResult(
        owner_identifier=pulumi.get(__ret__, 'owner_identifier'),
        owner_type=pulumi.get(__ret__, 'owner_type'))
def get_owner_output(domain_identifier: Optional[pulumi.Input[_builtins.str]] = None,
                     entity_identifier: Optional[pulumi.Input[_builtins.str]] = None,
                     entity_type: Optional[pulumi.Input['OwnerEntityType']] = None,
                     owner_identifier: Optional[pulumi.Input[_builtins.str]] = None,
                     owner_type: Optional[pulumi.Input['OwnerType']] = None,
                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOwnerResult]:
    """
    A owner can set up authorization permissions on their resources.


    :param _builtins.str domain_identifier: The ID of the domain in which you want to add the entity owner.
    :param _builtins.str entity_identifier: The ID of the entity to which you want to add an owner.
    :param 'OwnerEntityType' entity_type: The type of an entity.
    :param _builtins.str owner_identifier: The ID of the entity to which you want to add an owner.
    :param 'OwnerType' owner_type: The owner that you want to add to the entity.
    """
    __args__ = dict()
    __args__['domainIdentifier'] = domain_identifier
    __args__['entityIdentifier'] = entity_identifier
    __args__['entityType'] = entity_type
    __args__['ownerIdentifier'] = owner_identifier
    __args__['ownerType'] = owner_type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:datazone:getOwner', __args__, opts=opts, typ=GetOwnerResult)
    return __ret__.apply(lambda __response__: GetOwnerResult(
        owner_identifier=pulumi.get(__response__, 'owner_identifier'),
        owner_type=pulumi.get(__response__, 'owner_type')))
