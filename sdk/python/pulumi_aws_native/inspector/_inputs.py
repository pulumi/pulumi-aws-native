# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'AssessmentTemplateTagArgs',
    'AssessmentTemplateTagArgsDict',
    'ResourceGroupTagArgs',
    'ResourceGroupTagArgsDict',
]

MYPY = False

if not MYPY:
    class AssessmentTemplateTagArgsDict(TypedDict):
        key: pulumi.Input[str]
        """
        A tag key.
        """
        value: pulumi.Input[str]
        """
        A value assigned to a tag key.
        """
elif False:
    AssessmentTemplateTagArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class AssessmentTemplateTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: A tag key.
        :param pulumi.Input[str] value: A value assigned to a tag key.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        A tag key.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        A value assigned to a tag key.
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


if not MYPY:
    class ResourceGroupTagArgsDict(TypedDict):
        key: pulumi.Input[str]
        """
        A tag key.
        """
        value: pulumi.Input[str]
        """
        A value assigned to a tag key.
        """
elif False:
    ResourceGroupTagArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ResourceGroupTagArgs:
    def __init__(__self__, *,
                 key: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] key: A tag key.
        :param pulumi.Input[str] value: A value assigned to a tag key.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        A tag key.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        A value assigned to a tag key.
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


