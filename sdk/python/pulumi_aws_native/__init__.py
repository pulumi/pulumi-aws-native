# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from ._enums import *
from .cidr import *
from .extension_resource import *
from .get_account_id import *
from .get_azs import *
from .get_partition import *
from .get_region import *
from .get_ssm_parameter_list import *
from .get_ssm_parameter_string import *
from .get_url_suffix import *
from .import_value import *
from .provider import *
from ._inputs import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_aws_native.accessanalyzer as __accessanalyzer
    accessanalyzer = __accessanalyzer
    import pulumi_aws_native.acmpca as __acmpca
    acmpca = __acmpca
    import pulumi_aws_native.amazonmq as __amazonmq
    amazonmq = __amazonmq
    import pulumi_aws_native.amplify as __amplify
    amplify = __amplify
    import pulumi_aws_native.amplifyuibuilder as __amplifyuibuilder
    amplifyuibuilder = __amplifyuibuilder
    import pulumi_aws_native.apigateway as __apigateway
    apigateway = __apigateway
    import pulumi_aws_native.apigatewayv2 as __apigatewayv2
    apigatewayv2 = __apigatewayv2
    import pulumi_aws_native.appconfig as __appconfig
    appconfig = __appconfig
    import pulumi_aws_native.appflow as __appflow
    appflow = __appflow
    import pulumi_aws_native.appintegrations as __appintegrations
    appintegrations = __appintegrations
    import pulumi_aws_native.applicationautoscaling as __applicationautoscaling
    applicationautoscaling = __applicationautoscaling
    import pulumi_aws_native.applicationinsights as __applicationinsights
    applicationinsights = __applicationinsights
    import pulumi_aws_native.appmesh as __appmesh
    appmesh = __appmesh
    import pulumi_aws_native.apprunner as __apprunner
    apprunner = __apprunner
    import pulumi_aws_native.appstream as __appstream
    appstream = __appstream
    import pulumi_aws_native.appsync as __appsync
    appsync = __appsync
    import pulumi_aws_native.aps as __aps
    aps = __aps
    import pulumi_aws_native.ask as __ask
    ask = __ask
    import pulumi_aws_native.athena as __athena
    athena = __athena
    import pulumi_aws_native.auditmanager as __auditmanager
    auditmanager = __auditmanager
    import pulumi_aws_native.autoscaling as __autoscaling
    autoscaling = __autoscaling
    import pulumi_aws_native.autoscalingplans as __autoscalingplans
    autoscalingplans = __autoscalingplans
    import pulumi_aws_native.backup as __backup
    backup = __backup
    import pulumi_aws_native.batch as __batch
    batch = __batch
    import pulumi_aws_native.budgets as __budgets
    budgets = __budgets
    import pulumi_aws_native.cassandra as __cassandra
    cassandra = __cassandra
    import pulumi_aws_native.ce as __ce
    ce = __ce
    import pulumi_aws_native.certificatemanager as __certificatemanager
    certificatemanager = __certificatemanager
    import pulumi_aws_native.chatbot as __chatbot
    chatbot = __chatbot
    import pulumi_aws_native.cloud9 as __cloud9
    cloud9 = __cloud9
    import pulumi_aws_native.cloudformation as __cloudformation
    cloudformation = __cloudformation
    import pulumi_aws_native.cloudfront as __cloudfront
    cloudfront = __cloudfront
    import pulumi_aws_native.cloudtrail as __cloudtrail
    cloudtrail = __cloudtrail
    import pulumi_aws_native.cloudwatch as __cloudwatch
    cloudwatch = __cloudwatch
    import pulumi_aws_native.codeartifact as __codeartifact
    codeartifact = __codeartifact
    import pulumi_aws_native.codebuild as __codebuild
    codebuild = __codebuild
    import pulumi_aws_native.codecommit as __codecommit
    codecommit = __codecommit
    import pulumi_aws_native.codedeploy as __codedeploy
    codedeploy = __codedeploy
    import pulumi_aws_native.codeguruprofiler as __codeguruprofiler
    codeguruprofiler = __codeguruprofiler
    import pulumi_aws_native.codegurureviewer as __codegurureviewer
    codegurureviewer = __codegurureviewer
    import pulumi_aws_native.codepipeline as __codepipeline
    codepipeline = __codepipeline
    import pulumi_aws_native.codestar as __codestar
    codestar = __codestar
    import pulumi_aws_native.codestarconnections as __codestarconnections
    codestarconnections = __codestarconnections
    import pulumi_aws_native.codestarnotifications as __codestarnotifications
    codestarnotifications = __codestarnotifications
    import pulumi_aws_native.cognito as __cognito
    cognito = __cognito
    import pulumi_aws_native.config as __config
    config = __config
    import pulumi_aws_native.configuration as __configuration
    configuration = __configuration
    import pulumi_aws_native.connect as __connect
    connect = __connect
    import pulumi_aws_native.cur as __cur
    cur = __cur
    import pulumi_aws_native.customerprofiles as __customerprofiles
    customerprofiles = __customerprofiles
    import pulumi_aws_native.databrew as __databrew
    databrew = __databrew
    import pulumi_aws_native.datapipeline as __datapipeline
    datapipeline = __datapipeline
    import pulumi_aws_native.datasync as __datasync
    datasync = __datasync
    import pulumi_aws_native.dax as __dax
    dax = __dax
    import pulumi_aws_native.detective as __detective
    detective = __detective
    import pulumi_aws_native.devicefarm as __devicefarm
    devicefarm = __devicefarm
    import pulumi_aws_native.devopsguru as __devopsguru
    devopsguru = __devopsguru
    import pulumi_aws_native.directoryservice as __directoryservice
    directoryservice = __directoryservice
    import pulumi_aws_native.dlm as __dlm
    dlm = __dlm
    import pulumi_aws_native.dms as __dms
    dms = __dms
    import pulumi_aws_native.docdb as __docdb
    docdb = __docdb
    import pulumi_aws_native.dynamodb as __dynamodb
    dynamodb = __dynamodb
    import pulumi_aws_native.ec2 as __ec2
    ec2 = __ec2
    import pulumi_aws_native.ecr as __ecr
    ecr = __ecr
    import pulumi_aws_native.ecs as __ecs
    ecs = __ecs
    import pulumi_aws_native.efs as __efs
    efs = __efs
    import pulumi_aws_native.eks as __eks
    eks = __eks
    import pulumi_aws_native.elasticache as __elasticache
    elasticache = __elasticache
    import pulumi_aws_native.elasticbeanstalk as __elasticbeanstalk
    elasticbeanstalk = __elasticbeanstalk
    import pulumi_aws_native.elasticloadbalancing as __elasticloadbalancing
    elasticloadbalancing = __elasticloadbalancing
    import pulumi_aws_native.elasticloadbalancingv2 as __elasticloadbalancingv2
    elasticloadbalancingv2 = __elasticloadbalancingv2
    import pulumi_aws_native.elasticsearch as __elasticsearch
    elasticsearch = __elasticsearch
    import pulumi_aws_native.emr as __emr
    emr = __emr
    import pulumi_aws_native.emrcontainers as __emrcontainers
    emrcontainers = __emrcontainers
    import pulumi_aws_native.events as __events
    events = __events
    import pulumi_aws_native.eventschemas as __eventschemas
    eventschemas = __eventschemas
    import pulumi_aws_native.evidently as __evidently
    evidently = __evidently
    import pulumi_aws_native.finspace as __finspace
    finspace = __finspace
    import pulumi_aws_native.fis as __fis
    fis = __fis
    import pulumi_aws_native.fms as __fms
    fms = __fms
    import pulumi_aws_native.forecast as __forecast
    forecast = __forecast
    import pulumi_aws_native.frauddetector as __frauddetector
    frauddetector = __frauddetector
    import pulumi_aws_native.fsx as __fsx
    fsx = __fsx
    import pulumi_aws_native.gamelift as __gamelift
    gamelift = __gamelift
    import pulumi_aws_native.globalaccelerator as __globalaccelerator
    globalaccelerator = __globalaccelerator
    import pulumi_aws_native.glue as __glue
    glue = __glue
    import pulumi_aws_native.greengrass as __greengrass
    greengrass = __greengrass
    import pulumi_aws_native.greengrassv2 as __greengrassv2
    greengrassv2 = __greengrassv2
    import pulumi_aws_native.groundstation as __groundstation
    groundstation = __groundstation
    import pulumi_aws_native.guardduty as __guardduty
    guardduty = __guardduty
    import pulumi_aws_native.healthlake as __healthlake
    healthlake = __healthlake
    import pulumi_aws_native.iam as __iam
    iam = __iam
    import pulumi_aws_native.imagebuilder as __imagebuilder
    imagebuilder = __imagebuilder
    import pulumi_aws_native.inspector as __inspector
    inspector = __inspector
    import pulumi_aws_native.inspectorv2 as __inspectorv2
    inspectorv2 = __inspectorv2
    import pulumi_aws_native.iot as __iot
    iot = __iot
    import pulumi_aws_native.iot1click as __iot1click
    iot1click = __iot1click
    import pulumi_aws_native.iotanalytics as __iotanalytics
    iotanalytics = __iotanalytics
    import pulumi_aws_native.iotcoredeviceadvisor as __iotcoredeviceadvisor
    iotcoredeviceadvisor = __iotcoredeviceadvisor
    import pulumi_aws_native.iotevents as __iotevents
    iotevents = __iotevents
    import pulumi_aws_native.iotfleethub as __iotfleethub
    iotfleethub = __iotfleethub
    import pulumi_aws_native.iotsitewise as __iotsitewise
    iotsitewise = __iotsitewise
    import pulumi_aws_native.iotthingsgraph as __iotthingsgraph
    iotthingsgraph = __iotthingsgraph
    import pulumi_aws_native.iotwireless as __iotwireless
    iotwireless = __iotwireless
    import pulumi_aws_native.ivs as __ivs
    ivs = __ivs
    import pulumi_aws_native.kafkaconnect as __kafkaconnect
    kafkaconnect = __kafkaconnect
    import pulumi_aws_native.kendra as __kendra
    kendra = __kendra
    import pulumi_aws_native.kinesis as __kinesis
    kinesis = __kinesis
    import pulumi_aws_native.kinesisanalytics as __kinesisanalytics
    kinesisanalytics = __kinesisanalytics
    import pulumi_aws_native.kinesisanalyticsv2 as __kinesisanalyticsv2
    kinesisanalyticsv2 = __kinesisanalyticsv2
    import pulumi_aws_native.kinesisfirehose as __kinesisfirehose
    kinesisfirehose = __kinesisfirehose
    import pulumi_aws_native.kinesisvideo as __kinesisvideo
    kinesisvideo = __kinesisvideo
    import pulumi_aws_native.kms as __kms
    kms = __kms
    import pulumi_aws_native.lakeformation as __lakeformation
    lakeformation = __lakeformation
    import pulumi_aws_native.lambda_ as __lambda_
    lambda_ = __lambda_
    import pulumi_aws_native.lex as __lex
    lex = __lex
    import pulumi_aws_native.licensemanager as __licensemanager
    licensemanager = __licensemanager
    import pulumi_aws_native.lightsail as __lightsail
    lightsail = __lightsail
    import pulumi_aws_native.location as __location
    location = __location
    import pulumi_aws_native.logs as __logs
    logs = __logs
    import pulumi_aws_native.lookoutequipment as __lookoutequipment
    lookoutequipment = __lookoutequipment
    import pulumi_aws_native.lookoutmetrics as __lookoutmetrics
    lookoutmetrics = __lookoutmetrics
    import pulumi_aws_native.lookoutvision as __lookoutvision
    lookoutvision = __lookoutvision
    import pulumi_aws_native.macie as __macie
    macie = __macie
    import pulumi_aws_native.managedblockchain as __managedblockchain
    managedblockchain = __managedblockchain
    import pulumi_aws_native.mediaconnect as __mediaconnect
    mediaconnect = __mediaconnect
    import pulumi_aws_native.mediaconvert as __mediaconvert
    mediaconvert = __mediaconvert
    import pulumi_aws_native.medialive as __medialive
    medialive = __medialive
    import pulumi_aws_native.mediapackage as __mediapackage
    mediapackage = __mediapackage
    import pulumi_aws_native.mediastore as __mediastore
    mediastore = __mediastore
    import pulumi_aws_native.memorydb as __memorydb
    memorydb = __memorydb
    import pulumi_aws_native.msk as __msk
    msk = __msk
    import pulumi_aws_native.mwaa as __mwaa
    mwaa = __mwaa
    import pulumi_aws_native.neptune as __neptune
    neptune = __neptune
    import pulumi_aws_native.networkfirewall as __networkfirewall
    networkfirewall = __networkfirewall
    import pulumi_aws_native.networkmanager as __networkmanager
    networkmanager = __networkmanager
    import pulumi_aws_native.nimblestudio as __nimblestudio
    nimblestudio = __nimblestudio
    import pulumi_aws_native.opensearchservice as __opensearchservice
    opensearchservice = __opensearchservice
    import pulumi_aws_native.opsworks as __opsworks
    opsworks = __opsworks
    import pulumi_aws_native.opsworkscm as __opsworkscm
    opsworkscm = __opsworkscm
    import pulumi_aws_native.panorama as __panorama
    panorama = __panorama
    import pulumi_aws_native.pinpoint as __pinpoint
    pinpoint = __pinpoint
    import pulumi_aws_native.pinpointemail as __pinpointemail
    pinpointemail = __pinpointemail
    import pulumi_aws_native.qldb as __qldb
    qldb = __qldb
    import pulumi_aws_native.quicksight as __quicksight
    quicksight = __quicksight
    import pulumi_aws_native.ram as __ram
    ram = __ram
    import pulumi_aws_native.rds as __rds
    rds = __rds
    import pulumi_aws_native.redshift as __redshift
    redshift = __redshift
    import pulumi_aws_native.refactorspaces as __refactorspaces
    refactorspaces = __refactorspaces
    import pulumi_aws_native.rekognition as __rekognition
    rekognition = __rekognition
    import pulumi_aws_native.resiliencehub as __resiliencehub
    resiliencehub = __resiliencehub
    import pulumi_aws_native.resourcegroups as __resourcegroups
    resourcegroups = __resourcegroups
    import pulumi_aws_native.robomaker as __robomaker
    robomaker = __robomaker
    import pulumi_aws_native.route53 as __route53
    route53 = __route53
    import pulumi_aws_native.route53recoverycontrol as __route53recoverycontrol
    route53recoverycontrol = __route53recoverycontrol
    import pulumi_aws_native.route53recoveryreadiness as __route53recoveryreadiness
    route53recoveryreadiness = __route53recoveryreadiness
    import pulumi_aws_native.route53resolver as __route53resolver
    route53resolver = __route53resolver
    import pulumi_aws_native.rum as __rum
    rum = __rum
    import pulumi_aws_native.s3 as __s3
    s3 = __s3
    import pulumi_aws_native.s3objectlambda as __s3objectlambda
    s3objectlambda = __s3objectlambda
    import pulumi_aws_native.s3outposts as __s3outposts
    s3outposts = __s3outposts
    import pulumi_aws_native.sagemaker as __sagemaker
    sagemaker = __sagemaker
    import pulumi_aws_native.sdb as __sdb
    sdb = __sdb
    import pulumi_aws_native.secretsmanager as __secretsmanager
    secretsmanager = __secretsmanager
    import pulumi_aws_native.securityhub as __securityhub
    securityhub = __securityhub
    import pulumi_aws_native.servicecatalog as __servicecatalog
    servicecatalog = __servicecatalog
    import pulumi_aws_native.servicecatalogappregistry as __servicecatalogappregistry
    servicecatalogappregistry = __servicecatalogappregistry
    import pulumi_aws_native.servicediscovery as __servicediscovery
    servicediscovery = __servicediscovery
    import pulumi_aws_native.ses as __ses
    ses = __ses
    import pulumi_aws_native.signer as __signer
    signer = __signer
    import pulumi_aws_native.sns as __sns
    sns = __sns
    import pulumi_aws_native.sqs as __sqs
    sqs = __sqs
    import pulumi_aws_native.ssm as __ssm
    ssm = __ssm
    import pulumi_aws_native.ssmcontacts as __ssmcontacts
    ssmcontacts = __ssmcontacts
    import pulumi_aws_native.ssmincidents as __ssmincidents
    ssmincidents = __ssmincidents
    import pulumi_aws_native.sso as __sso
    sso = __sso
    import pulumi_aws_native.stepfunctions as __stepfunctions
    stepfunctions = __stepfunctions
    import pulumi_aws_native.synthetics as __synthetics
    synthetics = __synthetics
    import pulumi_aws_native.timestream as __timestream
    timestream = __timestream
    import pulumi_aws_native.transfer as __transfer
    transfer = __transfer
    import pulumi_aws_native.waf as __waf
    waf = __waf
    import pulumi_aws_native.wafregional as __wafregional
    wafregional = __wafregional
    import pulumi_aws_native.wafv2 as __wafv2
    wafv2 = __wafv2
    import pulumi_aws_native.wisdom as __wisdom
    wisdom = __wisdom
    import pulumi_aws_native.workspaces as __workspaces
    workspaces = __workspaces
    import pulumi_aws_native.xray as __xray
    xray = __xray
else:
    accessanalyzer = _utilities.lazy_import('pulumi_aws_native.accessanalyzer')
    acmpca = _utilities.lazy_import('pulumi_aws_native.acmpca')
    amazonmq = _utilities.lazy_import('pulumi_aws_native.amazonmq')
    amplify = _utilities.lazy_import('pulumi_aws_native.amplify')
    amplifyuibuilder = _utilities.lazy_import('pulumi_aws_native.amplifyuibuilder')
    apigateway = _utilities.lazy_import('pulumi_aws_native.apigateway')
    apigatewayv2 = _utilities.lazy_import('pulumi_aws_native.apigatewayv2')
    appconfig = _utilities.lazy_import('pulumi_aws_native.appconfig')
    appflow = _utilities.lazy_import('pulumi_aws_native.appflow')
    appintegrations = _utilities.lazy_import('pulumi_aws_native.appintegrations')
    applicationautoscaling = _utilities.lazy_import('pulumi_aws_native.applicationautoscaling')
    applicationinsights = _utilities.lazy_import('pulumi_aws_native.applicationinsights')
    appmesh = _utilities.lazy_import('pulumi_aws_native.appmesh')
    apprunner = _utilities.lazy_import('pulumi_aws_native.apprunner')
    appstream = _utilities.lazy_import('pulumi_aws_native.appstream')
    appsync = _utilities.lazy_import('pulumi_aws_native.appsync')
    aps = _utilities.lazy_import('pulumi_aws_native.aps')
    ask = _utilities.lazy_import('pulumi_aws_native.ask')
    athena = _utilities.lazy_import('pulumi_aws_native.athena')
    auditmanager = _utilities.lazy_import('pulumi_aws_native.auditmanager')
    autoscaling = _utilities.lazy_import('pulumi_aws_native.autoscaling')
    autoscalingplans = _utilities.lazy_import('pulumi_aws_native.autoscalingplans')
    backup = _utilities.lazy_import('pulumi_aws_native.backup')
    batch = _utilities.lazy_import('pulumi_aws_native.batch')
    budgets = _utilities.lazy_import('pulumi_aws_native.budgets')
    cassandra = _utilities.lazy_import('pulumi_aws_native.cassandra')
    ce = _utilities.lazy_import('pulumi_aws_native.ce')
    certificatemanager = _utilities.lazy_import('pulumi_aws_native.certificatemanager')
    chatbot = _utilities.lazy_import('pulumi_aws_native.chatbot')
    cloud9 = _utilities.lazy_import('pulumi_aws_native.cloud9')
    cloudformation = _utilities.lazy_import('pulumi_aws_native.cloudformation')
    cloudfront = _utilities.lazy_import('pulumi_aws_native.cloudfront')
    cloudtrail = _utilities.lazy_import('pulumi_aws_native.cloudtrail')
    cloudwatch = _utilities.lazy_import('pulumi_aws_native.cloudwatch')
    codeartifact = _utilities.lazy_import('pulumi_aws_native.codeartifact')
    codebuild = _utilities.lazy_import('pulumi_aws_native.codebuild')
    codecommit = _utilities.lazy_import('pulumi_aws_native.codecommit')
    codedeploy = _utilities.lazy_import('pulumi_aws_native.codedeploy')
    codeguruprofiler = _utilities.lazy_import('pulumi_aws_native.codeguruprofiler')
    codegurureviewer = _utilities.lazy_import('pulumi_aws_native.codegurureviewer')
    codepipeline = _utilities.lazy_import('pulumi_aws_native.codepipeline')
    codestar = _utilities.lazy_import('pulumi_aws_native.codestar')
    codestarconnections = _utilities.lazy_import('pulumi_aws_native.codestarconnections')
    codestarnotifications = _utilities.lazy_import('pulumi_aws_native.codestarnotifications')
    cognito = _utilities.lazy_import('pulumi_aws_native.cognito')
    config = _utilities.lazy_import('pulumi_aws_native.config')
    configuration = _utilities.lazy_import('pulumi_aws_native.configuration')
    connect = _utilities.lazy_import('pulumi_aws_native.connect')
    cur = _utilities.lazy_import('pulumi_aws_native.cur')
    customerprofiles = _utilities.lazy_import('pulumi_aws_native.customerprofiles')
    databrew = _utilities.lazy_import('pulumi_aws_native.databrew')
    datapipeline = _utilities.lazy_import('pulumi_aws_native.datapipeline')
    datasync = _utilities.lazy_import('pulumi_aws_native.datasync')
    dax = _utilities.lazy_import('pulumi_aws_native.dax')
    detective = _utilities.lazy_import('pulumi_aws_native.detective')
    devicefarm = _utilities.lazy_import('pulumi_aws_native.devicefarm')
    devopsguru = _utilities.lazy_import('pulumi_aws_native.devopsguru')
    directoryservice = _utilities.lazy_import('pulumi_aws_native.directoryservice')
    dlm = _utilities.lazy_import('pulumi_aws_native.dlm')
    dms = _utilities.lazy_import('pulumi_aws_native.dms')
    docdb = _utilities.lazy_import('pulumi_aws_native.docdb')
    dynamodb = _utilities.lazy_import('pulumi_aws_native.dynamodb')
    ec2 = _utilities.lazy_import('pulumi_aws_native.ec2')
    ecr = _utilities.lazy_import('pulumi_aws_native.ecr')
    ecs = _utilities.lazy_import('pulumi_aws_native.ecs')
    efs = _utilities.lazy_import('pulumi_aws_native.efs')
    eks = _utilities.lazy_import('pulumi_aws_native.eks')
    elasticache = _utilities.lazy_import('pulumi_aws_native.elasticache')
    elasticbeanstalk = _utilities.lazy_import('pulumi_aws_native.elasticbeanstalk')
    elasticloadbalancing = _utilities.lazy_import('pulumi_aws_native.elasticloadbalancing')
    elasticloadbalancingv2 = _utilities.lazy_import('pulumi_aws_native.elasticloadbalancingv2')
    elasticsearch = _utilities.lazy_import('pulumi_aws_native.elasticsearch')
    emr = _utilities.lazy_import('pulumi_aws_native.emr')
    emrcontainers = _utilities.lazy_import('pulumi_aws_native.emrcontainers')
    events = _utilities.lazy_import('pulumi_aws_native.events')
    eventschemas = _utilities.lazy_import('pulumi_aws_native.eventschemas')
    evidently = _utilities.lazy_import('pulumi_aws_native.evidently')
    finspace = _utilities.lazy_import('pulumi_aws_native.finspace')
    fis = _utilities.lazy_import('pulumi_aws_native.fis')
    fms = _utilities.lazy_import('pulumi_aws_native.fms')
    forecast = _utilities.lazy_import('pulumi_aws_native.forecast')
    frauddetector = _utilities.lazy_import('pulumi_aws_native.frauddetector')
    fsx = _utilities.lazy_import('pulumi_aws_native.fsx')
    gamelift = _utilities.lazy_import('pulumi_aws_native.gamelift')
    globalaccelerator = _utilities.lazy_import('pulumi_aws_native.globalaccelerator')
    glue = _utilities.lazy_import('pulumi_aws_native.glue')
    greengrass = _utilities.lazy_import('pulumi_aws_native.greengrass')
    greengrassv2 = _utilities.lazy_import('pulumi_aws_native.greengrassv2')
    groundstation = _utilities.lazy_import('pulumi_aws_native.groundstation')
    guardduty = _utilities.lazy_import('pulumi_aws_native.guardduty')
    healthlake = _utilities.lazy_import('pulumi_aws_native.healthlake')
    iam = _utilities.lazy_import('pulumi_aws_native.iam')
    imagebuilder = _utilities.lazy_import('pulumi_aws_native.imagebuilder')
    inspector = _utilities.lazy_import('pulumi_aws_native.inspector')
    inspectorv2 = _utilities.lazy_import('pulumi_aws_native.inspectorv2')
    iot = _utilities.lazy_import('pulumi_aws_native.iot')
    iot1click = _utilities.lazy_import('pulumi_aws_native.iot1click')
    iotanalytics = _utilities.lazy_import('pulumi_aws_native.iotanalytics')
    iotcoredeviceadvisor = _utilities.lazy_import('pulumi_aws_native.iotcoredeviceadvisor')
    iotevents = _utilities.lazy_import('pulumi_aws_native.iotevents')
    iotfleethub = _utilities.lazy_import('pulumi_aws_native.iotfleethub')
    iotsitewise = _utilities.lazy_import('pulumi_aws_native.iotsitewise')
    iotthingsgraph = _utilities.lazy_import('pulumi_aws_native.iotthingsgraph')
    iotwireless = _utilities.lazy_import('pulumi_aws_native.iotwireless')
    ivs = _utilities.lazy_import('pulumi_aws_native.ivs')
    kafkaconnect = _utilities.lazy_import('pulumi_aws_native.kafkaconnect')
    kendra = _utilities.lazy_import('pulumi_aws_native.kendra')
    kinesis = _utilities.lazy_import('pulumi_aws_native.kinesis')
    kinesisanalytics = _utilities.lazy_import('pulumi_aws_native.kinesisanalytics')
    kinesisanalyticsv2 = _utilities.lazy_import('pulumi_aws_native.kinesisanalyticsv2')
    kinesisfirehose = _utilities.lazy_import('pulumi_aws_native.kinesisfirehose')
    kinesisvideo = _utilities.lazy_import('pulumi_aws_native.kinesisvideo')
    kms = _utilities.lazy_import('pulumi_aws_native.kms')
    lakeformation = _utilities.lazy_import('pulumi_aws_native.lakeformation')
    lambda_ = _utilities.lazy_import('pulumi_aws_native.lambda_')
    lex = _utilities.lazy_import('pulumi_aws_native.lex')
    licensemanager = _utilities.lazy_import('pulumi_aws_native.licensemanager')
    lightsail = _utilities.lazy_import('pulumi_aws_native.lightsail')
    location = _utilities.lazy_import('pulumi_aws_native.location')
    logs = _utilities.lazy_import('pulumi_aws_native.logs')
    lookoutequipment = _utilities.lazy_import('pulumi_aws_native.lookoutequipment')
    lookoutmetrics = _utilities.lazy_import('pulumi_aws_native.lookoutmetrics')
    lookoutvision = _utilities.lazy_import('pulumi_aws_native.lookoutvision')
    macie = _utilities.lazy_import('pulumi_aws_native.macie')
    managedblockchain = _utilities.lazy_import('pulumi_aws_native.managedblockchain')
    mediaconnect = _utilities.lazy_import('pulumi_aws_native.mediaconnect')
    mediaconvert = _utilities.lazy_import('pulumi_aws_native.mediaconvert')
    medialive = _utilities.lazy_import('pulumi_aws_native.medialive')
    mediapackage = _utilities.lazy_import('pulumi_aws_native.mediapackage')
    mediastore = _utilities.lazy_import('pulumi_aws_native.mediastore')
    memorydb = _utilities.lazy_import('pulumi_aws_native.memorydb')
    msk = _utilities.lazy_import('pulumi_aws_native.msk')
    mwaa = _utilities.lazy_import('pulumi_aws_native.mwaa')
    neptune = _utilities.lazy_import('pulumi_aws_native.neptune')
    networkfirewall = _utilities.lazy_import('pulumi_aws_native.networkfirewall')
    networkmanager = _utilities.lazy_import('pulumi_aws_native.networkmanager')
    nimblestudio = _utilities.lazy_import('pulumi_aws_native.nimblestudio')
    opensearchservice = _utilities.lazy_import('pulumi_aws_native.opensearchservice')
    opsworks = _utilities.lazy_import('pulumi_aws_native.opsworks')
    opsworkscm = _utilities.lazy_import('pulumi_aws_native.opsworkscm')
    panorama = _utilities.lazy_import('pulumi_aws_native.panorama')
    pinpoint = _utilities.lazy_import('pulumi_aws_native.pinpoint')
    pinpointemail = _utilities.lazy_import('pulumi_aws_native.pinpointemail')
    qldb = _utilities.lazy_import('pulumi_aws_native.qldb')
    quicksight = _utilities.lazy_import('pulumi_aws_native.quicksight')
    ram = _utilities.lazy_import('pulumi_aws_native.ram')
    rds = _utilities.lazy_import('pulumi_aws_native.rds')
    redshift = _utilities.lazy_import('pulumi_aws_native.redshift')
    refactorspaces = _utilities.lazy_import('pulumi_aws_native.refactorspaces')
    rekognition = _utilities.lazy_import('pulumi_aws_native.rekognition')
    resiliencehub = _utilities.lazy_import('pulumi_aws_native.resiliencehub')
    resourcegroups = _utilities.lazy_import('pulumi_aws_native.resourcegroups')
    robomaker = _utilities.lazy_import('pulumi_aws_native.robomaker')
    route53 = _utilities.lazy_import('pulumi_aws_native.route53')
    route53recoverycontrol = _utilities.lazy_import('pulumi_aws_native.route53recoverycontrol')
    route53recoveryreadiness = _utilities.lazy_import('pulumi_aws_native.route53recoveryreadiness')
    route53resolver = _utilities.lazy_import('pulumi_aws_native.route53resolver')
    rum = _utilities.lazy_import('pulumi_aws_native.rum')
    s3 = _utilities.lazy_import('pulumi_aws_native.s3')
    s3objectlambda = _utilities.lazy_import('pulumi_aws_native.s3objectlambda')
    s3outposts = _utilities.lazy_import('pulumi_aws_native.s3outposts')
    sagemaker = _utilities.lazy_import('pulumi_aws_native.sagemaker')
    sdb = _utilities.lazy_import('pulumi_aws_native.sdb')
    secretsmanager = _utilities.lazy_import('pulumi_aws_native.secretsmanager')
    securityhub = _utilities.lazy_import('pulumi_aws_native.securityhub')
    servicecatalog = _utilities.lazy_import('pulumi_aws_native.servicecatalog')
    servicecatalogappregistry = _utilities.lazy_import('pulumi_aws_native.servicecatalogappregistry')
    servicediscovery = _utilities.lazy_import('pulumi_aws_native.servicediscovery')
    ses = _utilities.lazy_import('pulumi_aws_native.ses')
    signer = _utilities.lazy_import('pulumi_aws_native.signer')
    sns = _utilities.lazy_import('pulumi_aws_native.sns')
    sqs = _utilities.lazy_import('pulumi_aws_native.sqs')
    ssm = _utilities.lazy_import('pulumi_aws_native.ssm')
    ssmcontacts = _utilities.lazy_import('pulumi_aws_native.ssmcontacts')
    ssmincidents = _utilities.lazy_import('pulumi_aws_native.ssmincidents')
    sso = _utilities.lazy_import('pulumi_aws_native.sso')
    stepfunctions = _utilities.lazy_import('pulumi_aws_native.stepfunctions')
    synthetics = _utilities.lazy_import('pulumi_aws_native.synthetics')
    timestream = _utilities.lazy_import('pulumi_aws_native.timestream')
    transfer = _utilities.lazy_import('pulumi_aws_native.transfer')
    waf = _utilities.lazy_import('pulumi_aws_native.waf')
    wafregional = _utilities.lazy_import('pulumi_aws_native.wafregional')
    wafv2 = _utilities.lazy_import('pulumi_aws_native.wafv2')
    wisdom = _utilities.lazy_import('pulumi_aws_native.wisdom')
    workspaces = _utilities.lazy_import('pulumi_aws_native.workspaces')
    xray = _utilities.lazy_import('pulumi_aws_native.xray')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "aws-native",
  "mod": "accessanalyzer",
  "fqn": "pulumi_aws_native.accessanalyzer",
  "classes": {
   "aws-native:accessanalyzer:Analyzer": "Analyzer"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "acmpca",
  "fqn": "pulumi_aws_native.acmpca",
  "classes": {
   "aws-native:acmpca:Certificate": "Certificate",
   "aws-native:acmpca:CertificateAuthority": "CertificateAuthority",
   "aws-native:acmpca:CertificateAuthorityActivation": "CertificateAuthorityActivation",
   "aws-native:acmpca:Permission": "Permission"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "amazonmq",
  "fqn": "pulumi_aws_native.amazonmq",
  "classes": {
   "aws-native:amazonmq:Broker": "Broker",
   "aws-native:amazonmq:Configuration": "Configuration",
   "aws-native:amazonmq:ConfigurationAssociation": "ConfigurationAssociation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "amplify",
  "fqn": "pulumi_aws_native.amplify",
  "classes": {
   "aws-native:amplify:App": "App",
   "aws-native:amplify:Branch": "Branch",
   "aws-native:amplify:Domain": "Domain"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "amplifyuibuilder",
  "fqn": "pulumi_aws_native.amplifyuibuilder",
  "classes": {
   "aws-native:amplifyuibuilder:Component": "Component",
   "aws-native:amplifyuibuilder:Theme": "Theme"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "apigateway",
  "fqn": "pulumi_aws_native.apigateway",
  "classes": {
   "aws-native:apigateway:Account": "Account",
   "aws-native:apigateway:ApiKey": "ApiKey",
   "aws-native:apigateway:Authorizer": "Authorizer",
   "aws-native:apigateway:BasePathMapping": "BasePathMapping",
   "aws-native:apigateway:ClientCertificate": "ClientCertificate",
   "aws-native:apigateway:Deployment": "Deployment",
   "aws-native:apigateway:DocumentationPart": "DocumentationPart",
   "aws-native:apigateway:DocumentationVersion": "DocumentationVersion",
   "aws-native:apigateway:DomainName": "DomainName",
   "aws-native:apigateway:GatewayResponse": "GatewayResponse",
   "aws-native:apigateway:Method": "Method",
   "aws-native:apigateway:Model": "Model",
   "aws-native:apigateway:RequestValidator": "RequestValidator",
   "aws-native:apigateway:Resource": "Resource",
   "aws-native:apigateway:RestApi": "RestApi",
   "aws-native:apigateway:Stage": "Stage",
   "aws-native:apigateway:UsagePlan": "UsagePlan",
   "aws-native:apigateway:UsagePlanKey": "UsagePlanKey",
   "aws-native:apigateway:VpcLink": "VpcLink"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "apigatewayv2",
  "fqn": "pulumi_aws_native.apigatewayv2",
  "classes": {
   "aws-native:apigatewayv2:Api": "Api",
   "aws-native:apigatewayv2:ApiGatewayManagedOverrides": "ApiGatewayManagedOverrides",
   "aws-native:apigatewayv2:ApiMapping": "ApiMapping",
   "aws-native:apigatewayv2:Authorizer": "Authorizer",
   "aws-native:apigatewayv2:Deployment": "Deployment",
   "aws-native:apigatewayv2:DomainName": "DomainName",
   "aws-native:apigatewayv2:Integration": "Integration",
   "aws-native:apigatewayv2:IntegrationResponse": "IntegrationResponse",
   "aws-native:apigatewayv2:Model": "Model",
   "aws-native:apigatewayv2:Route": "Route",
   "aws-native:apigatewayv2:RouteResponse": "RouteResponse",
   "aws-native:apigatewayv2:Stage": "Stage",
   "aws-native:apigatewayv2:VpcLink": "VpcLink"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "appconfig",
  "fqn": "pulumi_aws_native.appconfig",
  "classes": {
   "aws-native:appconfig:Application": "Application",
   "aws-native:appconfig:ConfigurationProfile": "ConfigurationProfile",
   "aws-native:appconfig:Deployment": "Deployment",
   "aws-native:appconfig:DeploymentStrategy": "DeploymentStrategy",
   "aws-native:appconfig:Environment": "Environment",
   "aws-native:appconfig:HostedConfigurationVersion": "HostedConfigurationVersion"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "appflow",
  "fqn": "pulumi_aws_native.appflow",
  "classes": {
   "aws-native:appflow:ConnectorProfile": "ConnectorProfile",
   "aws-native:appflow:Flow": "Flow"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "appintegrations",
  "fqn": "pulumi_aws_native.appintegrations",
  "classes": {
   "aws-native:appintegrations:EventIntegration": "EventIntegration"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "applicationautoscaling",
  "fqn": "pulumi_aws_native.applicationautoscaling",
  "classes": {
   "aws-native:applicationautoscaling:ScalableTarget": "ScalableTarget",
   "aws-native:applicationautoscaling:ScalingPolicy": "ScalingPolicy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "applicationinsights",
  "fqn": "pulumi_aws_native.applicationinsights",
  "classes": {
   "aws-native:applicationinsights:Application": "Application"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "appmesh",
  "fqn": "pulumi_aws_native.appmesh",
  "classes": {
   "aws-native:appmesh:GatewayRoute": "GatewayRoute",
   "aws-native:appmesh:Mesh": "Mesh",
   "aws-native:appmesh:Route": "Route",
   "aws-native:appmesh:VirtualGateway": "VirtualGateway",
   "aws-native:appmesh:VirtualNode": "VirtualNode",
   "aws-native:appmesh:VirtualRouter": "VirtualRouter",
   "aws-native:appmesh:VirtualService": "VirtualService"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "apprunner",
  "fqn": "pulumi_aws_native.apprunner",
  "classes": {
   "aws-native:apprunner:Service": "Service"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "appstream",
  "fqn": "pulumi_aws_native.appstream",
  "classes": {
   "aws-native:appstream:AppBlock": "AppBlock",
   "aws-native:appstream:Application": "Application",
   "aws-native:appstream:ApplicationEntitlementAssociation": "ApplicationEntitlementAssociation",
   "aws-native:appstream:ApplicationFleetAssociation": "ApplicationFleetAssociation",
   "aws-native:appstream:DirectoryConfig": "DirectoryConfig",
   "aws-native:appstream:Entitlement": "Entitlement",
   "aws-native:appstream:Fleet": "Fleet",
   "aws-native:appstream:ImageBuilder": "ImageBuilder",
   "aws-native:appstream:Stack": "Stack",
   "aws-native:appstream:StackFleetAssociation": "StackFleetAssociation",
   "aws-native:appstream:StackUserAssociation": "StackUserAssociation",
   "aws-native:appstream:User": "User"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "appsync",
  "fqn": "pulumi_aws_native.appsync",
  "classes": {
   "aws-native:appsync:ApiCache": "ApiCache",
   "aws-native:appsync:ApiKey": "ApiKey",
   "aws-native:appsync:DataSource": "DataSource",
   "aws-native:appsync:DomainName": "DomainName",
   "aws-native:appsync:DomainNameApiAssociation": "DomainNameApiAssociation",
   "aws-native:appsync:FunctionConfiguration": "FunctionConfiguration",
   "aws-native:appsync:GraphQLApi": "GraphQLApi",
   "aws-native:appsync:GraphQLSchema": "GraphQLSchema",
   "aws-native:appsync:Resolver": "Resolver"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "aps",
  "fqn": "pulumi_aws_native.aps",
  "classes": {
   "aws-native:aps:RuleGroupsNamespace": "RuleGroupsNamespace",
   "aws-native:aps:Workspace": "Workspace"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ask",
  "fqn": "pulumi_aws_native.ask",
  "classes": {
   "aws-native:ask:Skill": "Skill"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "athena",
  "fqn": "pulumi_aws_native.athena",
  "classes": {
   "aws-native:athena:DataCatalog": "DataCatalog",
   "aws-native:athena:NamedQuery": "NamedQuery",
   "aws-native:athena:PreparedStatement": "PreparedStatement",
   "aws-native:athena:WorkGroup": "WorkGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "auditmanager",
  "fqn": "pulumi_aws_native.auditmanager",
  "classes": {
   "aws-native:auditmanager:Assessment": "Assessment"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "autoscaling",
  "fqn": "pulumi_aws_native.autoscaling",
  "classes": {
   "aws-native:autoscaling:AutoScalingGroup": "AutoScalingGroup",
   "aws-native:autoscaling:LaunchConfiguration": "LaunchConfiguration",
   "aws-native:autoscaling:LifecycleHook": "LifecycleHook",
   "aws-native:autoscaling:ScalingPolicy": "ScalingPolicy",
   "aws-native:autoscaling:ScheduledAction": "ScheduledAction",
   "aws-native:autoscaling:WarmPool": "WarmPool"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "autoscalingplans",
  "fqn": "pulumi_aws_native.autoscalingplans",
  "classes": {
   "aws-native:autoscalingplans:ScalingPlan": "ScalingPlan"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "backup",
  "fqn": "pulumi_aws_native.backup",
  "classes": {
   "aws-native:backup:BackupPlan": "BackupPlan",
   "aws-native:backup:BackupSelection": "BackupSelection",
   "aws-native:backup:BackupVault": "BackupVault",
   "aws-native:backup:Framework": "Framework",
   "aws-native:backup:ReportPlan": "ReportPlan"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "batch",
  "fqn": "pulumi_aws_native.batch",
  "classes": {
   "aws-native:batch:ComputeEnvironment": "ComputeEnvironment",
   "aws-native:batch:JobDefinition": "JobDefinition",
   "aws-native:batch:JobQueue": "JobQueue",
   "aws-native:batch:SchedulingPolicy": "SchedulingPolicy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "budgets",
  "fqn": "pulumi_aws_native.budgets",
  "classes": {
   "aws-native:budgets:Budget": "Budget",
   "aws-native:budgets:BudgetsAction": "BudgetsAction"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "cassandra",
  "fqn": "pulumi_aws_native.cassandra",
  "classes": {
   "aws-native:cassandra:Keyspace": "Keyspace",
   "aws-native:cassandra:Table": "Table"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ce",
  "fqn": "pulumi_aws_native.ce",
  "classes": {
   "aws-native:ce:AnomalyMonitor": "AnomalyMonitor",
   "aws-native:ce:AnomalySubscription": "AnomalySubscription",
   "aws-native:ce:CostCategory": "CostCategory"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "certificatemanager",
  "fqn": "pulumi_aws_native.certificatemanager",
  "classes": {
   "aws-native:certificatemanager:Account": "Account",
   "aws-native:certificatemanager:Certificate": "Certificate"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "chatbot",
  "fqn": "pulumi_aws_native.chatbot",
  "classes": {
   "aws-native:chatbot:SlackChannelConfiguration": "SlackChannelConfiguration"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "cloud9",
  "fqn": "pulumi_aws_native.cloud9",
  "classes": {
   "aws-native:cloud9:EnvironmentEC2": "EnvironmentEC2"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "cloudformation",
  "fqn": "pulumi_aws_native.cloudformation",
  "classes": {
   "aws-native:cloudformation:CustomResource": "CustomResource",
   "aws-native:cloudformation:Macro": "Macro",
   "aws-native:cloudformation:ModuleDefaultVersion": "ModuleDefaultVersion",
   "aws-native:cloudformation:ModuleVersion": "ModuleVersion",
   "aws-native:cloudformation:PublicTypeVersion": "PublicTypeVersion",
   "aws-native:cloudformation:Publisher": "Publisher",
   "aws-native:cloudformation:ResourceDefaultVersion": "ResourceDefaultVersion",
   "aws-native:cloudformation:ResourceVersion": "ResourceVersion",
   "aws-native:cloudformation:Stack": "Stack",
   "aws-native:cloudformation:StackSet": "StackSet",
   "aws-native:cloudformation:TypeActivation": "TypeActivation",
   "aws-native:cloudformation:WaitCondition": "WaitCondition",
   "aws-native:cloudformation:WaitConditionHandle": "WaitConditionHandle"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "cloudfront",
  "fqn": "pulumi_aws_native.cloudfront",
  "classes": {
   "aws-native:cloudfront:CachePolicy": "CachePolicy",
   "aws-native:cloudfront:CloudFrontOriginAccessIdentity": "CloudFrontOriginAccessIdentity",
   "aws-native:cloudfront:Distribution": "Distribution",
   "aws-native:cloudfront:Function": "Function",
   "aws-native:cloudfront:KeyGroup": "KeyGroup",
   "aws-native:cloudfront:OriginRequestPolicy": "OriginRequestPolicy",
   "aws-native:cloudfront:PublicKey": "PublicKey",
   "aws-native:cloudfront:RealtimeLogConfig": "RealtimeLogConfig",
   "aws-native:cloudfront:ResponseHeadersPolicy": "ResponseHeadersPolicy",
   "aws-native:cloudfront:StreamingDistribution": "StreamingDistribution"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "cloudtrail",
  "fqn": "pulumi_aws_native.cloudtrail",
  "classes": {
   "aws-native:cloudtrail:Trail": "Trail"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "cloudwatch",
  "fqn": "pulumi_aws_native.cloudwatch",
  "classes": {
   "aws-native:cloudwatch:Alarm": "Alarm",
   "aws-native:cloudwatch:AnomalyDetector": "AnomalyDetector",
   "aws-native:cloudwatch:CompositeAlarm": "CompositeAlarm",
   "aws-native:cloudwatch:Dashboard": "Dashboard",
   "aws-native:cloudwatch:InsightRule": "InsightRule",
   "aws-native:cloudwatch:MetricStream": "MetricStream"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codeartifact",
  "fqn": "pulumi_aws_native.codeartifact",
  "classes": {
   "aws-native:codeartifact:Domain": "Domain",
   "aws-native:codeartifact:Repository": "Repository"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codebuild",
  "fqn": "pulumi_aws_native.codebuild",
  "classes": {
   "aws-native:codebuild:Project": "Project",
   "aws-native:codebuild:ReportGroup": "ReportGroup",
   "aws-native:codebuild:SourceCredential": "SourceCredential"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codecommit",
  "fqn": "pulumi_aws_native.codecommit",
  "classes": {
   "aws-native:codecommit:Repository": "Repository"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codedeploy",
  "fqn": "pulumi_aws_native.codedeploy",
  "classes": {
   "aws-native:codedeploy:Application": "Application",
   "aws-native:codedeploy:DeploymentConfig": "DeploymentConfig",
   "aws-native:codedeploy:DeploymentGroup": "DeploymentGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codeguruprofiler",
  "fqn": "pulumi_aws_native.codeguruprofiler",
  "classes": {
   "aws-native:codeguruprofiler:ProfilingGroup": "ProfilingGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codegurureviewer",
  "fqn": "pulumi_aws_native.codegurureviewer",
  "classes": {
   "aws-native:codegurureviewer:RepositoryAssociation": "RepositoryAssociation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codepipeline",
  "fqn": "pulumi_aws_native.codepipeline",
  "classes": {
   "aws-native:codepipeline:CustomActionType": "CustomActionType",
   "aws-native:codepipeline:Pipeline": "Pipeline",
   "aws-native:codepipeline:Webhook": "Webhook"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codestar",
  "fqn": "pulumi_aws_native.codestar",
  "classes": {
   "aws-native:codestar:GitHubRepository": "GitHubRepository"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codestarconnections",
  "fqn": "pulumi_aws_native.codestarconnections",
  "classes": {
   "aws-native:codestarconnections:Connection": "Connection"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "codestarnotifications",
  "fqn": "pulumi_aws_native.codestarnotifications",
  "classes": {
   "aws-native:codestarnotifications:NotificationRule": "NotificationRule"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "cognito",
  "fqn": "pulumi_aws_native.cognito",
  "classes": {
   "aws-native:cognito:IdentityPool": "IdentityPool",
   "aws-native:cognito:IdentityPoolRoleAttachment": "IdentityPoolRoleAttachment",
   "aws-native:cognito:UserPool": "UserPool",
   "aws-native:cognito:UserPoolClient": "UserPoolClient",
   "aws-native:cognito:UserPoolDomain": "UserPoolDomain",
   "aws-native:cognito:UserPoolGroup": "UserPoolGroup",
   "aws-native:cognito:UserPoolIdentityProvider": "UserPoolIdentityProvider",
   "aws-native:cognito:UserPoolResourceServer": "UserPoolResourceServer",
   "aws-native:cognito:UserPoolRiskConfigurationAttachment": "UserPoolRiskConfigurationAttachment",
   "aws-native:cognito:UserPoolUICustomizationAttachment": "UserPoolUICustomizationAttachment",
   "aws-native:cognito:UserPoolUser": "UserPoolUser",
   "aws-native:cognito:UserPoolUserToGroupAttachment": "UserPoolUserToGroupAttachment"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "configuration",
  "fqn": "pulumi_aws_native.configuration",
  "classes": {
   "aws-native:configuration:AggregationAuthorization": "AggregationAuthorization",
   "aws-native:configuration:ConfigRule": "ConfigRule",
   "aws-native:configuration:ConfigurationAggregator": "ConfigurationAggregator",
   "aws-native:configuration:ConfigurationRecorder": "ConfigurationRecorder",
   "aws-native:configuration:ConformancePack": "ConformancePack",
   "aws-native:configuration:DeliveryChannel": "DeliveryChannel",
   "aws-native:configuration:OrganizationConfigRule": "OrganizationConfigRule",
   "aws-native:configuration:OrganizationConformancePack": "OrganizationConformancePack",
   "aws-native:configuration:RemediationConfiguration": "RemediationConfiguration",
   "aws-native:configuration:StoredQuery": "StoredQuery"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "connect",
  "fqn": "pulumi_aws_native.connect",
  "classes": {
   "aws-native:connect:ContactFlow": "ContactFlow",
   "aws-native:connect:ContactFlowModule": "ContactFlowModule",
   "aws-native:connect:HoursOfOperation": "HoursOfOperation",
   "aws-native:connect:QuickConnect": "QuickConnect",
   "aws-native:connect:User": "User",
   "aws-native:connect:UserHierarchyGroup": "UserHierarchyGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "cur",
  "fqn": "pulumi_aws_native.cur",
  "classes": {
   "aws-native:cur:ReportDefinition": "ReportDefinition"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "customerprofiles",
  "fqn": "pulumi_aws_native.customerprofiles",
  "classes": {
   "aws-native:customerprofiles:Domain": "Domain",
   "aws-native:customerprofiles:Integration": "Integration",
   "aws-native:customerprofiles:ObjectType": "ObjectType"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "databrew",
  "fqn": "pulumi_aws_native.databrew",
  "classes": {
   "aws-native:databrew:Dataset": "Dataset",
   "aws-native:databrew:Job": "Job",
   "aws-native:databrew:Project": "Project",
   "aws-native:databrew:Recipe": "Recipe",
   "aws-native:databrew:Ruleset": "Ruleset",
   "aws-native:databrew:Schedule": "Schedule"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "datapipeline",
  "fqn": "pulumi_aws_native.datapipeline",
  "classes": {
   "aws-native:datapipeline:Pipeline": "Pipeline"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "datasync",
  "fqn": "pulumi_aws_native.datasync",
  "classes": {
   "aws-native:datasync:Agent": "Agent",
   "aws-native:datasync:LocationEFS": "LocationEFS",
   "aws-native:datasync:LocationFSxWindows": "LocationFSxWindows",
   "aws-native:datasync:LocationHDFS": "LocationHDFS",
   "aws-native:datasync:LocationNFS": "LocationNFS",
   "aws-native:datasync:LocationObjectStorage": "LocationObjectStorage",
   "aws-native:datasync:LocationS3": "LocationS3",
   "aws-native:datasync:LocationSMB": "LocationSMB",
   "aws-native:datasync:Task": "Task"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "dax",
  "fqn": "pulumi_aws_native.dax",
  "classes": {
   "aws-native:dax:Cluster": "Cluster",
   "aws-native:dax:ParameterGroup": "ParameterGroup",
   "aws-native:dax:SubnetGroup": "SubnetGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "detective",
  "fqn": "pulumi_aws_native.detective",
  "classes": {
   "aws-native:detective:Graph": "Graph",
   "aws-native:detective:MemberInvitation": "MemberInvitation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "devicefarm",
  "fqn": "pulumi_aws_native.devicefarm",
  "classes": {
   "aws-native:devicefarm:DevicePool": "DevicePool",
   "aws-native:devicefarm:InstanceProfile": "InstanceProfile",
   "aws-native:devicefarm:NetworkProfile": "NetworkProfile",
   "aws-native:devicefarm:Project": "Project",
   "aws-native:devicefarm:TestGridProject": "TestGridProject",
   "aws-native:devicefarm:VPCEConfiguration": "VPCEConfiguration"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "devopsguru",
  "fqn": "pulumi_aws_native.devopsguru",
  "classes": {
   "aws-native:devopsguru:NotificationChannel": "NotificationChannel",
   "aws-native:devopsguru:ResourceCollection": "ResourceCollection"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "directoryservice",
  "fqn": "pulumi_aws_native.directoryservice",
  "classes": {
   "aws-native:directoryservice:MicrosoftAD": "MicrosoftAD",
   "aws-native:directoryservice:SimpleAD": "SimpleAD"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "dlm",
  "fqn": "pulumi_aws_native.dlm",
  "classes": {
   "aws-native:dlm:LifecyclePolicy": "LifecyclePolicy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "dms",
  "fqn": "pulumi_aws_native.dms",
  "classes": {
   "aws-native:dms:Certificate": "Certificate",
   "aws-native:dms:Endpoint": "Endpoint",
   "aws-native:dms:EventSubscription": "EventSubscription",
   "aws-native:dms:ReplicationInstance": "ReplicationInstance",
   "aws-native:dms:ReplicationSubnetGroup": "ReplicationSubnetGroup",
   "aws-native:dms:ReplicationTask": "ReplicationTask"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "docdb",
  "fqn": "pulumi_aws_native.docdb",
  "classes": {
   "aws-native:docdb:DBCluster": "DBCluster",
   "aws-native:docdb:DBClusterParameterGroup": "DBClusterParameterGroup",
   "aws-native:docdb:DBInstance": "DBInstance",
   "aws-native:docdb:DBSubnetGroup": "DBSubnetGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "dynamodb",
  "fqn": "pulumi_aws_native.dynamodb",
  "classes": {
   "aws-native:dynamodb:GlobalTable": "GlobalTable",
   "aws-native:dynamodb:Table": "Table"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ec2",
  "fqn": "pulumi_aws_native.ec2",
  "classes": {
   "aws-native:ec2:CapacityReservation": "CapacityReservation",
   "aws-native:ec2:CapacityReservationFleet": "CapacityReservationFleet",
   "aws-native:ec2:CarrierGateway": "CarrierGateway",
   "aws-native:ec2:ClientVpnAuthorizationRule": "ClientVpnAuthorizationRule",
   "aws-native:ec2:ClientVpnEndpoint": "ClientVpnEndpoint",
   "aws-native:ec2:ClientVpnRoute": "ClientVpnRoute",
   "aws-native:ec2:ClientVpnTargetNetworkAssociation": "ClientVpnTargetNetworkAssociation",
   "aws-native:ec2:CustomerGateway": "CustomerGateway",
   "aws-native:ec2:DHCPOptions": "DHCPOptions",
   "aws-native:ec2:EC2Fleet": "EC2Fleet",
   "aws-native:ec2:EIP": "EIP",
   "aws-native:ec2:EIPAssociation": "EIPAssociation",
   "aws-native:ec2:EgressOnlyInternetGateway": "EgressOnlyInternetGateway",
   "aws-native:ec2:EnclaveCertificateIamRoleAssociation": "EnclaveCertificateIamRoleAssociation",
   "aws-native:ec2:FlowLog": "FlowLog",
   "aws-native:ec2:GatewayRouteTableAssociation": "GatewayRouteTableAssociation",
   "aws-native:ec2:Host": "Host",
   "aws-native:ec2:IPAM": "IPAM",
   "aws-native:ec2:IPAMAllocation": "IPAMAllocation",
   "aws-native:ec2:IPAMPool": "IPAMPool",
   "aws-native:ec2:IPAMScope": "IPAMScope",
   "aws-native:ec2:Instance": "Instance",
   "aws-native:ec2:InternetGateway": "InternetGateway",
   "aws-native:ec2:LaunchTemplate": "LaunchTemplate",
   "aws-native:ec2:LocalGatewayRoute": "LocalGatewayRoute",
   "aws-native:ec2:LocalGatewayRouteTableVPCAssociation": "LocalGatewayRouteTableVPCAssociation",
   "aws-native:ec2:NatGateway": "NatGateway",
   "aws-native:ec2:NetworkAcl": "NetworkAcl",
   "aws-native:ec2:NetworkAclEntry": "NetworkAclEntry",
   "aws-native:ec2:NetworkInsightsAccessScope": "NetworkInsightsAccessScope",
   "aws-native:ec2:NetworkInsightsAccessScopeAnalysis": "NetworkInsightsAccessScopeAnalysis",
   "aws-native:ec2:NetworkInsightsAnalysis": "NetworkInsightsAnalysis",
   "aws-native:ec2:NetworkInsightsPath": "NetworkInsightsPath",
   "aws-native:ec2:NetworkInterface": "NetworkInterface",
   "aws-native:ec2:NetworkInterfaceAttachment": "NetworkInterfaceAttachment",
   "aws-native:ec2:NetworkInterfacePermission": "NetworkInterfacePermission",
   "aws-native:ec2:PlacementGroup": "PlacementGroup",
   "aws-native:ec2:PrefixList": "PrefixList",
   "aws-native:ec2:Route": "Route",
   "aws-native:ec2:RouteTable": "RouteTable",
   "aws-native:ec2:SecurityGroup": "SecurityGroup",
   "aws-native:ec2:SecurityGroupEgress": "SecurityGroupEgress",
   "aws-native:ec2:SecurityGroupIngress": "SecurityGroupIngress",
   "aws-native:ec2:SpotFleet": "SpotFleet",
   "aws-native:ec2:Subnet": "Subnet",
   "aws-native:ec2:SubnetCidrBlock": "SubnetCidrBlock",
   "aws-native:ec2:SubnetNetworkAclAssociation": "SubnetNetworkAclAssociation",
   "aws-native:ec2:SubnetRouteTableAssociation": "SubnetRouteTableAssociation",
   "aws-native:ec2:TrafficMirrorFilter": "TrafficMirrorFilter",
   "aws-native:ec2:TrafficMirrorFilterRule": "TrafficMirrorFilterRule",
   "aws-native:ec2:TrafficMirrorSession": "TrafficMirrorSession",
   "aws-native:ec2:TrafficMirrorTarget": "TrafficMirrorTarget",
   "aws-native:ec2:TransitGateway": "TransitGateway",
   "aws-native:ec2:TransitGatewayAttachment": "TransitGatewayAttachment",
   "aws-native:ec2:TransitGatewayConnect": "TransitGatewayConnect",
   "aws-native:ec2:TransitGatewayMulticastDomain": "TransitGatewayMulticastDomain",
   "aws-native:ec2:TransitGatewayMulticastDomainAssociation": "TransitGatewayMulticastDomainAssociation",
   "aws-native:ec2:TransitGatewayMulticastGroupMember": "TransitGatewayMulticastGroupMember",
   "aws-native:ec2:TransitGatewayMulticastGroupSource": "TransitGatewayMulticastGroupSource",
   "aws-native:ec2:TransitGatewayPeeringAttachment": "TransitGatewayPeeringAttachment",
   "aws-native:ec2:TransitGatewayRoute": "TransitGatewayRoute",
   "aws-native:ec2:TransitGatewayRouteTable": "TransitGatewayRouteTable",
   "aws-native:ec2:TransitGatewayRouteTableAssociation": "TransitGatewayRouteTableAssociation",
   "aws-native:ec2:TransitGatewayRouteTablePropagation": "TransitGatewayRouteTablePropagation",
   "aws-native:ec2:TransitGatewayVpcAttachment": "TransitGatewayVpcAttachment",
   "aws-native:ec2:VPC": "VPC",
   "aws-native:ec2:VPCCidrBlock": "VPCCidrBlock",
   "aws-native:ec2:VPCDHCPOptionsAssociation": "VPCDHCPOptionsAssociation",
   "aws-native:ec2:VPCEndpoint": "VPCEndpoint",
   "aws-native:ec2:VPCEndpointConnectionNotification": "VPCEndpointConnectionNotification",
   "aws-native:ec2:VPCEndpointService": "VPCEndpointService",
   "aws-native:ec2:VPCEndpointServicePermissions": "VPCEndpointServicePermissions",
   "aws-native:ec2:VPCGatewayAttachment": "VPCGatewayAttachment",
   "aws-native:ec2:VPCPeeringConnection": "VPCPeeringConnection",
   "aws-native:ec2:VPNConnection": "VPNConnection",
   "aws-native:ec2:VPNConnectionRoute": "VPNConnectionRoute",
   "aws-native:ec2:VPNGateway": "VPNGateway",
   "aws-native:ec2:VPNGatewayRoutePropagation": "VPNGatewayRoutePropagation",
   "aws-native:ec2:Volume": "Volume",
   "aws-native:ec2:VolumeAttachment": "VolumeAttachment"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ecr",
  "fqn": "pulumi_aws_native.ecr",
  "classes": {
   "aws-native:ecr:PublicRepository": "PublicRepository",
   "aws-native:ecr:RegistryPolicy": "RegistryPolicy",
   "aws-native:ecr:ReplicationConfiguration": "ReplicationConfiguration",
   "aws-native:ecr:Repository": "Repository"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ecs",
  "fqn": "pulumi_aws_native.ecs",
  "classes": {
   "aws-native:ecs:CapacityProvider": "CapacityProvider",
   "aws-native:ecs:Cluster": "Cluster",
   "aws-native:ecs:ClusterCapacityProviderAssociations": "ClusterCapacityProviderAssociations",
   "aws-native:ecs:PrimaryTaskSet": "PrimaryTaskSet",
   "aws-native:ecs:Service": "Service",
   "aws-native:ecs:TaskDefinition": "TaskDefinition",
   "aws-native:ecs:TaskSet": "TaskSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "efs",
  "fqn": "pulumi_aws_native.efs",
  "classes": {
   "aws-native:efs:AccessPoint": "AccessPoint",
   "aws-native:efs:FileSystem": "FileSystem",
   "aws-native:efs:MountTarget": "MountTarget"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "eks",
  "fqn": "pulumi_aws_native.eks",
  "classes": {
   "aws-native:eks:Addon": "Addon",
   "aws-native:eks:Cluster": "Cluster",
   "aws-native:eks:FargateProfile": "FargateProfile",
   "aws-native:eks:Nodegroup": "Nodegroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "elasticache",
  "fqn": "pulumi_aws_native.elasticache",
  "classes": {
   "aws-native:elasticache:CacheCluster": "CacheCluster",
   "aws-native:elasticache:GlobalReplicationGroup": "GlobalReplicationGroup",
   "aws-native:elasticache:ParameterGroup": "ParameterGroup",
   "aws-native:elasticache:ReplicationGroup": "ReplicationGroup",
   "aws-native:elasticache:SecurityGroup": "SecurityGroup",
   "aws-native:elasticache:SecurityGroupIngress": "SecurityGroupIngress",
   "aws-native:elasticache:SubnetGroup": "SubnetGroup",
   "aws-native:elasticache:User": "User",
   "aws-native:elasticache:UserGroup": "UserGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "elasticbeanstalk",
  "fqn": "pulumi_aws_native.elasticbeanstalk",
  "classes": {
   "aws-native:elasticbeanstalk:Application": "Application",
   "aws-native:elasticbeanstalk:ApplicationVersion": "ApplicationVersion",
   "aws-native:elasticbeanstalk:ConfigurationTemplate": "ConfigurationTemplate",
   "aws-native:elasticbeanstalk:Environment": "Environment"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "elasticloadbalancing",
  "fqn": "pulumi_aws_native.elasticloadbalancing",
  "classes": {
   "aws-native:elasticloadbalancing:LoadBalancer": "LoadBalancer"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "elasticloadbalancingv2",
  "fqn": "pulumi_aws_native.elasticloadbalancingv2",
  "classes": {
   "aws-native:elasticloadbalancingv2:Listener": "Listener",
   "aws-native:elasticloadbalancingv2:ListenerCertificate": "ListenerCertificate",
   "aws-native:elasticloadbalancingv2:ListenerRule": "ListenerRule",
   "aws-native:elasticloadbalancingv2:LoadBalancer": "LoadBalancer",
   "aws-native:elasticloadbalancingv2:TargetGroup": "TargetGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "elasticsearch",
  "fqn": "pulumi_aws_native.elasticsearch",
  "classes": {
   "aws-native:elasticsearch:Domain": "Domain"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "emr",
  "fqn": "pulumi_aws_native.emr",
  "classes": {
   "aws-native:emr:Cluster": "Cluster",
   "aws-native:emr:InstanceFleetConfig": "InstanceFleetConfig",
   "aws-native:emr:InstanceGroupConfig": "InstanceGroupConfig",
   "aws-native:emr:SecurityConfiguration": "SecurityConfiguration",
   "aws-native:emr:Step": "Step",
   "aws-native:emr:Studio": "Studio",
   "aws-native:emr:StudioSessionMapping": "StudioSessionMapping"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "emrcontainers",
  "fqn": "pulumi_aws_native.emrcontainers",
  "classes": {
   "aws-native:emrcontainers:VirtualCluster": "VirtualCluster"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "events",
  "fqn": "pulumi_aws_native.events",
  "classes": {
   "aws-native:events:ApiDestination": "ApiDestination",
   "aws-native:events:Archive": "Archive",
   "aws-native:events:Connection": "Connection",
   "aws-native:events:EventBus": "EventBus",
   "aws-native:events:EventBusPolicy": "EventBusPolicy",
   "aws-native:events:Rule": "Rule"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "eventschemas",
  "fqn": "pulumi_aws_native.eventschemas",
  "classes": {
   "aws-native:eventschemas:Discoverer": "Discoverer",
   "aws-native:eventschemas:Registry": "Registry",
   "aws-native:eventschemas:RegistryPolicy": "RegistryPolicy",
   "aws-native:eventschemas:Schema": "Schema"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "evidently",
  "fqn": "pulumi_aws_native.evidently",
  "classes": {
   "aws-native:evidently:Experiment": "Experiment",
   "aws-native:evidently:Feature": "Feature",
   "aws-native:evidently:Launch": "Launch",
   "aws-native:evidently:Project": "Project"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "finspace",
  "fqn": "pulumi_aws_native.finspace",
  "classes": {
   "aws-native:finspace:Environment": "Environment"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "fis",
  "fqn": "pulumi_aws_native.fis",
  "classes": {
   "aws-native:fis:ExperimentTemplate": "ExperimentTemplate"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "fms",
  "fqn": "pulumi_aws_native.fms",
  "classes": {
   "aws-native:fms:NotificationChannel": "NotificationChannel",
   "aws-native:fms:Policy": "Policy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "forecast",
  "fqn": "pulumi_aws_native.forecast",
  "classes": {
   "aws-native:forecast:Dataset": "Dataset",
   "aws-native:forecast:DatasetGroup": "DatasetGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "frauddetector",
  "fqn": "pulumi_aws_native.frauddetector",
  "classes": {
   "aws-native:frauddetector:Detector": "Detector",
   "aws-native:frauddetector:EntityType": "EntityType",
   "aws-native:frauddetector:EventType": "EventType",
   "aws-native:frauddetector:Label": "Label",
   "aws-native:frauddetector:Outcome": "Outcome",
   "aws-native:frauddetector:Variable": "Variable"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "fsx",
  "fqn": "pulumi_aws_native.fsx",
  "classes": {
   "aws-native:fsx:FileSystem": "FileSystem"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "gamelift",
  "fqn": "pulumi_aws_native.gamelift",
  "classes": {
   "aws-native:gamelift:Alias": "Alias",
   "aws-native:gamelift:Build": "Build",
   "aws-native:gamelift:Fleet": "Fleet",
   "aws-native:gamelift:GameServerGroup": "GameServerGroup",
   "aws-native:gamelift:GameSessionQueue": "GameSessionQueue",
   "aws-native:gamelift:MatchmakingConfiguration": "MatchmakingConfiguration",
   "aws-native:gamelift:MatchmakingRuleSet": "MatchmakingRuleSet",
   "aws-native:gamelift:Script": "Script"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "globalaccelerator",
  "fqn": "pulumi_aws_native.globalaccelerator",
  "classes": {
   "aws-native:globalaccelerator:Accelerator": "Accelerator",
   "aws-native:globalaccelerator:EndpointGroup": "EndpointGroup",
   "aws-native:globalaccelerator:Listener": "Listener"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "glue",
  "fqn": "pulumi_aws_native.glue",
  "classes": {
   "aws-native:glue:Classifier": "Classifier",
   "aws-native:glue:Connection": "Connection",
   "aws-native:glue:Crawler": "Crawler",
   "aws-native:glue:DataCatalogEncryptionSettings": "DataCatalogEncryptionSettings",
   "aws-native:glue:Database": "Database",
   "aws-native:glue:DevEndpoint": "DevEndpoint",
   "aws-native:glue:Job": "Job",
   "aws-native:glue:MLTransform": "MLTransform",
   "aws-native:glue:Partition": "Partition",
   "aws-native:glue:Registry": "Registry",
   "aws-native:glue:Schema": "Schema",
   "aws-native:glue:SchemaVersion": "SchemaVersion",
   "aws-native:glue:SchemaVersionMetadata": "SchemaVersionMetadata",
   "aws-native:glue:SecurityConfiguration": "SecurityConfiguration",
   "aws-native:glue:Table": "Table",
   "aws-native:glue:Trigger": "Trigger",
   "aws-native:glue:Workflow": "Workflow"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "greengrass",
  "fqn": "pulumi_aws_native.greengrass",
  "classes": {
   "aws-native:greengrass:ConnectorDefinition": "ConnectorDefinition",
   "aws-native:greengrass:ConnectorDefinitionVersion": "ConnectorDefinitionVersion",
   "aws-native:greengrass:CoreDefinition": "CoreDefinition",
   "aws-native:greengrass:CoreDefinitionVersion": "CoreDefinitionVersion",
   "aws-native:greengrass:DeviceDefinition": "DeviceDefinition",
   "aws-native:greengrass:DeviceDefinitionVersion": "DeviceDefinitionVersion",
   "aws-native:greengrass:FunctionDefinition": "FunctionDefinition",
   "aws-native:greengrass:FunctionDefinitionVersion": "FunctionDefinitionVersion",
   "aws-native:greengrass:Group": "Group",
   "aws-native:greengrass:GroupVersion": "GroupVersion",
   "aws-native:greengrass:LoggerDefinition": "LoggerDefinition",
   "aws-native:greengrass:LoggerDefinitionVersion": "LoggerDefinitionVersion",
   "aws-native:greengrass:ResourceDefinition": "ResourceDefinition",
   "aws-native:greengrass:ResourceDefinitionVersion": "ResourceDefinitionVersion",
   "aws-native:greengrass:SubscriptionDefinition": "SubscriptionDefinition",
   "aws-native:greengrass:SubscriptionDefinitionVersion": "SubscriptionDefinitionVersion"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "greengrassv2",
  "fqn": "pulumi_aws_native.greengrassv2",
  "classes": {
   "aws-native:greengrassv2:ComponentVersion": "ComponentVersion"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "groundstation",
  "fqn": "pulumi_aws_native.groundstation",
  "classes": {
   "aws-native:groundstation:Config": "Config",
   "aws-native:groundstation:DataflowEndpointGroup": "DataflowEndpointGroup",
   "aws-native:groundstation:MissionProfile": "MissionProfile"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "guardduty",
  "fqn": "pulumi_aws_native.guardduty",
  "classes": {
   "aws-native:guardduty:Detector": "Detector",
   "aws-native:guardduty:Filter": "Filter",
   "aws-native:guardduty:IPSet": "IPSet",
   "aws-native:guardduty:Master": "Master",
   "aws-native:guardduty:Member": "Member",
   "aws-native:guardduty:ThreatIntelSet": "ThreatIntelSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "healthlake",
  "fqn": "pulumi_aws_native.healthlake",
  "classes": {
   "aws-native:healthlake:FHIRDatastore": "FHIRDatastore"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iam",
  "fqn": "pulumi_aws_native.iam",
  "classes": {
   "aws-native:iam:AccessKey": "AccessKey",
   "aws-native:iam:Group": "Group",
   "aws-native:iam:InstanceProfile": "InstanceProfile",
   "aws-native:iam:ManagedPolicy": "ManagedPolicy",
   "aws-native:iam:OIDCProvider": "OIDCProvider",
   "aws-native:iam:Policy": "Policy",
   "aws-native:iam:Role": "Role",
   "aws-native:iam:SAMLProvider": "SAMLProvider",
   "aws-native:iam:ServerCertificate": "ServerCertificate",
   "aws-native:iam:ServiceLinkedRole": "ServiceLinkedRole",
   "aws-native:iam:User": "User",
   "aws-native:iam:UserToGroupAddition": "UserToGroupAddition",
   "aws-native:iam:VirtualMFADevice": "VirtualMFADevice"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "imagebuilder",
  "fqn": "pulumi_aws_native.imagebuilder",
  "classes": {
   "aws-native:imagebuilder:Component": "Component",
   "aws-native:imagebuilder:ContainerRecipe": "ContainerRecipe",
   "aws-native:imagebuilder:DistributionConfiguration": "DistributionConfiguration",
   "aws-native:imagebuilder:Image": "Image",
   "aws-native:imagebuilder:ImagePipeline": "ImagePipeline",
   "aws-native:imagebuilder:ImageRecipe": "ImageRecipe",
   "aws-native:imagebuilder:InfrastructureConfiguration": "InfrastructureConfiguration"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "index",
  "fqn": "pulumi_aws_native",
  "classes": {
   "aws-native:index:ExtensionResource": "ExtensionResource"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "inspector",
  "fqn": "pulumi_aws_native.inspector",
  "classes": {
   "aws-native:inspector:AssessmentTarget": "AssessmentTarget",
   "aws-native:inspector:AssessmentTemplate": "AssessmentTemplate",
   "aws-native:inspector:ResourceGroup": "ResourceGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "inspectorv2",
  "fqn": "pulumi_aws_native.inspectorv2",
  "classes": {
   "aws-native:inspectorv2:Filter": "Filter"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iot",
  "fqn": "pulumi_aws_native.iot",
  "classes": {
   "aws-native:iot:AccountAuditConfiguration": "AccountAuditConfiguration",
   "aws-native:iot:Authorizer": "Authorizer",
   "aws-native:iot:Certificate": "Certificate",
   "aws-native:iot:CustomMetric": "CustomMetric",
   "aws-native:iot:Dimension": "Dimension",
   "aws-native:iot:DomainConfiguration": "DomainConfiguration",
   "aws-native:iot:FleetMetric": "FleetMetric",
   "aws-native:iot:JobTemplate": "JobTemplate",
   "aws-native:iot:Logging": "Logging",
   "aws-native:iot:MitigationAction": "MitigationAction",
   "aws-native:iot:Policy": "Policy",
   "aws-native:iot:PolicyPrincipalAttachment": "PolicyPrincipalAttachment",
   "aws-native:iot:ProvisioningTemplate": "ProvisioningTemplate",
   "aws-native:iot:ResourceSpecificLogging": "ResourceSpecificLogging",
   "aws-native:iot:ScheduledAudit": "ScheduledAudit",
   "aws-native:iot:SecurityProfile": "SecurityProfile",
   "aws-native:iot:Thing": "Thing",
   "aws-native:iot:ThingPrincipalAttachment": "ThingPrincipalAttachment",
   "aws-native:iot:TopicRule": "TopicRule",
   "aws-native:iot:TopicRuleDestination": "TopicRuleDestination"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iot1click",
  "fqn": "pulumi_aws_native.iot1click",
  "classes": {
   "aws-native:iot1click:Device": "Device",
   "aws-native:iot1click:Placement": "Placement",
   "aws-native:iot1click:Project": "Project"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iotanalytics",
  "fqn": "pulumi_aws_native.iotanalytics",
  "classes": {
   "aws-native:iotanalytics:Channel": "Channel",
   "aws-native:iotanalytics:Dataset": "Dataset",
   "aws-native:iotanalytics:Datastore": "Datastore",
   "aws-native:iotanalytics:Pipeline": "Pipeline"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iotcoredeviceadvisor",
  "fqn": "pulumi_aws_native.iotcoredeviceadvisor",
  "classes": {
   "aws-native:iotcoredeviceadvisor:SuiteDefinition": "SuiteDefinition"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iotevents",
  "fqn": "pulumi_aws_native.iotevents",
  "classes": {
   "aws-native:iotevents:DetectorModel": "DetectorModel",
   "aws-native:iotevents:Input": "Input"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iotfleethub",
  "fqn": "pulumi_aws_native.iotfleethub",
  "classes": {
   "aws-native:iotfleethub:Application": "Application"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iotsitewise",
  "fqn": "pulumi_aws_native.iotsitewise",
  "classes": {
   "aws-native:iotsitewise:AccessPolicy": "AccessPolicy",
   "aws-native:iotsitewise:Asset": "Asset",
   "aws-native:iotsitewise:AssetModel": "AssetModel",
   "aws-native:iotsitewise:Dashboard": "Dashboard",
   "aws-native:iotsitewise:Gateway": "Gateway",
   "aws-native:iotsitewise:Portal": "Portal",
   "aws-native:iotsitewise:Project": "Project"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iotthingsgraph",
  "fqn": "pulumi_aws_native.iotthingsgraph",
  "classes": {
   "aws-native:iotthingsgraph:FlowTemplate": "FlowTemplate"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "iotwireless",
  "fqn": "pulumi_aws_native.iotwireless",
  "classes": {
   "aws-native:iotwireless:Destination": "Destination",
   "aws-native:iotwireless:DeviceProfile": "DeviceProfile",
   "aws-native:iotwireless:FuotaTask": "FuotaTask",
   "aws-native:iotwireless:MulticastGroup": "MulticastGroup",
   "aws-native:iotwireless:PartnerAccount": "PartnerAccount",
   "aws-native:iotwireless:ServiceProfile": "ServiceProfile",
   "aws-native:iotwireless:TaskDefinition": "TaskDefinition",
   "aws-native:iotwireless:WirelessDevice": "WirelessDevice",
   "aws-native:iotwireless:WirelessGateway": "WirelessGateway"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ivs",
  "fqn": "pulumi_aws_native.ivs",
  "classes": {
   "aws-native:ivs:Channel": "Channel",
   "aws-native:ivs:PlaybackKeyPair": "PlaybackKeyPair",
   "aws-native:ivs:RecordingConfiguration": "RecordingConfiguration",
   "aws-native:ivs:StreamKey": "StreamKey"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "kafkaconnect",
  "fqn": "pulumi_aws_native.kafkaconnect",
  "classes": {
   "aws-native:kafkaconnect:Connector": "Connector"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "kendra",
  "fqn": "pulumi_aws_native.kendra",
  "classes": {
   "aws-native:kendra:DataSource": "DataSource",
   "aws-native:kendra:Faq": "Faq",
   "aws-native:kendra:Index": "Index"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "kinesis",
  "fqn": "pulumi_aws_native.kinesis",
  "classes": {
   "aws-native:kinesis:Stream": "Stream",
   "aws-native:kinesis:StreamConsumer": "StreamConsumer"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "kinesisanalytics",
  "fqn": "pulumi_aws_native.kinesisanalytics",
  "classes": {
   "aws-native:kinesisanalytics:Application": "Application",
   "aws-native:kinesisanalytics:ApplicationOutputResource": "ApplicationOutputResource",
   "aws-native:kinesisanalytics:ApplicationReferenceDataSource": "ApplicationReferenceDataSource"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "kinesisanalyticsv2",
  "fqn": "pulumi_aws_native.kinesisanalyticsv2",
  "classes": {
   "aws-native:kinesisanalyticsv2:Application": "Application",
   "aws-native:kinesisanalyticsv2:ApplicationCloudWatchLoggingOption": "ApplicationCloudWatchLoggingOption",
   "aws-native:kinesisanalyticsv2:ApplicationOutputResource": "ApplicationOutputResource",
   "aws-native:kinesisanalyticsv2:ApplicationReferenceDataSource": "ApplicationReferenceDataSource"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "kinesisfirehose",
  "fqn": "pulumi_aws_native.kinesisfirehose",
  "classes": {
   "aws-native:kinesisfirehose:DeliveryStream": "DeliveryStream"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "kinesisvideo",
  "fqn": "pulumi_aws_native.kinesisvideo",
  "classes": {
   "aws-native:kinesisvideo:SignalingChannel": "SignalingChannel",
   "aws-native:kinesisvideo:Stream": "Stream"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "kms",
  "fqn": "pulumi_aws_native.kms",
  "classes": {
   "aws-native:kms:Alias": "Alias",
   "aws-native:kms:Key": "Key",
   "aws-native:kms:ReplicaKey": "ReplicaKey"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "lakeformation",
  "fqn": "pulumi_aws_native.lakeformation",
  "classes": {
   "aws-native:lakeformation:DataLakeSettings": "DataLakeSettings",
   "aws-native:lakeformation:Permissions": "Permissions",
   "aws-native:lakeformation:Resource": "Resource"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "lambda",
  "fqn": "pulumi_aws_native.lambda_",
  "classes": {
   "aws-native:lambda:Alias": "Alias",
   "aws-native:lambda:CodeSigningConfig": "CodeSigningConfig",
   "aws-native:lambda:EventInvokeConfig": "EventInvokeConfig",
   "aws-native:lambda:EventSourceMapping": "EventSourceMapping",
   "aws-native:lambda:Function": "Function",
   "aws-native:lambda:LayerVersion": "LayerVersion",
   "aws-native:lambda:LayerVersionPermission": "LayerVersionPermission",
   "aws-native:lambda:Permission": "Permission",
   "aws-native:lambda:Url": "Url",
   "aws-native:lambda:Version": "Version"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "lex",
  "fqn": "pulumi_aws_native.lex",
  "classes": {
   "aws-native:lex:Bot": "Bot",
   "aws-native:lex:BotAlias": "BotAlias",
   "aws-native:lex:BotVersion": "BotVersion",
   "aws-native:lex:ResourcePolicy": "ResourcePolicy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "licensemanager",
  "fqn": "pulumi_aws_native.licensemanager",
  "classes": {
   "aws-native:licensemanager:Grant": "Grant",
   "aws-native:licensemanager:License": "License"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "lightsail",
  "fqn": "pulumi_aws_native.lightsail",
  "classes": {
   "aws-native:lightsail:Alarm": "Alarm",
   "aws-native:lightsail:Bucket": "Bucket",
   "aws-native:lightsail:Certificate": "Certificate",
   "aws-native:lightsail:Container": "Container",
   "aws-native:lightsail:Database": "Database",
   "aws-native:lightsail:Disk": "Disk",
   "aws-native:lightsail:Distribution": "Distribution",
   "aws-native:lightsail:Instance": "Instance",
   "aws-native:lightsail:LoadBalancer": "LoadBalancer",
   "aws-native:lightsail:LoadBalancerTlsCertificate": "LoadBalancerTlsCertificate",
   "aws-native:lightsail:StaticIp": "StaticIp"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "location",
  "fqn": "pulumi_aws_native.location",
  "classes": {
   "aws-native:location:GeofenceCollection": "GeofenceCollection",
   "aws-native:location:Map": "Map",
   "aws-native:location:PlaceIndex": "PlaceIndex",
   "aws-native:location:RouteCalculator": "RouteCalculator",
   "aws-native:location:Tracker": "Tracker",
   "aws-native:location:TrackerConsumer": "TrackerConsumer"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "logs",
  "fqn": "pulumi_aws_native.logs",
  "classes": {
   "aws-native:logs:Destination": "Destination",
   "aws-native:logs:LogGroup": "LogGroup",
   "aws-native:logs:LogStream": "LogStream",
   "aws-native:logs:MetricFilter": "MetricFilter",
   "aws-native:logs:QueryDefinition": "QueryDefinition",
   "aws-native:logs:ResourcePolicy": "ResourcePolicy",
   "aws-native:logs:SubscriptionFilter": "SubscriptionFilter"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "lookoutequipment",
  "fqn": "pulumi_aws_native.lookoutequipment",
  "classes": {
   "aws-native:lookoutequipment:InferenceScheduler": "InferenceScheduler"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "lookoutmetrics",
  "fqn": "pulumi_aws_native.lookoutmetrics",
  "classes": {
   "aws-native:lookoutmetrics:Alert": "Alert",
   "aws-native:lookoutmetrics:AnomalyDetector": "AnomalyDetector"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "lookoutvision",
  "fqn": "pulumi_aws_native.lookoutvision",
  "classes": {
   "aws-native:lookoutvision:Project": "Project"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "macie",
  "fqn": "pulumi_aws_native.macie",
  "classes": {
   "aws-native:macie:CustomDataIdentifier": "CustomDataIdentifier",
   "aws-native:macie:FindingsFilter": "FindingsFilter",
   "aws-native:macie:Session": "Session"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "managedblockchain",
  "fqn": "pulumi_aws_native.managedblockchain",
  "classes": {
   "aws-native:managedblockchain:Member": "Member",
   "aws-native:managedblockchain:Node": "Node"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "mediaconnect",
  "fqn": "pulumi_aws_native.mediaconnect",
  "classes": {
   "aws-native:mediaconnect:Flow": "Flow",
   "aws-native:mediaconnect:FlowEntitlement": "FlowEntitlement",
   "aws-native:mediaconnect:FlowOutput": "FlowOutput",
   "aws-native:mediaconnect:FlowSource": "FlowSource",
   "aws-native:mediaconnect:FlowVpcInterface": "FlowVpcInterface"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "mediaconvert",
  "fqn": "pulumi_aws_native.mediaconvert",
  "classes": {
   "aws-native:mediaconvert:JobTemplate": "JobTemplate",
   "aws-native:mediaconvert:Preset": "Preset",
   "aws-native:mediaconvert:Queue": "Queue"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "medialive",
  "fqn": "pulumi_aws_native.medialive",
  "classes": {
   "aws-native:medialive:Channel": "Channel",
   "aws-native:medialive:Input": "Input",
   "aws-native:medialive:InputSecurityGroup": "InputSecurityGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "mediapackage",
  "fqn": "pulumi_aws_native.mediapackage",
  "classes": {
   "aws-native:mediapackage:Asset": "Asset",
   "aws-native:mediapackage:Channel": "Channel",
   "aws-native:mediapackage:OriginEndpoint": "OriginEndpoint",
   "aws-native:mediapackage:PackagingConfiguration": "PackagingConfiguration",
   "aws-native:mediapackage:PackagingGroup": "PackagingGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "mediastore",
  "fqn": "pulumi_aws_native.mediastore",
  "classes": {
   "aws-native:mediastore:Container": "Container"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "memorydb",
  "fqn": "pulumi_aws_native.memorydb",
  "classes": {
   "aws-native:memorydb:ACL": "ACL",
   "aws-native:memorydb:Cluster": "Cluster",
   "aws-native:memorydb:ParameterGroup": "ParameterGroup",
   "aws-native:memorydb:SubnetGroup": "SubnetGroup",
   "aws-native:memorydb:User": "User"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "msk",
  "fqn": "pulumi_aws_native.msk",
  "classes": {
   "aws-native:msk:Cluster": "Cluster"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "mwaa",
  "fqn": "pulumi_aws_native.mwaa",
  "classes": {
   "aws-native:mwaa:Environment": "Environment"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "neptune",
  "fqn": "pulumi_aws_native.neptune",
  "classes": {
   "aws-native:neptune:DBCluster": "DBCluster",
   "aws-native:neptune:DBClusterParameterGroup": "DBClusterParameterGroup",
   "aws-native:neptune:DBInstance": "DBInstance",
   "aws-native:neptune:DBParameterGroup": "DBParameterGroup",
   "aws-native:neptune:DBSubnetGroup": "DBSubnetGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "networkfirewall",
  "fqn": "pulumi_aws_native.networkfirewall",
  "classes": {
   "aws-native:networkfirewall:Firewall": "Firewall",
   "aws-native:networkfirewall:FirewallPolicy": "FirewallPolicy",
   "aws-native:networkfirewall:LoggingConfiguration": "LoggingConfiguration",
   "aws-native:networkfirewall:RuleGroup": "RuleGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "networkmanager",
  "fqn": "pulumi_aws_native.networkmanager",
  "classes": {
   "aws-native:networkmanager:CustomerGatewayAssociation": "CustomerGatewayAssociation",
   "aws-native:networkmanager:Device": "Device",
   "aws-native:networkmanager:GlobalNetwork": "GlobalNetwork",
   "aws-native:networkmanager:Link": "Link",
   "aws-native:networkmanager:LinkAssociation": "LinkAssociation",
   "aws-native:networkmanager:Site": "Site",
   "aws-native:networkmanager:TransitGatewayRegistration": "TransitGatewayRegistration"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "nimblestudio",
  "fqn": "pulumi_aws_native.nimblestudio",
  "classes": {
   "aws-native:nimblestudio:LaunchProfile": "LaunchProfile",
   "aws-native:nimblestudio:StreamingImage": "StreamingImage",
   "aws-native:nimblestudio:Studio": "Studio",
   "aws-native:nimblestudio:StudioComponent": "StudioComponent"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "opensearchservice",
  "fqn": "pulumi_aws_native.opensearchservice",
  "classes": {
   "aws-native:opensearchservice:Domain": "Domain"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "opsworks",
  "fqn": "pulumi_aws_native.opsworks",
  "classes": {
   "aws-native:opsworks:App": "App",
   "aws-native:opsworks:ElasticLoadBalancerAttachment": "ElasticLoadBalancerAttachment",
   "aws-native:opsworks:Instance": "Instance",
   "aws-native:opsworks:Layer": "Layer",
   "aws-native:opsworks:Stack": "Stack",
   "aws-native:opsworks:UserProfile": "UserProfile",
   "aws-native:opsworks:Volume": "Volume"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "opsworkscm",
  "fqn": "pulumi_aws_native.opsworkscm",
  "classes": {
   "aws-native:opsworkscm:Server": "Server"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "panorama",
  "fqn": "pulumi_aws_native.panorama",
  "classes": {
   "aws-native:panorama:ApplicationInstance": "ApplicationInstance",
   "aws-native:panorama:Package": "Package",
   "aws-native:panorama:PackageVersion": "PackageVersion"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "pinpoint",
  "fqn": "pulumi_aws_native.pinpoint",
  "classes": {
   "aws-native:pinpoint:ADMChannel": "ADMChannel",
   "aws-native:pinpoint:APNSChannel": "APNSChannel",
   "aws-native:pinpoint:APNSSandboxChannel": "APNSSandboxChannel",
   "aws-native:pinpoint:APNSVoipChannel": "APNSVoipChannel",
   "aws-native:pinpoint:APNSVoipSandboxChannel": "APNSVoipSandboxChannel",
   "aws-native:pinpoint:App": "App",
   "aws-native:pinpoint:ApplicationSettings": "ApplicationSettings",
   "aws-native:pinpoint:BaiduChannel": "BaiduChannel",
   "aws-native:pinpoint:Campaign": "Campaign",
   "aws-native:pinpoint:EmailChannel": "EmailChannel",
   "aws-native:pinpoint:EmailTemplate": "EmailTemplate",
   "aws-native:pinpoint:EventStream": "EventStream",
   "aws-native:pinpoint:GCMChannel": "GCMChannel",
   "aws-native:pinpoint:InAppTemplate": "InAppTemplate",
   "aws-native:pinpoint:PushTemplate": "PushTemplate",
   "aws-native:pinpoint:SMSChannel": "SMSChannel",
   "aws-native:pinpoint:Segment": "Segment",
   "aws-native:pinpoint:SmsTemplate": "SmsTemplate",
   "aws-native:pinpoint:VoiceChannel": "VoiceChannel"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "pinpointemail",
  "fqn": "pulumi_aws_native.pinpointemail",
  "classes": {
   "aws-native:pinpointemail:ConfigurationSet": "ConfigurationSet",
   "aws-native:pinpointemail:ConfigurationSetEventDestination": "ConfigurationSetEventDestination",
   "aws-native:pinpointemail:DedicatedIpPool": "DedicatedIpPool",
   "aws-native:pinpointemail:Identity": "Identity"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "qldb",
  "fqn": "pulumi_aws_native.qldb",
  "classes": {
   "aws-native:qldb:Ledger": "Ledger",
   "aws-native:qldb:Stream": "Stream"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "quicksight",
  "fqn": "pulumi_aws_native.quicksight",
  "classes": {
   "aws-native:quicksight:Analysis": "Analysis",
   "aws-native:quicksight:Dashboard": "Dashboard",
   "aws-native:quicksight:DataSet": "DataSet",
   "aws-native:quicksight:DataSource": "DataSource",
   "aws-native:quicksight:Template": "Template",
   "aws-native:quicksight:Theme": "Theme"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ram",
  "fqn": "pulumi_aws_native.ram",
  "classes": {
   "aws-native:ram:ResourceShare": "ResourceShare"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "rds",
  "fqn": "pulumi_aws_native.rds",
  "classes": {
   "aws-native:rds:DBCluster": "DBCluster",
   "aws-native:rds:DBClusterParameterGroup": "DBClusterParameterGroup",
   "aws-native:rds:DBInstance": "DBInstance",
   "aws-native:rds:DBParameterGroup": "DBParameterGroup",
   "aws-native:rds:DBProxy": "DBProxy",
   "aws-native:rds:DBProxyEndpoint": "DBProxyEndpoint",
   "aws-native:rds:DBProxyTargetGroup": "DBProxyTargetGroup",
   "aws-native:rds:DBSecurityGroup": "DBSecurityGroup",
   "aws-native:rds:DBSecurityGroupIngress": "DBSecurityGroupIngress",
   "aws-native:rds:DBSubnetGroup": "DBSubnetGroup",
   "aws-native:rds:EventSubscription": "EventSubscription",
   "aws-native:rds:GlobalCluster": "GlobalCluster",
   "aws-native:rds:OptionGroup": "OptionGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "redshift",
  "fqn": "pulumi_aws_native.redshift",
  "classes": {
   "aws-native:redshift:Cluster": "Cluster",
   "aws-native:redshift:ClusterParameterGroup": "ClusterParameterGroup",
   "aws-native:redshift:ClusterSecurityGroup": "ClusterSecurityGroup",
   "aws-native:redshift:ClusterSecurityGroupIngress": "ClusterSecurityGroupIngress",
   "aws-native:redshift:ClusterSubnetGroup": "ClusterSubnetGroup",
   "aws-native:redshift:EndpointAccess": "EndpointAccess",
   "aws-native:redshift:EndpointAuthorization": "EndpointAuthorization",
   "aws-native:redshift:EventSubscription": "EventSubscription",
   "aws-native:redshift:ScheduledAction": "ScheduledAction"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "refactorspaces",
  "fqn": "pulumi_aws_native.refactorspaces",
  "classes": {
   "aws-native:refactorspaces:Application": "Application",
   "aws-native:refactorspaces:Environment": "Environment",
   "aws-native:refactorspaces:Route": "Route",
   "aws-native:refactorspaces:Service": "Service"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "rekognition",
  "fqn": "pulumi_aws_native.rekognition",
  "classes": {
   "aws-native:rekognition:Collection": "Collection",
   "aws-native:rekognition:Project": "Project"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "resiliencehub",
  "fqn": "pulumi_aws_native.resiliencehub",
  "classes": {
   "aws-native:resiliencehub:App": "App",
   "aws-native:resiliencehub:ResiliencyPolicy": "ResiliencyPolicy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "resourcegroups",
  "fqn": "pulumi_aws_native.resourcegroups",
  "classes": {
   "aws-native:resourcegroups:Group": "Group"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "robomaker",
  "fqn": "pulumi_aws_native.robomaker",
  "classes": {
   "aws-native:robomaker:Fleet": "Fleet",
   "aws-native:robomaker:Robot": "Robot",
   "aws-native:robomaker:RobotApplication": "RobotApplication",
   "aws-native:robomaker:RobotApplicationVersion": "RobotApplicationVersion",
   "aws-native:robomaker:SimulationApplication": "SimulationApplication",
   "aws-native:robomaker:SimulationApplicationVersion": "SimulationApplicationVersion"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "route53",
  "fqn": "pulumi_aws_native.route53",
  "classes": {
   "aws-native:route53:DNSSEC": "DNSSEC",
   "aws-native:route53:HealthCheck": "HealthCheck",
   "aws-native:route53:HostedZone": "HostedZone",
   "aws-native:route53:KeySigningKey": "KeySigningKey",
   "aws-native:route53:RecordSet": "RecordSet",
   "aws-native:route53:RecordSetGroup": "RecordSetGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "route53recoverycontrol",
  "fqn": "pulumi_aws_native.route53recoverycontrol",
  "classes": {
   "aws-native:route53recoverycontrol:Cluster": "Cluster",
   "aws-native:route53recoverycontrol:ControlPanel": "ControlPanel",
   "aws-native:route53recoverycontrol:RoutingControl": "RoutingControl",
   "aws-native:route53recoverycontrol:SafetyRule": "SafetyRule"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "route53recoveryreadiness",
  "fqn": "pulumi_aws_native.route53recoveryreadiness",
  "classes": {
   "aws-native:route53recoveryreadiness:Cell": "Cell",
   "aws-native:route53recoveryreadiness:ReadinessCheck": "ReadinessCheck",
   "aws-native:route53recoveryreadiness:RecoveryGroup": "RecoveryGroup",
   "aws-native:route53recoveryreadiness:ResourceSet": "ResourceSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "route53resolver",
  "fqn": "pulumi_aws_native.route53resolver",
  "classes": {
   "aws-native:route53resolver:FirewallDomainList": "FirewallDomainList",
   "aws-native:route53resolver:FirewallRuleGroup": "FirewallRuleGroup",
   "aws-native:route53resolver:FirewallRuleGroupAssociation": "FirewallRuleGroupAssociation",
   "aws-native:route53resolver:ResolverConfig": "ResolverConfig",
   "aws-native:route53resolver:ResolverDNSSECConfig": "ResolverDNSSECConfig",
   "aws-native:route53resolver:ResolverEndpoint": "ResolverEndpoint",
   "aws-native:route53resolver:ResolverQueryLoggingConfig": "ResolverQueryLoggingConfig",
   "aws-native:route53resolver:ResolverQueryLoggingConfigAssociation": "ResolverQueryLoggingConfigAssociation",
   "aws-native:route53resolver:ResolverRule": "ResolverRule",
   "aws-native:route53resolver:ResolverRuleAssociation": "ResolverRuleAssociation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "rum",
  "fqn": "pulumi_aws_native.rum",
  "classes": {
   "aws-native:rum:AppMonitor": "AppMonitor"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "s3",
  "fqn": "pulumi_aws_native.s3",
  "classes": {
   "aws-native:s3:AccessPoint": "AccessPoint",
   "aws-native:s3:Bucket": "Bucket",
   "aws-native:s3:BucketPolicy": "BucketPolicy",
   "aws-native:s3:MultiRegionAccessPoint": "MultiRegionAccessPoint",
   "aws-native:s3:MultiRegionAccessPointPolicy": "MultiRegionAccessPointPolicy",
   "aws-native:s3:StorageLens": "StorageLens"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "s3objectlambda",
  "fqn": "pulumi_aws_native.s3objectlambda",
  "classes": {
   "aws-native:s3objectlambda:AccessPoint": "AccessPoint",
   "aws-native:s3objectlambda:AccessPointPolicy": "AccessPointPolicy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "s3outposts",
  "fqn": "pulumi_aws_native.s3outposts",
  "classes": {
   "aws-native:s3outposts:AccessPoint": "AccessPoint",
   "aws-native:s3outposts:Bucket": "Bucket",
   "aws-native:s3outposts:BucketPolicy": "BucketPolicy",
   "aws-native:s3outposts:Endpoint": "Endpoint"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "sagemaker",
  "fqn": "pulumi_aws_native.sagemaker",
  "classes": {
   "aws-native:sagemaker:App": "App",
   "aws-native:sagemaker:AppImageConfig": "AppImageConfig",
   "aws-native:sagemaker:CodeRepository": "CodeRepository",
   "aws-native:sagemaker:DataQualityJobDefinition": "DataQualityJobDefinition",
   "aws-native:sagemaker:Device": "Device",
   "aws-native:sagemaker:DeviceFleet": "DeviceFleet",
   "aws-native:sagemaker:Domain": "Domain",
   "aws-native:sagemaker:Endpoint": "Endpoint",
   "aws-native:sagemaker:EndpointConfig": "EndpointConfig",
   "aws-native:sagemaker:FeatureGroup": "FeatureGroup",
   "aws-native:sagemaker:Image": "Image",
   "aws-native:sagemaker:ImageVersion": "ImageVersion",
   "aws-native:sagemaker:Model": "Model",
   "aws-native:sagemaker:ModelBiasJobDefinition": "ModelBiasJobDefinition",
   "aws-native:sagemaker:ModelExplainabilityJobDefinition": "ModelExplainabilityJobDefinition",
   "aws-native:sagemaker:ModelPackageGroup": "ModelPackageGroup",
   "aws-native:sagemaker:ModelQualityJobDefinition": "ModelQualityJobDefinition",
   "aws-native:sagemaker:MonitoringSchedule": "MonitoringSchedule",
   "aws-native:sagemaker:NotebookInstance": "NotebookInstance",
   "aws-native:sagemaker:NotebookInstanceLifecycleConfig": "NotebookInstanceLifecycleConfig",
   "aws-native:sagemaker:Pipeline": "Pipeline",
   "aws-native:sagemaker:Project": "Project",
   "aws-native:sagemaker:UserProfile": "UserProfile",
   "aws-native:sagemaker:Workteam": "Workteam"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "sdb",
  "fqn": "pulumi_aws_native.sdb",
  "classes": {
   "aws-native:sdb:Domain": "Domain"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "secretsmanager",
  "fqn": "pulumi_aws_native.secretsmanager",
  "classes": {
   "aws-native:secretsmanager:ResourcePolicy": "ResourcePolicy",
   "aws-native:secretsmanager:RotationSchedule": "RotationSchedule",
   "aws-native:secretsmanager:Secret": "Secret",
   "aws-native:secretsmanager:SecretTargetAttachment": "SecretTargetAttachment"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "securityhub",
  "fqn": "pulumi_aws_native.securityhub",
  "classes": {
   "aws-native:securityhub:Hub": "Hub"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "servicecatalog",
  "fqn": "pulumi_aws_native.servicecatalog",
  "classes": {
   "aws-native:servicecatalog:AcceptedPortfolioShare": "AcceptedPortfolioShare",
   "aws-native:servicecatalog:CloudFormationProduct": "CloudFormationProduct",
   "aws-native:servicecatalog:CloudFormationProvisionedProduct": "CloudFormationProvisionedProduct",
   "aws-native:servicecatalog:LaunchNotificationConstraint": "LaunchNotificationConstraint",
   "aws-native:servicecatalog:LaunchRoleConstraint": "LaunchRoleConstraint",
   "aws-native:servicecatalog:LaunchTemplateConstraint": "LaunchTemplateConstraint",
   "aws-native:servicecatalog:Portfolio": "Portfolio",
   "aws-native:servicecatalog:PortfolioPrincipalAssociation": "PortfolioPrincipalAssociation",
   "aws-native:servicecatalog:PortfolioProductAssociation": "PortfolioProductAssociation",
   "aws-native:servicecatalog:PortfolioShare": "PortfolioShare",
   "aws-native:servicecatalog:ResourceUpdateConstraint": "ResourceUpdateConstraint",
   "aws-native:servicecatalog:ServiceAction": "ServiceAction",
   "aws-native:servicecatalog:ServiceActionAssociation": "ServiceActionAssociation",
   "aws-native:servicecatalog:StackSetConstraint": "StackSetConstraint",
   "aws-native:servicecatalog:TagOption": "TagOption",
   "aws-native:servicecatalog:TagOptionAssociation": "TagOptionAssociation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "servicecatalogappregistry",
  "fqn": "pulumi_aws_native.servicecatalogappregistry",
  "classes": {
   "aws-native:servicecatalogappregistry:Application": "Application",
   "aws-native:servicecatalogappregistry:AttributeGroup": "AttributeGroup",
   "aws-native:servicecatalogappregistry:AttributeGroupAssociation": "AttributeGroupAssociation",
   "aws-native:servicecatalogappregistry:ResourceAssociation": "ResourceAssociation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "servicediscovery",
  "fqn": "pulumi_aws_native.servicediscovery",
  "classes": {
   "aws-native:servicediscovery:HttpNamespace": "HttpNamespace",
   "aws-native:servicediscovery:Instance": "Instance",
   "aws-native:servicediscovery:PrivateDnsNamespace": "PrivateDnsNamespace",
   "aws-native:servicediscovery:PublicDnsNamespace": "PublicDnsNamespace",
   "aws-native:servicediscovery:Service": "Service"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ses",
  "fqn": "pulumi_aws_native.ses",
  "classes": {
   "aws-native:ses:ConfigurationSet": "ConfigurationSet",
   "aws-native:ses:ConfigurationSetEventDestination": "ConfigurationSetEventDestination",
   "aws-native:ses:ContactList": "ContactList",
   "aws-native:ses:ReceiptFilter": "ReceiptFilter",
   "aws-native:ses:ReceiptRule": "ReceiptRule",
   "aws-native:ses:ReceiptRuleSet": "ReceiptRuleSet",
   "aws-native:ses:Template": "Template"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "signer",
  "fqn": "pulumi_aws_native.signer",
  "classes": {
   "aws-native:signer:ProfilePermission": "ProfilePermission",
   "aws-native:signer:SigningProfile": "SigningProfile"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "sns",
  "fqn": "pulumi_aws_native.sns",
  "classes": {
   "aws-native:sns:Subscription": "Subscription",
   "aws-native:sns:Topic": "Topic",
   "aws-native:sns:TopicPolicy": "TopicPolicy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "sqs",
  "fqn": "pulumi_aws_native.sqs",
  "classes": {
   "aws-native:sqs:Queue": "Queue",
   "aws-native:sqs:QueuePolicy": "QueuePolicy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ssm",
  "fqn": "pulumi_aws_native.ssm",
  "classes": {
   "aws-native:ssm:Association": "Association",
   "aws-native:ssm:Document": "Document",
   "aws-native:ssm:MaintenanceWindow": "MaintenanceWindow",
   "aws-native:ssm:MaintenanceWindowTarget": "MaintenanceWindowTarget",
   "aws-native:ssm:MaintenanceWindowTask": "MaintenanceWindowTask",
   "aws-native:ssm:Parameter": "Parameter",
   "aws-native:ssm:PatchBaseline": "PatchBaseline",
   "aws-native:ssm:ResourceDataSync": "ResourceDataSync"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ssmcontacts",
  "fqn": "pulumi_aws_native.ssmcontacts",
  "classes": {
   "aws-native:ssmcontacts:Contact": "Contact",
   "aws-native:ssmcontacts:ContactChannel": "ContactChannel"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ssmincidents",
  "fqn": "pulumi_aws_native.ssmincidents",
  "classes": {
   "aws-native:ssmincidents:ReplicationSet": "ReplicationSet",
   "aws-native:ssmincidents:ResponsePlan": "ResponsePlan"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "sso",
  "fqn": "pulumi_aws_native.sso",
  "classes": {
   "aws-native:sso:Assignment": "Assignment",
   "aws-native:sso:InstanceAccessControlAttributeConfiguration": "InstanceAccessControlAttributeConfiguration",
   "aws-native:sso:PermissionSet": "PermissionSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "stepfunctions",
  "fqn": "pulumi_aws_native.stepfunctions",
  "classes": {
   "aws-native:stepfunctions:Activity": "Activity",
   "aws-native:stepfunctions:StateMachine": "StateMachine"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "synthetics",
  "fqn": "pulumi_aws_native.synthetics",
  "classes": {
   "aws-native:synthetics:Canary": "Canary"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "timestream",
  "fqn": "pulumi_aws_native.timestream",
  "classes": {
   "aws-native:timestream:Database": "Database",
   "aws-native:timestream:ScheduledQuery": "ScheduledQuery",
   "aws-native:timestream:Table": "Table"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "transfer",
  "fqn": "pulumi_aws_native.transfer",
  "classes": {
   "aws-native:transfer:Server": "Server",
   "aws-native:transfer:User": "User",
   "aws-native:transfer:Workflow": "Workflow"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "waf",
  "fqn": "pulumi_aws_native.waf",
  "classes": {
   "aws-native:waf:ByteMatchSet": "ByteMatchSet",
   "aws-native:waf:IPSet": "IPSet",
   "aws-native:waf:Rule": "Rule",
   "aws-native:waf:SizeConstraintSet": "SizeConstraintSet",
   "aws-native:waf:SqlInjectionMatchSet": "SqlInjectionMatchSet",
   "aws-native:waf:WebACL": "WebACL",
   "aws-native:waf:XssMatchSet": "XssMatchSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "wafregional",
  "fqn": "pulumi_aws_native.wafregional",
  "classes": {
   "aws-native:wafregional:ByteMatchSet": "ByteMatchSet",
   "aws-native:wafregional:GeoMatchSet": "GeoMatchSet",
   "aws-native:wafregional:IPSet": "IPSet",
   "aws-native:wafregional:RateBasedRule": "RateBasedRule",
   "aws-native:wafregional:RegexPatternSet": "RegexPatternSet",
   "aws-native:wafregional:Rule": "Rule",
   "aws-native:wafregional:SizeConstraintSet": "SizeConstraintSet",
   "aws-native:wafregional:SqlInjectionMatchSet": "SqlInjectionMatchSet",
   "aws-native:wafregional:WebACL": "WebACL",
   "aws-native:wafregional:WebACLAssociation": "WebACLAssociation",
   "aws-native:wafregional:XssMatchSet": "XssMatchSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "wafv2",
  "fqn": "pulumi_aws_native.wafv2",
  "classes": {
   "aws-native:wafv2:IPSet": "IPSet",
   "aws-native:wafv2:LoggingConfiguration": "LoggingConfiguration",
   "aws-native:wafv2:RegexPatternSet": "RegexPatternSet",
   "aws-native:wafv2:RuleGroup": "RuleGroup",
   "aws-native:wafv2:WebACL": "WebACL",
   "aws-native:wafv2:WebACLAssociation": "WebACLAssociation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "wisdom",
  "fqn": "pulumi_aws_native.wisdom",
  "classes": {
   "aws-native:wisdom:Assistant": "Assistant",
   "aws-native:wisdom:AssistantAssociation": "AssistantAssociation",
   "aws-native:wisdom:KnowledgeBase": "KnowledgeBase"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "workspaces",
  "fqn": "pulumi_aws_native.workspaces",
  "classes": {
   "aws-native:workspaces:ConnectionAlias": "ConnectionAlias",
   "aws-native:workspaces:Workspace": "Workspace"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "xray",
  "fqn": "pulumi_aws_native.xray",
  "classes": {
   "aws-native:xray:Group": "Group",
   "aws-native:xray:SamplingRule": "SamplingRule"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "aws-native",
  "token": "pulumi:providers:aws-native",
  "fqn": "pulumi_aws_native",
  "class": "Provider"
 }
]
"""
)
