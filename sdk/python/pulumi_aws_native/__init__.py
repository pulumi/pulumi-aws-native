# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .cidr import *
from .get_account_id import *
from .get_azs import *
from .get_partition import *
from .get_region import *
from .get_ssm_parameter_list import *
from .get_ssm_parameter_string import *
from .get_url_suffix import *
from .import_value import *
from .provider import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_aws_native.accessanalyzer as accessanalyzer
    import pulumi_aws_native.acmpca as acmpca
    import pulumi_aws_native.amplify as amplify
    import pulumi_aws_native.apigateway as apigateway
    import pulumi_aws_native.appflow as appflow
    import pulumi_aws_native.applicationinsights as applicationinsights
    import pulumi_aws_native.athena as athena
    import pulumi_aws_native.auditmanager as auditmanager
    import pulumi_aws_native.backup as backup
    import pulumi_aws_native.cassandra as cassandra
    import pulumi_aws_native.chatbot as chatbot
    import pulumi_aws_native.cloudformation as cloudformation
    import pulumi_aws_native.cloudfront as cloudfront
    import pulumi_aws_native.cloudwatch as cloudwatch
    import pulumi_aws_native.codeartifact as codeartifact
    import pulumi_aws_native.codeguruprofiler as codeguruprofiler
    import pulumi_aws_native.codegurureviewer as codegurureviewer
    import pulumi_aws_native.codestarconnections as codestarconnections
    import pulumi_aws_native.config as config
    import pulumi_aws_native.configuration as configuration
    import pulumi_aws_native.databrew as databrew
    import pulumi_aws_native.detective as detective
    import pulumi_aws_native.devopsguru as devopsguru
    import pulumi_aws_native.ec2 as ec2
    import pulumi_aws_native.ecr as ecr
    import pulumi_aws_native.ecs as ecs
    import pulumi_aws_native.efs as efs
    import pulumi_aws_native.eks as eks
    import pulumi_aws_native.elasticache as elasticache
    import pulumi_aws_native.elasticloadbalancingv2 as elasticloadbalancingv2
    import pulumi_aws_native.events as events
    import pulumi_aws_native.eventschemas as eventschemas
    import pulumi_aws_native.fms as fms
    import pulumi_aws_native.gamelift as gamelift
    import pulumi_aws_native.globalaccelerator as globalaccelerator
    import pulumi_aws_native.glue as glue
    import pulumi_aws_native.greengrassv2 as greengrassv2
    import pulumi_aws_native.groundstation as groundstation
    import pulumi_aws_native.imagebuilder as imagebuilder
    import pulumi_aws_native.iot as iot
    import pulumi_aws_native.iotevents as iotevents
    import pulumi_aws_native.iotsitewise as iotsitewise
    import pulumi_aws_native.ivs as ivs
    import pulumi_aws_native.kendra as kendra
    import pulumi_aws_native.kinesis as kinesis
    import pulumi_aws_native.kinesisfirehose as kinesisfirehose
    import pulumi_aws_native.kms as kms
    import pulumi_aws_native.lambda_ as lambda_
    import pulumi_aws_native.licensemanager as licensemanager
    import pulumi_aws_native.logs as logs
    import pulumi_aws_native.macie as macie
    import pulumi_aws_native.mediapackage as mediapackage
    import pulumi_aws_native.mwaa as mwaa
    import pulumi_aws_native.networkfirewall as networkfirewall
    import pulumi_aws_native.networkmanager as networkmanager
    import pulumi_aws_native.opsworkscm as opsworkscm
    import pulumi_aws_native.qldb as qldb
    import pulumi_aws_native.rds as rds
    import pulumi_aws_native.redshift as redshift
    import pulumi_aws_native.resourcegroups as resourcegroups
    import pulumi_aws_native.route53 as route53
    import pulumi_aws_native.route53resolver as route53resolver
    import pulumi_aws_native.s3 as s3
    import pulumi_aws_native.sagemaker as sagemaker
    import pulumi_aws_native.servicecatalog as servicecatalog
    import pulumi_aws_native.ses as ses
    import pulumi_aws_native.signer as signer
    import pulumi_aws_native.ssm as ssm
    import pulumi_aws_native.sso as sso
    import pulumi_aws_native.stepfunctions as stepfunctions
    import pulumi_aws_native.synthetics as synthetics
    import pulumi_aws_native.timestream as timestream
    import pulumi_aws_native.wafv2 as wafv2
    import pulumi_aws_native.workspaces as workspaces
else:
    accessanalyzer = _utilities.lazy_import('pulumi_aws_native.accessanalyzer')
    acmpca = _utilities.lazy_import('pulumi_aws_native.acmpca')
    amplify = _utilities.lazy_import('pulumi_aws_native.amplify')
    apigateway = _utilities.lazy_import('pulumi_aws_native.apigateway')
    appflow = _utilities.lazy_import('pulumi_aws_native.appflow')
    applicationinsights = _utilities.lazy_import('pulumi_aws_native.applicationinsights')
    athena = _utilities.lazy_import('pulumi_aws_native.athena')
    auditmanager = _utilities.lazy_import('pulumi_aws_native.auditmanager')
    backup = _utilities.lazy_import('pulumi_aws_native.backup')
    cassandra = _utilities.lazy_import('pulumi_aws_native.cassandra')
    chatbot = _utilities.lazy_import('pulumi_aws_native.chatbot')
    cloudformation = _utilities.lazy_import('pulumi_aws_native.cloudformation')
    cloudfront = _utilities.lazy_import('pulumi_aws_native.cloudfront')
    cloudwatch = _utilities.lazy_import('pulumi_aws_native.cloudwatch')
    codeartifact = _utilities.lazy_import('pulumi_aws_native.codeartifact')
    codeguruprofiler = _utilities.lazy_import('pulumi_aws_native.codeguruprofiler')
    codegurureviewer = _utilities.lazy_import('pulumi_aws_native.codegurureviewer')
    codestarconnections = _utilities.lazy_import('pulumi_aws_native.codestarconnections')
    config = _utilities.lazy_import('pulumi_aws_native.config')
    configuration = _utilities.lazy_import('pulumi_aws_native.configuration')
    databrew = _utilities.lazy_import('pulumi_aws_native.databrew')
    detective = _utilities.lazy_import('pulumi_aws_native.detective')
    devopsguru = _utilities.lazy_import('pulumi_aws_native.devopsguru')
    ec2 = _utilities.lazy_import('pulumi_aws_native.ec2')
    ecr = _utilities.lazy_import('pulumi_aws_native.ecr')
    ecs = _utilities.lazy_import('pulumi_aws_native.ecs')
    efs = _utilities.lazy_import('pulumi_aws_native.efs')
    eks = _utilities.lazy_import('pulumi_aws_native.eks')
    elasticache = _utilities.lazy_import('pulumi_aws_native.elasticache')
    elasticloadbalancingv2 = _utilities.lazy_import('pulumi_aws_native.elasticloadbalancingv2')
    events = _utilities.lazy_import('pulumi_aws_native.events')
    eventschemas = _utilities.lazy_import('pulumi_aws_native.eventschemas')
    fms = _utilities.lazy_import('pulumi_aws_native.fms')
    gamelift = _utilities.lazy_import('pulumi_aws_native.gamelift')
    globalaccelerator = _utilities.lazy_import('pulumi_aws_native.globalaccelerator')
    glue = _utilities.lazy_import('pulumi_aws_native.glue')
    greengrassv2 = _utilities.lazy_import('pulumi_aws_native.greengrassv2')
    groundstation = _utilities.lazy_import('pulumi_aws_native.groundstation')
    imagebuilder = _utilities.lazy_import('pulumi_aws_native.imagebuilder')
    iot = _utilities.lazy_import('pulumi_aws_native.iot')
    iotevents = _utilities.lazy_import('pulumi_aws_native.iotevents')
    iotsitewise = _utilities.lazy_import('pulumi_aws_native.iotsitewise')
    ivs = _utilities.lazy_import('pulumi_aws_native.ivs')
    kendra = _utilities.lazy_import('pulumi_aws_native.kendra')
    kinesis = _utilities.lazy_import('pulumi_aws_native.kinesis')
    kinesisfirehose = _utilities.lazy_import('pulumi_aws_native.kinesisfirehose')
    kms = _utilities.lazy_import('pulumi_aws_native.kms')
    lambda_ = _utilities.lazy_import('pulumi_aws_native.lambda_')
    licensemanager = _utilities.lazy_import('pulumi_aws_native.licensemanager')
    logs = _utilities.lazy_import('pulumi_aws_native.logs')
    macie = _utilities.lazy_import('pulumi_aws_native.macie')
    mediapackage = _utilities.lazy_import('pulumi_aws_native.mediapackage')
    mwaa = _utilities.lazy_import('pulumi_aws_native.mwaa')
    networkfirewall = _utilities.lazy_import('pulumi_aws_native.networkfirewall')
    networkmanager = _utilities.lazy_import('pulumi_aws_native.networkmanager')
    opsworkscm = _utilities.lazy_import('pulumi_aws_native.opsworkscm')
    qldb = _utilities.lazy_import('pulumi_aws_native.qldb')
    rds = _utilities.lazy_import('pulumi_aws_native.rds')
    redshift = _utilities.lazy_import('pulumi_aws_native.redshift')
    resourcegroups = _utilities.lazy_import('pulumi_aws_native.resourcegroups')
    route53 = _utilities.lazy_import('pulumi_aws_native.route53')
    route53resolver = _utilities.lazy_import('pulumi_aws_native.route53resolver')
    s3 = _utilities.lazy_import('pulumi_aws_native.s3')
    sagemaker = _utilities.lazy_import('pulumi_aws_native.sagemaker')
    servicecatalog = _utilities.lazy_import('pulumi_aws_native.servicecatalog')
    ses = _utilities.lazy_import('pulumi_aws_native.ses')
    signer = _utilities.lazy_import('pulumi_aws_native.signer')
    ssm = _utilities.lazy_import('pulumi_aws_native.ssm')
    sso = _utilities.lazy_import('pulumi_aws_native.sso')
    stepfunctions = _utilities.lazy_import('pulumi_aws_native.stepfunctions')
    synthetics = _utilities.lazy_import('pulumi_aws_native.synthetics')
    timestream = _utilities.lazy_import('pulumi_aws_native.timestream')
    wafv2 = _utilities.lazy_import('pulumi_aws_native.wafv2')
    workspaces = _utilities.lazy_import('pulumi_aws_native.workspaces')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "aws-native",
  "mod": "ACMPCA",
  "fqn": "pulumi_aws_native.acmpca",
  "classes": {
   "aws-native:ACMPCA:Certificate": "Certificate",
   "aws-native:ACMPCA:CertificateAuthority": "CertificateAuthority",
   "aws-native:ACMPCA:CertificateAuthorityActivation": "CertificateAuthorityActivation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "AccessAnalyzer",
  "fqn": "pulumi_aws_native.accessanalyzer",
  "classes": {
   "aws-native:AccessAnalyzer:Analyzer": "Analyzer"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Amplify",
  "fqn": "pulumi_aws_native.amplify",
  "classes": {
   "aws-native:Amplify:App": "App",
   "aws-native:Amplify:Branch": "Branch",
   "aws-native:Amplify:Domain": "Domain"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ApiGateway",
  "fqn": "pulumi_aws_native.apigateway",
  "classes": {
   "aws-native:ApiGateway:ApiKey": "ApiKey",
   "aws-native:ApiGateway:ClientCertificate": "ClientCertificate",
   "aws-native:ApiGateway:DocumentationVersion": "DocumentationVersion",
   "aws-native:ApiGateway:DomainName": "DomainName",
   "aws-native:ApiGateway:Model": "Model",
   "aws-native:ApiGateway:RequestValidator": "RequestValidator",
   "aws-native:ApiGateway:Resource": "Resource",
   "aws-native:ApiGateway:UsagePlanKey": "UsagePlanKey"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "AppFlow",
  "fqn": "pulumi_aws_native.appflow",
  "classes": {
   "aws-native:AppFlow:ConnectorProfile": "ConnectorProfile",
   "aws-native:AppFlow:Flow": "Flow"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ApplicationInsights",
  "fqn": "pulumi_aws_native.applicationinsights",
  "classes": {
   "aws-native:ApplicationInsights:Application": "Application"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Athena",
  "fqn": "pulumi_aws_native.athena",
  "classes": {
   "aws-native:Athena:DataCatalog": "DataCatalog",
   "aws-native:Athena:NamedQuery": "NamedQuery",
   "aws-native:Athena:WorkGroup": "WorkGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "AuditManager",
  "fqn": "pulumi_aws_native.auditmanager",
  "classes": {
   "aws-native:AuditManager:Assessment": "Assessment"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Backup",
  "fqn": "pulumi_aws_native.backup",
  "classes": {
   "aws-native:Backup:BackupPlan": "BackupPlan",
   "aws-native:Backup:BackupSelection": "BackupSelection",
   "aws-native:Backup:BackupVault": "BackupVault"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Cassandra",
  "fqn": "pulumi_aws_native.cassandra",
  "classes": {
   "aws-native:Cassandra:Keyspace": "Keyspace",
   "aws-native:Cassandra:Table": "Table"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Chatbot",
  "fqn": "pulumi_aws_native.chatbot",
  "classes": {
   "aws-native:Chatbot:SlackChannelConfiguration": "SlackChannelConfiguration"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "CloudFormation",
  "fqn": "pulumi_aws_native.cloudformation",
  "classes": {
   "aws-native:CloudFormation:ModuleDefaultVersion": "ModuleDefaultVersion",
   "aws-native:CloudFormation:ModuleVersion": "ModuleVersion",
   "aws-native:CloudFormation:StackSet": "StackSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "CloudFront",
  "fqn": "pulumi_aws_native.cloudfront",
  "classes": {
   "aws-native:CloudFront:CachePolicy": "CachePolicy",
   "aws-native:CloudFront:CloudFrontOriginAccessIdentity": "CloudFrontOriginAccessIdentity",
   "aws-native:CloudFront:Distribution": "Distribution",
   "aws-native:CloudFront:KeyGroup": "KeyGroup",
   "aws-native:CloudFront:OriginRequestPolicy": "OriginRequestPolicy",
   "aws-native:CloudFront:PublicKey": "PublicKey",
   "aws-native:CloudFront:RealtimeLogConfig": "RealtimeLogConfig"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "CloudWatch",
  "fqn": "pulumi_aws_native.cloudwatch",
  "classes": {
   "aws-native:CloudWatch:CompositeAlarm": "CompositeAlarm",
   "aws-native:CloudWatch:MetricStream": "MetricStream"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "CodeArtifact",
  "fqn": "pulumi_aws_native.codeartifact",
  "classes": {
   "aws-native:CodeArtifact:Domain": "Domain",
   "aws-native:CodeArtifact:Repository": "Repository"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "CodeGuruProfiler",
  "fqn": "pulumi_aws_native.codeguruprofiler",
  "classes": {
   "aws-native:CodeGuruProfiler:ProfilingGroup": "ProfilingGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "CodeGuruReviewer",
  "fqn": "pulumi_aws_native.codegurureviewer",
  "classes": {
   "aws-native:CodeGuruReviewer:RepositoryAssociation": "RepositoryAssociation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "CodeStarConnections",
  "fqn": "pulumi_aws_native.codestarconnections",
  "classes": {
   "aws-native:CodeStarConnections:Connection": "Connection"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Configuration",
  "fqn": "pulumi_aws_native.configuration",
  "classes": {
   "aws-native:Configuration:ConfigurationAggregator": "ConfigurationAggregator",
   "aws-native:Configuration:ConformancePack": "ConformancePack",
   "aws-native:Configuration:OrganizationConformancePack": "OrganizationConformancePack"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "DataBrew",
  "fqn": "pulumi_aws_native.databrew",
  "classes": {
   "aws-native:DataBrew:Dataset": "Dataset",
   "aws-native:DataBrew:Job": "Job",
   "aws-native:DataBrew:Project": "Project",
   "aws-native:DataBrew:Recipe": "Recipe",
   "aws-native:DataBrew:Schedule": "Schedule"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Detective",
  "fqn": "pulumi_aws_native.detective",
  "classes": {
   "aws-native:Detective:Graph": "Graph",
   "aws-native:Detective:MemberInvitation": "MemberInvitation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "DevOpsGuru",
  "fqn": "pulumi_aws_native.devopsguru",
  "classes": {
   "aws-native:DevOpsGuru:NotificationChannel": "NotificationChannel",
   "aws-native:DevOpsGuru:ResourceCollection": "ResourceCollection"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "EC2",
  "fqn": "pulumi_aws_native.ec2",
  "classes": {
   "aws-native:EC2:CarrierGateway": "CarrierGateway",
   "aws-native:EC2:EC2Fleet": "EC2Fleet",
   "aws-native:EC2:FlowLog": "FlowLog",
   "aws-native:EC2:GatewayRouteTableAssociation": "GatewayRouteTableAssociation",
   "aws-native:EC2:LocalGatewayRoute": "LocalGatewayRoute",
   "aws-native:EC2:LocalGatewayRouteTableVPCAssociation": "LocalGatewayRouteTableVPCAssociation",
   "aws-native:EC2:NetworkInsightsAnalysis": "NetworkInsightsAnalysis",
   "aws-native:EC2:NetworkInsightsPath": "NetworkInsightsPath",
   "aws-native:EC2:PrefixList": "PrefixList",
   "aws-native:EC2:SpotFleet": "SpotFleet",
   "aws-native:EC2:TransitGateway": "TransitGateway"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ECR",
  "fqn": "pulumi_aws_native.ecr",
  "classes": {
   "aws-native:ECR:Repository": "Repository"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ECS",
  "fqn": "pulumi_aws_native.ecs",
  "classes": {
   "aws-native:ECS:CapacityProvider": "CapacityProvider",
   "aws-native:ECS:Cluster": "Cluster",
   "aws-native:ECS:PrimaryTaskSet": "PrimaryTaskSet",
   "aws-native:ECS:Service": "Service",
   "aws-native:ECS:TaskDefinition": "TaskDefinition",
   "aws-native:ECS:TaskSet": "TaskSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "EFS",
  "fqn": "pulumi_aws_native.efs",
  "classes": {
   "aws-native:EFS:AccessPoint": "AccessPoint",
   "aws-native:EFS:FileSystem": "FileSystem"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "EKS",
  "fqn": "pulumi_aws_native.eks",
  "classes": {
   "aws-native:EKS:FargateProfile": "FargateProfile"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ElastiCache",
  "fqn": "pulumi_aws_native.elasticache",
  "classes": {
   "aws-native:ElastiCache:User": "User",
   "aws-native:ElastiCache:UserGroup": "UserGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ElasticLoadBalancingV2",
  "fqn": "pulumi_aws_native.elasticloadbalancingv2",
  "classes": {
   "aws-native:ElasticLoadBalancingV2:Listener": "Listener",
   "aws-native:ElasticLoadBalancingV2:ListenerRule": "ListenerRule"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "EventSchemas",
  "fqn": "pulumi_aws_native.eventschemas",
  "classes": {
   "aws-native:EventSchemas:RegistryPolicy": "RegistryPolicy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Events",
  "fqn": "pulumi_aws_native.events",
  "classes": {
   "aws-native:Events:Archive": "Archive"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "FMS",
  "fqn": "pulumi_aws_native.fms",
  "classes": {
   "aws-native:FMS:NotificationChannel": "NotificationChannel",
   "aws-native:FMS:Policy": "Policy"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "GameLift",
  "fqn": "pulumi_aws_native.gamelift",
  "classes": {
   "aws-native:GameLift:Alias": "Alias",
   "aws-native:GameLift:Fleet": "Fleet",
   "aws-native:GameLift:GameServerGroup": "GameServerGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "GlobalAccelerator",
  "fqn": "pulumi_aws_native.globalaccelerator",
  "classes": {
   "aws-native:GlobalAccelerator:Accelerator": "Accelerator",
   "aws-native:GlobalAccelerator:EndpointGroup": "EndpointGroup",
   "aws-native:GlobalAccelerator:Listener": "Listener"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Glue",
  "fqn": "pulumi_aws_native.glue",
  "classes": {
   "aws-native:Glue:Registry": "Registry",
   "aws-native:Glue:Schema": "Schema",
   "aws-native:Glue:SchemaVersion": "SchemaVersion",
   "aws-native:Glue:SchemaVersionMetadata": "SchemaVersionMetadata"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "GreengrassV2",
  "fqn": "pulumi_aws_native.greengrassv2",
  "classes": {
   "aws-native:GreengrassV2:ComponentVersion": "ComponentVersion"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "GroundStation",
  "fqn": "pulumi_aws_native.groundstation",
  "classes": {
   "aws-native:GroundStation:Config": "Config",
   "aws-native:GroundStation:DataflowEndpointGroup": "DataflowEndpointGroup",
   "aws-native:GroundStation:MissionProfile": "MissionProfile"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "IVS",
  "fqn": "pulumi_aws_native.ivs",
  "classes": {
   "aws-native:IVS:Channel": "Channel",
   "aws-native:IVS:PlaybackKeyPair": "PlaybackKeyPair",
   "aws-native:IVS:StreamKey": "StreamKey"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ImageBuilder",
  "fqn": "pulumi_aws_native.imagebuilder",
  "classes": {
   "aws-native:ImageBuilder:Component": "Component",
   "aws-native:ImageBuilder:DistributionConfiguration": "DistributionConfiguration",
   "aws-native:ImageBuilder:Image": "Image",
   "aws-native:ImageBuilder:ImagePipeline": "ImagePipeline",
   "aws-native:ImageBuilder:ImageRecipe": "ImageRecipe",
   "aws-native:ImageBuilder:InfrastructureConfiguration": "InfrastructureConfiguration"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "IoT",
  "fqn": "pulumi_aws_native.iot",
  "classes": {
   "aws-native:IoT:Authorizer": "Authorizer",
   "aws-native:IoT:Certificate": "Certificate",
   "aws-native:IoT:ProvisioningTemplate": "ProvisioningTemplate",
   "aws-native:IoT:TopicRule": "TopicRule",
   "aws-native:IoT:TopicRuleDestination": "TopicRuleDestination"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "IoTEvents",
  "fqn": "pulumi_aws_native.iotevents",
  "classes": {
   "aws-native:IoTEvents:DetectorModel": "DetectorModel",
   "aws-native:IoTEvents:Input": "Input"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "IoTSiteWise",
  "fqn": "pulumi_aws_native.iotsitewise",
  "classes": {
   "aws-native:IoTSiteWise:AccessPolicy": "AccessPolicy",
   "aws-native:IoTSiteWise:Asset": "Asset",
   "aws-native:IoTSiteWise:AssetModel": "AssetModel",
   "aws-native:IoTSiteWise:Dashboard": "Dashboard",
   "aws-native:IoTSiteWise:Gateway": "Gateway",
   "aws-native:IoTSiteWise:Portal": "Portal",
   "aws-native:IoTSiteWise:Project": "Project"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "KMS",
  "fqn": "pulumi_aws_native.kms",
  "classes": {
   "aws-native:KMS:Alias": "Alias",
   "aws-native:KMS:Key": "Key"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Kendra",
  "fqn": "pulumi_aws_native.kendra",
  "classes": {
   "aws-native:Kendra:DataSource": "DataSource",
   "aws-native:Kendra:Faq": "Faq",
   "aws-native:Kendra:Index": "Index"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Kinesis",
  "fqn": "pulumi_aws_native.kinesis",
  "classes": {
   "aws-native:Kinesis:Stream": "Stream"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "KinesisFirehose",
  "fqn": "pulumi_aws_native.kinesisfirehose",
  "classes": {
   "aws-native:KinesisFirehose:DeliveryStream": "DeliveryStream"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Lambda",
  "fqn": "pulumi_aws_native.lambda_",
  "classes": {
   "aws-native:Lambda:CodeSigningConfig": "CodeSigningConfig",
   "aws-native:Lambda:EventSourceMapping": "EventSourceMapping",
   "aws-native:Lambda:Function": "Function"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "LicenseManager",
  "fqn": "pulumi_aws_native.licensemanager",
  "classes": {
   "aws-native:LicenseManager:Grant": "Grant",
   "aws-native:LicenseManager:License": "License"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Logs",
  "fqn": "pulumi_aws_native.logs",
  "classes": {
   "aws-native:Logs:LogGroup": "LogGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "MWAA",
  "fqn": "pulumi_aws_native.mwaa",
  "classes": {
   "aws-native:MWAA:Environment": "Environment"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Macie",
  "fqn": "pulumi_aws_native.macie",
  "classes": {
   "aws-native:Macie:CustomDataIdentifier": "CustomDataIdentifier",
   "aws-native:Macie:FindingsFilter": "FindingsFilter",
   "aws-native:Macie:Session": "Session"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "MediaPackage",
  "fqn": "pulumi_aws_native.mediapackage",
  "classes": {
   "aws-native:MediaPackage:Asset": "Asset",
   "aws-native:MediaPackage:Channel": "Channel",
   "aws-native:MediaPackage:OriginEndpoint": "OriginEndpoint",
   "aws-native:MediaPackage:PackagingConfiguration": "PackagingConfiguration",
   "aws-native:MediaPackage:PackagingGroup": "PackagingGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "NetworkFirewall",
  "fqn": "pulumi_aws_native.networkfirewall",
  "classes": {
   "aws-native:NetworkFirewall:Firewall": "Firewall",
   "aws-native:NetworkFirewall:FirewallPolicy": "FirewallPolicy",
   "aws-native:NetworkFirewall:LoggingConfiguration": "LoggingConfiguration",
   "aws-native:NetworkFirewall:RuleGroup": "RuleGroup"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "NetworkManager",
  "fqn": "pulumi_aws_native.networkmanager",
  "classes": {
   "aws-native:NetworkManager:CustomerGatewayAssociation": "CustomerGatewayAssociation",
   "aws-native:NetworkManager:Device": "Device",
   "aws-native:NetworkManager:GlobalNetwork": "GlobalNetwork",
   "aws-native:NetworkManager:Link": "Link",
   "aws-native:NetworkManager:LinkAssociation": "LinkAssociation",
   "aws-native:NetworkManager:Site": "Site",
   "aws-native:NetworkManager:TransitGatewayRegistration": "TransitGatewayRegistration"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "OpsWorksCM",
  "fqn": "pulumi_aws_native.opsworkscm",
  "classes": {
   "aws-native:OpsWorksCM:Server": "Server"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "QLDB",
  "fqn": "pulumi_aws_native.qldb",
  "classes": {
   "aws-native:QLDB:Stream": "Stream"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "RDS",
  "fqn": "pulumi_aws_native.rds",
  "classes": {
   "aws-native:RDS:DBProxy": "DBProxy",
   "aws-native:RDS:DBProxyTargetGroup": "DBProxyTargetGroup",
   "aws-native:RDS:GlobalCluster": "GlobalCluster"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Redshift",
  "fqn": "pulumi_aws_native.redshift",
  "classes": {
   "aws-native:Redshift:Cluster": "Cluster"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ResourceGroups",
  "fqn": "pulumi_aws_native.resourcegroups",
  "classes": {
   "aws-native:ResourceGroups:Group": "Group"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Route53",
  "fqn": "pulumi_aws_native.route53",
  "classes": {
   "aws-native:Route53:HealthCheck": "HealthCheck",
   "aws-native:Route53:HostedZone": "HostedZone"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Route53Resolver",
  "fqn": "pulumi_aws_native.route53resolver",
  "classes": {
   "aws-native:Route53Resolver:ResolverQueryLoggingConfig": "ResolverQueryLoggingConfig",
   "aws-native:Route53Resolver:ResolverQueryLoggingConfigAssociation": "ResolverQueryLoggingConfigAssociation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "S3",
  "fqn": "pulumi_aws_native.s3",
  "classes": {
   "aws-native:S3:AccessPoint": "AccessPoint",
   "aws-native:S3:StorageLens": "StorageLens"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "SES",
  "fqn": "pulumi_aws_native.ses",
  "classes": {
   "aws-native:SES:ConfigurationSet": "ConfigurationSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "SSM",
  "fqn": "pulumi_aws_native.ssm",
  "classes": {
   "aws-native:SSM:Association": "Association",
   "aws-native:SSM:Document": "Document",
   "aws-native:SSM:ResourceDataSync": "ResourceDataSync"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "SSO",
  "fqn": "pulumi_aws_native.sso",
  "classes": {
   "aws-native:SSO:Assignment": "Assignment",
   "aws-native:SSO:InstanceAccessControlAttributeConfiguration": "InstanceAccessControlAttributeConfiguration",
   "aws-native:SSO:PermissionSet": "PermissionSet"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "SageMaker",
  "fqn": "pulumi_aws_native.sagemaker",
  "classes": {
   "aws-native:SageMaker:DataQualityJobDefinition": "DataQualityJobDefinition",
   "aws-native:SageMaker:Device": "Device",
   "aws-native:SageMaker:DeviceFleet": "DeviceFleet",
   "aws-native:SageMaker:ModelBiasJobDefinition": "ModelBiasJobDefinition",
   "aws-native:SageMaker:ModelExplainabilityJobDefinition": "ModelExplainabilityJobDefinition",
   "aws-native:SageMaker:ModelPackageGroup": "ModelPackageGroup",
   "aws-native:SageMaker:ModelQualityJobDefinition": "ModelQualityJobDefinition",
   "aws-native:SageMaker:MonitoringSchedule": "MonitoringSchedule",
   "aws-native:SageMaker:Pipeline": "Pipeline",
   "aws-native:SageMaker:Project": "Project"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "ServiceCatalog",
  "fqn": "pulumi_aws_native.servicecatalog",
  "classes": {
   "aws-native:ServiceCatalog:CloudFormationProvisionedProduct": "CloudFormationProvisionedProduct"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Signer",
  "fqn": "pulumi_aws_native.signer",
  "classes": {
   "aws-native:Signer:ProfilePermission": "ProfilePermission",
   "aws-native:Signer:SigningProfile": "SigningProfile"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "StepFunctions",
  "fqn": "pulumi_aws_native.stepfunctions",
  "classes": {
   "aws-native:StepFunctions:StateMachine": "StateMachine"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Synthetics",
  "fqn": "pulumi_aws_native.synthetics",
  "classes": {
   "aws-native:Synthetics:Canary": "Canary"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "Timestream",
  "fqn": "pulumi_aws_native.timestream",
  "classes": {
   "aws-native:Timestream:Database": "Database",
   "aws-native:Timestream:Table": "Table"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "WAFv2",
  "fqn": "pulumi_aws_native.wafv2",
  "classes": {
   "aws-native:WAFv2:IPSet": "IPSet",
   "aws-native:WAFv2:RegexPatternSet": "RegexPatternSet",
   "aws-native:WAFv2:RuleGroup": "RuleGroup",
   "aws-native:WAFv2:WebACL": "WebACL",
   "aws-native:WAFv2:WebACLAssociation": "WebACLAssociation"
  }
 },
 {
  "pkg": "aws-native",
  "mod": "WorkSpaces",
  "fqn": "pulumi_aws_native.workspaces",
  "classes": {
   "aws-native:WorkSpaces:ConnectionAlias": "ConnectionAlias"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "aws-native",
  "token": "pulumi:providers:aws-native",
  "fqn": "pulumi_aws_native",
  "class": "Provider"
 }
]
"""
)
