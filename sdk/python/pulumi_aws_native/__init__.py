# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .cidr import *
from .get_account_id import *
from .get_azs import *
from .get_partition import *
from .get_region import *
from .get_ssm_parameter_list import *
from .get_ssm_parameter_string import *
from .get_url_suffix import *
from .import_value import *
from .provider import *
from ._inputs import *
from . import outputs

# Make subpackages available:
from . import (
    accessanalyzer,
    acmpca,
    apigateway,
    appflow,
    applicationinsights,
    athena,
    auditmanager,
    backup,
    cassandra,
    chatbot,
    cloudformation,
    cloudfront,
    cloudwatch,
    codeartifact,
    codeguruprofiler,
    codegurureviewer,
    codestarconnections,
    config,
    configuration,
    databrew,
    detective,
    devopsguru,
    ec2,
    ecr,
    ecs,
    efs,
    eks,
    elasticache,
    elasticloadbalancingv2,
    events,
    eventschemas,
    fms,
    gamelift,
    globalaccelerator,
    glue,
    greengrassv2,
    groundstation,
    imagebuilder,
    iot,
    iotsitewise,
    ivs,
    kendra,
    kinesis,
    kinesisfirehose,
    kms,
    lambda_,
    licensemanager,
    logs,
    macie,
    mediapackage,
    mwaa,
    networkfirewall,
    networkmanager,
    opsworkscm,
    qldb,
    rds,
    resourcegroups,
    route53,
    route53resolver,
    s3,
    sagemaker,
    servicecatalog,
    ses,
    signer,
    ssm,
    sso,
    stepfunctions,
    synthetics,
    timestream,
    wafv2,
    workspaces,
)

def _register_module():
    import pulumi
    from . import _utilities


    class Package(pulumi.runtime.ResourcePackage):
        _version = _utilities.get_semver_version()

        def version(self):
            return Package._version

        def construct_provider(self, name: str, typ: str, urn: str) -> pulumi.ProviderResource:
            if typ != "pulumi:providers:aws-native":
                raise Exception(f"unknown provider type {typ}")
            return Provider(name, pulumi.ResourceOptions(urn=urn))


    pulumi.runtime.register_resource_package("aws-native", Package())

_register_module()
