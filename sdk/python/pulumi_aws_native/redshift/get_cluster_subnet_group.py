# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetClusterSubnetGroupResult',
    'AwaitableGetClusterSubnetGroupResult',
    'get_cluster_subnet_group',
    'get_cluster_subnet_group_output',
]

@pulumi.output_type
class GetClusterSubnetGroupResult:
    def __init__(__self__, cluster_subnet_group_name=None, description=None, subnet_ids=None, tags=None):
        if cluster_subnet_group_name and not isinstance(cluster_subnet_group_name, str):
            raise TypeError("Expected argument 'cluster_subnet_group_name' to be a str")
        pulumi.set(__self__, "cluster_subnet_group_name", cluster_subnet_group_name)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if subnet_ids and not isinstance(subnet_ids, list):
            raise TypeError("Expected argument 'subnet_ids' to be a list")
        pulumi.set(__self__, "subnet_ids", subnet_ids)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="clusterSubnetGroupName")
    def cluster_subnet_group_name(self) -> Optional[str]:
        """
        This name must be unique for all subnet groups that are created by your AWS account. If costumer do not provide it, cloudformation will generate it. Must not be "Default". 
        """
        return pulumi.get(self, "cluster_subnet_group_name")

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        The description of the parameter group.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="subnetIds")
    def subnet_ids(self) -> Optional[Sequence[str]]:
        """
        The list of VPC subnet IDs
        """
        return pulumi.get(self, "subnet_ids")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['outputs.ClusterSubnetGroupTag']]:
        """
        The list of tags for the cluster parameter group.
        """
        return pulumi.get(self, "tags")


class AwaitableGetClusterSubnetGroupResult(GetClusterSubnetGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetClusterSubnetGroupResult(
            cluster_subnet_group_name=self.cluster_subnet_group_name,
            description=self.description,
            subnet_ids=self.subnet_ids,
            tags=self.tags)


def get_cluster_subnet_group(cluster_subnet_group_name: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetClusterSubnetGroupResult:
    """
    Specifies an Amazon Redshift subnet group.


    :param str cluster_subnet_group_name: This name must be unique for all subnet groups that are created by your AWS account. If costumer do not provide it, cloudformation will generate it. Must not be "Default". 
    """
    __args__ = dict()
    __args__['clusterSubnetGroupName'] = cluster_subnet_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:redshift:getClusterSubnetGroup', __args__, opts=opts, typ=GetClusterSubnetGroupResult).value

    return AwaitableGetClusterSubnetGroupResult(
        cluster_subnet_group_name=__ret__.cluster_subnet_group_name,
        description=__ret__.description,
        subnet_ids=__ret__.subnet_ids,
        tags=__ret__.tags)


@_utilities.lift_output_func(get_cluster_subnet_group)
def get_cluster_subnet_group_output(cluster_subnet_group_name: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetClusterSubnetGroupResult]:
    """
    Specifies an Amazon Redshift subnet group.


    :param str cluster_subnet_group_name: This name must be unique for all subnet groups that are created by your AWS account. If costumer do not provide it, cloudformation will generate it. Must not be "Default". 
    """
    ...
