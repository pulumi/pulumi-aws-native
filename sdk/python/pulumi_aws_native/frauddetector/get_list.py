# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetListResult',
    'AwaitableGetListResult',
    'get_list',
    'get_list_output',
]

@pulumi.output_type
class GetListResult:
    def __init__(__self__, arn=None, created_time=None, description=None, elements=None, last_updated_time=None, tags=None, variable_type=None):
        if arn and not isinstance(arn, str):
            raise TypeError("Expected argument 'arn' to be a str")
        pulumi.set(__self__, "arn", arn)
        if created_time and not isinstance(created_time, str):
            raise TypeError("Expected argument 'created_time' to be a str")
        pulumi.set(__self__, "created_time", created_time)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if elements and not isinstance(elements, list):
            raise TypeError("Expected argument 'elements' to be a list")
        pulumi.set(__self__, "elements", elements)
        if last_updated_time and not isinstance(last_updated_time, str):
            raise TypeError("Expected argument 'last_updated_time' to be a str")
        pulumi.set(__self__, "last_updated_time", last_updated_time)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)
        if variable_type and not isinstance(variable_type, str):
            raise TypeError("Expected argument 'variable_type' to be a str")
        pulumi.set(__self__, "variable_type", variable_type)

    @property
    @pulumi.getter
    def arn(self) -> Optional[str]:
        """
        The list ARN.
        """
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> Optional[str]:
        """
        The time when the list was created.
        """
        return pulumi.get(self, "created_time")

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        The description of the list.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def elements(self) -> Optional[Sequence[str]]:
        """
        The elements in this list.
        """
        return pulumi.get(self, "elements")

    @property
    @pulumi.getter(name="lastUpdatedTime")
    def last_updated_time(self) -> Optional[str]:
        """
        The time when the list was last updated.
        """
        return pulumi.get(self, "last_updated_time")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['outputs.ListTag']]:
        """
        Tags associated with this list.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="variableType")
    def variable_type(self) -> Optional[str]:
        """
        The variable type of the list.
        """
        return pulumi.get(self, "variable_type")


class AwaitableGetListResult(GetListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetListResult(
            arn=self.arn,
            created_time=self.created_time,
            description=self.description,
            elements=self.elements,
            last_updated_time=self.last_updated_time,
            tags=self.tags,
            variable_type=self.variable_type)


def get_list(arn: Optional[str] = None,
             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetListResult:
    """
    A resource schema for a List in Amazon Fraud Detector.


    :param str arn: The list ARN.
    """
    __args__ = dict()
    __args__['arn'] = arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:frauddetector:getList', __args__, opts=opts, typ=GetListResult).value

    return AwaitableGetListResult(
        arn=pulumi.get(__ret__, 'arn'),
        created_time=pulumi.get(__ret__, 'created_time'),
        description=pulumi.get(__ret__, 'description'),
        elements=pulumi.get(__ret__, 'elements'),
        last_updated_time=pulumi.get(__ret__, 'last_updated_time'),
        tags=pulumi.get(__ret__, 'tags'),
        variable_type=pulumi.get(__ret__, 'variable_type'))


@_utilities.lift_output_func(get_list)
def get_list_output(arn: Optional[pulumi.Input[str]] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetListResult]:
    """
    A resource schema for a List in Amazon Fraud Detector.


    :param str arn: The list ARN.
    """
    ...
