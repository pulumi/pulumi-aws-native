# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetVectorBucketPolicyResult',
    'AwaitableGetVectorBucketPolicyResult',
    'get_vector_bucket_policy',
    'get_vector_bucket_policy_output',
]

@pulumi.output_type
class GetVectorBucketPolicyResult:
    def __init__(__self__, policy=None):
        if policy and not isinstance(policy, dict):
            raise TypeError("Expected argument 'policy' to be a dict")
        pulumi.set(__self__, "policy", policy)

    @_builtins.property
    @pulumi.getter
    def policy(self) -> Optional['outputs.VectorBucketPolicyPolicy']:
        return pulumi.get(self, "policy")


class AwaitableGetVectorBucketPolicyResult(GetVectorBucketPolicyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVectorBucketPolicyResult(
            policy=self.policy)


def get_vector_bucket_policy(vector_bucket_arn: Optional[_builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVectorBucketPolicyResult:
    """
    Resource Type definition for AWS::S3Vectors::VectorBucketPolicy
    """
    __args__ = dict()
    __args__['vectorBucketArn'] = vector_bucket_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:s3vectors:getVectorBucketPolicy', __args__, opts=opts, typ=GetVectorBucketPolicyResult).value

    return AwaitableGetVectorBucketPolicyResult(
        policy=pulumi.get(__ret__, 'policy'))
def get_vector_bucket_policy_output(vector_bucket_arn: Optional[pulumi.Input[_builtins.str]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetVectorBucketPolicyResult]:
    """
    Resource Type definition for AWS::S3Vectors::VectorBucketPolicy
    """
    __args__ = dict()
    __args__['vectorBucketArn'] = vector_bucket_arn
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:s3vectors:getVectorBucketPolicy', __args__, opts=opts, typ=GetVectorBucketPolicyResult)
    return __ret__.apply(lambda __response__: GetVectorBucketPolicyResult(
        policy=pulumi.get(__response__, 'policy')))
