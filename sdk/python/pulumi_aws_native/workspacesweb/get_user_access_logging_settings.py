# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetUserAccessLoggingSettingsResult',
    'AwaitableGetUserAccessLoggingSettingsResult',
    'get_user_access_logging_settings',
    'get_user_access_logging_settings_output',
]

@pulumi.output_type
class GetUserAccessLoggingSettingsResult:
    def __init__(__self__, associated_portal_arns=None, kinesis_stream_arn=None, tags=None, user_access_logging_settings_arn=None):
        if associated_portal_arns and not isinstance(associated_portal_arns, list):
            raise TypeError("Expected argument 'associated_portal_arns' to be a list")
        pulumi.set(__self__, "associated_portal_arns", associated_portal_arns)
        if kinesis_stream_arn and not isinstance(kinesis_stream_arn, str):
            raise TypeError("Expected argument 'kinesis_stream_arn' to be a str")
        pulumi.set(__self__, "kinesis_stream_arn", kinesis_stream_arn)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)
        if user_access_logging_settings_arn and not isinstance(user_access_logging_settings_arn, str):
            raise TypeError("Expected argument 'user_access_logging_settings_arn' to be a str")
        pulumi.set(__self__, "user_access_logging_settings_arn", user_access_logging_settings_arn)

    @property
    @pulumi.getter(name="associatedPortalArns")
    def associated_portal_arns(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "associated_portal_arns")

    @property
    @pulumi.getter(name="kinesisStreamArn")
    def kinesis_stream_arn(self) -> Optional[str]:
        """
        Kinesis stream ARN to which log events are published.
        """
        return pulumi.get(self, "kinesis_stream_arn")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['outputs.UserAccessLoggingSettingsTag']]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="userAccessLoggingSettingsArn")
    def user_access_logging_settings_arn(self) -> Optional[str]:
        return pulumi.get(self, "user_access_logging_settings_arn")


class AwaitableGetUserAccessLoggingSettingsResult(GetUserAccessLoggingSettingsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUserAccessLoggingSettingsResult(
            associated_portal_arns=self.associated_portal_arns,
            kinesis_stream_arn=self.kinesis_stream_arn,
            tags=self.tags,
            user_access_logging_settings_arn=self.user_access_logging_settings_arn)


def get_user_access_logging_settings(user_access_logging_settings_arn: Optional[str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUserAccessLoggingSettingsResult:
    """
    Definition of AWS::WorkSpacesWeb::UserAccessLoggingSettings Resource Type
    """
    __args__ = dict()
    __args__['userAccessLoggingSettingsArn'] = user_access_logging_settings_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:workspacesweb:getUserAccessLoggingSettings', __args__, opts=opts, typ=GetUserAccessLoggingSettingsResult).value

    return AwaitableGetUserAccessLoggingSettingsResult(
        associated_portal_arns=pulumi.get(__ret__, 'associated_portal_arns'),
        kinesis_stream_arn=pulumi.get(__ret__, 'kinesis_stream_arn'),
        tags=pulumi.get(__ret__, 'tags'),
        user_access_logging_settings_arn=pulumi.get(__ret__, 'user_access_logging_settings_arn'))


@_utilities.lift_output_func(get_user_access_logging_settings)
def get_user_access_logging_settings_output(user_access_logging_settings_arn: Optional[pulumi.Input[str]] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetUserAccessLoggingSettingsResult]:
    """
    Definition of AWS::WorkSpacesWeb::UserAccessLoggingSettings Resource Type
    """
    ...
