# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetRegexPatternSetResult',
    'AwaitableGetRegexPatternSetResult',
    'get_regex_pattern_set',
    'get_regex_pattern_set_output',
]

@pulumi.output_type
class GetRegexPatternSetResult:
    def __init__(__self__, id=None, regex_pattern_strings=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if regex_pattern_strings and not isinstance(regex_pattern_strings, list):
            raise TypeError("Expected argument 'regex_pattern_strings' to be a list")
        pulumi.set(__self__, "regex_pattern_strings", regex_pattern_strings)

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="regexPatternStrings")
    def regex_pattern_strings(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "regex_pattern_strings")


class AwaitableGetRegexPatternSetResult(GetRegexPatternSetResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRegexPatternSetResult(
            id=self.id,
            regex_pattern_strings=self.regex_pattern_strings)


def get_regex_pattern_set(id: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRegexPatternSetResult:
    """
    Resource Type definition for AWS::WAFRegional::RegexPatternSet
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:wafregional:getRegexPatternSet', __args__, opts=opts, typ=GetRegexPatternSetResult).value

    return AwaitableGetRegexPatternSetResult(
        id=pulumi.get(__ret__, 'id'),
        regex_pattern_strings=pulumi.get(__ret__, 'regex_pattern_strings'))


@_utilities.lift_output_func(get_regex_pattern_set)
def get_regex_pattern_set_output(id: Optional[pulumi.Input[str]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRegexPatternSetResult]:
    """
    Resource Type definition for AWS::WAFRegional::RegexPatternSet
    """
    ...
