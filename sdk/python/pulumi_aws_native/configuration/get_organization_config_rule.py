# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetOrganizationConfigRuleResult',
    'AwaitableGetOrganizationConfigRuleResult',
    'get_organization_config_rule',
    'get_organization_config_rule_output',
]

@pulumi.output_type
class GetOrganizationConfigRuleResult:
    def __init__(__self__, excluded_accounts=None, id=None, organization_custom_rule_metadata=None, organization_managed_rule_metadata=None):
        if excluded_accounts and not isinstance(excluded_accounts, list):
            raise TypeError("Expected argument 'excluded_accounts' to be a list")
        pulumi.set(__self__, "excluded_accounts", excluded_accounts)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if organization_custom_rule_metadata and not isinstance(organization_custom_rule_metadata, dict):
            raise TypeError("Expected argument 'organization_custom_rule_metadata' to be a dict")
        pulumi.set(__self__, "organization_custom_rule_metadata", organization_custom_rule_metadata)
        if organization_managed_rule_metadata and not isinstance(organization_managed_rule_metadata, dict):
            raise TypeError("Expected argument 'organization_managed_rule_metadata' to be a dict")
        pulumi.set(__self__, "organization_managed_rule_metadata", organization_managed_rule_metadata)

    @property
    @pulumi.getter(name="excludedAccounts")
    def excluded_accounts(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "excluded_accounts")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="organizationCustomRuleMetadata")
    def organization_custom_rule_metadata(self) -> Optional['outputs.OrganizationConfigRuleOrganizationCustomRuleMetadata']:
        return pulumi.get(self, "organization_custom_rule_metadata")

    @property
    @pulumi.getter(name="organizationManagedRuleMetadata")
    def organization_managed_rule_metadata(self) -> Optional['outputs.OrganizationConfigRuleOrganizationManagedRuleMetadata']:
        return pulumi.get(self, "organization_managed_rule_metadata")


class AwaitableGetOrganizationConfigRuleResult(GetOrganizationConfigRuleResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrganizationConfigRuleResult(
            excluded_accounts=self.excluded_accounts,
            id=self.id,
            organization_custom_rule_metadata=self.organization_custom_rule_metadata,
            organization_managed_rule_metadata=self.organization_managed_rule_metadata)


def get_organization_config_rule(id: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOrganizationConfigRuleResult:
    """
    Resource Type definition for AWS::Config::OrganizationConfigRule
    """
    __args__ = dict()
    __args__['id'] = id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aws-native:configuration:getOrganizationConfigRule', __args__, opts=opts, typ=GetOrganizationConfigRuleResult).value

    return AwaitableGetOrganizationConfigRuleResult(
        excluded_accounts=__ret__.excluded_accounts,
        id=__ret__.id,
        organization_custom_rule_metadata=__ret__.organization_custom_rule_metadata,
        organization_managed_rule_metadata=__ret__.organization_managed_rule_metadata)


@_utilities.lift_output_func(get_organization_config_rule)
def get_organization_config_rule_output(id: Optional[pulumi.Input[str]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOrganizationConfigRuleResult]:
    """
    Resource Type definition for AWS::Config::OrganizationConfigRule
    """
    ...
