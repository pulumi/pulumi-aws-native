# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetRestoreTestingSelectionResult',
    'AwaitableGetRestoreTestingSelectionResult',
    'get_restore_testing_selection',
    'get_restore_testing_selection_output',
]

@pulumi.output_type
class GetRestoreTestingSelectionResult:
    def __init__(__self__, iam_role_arn=None, protected_resource_arns=None, protected_resource_conditions=None, restore_metadata_overrides=None, validation_window_hours=None):
        if iam_role_arn and not isinstance(iam_role_arn, str):
            raise TypeError("Expected argument 'iam_role_arn' to be a str")
        pulumi.set(__self__, "iam_role_arn", iam_role_arn)
        if protected_resource_arns and not isinstance(protected_resource_arns, list):
            raise TypeError("Expected argument 'protected_resource_arns' to be a list")
        pulumi.set(__self__, "protected_resource_arns", protected_resource_arns)
        if protected_resource_conditions and not isinstance(protected_resource_conditions, dict):
            raise TypeError("Expected argument 'protected_resource_conditions' to be a dict")
        pulumi.set(__self__, "protected_resource_conditions", protected_resource_conditions)
        if restore_metadata_overrides and not isinstance(restore_metadata_overrides, dict):
            raise TypeError("Expected argument 'restore_metadata_overrides' to be a dict")
        pulumi.set(__self__, "restore_metadata_overrides", restore_metadata_overrides)
        if validation_window_hours and not isinstance(validation_window_hours, int):
            raise TypeError("Expected argument 'validation_window_hours' to be a int")
        pulumi.set(__self__, "validation_window_hours", validation_window_hours)

    @property
    @pulumi.getter(name="iamRoleArn")
    def iam_role_arn(self) -> Optional[str]:
        """
        The Amazon Resource Name (ARN) of the IAM role that AWS Backup uses to create the target resource; for example: `arn:aws:iam::123456789012:role/S3Access` .
        """
        return pulumi.get(self, "iam_role_arn")

    @property
    @pulumi.getter(name="protectedResourceArns")
    def protected_resource_arns(self) -> Optional[Sequence[str]]:
        """
        You can include specific ARNs, such as `ProtectedResourceArns: ["arn:aws:...", "arn:aws:..."]` or you can include a wildcard: `ProtectedResourceArns: ["*"]` , but not both.
        """
        return pulumi.get(self, "protected_resource_arns")

    @property
    @pulumi.getter(name="protectedResourceConditions")
    def protected_resource_conditions(self) -> Optional['outputs.RestoreTestingSelectionProtectedResourceConditions']:
        """
        In a resource testing selection, this parameter filters by specific conditions such as `StringEquals` or `StringNotEquals` .
        """
        return pulumi.get(self, "protected_resource_conditions")

    @property
    @pulumi.getter(name="restoreMetadataOverrides")
    def restore_metadata_overrides(self) -> Optional[Mapping[str, str]]:
        """
        You can override certain restore metadata keys by including the parameter `RestoreMetadataOverrides` in the body of `RestoreTestingSelection` . Key values are not case sensitive.

        See the complete list of [restore testing inferred metadata](https://docs.aws.amazon.com/aws-backup/latest/devguide/restore-testing-inferred-metadata.html) .
        """
        return pulumi.get(self, "restore_metadata_overrides")

    @property
    @pulumi.getter(name="validationWindowHours")
    def validation_window_hours(self) -> Optional[int]:
        """
        This is amount of hours (1 to 168) available to run a validation script on the data. The data will be deleted upon the completion of the validation script or the end of the specified retention period, whichever comes first.
        """
        return pulumi.get(self, "validation_window_hours")


class AwaitableGetRestoreTestingSelectionResult(GetRestoreTestingSelectionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRestoreTestingSelectionResult(
            iam_role_arn=self.iam_role_arn,
            protected_resource_arns=self.protected_resource_arns,
            protected_resource_conditions=self.protected_resource_conditions,
            restore_metadata_overrides=self.restore_metadata_overrides,
            validation_window_hours=self.validation_window_hours)


def get_restore_testing_selection(restore_testing_plan_name: Optional[str] = None,
                                  restore_testing_selection_name: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRestoreTestingSelectionResult:
    """
    Resource Type definition for AWS::Backup::RestoreTestingSelection


    :param str restore_testing_plan_name: Unique string that is the name of the restore testing plan.
           
           The name cannot be changed after creation. The name must consist of only alphanumeric characters and underscores. Maximum length is 50.
    :param str restore_testing_selection_name: The unique name of the restore testing selection that belongs to the related restore testing plan.
    """
    __args__ = dict()
    __args__['restoreTestingPlanName'] = restore_testing_plan_name
    __args__['restoreTestingSelectionName'] = restore_testing_selection_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:backup:getRestoreTestingSelection', __args__, opts=opts, typ=GetRestoreTestingSelectionResult).value

    return AwaitableGetRestoreTestingSelectionResult(
        iam_role_arn=pulumi.get(__ret__, 'iam_role_arn'),
        protected_resource_arns=pulumi.get(__ret__, 'protected_resource_arns'),
        protected_resource_conditions=pulumi.get(__ret__, 'protected_resource_conditions'),
        restore_metadata_overrides=pulumi.get(__ret__, 'restore_metadata_overrides'),
        validation_window_hours=pulumi.get(__ret__, 'validation_window_hours'))


@_utilities.lift_output_func(get_restore_testing_selection)
def get_restore_testing_selection_output(restore_testing_plan_name: Optional[pulumi.Input[str]] = None,
                                         restore_testing_selection_name: Optional[pulumi.Input[str]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRestoreTestingSelectionResult]:
    """
    Resource Type definition for AWS::Backup::RestoreTestingSelection


    :param str restore_testing_plan_name: Unique string that is the name of the restore testing plan.
           
           The name cannot be changed after creation. The name must consist of only alphanumeric characters and underscores. Maximum length is 50.
    :param str restore_testing_selection_name: The unique name of the restore testing selection that belongs to the related restore testing plan.
    """
    ...
