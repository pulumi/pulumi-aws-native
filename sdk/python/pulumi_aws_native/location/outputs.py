# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'MapConfiguration',
    'PlaceIndexDataSourceConfiguration',
]

@pulumi.output_type
class MapConfiguration(dict):
    def __init__(__self__, *,
                 style: str):
        MapConfiguration._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            style=style,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             style: str,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("style", style)

    @property
    @pulumi.getter
    def style(self) -> str:
        return pulumi.get(self, "style")


@pulumi.output_type
class PlaceIndexDataSourceConfiguration(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "intendedUse":
            suggest = "intended_use"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in PlaceIndexDataSourceConfiguration. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        PlaceIndexDataSourceConfiguration.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        PlaceIndexDataSourceConfiguration.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 intended_use: Optional['PlaceIndexIntendedUse'] = None):
        PlaceIndexDataSourceConfiguration._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            intended_use=intended_use,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             intended_use: Optional['PlaceIndexIntendedUse'] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if intended_use is not None:
            _setter("intended_use", intended_use)

    @property
    @pulumi.getter(name="intendedUse")
    def intended_use(self) -> Optional['PlaceIndexIntendedUse']:
        return pulumi.get(self, "intended_use")


