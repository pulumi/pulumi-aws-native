# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'GuardHookAction',
    'GuardHookFailureMode',
    'GuardHookHookStatus',
    'GuardHookInvocationPoint',
    'GuardHookStackFiltersPropertiesFilteringCriteria',
    'GuardHookTargetOperation',
    'HookTypeConfigConfigurationAlias',
    'HookVersionVisibility',
    'LambdaHookAction',
    'LambdaHookFailureMode',
    'LambdaHookHookStatus',
    'LambdaHookInvocationPoint',
    'LambdaHookStackFiltersPropertiesFilteringCriteria',
    'LambdaHookTargetOperation',
    'ModuleVersionVisibility',
    'PublicTypeVersionType',
    'PublisherIdentityProvider',
    'PublisherStatus',
    'ResourceVersionProvisioningType',
    'ResourceVersionVisibility',
    'StackCapabilitiesItem',
    'StackSetCallAs',
    'StackSetCapability',
    'StackSetConcurrencyMode',
    'StackSetDeploymentTargetsAccountFilterType',
    'StackSetPermissionModel',
    'StackSetRegionConcurrencyType',
    'StackStatus',
    'TypeActivationType',
    'TypeActivationVersionBump',
]


class GuardHookAction(str, Enum):
    """
    Target actions are the type of operation hooks will be executed at.
    """
    CREATE = "CREATE"
    UPDATE = "UPDATE"
    DELETE = "DELETE"


class GuardHookFailureMode(str, Enum):
    """
    Attribute to specify CloudFormation behavior on hook failure.
    """
    FAIL = "FAIL"
    WARN = "WARN"


class GuardHookHookStatus(str, Enum):
    """
    Attribute to specify which stacks this hook applies to or should get invoked for
    """
    ENABLED = "ENABLED"
    DISABLED = "DISABLED"


class GuardHookInvocationPoint(str, Enum):
    """
    Invocation points are the point in provisioning workflow where hooks will be executed.
    """
    PRE_PROVISION = "PRE_PROVISION"


class GuardHookStackFiltersPropertiesFilteringCriteria(str, Enum):
    """
    Attribute to specify the filtering behavior. ANY will make the Hook pass if one filter matches. ALL will make the Hook pass if all filters match
    """
    ALL = "ALL"
    ANY = "ANY"


class GuardHookTargetOperation(str, Enum):
    """
    Which operations should this Hook run against? Resource changes, stacks or change sets.
    """
    RESOURCE = "RESOURCE"
    STACK = "STACK"
    CHANGE_SET = "CHANGE_SET"


class HookTypeConfigConfigurationAlias(str, Enum):
    """
    An alias by which to refer to this extension configuration data.
    """
    DEFAULT = "default"


class HookVersionVisibility(str, Enum):
    """
    The scope at which the type is visible and usable in CloudFormation operations.

    Valid values include:

    PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.

    PUBLIC: The type is publically visible and usable within any Amazon account.
    """
    PUBLIC = "PUBLIC"
    PRIVATE = "PRIVATE"


class LambdaHookAction(str, Enum):
    """
    Target actions are the type of operation hooks will be executed at.
    """
    CREATE = "CREATE"
    UPDATE = "UPDATE"
    DELETE = "DELETE"


class LambdaHookFailureMode(str, Enum):
    """
    Attribute to specify CloudFormation behavior on hook failure.
    """
    FAIL = "FAIL"
    WARN = "WARN"


class LambdaHookHookStatus(str, Enum):
    """
    Attribute to specify which stacks this hook applies to or should get invoked for
    """
    ENABLED = "ENABLED"
    DISABLED = "DISABLED"


class LambdaHookInvocationPoint(str, Enum):
    """
    Invocation points are the point in provisioning workflow where hooks will be executed.
    """
    PRE_PROVISION = "PRE_PROVISION"


class LambdaHookStackFiltersPropertiesFilteringCriteria(str, Enum):
    """
    Attribute to specify the filtering behavior. ANY will make the Hook pass if one filter matches. ALL will make the Hook pass if all filters match
    """
    ALL = "ALL"
    ANY = "ANY"


class LambdaHookTargetOperation(str, Enum):
    """
    Which operations should this Hook run against? Resource changes, stacks or change sets.
    """
    RESOURCE = "RESOURCE"
    STACK = "STACK"
    CHANGE_SET = "CHANGE_SET"


class ModuleVersionVisibility(str, Enum):
    """
    The scope at which the type is visible and usable in CloudFormation operations.

    The only allowed value at present is:

    PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
    """
    PRIVATE = "PRIVATE"


class PublicTypeVersionType(str, Enum):
    """
    The kind of extension
    """
    RESOURCE = "RESOURCE"
    MODULE = "MODULE"
    HOOK = "HOOK"


class PublisherIdentityProvider(str, Enum):
    """
    The type of account used as the identity provider when registering this publisher with CloudFormation.
    """
    AWS_MARKETPLACE = "AWS_Marketplace"
    GIT_HUB = "GitHub"
    BITBUCKET = "Bitbucket"


class PublisherStatus(str, Enum):
    """
    Whether the publisher is verified.
    """
    VERIFIED = "VERIFIED"
    UNVERIFIED = "UNVERIFIED"


class ResourceVersionProvisioningType(str, Enum):
    """
    The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.
    """
    NON_PROVISIONABLE = "NON_PROVISIONABLE"
    IMMUTABLE = "IMMUTABLE"
    FULLY_MUTABLE = "FULLY_MUTABLE"


class ResourceVersionVisibility(str, Enum):
    """
    The scope at which the type is visible and usable in CloudFormation operations.

    Valid values include:

    PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.

    PUBLIC: The type is publically visible and usable within any Amazon account.
    """
    PUBLIC = "PUBLIC"
    PRIVATE = "PRIVATE"


class StackCapabilitiesItem(str, Enum):
    CAPABILITY_IAM = "CAPABILITY_IAM"
    CAPABILITY_NAMED_IAM = "CAPABILITY_NAMED_IAM"
    CAPABILITY_AUTO_EXPAND = "CAPABILITY_AUTO_EXPAND"


class StackSetCallAs(str, Enum):
    """
    Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
    """
    SELF = "SELF"
    DELEGATED_ADMIN = "DELEGATED_ADMIN"


class StackSetCapability(str, Enum):
    CAPABILITY_IAM = "CAPABILITY_IAM"
    CAPABILITY_NAMED_IAM = "CAPABILITY_NAMED_IAM"
    CAPABILITY_AUTO_EXPAND = "CAPABILITY_AUTO_EXPAND"


class StackSetConcurrencyMode(str, Enum):
    """
    Specifies how the concurrency level behaves during the operation execution.
    """
    STRICT_FAILURE_TOLERANCE = "STRICT_FAILURE_TOLERANCE"
    SOFT_FAILURE_TOLERANCE = "SOFT_FAILURE_TOLERANCE"


class StackSetDeploymentTargetsAccountFilterType(str, Enum):
    """
    The filter type you want to apply on organizational units and accounts.
    """
    NONE = "NONE"
    UNION = "UNION"
    INTERSECTION = "INTERSECTION"
    DIFFERENCE = "DIFFERENCE"


class StackSetPermissionModel(str, Enum):
    """
    Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
    """
    SERVICE_MANAGED = "SERVICE_MANAGED"
    SELF_MANAGED = "SELF_MANAGED"


class StackSetRegionConcurrencyType(str, Enum):
    """
    The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
    """
    SEQUENTIAL = "SEQUENTIAL"
    PARALLEL = "PARALLEL"


class StackStatus(str, Enum):
    """
    Current status of the stack.
    """
    CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS"
    CREATE_FAILED = "CREATE_FAILED"
    CREATE_COMPLETE = "CREATE_COMPLETE"
    ROLLBACK_IN_PROGRESS = "ROLLBACK_IN_PROGRESS"
    ROLLBACK_FAILED = "ROLLBACK_FAILED"
    ROLLBACK_COMPLETE = "ROLLBACK_COMPLETE"
    DELETE_IN_PROGRESS = "DELETE_IN_PROGRESS"
    DELETE_FAILED = "DELETE_FAILED"
    DELETE_COMPLETE = "DELETE_COMPLETE"
    UPDATE_IN_PROGRESS = "UPDATE_IN_PROGRESS"
    UPDATE_COMPLETE_CLEANUP_IN_PROGRESS = "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS"
    UPDATE_COMPLETE = "UPDATE_COMPLETE"
    UPDATE_FAILED = "UPDATE_FAILED"
    UPDATE_ROLLBACK_IN_PROGRESS = "UPDATE_ROLLBACK_IN_PROGRESS"
    UPDATE_ROLLBACK_FAILED = "UPDATE_ROLLBACK_FAILED"
    UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS = "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS"
    UPDATE_ROLLBACK_COMPLETE = "UPDATE_ROLLBACK_COMPLETE"
    REVIEW_IN_PROGRESS = "REVIEW_IN_PROGRESS"
    IMPORT_IN_PROGRESS = "IMPORT_IN_PROGRESS"
    IMPORT_COMPLETE = "IMPORT_COMPLETE"
    IMPORT_ROLLBACK_IN_PROGRESS = "IMPORT_ROLLBACK_IN_PROGRESS"
    IMPORT_ROLLBACK_FAILED = "IMPORT_ROLLBACK_FAILED"
    IMPORT_ROLLBACK_COMPLETE = "IMPORT_ROLLBACK_COMPLETE"


class TypeActivationType(str, Enum):
    """
    The kind of extension
    """
    RESOURCE = "RESOURCE"
    MODULE = "MODULE"
    HOOK = "HOOK"


class TypeActivationVersionBump(str, Enum):
    """
    Manually updates a previously-enabled type to a new major or minor version, if available. You can also use this parameter to update the value of AutoUpdateEnabled
    """
    MAJOR = "MAJOR"
    MINOR = "MINOR"
