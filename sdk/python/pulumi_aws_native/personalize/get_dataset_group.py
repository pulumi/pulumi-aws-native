# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetDatasetGroupResult',
    'AwaitableGetDatasetGroupResult',
    'get_dataset_group',
    'get_dataset_group_output',
]

@pulumi.output_type
class GetDatasetGroupResult:
    def __init__(__self__, dataset_group_arn=None):
        if dataset_group_arn and not isinstance(dataset_group_arn, str):
            raise TypeError("Expected argument 'dataset_group_arn' to be a str")
        pulumi.set(__self__, "dataset_group_arn", dataset_group_arn)

    @property
    @pulumi.getter(name="datasetGroupArn")
    def dataset_group_arn(self) -> Optional[str]:
        """
        The Amazon Resource Name (ARN) of the dataset group.
        """
        return pulumi.get(self, "dataset_group_arn")


class AwaitableGetDatasetGroupResult(GetDatasetGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDatasetGroupResult(
            dataset_group_arn=self.dataset_group_arn)


def get_dataset_group(dataset_group_arn: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDatasetGroupResult:
    """
    Resource Schema for AWS::Personalize::DatasetGroup.


    :param str dataset_group_arn: The Amazon Resource Name (ARN) of the dataset group.
    """
    __args__ = dict()
    __args__['datasetGroupArn'] = dataset_group_arn
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:personalize:getDatasetGroup', __args__, opts=opts, typ=GetDatasetGroupResult).value

    return AwaitableGetDatasetGroupResult(
        dataset_group_arn=pulumi.get(__ret__, 'dataset_group_arn'))
def get_dataset_group_output(dataset_group_arn: Optional[pulumi.Input[str]] = None,
                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDatasetGroupResult]:
    """
    Resource Schema for AWS::Personalize::DatasetGroup.


    :param str dataset_group_arn: The Amazon Resource Name (ARN) of the dataset group.
    """
    __args__ = dict()
    __args__['datasetGroupArn'] = dataset_group_arn
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('aws-native:personalize:getDatasetGroup', __args__, opts=opts, typ=GetDatasetGroupResult)
    return __ret__.apply(lambda __response__: GetDatasetGroupResult(
        dataset_group_arn=pulumi.get(__response__, 'dataset_group_arn')))
