# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *

__all__ = [
    'AgentPermissionsPropertiesArgs',
    'ProfilingGroupChannelArgs',
]

@pulumi.input_type
class AgentPermissionsPropertiesArgs:
    def __init__(__self__, *,
                 principals: pulumi.Input[Sequence[pulumi.Input[str]]]):
        """
        The agent permissions attached to this profiling group.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] principals: The principals for the agent permissions.
        """
        pulumi.set(__self__, "principals", principals)

    @property
    @pulumi.getter
    def principals(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        The principals for the agent permissions.
        """
        return pulumi.get(self, "principals")

    @principals.setter
    def principals(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "principals", value)


@pulumi.input_type
class ProfilingGroupChannelArgs:
    def __init__(__self__, *,
                 channel_uri: pulumi.Input[str],
                 channel_id: Optional[pulumi.Input[str]] = None):
        """
        Notification medium for users to get alerted for events that occur in application profile. We support SNS topic as a notification channel.
        """
        pulumi.set(__self__, "channel_uri", channel_uri)
        if channel_id is not None:
            pulumi.set(__self__, "channel_id", channel_id)

    @property
    @pulumi.getter(name="channelUri")
    def channel_uri(self) -> pulumi.Input[str]:
        return pulumi.get(self, "channel_uri")

    @channel_uri.setter
    def channel_uri(self, value: pulumi.Input[str]):
        pulumi.set(self, "channel_uri", value)

    @property
    @pulumi.getter(name="channelId")
    def channel_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "channel_id")

    @channel_id.setter
    def channel_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "channel_id", value)


