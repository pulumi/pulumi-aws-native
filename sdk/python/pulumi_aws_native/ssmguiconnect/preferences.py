# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['PreferencesArgs', 'Preferences']

@pulumi.input_type
class PreferencesArgs:
    def __init__(__self__, *,
                 idle_connection: Optional[pulumi.Input[Sequence[pulumi.Input['PreferencesIdleConnectionPreferencesArgs']]]] = None):
        """
        The set of arguments for constructing a Preferences resource.
        :param pulumi.Input[Sequence[pulumi.Input['PreferencesIdleConnectionPreferencesArgs']]] idle_connection: A map for Idle Connection Preferences
        """
        if idle_connection is not None:
            pulumi.set(__self__, "idle_connection", idle_connection)

    @property
    @pulumi.getter(name="idleConnection")
    def idle_connection(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PreferencesIdleConnectionPreferencesArgs']]]]:
        """
        A map for Idle Connection Preferences
        """
        return pulumi.get(self, "idle_connection")

    @idle_connection.setter
    def idle_connection(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PreferencesIdleConnectionPreferencesArgs']]]]):
        pulumi.set(self, "idle_connection", value)


class Preferences(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 idle_connection: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PreferencesIdleConnectionPreferencesArgs']]]]] = None,
                 __props__=None):
        """
        Definition of AWS::SSMGuiConnect::Preferences Resource Type

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PreferencesIdleConnectionPreferencesArgs']]]] idle_connection: A map for Idle Connection Preferences
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[PreferencesArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Definition of AWS::SSMGuiConnect::Preferences Resource Type

        :param str resource_name: The name of the resource.
        :param PreferencesArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PreferencesArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 idle_connection: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PreferencesIdleConnectionPreferencesArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PreferencesArgs.__new__(PreferencesArgs)

            __props__.__dict__["idle_connection"] = idle_connection
            __props__.__dict__["account_id"] = None
        super(Preferences, __self__).__init__(
            'aws-native:ssmguiconnect:Preferences',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Preferences':
        """
        Get an existing Preferences resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = PreferencesArgs.__new__(PreferencesArgs)

        __props__.__dict__["account_id"] = None
        __props__.__dict__["idle_connection"] = None
        return Preferences(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[str]:
        """
        The AWS Account Id that the preference is associated with, used as the unique identifier for this resource.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter(name="idleConnection")
    def idle_connection(self) -> pulumi.Output[Optional[Sequence['outputs.PreferencesIdleConnectionPreferences']]]:
        """
        A map for Idle Connection Preferences
        """
        return pulumi.get(self, "idle_connection")

