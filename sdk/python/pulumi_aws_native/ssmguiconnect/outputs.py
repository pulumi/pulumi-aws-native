# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'PreferencesIdleConnectionAlert',
    'PreferencesIdleConnectionPreferences',
    'PreferencesIdleConnectionTimeout',
]

@pulumi.output_type
class PreferencesIdleConnectionAlert(dict):
    def __init__(__self__, *,
                 value: int,
                 type: Optional['PreferencesIdleConnectionAlertType'] = None):
        pulumi.set(__self__, "value", value)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def value(self) -> int:
        return pulumi.get(self, "value")

    @property
    @pulumi.getter
    def type(self) -> Optional['PreferencesIdleConnectionAlertType']:
        return pulumi.get(self, "type")


@pulumi.output_type
class PreferencesIdleConnectionPreferences(dict):
    """
    Idle Connection Preferences
    """
    def __init__(__self__, *,
                 alert: Optional['outputs.PreferencesIdleConnectionAlert'] = None,
                 timeout: Optional['outputs.PreferencesIdleConnectionTimeout'] = None):
        """
        Idle Connection Preferences
        """
        if alert is not None:
            pulumi.set(__self__, "alert", alert)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)

    @property
    @pulumi.getter
    def alert(self) -> Optional['outputs.PreferencesIdleConnectionAlert']:
        return pulumi.get(self, "alert")

    @property
    @pulumi.getter
    def timeout(self) -> Optional['outputs.PreferencesIdleConnectionTimeout']:
        return pulumi.get(self, "timeout")


@pulumi.output_type
class PreferencesIdleConnectionTimeout(dict):
    def __init__(__self__, *,
                 value: int,
                 type: Optional['PreferencesIdleConnectionTimeoutType'] = None):
        pulumi.set(__self__, "value", value)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def value(self) -> int:
        return pulumi.get(self, "value")

    @property
    @pulumi.getter
    def type(self) -> Optional['PreferencesIdleConnectionTimeoutType']:
        return pulumi.get(self, "type")


