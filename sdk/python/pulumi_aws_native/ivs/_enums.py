# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import pulumi
from enum import Enum

__all__ = [
    'ChannelContainerFormat',
    'ChannelLatencyMode',
    'ChannelMultitrackInputConfigurationMaximumResolution',
    'ChannelMultitrackInputConfigurationPolicy',
    'ChannelPreset',
    'ChannelType',
    'IngestConfigurationIngestProtocol',
    'IngestConfigurationState',
    'RecordingConfigurationRenditionConfigurationRenditionSelection',
    'RecordingConfigurationRenditionConfigurationRenditionsItem',
    'RecordingConfigurationState',
    'RecordingConfigurationThumbnailConfigurationRecordingMode',
    'RecordingConfigurationThumbnailConfigurationResolution',
    'RecordingConfigurationThumbnailConfigurationStorageItem',
    'StageAutoParticipantRecordingConfigurationMediaTypesItem',
]


@pulumi.type_token("aws-native:ivs:ChannelContainerFormat")
class ChannelContainerFormat(builtins.str, Enum):
    """
    Indicates which content-packaging format is used (MPEG-TS or fMP4). If multitrackInputConfiguration is specified and enabled is true, then containerFormat is required and must be set to FRAGMENTED_MP4. Otherwise, containerFormat may be set to TS or FRAGMENTED_MP4. Default: TS.
    """
    TS = "TS"
    FRAGMENTED_MP4 = "FRAGMENTED_MP4"


@pulumi.type_token("aws-native:ivs:ChannelLatencyMode")
class ChannelLatencyMode(builtins.str, Enum):
    """
    Channel latency mode.
    """
    NORMAL = "NORMAL"
    LOW = "LOW"


@pulumi.type_token("aws-native:ivs:ChannelMultitrackInputConfigurationMaximumResolution")
class ChannelMultitrackInputConfigurationMaximumResolution(builtins.str, Enum):
    """
    Maximum resolution for multitrack input. Required if enabled is true.
    """
    SD = "SD"
    HD = "HD"
    FULL_HD = "FULL_HD"


@pulumi.type_token("aws-native:ivs:ChannelMultitrackInputConfigurationPolicy")
class ChannelMultitrackInputConfigurationPolicy(builtins.str, Enum):
    """
    Indicates whether multitrack input is allowed or required. Required if enabled is true.
    """
    ALLOW = "ALLOW"
    REQUIRE = "REQUIRE"


@pulumi.type_token("aws-native:ivs:ChannelPreset")
class ChannelPreset(builtins.str, Enum):
    """
    Optional transcode preset for the channel. This is selectable only for ADVANCED_HD and ADVANCED_SD channel types. For those channel types, the default preset is HIGHER_BANDWIDTH_DELIVERY. For other channel types (BASIC and STANDARD), preset is the empty string ("").
    """
    EMPTY = ""
    HIGHER_BANDWIDTH_DELIVERY = "HIGHER_BANDWIDTH_DELIVERY"
    CONSTRAINED_BANDWIDTH_DELIVERY = "CONSTRAINED_BANDWIDTH_DELIVERY"


@pulumi.type_token("aws-native:ivs:ChannelType")
class ChannelType(builtins.str, Enum):
    """
    Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.
    """
    STANDARD = "STANDARD"
    BASIC = "BASIC"
    ADVANCED_SD = "ADVANCED_SD"
    ADVANCED_HD = "ADVANCED_HD"


@pulumi.type_token("aws-native:ivs:IngestConfigurationIngestProtocol")
class IngestConfigurationIngestProtocol(builtins.str, Enum):
    """
    Ingest Protocol.
    """
    RTMP = "RTMP"
    RTMPS = "RTMPS"


@pulumi.type_token("aws-native:ivs:IngestConfigurationState")
class IngestConfigurationState(builtins.str, Enum):
    """
    State of IngestConfiguration which determines whether IngestConfiguration is in use or not.
    """
    ACTIVE = "ACTIVE"
    INACTIVE = "INACTIVE"


@pulumi.type_token("aws-native:ivs:RecordingConfigurationRenditionConfigurationRenditionSelection")
class RecordingConfigurationRenditionConfigurationRenditionSelection(builtins.str, Enum):
    """
    Resolution Selection indicates which set of renditions are recorded for a stream.
    """
    ALL = "ALL"
    NONE = "NONE"
    CUSTOM = "CUSTOM"


@pulumi.type_token("aws-native:ivs:RecordingConfigurationRenditionConfigurationRenditionsItem")
class RecordingConfigurationRenditionConfigurationRenditionsItem(builtins.str, Enum):
    FULL_HD = "FULL_HD"
    HD = "HD"
    SD = "SD"
    LOWEST_RESOLUTION = "LOWEST_RESOLUTION"


@pulumi.type_token("aws-native:ivs:RecordingConfigurationState")
class RecordingConfigurationState(builtins.str, Enum):
    """
    Recording Configuration State.
    """
    CREATING = "CREATING"
    CREATE_FAILED = "CREATE_FAILED"
    ACTIVE = "ACTIVE"


@pulumi.type_token("aws-native:ivs:RecordingConfigurationThumbnailConfigurationRecordingMode")
class RecordingConfigurationThumbnailConfigurationRecordingMode(builtins.str, Enum):
    """
    Thumbnail Recording Mode, which determines whether thumbnails are recorded at an interval or are disabled.
    """
    INTERVAL = "INTERVAL"
    DISABLED = "DISABLED"


@pulumi.type_token("aws-native:ivs:RecordingConfigurationThumbnailConfigurationResolution")
class RecordingConfigurationThumbnailConfigurationResolution(builtins.str, Enum):
    """
    Resolution indicates the desired resolution of recorded thumbnails.
    """
    FULL_HD = "FULL_HD"
    HD = "HD"
    SD = "SD"
    LOWEST_RESOLUTION = "LOWEST_RESOLUTION"


@pulumi.type_token("aws-native:ivs:RecordingConfigurationThumbnailConfigurationStorageItem")
class RecordingConfigurationThumbnailConfigurationStorageItem(builtins.str, Enum):
    SEQUENTIAL = "SEQUENTIAL"
    LATEST = "LATEST"


@pulumi.type_token("aws-native:ivs:StageAutoParticipantRecordingConfigurationMediaTypesItem")
class StageAutoParticipantRecordingConfigurationMediaTypesItem(builtins.str, Enum):
    AUDIO_VIDEO = "AUDIO_VIDEO"
    AUDIO_ONLY = "AUDIO_ONLY"
