# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetEventStreamResult',
    'AwaitableGetEventStreamResult',
    'get_event_stream',
    'get_event_stream_output',
]

@pulumi.output_type
class GetEventStreamResult:
    def __init__(__self__, destination_stream_arn=None, id=None, role_arn=None):
        if destination_stream_arn and not isinstance(destination_stream_arn, str):
            raise TypeError("Expected argument 'destination_stream_arn' to be a str")
        pulumi.set(__self__, "destination_stream_arn", destination_stream_arn)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if role_arn and not isinstance(role_arn, str):
            raise TypeError("Expected argument 'role_arn' to be a str")
        pulumi.set(__self__, "role_arn", role_arn)

    @property
    @pulumi.getter(name="destinationStreamArn")
    def destination_stream_arn(self) -> Optional[str]:
        return pulumi.get(self, "destination_stream_arn")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="roleArn")
    def role_arn(self) -> Optional[str]:
        return pulumi.get(self, "role_arn")


class AwaitableGetEventStreamResult(GetEventStreamResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEventStreamResult(
            destination_stream_arn=self.destination_stream_arn,
            id=self.id,
            role_arn=self.role_arn)


def get_event_stream(id: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEventStreamResult:
    """
    Resource Type definition for AWS::Pinpoint::EventStream
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aws-native:pinpoint:getEventStream', __args__, opts=opts, typ=GetEventStreamResult).value

    return AwaitableGetEventStreamResult(
        destination_stream_arn=__ret__.destination_stream_arn,
        id=__ret__.id,
        role_arn=__ret__.role_arn)


@_utilities.lift_output_func(get_event_stream)
def get_event_stream_output(id: Optional[pulumi.Input[str]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetEventStreamResult]:
    """
    Resource Type definition for AWS::Pinpoint::EventStream
    """
    ...
