# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'ScheduleAssignPublicIp',
    'ScheduleFlexibleTimeWindowMode',
    'ScheduleGroupState',
    'ScheduleLaunchType',
    'SchedulePlacementConstraintType',
    'SchedulePlacementStrategyType',
    'SchedulePropagateTags',
    'ScheduleState',
]


class ScheduleAssignPublicIp(str, Enum):
    """
    Specifies whether the task's elastic network interface receives a public IP address. You can specify ENABLED only when LaunchType in EcsParameters is set to FARGATE.
    """
    ENABLED = "ENABLED"
    DISABLED = "DISABLED"


class ScheduleFlexibleTimeWindowMode(str, Enum):
    """
    Determines whether the schedule is executed within a flexible time window.
    """
    OFF = "OFF"
    FLEXIBLE = "FLEXIBLE"


class ScheduleGroupState(str, Enum):
    """
    Specifies the state of the schedule group.
    """
    ACTIVE = "ACTIVE"
    DELETING = "DELETING"


class ScheduleLaunchType(str, Enum):
    """
    Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The FARGATE value is supported only in the Regions where AWS Fargate with Amazon ECS is supported. For more information, see AWS Fargate on Amazon ECS in the Amazon Elastic Container Service Developer Guide.
    """
    EC2 = "EC2"
    FARGATE = "FARGATE"
    EXTERNAL = "EXTERNAL"


class SchedulePlacementConstraintType(str, Enum):
    """
    The type of constraint. Use distinctInstance to ensure that each task in a particular group is running on a different container instance. Use memberOf to restrict the selection to a group of valid candidates.
    """
    DISTINCT_INSTANCE = "distinctInstance"
    MEMBER_OF = "memberOf"


class SchedulePlacementStrategyType(str, Enum):
    """
    The type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task).
    """
    RANDOM = "random"
    SPREAD = "spread"
    BINPACK = "binpack"


class SchedulePropagateTags(str, Enum):
    """
    Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action.
    """
    TASK_DEFINITION = "TASK_DEFINITION"


class ScheduleState(str, Enum):
    """
    Specifies whether the schedule is enabled or disabled.
    """
    ENABLED = "ENABLED"
    DISABLED = "DISABLED"
