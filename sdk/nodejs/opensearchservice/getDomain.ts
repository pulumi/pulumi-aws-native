// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:opensearchservice:getDomain", {
        "domainName": args.domainName,
    }, opts);
}

export interface GetDomainArgs {
    domainName: string;
}

export interface GetDomainResult {
    readonly accessPolicies?: any;
    readonly advancedOptions?: any;
    readonly arn?: string;
    readonly clusterConfig?: outputs.opensearchservice.DomainClusterConfig;
    readonly cognitoOptions?: outputs.opensearchservice.DomainCognitoOptions;
    readonly domainArn?: string;
    readonly domainEndpoint?: string;
    readonly domainEndpointOptions?: outputs.opensearchservice.DomainEndpointOptions;
    readonly domainEndpoints?: any;
    readonly eBSOptions?: outputs.opensearchservice.DomainEBSOptions;
    readonly encryptionAtRestOptions?: outputs.opensearchservice.DomainEncryptionAtRestOptions;
    readonly engineVersion?: string;
    readonly id?: string;
    readonly logPublishingOptions?: any;
    readonly nodeToNodeEncryptionOptions?: outputs.opensearchservice.DomainNodeToNodeEncryptionOptions;
    readonly serviceSoftwareOptions?: outputs.opensearchservice.DomainServiceSoftwareOptions;
    readonly snapshotOptions?: outputs.opensearchservice.DomainSnapshotOptions;
    /**
     * An arbitrary set of tags (key-value pairs) for this Domain.
     */
    readonly tags?: outputs.opensearchservice.DomainTag[];
    readonly vPCOptions?: outputs.opensearchservice.DomainVPCOptions;
}

export function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply(a => getDomain(a, opts))
}

export interface GetDomainOutputArgs {
    domainName: pulumi.Input<string>;
}
