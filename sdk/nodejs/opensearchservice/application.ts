// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Amazon OpenSearchService application resource
 */
export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:opensearchservice:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    /**
     * List of application configurations.
     */
    public readonly appConfigs!: pulumi.Output<outputs.opensearchservice.ApplicationAppConfig[] | undefined>;
    /**
     * Amazon Resource Name (ARN) format.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The identifier of the application.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * List of data sources.
     */
    public readonly dataSources!: pulumi.Output<outputs.opensearchservice.ApplicationDataSource[] | undefined>;
    /**
     * The endpoint for the application.
     */
    public readonly endpoint!: pulumi.Output<string | undefined>;
    /**
     * Options for configuring IAM Identity Center
     */
    public readonly iamIdentityCenterOptions!: pulumi.Output<outputs.opensearchservice.IamIdentityCenterOptionsProperties | undefined>;
    /**
     * The name of the application.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this application.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApplicationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["appConfigs"] = args?.appConfigs;
            resourceInputs["dataSources"] = args?.dataSources;
            resourceInputs["endpoint"] = args?.endpoint;
            resourceInputs["iamIdentityCenterOptions"] = args?.iamIdentityCenterOptions;
            resourceInputs["name"] = args?.name;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
        } else {
            resourceInputs["appConfigs"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["dataSources"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["iamIdentityCenterOptions"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Application.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * List of application configurations.
     */
    appConfigs?: pulumi.Input<pulumi.Input<inputs.opensearchservice.ApplicationAppConfigArgs>[]>;
    /**
     * List of data sources.
     */
    dataSources?: pulumi.Input<pulumi.Input<inputs.opensearchservice.ApplicationDataSourceArgs>[]>;
    /**
     * The endpoint for the application.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Options for configuring IAM Identity Center
     */
    iamIdentityCenterOptions?: pulumi.Input<inputs.opensearchservice.IamIdentityCenterOptionsPropertiesArgs>;
    /**
     * The name of the application.
     */
    name?: pulumi.Input<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this application.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
