// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::CodeBuild::Project
 */
export function getProject(args: GetProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:codebuild:getProject", {
        "id": args.id,
    }, opts);
}

export interface GetProjectArgs {
    id: string;
}

export interface GetProjectResult {
    readonly arn?: string;
    readonly artifacts?: outputs.codebuild.ProjectArtifacts;
    readonly badgeEnabled?: boolean;
    readonly buildBatchConfig?: outputs.codebuild.ProjectBuildBatchConfig;
    readonly cache?: outputs.codebuild.ProjectCache;
    readonly concurrentBuildLimit?: number;
    readonly description?: string;
    readonly encryptionKey?: string;
    readonly environment?: outputs.codebuild.ProjectEnvironment;
    readonly fileSystemLocations?: outputs.codebuild.ProjectFileSystemLocation[];
    readonly id?: string;
    readonly logsConfig?: outputs.codebuild.ProjectLogsConfig;
    readonly queuedTimeoutInMinutes?: number;
    readonly resourceAccessRole?: string;
    readonly secondaryArtifacts?: outputs.codebuild.ProjectArtifacts[];
    readonly secondarySourceVersions?: outputs.codebuild.ProjectSourceVersion[];
    readonly secondarySources?: outputs.codebuild.ProjectSource[];
    readonly serviceRole?: string;
    readonly source?: outputs.codebuild.ProjectSource;
    readonly sourceVersion?: string;
    readonly tags?: outputs.codebuild.ProjectTag[];
    readonly timeoutInMinutes?: number;
    readonly triggers?: outputs.codebuild.ProjectTriggers;
    readonly visibility?: string;
    readonly vpcConfig?: outputs.codebuild.ProjectVpcConfig;
}

export function getProjectOutput(args: GetProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectResult> {
    return pulumi.output(args).apply(a => getProject(a, opts))
}

export interface GetProjectOutputArgs {
    id: pulumi.Input<string>;
}
