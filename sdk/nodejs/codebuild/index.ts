// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FleetArgs } from "./fleet";
export type Fleet = import("./fleet").Fleet;
export const Fleet: typeof import("./fleet").Fleet = null as any;
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));

export { GetFleetArgs, GetFleetResult, GetFleetOutputArgs } from "./getFleet";
export const getFleet: typeof import("./getFleet").getFleet = null as any;
export const getFleetOutput: typeof import("./getFleet").getFleetOutput = null as any;
utilities.lazyLoad(exports, ["getFleet","getFleetOutput"], () => require("./getFleet"));

export { GetProjectArgs, GetProjectResult, GetProjectOutputArgs } from "./getProject";
export const getProject: typeof import("./getProject").getProject = null as any;
export const getProjectOutput: typeof import("./getProject").getProjectOutput = null as any;
utilities.lazyLoad(exports, ["getProject","getProjectOutput"], () => require("./getProject"));

export { GetReportGroupArgs, GetReportGroupResult, GetReportGroupOutputArgs } from "./getReportGroup";
export const getReportGroup: typeof import("./getReportGroup").getReportGroup = null as any;
export const getReportGroupOutput: typeof import("./getReportGroup").getReportGroupOutput = null as any;
utilities.lazyLoad(exports, ["getReportGroup","getReportGroupOutput"], () => require("./getReportGroup"));

export { GetSourceCredentialArgs, GetSourceCredentialResult, GetSourceCredentialOutputArgs } from "./getSourceCredential";
export const getSourceCredential: typeof import("./getSourceCredential").getSourceCredential = null as any;
export const getSourceCredentialOutput: typeof import("./getSourceCredential").getSourceCredentialOutput = null as any;
utilities.lazyLoad(exports, ["getSourceCredential","getSourceCredentialOutput"], () => require("./getSourceCredential"));

export { ProjectArgs } from "./project";
export type Project = import("./project").Project;
export const Project: typeof import("./project").Project = null as any;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));

export { ReportGroupArgs } from "./reportGroup";
export type ReportGroup = import("./reportGroup").ReportGroup;
export const ReportGroup: typeof import("./reportGroup").ReportGroup = null as any;
utilities.lazyLoad(exports, ["ReportGroup"], () => require("./reportGroup"));

export { SourceCredentialArgs } from "./sourceCredential";
export type SourceCredential = import("./sourceCredential").SourceCredential;
export const SourceCredential: typeof import("./sourceCredential").SourceCredential = null as any;
utilities.lazyLoad(exports, ["SourceCredential"], () => require("./sourceCredential"));


// Export enums:
export * from "../types/enums/codebuild";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:codebuild:Fleet":
                return new Fleet(name, <any>undefined, { urn })
            case "aws-native:codebuild:Project":
                return new Project(name, <any>undefined, { urn })
            case "aws-native:codebuild:ReportGroup":
                return new ReportGroup(name, <any>undefined, { urn })
            case "aws-native:codebuild:SourceCredential":
                return new SourceCredential(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "codebuild", _module)
