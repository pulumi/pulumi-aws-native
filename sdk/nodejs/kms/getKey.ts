// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The AWS::KMS::Key resource specifies a customer master key (CMK) in AWS Key Management Service (AWS KMS). Authorized users can use the CMK to encrypt and decrypt small amounts of data (up to 4096 bytes), but they are more commonly used to generate data keys. You can also use CMKs to encrypt data stored in AWS services that are integrated with AWS KMS or within their applications.
 */
export function getKey(args: GetKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:kms:getKey", {
        "keyId": args.keyId,
    }, opts);
}

export interface GetKeyArgs {
    keyId: string;
}

export interface GetKeyResult {
    readonly arn?: string;
    /**
     * A description of the CMK. Use a description that helps you to distinguish this CMK from others in the account, such as its intended use.
     */
    readonly description?: string;
    /**
     * Enables automatic rotation of the key material for the specified customer master key (CMK). By default, automation key rotation is not enabled.
     */
    readonly enableKeyRotation?: boolean;
    /**
     * Specifies whether the customer master key (CMK) is enabled. Disabled CMKs cannot be used in cryptographic operations.
     */
    readonly enabled?: boolean;
    readonly keyId?: string;
    /**
     * The key policy that authorizes use of the CMK. The key policy must observe the following rules.
     */
    readonly keyPolicy?: any;
    /**
     * Specifies the type of CMK to create. The default value is SYMMETRIC_DEFAULT. This property is required only for asymmetric CMKs. You can't change the KeySpec value after the CMK is created.
     */
    readonly keySpec?: enums.kms.KeySpec;
    /**
     * Determines the cryptographic operations for which you can use the CMK. The default value is ENCRYPT_DECRYPT. This property is required only for asymmetric CMKs. You can't change the KeyUsage value after the CMK is created.
     */
    readonly keyUsage?: enums.kms.KeyUsage;
    /**
     * Specifies whether the CMK should be Multi-Region. You can't change the MultiRegion value after the CMK is created.
     */
    readonly multiRegion?: boolean;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.kms.KeyTag[];
}

export function getKeyOutput(args: GetKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyResult> {
    return pulumi.output(args).apply(a => getKey(a, opts))
}

export interface GetKeyOutputArgs {
    keyId: pulumi.Input<string>;
}
