// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Rbin::Rule
 */
export function getRule(args: GetRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:rbin:getRule", {
        "arn": args.arn,
    }, opts);
}

export interface GetRuleArgs {
    /**
     * Rule Arn is unique for each rule.
     */
    arn: string;
}

export interface GetRuleResult {
    /**
     * Rule Arn is unique for each rule.
     */
    readonly arn?: string;
    /**
     * The description of the retention rule.
     */
    readonly description?: string;
    /**
     * The unique ID of the retention rule.
     */
    readonly identifier?: string;
    /**
     * The lock state for the retention rule.
     */
    readonly lockState?: string;
    /**
     * Information about the resource tags used to identify resources that are retained by the retention rule.
     */
    readonly resourceTags?: outputs.rbin.RuleResourceTag[];
    /**
     * Information about the retention period for which the retention rule is to retain resources.
     */
    readonly retentionPeriod?: outputs.rbin.RuleRetentionPeriod;
    /**
     * The state of the retention rule. Only retention rules that are in the available state retain resources.
     */
    readonly status?: string;
    /**
     * Information about the tags assigned to the retention rule.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::Rbin::Rule
 */
export function getRuleOutput(args: GetRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:rbin:getRule", {
        "arn": args.arn,
    }, opts);
}

export interface GetRuleOutputArgs {
    /**
     * Rule Arn is unique for each rule.
     */
    arn: pulumi.Input<string>;
}
