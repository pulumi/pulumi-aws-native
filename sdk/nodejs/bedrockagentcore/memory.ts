// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::BedrockAgentCore::Memory
 */
export class Memory extends pulumi.CustomResource {
    /**
     * Get an existing Memory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Memory {
        return new Memory(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:bedrockagentcore:Memory';

    /**
     * Returns true if the given object is an instance of Memory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Memory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Memory.__pulumiType;
    }

    /**
     * The timestamp when the memory record was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The memory encryption key Amazon Resource Name (ARN).
     */
    declare public readonly encryptionKeyArn: pulumi.Output<string | undefined>;
    /**
     * Duration in days until memory events expire
     */
    declare public readonly eventExpiryDuration: pulumi.Output<number>;
    declare public /*out*/ readonly failureReason: pulumi.Output<string>;
    declare public /*out*/ readonly memoryArn: pulumi.Output<string>;
    /**
     * The memory role ARN.
     */
    declare public readonly memoryExecutionRoleArn: pulumi.Output<string | undefined>;
    /**
     * The memory ID.
     */
    declare public /*out*/ readonly memoryId: pulumi.Output<string>;
    /**
     * The memory strategies.
     */
    declare public readonly memoryStrategies: pulumi.Output<outputs.bedrockagentcore.MemoryStrategy[] | undefined>;
    /**
     * The memory name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The memory status.
     */
    declare public /*out*/ readonly status: pulumi.Output<enums.bedrockagentcore.MemoryStatus>;
    /**
     * The tags for the resources.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a Memory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MemoryArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.eventExpiryDuration === undefined && !opts.urn) {
                throw new Error("Missing required property 'eventExpiryDuration'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["encryptionKeyArn"] = args?.encryptionKeyArn;
            resourceInputs["eventExpiryDuration"] = args?.eventExpiryDuration;
            resourceInputs["memoryExecutionRoleArn"] = args?.memoryExecutionRoleArn;
            resourceInputs["memoryStrategies"] = args?.memoryStrategies;
            resourceInputs["name"] = args?.name;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["failureReason"] = undefined /*out*/;
            resourceInputs["memoryArn"] = undefined /*out*/;
            resourceInputs["memoryId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["encryptionKeyArn"] = undefined /*out*/;
            resourceInputs["eventExpiryDuration"] = undefined /*out*/;
            resourceInputs["failureReason"] = undefined /*out*/;
            resourceInputs["memoryArn"] = undefined /*out*/;
            resourceInputs["memoryExecutionRoleArn"] = undefined /*out*/;
            resourceInputs["memoryId"] = undefined /*out*/;
            resourceInputs["memoryStrategies"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["encryptionKeyArn", "name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Memory.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Memory resource.
 */
export interface MemoryArgs {
    description?: pulumi.Input<string>;
    /**
     * The memory encryption key Amazon Resource Name (ARN).
     */
    encryptionKeyArn?: pulumi.Input<string>;
    /**
     * Duration in days until memory events expire
     */
    eventExpiryDuration: pulumi.Input<number>;
    /**
     * The memory role ARN.
     */
    memoryExecutionRoleArn?: pulumi.Input<string>;
    /**
     * The memory strategies.
     */
    memoryStrategies?: pulumi.Input<pulumi.Input<inputs.bedrockagentcore.MemoryStrategyArgs>[]>;
    /**
     * The memory name.
     */
    name?: pulumi.Input<string>;
    /**
     * The tags for the resources.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
