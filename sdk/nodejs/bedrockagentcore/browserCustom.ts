// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource definition for AWS::BedrockAgentCore::BrowserCustom
 */
export class BrowserCustom extends pulumi.CustomResource {
    /**
     * Get an existing BrowserCustom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BrowserCustom {
        return new BrowserCustom(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:bedrockagentcore:BrowserCustom';

    /**
     * Returns true if the given object is an instance of BrowserCustom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BrowserCustom {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BrowserCustom.__pulumiType;
    }

    /**
     * The ARN of a Browser resource.
     */
    public /*out*/ readonly browserArn!: pulumi.Output<string>;
    /**
     * The id of the browser.
     */
    public /*out*/ readonly browserId!: pulumi.Output<string>;
    /**
     * Timestamp when the browser was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the browser.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that the browser uses to access resources.
     */
    public readonly executionRoleArn!: pulumi.Output<string | undefined>;
    /**
     * Timestamp when the browser was last updated.
     */
    public /*out*/ readonly lastUpdatedAt!: pulumi.Output<string>;
    /**
     * The name of the browser.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network configuration for browser.
     */
    public readonly networkConfiguration!: pulumi.Output<outputs.bedrockagentcore.BrowserCustomBrowserNetworkConfiguration>;
    /**
     * Recording configuration for browser.
     */
    public readonly recordingConfig!: pulumi.Output<outputs.bedrockagentcore.BrowserCustomRecordingConfig | undefined>;
    /**
     * Status of browser.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.bedrockagentcore.BrowserCustomBrowserStatus>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a BrowserCustom resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BrowserCustomArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.networkConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkConfiguration'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["executionRoleArn"] = args ? args.executionRoleArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConfiguration"] = args ? args.networkConfiguration : undefined;
            resourceInputs["recordingConfig"] = args ? args.recordingConfig : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["browserArn"] = undefined /*out*/;
            resourceInputs["browserId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["browserArn"] = undefined /*out*/;
            resourceInputs["browserId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["executionRoleArn"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkConfiguration"] = undefined /*out*/;
            resourceInputs["recordingConfig"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["description", "executionRoleArn", "name", "networkConfiguration", "recordingConfig"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(BrowserCustom.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a BrowserCustom resource.
 */
export interface BrowserCustomArgs {
    /**
     * The description of the browser.
     */
    description?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that the browser uses to access resources.
     */
    executionRoleArn?: pulumi.Input<string>;
    /**
     * The name of the browser.
     */
    name?: pulumi.Input<string>;
    /**
     * Network configuration for browser.
     */
    networkConfiguration: pulumi.Input<inputs.bedrockagentcore.BrowserCustomBrowserNetworkConfigurationArgs>;
    /**
     * Recording configuration for browser.
     */
    recordingConfig?: pulumi.Input<inputs.bedrockagentcore.BrowserCustomRecordingConfigArgs>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
