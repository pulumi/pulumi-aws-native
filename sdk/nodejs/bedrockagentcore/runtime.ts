// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::BedrockAgentCore::Runtime
 */
export class Runtime extends pulumi.CustomResource {
    /**
     * Get an existing Runtime resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Runtime {
        return new Runtime(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:bedrockagentcore:Runtime';

    /**
     * Returns true if the given object is an instance of Runtime.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Runtime {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Runtime.__pulumiType;
    }

    /**
     * The Amazon Resource Name(ARN) that uniquely identifies the Agent
     */
    declare public /*out*/ readonly agentRuntimeArn: pulumi.Output<string>;
    /**
     * The artifact of the agent
     */
    declare public readonly agentRuntimeArtifact: pulumi.Output<outputs.bedrockagentcore.RuntimeAgentRuntimeArtifact>;
    /**
     * Identifier for a resource
     */
    declare public /*out*/ readonly agentRuntimeId: pulumi.Output<string>;
    /**
     * Name for a resource
     */
    declare public readonly agentRuntimeName: pulumi.Output<string>;
    /**
     * Version of the Agent
     */
    declare public /*out*/ readonly agentRuntimeVersion: pulumi.Output<string>;
    /**
     * Authorizer configuration for the agent runtime
     */
    declare public readonly authorizerConfiguration: pulumi.Output<outputs.bedrockagentcore.RuntimeAuthorizerConfiguration | undefined>;
    /**
     * Timestamp when the Agent was created
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Description of the resource
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Environment variables for the agent runtime
     */
    declare public readonly environmentVariables: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * When resource was last updated
     */
    declare public /*out*/ readonly lastUpdatedAt: pulumi.Output<string>;
    /**
     * Network access configuration for the Agent
     */
    declare public readonly networkConfiguration: pulumi.Output<outputs.bedrockagentcore.RuntimeNetworkConfiguration>;
    /**
     * Protocol configuration for the agent runtime
     */
    declare public readonly protocolConfiguration: pulumi.Output<enums.bedrockagentcore.RuntimeProtocolConfiguration | undefined>;
    /**
     * Amazon Resource Name (ARN) of an IAM role
     */
    declare public readonly roleArn: pulumi.Output<string>;
    /**
     * Current status of the agent
     */
    declare public /*out*/ readonly status: pulumi.Output<enums.bedrockagentcore.RuntimeAgentStatus>;
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Workload identity details for the agent
     */
    declare public /*out*/ readonly workloadIdentityDetails: pulumi.Output<outputs.bedrockagentcore.RuntimeWorkloadIdentityDetails>;

    /**
     * Create a Runtime resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuntimeArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.agentRuntimeArtifact === undefined && !opts.urn) {
                throw new Error("Missing required property 'agentRuntimeArtifact'");
            }
            if (args?.agentRuntimeName === undefined && !opts.urn) {
                throw new Error("Missing required property 'agentRuntimeName'");
            }
            if (args?.networkConfiguration === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkConfiguration'");
            }
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["agentRuntimeArtifact"] = args?.agentRuntimeArtifact;
            resourceInputs["agentRuntimeName"] = args?.agentRuntimeName;
            resourceInputs["authorizerConfiguration"] = args?.authorizerConfiguration;
            resourceInputs["description"] = args?.description;
            resourceInputs["environmentVariables"] = args?.environmentVariables;
            resourceInputs["networkConfiguration"] = args?.networkConfiguration;
            resourceInputs["protocolConfiguration"] = args?.protocolConfiguration;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["agentRuntimeArn"] = undefined /*out*/;
            resourceInputs["agentRuntimeId"] = undefined /*out*/;
            resourceInputs["agentRuntimeVersion"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["workloadIdentityDetails"] = undefined /*out*/;
        } else {
            resourceInputs["agentRuntimeArn"] = undefined /*out*/;
            resourceInputs["agentRuntimeArtifact"] = undefined /*out*/;
            resourceInputs["agentRuntimeId"] = undefined /*out*/;
            resourceInputs["agentRuntimeName"] = undefined /*out*/;
            resourceInputs["agentRuntimeVersion"] = undefined /*out*/;
            resourceInputs["authorizerConfiguration"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["environmentVariables"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["networkConfiguration"] = undefined /*out*/;
            resourceInputs["protocolConfiguration"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["workloadIdentityDetails"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["agentRuntimeName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Runtime.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Runtime resource.
 */
export interface RuntimeArgs {
    /**
     * The artifact of the agent
     */
    agentRuntimeArtifact: pulumi.Input<inputs.bedrockagentcore.RuntimeAgentRuntimeArtifactArgs>;
    /**
     * Name for a resource
     */
    agentRuntimeName: pulumi.Input<string>;
    /**
     * Authorizer configuration for the agent runtime
     */
    authorizerConfiguration?: pulumi.Input<inputs.bedrockagentcore.RuntimeAuthorizerConfigurationArgs>;
    /**
     * Description of the resource
     */
    description?: pulumi.Input<string>;
    /**
     * Environment variables for the agent runtime
     */
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Network access configuration for the Agent
     */
    networkConfiguration: pulumi.Input<inputs.bedrockagentcore.RuntimeNetworkConfigurationArgs>;
    /**
     * Protocol configuration for the agent runtime
     */
    protocolConfiguration?: pulumi.Input<enums.bedrockagentcore.RuntimeProtocolConfiguration>;
    /**
     * Amazon Resource Name (ARN) of an IAM role
     */
    roleArn: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
