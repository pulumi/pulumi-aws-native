// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource definition for AWS::BedrockAgentCore::RuntimeEndpoint
 */
export class RuntimeEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing RuntimeEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RuntimeEndpoint {
        return new RuntimeEndpoint(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:bedrockagentcore:RuntimeEndpoint';

    /**
     * Returns true if the given object is an instance of RuntimeEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuntimeEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuntimeEndpoint.__pulumiType;
    }

    /**
     * The ARN of the Agent Runtime
     */
    public /*out*/ readonly agentRuntimeArn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the AgentCore Runtime.
     */
    public /*out*/ readonly agentRuntimeEndpointArn!: pulumi.Output<string>;
    /**
     * The ID of the parent Agent Runtime (required for creation)
     */
    public readonly agentRuntimeId!: pulumi.Output<string>;
    /**
     * The version of the AgentCore Runtime to use for the endpoint.
     */
    public readonly agentRuntimeVersion!: pulumi.Output<string | undefined>;
    /**
     * The unique identifier of the AgentCore Runtime endpoint.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * The timestamp when the Agent Runtime Endpoint was created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the AgentCore Runtime endpoint.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The reason for failure if the endpoint is in a failed state
     */
    public /*out*/ readonly failureReason!: pulumi.Output<string>;
    /**
     * The timestamp when the Agent Runtime Endpoint was last updated
     */
    public /*out*/ readonly lastUpdatedAt!: pulumi.Output<string>;
    /**
     * The Live version of the Agent Runtime
     */
    public /*out*/ readonly liveVersion!: pulumi.Output<string>;
    /**
     * The name of the Agent Runtime Endpoint
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The status of the Agent Runtime Endpoint
     */
    public /*out*/ readonly status!: pulumi.Output<enums.bedrockagentcore.RuntimeEndpointAgentRuntimeEndpointStatus>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The target version of the AgentCore Runtime for the endpoint.
     */
    public /*out*/ readonly targetVersion!: pulumi.Output<string>;

    /**
     * Create a RuntimeEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuntimeEndpointArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.agentRuntimeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentRuntimeId'");
            }
            resourceInputs["agentRuntimeId"] = args ? args.agentRuntimeId : undefined;
            resourceInputs["agentRuntimeVersion"] = args ? args.agentRuntimeVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["agentRuntimeArn"] = undefined /*out*/;
            resourceInputs["agentRuntimeEndpointArn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["failureReason"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["liveVersion"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["targetVersion"] = undefined /*out*/;
        } else {
            resourceInputs["agentRuntimeArn"] = undefined /*out*/;
            resourceInputs["agentRuntimeEndpointArn"] = undefined /*out*/;
            resourceInputs["agentRuntimeId"] = undefined /*out*/;
            resourceInputs["agentRuntimeVersion"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["failureReason"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["liveVersion"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["targetVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["agentRuntimeId", "agentRuntimeVersion", "name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(RuntimeEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RuntimeEndpoint resource.
 */
export interface RuntimeEndpointArgs {
    /**
     * The ID of the parent Agent Runtime (required for creation)
     */
    agentRuntimeId: pulumi.Input<string>;
    /**
     * The version of the AgentCore Runtime to use for the endpoint.
     */
    agentRuntimeVersion?: pulumi.Input<string>;
    /**
     * The description of the AgentCore Runtime endpoint.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Agent Runtime Endpoint
     */
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
