// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. Create subscription to be notified
 */
export function getAnomalySubscription(args: GetAnomalySubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetAnomalySubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ce:getAnomalySubscription", {
        "subscriptionArn": args.subscriptionArn,
    }, opts);
}

export interface GetAnomalySubscriptionArgs {
    subscriptionArn: string;
}

export interface GetAnomalySubscriptionResult {
    /**
     * The accountId
     */
    readonly accountId?: string;
    /**
     * The frequency at which anomaly reports are sent over email. 
     */
    readonly frequency?: enums.ce.AnomalySubscriptionFrequency;
    /**
     * A list of cost anomaly monitors.
     */
    readonly monitorArnList?: string[];
    /**
     * A list of subscriber
     */
    readonly subscribers?: outputs.ce.AnomalySubscriptionSubscriber[];
    readonly subscriptionArn?: string;
    /**
     * The name of the subscription.
     */
    readonly subscriptionName?: string;
    /**
     * The dollar value that triggers a notification if the threshold is exceeded. 
     */
    readonly threshold?: number;
}
/**
 * AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. Create subscription to be notified
 */
export function getAnomalySubscriptionOutput(args: GetAnomalySubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAnomalySubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getAnomalySubscription(a, opts))
}

export interface GetAnomalySubscriptionOutputArgs {
    subscriptionArn: pulumi.Input<string>;
}
