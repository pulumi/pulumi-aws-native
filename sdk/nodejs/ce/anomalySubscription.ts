// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. Create subscription to be notified
 *
 * @deprecated AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class AnomalySubscription extends pulumi.CustomResource {
    /**
     * Get an existing AnomalySubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AnomalySubscription {
        pulumi.log.warn("AnomalySubscription is deprecated: AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new AnomalySubscription(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ce:AnomalySubscription';

    /**
     * Returns true if the given object is an instance of AnomalySubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AnomalySubscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AnomalySubscription.__pulumiType;
    }

    /**
     * The accountId
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * The frequency at which anomaly reports are sent over email. 
     */
    public readonly frequency!: pulumi.Output<enums.ce.AnomalySubscriptionFrequency>;
    /**
     * A list of cost anomaly monitors.
     */
    public readonly monitorArnList!: pulumi.Output<string[]>;
    /**
     * A list of subscriber
     */
    public readonly subscribers!: pulumi.Output<outputs.ce.AnomalySubscriptionSubscriber[]>;
    public /*out*/ readonly subscriptionArn!: pulumi.Output<string>;
    /**
     * The name of the subscription.
     */
    public readonly subscriptionName!: pulumi.Output<string>;
    /**
     * The dollar value that triggers a notification if the threshold is exceeded. 
     */
    public readonly threshold!: pulumi.Output<number>;

    /**
     * Create a AnomalySubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: AnomalySubscriptionArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("AnomalySubscription is deprecated: AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.frequency === undefined) && !opts.urn) {
                throw new Error("Missing required property 'frequency'");
            }
            if ((!args || args.monitorArnList === undefined) && !opts.urn) {
                throw new Error("Missing required property 'monitorArnList'");
            }
            if ((!args || args.subscribers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscribers'");
            }
            if ((!args || args.subscriptionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionName'");
            }
            if ((!args || args.threshold === undefined) && !opts.urn) {
                throw new Error("Missing required property 'threshold'");
            }
            inputs["frequency"] = args ? args.frequency : undefined;
            inputs["monitorArnList"] = args ? args.monitorArnList : undefined;
            inputs["subscribers"] = args ? args.subscribers : undefined;
            inputs["subscriptionName"] = args ? args.subscriptionName : undefined;
            inputs["threshold"] = args ? args.threshold : undefined;
            inputs["accountId"] = undefined /*out*/;
            inputs["subscriptionArn"] = undefined /*out*/;
        } else {
            inputs["accountId"] = undefined /*out*/;
            inputs["frequency"] = undefined /*out*/;
            inputs["monitorArnList"] = undefined /*out*/;
            inputs["subscribers"] = undefined /*out*/;
            inputs["subscriptionArn"] = undefined /*out*/;
            inputs["subscriptionName"] = undefined /*out*/;
            inputs["threshold"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AnomalySubscription.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a AnomalySubscription resource.
 */
export interface AnomalySubscriptionArgs {
    /**
     * The frequency at which anomaly reports are sent over email. 
     */
    frequency: pulumi.Input<enums.ce.AnomalySubscriptionFrequency>;
    /**
     * A list of cost anomaly monitors.
     */
    monitorArnList: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of subscriber
     */
    subscribers: pulumi.Input<pulumi.Input<inputs.ce.AnomalySubscriptionSubscriberArgs>[]>;
    /**
     * The name of the subscription.
     */
    subscriptionName: pulumi.Input<string>;
    /**
     * The dollar value that triggers a notification if the threshold is exceeded. 
     */
    threshold: pulumi.Input<number>;
}
