// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AnomalyMonitorArgs } from "./anomalyMonitor";
export type AnomalyMonitor = import("./anomalyMonitor").AnomalyMonitor;
export const AnomalyMonitor: typeof import("./anomalyMonitor").AnomalyMonitor = null as any;
utilities.lazyLoad(exports, ["AnomalyMonitor"], () => require("./anomalyMonitor"));

export { AnomalySubscriptionArgs } from "./anomalySubscription";
export type AnomalySubscription = import("./anomalySubscription").AnomalySubscription;
export const AnomalySubscription: typeof import("./anomalySubscription").AnomalySubscription = null as any;
utilities.lazyLoad(exports, ["AnomalySubscription"], () => require("./anomalySubscription"));

export { CostCategoryArgs } from "./costCategory";
export type CostCategory = import("./costCategory").CostCategory;
export const CostCategory: typeof import("./costCategory").CostCategory = null as any;
utilities.lazyLoad(exports, ["CostCategory"], () => require("./costCategory"));

export { GetAnomalyMonitorArgs, GetAnomalyMonitorResult, GetAnomalyMonitorOutputArgs } from "./getAnomalyMonitor";
export const getAnomalyMonitor: typeof import("./getAnomalyMonitor").getAnomalyMonitor = null as any;
export const getAnomalyMonitorOutput: typeof import("./getAnomalyMonitor").getAnomalyMonitorOutput = null as any;
utilities.lazyLoad(exports, ["getAnomalyMonitor","getAnomalyMonitorOutput"], () => require("./getAnomalyMonitor"));

export { GetAnomalySubscriptionArgs, GetAnomalySubscriptionResult, GetAnomalySubscriptionOutputArgs } from "./getAnomalySubscription";
export const getAnomalySubscription: typeof import("./getAnomalySubscription").getAnomalySubscription = null as any;
export const getAnomalySubscriptionOutput: typeof import("./getAnomalySubscription").getAnomalySubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getAnomalySubscription","getAnomalySubscriptionOutput"], () => require("./getAnomalySubscription"));

export { GetCostCategoryArgs, GetCostCategoryResult, GetCostCategoryOutputArgs } from "./getCostCategory";
export const getCostCategory: typeof import("./getCostCategory").getCostCategory = null as any;
export const getCostCategoryOutput: typeof import("./getCostCategory").getCostCategoryOutput = null as any;
utilities.lazyLoad(exports, ["getCostCategory","getCostCategoryOutput"], () => require("./getCostCategory"));


// Export enums:
export * from "../types/enums/ce";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:ce:AnomalyMonitor":
                return new AnomalyMonitor(name, <any>undefined, { urn })
            case "aws-native:ce:AnomalySubscription":
                return new AnomalySubscription(name, <any>undefined, { urn })
            case "aws-native:ce:CostCategory":
                return new CostCategory(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "ce", _module)
