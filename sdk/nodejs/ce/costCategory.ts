// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Cost Category enables you to map your cost and usage into meaningful categories. You can use Cost Category to organize your costs using a rule-based engine.
 */
export class CostCategory extends pulumi.CustomResource {
    /**
     * Get an existing CostCategory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CostCategory {
        return new CostCategory(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ce:CostCategory';

    /**
     * Returns true if the given object is an instance of CostCategory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CostCategory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CostCategory.__pulumiType;
    }

    /**
     * Cost category ARN
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The default value for the cost category
     */
    public readonly defaultValue!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveStart!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly ruleVersion!: pulumi.Output<enums.ce.CostCategoryRuleVersion>;
    /**
     * JSON array format of Expression in Billing and Cost Management API
     */
    public readonly rules!: pulumi.Output<string>;
    /**
     * Json array format of CostCategorySplitChargeRule in Billing and Cost Management API
     */
    public readonly splitChargeRules!: pulumi.Output<string | undefined>;

    /**
     * Create a CostCategory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CostCategoryArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.ruleVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleVersion'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            inputs["defaultValue"] = args ? args.defaultValue : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["ruleVersion"] = args ? args.ruleVersion : undefined;
            inputs["rules"] = args ? args.rules : undefined;
            inputs["splitChargeRules"] = args ? args.splitChargeRules : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["effectiveStart"] = undefined /*out*/;
        } else {
            inputs["arn"] = undefined /*out*/;
            inputs["defaultValue"] = undefined /*out*/;
            inputs["effectiveStart"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["ruleVersion"] = undefined /*out*/;
            inputs["rules"] = undefined /*out*/;
            inputs["splitChargeRules"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CostCategory.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a CostCategory resource.
 */
export interface CostCategoryArgs {
    /**
     * The default value for the cost category
     */
    defaultValue?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    ruleVersion: pulumi.Input<enums.ce.CostCategoryRuleVersion>;
    /**
     * JSON array format of Expression in Billing and Cost Management API
     */
    rules: pulumi.Input<string>;
    /**
     * Json array format of CostCategorySplitChargeRule in Billing and Cost Management API
     */
    splitChargeRules?: pulumi.Input<string>;
}
