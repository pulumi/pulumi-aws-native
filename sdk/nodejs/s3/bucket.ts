// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::S3::Bucket
 */
export class Bucket extends pulumi.CustomResource {
    /**
     * Get an existing Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Bucket {
        return new Bucket(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:s3:Bucket';

    /**
     * Returns true if the given object is an instance of Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bucket.__pulumiType;
    }

    /**
     * Configuration for the transfer acceleration state.
     */
    public readonly accelerateConfiguration!: pulumi.Output<outputs.s3.BucketAccelerateConfiguration | undefined>;
    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     */
    public readonly accessControl!: pulumi.Output<enums.s3.BucketAccessControl | undefined>;
    /**
     * The configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     */
    public readonly analyticsConfigurations!: pulumi.Output<outputs.s3.BucketAnalyticsConfiguration[] | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the specified bucket.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly bucketEncryption!: pulumi.Output<outputs.s3.BucketEncryption | undefined>;
    /**
     * A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
     */
    public readonly bucketName!: pulumi.Output<string | undefined>;
    /**
     * Rules that define cross-origin resource sharing of objects in this bucket.
     */
    public readonly corsConfiguration!: pulumi.Output<outputs.s3.BucketCorsConfiguration | undefined>;
    /**
     * The IPv4 DNS name of the specified bucket.
     */
    public /*out*/ readonly domainName!: pulumi.Output<string>;
    /**
     * The IPv6 DNS name of the specified bucket. For more information about dual-stack endpoints, see [Using Amazon S3 Dual-Stack Endpoints](https://docs.aws.amazon.com/AmazonS3/latest/dev/dual-stack-endpoints.html).
     */
    public /*out*/ readonly dualStackDomainName!: pulumi.Output<string>;
    /**
     * Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
     */
    public readonly intelligentTieringConfigurations!: pulumi.Output<outputs.s3.BucketIntelligentTieringConfiguration[] | undefined>;
    /**
     * The inventory configuration for an Amazon S3 bucket.
     */
    public readonly inventoryConfigurations!: pulumi.Output<outputs.s3.BucketInventoryConfiguration[] | undefined>;
    /**
     * Rules that define how Amazon S3 manages objects during their lifetime.
     */
    public readonly lifecycleConfiguration!: pulumi.Output<outputs.s3.BucketLifecycleConfiguration | undefined>;
    /**
     * Settings that define where logs are stored.
     */
    public readonly loggingConfiguration!: pulumi.Output<outputs.s3.BucketLoggingConfiguration | undefined>;
    /**
     * Settings that define a metrics configuration for the CloudWatch request metrics from the bucket.
     */
    public readonly metricsConfigurations!: pulumi.Output<outputs.s3.BucketMetricsConfiguration[] | undefined>;
    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     */
    public readonly notificationConfiguration!: pulumi.Output<outputs.s3.BucketNotificationConfiguration | undefined>;
    /**
     * Places an Object Lock configuration on the specified bucket.
     */
    public readonly objectLockConfiguration!: pulumi.Output<outputs.s3.BucketObjectLockConfiguration | undefined>;
    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     */
    public readonly objectLockEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the container element for object ownership rules.
     */
    public readonly ownershipControls!: pulumi.Output<outputs.s3.BucketOwnershipControls | undefined>;
    public readonly publicAccessBlockConfiguration!: pulumi.Output<outputs.s3.BucketPublicAccessBlockConfiguration | undefined>;
    /**
     * Returns the regional domain name of the specified bucket.
     */
    public /*out*/ readonly regionalDomainName!: pulumi.Output<string>;
    /**
     * Configuration for replicating objects in an S3 bucket.
     */
    public readonly replicationConfiguration!: pulumi.Output<outputs.s3.BucketReplicationConfiguration | undefined>;
    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     */
    public readonly tags!: pulumi.Output<outputs.s3.BucketTag[] | undefined>;
    public readonly versioningConfiguration!: pulumi.Output<outputs.s3.BucketVersioningConfiguration | undefined>;
    public readonly websiteConfiguration!: pulumi.Output<outputs.s3.BucketWebsiteConfiguration | undefined>;
    /**
     * The Amazon S3 website endpoint for the specified bucket.
     */
    public /*out*/ readonly websiteURL!: pulumi.Output<string>;

    /**
     * Create a Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BucketArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["accelerateConfiguration"] = args ? args.accelerateConfiguration : undefined;
            inputs["accessControl"] = args ? args.accessControl : undefined;
            inputs["analyticsConfigurations"] = args ? args.analyticsConfigurations : undefined;
            inputs["bucketEncryption"] = args ? args.bucketEncryption : undefined;
            inputs["bucketName"] = args ? args.bucketName : undefined;
            inputs["corsConfiguration"] = args ? args.corsConfiguration : undefined;
            inputs["intelligentTieringConfigurations"] = args ? args.intelligentTieringConfigurations : undefined;
            inputs["inventoryConfigurations"] = args ? args.inventoryConfigurations : undefined;
            inputs["lifecycleConfiguration"] = args ? args.lifecycleConfiguration : undefined;
            inputs["loggingConfiguration"] = args ? args.loggingConfiguration : undefined;
            inputs["metricsConfigurations"] = args ? args.metricsConfigurations : undefined;
            inputs["notificationConfiguration"] = args ? args.notificationConfiguration : undefined;
            inputs["objectLockConfiguration"] = args ? args.objectLockConfiguration : undefined;
            inputs["objectLockEnabled"] = args ? args.objectLockEnabled : undefined;
            inputs["ownershipControls"] = args ? args.ownershipControls : undefined;
            inputs["publicAccessBlockConfiguration"] = args ? args.publicAccessBlockConfiguration : undefined;
            inputs["replicationConfiguration"] = args ? args.replicationConfiguration : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["versioningConfiguration"] = args ? args.versioningConfiguration : undefined;
            inputs["websiteConfiguration"] = args ? args.websiteConfiguration : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["domainName"] = undefined /*out*/;
            inputs["dualStackDomainName"] = undefined /*out*/;
            inputs["regionalDomainName"] = undefined /*out*/;
            inputs["websiteURL"] = undefined /*out*/;
        } else {
            inputs["accelerateConfiguration"] = undefined /*out*/;
            inputs["accessControl"] = undefined /*out*/;
            inputs["analyticsConfigurations"] = undefined /*out*/;
            inputs["arn"] = undefined /*out*/;
            inputs["bucketEncryption"] = undefined /*out*/;
            inputs["bucketName"] = undefined /*out*/;
            inputs["corsConfiguration"] = undefined /*out*/;
            inputs["domainName"] = undefined /*out*/;
            inputs["dualStackDomainName"] = undefined /*out*/;
            inputs["intelligentTieringConfigurations"] = undefined /*out*/;
            inputs["inventoryConfigurations"] = undefined /*out*/;
            inputs["lifecycleConfiguration"] = undefined /*out*/;
            inputs["loggingConfiguration"] = undefined /*out*/;
            inputs["metricsConfigurations"] = undefined /*out*/;
            inputs["notificationConfiguration"] = undefined /*out*/;
            inputs["objectLockConfiguration"] = undefined /*out*/;
            inputs["objectLockEnabled"] = undefined /*out*/;
            inputs["ownershipControls"] = undefined /*out*/;
            inputs["publicAccessBlockConfiguration"] = undefined /*out*/;
            inputs["regionalDomainName"] = undefined /*out*/;
            inputs["replicationConfiguration"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["versioningConfiguration"] = undefined /*out*/;
            inputs["websiteConfiguration"] = undefined /*out*/;
            inputs["websiteURL"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Bucket.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Bucket resource.
 */
export interface BucketArgs {
    /**
     * Configuration for the transfer acceleration state.
     */
    accelerateConfiguration?: pulumi.Input<inputs.s3.BucketAccelerateConfigurationArgs>;
    /**
     * A canned access control list (ACL) that grants predefined permissions to the bucket.
     */
    accessControl?: pulumi.Input<enums.s3.BucketAccessControl>;
    /**
     * The configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     */
    analyticsConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketAnalyticsConfigurationArgs>[]>;
    bucketEncryption?: pulumi.Input<inputs.s3.BucketEncryptionArgs>;
    /**
     * A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Rules that define cross-origin resource sharing of objects in this bucket.
     */
    corsConfiguration?: pulumi.Input<inputs.s3.BucketCorsConfigurationArgs>;
    /**
     * Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
     */
    intelligentTieringConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketIntelligentTieringConfigurationArgs>[]>;
    /**
     * The inventory configuration for an Amazon S3 bucket.
     */
    inventoryConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketInventoryConfigurationArgs>[]>;
    /**
     * Rules that define how Amazon S3 manages objects during their lifetime.
     */
    lifecycleConfiguration?: pulumi.Input<inputs.s3.BucketLifecycleConfigurationArgs>;
    /**
     * Settings that define where logs are stored.
     */
    loggingConfiguration?: pulumi.Input<inputs.s3.BucketLoggingConfigurationArgs>;
    /**
     * Settings that define a metrics configuration for the CloudWatch request metrics from the bucket.
     */
    metricsConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketMetricsConfigurationArgs>[]>;
    /**
     * Configuration that defines how Amazon S3 handles bucket notifications.
     */
    notificationConfiguration?: pulumi.Input<inputs.s3.BucketNotificationConfigurationArgs>;
    /**
     * Places an Object Lock configuration on the specified bucket.
     */
    objectLockConfiguration?: pulumi.Input<inputs.s3.BucketObjectLockConfigurationArgs>;
    /**
     * Indicates whether this bucket has an Object Lock configuration enabled.
     */
    objectLockEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the container element for object ownership rules.
     */
    ownershipControls?: pulumi.Input<inputs.s3.BucketOwnershipControlsArgs>;
    publicAccessBlockConfiguration?: pulumi.Input<inputs.s3.BucketPublicAccessBlockConfigurationArgs>;
    /**
     * Configuration for replicating objects in an S3 bucket.
     */
    replicationConfiguration?: pulumi.Input<inputs.s3.BucketReplicationConfigurationArgs>;
    /**
     * An arbitrary set of tags (key-value pairs) for this S3 bucket.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.s3.BucketTagArgs>[]>;
    versioningConfiguration?: pulumi.Input<inputs.s3.BucketVersioningConfigurationArgs>;
    websiteConfiguration?: pulumi.Input<inputs.s3.BucketWebsiteConfigurationArgs>;
}
