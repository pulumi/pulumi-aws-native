// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * AWS::S3::MultiRegionAccessPoint is an Amazon S3 resource type that dynamically routes S3 requests to easily satisfy geographic compliance requirements based on customer-defined routing policies.
 */
export function getMultiRegionAccessPoint(args: GetMultiRegionAccessPointArgs, opts?: pulumi.InvokeOptions): Promise<GetMultiRegionAccessPointResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:s3:getMultiRegionAccessPoint", {
        "name": args.name,
    }, opts);
}

export interface GetMultiRegionAccessPointArgs {
    /**
     * The name you want to assign to this Multi Region Access Point.
     */
    name: string;
}

export interface GetMultiRegionAccessPointResult {
    /**
     * The alias is a unique identifier to, and is part of the public DNS name for this Multi Region Access Point
     */
    readonly alias?: string;
    /**
     * The timestamp of the when the Multi Region Access Point is created
     */
    readonly createdAt?: string;
}

export function getMultiRegionAccessPointOutput(args: GetMultiRegionAccessPointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMultiRegionAccessPointResult> {
    return pulumi.output(args).apply(a => getMultiRegionAccessPoint(a, opts))
}

export interface GetMultiRegionAccessPointOutputArgs {
    /**
     * The name you want to assign to this Multi Region Access Point.
     */
    name: pulumi.Input<string>;
}
