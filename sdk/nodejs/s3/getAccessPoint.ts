// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The AWS::S3::AccessPoint resource is an Amazon S3 resource type that you can use to access buckets.
 */
export function getAccessPoint(args: GetAccessPointArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPointResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:s3:getAccessPoint", {
        "name": args.name,
    }, opts);
}

export interface GetAccessPointArgs {
    /**
     * The name you want to assign to this Access Point. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the access point name.
     */
    name: string;
}

export interface GetAccessPointResult {
    /**
     * The alias of this Access Point. This alias can be used for compatibility purposes with other AWS services and third-party applications.
     */
    readonly alias?: string;
    /**
     * The Amazon Resource Name (ARN) of the specified accesspoint.
     */
    readonly arn?: string;
    /**
     * Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise, NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and bucket access policies.
     */
    readonly networkOrigin?: enums.s3.AccessPointNetworkOrigin;
    /**
     * The Access Point Policy you want to apply to this access point.
     */
    readonly policy?: any;
    readonly policyStatus?: outputs.s3.PolicyStatusProperties;
}

export function getAccessPointOutput(args: GetAccessPointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessPointResult> {
    return pulumi.output(args).apply(a => getAccessPoint(a, opts))
}

export interface GetAccessPointOutputArgs {
    /**
     * The name you want to assign to this Access Point. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the access point name.
     */
    name: pulumi.Input<string>;
}
