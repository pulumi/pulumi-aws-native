// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Private certificate authority.
 */
export function getCertificateAuthority(args: GetCertificateAuthorityArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateAuthorityResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:acmpca:getCertificateAuthority", {
        "arn": args.arn,
    }, opts);
}

export interface GetCertificateAuthorityArgs {
    /**
     * The Amazon Resource Name (ARN) of the certificate authority.
     */
    arn: string;
}

export interface GetCertificateAuthorityResult {
    /**
     * The Amazon Resource Name (ARN) of the certificate authority.
     */
    readonly arn?: string;
    /**
     * The base64 PEM-encoded certificate signing request (CSR) for your certificate authority certificate.
     */
    readonly certificateSigningRequest?: string;
    /**
     * Key-value pairs that will be attached to the new private CA. You can associate up to 50 tags with a private CA. For information using tags with IAM to manage permissions, see [Controlling Access Using IAM Tags](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html) .
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Private certificate authority.
 */
export function getCertificateAuthorityOutput(args: GetCertificateAuthorityOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCertificateAuthorityResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:acmpca:getCertificateAuthority", {
        "arn": args.arn,
    }, opts);
}

export interface GetCertificateAuthorityOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the certificate authority.
     */
    arn: pulumi.Input<string>;
}
