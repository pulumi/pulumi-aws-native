// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Used to install the certificate authority certificate and update the certificate authority status.
 */
export function getCertificateAuthorityActivation(args: GetCertificateAuthorityActivationArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateAuthorityActivationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:acmpca:getCertificateAuthorityActivation", {
        "certificateAuthorityArn": args.certificateAuthorityArn,
    }, opts);
}

export interface GetCertificateAuthorityActivationArgs {
    /**
     * Arn of the Certificate Authority.
     */
    certificateAuthorityArn: string;
}

export interface GetCertificateAuthorityActivationResult {
    /**
     * The complete certificate chain, including the Certificate Authority certificate.
     */
    readonly completeCertificateChain?: string;
    /**
     * The status of the Certificate Authority.
     */
    readonly status?: string;
}

export function getCertificateAuthorityActivationOutput(args: GetCertificateAuthorityActivationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateAuthorityActivationResult> {
    return pulumi.output(args).apply(a => getCertificateAuthorityActivation(a, opts))
}

export interface GetCertificateAuthorityActivationOutputArgs {
    /**
     * Arn of the Certificate Authority.
     */
    certificateAuthorityArn: pulumi.Input<string>;
}
