// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export class Grant extends pulumi.CustomResource {
    /**
     * Get an existing Grant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Grant {
        return new Grant(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:licensemanager:Grant';

    /**
     * Returns true if the given object is an instance of Grant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Grant {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Grant.__pulumiType;
    }

    /**
     * Allowed operations for the grant.
     */
    declare public readonly allowedOperations: pulumi.Output<string[] | undefined>;
    /**
     * Arn of the grant.
     */
    declare public /*out*/ readonly grantArn: pulumi.Output<string>;
    /**
     * Name for the created Grant.
     */
    declare public readonly grantName: pulumi.Output<string | undefined>;
    /**
     * Home region for the created grant.
     */
    declare public readonly homeRegion: pulumi.Output<string | undefined>;
    /**
     * License Arn for the grant.
     */
    declare public readonly licenseArn: pulumi.Output<string | undefined>;
    /**
     * The grant principals. You can specify one of the following as an Amazon Resource Name (ARN):
     *
     * - An AWS account, which includes only the account specified.
     *
     * - An organizational unit (OU), which includes all accounts in the OU.
     *
     * - An organization, which will include all accounts across your organization.
     */
    declare public readonly principals: pulumi.Output<string[] | undefined>;
    /**
     * Granted license status.
     */
    declare public readonly status: pulumi.Output<string | undefined>;
    /**
     * The version of the grant.
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;

    /**
     * Create a Grant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GrantArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["allowedOperations"] = args?.allowedOperations;
            resourceInputs["grantName"] = args?.grantName;
            resourceInputs["homeRegion"] = args?.homeRegion;
            resourceInputs["licenseArn"] = args?.licenseArn;
            resourceInputs["principals"] = args?.principals;
            resourceInputs["status"] = args?.status;
            resourceInputs["grantArn"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        } else {
            resourceInputs["allowedOperations"] = undefined /*out*/;
            resourceInputs["grantArn"] = undefined /*out*/;
            resourceInputs["grantName"] = undefined /*out*/;
            resourceInputs["homeRegion"] = undefined /*out*/;
            resourceInputs["licenseArn"] = undefined /*out*/;
            resourceInputs["principals"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Grant.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Grant resource.
 */
export interface GrantArgs {
    /**
     * Allowed operations for the grant.
     */
    allowedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name for the created Grant.
     */
    grantName?: pulumi.Input<string>;
    /**
     * Home region for the created grant.
     */
    homeRegion?: pulumi.Input<string>;
    /**
     * License Arn for the grant.
     */
    licenseArn?: pulumi.Input<string>;
    /**
     * The grant principals. You can specify one of the following as an Amazon Resource Name (ARN):
     *
     * - An AWS account, which includes only the account specified.
     *
     * - An organizational unit (OU), which includes all accounts in the OU.
     *
     * - An organization, which will include all accounts across your organization.
     */
    principals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Granted license status.
     */
    status?: pulumi.Input<string>;
}
