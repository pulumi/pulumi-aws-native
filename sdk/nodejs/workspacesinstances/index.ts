// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetVolumeArgs, GetVolumeResult, GetVolumeOutputArgs } from "./getVolume";
export const getVolume: typeof import("./getVolume").getVolume = null as any;
export const getVolumeOutput: typeof import("./getVolume").getVolumeOutput = null as any;
utilities.lazyLoad(exports, ["getVolume","getVolumeOutput"], () => require("./getVolume"));

export { GetWorkspaceInstanceArgs, GetWorkspaceInstanceResult, GetWorkspaceInstanceOutputArgs } from "./getWorkspaceInstance";
export const getWorkspaceInstance: typeof import("./getWorkspaceInstance").getWorkspaceInstance = null as any;
export const getWorkspaceInstanceOutput: typeof import("./getWorkspaceInstance").getWorkspaceInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getWorkspaceInstance","getWorkspaceInstanceOutput"], () => require("./getWorkspaceInstance"));

export { VolumeArgs } from "./volume";
export type Volume = import("./volume").Volume;
export const Volume: typeof import("./volume").Volume = null as any;
utilities.lazyLoad(exports, ["Volume"], () => require("./volume"));

export { VolumeAssociationArgs } from "./volumeAssociation";
export type VolumeAssociation = import("./volumeAssociation").VolumeAssociation;
export const VolumeAssociation: typeof import("./volumeAssociation").VolumeAssociation = null as any;
utilities.lazyLoad(exports, ["VolumeAssociation"], () => require("./volumeAssociation"));

export { WorkspaceInstanceArgs } from "./workspaceInstance";
export type WorkspaceInstance = import("./workspaceInstance").WorkspaceInstance;
export const WorkspaceInstance: typeof import("./workspaceInstance").WorkspaceInstance = null as any;
utilities.lazyLoad(exports, ["WorkspaceInstance"], () => require("./workspaceInstance"));


// Export enums:
export * from "../types/enums/workspacesinstances";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:workspacesinstances:Volume":
                return new Volume(name, <any>undefined, { urn })
            case "aws-native:workspacesinstances:VolumeAssociation":
                return new VolumeAssociation(name, <any>undefined, { urn })
            case "aws-native:workspacesinstances:WorkspaceInstance":
                return new WorkspaceInstance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "workspacesinstances", _module)
