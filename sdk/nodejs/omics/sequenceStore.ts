// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Omics::SequenceStore
 */
export class SequenceStore extends pulumi.CustomResource {
    /**
     * Get an existing SequenceStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SequenceStore {
        return new SequenceStore(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:omics:SequenceStore';

    /**
     * Returns true if the given object is an instance of SequenceStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SequenceStore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SequenceStore.__pulumiType;
    }

    /**
     * Location of the access logs.
     */
    declare public readonly accessLogLocation: pulumi.Output<string | undefined>;
    /**
     * The store's ARN.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * When the store was created.
     */
    declare public /*out*/ readonly creationTime: pulumi.Output<string>;
    /**
     * A description for the store.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The algorithm family of the ETag.
     */
    declare public readonly eTagAlgorithmFamily: pulumi.Output<enums.omics.SequenceStoreETagAlgorithmFamily | undefined>;
    /**
     * An S3 location that is used to store files that have failed a direct upload.
     */
    declare public readonly fallbackLocation: pulumi.Output<string | undefined>;
    /**
     * A name for the store.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The tags keys to propagate to the S3 objects associated with read sets in the sequence store.
     */
    declare public readonly propagatedSetLevelTags: pulumi.Output<string[] | undefined>;
    /**
     * This is ARN of the access point associated with the S3 bucket storing read sets.
     */
    declare public /*out*/ readonly s3AccessPointArn: pulumi.Output<string>;
    /**
     * The resource policy that controls S3 access on the store
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Omics::SequenceStore` for more information about the expected schema for this property.
     */
    declare public readonly s3AccessPolicy: pulumi.Output<any | undefined>;
    /**
     * The S3 URI of the sequence store.
     */
    declare public /*out*/ readonly s3Uri: pulumi.Output<string>;
    /**
     * The store's ID.
     */
    declare public /*out*/ readonly sequenceStoreId: pulumi.Output<string>;
    /**
     * Server-side encryption (SSE) settings for the store.
     */
    declare public readonly sseConfig: pulumi.Output<outputs.omics.SequenceStoreSseConfig | undefined>;
    /**
     * Status of the sequence store.
     */
    declare public /*out*/ readonly status: pulumi.Output<enums.omics.SequenceStoreStatus>;
    /**
     * The status message of the sequence store.
     */
    declare public /*out*/ readonly statusMessage: pulumi.Output<string>;
    /**
     * Tags for the store.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The last-updated time of the sequence store.
     */
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;

    /**
     * Create a SequenceStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SequenceStoreArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["accessLogLocation"] = args?.accessLogLocation;
            resourceInputs["description"] = args?.description;
            resourceInputs["eTagAlgorithmFamily"] = args?.eTagAlgorithmFamily;
            resourceInputs["fallbackLocation"] = args?.fallbackLocation;
            resourceInputs["name"] = args?.name;
            resourceInputs["propagatedSetLevelTags"] = args?.propagatedSetLevelTags;
            resourceInputs["s3AccessPolicy"] = args?.s3AccessPolicy;
            resourceInputs["sseConfig"] = args?.sseConfig;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["s3AccessPointArn"] = undefined /*out*/;
            resourceInputs["s3Uri"] = undefined /*out*/;
            resourceInputs["sequenceStoreId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["accessLogLocation"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["eTagAlgorithmFamily"] = undefined /*out*/;
            resourceInputs["fallbackLocation"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["propagatedSetLevelTags"] = undefined /*out*/;
            resourceInputs["s3AccessPointArn"] = undefined /*out*/;
            resourceInputs["s3AccessPolicy"] = undefined /*out*/;
            resourceInputs["s3Uri"] = undefined /*out*/;
            resourceInputs["sequenceStoreId"] = undefined /*out*/;
            resourceInputs["sseConfig"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["eTagAlgorithmFamily", "sseConfig"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(SequenceStore.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SequenceStore resource.
 */
export interface SequenceStoreArgs {
    /**
     * Location of the access logs.
     */
    accessLogLocation?: pulumi.Input<string>;
    /**
     * A description for the store.
     */
    description?: pulumi.Input<string>;
    /**
     * The algorithm family of the ETag.
     */
    eTagAlgorithmFamily?: pulumi.Input<enums.omics.SequenceStoreETagAlgorithmFamily>;
    /**
     * An S3 location that is used to store files that have failed a direct upload.
     */
    fallbackLocation?: pulumi.Input<string>;
    /**
     * A name for the store.
     */
    name?: pulumi.Input<string>;
    /**
     * The tags keys to propagate to the S3 objects associated with read sets in the sequence store.
     */
    propagatedSetLevelTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource policy that controls S3 access on the store
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Omics::SequenceStore` for more information about the expected schema for this property.
     */
    s3AccessPolicy?: any;
    /**
     * Server-side encryption (SSE) settings for the store.
     */
    sseConfig?: pulumi.Input<inputs.omics.SequenceStoreSseConfigArgs>;
    /**
     * Tags for the store.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
