// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Omics::Workflow Resource Type
 */
export class Workflow extends pulumi.CustomResource {
    /**
     * Get an existing Workflow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Workflow {
        return new Workflow(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:omics:Workflow';

    /**
     * Returns true if the given object is an instance of Workflow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workflow {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workflow.__pulumiType;
    }

    public readonly accelerators!: pulumi.Output<enums.omics.WorkflowAccelerators | undefined>;
    /**
     * The ARN for the workflow.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The workflow's ID.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * Use a container registry map to specify mappings between the ECR private repository and one or more upstream registries. For more information, see [Container images](https://docs.aws.amazon.com/omics/latest/dev/workflows-ecr.html) in the *AWS HealthOmics User Guide* .
     */
    public readonly containerRegistryMap!: pulumi.Output<outputs.omics.WorkflowContainerRegistryMap | undefined>;
    public readonly containerRegistryMapUri!: pulumi.Output<string | undefined>;
    /**
     * When the workflow was created.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * Contains information about a source code repository that hosts the workflow definition files.
     */
    public readonly definitionRepository!: pulumi.Output<outputs.omics.WorkflowDefinitionRepository | undefined>;
    /**
     * The URI of a definition for the workflow.
     */
    public readonly definitionUri!: pulumi.Output<string | undefined>;
    /**
     * The parameter's description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * An engine for the workflow.
     */
    public readonly engine!: pulumi.Output<enums.omics.WorkflowEngine | undefined>;
    /**
     * The path of the main definition file for the workflow.
     */
    public readonly main!: pulumi.Output<string | undefined>;
    /**
     * The workflow's name.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The workflow's parameter template.
     */
    public readonly parameterTemplate!: pulumi.Output<{[key: string]: outputs.omics.WorkflowParameter} | undefined>;
    /**
     * Path to the primary workflow parameter template JSON file inside the repository
     */
    public readonly parameterTemplatePath!: pulumi.Output<string | undefined>;
    /**
     * The markdown content for the workflow's README file. This provides documentation and usage information for users of the workflow.
     */
    public readonly readmeMarkdown!: pulumi.Output<string | undefined>;
    /**
     * The path to the workflow README markdown file within the repository. This file provides documentation and usage information for the workflow. If not specified, the README.md file from the root directory of the repository will be used.
     */
    public readonly readmePath!: pulumi.Output<string | undefined>;
    /**
     * The S3 URI of the README file for the workflow. This file provides documentation and usage information for the workflow. The S3 URI must begin with s3://USER-OWNED-BUCKET/. The requester must have access to the S3 bucket and object. The max README content length is 500 KiB.
     */
    public readonly readmeUri!: pulumi.Output<string | undefined>;
    /**
     * The workflow's status.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.omics.WorkflowStatus>;
    /**
     * The default static storage capacity (in gibibytes) for runs that use this workflow or workflow version. The `storageCapacity` can be overwritten at run time. The storage capacity is not required for runs with a `DYNAMIC` storage type.
     */
    public readonly storageCapacity!: pulumi.Output<number | undefined>;
    public readonly storageType!: pulumi.Output<enums.omics.WorkflowStorageType | undefined>;
    /**
     * Tags for the workflow.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The workflow's type.
     */
    public /*out*/ readonly type!: pulumi.Output<enums.omics.WorkflowType>;
    public /*out*/ readonly uuid!: pulumi.Output<string>;
    /**
     * Optional workflow bucket owner ID to verify the workflow bucket
     */
    public readonly workflowBucketOwnerId!: pulumi.Output<string | undefined>;

    /**
     * Create a Workflow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkflowArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["accelerators"] = args ? args.accelerators : undefined;
            resourceInputs["containerRegistryMap"] = args ? args.containerRegistryMap : undefined;
            resourceInputs["containerRegistryMapUri"] = args ? args.containerRegistryMapUri : undefined;
            resourceInputs["definitionRepository"] = args ? args.definitionRepository : undefined;
            resourceInputs["definitionUri"] = args ? args.definitionUri : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["main"] = args ? args.main : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameterTemplate"] = args ? args.parameterTemplate : undefined;
            resourceInputs["parameterTemplatePath"] = args ? args.parameterTemplatePath : undefined;
            resourceInputs["readmeMarkdown"] = args ? args.readmeMarkdown : undefined;
            resourceInputs["readmePath"] = args ? args.readmePath : undefined;
            resourceInputs["readmeUri"] = args ? args.readmeUri : undefined;
            resourceInputs["storageCapacity"] = args ? args.storageCapacity : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["workflowBucketOwnerId"] = args ? args.workflowBucketOwnerId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        } else {
            resourceInputs["accelerators"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["containerRegistryMap"] = undefined /*out*/;
            resourceInputs["containerRegistryMapUri"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["definitionRepository"] = undefined /*out*/;
            resourceInputs["definitionUri"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["main"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["parameterTemplate"] = undefined /*out*/;
            resourceInputs["parameterTemplatePath"] = undefined /*out*/;
            resourceInputs["readmeMarkdown"] = undefined /*out*/;
            resourceInputs["readmePath"] = undefined /*out*/;
            resourceInputs["readmeUri"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storageCapacity"] = undefined /*out*/;
            resourceInputs["storageType"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
            resourceInputs["workflowBucketOwnerId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["accelerators", "containerRegistryMap", "containerRegistryMapUri", "definitionRepository", "definitionUri", "engine", "main", "parameterTemplate.*", "parameterTemplatePath", "readmePath", "readmeUri", "storageCapacity", "workflowBucketOwnerId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Workflow.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Workflow resource.
 */
export interface WorkflowArgs {
    accelerators?: pulumi.Input<enums.omics.WorkflowAccelerators>;
    /**
     * Use a container registry map to specify mappings between the ECR private repository and one or more upstream registries. For more information, see [Container images](https://docs.aws.amazon.com/omics/latest/dev/workflows-ecr.html) in the *AWS HealthOmics User Guide* .
     */
    containerRegistryMap?: pulumi.Input<inputs.omics.WorkflowContainerRegistryMapArgs>;
    containerRegistryMapUri?: pulumi.Input<string>;
    /**
     * Contains information about a source code repository that hosts the workflow definition files.
     */
    definitionRepository?: pulumi.Input<inputs.omics.WorkflowDefinitionRepositoryArgs>;
    /**
     * The URI of a definition for the workflow.
     */
    definitionUri?: pulumi.Input<string>;
    /**
     * The parameter's description.
     */
    description?: pulumi.Input<string>;
    /**
     * An engine for the workflow.
     */
    engine?: pulumi.Input<enums.omics.WorkflowEngine>;
    /**
     * The path of the main definition file for the workflow.
     */
    main?: pulumi.Input<string>;
    /**
     * The workflow's name.
     */
    name?: pulumi.Input<string>;
    /**
     * The workflow's parameter template.
     */
    parameterTemplate?: pulumi.Input<{[key: string]: pulumi.Input<inputs.omics.WorkflowParameterArgs>}>;
    /**
     * Path to the primary workflow parameter template JSON file inside the repository
     */
    parameterTemplatePath?: pulumi.Input<string>;
    /**
     * The markdown content for the workflow's README file. This provides documentation and usage information for users of the workflow.
     */
    readmeMarkdown?: pulumi.Input<string>;
    /**
     * The path to the workflow README markdown file within the repository. This file provides documentation and usage information for the workflow. If not specified, the README.md file from the root directory of the repository will be used.
     */
    readmePath?: pulumi.Input<string>;
    /**
     * The S3 URI of the README file for the workflow. This file provides documentation and usage information for the workflow. The S3 URI must begin with s3://USER-OWNED-BUCKET/. The requester must have access to the S3 bucket and object. The max README content length is 500 KiB.
     */
    readmeUri?: pulumi.Input<string>;
    /**
     * The default static storage capacity (in gibibytes) for runs that use this workflow or workflow version. The `storageCapacity` can be overwritten at run time. The storage capacity is not required for runs with a `DYNAMIC` storage type.
     */
    storageCapacity?: pulumi.Input<number>;
    storageType?: pulumi.Input<enums.omics.WorkflowStorageType>;
    /**
     * Tags for the workflow.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional workflow bucket owner ID to verify the workflow bucket
     */
    workflowBucketOwnerId?: pulumi.Input<string>;
}
