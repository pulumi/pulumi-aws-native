// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AnnotationStoreArgs } from "./annotationStore";
export type AnnotationStore = import("./annotationStore").AnnotationStore;
export const AnnotationStore: typeof import("./annotationStore").AnnotationStore = null as any;
utilities.lazyLoad(exports, ["AnnotationStore"], () => require("./annotationStore"));

export { GetAnnotationStoreArgs, GetAnnotationStoreResult, GetAnnotationStoreOutputArgs } from "./getAnnotationStore";
export const getAnnotationStore: typeof import("./getAnnotationStore").getAnnotationStore = null as any;
export const getAnnotationStoreOutput: typeof import("./getAnnotationStore").getAnnotationStoreOutput = null as any;
utilities.lazyLoad(exports, ["getAnnotationStore","getAnnotationStoreOutput"], () => require("./getAnnotationStore"));

export { GetReferenceStoreArgs, GetReferenceStoreResult, GetReferenceStoreOutputArgs } from "./getReferenceStore";
export const getReferenceStore: typeof import("./getReferenceStore").getReferenceStore = null as any;
export const getReferenceStoreOutput: typeof import("./getReferenceStore").getReferenceStoreOutput = null as any;
utilities.lazyLoad(exports, ["getReferenceStore","getReferenceStoreOutput"], () => require("./getReferenceStore"));

export { GetRunGroupArgs, GetRunGroupResult, GetRunGroupOutputArgs } from "./getRunGroup";
export const getRunGroup: typeof import("./getRunGroup").getRunGroup = null as any;
export const getRunGroupOutput: typeof import("./getRunGroup").getRunGroupOutput = null as any;
utilities.lazyLoad(exports, ["getRunGroup","getRunGroupOutput"], () => require("./getRunGroup"));

export { GetSequenceStoreArgs, GetSequenceStoreResult, GetSequenceStoreOutputArgs } from "./getSequenceStore";
export const getSequenceStore: typeof import("./getSequenceStore").getSequenceStore = null as any;
export const getSequenceStoreOutput: typeof import("./getSequenceStore").getSequenceStoreOutput = null as any;
utilities.lazyLoad(exports, ["getSequenceStore","getSequenceStoreOutput"], () => require("./getSequenceStore"));

export { GetVariantStoreArgs, GetVariantStoreResult, GetVariantStoreOutputArgs } from "./getVariantStore";
export const getVariantStore: typeof import("./getVariantStore").getVariantStore = null as any;
export const getVariantStoreOutput: typeof import("./getVariantStore").getVariantStoreOutput = null as any;
utilities.lazyLoad(exports, ["getVariantStore","getVariantStoreOutput"], () => require("./getVariantStore"));

export { GetWorkflowArgs, GetWorkflowResult, GetWorkflowOutputArgs } from "./getWorkflow";
export const getWorkflow: typeof import("./getWorkflow").getWorkflow = null as any;
export const getWorkflowOutput: typeof import("./getWorkflow").getWorkflowOutput = null as any;
utilities.lazyLoad(exports, ["getWorkflow","getWorkflowOutput"], () => require("./getWorkflow"));

export { ReferenceStoreArgs } from "./referenceStore";
export type ReferenceStore = import("./referenceStore").ReferenceStore;
export const ReferenceStore: typeof import("./referenceStore").ReferenceStore = null as any;
utilities.lazyLoad(exports, ["ReferenceStore"], () => require("./referenceStore"));

export { RunGroupArgs } from "./runGroup";
export type RunGroup = import("./runGroup").RunGroup;
export const RunGroup: typeof import("./runGroup").RunGroup = null as any;
utilities.lazyLoad(exports, ["RunGroup"], () => require("./runGroup"));

export { SequenceStoreArgs } from "./sequenceStore";
export type SequenceStore = import("./sequenceStore").SequenceStore;
export const SequenceStore: typeof import("./sequenceStore").SequenceStore = null as any;
utilities.lazyLoad(exports, ["SequenceStore"], () => require("./sequenceStore"));

export { VariantStoreArgs } from "./variantStore";
export type VariantStore = import("./variantStore").VariantStore;
export const VariantStore: typeof import("./variantStore").VariantStore = null as any;
utilities.lazyLoad(exports, ["VariantStore"], () => require("./variantStore"));

export { WorkflowArgs } from "./workflow";
export type Workflow = import("./workflow").Workflow;
export const Workflow: typeof import("./workflow").Workflow = null as any;
utilities.lazyLoad(exports, ["Workflow"], () => require("./workflow"));


// Export enums:
export * from "../types/enums/omics";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:omics:AnnotationStore":
                return new AnnotationStore(name, <any>undefined, { urn })
            case "aws-native:omics:ReferenceStore":
                return new ReferenceStore(name, <any>undefined, { urn })
            case "aws-native:omics:RunGroup":
                return new RunGroup(name, <any>undefined, { urn })
            case "aws-native:omics:SequenceStore":
                return new SequenceStore(name, <any>undefined, { urn })
            case "aws-native:omics:VariantStore":
                return new VariantStore(name, <any>undefined, { urn })
            case "aws-native:omics:Workflow":
                return new Workflow(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "omics", _module)
