// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Omics::WorkflowVersion Resource Type.
 */
export class WorkflowVersion extends pulumi.CustomResource {
    /**
     * Get an existing WorkflowVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WorkflowVersion {
        return new WorkflowVersion(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:omics:WorkflowVersion';

    /**
     * Returns true if the given object is an instance of WorkflowVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkflowVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkflowVersion.__pulumiType;
    }

    public readonly accelerators!: pulumi.Output<enums.omics.WorkflowVersionAccelerators | undefined>;
    /**
     * ARN of the workflow version.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The creation time of the workflow version.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    public readonly definitionRepository!: pulumi.Output<outputs.omics.WorkflowVersionDefinitionRepository | undefined>;
    public readonly definitionUri!: pulumi.Output<string | undefined>;
    /**
     * The description of the workflow version.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly engine!: pulumi.Output<enums.omics.WorkflowVersionWorkflowEngine | undefined>;
    public readonly main!: pulumi.Output<string | undefined>;
    public readonly parameterTemplate!: pulumi.Output<{[key: string]: outputs.omics.WorkflowVersionWorkflowParameter} | undefined>;
    /**
     * Path to the primary workflow parameter template JSON file inside the repository
     */
    public readonly parameterTemplatePath!: pulumi.Output<string | undefined>;
    /**
     * The markdown content for the workflow's README file. This provides documentation and usage information for users of the workflow.
     */
    public readonly readmeMarkdown!: pulumi.Output<string | undefined>;
    /**
     * The path to the workflow README markdown file within the repository. This file provides documentation and usage information for the workflow. If not specified, the README.md file from the root directory of the repository will be used.
     */
    public readonly readmePath!: pulumi.Output<string | undefined>;
    /**
     * The S3 URI of the README file for the workflow. This file provides documentation and usage information for the workflow. The S3 URI must begin with s3://USER-OWNED-BUCKET/. The requester must have access to the S3 bucket and object. The max README content length is 500 KiB.
     */
    public readonly readmeUri!: pulumi.Output<string | undefined>;
    /**
     * The status of the workflow version.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.omics.WorkflowVersionWorkflowStatus>;
    public readonly storageCapacity!: pulumi.Output<number | undefined>;
    public readonly storageType!: pulumi.Output<enums.omics.WorkflowVersionStorageType | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the workflow version.
     */
    public /*out*/ readonly type!: pulumi.Output<enums.omics.WorkflowVersionWorkflowType>;
    public /*out*/ readonly uuid!: pulumi.Output<string>;
    /**
     * The name of the workflow version.
     */
    public readonly versionName!: pulumi.Output<string>;
    public readonly workflowBucketOwnerId!: pulumi.Output<string | undefined>;
    /**
     * The workflow's ID.
     */
    public readonly workflowId!: pulumi.Output<string>;

    /**
     * Create a WorkflowVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkflowVersionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.workflowId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workflowId'");
            }
            resourceInputs["accelerators"] = args ? args.accelerators : undefined;
            resourceInputs["definitionRepository"] = args ? args.definitionRepository : undefined;
            resourceInputs["definitionUri"] = args ? args.definitionUri : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["main"] = args ? args.main : undefined;
            resourceInputs["parameterTemplate"] = args ? args.parameterTemplate : undefined;
            resourceInputs["parameterTemplatePath"] = args ? args.parameterTemplatePath : undefined;
            resourceInputs["readmeMarkdown"] = args ? args.readmeMarkdown : undefined;
            resourceInputs["readmePath"] = args ? args.readmePath : undefined;
            resourceInputs["readmeUri"] = args ? args.readmeUri : undefined;
            resourceInputs["storageCapacity"] = args ? args.storageCapacity : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionName"] = args ? args.versionName : undefined;
            resourceInputs["workflowBucketOwnerId"] = args ? args.workflowBucketOwnerId : undefined;
            resourceInputs["workflowId"] = args ? args.workflowId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        } else {
            resourceInputs["accelerators"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["definitionRepository"] = undefined /*out*/;
            resourceInputs["definitionUri"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["main"] = undefined /*out*/;
            resourceInputs["parameterTemplate"] = undefined /*out*/;
            resourceInputs["parameterTemplatePath"] = undefined /*out*/;
            resourceInputs["readmeMarkdown"] = undefined /*out*/;
            resourceInputs["readmePath"] = undefined /*out*/;
            resourceInputs["readmeUri"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storageCapacity"] = undefined /*out*/;
            resourceInputs["storageType"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
            resourceInputs["versionName"] = undefined /*out*/;
            resourceInputs["workflowBucketOwnerId"] = undefined /*out*/;
            resourceInputs["workflowId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["accelerators", "definitionRepository", "definitionUri", "engine", "main", "parameterTemplate.*", "parameterTemplatePath", "readmePath", "readmeUri", "versionName", "workflowBucketOwnerId", "workflowId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(WorkflowVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a WorkflowVersion resource.
 */
export interface WorkflowVersionArgs {
    accelerators?: pulumi.Input<enums.omics.WorkflowVersionAccelerators>;
    definitionRepository?: pulumi.Input<inputs.omics.WorkflowVersionDefinitionRepositoryArgs>;
    definitionUri?: pulumi.Input<string>;
    /**
     * The description of the workflow version.
     */
    description?: pulumi.Input<string>;
    engine?: pulumi.Input<enums.omics.WorkflowVersionWorkflowEngine>;
    main?: pulumi.Input<string>;
    parameterTemplate?: pulumi.Input<{[key: string]: pulumi.Input<inputs.omics.WorkflowVersionWorkflowParameterArgs>}>;
    /**
     * Path to the primary workflow parameter template JSON file inside the repository
     */
    parameterTemplatePath?: pulumi.Input<string>;
    /**
     * The markdown content for the workflow's README file. This provides documentation and usage information for users of the workflow.
     */
    readmeMarkdown?: pulumi.Input<string>;
    /**
     * The path to the workflow README markdown file within the repository. This file provides documentation and usage information for the workflow. If not specified, the README.md file from the root directory of the repository will be used.
     */
    readmePath?: pulumi.Input<string>;
    /**
     * The S3 URI of the README file for the workflow. This file provides documentation and usage information for the workflow. The S3 URI must begin with s3://USER-OWNED-BUCKET/. The requester must have access to the S3 bucket and object. The max README content length is 500 KiB.
     */
    readmeUri?: pulumi.Input<string>;
    storageCapacity?: pulumi.Input<number>;
    storageType?: pulumi.Input<enums.omics.WorkflowVersionStorageType>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the workflow version.
     */
    versionName?: pulumi.Input<string>;
    workflowBucketOwnerId?: pulumi.Input<string>;
    /**
     * The workflow's ID.
     */
    workflowId: pulumi.Input<string>;
}
