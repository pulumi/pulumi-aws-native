// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Omics::RunGroup Resource Type
 */
export class RunGroup extends pulumi.CustomResource {
    /**
     * Get an existing RunGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RunGroup {
        return new RunGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:omics:RunGroup';

    /**
     * Returns true if the given object is an instance of RunGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RunGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RunGroup.__pulumiType;
    }

    /**
     * The run group's ARN.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The run group's ID.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * When the run group was created.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The group's maximum CPU count setting.
     */
    public readonly maxCpus!: pulumi.Output<number | undefined>;
    /**
     * The group's maximum duration setting in minutes.
     */
    public readonly maxDuration!: pulumi.Output<number | undefined>;
    /**
     * The maximum GPUs that can be used by a run group.
     */
    public readonly maxGpus!: pulumi.Output<number | undefined>;
    /**
     * The group's maximum concurrent run setting.
     */
    public readonly maxRuns!: pulumi.Output<number | undefined>;
    /**
     * The group's name.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Tags for the group.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a RunGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RunGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["maxCpus"] = args ? args.maxCpus : undefined;
            resourceInputs["maxDuration"] = args ? args.maxDuration : undefined;
            resourceInputs["maxGpus"] = args ? args.maxGpus : undefined;
            resourceInputs["maxRuns"] = args ? args.maxRuns : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["maxCpus"] = undefined /*out*/;
            resourceInputs["maxDuration"] = undefined /*out*/;
            resourceInputs["maxGpus"] = undefined /*out*/;
            resourceInputs["maxRuns"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RunGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RunGroup resource.
 */
export interface RunGroupArgs {
    /**
     * The group's maximum CPU count setting.
     */
    maxCpus?: pulumi.Input<number>;
    /**
     * The group's maximum duration setting in minutes.
     */
    maxDuration?: pulumi.Input<number>;
    /**
     * The maximum GPUs that can be used by a run group.
     */
    maxGpus?: pulumi.Input<number>;
    /**
     * The group's maximum concurrent run setting.
     */
    maxRuns?: pulumi.Input<number>;
    /**
     * The group's name.
     */
    name?: pulumi.Input<string>;
    /**
     * Tags for the group.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
