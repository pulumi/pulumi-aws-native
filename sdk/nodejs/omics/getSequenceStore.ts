// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Omics::SequenceStore
 */
export function getSequenceStore(args: GetSequenceStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetSequenceStoreResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:omics:getSequenceStore", {
        "sequenceStoreId": args.sequenceStoreId,
    }, opts);
}

export interface GetSequenceStoreArgs {
    /**
     * The store's ID.
     */
    sequenceStoreId: string;
}

export interface GetSequenceStoreResult {
    /**
     * Location of the access logs.
     */
    readonly accessLogLocation?: string;
    /**
     * The store's ARN.
     */
    readonly arn?: string;
    /**
     * When the store was created.
     */
    readonly creationTime?: string;
    /**
     * A description for the store.
     */
    readonly description?: string;
    /**
     * An S3 location that is used to store files that have failed a direct upload.
     */
    readonly fallbackLocation?: string;
    /**
     * A name for the store.
     */
    readonly name?: string;
    /**
     * The tags keys to propagate to the S3 objects associated with read sets in the sequence store.
     */
    readonly propagatedSetLevelTags?: string[];
    /**
     * This is ARN of the access point associated with the S3 bucket storing read sets.
     */
    readonly s3AccessPointArn?: string;
    /**
     * The resource policy that controls S3 access on the store
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Omics::SequenceStore` for more information about the expected schema for this property.
     */
    readonly s3AccessPolicy?: any;
    /**
     * The S3 URI of the sequence store.
     */
    readonly s3Uri?: string;
    /**
     * The store's ID.
     */
    readonly sequenceStoreId?: string;
    /**
     * Status of the sequence store.
     */
    readonly status?: enums.omics.SequenceStoreStatus;
    /**
     * The status message of the sequence store.
     */
    readonly statusMessage?: string;
    /**
     * Tags for the store.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The last-updated time of the sequence store.
     */
    readonly updateTime?: string;
}
/**
 * Resource Type definition for AWS::Omics::SequenceStore
 */
export function getSequenceStoreOutput(args: GetSequenceStoreOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSequenceStoreResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:omics:getSequenceStore", {
        "sequenceStoreId": args.sequenceStoreId,
    }, opts);
}

export interface GetSequenceStoreOutputArgs {
    /**
     * The store's ID.
     */
    sequenceStoreId: pulumi.Input<string>;
}
