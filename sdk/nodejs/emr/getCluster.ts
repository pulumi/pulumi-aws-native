// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EMR::Cluster
 */
export function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:emr:getCluster", {
        "id": args.id,
    }, opts);
}

export interface GetClusterArgs {
    id: string;
}

export interface GetClusterResult {
    readonly id?: string;
    readonly instances?: outputs.emr.ClusterJobFlowInstancesConfig;
    readonly managedScalingPolicy?: outputs.emr.ClusterManagedScalingPolicy;
    readonly masterPublicDNS?: string;
    readonly stepConcurrencyLevel?: number;
    readonly tags?: outputs.emr.ClusterTag[];
    readonly visibleToAllUsers?: boolean;
}

export function getClusterOutput(args: GetClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterResult> {
    return pulumi.output(args).apply(a => getCluster(a, opts))
}

export interface GetClusterOutputArgs {
    id: pulumi.Input<string>;
}
