// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetStudioArgs, GetStudioResult, GetStudioOutputArgs } from "./getStudio";
export const getStudio: typeof import("./getStudio").getStudio = null as any;
export const getStudioOutput: typeof import("./getStudio").getStudioOutput = null as any;
utilities.lazyLoad(exports, ["getStudio","getStudioOutput"], () => require("./getStudio"));

export { GetStudioSessionMappingArgs, GetStudioSessionMappingResult, GetStudioSessionMappingOutputArgs } from "./getStudioSessionMapping";
export const getStudioSessionMapping: typeof import("./getStudioSessionMapping").getStudioSessionMapping = null as any;
export const getStudioSessionMappingOutput: typeof import("./getStudioSessionMapping").getStudioSessionMappingOutput = null as any;
utilities.lazyLoad(exports, ["getStudioSessionMapping","getStudioSessionMappingOutput"], () => require("./getStudioSessionMapping"));

export { GetWalWorkspaceArgs, GetWalWorkspaceResult, GetWalWorkspaceOutputArgs } from "./getWalWorkspace";
export const getWalWorkspace: typeof import("./getWalWorkspace").getWalWorkspace = null as any;
export const getWalWorkspaceOutput: typeof import("./getWalWorkspace").getWalWorkspaceOutput = null as any;
utilities.lazyLoad(exports, ["getWalWorkspace","getWalWorkspaceOutput"], () => require("./getWalWorkspace"));

export { SecurityConfigurationArgs } from "./securityConfiguration";
export type SecurityConfiguration = import("./securityConfiguration").SecurityConfiguration;
export const SecurityConfiguration: typeof import("./securityConfiguration").SecurityConfiguration = null as any;
utilities.lazyLoad(exports, ["SecurityConfiguration"], () => require("./securityConfiguration"));

export { StudioArgs } from "./studio";
export type Studio = import("./studio").Studio;
export const Studio: typeof import("./studio").Studio = null as any;
utilities.lazyLoad(exports, ["Studio"], () => require("./studio"));

export { StudioSessionMappingArgs } from "./studioSessionMapping";
export type StudioSessionMapping = import("./studioSessionMapping").StudioSessionMapping;
export const StudioSessionMapping: typeof import("./studioSessionMapping").StudioSessionMapping = null as any;
utilities.lazyLoad(exports, ["StudioSessionMapping"], () => require("./studioSessionMapping"));

export { WalWorkspaceArgs } from "./walWorkspace";
export type WalWorkspace = import("./walWorkspace").WalWorkspace;
export const WalWorkspace: typeof import("./walWorkspace").WalWorkspace = null as any;
utilities.lazyLoad(exports, ["WalWorkspace"], () => require("./walWorkspace"));


// Export enums:
export * from "../types/enums/emr";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:emr:SecurityConfiguration":
                return new SecurityConfiguration(name, <any>undefined, { urn })
            case "aws-native:emr:Studio":
                return new Studio(name, <any>undefined, { urn })
            case "aws-native:emr:StudioSessionMapping":
                return new StudioSessionMapping(name, <any>undefined, { urn })
            case "aws-native:emr:WalWorkspace":
                return new WalWorkspace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "emr", _module)
