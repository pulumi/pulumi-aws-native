// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::EMR::Studio
 */
export function getStudio(args: GetStudioArgs, opts?: pulumi.InvokeOptions): Promise<GetStudioResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:emr:getStudio", {
        "studioId": args.studioId,
    }, opts);
}

export interface GetStudioArgs {
    /**
     * The ID of the EMR Studio.
     */
    studioId: string;
}

export interface GetStudioResult {
    /**
     * The Amazon Resource Name (ARN) of the EMR Studio.
     */
    readonly arn?: string;
    /**
     * The default Amazon S3 location to back up EMR Studio Workspaces and notebook files. A Studio user can select an alternative Amazon S3 location when creating a Workspace.
     */
    readonly defaultS3Location?: string;
    /**
     * A detailed description of the Studio.
     */
    readonly description?: string;
    /**
     * Your identity provider's authentication endpoint. Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL.
     */
    readonly idpAuthUrl?: string;
    /**
     * The name of relay state parameter for external Identity Provider.
     */
    readonly idpRelayStateParameterName?: string;
    /**
     * A descriptive name for the Amazon EMR Studio.
     */
    readonly name?: string;
    /**
     * The ID of the EMR Studio.
     */
    readonly studioId?: string;
    /**
     * A list of up to 5 subnet IDs to associate with the Studio. The subnets must belong to the VPC specified by VpcId. Studio users can create a Workspace in any of the specified subnets.
     */
    readonly subnetIds?: string[];
    /**
     * A list of tags to associate with the Studio. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters.
     */
    readonly tags?: outputs.emr.StudioTag[];
    /**
     * The unique Studio access URL.
     */
    readonly url?: string;
}

export function getStudioOutput(args: GetStudioOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStudioResult> {
    return pulumi.output(args).apply(a => getStudio(a, opts))
}

export interface GetStudioOutputArgs {
    /**
     * The ID of the EMR Studio.
     */
    studioId: pulumi.Input<string>;
}
