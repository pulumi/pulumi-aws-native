// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Cognito::ManagedLoginBranding
 */
export function getManagedLoginBranding(args: GetManagedLoginBrandingArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedLoginBrandingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cognito:getManagedLoginBranding", {
        "managedLoginBrandingId": args.managedLoginBrandingId,
        "userPoolId": args.userPoolId,
    }, opts);
}

export interface GetManagedLoginBrandingArgs {
    managedLoginBrandingId: string;
    userPoolId: string;
}

export interface GetManagedLoginBrandingResult {
    readonly assets?: outputs.cognito.ManagedLoginBrandingAssetType[];
    readonly managedLoginBrandingId?: string;
    /**
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::ManagedLoginBranding` for more information about the expected schema for this property.
     */
    readonly settings?: any;
    readonly useCognitoProvidedValues?: boolean;
}
/**
 * Resource Type definition for AWS::Cognito::ManagedLoginBranding
 */
export function getManagedLoginBrandingOutput(args: GetManagedLoginBrandingOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedLoginBrandingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:cognito:getManagedLoginBranding", {
        "managedLoginBrandingId": args.managedLoginBrandingId,
        "userPoolId": args.userPoolId,
    }, opts);
}

export interface GetManagedLoginBrandingOutputArgs {
    managedLoginBrandingId: pulumi.Input<string>;
    userPoolId: pulumi.Input<string>;
}
