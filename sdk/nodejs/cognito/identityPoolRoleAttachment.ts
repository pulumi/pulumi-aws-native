// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Cognito::IdentityPoolRoleAttachment
 */
export class IdentityPoolRoleAttachment extends pulumi.CustomResource {
    /**
     * Get an existing IdentityPoolRoleAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IdentityPoolRoleAttachment {
        return new IdentityPoolRoleAttachment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:cognito:IdentityPoolRoleAttachment';

    /**
     * Returns true if the given object is an instance of IdentityPoolRoleAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IdentityPoolRoleAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IdentityPoolRoleAttachment.__pulumiType;
    }

    /**
     * The resource ID.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * An identity pool ID in the format `REGION:GUID` .
     */
    public readonly identityPoolId!: pulumi.Output<string>;
    /**
     * How users for a specific identity provider are mapped to roles. This is a string to the `RoleMapping` object map. The string identifies the identity provider. For example: `graph.facebook.com` or `cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id` .
     *
     * If the `IdentityProvider` field isn't provided in this object, the string is used as the identity provider name.
     *
     * For more information, see the [RoleMapping property](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html) .
     */
    public readonly roleMappings!: pulumi.Output<{[key: string]: outputs.cognito.IdentityPoolRoleAttachmentRoleMapping} | undefined>;
    /**
     * The map of the roles associated with this pool. For a given role, the key is either "authenticated" or "unauthenticated". The value is the role ARN.
     */
    public readonly roles!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a IdentityPoolRoleAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdentityPoolRoleAttachmentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.identityPoolId === undefined && !opts.urn) {
                throw new Error("Missing required property 'identityPoolId'");
            }
            resourceInputs["identityPoolId"] = args?.identityPoolId;
            resourceInputs["roleMappings"] = args?.roleMappings;
            resourceInputs["roles"] = args?.roles;
            resourceInputs["awsId"] = undefined /*out*/;
        } else {
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["identityPoolId"] = undefined /*out*/;
            resourceInputs["roleMappings"] = undefined /*out*/;
            resourceInputs["roles"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["identityPoolId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(IdentityPoolRoleAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a IdentityPoolRoleAttachment resource.
 */
export interface IdentityPoolRoleAttachmentArgs {
    /**
     * An identity pool ID in the format `REGION:GUID` .
     */
    identityPoolId: pulumi.Input<string>;
    /**
     * How users for a specific identity provider are mapped to roles. This is a string to the `RoleMapping` object map. The string identifies the identity provider. For example: `graph.facebook.com` or `cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id` .
     *
     * If the `IdentityProvider` field isn't provided in this object, the string is used as the identity provider name.
     *
     * For more information, see the [RoleMapping property](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html) .
     */
    roleMappings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.cognito.IdentityPoolRoleAttachmentRoleMappingArgs>}>;
    /**
     * The map of the roles associated with this pool. For a given role, the key is either "authenticated" or "unauthenticated". The value is the role ARN.
     */
    roles?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
