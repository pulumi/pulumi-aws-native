// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Cognito::UserPoolClient
 */
export function getUserPoolClient(args: GetUserPoolClientArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolClientResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:cognito:getUserPoolClient", {
        "id": args.id,
    }, opts);
}

export interface GetUserPoolClientArgs {
    id: string;
}

export interface GetUserPoolClientResult {
    readonly accessTokenValidity?: number;
    readonly allowedOAuthFlows?: string[];
    readonly allowedOAuthFlowsUserPoolClient?: boolean;
    readonly allowedOAuthScopes?: string[];
    readonly analyticsConfiguration?: outputs.cognito.UserPoolClientAnalyticsConfiguration;
    readonly callbackURLs?: string[];
    readonly clientName?: string;
    readonly clientSecret?: string;
    readonly defaultRedirectURI?: string;
    readonly enablePropagateAdditionalUserContextData?: boolean;
    readonly enableTokenRevocation?: boolean;
    readonly explicitAuthFlows?: string[];
    readonly id?: string;
    readonly idTokenValidity?: number;
    readonly logoutURLs?: string[];
    readonly name?: string;
    readonly preventUserExistenceErrors?: string;
    readonly readAttributes?: string[];
    readonly refreshTokenValidity?: number;
    readonly supportedIdentityProviders?: string[];
    readonly tokenValidityUnits?: outputs.cognito.UserPoolClientTokenValidityUnits;
    readonly writeAttributes?: string[];
}

export function getUserPoolClientOutput(args: GetUserPoolClientOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserPoolClientResult> {
    return pulumi.output(args).apply(a => getUserPoolClient(a, opts))
}

export interface GetUserPoolClientOutputArgs {
    id: pulumi.Input<string>;
}
