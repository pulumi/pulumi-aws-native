// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Cognito::UserPoolDomain
 */
export function getUserPoolDomain(args: GetUserPoolDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolDomainResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cognito:getUserPoolDomain", {
        "id": args.id,
    }, opts);
}

export interface GetUserPoolDomainArgs {
    /**
     * The resource ID.
     */
    id: string;
}

export interface GetUserPoolDomainResult {
    /**
     * The Amazon CloudFront endpoint that you use as the target of the alias that you set up with your Domain Name Service (DNS) provider.
     */
    readonly cloudFrontDistribution?: string;
    /**
     * The configuration for a custom domain that hosts the sign-up and sign-in pages for your application. Use this object to specify an SSL certificate that is managed by ACM.
     *
     * When you create a custom domain, the passkey RP ID defaults to the custom domain. If you had a prefix domain active, this will cause passkey integration for your prefix domain to stop working due to a mismatch in RP ID. To keep the prefix domain passkey integration working, you can explicitly set RP ID to the prefix domain. Update the RP ID in a [SetUserPoolMfaConfig](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserPoolMfaConfig.html) request.
     */
    readonly customDomainConfig?: outputs.cognito.UserPoolDomainCustomDomainConfigType;
    /**
     * The resource ID.
     */
    readonly id?: string;
    readonly managedLoginVersion?: number;
}
/**
 * Resource Type definition for AWS::Cognito::UserPoolDomain
 */
export function getUserPoolDomainOutput(args: GetUserPoolDomainOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserPoolDomainResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:cognito:getUserPoolDomain", {
        "id": args.id,
    }, opts);
}

export interface GetUserPoolDomainOutputArgs {
    /**
     * The resource ID.
     */
    id: pulumi.Input<string>;
}
