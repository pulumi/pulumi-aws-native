// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Cognito::IdentityPoolRoleAttachment
 */
export function getIdentityPoolRoleAttachment(args: GetIdentityPoolRoleAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityPoolRoleAttachmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cognito:getIdentityPoolRoleAttachment", {
        "id": args.id,
    }, opts);
}

export interface GetIdentityPoolRoleAttachmentArgs {
    /**
     * The resource ID.
     */
    id: string;
}

export interface GetIdentityPoolRoleAttachmentResult {
    /**
     * The resource ID.
     */
    readonly id?: string;
    /**
     * How users for a specific identity provider are mapped to roles. This is a string to the `RoleMapping` object map. The string identifies the identity provider. For example: `graph.facebook.com` or `cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id` .
     *
     * If the `IdentityProvider` field isn't provided in this object, the string is used as the identity provider name.
     *
     * For more information, see the [RoleMapping property](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html) .
     */
    readonly roleMappings?: {[key: string]: outputs.cognito.IdentityPoolRoleAttachmentRoleMapping};
    /**
     * The map of the roles associated with this pool. For a given role, the key is either "authenticated" or "unauthenticated". The value is the role ARN.
     */
    readonly roles?: {[key: string]: string};
}
/**
 * Resource Type definition for AWS::Cognito::IdentityPoolRoleAttachment
 */
export function getIdentityPoolRoleAttachmentOutput(args: GetIdentityPoolRoleAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityPoolRoleAttachmentResult> {
    return pulumi.output(args).apply((a: any) => getIdentityPoolRoleAttachment(a, opts))
}

export interface GetIdentityPoolRoleAttachmentOutputArgs {
    /**
     * The resource ID.
     */
    id: pulumi.Input<string>;
}
