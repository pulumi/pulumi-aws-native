// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Cognito::UserPoolGroup
 */
export function getUserPoolGroup(args: GetUserPoolGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cognito:getUserPoolGroup", {
        "groupName": args.groupName,
        "userPoolId": args.userPoolId,
    }, opts);
}

export interface GetUserPoolGroupArgs {
    /**
     * The name of the group. Must be unique.
     */
    groupName: string;
    /**
     * The user pool ID for the user pool.
     */
    userPoolId: string;
}

export interface GetUserPoolGroupResult {
    /**
     * A string containing the description of the group.
     */
    readonly description?: string;
    /**
     * A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool. Zero is the highest precedence value. Groups with lower `Precedence` values take precedence over groups with higher or null `Precedence` values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the `cognito:roles` and `cognito:preferred_role` claims.
     *
     * Two groups can have the same `Precedence` value. If this happens, neither group takes precedence over the other. If two groups with the same `Precedence` have the same role ARN, that role is used in the `cognito:preferred_role` claim in tokens for users in each group. If the two groups have different role ARNs, the `cognito:preferred_role` claim isn't set in users' tokens.
     *
     * The default `Precedence` value is null. The maximum `Precedence` value is `2^31-1` .
     */
    readonly precedence?: number;
    /**
     * The role Amazon Resource Name (ARN) for the group.
     */
    readonly roleArn?: string;
}
/**
 * Resource Type definition for AWS::Cognito::UserPoolGroup
 */
export function getUserPoolGroupOutput(args: GetUserPoolGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserPoolGroupResult> {
    return pulumi.output(args).apply((a: any) => getUserPoolGroup(a, opts))
}

export interface GetUserPoolGroupOutputArgs {
    /**
     * The name of the group. Must be unique.
     */
    groupName: pulumi.Input<string>;
    /**
     * The user pool ID for the user pool.
     */
    userPoolId: pulumi.Input<string>;
}
