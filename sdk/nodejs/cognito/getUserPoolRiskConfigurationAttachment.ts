// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Cognito::UserPoolRiskConfigurationAttachment
 */
export function getUserPoolRiskConfigurationAttachment(args: GetUserPoolRiskConfigurationAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolRiskConfigurationAttachmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cognito:getUserPoolRiskConfigurationAttachment", {
        "clientId": args.clientId,
        "userPoolId": args.userPoolId,
    }, opts);
}

export interface GetUserPoolRiskConfigurationAttachmentArgs {
    /**
     * The app client where this configuration is applied. When this parameter isn't present, the risk configuration applies to all user pool app clients that don't have client-level settings.
     */
    clientId: string;
    /**
     * The ID of the user pool that has the risk configuration applied.
     */
    userPoolId: string;
}

export interface GetUserPoolRiskConfigurationAttachmentResult {
    /**
     * The settings for automated responses and notification templates for adaptive authentication with advanced security features.
     */
    readonly accountTakeoverRiskConfiguration?: outputs.cognito.UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType;
    /**
     * Settings for compromised-credentials actions and authentication types with advanced security features in full-function `ENFORCED` mode.
     */
    readonly compromisedCredentialsRiskConfiguration?: outputs.cognito.UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType;
    /**
     * Exceptions to the risk evaluation configuration, including always-allow and always-block IP address ranges.
     */
    readonly riskExceptionConfiguration?: outputs.cognito.UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType;
}
/**
 * Resource Type definition for AWS::Cognito::UserPoolRiskConfigurationAttachment
 */
export function getUserPoolRiskConfigurationAttachmentOutput(args: GetUserPoolRiskConfigurationAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserPoolRiskConfigurationAttachmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:cognito:getUserPoolRiskConfigurationAttachment", {
        "clientId": args.clientId,
        "userPoolId": args.userPoolId,
    }, opts);
}

export interface GetUserPoolRiskConfigurationAttachmentOutputArgs {
    /**
     * The app client where this configuration is applied. When this parameter isn't present, the risk configuration applies to all user pool app clients that don't have client-level settings.
     */
    clientId: pulumi.Input<string>;
    /**
     * The ID of the user pool that has the risk configuration applied.
     */
    userPoolId: pulumi.Input<string>;
}
