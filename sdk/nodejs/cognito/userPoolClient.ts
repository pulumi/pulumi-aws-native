// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Cognito::UserPoolClient
 *
 * @deprecated UserPoolClient is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class UserPoolClient extends pulumi.CustomResource {
    /**
     * Get an existing UserPoolClient resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UserPoolClient {
        pulumi.log.warn("UserPoolClient is deprecated: UserPoolClient is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new UserPoolClient(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:cognito:UserPoolClient';

    /**
     * Returns true if the given object is an instance of UserPoolClient.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserPoolClient {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserPoolClient.__pulumiType;
    }

    public readonly accessTokenValidity!: pulumi.Output<number | undefined>;
    public readonly allowedOAuthFlows!: pulumi.Output<string[] | undefined>;
    public readonly allowedOAuthFlowsUserPoolClient!: pulumi.Output<boolean | undefined>;
    public readonly allowedOAuthScopes!: pulumi.Output<string[] | undefined>;
    public readonly analyticsConfiguration!: pulumi.Output<outputs.cognito.UserPoolClientAnalyticsConfiguration | undefined>;
    public readonly callbackURLs!: pulumi.Output<string[] | undefined>;
    public readonly clientName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly clientSecret!: pulumi.Output<string>;
    public readonly defaultRedirectURI!: pulumi.Output<string | undefined>;
    public readonly enableTokenRevocation!: pulumi.Output<boolean | undefined>;
    public readonly explicitAuthFlows!: pulumi.Output<string[] | undefined>;
    public readonly generateSecret!: pulumi.Output<boolean | undefined>;
    public readonly idTokenValidity!: pulumi.Output<number | undefined>;
    public readonly logoutURLs!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly preventUserExistenceErrors!: pulumi.Output<string | undefined>;
    public readonly readAttributes!: pulumi.Output<string[] | undefined>;
    public readonly refreshTokenValidity!: pulumi.Output<number | undefined>;
    public readonly supportedIdentityProviders!: pulumi.Output<string[] | undefined>;
    public readonly tokenValidityUnits!: pulumi.Output<outputs.cognito.UserPoolClientTokenValidityUnits | undefined>;
    public readonly userPoolId!: pulumi.Output<string>;
    public readonly writeAttributes!: pulumi.Output<string[] | undefined>;

    /**
     * Create a UserPoolClient resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated UserPoolClient is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: UserPoolClientArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("UserPoolClient is deprecated: UserPoolClient is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.userPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userPoolId'");
            }
            inputs["accessTokenValidity"] = args ? args.accessTokenValidity : undefined;
            inputs["allowedOAuthFlows"] = args ? args.allowedOAuthFlows : undefined;
            inputs["allowedOAuthFlowsUserPoolClient"] = args ? args.allowedOAuthFlowsUserPoolClient : undefined;
            inputs["allowedOAuthScopes"] = args ? args.allowedOAuthScopes : undefined;
            inputs["analyticsConfiguration"] = args ? args.analyticsConfiguration : undefined;
            inputs["callbackURLs"] = args ? args.callbackURLs : undefined;
            inputs["clientName"] = args ? args.clientName : undefined;
            inputs["defaultRedirectURI"] = args ? args.defaultRedirectURI : undefined;
            inputs["enableTokenRevocation"] = args ? args.enableTokenRevocation : undefined;
            inputs["explicitAuthFlows"] = args ? args.explicitAuthFlows : undefined;
            inputs["generateSecret"] = args ? args.generateSecret : undefined;
            inputs["idTokenValidity"] = args ? args.idTokenValidity : undefined;
            inputs["logoutURLs"] = args ? args.logoutURLs : undefined;
            inputs["preventUserExistenceErrors"] = args ? args.preventUserExistenceErrors : undefined;
            inputs["readAttributes"] = args ? args.readAttributes : undefined;
            inputs["refreshTokenValidity"] = args ? args.refreshTokenValidity : undefined;
            inputs["supportedIdentityProviders"] = args ? args.supportedIdentityProviders : undefined;
            inputs["tokenValidityUnits"] = args ? args.tokenValidityUnits : undefined;
            inputs["userPoolId"] = args ? args.userPoolId : undefined;
            inputs["writeAttributes"] = args ? args.writeAttributes : undefined;
            inputs["clientSecret"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
        } else {
            inputs["accessTokenValidity"] = undefined /*out*/;
            inputs["allowedOAuthFlows"] = undefined /*out*/;
            inputs["allowedOAuthFlowsUserPoolClient"] = undefined /*out*/;
            inputs["allowedOAuthScopes"] = undefined /*out*/;
            inputs["analyticsConfiguration"] = undefined /*out*/;
            inputs["callbackURLs"] = undefined /*out*/;
            inputs["clientName"] = undefined /*out*/;
            inputs["clientSecret"] = undefined /*out*/;
            inputs["defaultRedirectURI"] = undefined /*out*/;
            inputs["enableTokenRevocation"] = undefined /*out*/;
            inputs["explicitAuthFlows"] = undefined /*out*/;
            inputs["generateSecret"] = undefined /*out*/;
            inputs["idTokenValidity"] = undefined /*out*/;
            inputs["logoutURLs"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["preventUserExistenceErrors"] = undefined /*out*/;
            inputs["readAttributes"] = undefined /*out*/;
            inputs["refreshTokenValidity"] = undefined /*out*/;
            inputs["supportedIdentityProviders"] = undefined /*out*/;
            inputs["tokenValidityUnits"] = undefined /*out*/;
            inputs["userPoolId"] = undefined /*out*/;
            inputs["writeAttributes"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(UserPoolClient.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a UserPoolClient resource.
 */
export interface UserPoolClientArgs {
    accessTokenValidity?: pulumi.Input<number>;
    allowedOAuthFlows?: pulumi.Input<pulumi.Input<string>[]>;
    allowedOAuthFlowsUserPoolClient?: pulumi.Input<boolean>;
    allowedOAuthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    analyticsConfiguration?: pulumi.Input<inputs.cognito.UserPoolClientAnalyticsConfigurationArgs>;
    callbackURLs?: pulumi.Input<pulumi.Input<string>[]>;
    clientName?: pulumi.Input<string>;
    defaultRedirectURI?: pulumi.Input<string>;
    enableTokenRevocation?: pulumi.Input<boolean>;
    explicitAuthFlows?: pulumi.Input<pulumi.Input<string>[]>;
    generateSecret?: pulumi.Input<boolean>;
    idTokenValidity?: pulumi.Input<number>;
    logoutURLs?: pulumi.Input<pulumi.Input<string>[]>;
    preventUserExistenceErrors?: pulumi.Input<string>;
    readAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    refreshTokenValidity?: pulumi.Input<number>;
    supportedIdentityProviders?: pulumi.Input<pulumi.Input<string>[]>;
    tokenValidityUnits?: pulumi.Input<inputs.cognito.UserPoolClientTokenValidityUnitsArgs>;
    userPoolId: pulumi.Input<string>;
    writeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
}
