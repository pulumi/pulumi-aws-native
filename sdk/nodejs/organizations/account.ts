// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * You can use AWS::Organizations::Account to manage accounts in organization.
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:organizations:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * If the account was created successfully, the unique identifier (ID) of the new account.
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * The friendly name of the member account.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the account.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The email address of the owner to assign to the new member account.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * The method by which the account joined the organization.
     */
    public /*out*/ readonly joinedMethod!: pulumi.Output<enums.organizations.AccountJoinedMethod>;
    /**
     * The date the account became a part of the organization.
     */
    public /*out*/ readonly joinedTimestamp!: pulumi.Output<string>;
    /**
     * List of parent nodes for the member account. Currently only one parent at a time is supported. Default is root.
     */
    public readonly parentIds!: pulumi.Output<string[] | undefined>;
    /**
     * The name of an IAM role that AWS Organizations automatically preconfigures in the new member account. Default name is OrganizationAccountAccessRole if not specified.
     */
    public readonly roleName!: pulumi.Output<string | undefined>;
    /**
     * The status of the account in the organization.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.organizations.AccountStatus>;
    /**
     * A list of tags that you want to attach to the newly created account. For each tag in the list, you must specify both a tag key and a value.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["parentIds"] = args ? args.parentIds : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["joinedMethod"] = undefined /*out*/;
            resourceInputs["joinedTimestamp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["accountName"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["email"] = undefined /*out*/;
            resourceInputs["joinedMethod"] = undefined /*out*/;
            resourceInputs["joinedTimestamp"] = undefined /*out*/;
            resourceInputs["parentIds"] = undefined /*out*/;
            resourceInputs["roleName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The friendly name of the member account.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The email address of the owner to assign to the new member account.
     */
    email: pulumi.Input<string>;
    /**
     * List of parent nodes for the member account. Currently only one parent at a time is supported. Default is root.
     */
    parentIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of an IAM role that AWS Organizations automatically preconfigures in the new member account. Default name is OrganizationAccountAccessRole if not specified.
     */
    roleName?: pulumi.Input<string>;
    /**
     * A list of tags that you want to attach to the newly created account. For each tag in the list, you must specify both a tag key and a value.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
