// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * You can use AWS::Organizations::Account to manage accounts in organization.
 */
export function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:organizations:getAccount", {
        "accountId": args.accountId,
    }, opts);
}

export interface GetAccountArgs {
    /**
     * If the account was created successfully, the unique identifier (ID) of the new account.
     */
    accountId: string;
}

export interface GetAccountResult {
    /**
     * If the account was created successfully, the unique identifier (ID) of the new account.
     */
    readonly accountId?: string;
    /**
     * The friendly name of the member account.
     */
    readonly accountName?: string;
    /**
     * The Amazon Resource Name (ARN) of the account.
     */
    readonly arn?: string;
    /**
     * The email address of the owner to assign to the new member account.
     */
    readonly email?: string;
    /**
     * The method by which the account joined the organization.
     */
    readonly joinedMethod?: enums.organizations.AccountJoinedMethod;
    /**
     * The date the account became a part of the organization.
     */
    readonly joinedTimestamp?: string;
    /**
     * List of parent nodes for the member account. Currently only one parent at a time is supported. Default is root.
     */
    readonly parentIds?: string[];
    /**
     * The status of the account in the organization.
     */
    readonly status?: enums.organizations.AccountStatus;
    /**
     * A list of tags that you want to attach to the newly created account. For each tag in the list, you must specify both a tag key and a value.
     */
    readonly tags?: outputs.organizations.AccountTag[];
}

export function getAccountOutput(args: GetAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult> {
    return pulumi.output(args).apply(a => getAccount(a, opts))
}

export interface GetAccountOutputArgs {
    /**
     * If the account was created successfully, the unique identifier (ID) of the new account.
     */
    accountId: pulumi.Input<string>;
}
