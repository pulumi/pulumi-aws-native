// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A domain is an organizing entity for connecting together assets, users, and their projects
 */
export class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Domain {
        return new Domain(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:datazone:Domain';

    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Domain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }

    /**
     * The ARN of the Amazon DataZone domain.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The id of the Amazon DataZone domain.
     */
    declare public /*out*/ readonly awsId: pulumi.Output<string>;
    /**
     * The timestamp of when the Amazon DataZone domain was last updated.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The description of the Amazon DataZone domain.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
     */
    declare public readonly domainExecutionRole: pulumi.Output<string>;
    /**
     * The version of the domain.
     */
    declare public readonly domainVersion: pulumi.Output<enums.datazone.DomainVersion | undefined>;
    /**
     * The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.
     */
    declare public readonly kmsKeyIdentifier: pulumi.Output<string | undefined>;
    /**
     * The timestamp of when the Amazon DataZone domain was last updated.
     */
    declare public /*out*/ readonly lastUpdatedAt: pulumi.Output<string>;
    /**
     * The identifier of the AWS account that manages the domain.
     */
    declare public /*out*/ readonly managedAccountId: pulumi.Output<string>;
    /**
     * The name of the Amazon DataZone domain.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The URL of the data portal for this Amazon DataZone domain.
     */
    declare public /*out*/ readonly portalUrl: pulumi.Output<string>;
    /**
     * The ID of the root domain in Amazon Datazone.
     */
    declare public /*out*/ readonly rootDomainUnitId: pulumi.Output<string>;
    /**
     * The service role of the domain that is created.
     */
    declare public readonly serviceRole: pulumi.Output<string | undefined>;
    /**
     * The single-sign on configuration of the Amazon DataZone domain.
     */
    declare public readonly singleSignOn: pulumi.Output<outputs.datazone.DomainSingleSignOn | undefined>;
    /**
     * The status of the Amazon DataZone domain.
     */
    declare public /*out*/ readonly status: pulumi.Output<enums.datazone.DomainStatus>;
    /**
     * The tags specified for the Amazon DataZone domain.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.domainExecutionRole === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainExecutionRole'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["domainExecutionRole"] = args?.domainExecutionRole;
            resourceInputs["domainVersion"] = args?.domainVersion;
            resourceInputs["kmsKeyIdentifier"] = args?.kmsKeyIdentifier;
            resourceInputs["name"] = args?.name;
            resourceInputs["serviceRole"] = args?.serviceRole;
            resourceInputs["singleSignOn"] = args?.singleSignOn;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["managedAccountId"] = undefined /*out*/;
            resourceInputs["portalUrl"] = undefined /*out*/;
            resourceInputs["rootDomainUnitId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["domainExecutionRole"] = undefined /*out*/;
            resourceInputs["domainVersion"] = undefined /*out*/;
            resourceInputs["kmsKeyIdentifier"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["managedAccountId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["portalUrl"] = undefined /*out*/;
            resourceInputs["rootDomainUnitId"] = undefined /*out*/;
            resourceInputs["serviceRole"] = undefined /*out*/;
            resourceInputs["singleSignOn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["domainVersion", "kmsKeyIdentifier"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Domain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * The description of the Amazon DataZone domain.
     */
    description?: pulumi.Input<string>;
    /**
     * The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
     */
    domainExecutionRole: pulumi.Input<string>;
    /**
     * The version of the domain.
     */
    domainVersion?: pulumi.Input<enums.datazone.DomainVersion>;
    /**
     * The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.
     */
    kmsKeyIdentifier?: pulumi.Input<string>;
    /**
     * The name of the Amazon DataZone domain.
     */
    name?: pulumi.Input<string>;
    /**
     * The service role of the domain that is created.
     */
    serviceRole?: pulumi.Input<string>;
    /**
     * The single-sign on configuration of the Amazon DataZone domain.
     */
    singleSignOn?: pulumi.Input<inputs.datazone.DomainSingleSignOnArgs>;
    /**
     * The tags specified for the Amazon DataZone domain.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
