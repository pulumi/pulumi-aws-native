// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Amazon DataZone projects are business use caseâ€“based groupings of people, assets (data), and tools used to simplify access to the AWS analytics.
 */
export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:datazone:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * The ID of the Amazon DataZone project.
     */
    declare public /*out*/ readonly awsId: pulumi.Output<string>;
    /**
     * The timestamp of when the project was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The Amazon DataZone user who created the project.
     */
    declare public /*out*/ readonly createdBy: pulumi.Output<string>;
    /**
     * The description of the Amazon DataZone project.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The identifier of the Amazon DataZone domain in which the project was created.
     */
    declare public /*out*/ readonly domainId: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone domain in which this project is created.
     */
    declare public readonly domainIdentifier: pulumi.Output<string>;
    /**
     * The ID of the domain unit.
     */
    declare public readonly domainUnitId: pulumi.Output<string | undefined>;
    /**
     * The glossary terms that can be used in this Amazon DataZone project.
     */
    declare public readonly glossaryTerms: pulumi.Output<string[] | undefined>;
    /**
     * The timestamp of when the project was last updated.
     */
    declare public /*out*/ readonly lastUpdatedAt: pulumi.Output<string>;
    /**
     * The name of the Amazon DataZone project.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The project profile ID.
     */
    declare public readonly projectProfileId: pulumi.Output<string | undefined>;
    /**
     * The project profile version to which the project should be updated. You can only specify the following string for this parameter: latest.
     */
    declare public readonly projectProfileVersion: pulumi.Output<string | undefined>;
    /**
     * The status of the project.
     */
    declare public /*out*/ readonly projectStatus: pulumi.Output<enums.datazone.ProjectStatus>;
    /**
     * The user parameters of the project.
     */
    declare public readonly userParameters: pulumi.Output<outputs.datazone.ProjectEnvironmentConfigurationUserParameter[] | undefined>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.domainIdentifier === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainIdentifier'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["domainIdentifier"] = args?.domainIdentifier;
            resourceInputs["domainUnitId"] = args?.domainUnitId;
            resourceInputs["glossaryTerms"] = args?.glossaryTerms;
            resourceInputs["name"] = args?.name;
            resourceInputs["projectProfileId"] = args?.projectProfileId;
            resourceInputs["projectProfileVersion"] = args?.projectProfileVersion;
            resourceInputs["userParameters"] = args?.userParameters;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["projectStatus"] = undefined /*out*/;
        } else {
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["domainIdentifier"] = undefined /*out*/;
            resourceInputs["domainUnitId"] = undefined /*out*/;
            resourceInputs["glossaryTerms"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["projectProfileId"] = undefined /*out*/;
            resourceInputs["projectProfileVersion"] = undefined /*out*/;
            resourceInputs["projectStatus"] = undefined /*out*/;
            resourceInputs["userParameters"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["domainIdentifier", "projectProfileId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Project.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * The description of the Amazon DataZone project.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain in which this project is created.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * The ID of the domain unit.
     */
    domainUnitId?: pulumi.Input<string>;
    /**
     * The glossary terms that can be used in this Amazon DataZone project.
     */
    glossaryTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Amazon DataZone project.
     */
    name?: pulumi.Input<string>;
    /**
     * The project profile ID.
     */
    projectProfileId?: pulumi.Input<string>;
    /**
     * The project profile version to which the project should be updated. You can only specify the following string for this parameter: latest.
     */
    projectProfileVersion?: pulumi.Input<string>;
    /**
     * The user parameters of the project.
     */
    userParameters?: pulumi.Input<pulumi.Input<inputs.datazone.ProjectEnvironmentConfigurationUserParameterArgs>[]>;
}
