// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Create and manage form types in Amazon Datazone
 */
export function getFormType(args: GetFormTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetFormTypeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:datazone:getFormType", {
        "domainIdentifier": args.domainIdentifier,
        "formTypeIdentifier": args.formTypeIdentifier,
    }, opts);
}

export interface GetFormTypeArgs {
    /**
     * The ID of the Amazon DataZone domain in which this metadata form type is created.
     */
    domainIdentifier: string;
    /**
     * The ID of this Amazon DataZone metadata form type.
     */
    formTypeIdentifier: string;
}

export interface GetFormTypeResult {
    /**
     * The timestamp of when this Amazon DataZone metadata form type was created.
     */
    readonly createdAt?: string;
    /**
     * The user who created this Amazon DataZone metadata form type.
     */
    readonly createdBy?: string;
    /**
     * The description of this Amazon DataZone metadata form type.
     */
    readonly description?: string;
    /**
     * The ID of the Amazon DataZone domain in which this metadata form type is created.
     */
    readonly domainId?: string;
    /**
     * The ID of this Amazon DataZone metadata form type.
     */
    readonly formTypeIdentifier?: string;
    /**
     * The model of this Amazon DataZone metadata form type.
     */
    readonly model?: outputs.datazone.FormTypeModel;
    /**
     * The ID of the project that owns this Amazon DataZone metadata form type.
     */
    readonly owningProjectId?: string;
    /**
     * The ID of the Amazon DataZone project that owns this metadata form type.
     */
    readonly owningProjectIdentifier?: string;
    /**
     * The revision of this Amazon DataZone metadata form type.
     */
    readonly revision?: string;
    /**
     * The status of this Amazon DataZone metadata form type.
     */
    readonly status?: enums.datazone.FormTypeStatus;
}
/**
 * Create and manage form types in Amazon Datazone
 */
export function getFormTypeOutput(args: GetFormTypeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFormTypeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:datazone:getFormType", {
        "domainIdentifier": args.domainIdentifier,
        "formTypeIdentifier": args.formTypeIdentifier,
    }, opts);
}

export interface GetFormTypeOutputArgs {
    /**
     * The ID of the Amazon DataZone domain in which this metadata form type is created.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * The ID of this Amazon DataZone metadata form type.
     */
    formTypeIdentifier: pulumi.Input<string>;
}
