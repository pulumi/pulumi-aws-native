// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::DataZone::EnvironmentActions Resource Type
 */
export class EnvironmentActions extends pulumi.CustomResource {
    /**
     * Get an existing EnvironmentActions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EnvironmentActions {
        return new EnvironmentActions(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:datazone:EnvironmentActions';

    /**
     * Returns true if the given object is an instance of EnvironmentActions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnvironmentActions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnvironmentActions.__pulumiType;
    }

    /**
     * The ID of the Amazon DataZone environment action.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * The description of the Amazon DataZone environment action.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The identifier of the Amazon DataZone domain in which the environment is created.
     */
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    /**
     * The identifier of the Amazon DataZone domain in which the environment would be created.
     */
    public readonly domainIdentifier!: pulumi.Output<string | undefined>;
    /**
     * The identifier of the Amazon DataZone environment in which the action is taking place
     */
    public /*out*/ readonly environmentId!: pulumi.Output<string>;
    /**
     * The identifier of the Amazon DataZone environment in which the action is taking place
     */
    public readonly environmentIdentifier!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Amazon DataZone environment action.
     */
    public readonly identifier!: pulumi.Output<string | undefined>;
    /**
     * The name of the environment action.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The parameters of the environment action.
     */
    public readonly parameters!: pulumi.Output<outputs.datazone.EnvironmentActionsAwsConsoleLinkParameters | undefined>;

    /**
     * Create a EnvironmentActions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EnvironmentActionsArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args?.description;
            resourceInputs["domainIdentifier"] = args?.domainIdentifier;
            resourceInputs["environmentIdentifier"] = args?.environmentIdentifier;
            resourceInputs["identifier"] = args?.identifier;
            resourceInputs["name"] = args?.name;
            resourceInputs["parameters"] = args?.parameters;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
        } else {
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["domainIdentifier"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["environmentIdentifier"] = undefined /*out*/;
            resourceInputs["identifier"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["parameters"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["domainIdentifier", "environmentIdentifier"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(EnvironmentActions.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EnvironmentActions resource.
 */
export interface EnvironmentActionsArgs {
    /**
     * The description of the Amazon DataZone environment action.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon DataZone domain in which the environment would be created.
     */
    domainIdentifier?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon DataZone environment in which the action is taking place
     */
    environmentIdentifier?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone environment action.
     */
    identifier?: pulumi.Input<string>;
    /**
     * The name of the environment action.
     */
    name?: pulumi.Input<string>;
    /**
     * The parameters of the environment action.
     */
    parameters?: pulumi.Input<inputs.datazone.EnvironmentActionsAwsConsoleLinkParametersArgs>;
}
