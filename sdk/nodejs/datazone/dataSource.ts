// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::DataZone::DataSource Resource Type
 */
export class DataSource extends pulumi.CustomResource {
    /**
     * Get an existing DataSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataSource {
        return new DataSource(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:datazone:DataSource';

    /**
     * Returns true if the given object is an instance of DataSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSource.__pulumiType;
    }

    /**
     * The metadata forms that are to be attached to the assets that this data source works with.
     */
    public readonly assetFormsInput!: pulumi.Output<outputs.datazone.DataSourceFormInput[] | undefined>;
    /**
     * The unique identifier of the data source.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * Configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
     */
    public readonly configuration!: pulumi.Output<outputs.datazone.DataSourceConfigurationInput0Properties | outputs.datazone.DataSourceConfigurationInput1Properties | undefined>;
    /**
     * The timestamp of when the data source was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the data source.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Amazon DataZone domain where the data source is created.
     */
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone domain where the data source is created.
     */
    public readonly domainIdentifier!: pulumi.Output<string>;
    /**
     * Specifies whether the data source is enabled.
     */
    public readonly enableSetting!: pulumi.Output<enums.datazone.DataSourceEnableSetting | undefined>;
    /**
     * The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
     */
    public /*out*/ readonly environmentId!: pulumi.Output<string>;
    /**
     * The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
     */
    public readonly environmentIdentifier!: pulumi.Output<string>;
    /**
     * The number of assets created by the data source during its last run.
     */
    public /*out*/ readonly lastRunAssetCount!: pulumi.Output<number>;
    /**
     * The timestamp that specifies when the data source was last run.
     */
    public /*out*/ readonly lastRunAt!: pulumi.Output<string>;
    /**
     * The status of the last run of this data source.
     */
    public /*out*/ readonly lastRunStatus!: pulumi.Output<string>;
    /**
     * The name of the data source.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone project to which the data source is added.
     */
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    /**
     * The identifier of the Amazon DataZone project in which you want to add the data source.
     */
    public readonly projectIdentifier!: pulumi.Output<string>;
    /**
     * Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.
     */
    public readonly publishOnImport!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether the business name generation is to be enabled for this data source.
     */
    public readonly recommendation!: pulumi.Output<outputs.datazone.DataSourceRecommendationConfiguration | undefined>;
    /**
     * The schedule of the data source runs.
     */
    public readonly schedule!: pulumi.Output<outputs.datazone.DataSourceScheduleConfiguration | undefined>;
    /**
     * The status of the data source.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.datazone.DataSourceStatus>;
    /**
     * The type of the data source.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The timestamp of when this data source was updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a DataSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataSourceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.domainIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainIdentifier'");
            }
            if ((!args || args.environmentIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentIdentifier'");
            }
            if ((!args || args.projectIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectIdentifier'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["assetFormsInput"] = args ? args.assetFormsInput : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainIdentifier"] = args ? args.domainIdentifier : undefined;
            resourceInputs["enableSetting"] = args ? args.enableSetting : undefined;
            resourceInputs["environmentIdentifier"] = args ? args.environmentIdentifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectIdentifier"] = args ? args.projectIdentifier : undefined;
            resourceInputs["publishOnImport"] = args ? args.publishOnImport : undefined;
            resourceInputs["recommendation"] = args ? args.recommendation : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["lastRunAssetCount"] = undefined /*out*/;
            resourceInputs["lastRunAt"] = undefined /*out*/;
            resourceInputs["lastRunStatus"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["assetFormsInput"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["configuration"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["domainIdentifier"] = undefined /*out*/;
            resourceInputs["enableSetting"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["environmentIdentifier"] = undefined /*out*/;
            resourceInputs["lastRunAssetCount"] = undefined /*out*/;
            resourceInputs["lastRunAt"] = undefined /*out*/;
            resourceInputs["lastRunStatus"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["projectIdentifier"] = undefined /*out*/;
            resourceInputs["publishOnImport"] = undefined /*out*/;
            resourceInputs["recommendation"] = undefined /*out*/;
            resourceInputs["schedule"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["domainIdentifier", "environmentIdentifier", "projectIdentifier", "type"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DataSource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DataSource resource.
 */
export interface DataSourceArgs {
    /**
     * The metadata forms that are to be attached to the assets that this data source works with.
     */
    assetFormsInput?: pulumi.Input<pulumi.Input<inputs.datazone.DataSourceFormInputArgs>[]>;
    /**
     * Configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
     */
    configuration?: pulumi.Input<inputs.datazone.DataSourceConfigurationInput0PropertiesArgs | inputs.datazone.DataSourceConfigurationInput1PropertiesArgs>;
    /**
     * The description of the data source.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain where the data source is created.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * Specifies whether the data source is enabled.
     */
    enableSetting?: pulumi.Input<enums.datazone.DataSourceEnableSetting>;
    /**
     * The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
     */
    environmentIdentifier: pulumi.Input<string>;
    /**
     * The name of the data source.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon DataZone project in which you want to add the data source.
     */
    projectIdentifier: pulumi.Input<string>;
    /**
     * Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.
     */
    publishOnImport?: pulumi.Input<boolean>;
    /**
     * Specifies whether the business name generation is to be enabled for this data source.
     */
    recommendation?: pulumi.Input<inputs.datazone.DataSourceRecommendationConfigurationArgs>;
    /**
     * The schedule of the data source runs.
     */
    schedule?: pulumi.Input<inputs.datazone.DataSourceScheduleConfigurationArgs>;
    /**
     * The type of the data source.
     */
    type: pulumi.Input<string>;
}
