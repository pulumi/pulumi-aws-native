// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::DataZone::ProjectProfile Resource Type
 */
export class ProjectProfile extends pulumi.CustomResource {
    /**
     * Get an existing ProjectProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ProjectProfile {
        return new ProjectProfile(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:datazone:ProjectProfile';

    /**
     * Returns true if the given object is an instance of ProjectProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProjectProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectProfile.__pulumiType;
    }

    /**
     * The ID of the project profile.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * The timestamp of when the project profile was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The user who created the project profile.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The description of the project profile.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The domain ID of the project profile.
     */
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    public readonly domainIdentifier!: pulumi.Output<string | undefined>;
    /**
     * The domain unit ID of the project profile.
     */
    public /*out*/ readonly domainUnitId!: pulumi.Output<string>;
    public readonly domainUnitIdentifier!: pulumi.Output<string | undefined>;
    public readonly environmentConfigurations!: pulumi.Output<outputs.datazone.ProjectProfileEnvironmentConfiguration[] | undefined>;
    public /*out*/ readonly identifier!: pulumi.Output<string>;
    /**
     * The timestamp at which a project profile was last updated.
     */
    public /*out*/ readonly lastUpdatedAt!: pulumi.Output<string>;
    /**
     * The name of a project profile.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The status of a project profile.
     */
    public readonly status!: pulumi.Output<enums.datazone.ProjectProfileStatus | undefined>;

    /**
     * Create a ProjectProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProjectProfileArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainIdentifier"] = args ? args.domainIdentifier : undefined;
            resourceInputs["domainUnitIdentifier"] = args ? args.domainUnitIdentifier : undefined;
            resourceInputs["environmentConfigurations"] = args ? args.environmentConfigurations : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["domainUnitId"] = undefined /*out*/;
            resourceInputs["identifier"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["domainIdentifier"] = undefined /*out*/;
            resourceInputs["domainUnitId"] = undefined /*out*/;
            resourceInputs["domainUnitIdentifier"] = undefined /*out*/;
            resourceInputs["environmentConfigurations"] = undefined /*out*/;
            resourceInputs["identifier"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["domainIdentifier"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ProjectProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ProjectProfile resource.
 */
export interface ProjectProfileArgs {
    /**
     * The description of the project profile.
     */
    description?: pulumi.Input<string>;
    domainIdentifier?: pulumi.Input<string>;
    domainUnitIdentifier?: pulumi.Input<string>;
    environmentConfigurations?: pulumi.Input<pulumi.Input<inputs.datazone.ProjectProfileEnvironmentConfigurationArgs>[]>;
    /**
     * The name of a project profile.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of a project profile.
     */
    status?: pulumi.Input<enums.datazone.ProjectProfileStatus>;
}
