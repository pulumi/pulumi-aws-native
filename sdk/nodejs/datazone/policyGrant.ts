// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Policy Grant in AWS DataZone is an explicit authorization assignment that allows a specific principal (user, group, or project) to perform particular actions (such as creating glossary terms, managing projects, or accessing resources) on governed resources within a certain scope (like a Domain Unit or Project). Policy Grants are essentially the mechanism by which DataZone enforces fine-grained, role-based access control beyond what is possible through AWS IAM alone.
 */
export class PolicyGrant extends pulumi.CustomResource {
    /**
     * Get an existing PolicyGrant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PolicyGrant {
        return new PolicyGrant(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:datazone:PolicyGrant';

    /**
     * Returns true if the given object is an instance of PolicyGrant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyGrant {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyGrant.__pulumiType;
    }

    /**
     * Specifies the timestamp at which policy grant member was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the user who created the policy grant member.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The details of the policy grant member.
     */
    public readonly detail!: pulumi.Output<outputs.datazone.PolicyGrantDetail0Properties | outputs.datazone.PolicyGrantDetail1Properties | outputs.datazone.PolicyGrantDetail2Properties | outputs.datazone.PolicyGrantDetail3Properties | outputs.datazone.PolicyGrantDetail4Properties | outputs.datazone.PolicyGrantDetail5Properties | outputs.datazone.PolicyGrantDetail6Properties | outputs.datazone.PolicyGrantDetail7Properties | outputs.datazone.PolicyGrantDetail8Properties | outputs.datazone.PolicyGrantDetail9Properties | outputs.datazone.PolicyGrantDetail10Properties | outputs.datazone.PolicyGrantDetail11Properties | outputs.datazone.PolicyGrantDetail12Properties | undefined>;
    public readonly domainIdentifier!: pulumi.Output<string>;
    public readonly entityIdentifier!: pulumi.Output<string>;
    public readonly entityType!: pulumi.Output<enums.datazone.PolicyGrantTargetEntityType>;
    /**
     * The unique identifier of the policy grant returned by the AddPolicyGrant API
     */
    public /*out*/ readonly grantId!: pulumi.Output<string>;
    public readonly policyType!: pulumi.Output<string>;
    /**
     * The principal of the policy grant member.
     */
    public readonly principal!: pulumi.Output<outputs.datazone.PolicyGrantPrincipal0Properties | outputs.datazone.PolicyGrantPrincipal1Properties | outputs.datazone.PolicyGrantPrincipal2Properties | outputs.datazone.PolicyGrantPrincipal3Properties | undefined>;

    /**
     * Create a PolicyGrant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyGrantArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.domainIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainIdentifier'");
            }
            if ((!args || args.entityIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityIdentifier'");
            }
            if ((!args || args.entityType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityType'");
            }
            if ((!args || args.policyType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyType'");
            }
            resourceInputs["detail"] = args ? args.detail : undefined;
            resourceInputs["domainIdentifier"] = args ? args.domainIdentifier : undefined;
            resourceInputs["entityIdentifier"] = args ? args.entityIdentifier : undefined;
            resourceInputs["entityType"] = args ? args.entityType : undefined;
            resourceInputs["policyType"] = args ? args.policyType : undefined;
            resourceInputs["principal"] = args ? args.principal : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["grantId"] = undefined /*out*/;
        } else {
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["detail"] = undefined /*out*/;
            resourceInputs["domainIdentifier"] = undefined /*out*/;
            resourceInputs["entityIdentifier"] = undefined /*out*/;
            resourceInputs["entityType"] = undefined /*out*/;
            resourceInputs["grantId"] = undefined /*out*/;
            resourceInputs["policyType"] = undefined /*out*/;
            resourceInputs["principal"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["detail", "domainIdentifier", "entityIdentifier", "entityType", "policyType", "principal"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(PolicyGrant.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a PolicyGrant resource.
 */
export interface PolicyGrantArgs {
    /**
     * The details of the policy grant member.
     */
    detail?: pulumi.Input<inputs.datazone.PolicyGrantDetail0PropertiesArgs | inputs.datazone.PolicyGrantDetail1PropertiesArgs | inputs.datazone.PolicyGrantDetail2PropertiesArgs | inputs.datazone.PolicyGrantDetail3PropertiesArgs | inputs.datazone.PolicyGrantDetail4PropertiesArgs | inputs.datazone.PolicyGrantDetail5PropertiesArgs | inputs.datazone.PolicyGrantDetail6PropertiesArgs | inputs.datazone.PolicyGrantDetail7PropertiesArgs | inputs.datazone.PolicyGrantDetail8PropertiesArgs | inputs.datazone.PolicyGrantDetail9PropertiesArgs | inputs.datazone.PolicyGrantDetail10PropertiesArgs | inputs.datazone.PolicyGrantDetail11PropertiesArgs | inputs.datazone.PolicyGrantDetail12PropertiesArgs>;
    domainIdentifier: pulumi.Input<string>;
    entityIdentifier: pulumi.Input<string>;
    entityType: pulumi.Input<enums.datazone.PolicyGrantTargetEntityType>;
    policyType: pulumi.Input<string>;
    /**
     * The principal of the policy grant member.
     */
    principal?: pulumi.Input<inputs.datazone.PolicyGrantPrincipal0PropertiesArgs | inputs.datazone.PolicyGrantPrincipal1PropertiesArgs | inputs.datazone.PolicyGrantPrincipal2PropertiesArgs | inputs.datazone.PolicyGrantPrincipal3PropertiesArgs>;
}
