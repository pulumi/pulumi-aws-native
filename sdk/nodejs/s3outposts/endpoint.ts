// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type Definition for AWS::S3Outposts::Endpoint
 */
export class Endpoint extends pulumi.CustomResource {
    /**
     * Get an existing Endpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Endpoint {
        return new Endpoint(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:s3outposts:Endpoint';

    /**
     * Returns true if the given object is an instance of Endpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Endpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Endpoint.__pulumiType;
    }

    /**
     * The type of access for the on-premise network connectivity for the Outpost endpoint. To access endpoint from an on-premises network, you must specify the access type and provide the customer owned Ipv4 pool.
     */
    public readonly accessType!: pulumi.Output<enums.s3outposts.EndpointAccessType | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the endpoint.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The VPC CIDR committed by this endpoint.
     */
    public /*out*/ readonly cidrBlock!: pulumi.Output<string>;
    /**
     * The time the endpoint was created.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The ID of the customer-owned IPv4 pool for the Endpoint. IP addresses will be allocated from this pool for the endpoint.
     */
    public readonly customerOwnedIpv4Pool!: pulumi.Output<string | undefined>;
    /**
     * The network interfaces of the endpoint.
     */
    public /*out*/ readonly networkInterfaces!: pulumi.Output<outputs.s3outposts.EndpointNetworkInterface[]>;
    /**
     * The id of the customer outpost on which the bucket resides.
     */
    public readonly outpostId!: pulumi.Output<string>;
    /**
     * The ID of the security group to use with the endpoint.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<enums.s3outposts.EndpointStatus>;
    /**
     * The ID of the subnet in the selected VPC. The subnet must belong to the Outpost.
     */
    public readonly subnetId!: pulumi.Output<string>;

    /**
     * Create a Endpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.outpostId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'outpostId'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            inputs["accessType"] = args ? args.accessType : undefined;
            inputs["customerOwnedIpv4Pool"] = args ? args.customerOwnedIpv4Pool : undefined;
            inputs["outpostId"] = args ? args.outpostId : undefined;
            inputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["cidrBlock"] = undefined /*out*/;
            inputs["creationTime"] = undefined /*out*/;
            inputs["networkInterfaces"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        } else {
            inputs["accessType"] = undefined /*out*/;
            inputs["arn"] = undefined /*out*/;
            inputs["cidrBlock"] = undefined /*out*/;
            inputs["creationTime"] = undefined /*out*/;
            inputs["customerOwnedIpv4Pool"] = undefined /*out*/;
            inputs["networkInterfaces"] = undefined /*out*/;
            inputs["outpostId"] = undefined /*out*/;
            inputs["securityGroupId"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["subnetId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Endpoint.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Endpoint resource.
 */
export interface EndpointArgs {
    /**
     * The type of access for the on-premise network connectivity for the Outpost endpoint. To access endpoint from an on-premises network, you must specify the access type and provide the customer owned Ipv4 pool.
     */
    accessType?: pulumi.Input<enums.s3outposts.EndpointAccessType>;
    /**
     * The ID of the customer-owned IPv4 pool for the Endpoint. IP addresses will be allocated from this pool for the endpoint.
     */
    customerOwnedIpv4Pool?: pulumi.Input<string>;
    /**
     * The id of the customer outpost on which the bucket resides.
     */
    outpostId: pulumi.Input<string>;
    /**
     * The ID of the security group to use with the endpoint.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * The ID of the subnet in the selected VPC. The subnet must belong to the Outpost.
     */
    subnetId: pulumi.Input<string>;
}
