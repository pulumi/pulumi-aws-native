// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type Definition for AWS::S3Outposts::Bucket
 */
export function getBucket(args: GetBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:s3outposts:getBucket", {
        "arn": args.arn,
    }, opts);
}

export interface GetBucketArgs {
    /**
     * The Amazon Resource Name (ARN) of the specified bucket.
     */
    arn: string;
}

export interface GetBucketResult {
    /**
     * The Amazon Resource Name (ARN) of the specified bucket.
     */
    readonly arn?: string;
    /**
     * Rules that define how Amazon S3Outposts manages objects during their lifetime.
     */
    readonly lifecycleConfiguration?: outputs.s3outposts.BucketLifecycleConfiguration;
    /**
     * An arbitrary set of tags (key-value pairs) for this S3Outposts bucket.
     */
    readonly tags?: outputs.s3outposts.BucketTag[];
}

export function getBucketOutput(args: GetBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBucketResult> {
    return pulumi.output(args).apply(a => getBucket(a, opts))
}

export interface GetBucketOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the specified bucket.
     */
    arn: pulumi.Input<string>;
}
