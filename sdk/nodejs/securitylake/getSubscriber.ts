// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SecurityLake::Subscriber
 */
export function getSubscriber(args: GetSubscriberArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriberResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:securitylake:getSubscriber", {
        "subscriberArn": args.subscriberArn,
    }, opts);
}

export interface GetSubscriberArgs {
    subscriberArn: string;
}

export interface GetSubscriberResult {
    readonly accessTypes?: enums.securitylake.SubscriberAccessTypesItem[];
    readonly resourceShareArn?: string;
    readonly resourceShareName?: string;
    readonly s3BucketArn?: string;
    /**
     * The supported AWS services from which logs and events are collected.
     */
    readonly sources?: (outputs.securitylake.SubscriberSource0Properties | outputs.securitylake.SubscriberSource1Properties)[];
    readonly subscriberArn?: string;
    /**
     * The description for your subscriber account in Security Lake.
     */
    readonly subscriberDescription?: string;
    /**
     * The AWS identity used to access your data.
     */
    readonly subscriberIdentity?: outputs.securitylake.SubscriberIdentityProperties;
    /**
     * The name of your Security Lake subscriber account.
     */
    readonly subscriberName?: string;
    readonly subscriberRoleArn?: string;
    /**
     * An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::SecurityLake::Subscriber
 */
export function getSubscriberOutput(args: GetSubscriberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriberResult> {
    return pulumi.output(args).apply((a: any) => getSubscriber(a, opts))
}

export interface GetSubscriberOutputArgs {
    subscriberArn: pulumi.Input<string>;
}
