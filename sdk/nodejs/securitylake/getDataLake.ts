// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SecurityLake::DataLake
 */
export function getDataLake(args: GetDataLakeArgs, opts?: pulumi.InvokeOptions): Promise<GetDataLakeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:securitylake:getDataLake", {
        "arn": args.arn,
    }, opts);
}

export interface GetDataLakeArgs {
    /**
     * The Amazon Resource Name (ARN) created by you to provide to the subscriber.
     */
    arn: string;
}

export interface GetDataLakeResult {
    /**
     * The Amazon Resource Name (ARN) created by you to provide to the subscriber.
     */
    readonly arn?: string;
    readonly encryptionConfiguration?: outputs.securitylake.DataLakeEncryptionConfiguration;
    readonly lifecycleConfiguration?: outputs.securitylake.DataLakeLifecycleConfiguration;
    readonly replicationConfiguration?: outputs.securitylake.DataLakeReplicationConfiguration;
    /**
     * The ARN for the Amazon Security Lake Amazon S3 bucket.
     */
    readonly s3BucketArn?: string;
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::SecurityLake::DataLake
 */
export function getDataLakeOutput(args: GetDataLakeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataLakeResult> {
    return pulumi.output(args).apply((a: any) => getDataLake(a, opts))
}

export interface GetDataLakeOutputArgs {
    /**
     * The Amazon Resource Name (ARN) created by you to provide to the subscriber.
     */
    arn: pulumi.Input<string>;
}
