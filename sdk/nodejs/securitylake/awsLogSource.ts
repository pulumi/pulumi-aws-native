// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SecurityLake::AwsLogSource
 */
export class AwsLogSource extends pulumi.CustomResource {
    /**
     * Get an existing AwsLogSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AwsLogSource {
        return new AwsLogSource(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:securitylake:AwsLogSource';

    /**
     * Returns true if the given object is an instance of AwsLogSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsLogSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsLogSource.__pulumiType;
    }

    /**
     * AWS account where you want to collect logs from.
     */
    public readonly accounts!: pulumi.Output<string[] | undefined>;
    /**
     * The ARN for the data lake.
     */
    public readonly dataLakeArn!: pulumi.Output<string>;
    /**
     * The name for a AWS source. This must be a Regionally unique value.
     */
    public readonly sourceName!: pulumi.Output<string>;
    /**
     * The version for a AWS source. This must be a Regionally unique value.
     */
    public readonly sourceVersion!: pulumi.Output<string>;

    /**
     * Create a AwsLogSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsLogSourceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dataLakeArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataLakeArn'");
            }
            if ((!args || args.sourceVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceVersion'");
            }
            resourceInputs["accounts"] = args ? args.accounts : undefined;
            resourceInputs["dataLakeArn"] = args ? args.dataLakeArn : undefined;
            resourceInputs["sourceName"] = args ? args.sourceName : undefined;
            resourceInputs["sourceVersion"] = args ? args.sourceVersion : undefined;
        } else {
            resourceInputs["accounts"] = undefined /*out*/;
            resourceInputs["dataLakeArn"] = undefined /*out*/;
            resourceInputs["sourceName"] = undefined /*out*/;
            resourceInputs["sourceVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["dataLakeArn", "sourceName", "sourceVersion"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AwsLogSource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AwsLogSource resource.
 */
export interface AwsLogSourceArgs {
    /**
     * AWS account where you want to collect logs from.
     */
    accounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN for the data lake.
     */
    dataLakeArn: pulumi.Input<string>;
    /**
     * The name for a AWS source. This must be a Regionally unique value.
     */
    sourceName?: pulumi.Input<string>;
    /**
     * The version for a AWS source. This must be a Regionally unique value.
     */
    sourceVersion: pulumi.Input<string>;
}
