// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SecretsManager::RotationSchedule
 */
export function getRotationSchedule(args: GetRotationScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetRotationScheduleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:secretsmanager:getRotationSchedule", {
        "id": args.id,
    }, opts);
}

export interface GetRotationScheduleArgs {
    /**
     * The ARN of the secret.
     */
    id: string;
}

export interface GetRotationScheduleResult {
    /**
     * The ARN of the secret.
     */
    readonly id?: string;
    /**
     * The ARN of an existing Lambda rotation function. To specify a rotation function that is also defined in this template, use the Ref function.
     */
    readonly rotationLambdaArn?: string;
    /**
     * A structure that defines the rotation configuration for this secret.
     */
    readonly rotationRules?: outputs.secretsmanager.RotationScheduleRotationRules;
}
/**
 * Resource Type definition for AWS::SecretsManager::RotationSchedule
 */
export function getRotationScheduleOutput(args: GetRotationScheduleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRotationScheduleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:secretsmanager:getRotationSchedule", {
        "id": args.id,
    }, opts);
}

export interface GetRotationScheduleOutputArgs {
    /**
     * The ARN of the secret.
     */
    id: pulumi.Input<string>;
}
