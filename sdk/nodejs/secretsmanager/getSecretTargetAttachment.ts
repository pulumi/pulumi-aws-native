// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SecretsManager::SecretTargetAttachment
 */
export function getSecretTargetAttachment(args: GetSecretTargetAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretTargetAttachmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:secretsmanager:getSecretTargetAttachment", {
        "id": args.id,
    }, opts);
}

export interface GetSecretTargetAttachmentArgs {
    id: string;
}

export interface GetSecretTargetAttachmentResult {
    readonly id?: string;
    /**
     * The ARN or name of the secret. To reference a secret also created in this template, use the see [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function with the secret's logical ID. This field is unique for each target attachment definition.
     */
    readonly secretId?: string;
    /**
     * The ID of the database or cluster.
     */
    readonly targetId?: string;
    /**
     * A string that defines the type of service or database associated with the secret. This value instructs Secrets Manager how to update the secret with the details of the service or database. This value must be one of the following:
     *
     * - AWS::RDS::DBInstance
     * - AWS::RDS::DBCluster
     * - AWS::Redshift::Cluster
     * - AWS::RedshiftServerless::Namespace
     * - AWS::DocDB::DBInstance
     * - AWS::DocDB::DBCluster
     * - AWS::DocDBElastic::Cluster
     */
    readonly targetType?: string;
}
/**
 * Resource Type definition for AWS::SecretsManager::SecretTargetAttachment
 */
export function getSecretTargetAttachmentOutput(args: GetSecretTargetAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretTargetAttachmentResult> {
    return pulumi.output(args).apply((a: any) => getSecretTargetAttachment(a, opts))
}

export interface GetSecretTargetAttachmentOutputArgs {
    id: pulumi.Input<string>;
}
