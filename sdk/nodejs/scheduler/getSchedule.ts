// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Scheduler::Schedule Resource Type
 */
export function getSchedule(args: GetScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetScheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:scheduler:getSchedule", {
        "name": args.name,
    }, opts);
}

export interface GetScheduleArgs {
    /**
     * The name of the schedule.
     */
    name: string;
}

export interface GetScheduleResult {
    /**
     * The Amazon Resource Name (ARN) of the schedule.
     */
    readonly arn?: string;
    /**
     * The description of the schedule.
     */
    readonly description?: string;
    /**
     * The date, in UTC, before which the schedule can invoke its target. Depending on the schedule's recurrence expression, invocations might stop on, or before, the EndDate you specify.
     */
    readonly endDate?: string;
    /**
     * Allows you to configure a time window during which EventBridge Scheduler invokes the schedule.
     */
    readonly flexibleTimeWindow?: outputs.scheduler.ScheduleFlexibleTimeWindow;
    /**
     * The name of the schedule group to associate with this schedule. If you omit this, the default schedule group is used.
     */
    readonly groupName?: string;
    /**
     * The ARN for a KMS Key that will be used to encrypt customer data.
     */
    readonly kmsKeyArn?: string;
    /**
     * The scheduling expression.
     */
    readonly scheduleExpression?: string;
    /**
     * The timezone in which the scheduling expression is evaluated.
     */
    readonly scheduleExpressionTimezone?: string;
    /**
     * The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule's recurrence expression, invocations might occur on, or after, the StartDate you specify.
     */
    readonly startDate?: string;
    /**
     * Specifies whether the schedule is enabled or disabled.
     *
     * *Allowed Values* : `ENABLED` | `DISABLED`
     */
    readonly state?: enums.scheduler.ScheduleState;
    /**
     * The schedule's target. EventBridge Scheduler supports templated target that invoke common API operations, as well as universal targets that you can customize to invoke over 6,000 API operations across more than 270 services. You can only specify one templated or universal target for a schedule.
     */
    readonly target?: outputs.scheduler.ScheduleTarget;
}
/**
 * Definition of AWS::Scheduler::Schedule Resource Type
 */
export function getScheduleOutput(args: GetScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScheduleResult> {
    return pulumi.output(args).apply((a: any) => getSchedule(a, opts))
}

export interface GetScheduleOutputArgs {
    /**
     * The name of the schedule.
     */
    name: pulumi.Input<string>;
}
