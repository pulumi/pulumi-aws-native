// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AppArgs } from "./app";
export type App = import("./app").App;
export const App: typeof import("./app").App = null as any;

export { BranchArgs } from "./branch";
export type Branch = import("./branch").Branch;
export const Branch: typeof import("./branch").Branch = null as any;

export { DomainArgs } from "./domain";
export type Domain = import("./domain").Domain;
export const Domain: typeof import("./domain").Domain = null as any;

export { GetAppArgs, GetAppResult, GetAppOutputArgs } from "./getApp";
export const getApp: typeof import("./getApp").getApp = null as any;
export const getAppOutput: typeof import("./getApp").getAppOutput = null as any;

export { GetBranchArgs, GetBranchResult, GetBranchOutputArgs } from "./getBranch";
export const getBranch: typeof import("./getBranch").getBranch = null as any;
export const getBranchOutput: typeof import("./getBranch").getBranchOutput = null as any;

export { GetDomainArgs, GetDomainResult, GetDomainOutputArgs } from "./getDomain";
export const getDomain: typeof import("./getDomain").getDomain = null as any;
export const getDomainOutput: typeof import("./getDomain").getDomainOutput = null as any;

utilities.lazyLoad(exports, ["App"], () => require("./app"));
utilities.lazyLoad(exports, ["Branch"], () => require("./branch"));
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));
utilities.lazyLoad(exports, ["getApp","getAppOutput"], () => require("./getApp"));
utilities.lazyLoad(exports, ["getBranch","getBranchOutput"], () => require("./getBranch"));
utilities.lazyLoad(exports, ["getDomain","getDomainOutput"], () => require("./getDomain"));

// Export enums:
export * from "../types/enums/amplify";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:amplify:App":
                return new App(name, <any>undefined, { urn })
            case "aws-native:amplify:Branch":
                return new Branch(name, <any>undefined, { urn })
            case "aws-native:amplify:Domain":
                return new Domain(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "amplify", _module)
