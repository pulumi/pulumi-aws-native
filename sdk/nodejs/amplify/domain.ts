// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::Amplify::Domain resource allows you to connect a custom domain to your app.
 */
export class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Domain {
        return new Domain(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:amplify:Domain';

    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Domain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }

    /**
     * The unique ID for an Amplify app.
     */
    declare public readonly appId: pulumi.Output<string>;
    /**
     * ARN for the Domain Association.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Sets the branch patterns for automatic subdomain creation.
     */
    declare public readonly autoSubDomainCreationPatterns: pulumi.Output<string[] | undefined>;
    /**
     * The required AWS Identity and Access Management (IAMlong) service role for the Amazon Resource Name (ARN) for automatically creating subdomains.
     */
    declare public readonly autoSubDomainIamRole: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly certificate: pulumi.Output<outputs.amplify.DomainCertificate>;
    /**
     * DNS Record for certificate verification.
     */
    declare public /*out*/ readonly certificateRecord: pulumi.Output<string>;
    /**
     * The type of SSL/TLS certificate to use for your custom domain. If you don't specify a certificate type, Amplify uses the default certificate that it provisions and manages for you.
     */
    declare public readonly certificateSettings: pulumi.Output<outputs.amplify.DomainCertificateSettings | undefined>;
    /**
     * The domain name for the domain association.
     */
    declare public readonly domainName: pulumi.Output<string>;
    /**
     * Status for the Domain Association.
     */
    declare public /*out*/ readonly domainStatus: pulumi.Output<string>;
    /**
     * Enables the automated creation of subdomains for branches.
     */
    declare public readonly enableAutoSubDomain: pulumi.Output<boolean | undefined>;
    /**
     * Reason for the current status of the domain.
     */
    declare public /*out*/ readonly statusReason: pulumi.Output<string>;
    /**
     * The setting for the subdomain.
     */
    declare public readonly subDomainSettings: pulumi.Output<outputs.amplify.DomainSubDomainSetting[]>;
    /**
     * The status of the domain update operation that is currently in progress. The following list describes the valid update states.
     *
     * - **REQUESTING_CERTIFICATE** - The certificate is in the process of being updated.
     * - **PENDING_VERIFICATION** - Indicates that an Amplify managed certificate is in the process of being verified. This occurs during the creation of a custom domain or when a custom domain is updated to use a managed certificate.
     * - **IMPORTING_CUSTOM_CERTIFICATE** - Indicates that an Amplify custom certificate is in the process of being imported. This occurs during the creation of a custom domain or when a custom domain is updated to use a custom certificate.
     * - **PENDING_DEPLOYMENT** - Indicates that the subdomain or certificate changes are being propagated.
     * - **AWAITING_APP_CNAME** - Amplify is waiting for CNAME records corresponding to subdomains to be propagated. If your custom domain is on RouteÂ 53, Amplify handles this for you automatically. For more information about custom domains, see [Setting up custom domains](https://docs.aws.amazon.com/amplify/latest/userguide/custom-domains.html) in the *Amplify Hosting User Guide* .
     * - **UPDATE_COMPLETE** - The certificate has been associated with a domain.
     * - **UPDATE_FAILED** - The certificate has failed to be provisioned or associated, and there is no existing active certificate to roll back to.
     */
    declare public /*out*/ readonly updateStatus: pulumi.Output<string>;

    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.appId === undefined && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if (args?.subDomainSettings === undefined && !opts.urn) {
                throw new Error("Missing required property 'subDomainSettings'");
            }
            resourceInputs["appId"] = args?.appId;
            resourceInputs["autoSubDomainCreationPatterns"] = args?.autoSubDomainCreationPatterns;
            resourceInputs["autoSubDomainIamRole"] = args?.autoSubDomainIamRole;
            resourceInputs["certificateSettings"] = args?.certificateSettings;
            resourceInputs["domainName"] = args?.domainName;
            resourceInputs["enableAutoSubDomain"] = args?.enableAutoSubDomain;
            resourceInputs["subDomainSettings"] = args?.subDomainSettings;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["certificate"] = undefined /*out*/;
            resourceInputs["certificateRecord"] = undefined /*out*/;
            resourceInputs["domainStatus"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
            resourceInputs["updateStatus"] = undefined /*out*/;
        } else {
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["autoSubDomainCreationPatterns"] = undefined /*out*/;
            resourceInputs["autoSubDomainIamRole"] = undefined /*out*/;
            resourceInputs["certificate"] = undefined /*out*/;
            resourceInputs["certificateRecord"] = undefined /*out*/;
            resourceInputs["certificateSettings"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["domainStatus"] = undefined /*out*/;
            resourceInputs["enableAutoSubDomain"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
            resourceInputs["subDomainSettings"] = undefined /*out*/;
            resourceInputs["updateStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["appId", "domainName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Domain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * The unique ID for an Amplify app.
     */
    appId: pulumi.Input<string>;
    /**
     * Sets the branch patterns for automatic subdomain creation.
     */
    autoSubDomainCreationPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The required AWS Identity and Access Management (IAMlong) service role for the Amazon Resource Name (ARN) for automatically creating subdomains.
     */
    autoSubDomainIamRole?: pulumi.Input<string>;
    /**
     * The type of SSL/TLS certificate to use for your custom domain. If you don't specify a certificate type, Amplify uses the default certificate that it provisions and manages for you.
     */
    certificateSettings?: pulumi.Input<inputs.amplify.DomainCertificateSettingsArgs>;
    /**
     * The domain name for the domain association.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Enables the automated creation of subdomains for branches.
     */
    enableAutoSubDomain?: pulumi.Input<boolean>;
    /**
     * The setting for the subdomain.
     */
    subDomainSettings: pulumi.Input<pulumi.Input<inputs.amplify.DomainSubDomainSettingArgs>[]>;
}
