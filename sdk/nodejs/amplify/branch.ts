// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::Amplify::Branch resource creates a new branch within an app.
 */
export class Branch extends pulumi.CustomResource {
    /**
     * Get an existing Branch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Branch {
        return new Branch(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:amplify:Branch';

    /**
     * Returns true if the given object is an instance of Branch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Branch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Branch.__pulumiType;
    }

    /**
     * The unique ID for an Amplify app.
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * ARN for a branch, part of an Amplify App.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The backend for a `Branch` of an Amplify app. Use for a backend created from an AWS CloudFormation stack.
     *
     * This field is available to Amplify Gen 2 apps only. When you deploy an application with Amplify Gen 2, you provision the app's backend infrastructure using Typescript code.
     */
    public readonly backend!: pulumi.Output<outputs.amplify.BranchBackend | undefined>;
    /**
     * The basic authorization credentials for a branch of an Amplify app. You must base64-encode the authorization credentials and provide them in the format `user:password` .
     */
    public readonly basicAuthConfig!: pulumi.Output<outputs.amplify.BranchBasicAuthConfig | undefined>;
    /**
     * The name for the branch.
     */
    public readonly branchName!: pulumi.Output<string>;
    /**
     * The build specification (build spec) for the branch.
     */
    public readonly buildSpec!: pulumi.Output<string | undefined>;
    public readonly computeRoleArn!: pulumi.Output<string | undefined>;
    /**
     * The description for the branch that is part of an Amplify app.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Enables auto building for the branch.
     */
    public readonly enableAutoBuild!: pulumi.Output<boolean | undefined>;
    /**
     * Enables performance mode for the branch.
     *
     * Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out.
     */
    public readonly enablePerformanceMode!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether Amplify Hosting creates a preview for each pull request that is made for this branch. If this property is enabled, Amplify deploys your app to a unique preview URL after each pull request is opened. Development and QA teams can use this preview to test the pull request before it's merged into a production or integration branch.
     *
     * To provide backend support for your preview, Amplify automatically provisions a temporary backend environment that it deletes when the pull request is closed. If you want to specify a dedicated backend environment for your previews, use the `PullRequestEnvironmentName` property.
     *
     * For more information, see [Web Previews](https://docs.aws.amazon.com/amplify/latest/userguide/pr-previews.html) in the *AWS Amplify Hosting User Guide* .
     */
    public readonly enablePullRequestPreview!: pulumi.Output<boolean | undefined>;
    public readonly enableSkewProtection!: pulumi.Output<boolean | undefined>;
    /**
     * The environment variables for the branch.
     */
    public readonly environmentVariables!: pulumi.Output<outputs.amplify.BranchEnvironmentVariable[] | undefined>;
    /**
     * The framework for the branch.
     */
    public readonly framework!: pulumi.Output<string | undefined>;
    /**
     * If pull request previews are enabled for this branch, you can use this property to specify a dedicated backend environment for your previews. For example, you could specify an environment named `prod` , `test` , or `dev` that you initialized with the Amplify CLI and mapped to this branch.
     *
     * To enable pull request previews, set the `EnablePullRequestPreview` property to `true` .
     *
     * If you don't specify an environment, Amplify Hosting provides backend support for each preview by automatically provisioning a temporary backend environment. Amplify Hosting deletes this environment when the pull request is closed.
     *
     * For more information about creating backend environments, see [Feature Branch Deployments and Team Workflows](https://docs.aws.amazon.com/amplify/latest/userguide/multi-environments.html) in the *AWS Amplify Hosting User Guide* .
     */
    public readonly pullRequestEnvironmentName!: pulumi.Output<string | undefined>;
    /**
     * Describes the current stage for the branch.
     */
    public readonly stage!: pulumi.Output<enums.amplify.BranchStage | undefined>;
    /**
     * The tag for the branch.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a Branch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BranchArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["backend"] = args ? args.backend : undefined;
            resourceInputs["basicAuthConfig"] = args ? args.basicAuthConfig : undefined;
            resourceInputs["branchName"] = args ? args.branchName : undefined;
            resourceInputs["buildSpec"] = args ? args.buildSpec : undefined;
            resourceInputs["computeRoleArn"] = args ? args.computeRoleArn : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableAutoBuild"] = args ? args.enableAutoBuild : undefined;
            resourceInputs["enablePerformanceMode"] = args ? args.enablePerformanceMode : undefined;
            resourceInputs["enablePullRequestPreview"] = args ? args.enablePullRequestPreview : undefined;
            resourceInputs["enableSkewProtection"] = args ? args.enableSkewProtection : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["framework"] = args ? args.framework : undefined;
            resourceInputs["pullRequestEnvironmentName"] = args ? args.pullRequestEnvironmentName : undefined;
            resourceInputs["stage"] = args ? args.stage : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["backend"] = undefined /*out*/;
            resourceInputs["basicAuthConfig"] = undefined /*out*/;
            resourceInputs["branchName"] = undefined /*out*/;
            resourceInputs["buildSpec"] = undefined /*out*/;
            resourceInputs["computeRoleArn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["enableAutoBuild"] = undefined /*out*/;
            resourceInputs["enablePerformanceMode"] = undefined /*out*/;
            resourceInputs["enablePullRequestPreview"] = undefined /*out*/;
            resourceInputs["enableSkewProtection"] = undefined /*out*/;
            resourceInputs["environmentVariables"] = undefined /*out*/;
            resourceInputs["framework"] = undefined /*out*/;
            resourceInputs["pullRequestEnvironmentName"] = undefined /*out*/;
            resourceInputs["stage"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["appId", "branchName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Branch.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Branch resource.
 */
export interface BranchArgs {
    /**
     * The unique ID for an Amplify app.
     */
    appId: pulumi.Input<string>;
    /**
     * The backend for a `Branch` of an Amplify app. Use for a backend created from an AWS CloudFormation stack.
     *
     * This field is available to Amplify Gen 2 apps only. When you deploy an application with Amplify Gen 2, you provision the app's backend infrastructure using Typescript code.
     */
    backend?: pulumi.Input<inputs.amplify.BranchBackendArgs>;
    /**
     * The basic authorization credentials for a branch of an Amplify app. You must base64-encode the authorization credentials and provide them in the format `user:password` .
     */
    basicAuthConfig?: pulumi.Input<inputs.amplify.BranchBasicAuthConfigArgs>;
    /**
     * The name for the branch.
     */
    branchName?: pulumi.Input<string>;
    /**
     * The build specification (build spec) for the branch.
     */
    buildSpec?: pulumi.Input<string>;
    computeRoleArn?: pulumi.Input<string>;
    /**
     * The description for the branch that is part of an Amplify app.
     */
    description?: pulumi.Input<string>;
    /**
     * Enables auto building for the branch.
     */
    enableAutoBuild?: pulumi.Input<boolean>;
    /**
     * Enables performance mode for the branch.
     *
     * Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out.
     */
    enablePerformanceMode?: pulumi.Input<boolean>;
    /**
     * Specifies whether Amplify Hosting creates a preview for each pull request that is made for this branch. If this property is enabled, Amplify deploys your app to a unique preview URL after each pull request is opened. Development and QA teams can use this preview to test the pull request before it's merged into a production or integration branch.
     *
     * To provide backend support for your preview, Amplify automatically provisions a temporary backend environment that it deletes when the pull request is closed. If you want to specify a dedicated backend environment for your previews, use the `PullRequestEnvironmentName` property.
     *
     * For more information, see [Web Previews](https://docs.aws.amazon.com/amplify/latest/userguide/pr-previews.html) in the *AWS Amplify Hosting User Guide* .
     */
    enablePullRequestPreview?: pulumi.Input<boolean>;
    enableSkewProtection?: pulumi.Input<boolean>;
    /**
     * The environment variables for the branch.
     */
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.amplify.BranchEnvironmentVariableArgs>[]>;
    /**
     * The framework for the branch.
     */
    framework?: pulumi.Input<string>;
    /**
     * If pull request previews are enabled for this branch, you can use this property to specify a dedicated backend environment for your previews. For example, you could specify an environment named `prod` , `test` , or `dev` that you initialized with the Amplify CLI and mapped to this branch.
     *
     * To enable pull request previews, set the `EnablePullRequestPreview` property to `true` .
     *
     * If you don't specify an environment, Amplify Hosting provides backend support for each preview by automatically provisioning a temporary backend environment. Amplify Hosting deletes this environment when the pull request is closed.
     *
     * For more information about creating backend environments, see [Feature Branch Deployments and Team Workflows](https://docs.aws.amazon.com/amplify/latest/userguide/multi-environments.html) in the *AWS Amplify Hosting User Guide* .
     */
    pullRequestEnvironmentName?: pulumi.Input<string>;
    /**
     * Describes the current stage for the branch.
     */
    stage?: pulumi.Input<enums.amplify.BranchStage>;
    /**
     * The tag for the branch.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
