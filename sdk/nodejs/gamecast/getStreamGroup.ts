// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::GameCast::StreamGroup Resource Type
 */
export function getStreamGroup(args: GetStreamGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:gamecast:getStreamGroup", {
        "arn": args.arn,
    }, opts);
}

export interface GetStreamGroupArgs {
    /**
     * ARN of the resource.
     */
    arn: string;
}

export interface GetStreamGroupResult {
    /**
     * ARN of the resource.
     */
    readonly arn?: string;
    readonly defaultApplication?: outputs.gamecast.StreamGroupDefaultApplication;
    /**
     * Descriptive label for the resource, not a unique ID.
     */
    readonly description?: string;
    /**
     * DesiredCapacity is the target number of stream sessions customer sets.
     */
    readonly desiredCapacity?: number;
    readonly tags?: outputs.gamecast.StreamGroupTags;
}
/**
 * Definition of AWS::GameCast::StreamGroup Resource Type
 */
export function getStreamGroupOutput(args: GetStreamGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamGroupResult> {
    return pulumi.output(args).apply((a: any) => getStreamGroup(a, opts))
}

export interface GetStreamGroupOutputArgs {
    /**
     * ARN of the resource.
     */
    arn: pulumi.Input<string>;
}
