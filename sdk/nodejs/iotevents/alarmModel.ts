// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Represents an alarm model to monitor an ITE input attribute. You can use the alarm to get notified when the value is outside a specified range. For more information, see [Create an alarm model](https://docs.aws.amazon.com/iotevents/latest/developerguide/create-alarms.html) in the *Developer Guide*.
 */
export class AlarmModel extends pulumi.CustomResource {
    /**
     * Get an existing AlarmModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AlarmModel {
        return new AlarmModel(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:iotevents:AlarmModel';

    /**
     * Returns true if the given object is an instance of AlarmModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlarmModel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlarmModel.__pulumiType;
    }

    /**
     * Contains the configuration information of alarm state changes.
     */
    public readonly alarmCapabilities!: pulumi.Output<outputs.iotevents.AlarmModelAlarmCapabilities | undefined>;
    /**
     * Contains information about one or more alarm actions.
     */
    public readonly alarmEventActions!: pulumi.Output<outputs.iotevents.AlarmModelAlarmEventActions | undefined>;
    /**
     * The description of the alarm model.
     */
    public readonly alarmModelDescription!: pulumi.Output<string | undefined>;
    /**
     * The name of the alarm model.
     */
    public readonly alarmModelName!: pulumi.Output<string | undefined>;
    /**
     * Defines when your alarm is invoked.
     */
    public readonly alarmRule!: pulumi.Output<outputs.iotevents.AlarmModelAlarmRule>;
    /**
     * An input attribute used as a key to create an alarm. ITE routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
     */
    public readonly key!: pulumi.Output<string | undefined>;
    /**
     * The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * A non-negative integer that reflects the severity level of the alarm.
     */
    public readonly severity!: pulumi.Output<number | undefined>;
    /**
     * A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
     *  You can create up to 50 tags for one alarm model.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a AlarmModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlarmModelArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.alarmRule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alarmRule'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["alarmCapabilities"] = args ? args.alarmCapabilities : undefined;
            resourceInputs["alarmEventActions"] = args ? args.alarmEventActions : undefined;
            resourceInputs["alarmModelDescription"] = args ? args.alarmModelDescription : undefined;
            resourceInputs["alarmModelName"] = args ? args.alarmModelName : undefined;
            resourceInputs["alarmRule"] = args ? args.alarmRule : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        } else {
            resourceInputs["alarmCapabilities"] = undefined /*out*/;
            resourceInputs["alarmEventActions"] = undefined /*out*/;
            resourceInputs["alarmModelDescription"] = undefined /*out*/;
            resourceInputs["alarmModelName"] = undefined /*out*/;
            resourceInputs["alarmRule"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["severity"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["alarmModelName", "key"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AlarmModel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AlarmModel resource.
 */
export interface AlarmModelArgs {
    /**
     * Contains the configuration information of alarm state changes.
     */
    alarmCapabilities?: pulumi.Input<inputs.iotevents.AlarmModelAlarmCapabilitiesArgs>;
    /**
     * Contains information about one or more alarm actions.
     */
    alarmEventActions?: pulumi.Input<inputs.iotevents.AlarmModelAlarmEventActionsArgs>;
    /**
     * The description of the alarm model.
     */
    alarmModelDescription?: pulumi.Input<string>;
    /**
     * The name of the alarm model.
     */
    alarmModelName?: pulumi.Input<string>;
    /**
     * Defines when your alarm is invoked.
     */
    alarmRule: pulumi.Input<inputs.iotevents.AlarmModelAlarmRuleArgs>;
    /**
     * An input attribute used as a key to create an alarm. ITE routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
     */
    key?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
     */
    roleArn: pulumi.Input<string>;
    /**
     * A non-negative integer that reflects the severity level of the alarm.
     */
    severity?: pulumi.Input<number>;
    /**
     * A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
     *  You can create up to 50 tags for one alarm model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
