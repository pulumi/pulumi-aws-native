// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Backup::LogicallyAirGappedBackupVault
 */
export function getLogicallyAirGappedBackupVault(args: GetLogicallyAirGappedBackupVaultArgs, opts?: pulumi.InvokeOptions): Promise<GetLogicallyAirGappedBackupVaultResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:backup:getLogicallyAirGappedBackupVault", {
        "backupVaultName": args.backupVaultName,
    }, opts);
}

export interface GetLogicallyAirGappedBackupVaultArgs {
    /**
     * The name of a logical container where backups are stored. Logically air-gapped backup vaults are identified by names that are unique to the account used to create them and the Region where they are created.
     */
    backupVaultName: string;
}

export interface GetLogicallyAirGappedBackupVaultResult {
    /**
     * The backup vault access policy document in JSON format.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Backup::LogicallyAirGappedBackupVault` for more information about the expected schema for this property.
     */
    readonly accessPolicy?: any;
    readonly backupVaultArn?: string;
    /**
     * The tags to assign to the vault.
     */
    readonly backupVaultTags?: {[key: string]: string};
    readonly encryptionKeyArn?: string;
    /**
     * Returns event notifications for the specified backup vault.
     */
    readonly notifications?: outputs.backup.LogicallyAirGappedBackupVaultNotificationObjectType;
    /**
     * The current state of the vault.
     */
    readonly vaultState?: string;
    /**
     * The type of vault described.
     */
    readonly vaultType?: string;
}
/**
 * Resource Type definition for AWS::Backup::LogicallyAirGappedBackupVault
 */
export function getLogicallyAirGappedBackupVaultOutput(args: GetLogicallyAirGappedBackupVaultOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLogicallyAirGappedBackupVaultResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:backup:getLogicallyAirGappedBackupVault", {
        "backupVaultName": args.backupVaultName,
    }, opts);
}

export interface GetLogicallyAirGappedBackupVaultOutputArgs {
    /**
     * The name of a logical container where backups are stored. Logically air-gapped backup vaults are identified by names that are unique to the account used to create them and the Region where they are created.
     */
    backupVaultName: pulumi.Input<string>;
}
