// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Contains detailed information about a framework. Frameworks contain controls, which evaluate and report on your backup events and resources. Frameworks generate daily compliance results.
 */
export function getFramework(args: GetFrameworkArgs, opts?: pulumi.InvokeOptions): Promise<GetFrameworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:backup:getFramework", {
        "frameworkArn": args.frameworkArn,
    }, opts);
}

export interface GetFrameworkArgs {
    /**
     * An Amazon Resource Name (ARN) that uniquely identifies Framework as a resource
     */
    frameworkArn: string;
}

export interface GetFrameworkResult {
    /**
     * The date and time that a framework is created, in ISO 8601 representation. The value of CreationTime is accurate to milliseconds. For example, 2020-07-10T15:00:00.000-08:00 represents the 10th of July 2020 at 3:00 PM 8 hours behind UTC.
     */
    readonly creationTime?: string;
    /**
     * The deployment status of a framework. The statuses are: `CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED | FAILED`
     */
    readonly deploymentStatus?: string;
    /**
     * An Amazon Resource Name (ARN) that uniquely identifies Framework as a resource
     */
    readonly frameworkArn?: string;
    /**
     * Contains detailed information about all of the controls of a framework. Each framework must contain at least one control.
     */
    readonly frameworkControls?: outputs.backup.FrameworkControl[];
    /**
     * An optional description of the framework with a maximum 1,024 characters.
     */
    readonly frameworkDescription?: string;
    /**
     * A framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn AWS Config recording on or off for each resource. The statuses are:
     *
     * `ACTIVE` when recording is turned on for all resources governed by the framework.
     *
     * `PARTIALLY_ACTIVE` when recording is turned off for at least one resource governed by the framework.
     *
     * `INACTIVE` when recording is turned off for all resources governed by the framework.
     *
     * `UNAVAILABLE` when AWS Backup is unable to validate recording status at this time.
     */
    readonly frameworkStatus?: string;
    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     */
    readonly frameworkTags?: outputs.Tag[];
}
/**
 * Contains detailed information about a framework. Frameworks contain controls, which evaluate and report on your backup events and resources. Frameworks generate daily compliance results.
 */
export function getFrameworkOutput(args: GetFrameworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFrameworkResult> {
    return pulumi.output(args).apply((a: any) => getFramework(a, opts))
}

export interface GetFrameworkOutputArgs {
    /**
     * An Amazon Resource Name (ARN) that uniquely identifies Framework as a resource
     */
    frameworkArn: pulumi.Input<string>;
}
