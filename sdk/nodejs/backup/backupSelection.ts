// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Backup::BackupSelection
 */
export class BackupSelection extends pulumi.CustomResource {
    /**
     * Get an existing BackupSelection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BackupSelection {
        return new BackupSelection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:backup:BackupSelection';

    /**
     * Returns true if the given object is an instance of BackupSelection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupSelection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupSelection.__pulumiType;
    }

    /**
     * Uniquely identifies the backup selection.
     */
    declare public /*out*/ readonly awsId: pulumi.Output<string>;
    /**
     * Uniquely identifies a backup plan.
     */
    declare public readonly backupPlanId: pulumi.Output<string>;
    /**
     * Specifies the body of a request to assign a set of resources to a backup plan.
     *
     * It includes an array of resources, an optional array of patterns to exclude resources, an optional role to provide access to the AWS service the resource belongs to, and an optional array of tags used to identify a set of resources.
     */
    declare public readonly backupSelection: pulumi.Output<outputs.backup.BackupSelectionResourceType>;
    /**
     * Uniquely identifies a request to assign a set of resources to a backup plan.
     */
    declare public /*out*/ readonly selectionId: pulumi.Output<string>;

    /**
     * Create a BackupSelection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupSelectionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.backupPlanId === undefined && !opts.urn) {
                throw new Error("Missing required property 'backupPlanId'");
            }
            if (args?.backupSelection === undefined && !opts.urn) {
                throw new Error("Missing required property 'backupSelection'");
            }
            resourceInputs["backupPlanId"] = args?.backupPlanId;
            resourceInputs["backupSelection"] = args?.backupSelection;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["selectionId"] = undefined /*out*/;
        } else {
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["backupPlanId"] = undefined /*out*/;
            resourceInputs["backupSelection"] = undefined /*out*/;
            resourceInputs["selectionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["backupPlanId", "backupSelection"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(BackupSelection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a BackupSelection resource.
 */
export interface BackupSelectionArgs {
    /**
     * Uniquely identifies a backup plan.
     */
    backupPlanId: pulumi.Input<string>;
    /**
     * Specifies the body of a request to assign a set of resources to a backup plan.
     *
     * It includes an array of resources, an optional array of patterns to exclude resources, an optional role to provide access to the AWS service the resource belongs to, and an optional array of tags used to identify a set of resources.
     */
    backupSelection: pulumi.Input<inputs.backup.BackupSelectionResourceTypeArgs>;
}
