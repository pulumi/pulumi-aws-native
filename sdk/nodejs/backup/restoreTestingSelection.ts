// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Backup::RestoreTestingSelection
 */
export class RestoreTestingSelection extends pulumi.CustomResource {
    /**
     * Get an existing RestoreTestingSelection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RestoreTestingSelection {
        return new RestoreTestingSelection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:backup:RestoreTestingSelection';

    /**
     * Returns true if the given object is an instance of RestoreTestingSelection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RestoreTestingSelection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RestoreTestingSelection.__pulumiType;
    }

    public readonly iamRoleArn!: pulumi.Output<string>;
    public readonly protectedResourceArns!: pulumi.Output<string[] | undefined>;
    public readonly protectedResourceConditions!: pulumi.Output<outputs.backup.RestoreTestingSelectionProtectedResourceConditions | undefined>;
    public readonly protectedResourceType!: pulumi.Output<string>;
    public readonly restoreMetadataOverrides!: pulumi.Output<outputs.backup.RestoreTestingSelectionSensitiveStringMap | undefined>;
    public readonly restoreTestingPlanName!: pulumi.Output<string>;
    public readonly restoreTestingSelectionName!: pulumi.Output<string>;
    public readonly validationWindowHours!: pulumi.Output<number | undefined>;

    /**
     * Create a RestoreTestingSelection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RestoreTestingSelectionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.iamRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iamRoleArn'");
            }
            if ((!args || args.protectedResourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protectedResourceType'");
            }
            if ((!args || args.restoreTestingPlanName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restoreTestingPlanName'");
            }
            resourceInputs["iamRoleArn"] = args ? args.iamRoleArn : undefined;
            resourceInputs["protectedResourceArns"] = args ? args.protectedResourceArns : undefined;
            resourceInputs["protectedResourceConditions"] = args ? args.protectedResourceConditions : undefined;
            resourceInputs["protectedResourceType"] = args ? args.protectedResourceType : undefined;
            resourceInputs["restoreMetadataOverrides"] = args ? args.restoreMetadataOverrides : undefined;
            resourceInputs["restoreTestingPlanName"] = args ? args.restoreTestingPlanName : undefined;
            resourceInputs["restoreTestingSelectionName"] = args ? args.restoreTestingSelectionName : undefined;
            resourceInputs["validationWindowHours"] = args ? args.validationWindowHours : undefined;
        } else {
            resourceInputs["iamRoleArn"] = undefined /*out*/;
            resourceInputs["protectedResourceArns"] = undefined /*out*/;
            resourceInputs["protectedResourceConditions"] = undefined /*out*/;
            resourceInputs["protectedResourceType"] = undefined /*out*/;
            resourceInputs["restoreMetadataOverrides"] = undefined /*out*/;
            resourceInputs["restoreTestingPlanName"] = undefined /*out*/;
            resourceInputs["restoreTestingSelectionName"] = undefined /*out*/;
            resourceInputs["validationWindowHours"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["protectedResourceType", "restoreTestingPlanName", "restoreTestingSelectionName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(RestoreTestingSelection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RestoreTestingSelection resource.
 */
export interface RestoreTestingSelectionArgs {
    iamRoleArn: pulumi.Input<string>;
    protectedResourceArns?: pulumi.Input<pulumi.Input<string>[]>;
    protectedResourceConditions?: pulumi.Input<inputs.backup.RestoreTestingSelectionProtectedResourceConditionsArgs>;
    protectedResourceType: pulumi.Input<string>;
    restoreMetadataOverrides?: pulumi.Input<inputs.backup.RestoreTestingSelectionSensitiveStringMapArgs>;
    restoreTestingPlanName: pulumi.Input<string>;
    restoreTestingSelectionName?: pulumi.Input<string>;
    validationWindowHours?: pulumi.Input<number>;
}
