// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Contains detailed information about a report plan in AWS Backup Audit Manager.
 */
export class ReportPlan extends pulumi.CustomResource {
    /**
     * Get an existing ReportPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReportPlan {
        return new ReportPlan(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:backup:ReportPlan';

    /**
     * Returns true if the given object is an instance of ReportPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReportPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReportPlan.__pulumiType;
    }

    /**
     * A structure that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.
     */
    public readonly reportDeliveryChannel!: pulumi.Output<outputs.backup.ReportDeliveryChannelProperties>;
    /**
     * An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
     */
    public /*out*/ readonly reportPlanArn!: pulumi.Output<string>;
    /**
     * An optional description of the report plan with a maximum of 1,024 characters.
     */
    public readonly reportPlanDescription!: pulumi.Output<string | undefined>;
    /**
     * The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).
     */
    public readonly reportPlanName!: pulumi.Output<string | undefined>;
    /**
     * Metadata that you can assign to help organize the report plans that you create. Each tag is a key-value pair.
     */
    public readonly reportPlanTags!: pulumi.Output<outputs.backup.ReportPlanTag[] | undefined>;
    /**
     * Identifies the report template for the report. Reports are built using a report template.
     */
    public readonly reportSetting!: pulumi.Output<outputs.backup.ReportSettingProperties>;

    /**
     * Create a ReportPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReportPlanArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.reportDeliveryChannel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reportDeliveryChannel'");
            }
            if ((!args || args.reportSetting === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reportSetting'");
            }
            inputs["reportDeliveryChannel"] = args ? args.reportDeliveryChannel : undefined;
            inputs["reportPlanDescription"] = args ? args.reportPlanDescription : undefined;
            inputs["reportPlanName"] = args ? args.reportPlanName : undefined;
            inputs["reportPlanTags"] = args ? args.reportPlanTags : undefined;
            inputs["reportSetting"] = args ? args.reportSetting : undefined;
            inputs["reportPlanArn"] = undefined /*out*/;
        } else {
            inputs["reportDeliveryChannel"] = undefined /*out*/;
            inputs["reportPlanArn"] = undefined /*out*/;
            inputs["reportPlanDescription"] = undefined /*out*/;
            inputs["reportPlanName"] = undefined /*out*/;
            inputs["reportPlanTags"] = undefined /*out*/;
            inputs["reportSetting"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ReportPlan.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ReportPlan resource.
 */
export interface ReportPlanArgs {
    /**
     * A structure that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.
     */
    reportDeliveryChannel: pulumi.Input<inputs.backup.ReportDeliveryChannelPropertiesArgs>;
    /**
     * An optional description of the report plan with a maximum of 1,024 characters.
     */
    reportPlanDescription?: pulumi.Input<string>;
    /**
     * The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).
     */
    reportPlanName?: pulumi.Input<string>;
    /**
     * Metadata that you can assign to help organize the report plans that you create. Each tag is a key-value pair.
     */
    reportPlanTags?: pulumi.Input<pulumi.Input<inputs.backup.ReportPlanTagArgs>[]>;
    /**
     * Identifies the report template for the report. Reports are built using a report template.
     */
    reportSetting: pulumi.Input<inputs.backup.ReportSettingPropertiesArgs>;
}
