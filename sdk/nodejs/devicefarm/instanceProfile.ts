// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * AWS::DeviceFarm::InstanceProfile creates a new Device Farm Instance Profile
 */
export class InstanceProfile extends pulumi.CustomResource {
    /**
     * Get an existing InstanceProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceProfile {
        return new InstanceProfile(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:devicefarm:InstanceProfile';

    /**
     * Returns true if the given object is an instance of InstanceProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceProfile.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the instance profile. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The description of the instance profile.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * An array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.
     *
     * The list of packages is considered only if you set `packageCleanup` to `true` .
     */
    public readonly excludeAppPackagesFromCleanup!: pulumi.Output<string[] | undefined>;
    /**
     * The name of the instance profile.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * When set to `true` , Device Farm removes app packages after a test run. The default value is `false` for private devices.
     */
    public readonly packageCleanup!: pulumi.Output<boolean | undefined>;
    /**
     * When set to `true` , Device Farm reboots the instance after a test run. The default value is `true` .
     */
    public readonly rebootAfterUse!: pulumi.Output<boolean | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a InstanceProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InstanceProfileArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["excludeAppPackagesFromCleanup"] = args ? args.excludeAppPackagesFromCleanup : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packageCleanup"] = args ? args.packageCleanup : undefined;
            resourceInputs["rebootAfterUse"] = args ? args.rebootAfterUse : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["excludeAppPackagesFromCleanup"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["packageCleanup"] = undefined /*out*/;
            resourceInputs["rebootAfterUse"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a InstanceProfile resource.
 */
export interface InstanceProfileArgs {
    /**
     * The description of the instance profile.
     */
    description?: pulumi.Input<string>;
    /**
     * An array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.
     *
     * The list of packages is considered only if you set `packageCleanup` to `true` .
     */
    excludeAppPackagesFromCleanup?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the instance profile.
     */
    name?: pulumi.Input<string>;
    /**
     * When set to `true` , Device Farm removes app packages after a test run. The default value is `false` for private devices.
     */
    packageCleanup?: pulumi.Input<boolean>;
    /**
     * When set to `true` , Device Farm reboots the instance after a test run. The default value is `true` .
     */
    rebootAfterUse?: pulumi.Input<boolean>;
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
