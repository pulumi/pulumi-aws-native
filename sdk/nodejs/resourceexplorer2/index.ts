// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DefaultViewAssociationArgs } from "./defaultViewAssociation";
export type DefaultViewAssociation = import("./defaultViewAssociation").DefaultViewAssociation;
export const DefaultViewAssociation: typeof import("./defaultViewAssociation").DefaultViewAssociation = null as any;
utilities.lazyLoad(exports, ["DefaultViewAssociation"], () => require("./defaultViewAssociation"));

export { GetDefaultViewAssociationArgs, GetDefaultViewAssociationResult, GetDefaultViewAssociationOutputArgs } from "./getDefaultViewAssociation";
export const getDefaultViewAssociation: typeof import("./getDefaultViewAssociation").getDefaultViewAssociation = null as any;
export const getDefaultViewAssociationOutput: typeof import("./getDefaultViewAssociation").getDefaultViewAssociationOutput = null as any;
utilities.lazyLoad(exports, ["getDefaultViewAssociation","getDefaultViewAssociationOutput"], () => require("./getDefaultViewAssociation"));

export { GetIndexArgs, GetIndexResult, GetIndexOutputArgs } from "./getIndex";
export const getIndex: typeof import("./getIndex").getIndex = null as any;
export const getIndexOutput: typeof import("./getIndex").getIndexOutput = null as any;
utilities.lazyLoad(exports, ["getIndex","getIndexOutput"], () => require("./getIndex"));

export { GetViewArgs, GetViewResult, GetViewOutputArgs } from "./getView";
export const getView: typeof import("./getView").getView = null as any;
export const getViewOutput: typeof import("./getView").getViewOutput = null as any;
utilities.lazyLoad(exports, ["getView","getViewOutput"], () => require("./getView"));

export { IndexArgs } from "./index_";
export type Index = import("./index_").Index;
export const Index: typeof import("./index_").Index = null as any;
utilities.lazyLoad(exports, ["Index"], () => require("./index_"));

export { ViewArgs } from "./view";
export type View = import("./view").View;
export const View: typeof import("./view").View = null as any;
utilities.lazyLoad(exports, ["View"], () => require("./view"));


// Export enums:
export * from "../types/enums/resourceexplorer2";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:resourceexplorer2:DefaultViewAssociation":
                return new DefaultViewAssociation(name, <any>undefined, { urn })
            case "aws-native:resourceexplorer2:Index":
                return new Index(name, <any>undefined, { urn })
            case "aws-native:resourceexplorer2:View":
                return new View(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "resourceexplorer2", _module)
