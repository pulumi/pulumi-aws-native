// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Represents a plan that specifies Regions, IAM roles, and workflows of logic required to perform the desired change to your multi-Region application
 */
export function getPlan(args: GetPlanArgs, opts?: pulumi.InvokeOptions): Promise<GetPlanResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:arcregionswitch:getPlan", {
        "arn": args.arn,
    }, opts);
}

export interface GetPlanArgs {
    arn: string;
}

export interface GetPlanResult {
    readonly arn?: string;
    readonly associatedAlarms?: {[key: string]: outputs.arcregionswitch.PlanAssociatedAlarm};
    readonly description?: string;
    readonly executionRole?: string;
    readonly healthChecksForPlan?: {[key: string]: outputs.arcregionswitch.PlanHealthCheckState[]};
    readonly owner?: string;
    readonly recoveryTimeObjectiveMinutes?: number;
    readonly tags?: {[key: string]: string};
    readonly triggers?: outputs.arcregionswitch.PlanTrigger[];
    readonly version?: string;
    readonly workflows?: outputs.arcregionswitch.PlanWorkflow[];
}
/**
 * Represents a plan that specifies Regions, IAM roles, and workflows of logic required to perform the desired change to your multi-Region application
 */
export function getPlanOutput(args: GetPlanOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPlanResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:arcregionswitch:getPlan", {
        "arn": args.arn,
    }, opts);
}

export interface GetPlanOutputArgs {
    arn: pulumi.Input<string>;
}
