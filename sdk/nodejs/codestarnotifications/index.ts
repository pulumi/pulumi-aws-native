// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetNotificationRuleArgs, GetNotificationRuleResult, GetNotificationRuleOutputArgs } from "./getNotificationRule";
export const getNotificationRule: typeof import("./getNotificationRule").getNotificationRule = null as any;
export const getNotificationRuleOutput: typeof import("./getNotificationRule").getNotificationRuleOutput = null as any;

export { NotificationRuleArgs } from "./notificationRule";
export type NotificationRule = import("./notificationRule").NotificationRule;
export const NotificationRule: typeof import("./notificationRule").NotificationRule = null as any;

utilities.lazyLoad(exports, ["getNotificationRule","getNotificationRuleOutput"], () => require("./getNotificationRule"));
utilities.lazyLoad(exports, ["NotificationRule"], () => require("./notificationRule"));

// Export enums:
export * from "../types/enums/codestarnotifications";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:codestarnotifications:NotificationRule":
                return new NotificationRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "codestarnotifications", _module)
