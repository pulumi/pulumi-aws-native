// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::DocDB::DBCluster
 */
export function getDbCluster(args: GetDbClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetDbClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:docdb:getDbCluster", {
        "id": args.id,
    }, opts);
}

export interface GetDbClusterArgs {
    id: string;
}

export interface GetDbClusterResult {
    readonly backupRetentionPeriod?: number;
    readonly clusterResourceId?: string;
    readonly copyTagsToSnapshot?: boolean;
    readonly dbClusterParameterGroupName?: string;
    readonly deletionProtection?: boolean;
    readonly enableCloudwatchLogsExports?: string[];
    readonly endpoint?: string;
    readonly engineVersion?: string;
    readonly id?: string;
    readonly masterUserPassword?: string;
    readonly port?: number;
    readonly preferredBackupWindow?: string;
    readonly preferredMaintenanceWindow?: string;
    readonly readEndpoint?: string;
    readonly restoreToTime?: string;
    readonly restoreType?: string;
    readonly storageType?: string;
    readonly tags?: outputs.Tag[];
    readonly useLatestRestorableTime?: boolean;
    readonly vpcSecurityGroupIds?: string[];
}
/**
 * Resource Type definition for AWS::DocDB::DBCluster
 */
export function getDbClusterOutput(args: GetDbClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbClusterResult> {
    return pulumi.output(args).apply((a: any) => getDbCluster(a, opts))
}

export interface GetDbClusterOutputArgs {
    id: pulumi.Input<string>;
}
