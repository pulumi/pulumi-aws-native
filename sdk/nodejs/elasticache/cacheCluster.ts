// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ElastiCache::CacheCluster
 *
 * @deprecated CacheCluster is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class CacheCluster extends pulumi.CustomResource {
    /**
     * Get an existing CacheCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CacheCluster {
        pulumi.log.warn("CacheCluster is deprecated: CacheCluster is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new CacheCluster(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:elasticache:CacheCluster';

    /**
     * Returns true if the given object is an instance of CacheCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CacheCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CacheCluster.__pulumiType;
    }

    public readonly aZMode!: pulumi.Output<string | undefined>;
    public readonly autoMinorVersionUpgrade!: pulumi.Output<boolean | undefined>;
    public readonly cacheNodeType!: pulumi.Output<string>;
    public readonly cacheParameterGroupName!: pulumi.Output<string | undefined>;
    public readonly cacheSecurityGroupNames!: pulumi.Output<string[] | undefined>;
    public readonly cacheSubnetGroupName!: pulumi.Output<string | undefined>;
    public readonly clusterName!: pulumi.Output<string | undefined>;
    public readonly configurationEndpointAddress!: pulumi.Output<string | undefined>;
    public readonly configurationEndpointPort!: pulumi.Output<string | undefined>;
    public readonly engine!: pulumi.Output<string>;
    public readonly engineVersion!: pulumi.Output<string | undefined>;
    public readonly logDeliveryConfigurations!: pulumi.Output<outputs.elasticache.CacheClusterLogDeliveryConfigurationRequest[] | undefined>;
    public readonly notificationTopicArn!: pulumi.Output<string | undefined>;
    public readonly numCacheNodes!: pulumi.Output<number>;
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly preferredAvailabilityZone!: pulumi.Output<string | undefined>;
    public readonly preferredAvailabilityZones!: pulumi.Output<string[] | undefined>;
    public readonly preferredMaintenanceWindow!: pulumi.Output<string | undefined>;
    public readonly redisEndpointAddress!: pulumi.Output<string | undefined>;
    public readonly redisEndpointPort!: pulumi.Output<string | undefined>;
    public readonly snapshotArns!: pulumi.Output<string[] | undefined>;
    public readonly snapshotName!: pulumi.Output<string | undefined>;
    public readonly snapshotRetentionLimit!: pulumi.Output<number | undefined>;
    public readonly snapshotWindow!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.elasticache.CacheClusterTag[] | undefined>;
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a CacheCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated CacheCluster is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: CacheClusterArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("CacheCluster is deprecated: CacheCluster is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.cacheNodeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cacheNodeType'");
            }
            if ((!args || args.engine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            if ((!args || args.numCacheNodes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'numCacheNodes'");
            }
            inputs["aZMode"] = args ? args.aZMode : undefined;
            inputs["autoMinorVersionUpgrade"] = args ? args.autoMinorVersionUpgrade : undefined;
            inputs["cacheNodeType"] = args ? args.cacheNodeType : undefined;
            inputs["cacheParameterGroupName"] = args ? args.cacheParameterGroupName : undefined;
            inputs["cacheSecurityGroupNames"] = args ? args.cacheSecurityGroupNames : undefined;
            inputs["cacheSubnetGroupName"] = args ? args.cacheSubnetGroupName : undefined;
            inputs["clusterName"] = args ? args.clusterName : undefined;
            inputs["configurationEndpointAddress"] = args ? args.configurationEndpointAddress : undefined;
            inputs["configurationEndpointPort"] = args ? args.configurationEndpointPort : undefined;
            inputs["engine"] = args ? args.engine : undefined;
            inputs["engineVersion"] = args ? args.engineVersion : undefined;
            inputs["logDeliveryConfigurations"] = args ? args.logDeliveryConfigurations : undefined;
            inputs["notificationTopicArn"] = args ? args.notificationTopicArn : undefined;
            inputs["numCacheNodes"] = args ? args.numCacheNodes : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["preferredAvailabilityZone"] = args ? args.preferredAvailabilityZone : undefined;
            inputs["preferredAvailabilityZones"] = args ? args.preferredAvailabilityZones : undefined;
            inputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            inputs["redisEndpointAddress"] = args ? args.redisEndpointAddress : undefined;
            inputs["redisEndpointPort"] = args ? args.redisEndpointPort : undefined;
            inputs["snapshotArns"] = args ? args.snapshotArns : undefined;
            inputs["snapshotName"] = args ? args.snapshotName : undefined;
            inputs["snapshotRetentionLimit"] = args ? args.snapshotRetentionLimit : undefined;
            inputs["snapshotWindow"] = args ? args.snapshotWindow : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
        } else {
            inputs["aZMode"] = undefined /*out*/;
            inputs["autoMinorVersionUpgrade"] = undefined /*out*/;
            inputs["cacheNodeType"] = undefined /*out*/;
            inputs["cacheParameterGroupName"] = undefined /*out*/;
            inputs["cacheSecurityGroupNames"] = undefined /*out*/;
            inputs["cacheSubnetGroupName"] = undefined /*out*/;
            inputs["clusterName"] = undefined /*out*/;
            inputs["configurationEndpointAddress"] = undefined /*out*/;
            inputs["configurationEndpointPort"] = undefined /*out*/;
            inputs["engine"] = undefined /*out*/;
            inputs["engineVersion"] = undefined /*out*/;
            inputs["logDeliveryConfigurations"] = undefined /*out*/;
            inputs["notificationTopicArn"] = undefined /*out*/;
            inputs["numCacheNodes"] = undefined /*out*/;
            inputs["port"] = undefined /*out*/;
            inputs["preferredAvailabilityZone"] = undefined /*out*/;
            inputs["preferredAvailabilityZones"] = undefined /*out*/;
            inputs["preferredMaintenanceWindow"] = undefined /*out*/;
            inputs["redisEndpointAddress"] = undefined /*out*/;
            inputs["redisEndpointPort"] = undefined /*out*/;
            inputs["snapshotArns"] = undefined /*out*/;
            inputs["snapshotName"] = undefined /*out*/;
            inputs["snapshotRetentionLimit"] = undefined /*out*/;
            inputs["snapshotWindow"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["vpcSecurityGroupIds"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CacheCluster.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a CacheCluster resource.
 */
export interface CacheClusterArgs {
    aZMode?: pulumi.Input<string>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    cacheNodeType: pulumi.Input<string>;
    cacheParameterGroupName?: pulumi.Input<string>;
    cacheSecurityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    cacheSubnetGroupName?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    configurationEndpointAddress?: pulumi.Input<string>;
    configurationEndpointPort?: pulumi.Input<string>;
    engine: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    logDeliveryConfigurations?: pulumi.Input<pulumi.Input<inputs.elasticache.CacheClusterLogDeliveryConfigurationRequestArgs>[]>;
    notificationTopicArn?: pulumi.Input<string>;
    numCacheNodes: pulumi.Input<number>;
    port?: pulumi.Input<number>;
    preferredAvailabilityZone?: pulumi.Input<string>;
    preferredAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    redisEndpointAddress?: pulumi.Input<string>;
    redisEndpointPort?: pulumi.Input<string>;
    snapshotArns?: pulumi.Input<pulumi.Input<string>[]>;
    snapshotName?: pulumi.Input<string>;
    snapshotRetentionLimit?: pulumi.Input<number>;
    snapshotWindow?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.elasticache.CacheClusterTagArgs>[]>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
