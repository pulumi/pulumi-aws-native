// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ElastiCache::ParameterGroup
 */
export class ParameterGroup extends pulumi.CustomResource {
    /**
     * Get an existing ParameterGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ParameterGroup {
        return new ParameterGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:elasticache:ParameterGroup';

    /**
     * Returns true if the given object is an instance of ParameterGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ParameterGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ParameterGroup.__pulumiType;
    }

    /**
     * The name of the cache parameter group family that this cache parameter group is compatible with.
     */
    declare public readonly cacheParameterGroupFamily: pulumi.Output<string>;
    /**
     * The name of the Cache Parameter Group.
     */
    declare public /*out*/ readonly cacheParameterGroupName: pulumi.Output<string>;
    /**
     * The description for this cache parameter group.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * A comma-delimited list of parameter name/value pairs. For more information see ModifyCacheParameterGroup in the Amazon ElastiCache API Reference Guide.
     */
    declare public readonly properties: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Tags are composed of a Key/Value pair. You can use tags to categorize and track each parameter group. The tag value null is permitted.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a ParameterGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ParameterGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.cacheParameterGroupFamily === undefined && !opts.urn) {
                throw new Error("Missing required property 'cacheParameterGroupFamily'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["cacheParameterGroupFamily"] = args?.cacheParameterGroupFamily;
            resourceInputs["description"] = args?.description;
            resourceInputs["properties"] = args?.properties;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["cacheParameterGroupName"] = undefined /*out*/;
        } else {
            resourceInputs["cacheParameterGroupFamily"] = undefined /*out*/;
            resourceInputs["cacheParameterGroupName"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["cacheParameterGroupFamily"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ParameterGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ParameterGroup resource.
 */
export interface ParameterGroupArgs {
    /**
     * The name of the cache parameter group family that this cache parameter group is compatible with.
     */
    cacheParameterGroupFamily: pulumi.Input<string>;
    /**
     * The description for this cache parameter group.
     */
    description: pulumi.Input<string>;
    /**
     * A comma-delimited list of parameter name/value pairs. For more information see ModifyCacheParameterGroup in the Amazon ElastiCache API Reference Guide.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Tags are composed of a Key/Value pair. You can use tags to categorize and track each parameter group. The tag value null is permitted.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
