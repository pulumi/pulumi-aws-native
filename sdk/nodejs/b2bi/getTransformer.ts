// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::B2BI::Transformer Resource Type
 */
export function getTransformer(args: GetTransformerArgs, opts?: pulumi.InvokeOptions): Promise<GetTransformerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:b2bi:getTransformer", {
        "transformerId": args.transformerId,
    }, opts);
}

export interface GetTransformerArgs {
    /**
     * The system-assigned unique identifier for the transformer.
     */
    transformerId: string;
}

export interface GetTransformerResult {
    /**
     * Returns a timestamp indicating when the transformer was created. For example, `2023-07-20T19:58:44.624Z` .
     */
    readonly createdAt?: string;
    readonly ediType?: outputs.b2bi.TransformerEdiTypeProperties;
    readonly fileFormat?: enums.b2bi.TransformerFileFormat;
    /**
     * Returns a structure that contains the format options for the transformation.
     */
    readonly inputConversion?: outputs.b2bi.TransformerInputConversion;
    /**
     * Returns the structure that contains the mapping template and its language (either XSLT or JSONATA).
     */
    readonly mapping?: outputs.b2bi.TransformerMapping;
    /**
     * This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
     */
    readonly mappingTemplate?: string;
    /**
     * Returns a timestamp representing the date and time for the most recent change for the transformer object.
     */
    readonly modifiedAt?: string;
    /**
     * Returns the descriptive name for the transformer.
     */
    readonly name?: string;
    /**
     * Returns the `OutputConversion` object, which contains the format options for the outbound transformation.
     */
    readonly outputConversion?: outputs.b2bi.TransformerOutputConversion;
    /**
     * This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
     */
    readonly sampleDocument?: string;
    /**
     * Returns a structure that contains the Amazon S3 bucket and an array of the corresponding keys used to identify the location for your sample documents.
     */
    readonly sampleDocuments?: outputs.b2bi.TransformerSampleDocuments;
    /**
     * Returns the state of the newly created transformer. The transformer can be either `active` or `inactive` . For the transformer to be used in a capability, its status must `active` .
     */
    readonly status?: enums.b2bi.TransformerStatus;
    /**
     * A key-value pair for a specific transformer. Tags are metadata that you can use to search for and group capabilities for various purposes.
     */
    readonly tags?: outputs.Tag[];
    /**
     * Returns an Amazon Resource Name (ARN) for a specific transformer.
     */
    readonly transformerArn?: string;
    /**
     * The system-assigned unique identifier for the transformer.
     */
    readonly transformerId?: string;
}
/**
 * Definition of AWS::B2BI::Transformer Resource Type
 */
export function getTransformerOutput(args: GetTransformerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTransformerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:b2bi:getTransformer", {
        "transformerId": args.transformerId,
    }, opts);
}

export interface GetTransformerOutputArgs {
    /**
     * The system-assigned unique identifier for the transformer.
     */
    transformerId: pulumi.Input<string>;
}
