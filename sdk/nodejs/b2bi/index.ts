// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CapabilityArgs } from "./capability";
export type Capability = import("./capability").Capability;
export const Capability: typeof import("./capability").Capability = null as any;
utilities.lazyLoad(exports, ["Capability"], () => require("./capability"));

export { GetCapabilityArgs, GetCapabilityResult, GetCapabilityOutputArgs } from "./getCapability";
export const getCapability: typeof import("./getCapability").getCapability = null as any;
export const getCapabilityOutput: typeof import("./getCapability").getCapabilityOutput = null as any;
utilities.lazyLoad(exports, ["getCapability","getCapabilityOutput"], () => require("./getCapability"));

export { GetPartnershipArgs, GetPartnershipResult, GetPartnershipOutputArgs } from "./getPartnership";
export const getPartnership: typeof import("./getPartnership").getPartnership = null as any;
export const getPartnershipOutput: typeof import("./getPartnership").getPartnershipOutput = null as any;
utilities.lazyLoad(exports, ["getPartnership","getPartnershipOutput"], () => require("./getPartnership"));

export { GetProfileArgs, GetProfileResult, GetProfileOutputArgs } from "./getProfile";
export const getProfile: typeof import("./getProfile").getProfile = null as any;
export const getProfileOutput: typeof import("./getProfile").getProfileOutput = null as any;
utilities.lazyLoad(exports, ["getProfile","getProfileOutput"], () => require("./getProfile"));

export { GetTransformerArgs, GetTransformerResult, GetTransformerOutputArgs } from "./getTransformer";
export const getTransformer: typeof import("./getTransformer").getTransformer = null as any;
export const getTransformerOutput: typeof import("./getTransformer").getTransformerOutput = null as any;
utilities.lazyLoad(exports, ["getTransformer","getTransformerOutput"], () => require("./getTransformer"));

export { PartnershipArgs } from "./partnership";
export type Partnership = import("./partnership").Partnership;
export const Partnership: typeof import("./partnership").Partnership = null as any;
utilities.lazyLoad(exports, ["Partnership"], () => require("./partnership"));

export { ProfileArgs } from "./profile";
export type Profile = import("./profile").Profile;
export const Profile: typeof import("./profile").Profile = null as any;
utilities.lazyLoad(exports, ["Profile"], () => require("./profile"));

export { TransformerArgs } from "./transformer";
export type Transformer = import("./transformer").Transformer;
export const Transformer: typeof import("./transformer").Transformer = null as any;
utilities.lazyLoad(exports, ["Transformer"], () => require("./transformer"));


// Export enums:
export * from "../types/enums/b2bi";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:b2bi:Capability":
                return new Capability(name, <any>undefined, { urn })
            case "aws-native:b2bi:Partnership":
                return new Partnership(name, <any>undefined, { urn })
            case "aws-native:b2bi:Profile":
                return new Profile(name, <any>undefined, { urn })
            case "aws-native:b2bi:Transformer":
                return new Transformer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "b2bi", _module)
