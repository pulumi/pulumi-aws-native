// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export function getEnvironment(args: GetEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:finspace:getEnvironment", {
        "environmentId": args.environmentId,
    }, opts);
}

export interface GetEnvironmentArgs {
    /**
     * Unique identifier for representing FinSpace Environment
     */
    environmentId: string;
}

export interface GetEnvironmentResult {
    /**
     * AWS account ID associated with the Environment
     */
    readonly awsAccountId?: string;
    /**
     * ID for FinSpace created account used to store Environment artifacts
     */
    readonly dedicatedServiceAccountId?: string;
    /**
     * Description of the Environment
     */
    readonly description?: string;
    /**
     * ARN of the Environment
     */
    readonly environmentArn?: string;
    /**
     * Unique identifier for representing FinSpace Environment
     */
    readonly environmentId?: string;
    /**
     * URL used to login to the Environment
     */
    readonly environmentUrl?: string;
    /**
     * Federation mode used with the Environment
     */
    readonly federationMode?: enums.finspace.EnvironmentFederationMode;
    readonly federationParameters?: outputs.finspace.EnvironmentFederationParameters;
    /**
     * Name of the Environment
     */
    readonly name?: string;
    /**
     * SageMaker Studio Domain URL associated with the Environment
     */
    readonly sageMakerStudioDomainUrl?: string;
    /**
     * State of the Environment
     */
    readonly status?: enums.finspace.EnvironmentStatus;
}

export function getEnvironmentOutput(args: GetEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvironmentResult> {
    return pulumi.output(args).apply(a => getEnvironment(a, opts))
}

export interface GetEnvironmentOutputArgs {
    /**
     * Unique identifier for representing FinSpace Environment
     */
    environmentId: pulumi.Input<string>;
}
