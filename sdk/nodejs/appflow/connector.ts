// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::AppFlow::Connector
 *
 * @deprecated Connector is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class Connector extends pulumi.CustomResource {
    /**
     * Get an existing Connector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connector {
        pulumi.log.warn("Connector is deprecated: Connector is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new Connector(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appflow:Connector';

    /**
     * Returns true if the given object is an instance of Connector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connector.__pulumiType;
    }

    /**
     *  The arn of the connector. The arn is unique for each ConnectorRegistration in your AWS account.
     */
    public /*out*/ readonly connectorArn!: pulumi.Output<string>;
    /**
     *  The name of the connector. The name is unique for each ConnectorRegistration in your AWS account.
     */
    public readonly connectorLabel!: pulumi.Output<string | undefined>;
    /**
     * Contains information about the configuration of the connector being registered.
     */
    public readonly connectorProvisioningConfig!: pulumi.Output<outputs.appflow.ConnectorProvisioningConfig>;
    /**
     * The provisioning type of the connector. Currently the only supported value is LAMBDA. 
     */
    public readonly connectorProvisioningType!: pulumi.Output<string>;
    /**
     * A description about the connector that's being registered.
     */
    public readonly description!: pulumi.Output<string | undefined>;

    /**
     * Create a Connector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Connector is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: ConnectorArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Connector is deprecated: Connector is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.connectorProvisioningConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectorProvisioningConfig'");
            }
            if ((!args || args.connectorProvisioningType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectorProvisioningType'");
            }
            resourceInputs["connectorLabel"] = args ? args.connectorLabel : undefined;
            resourceInputs["connectorProvisioningConfig"] = args ? args.connectorProvisioningConfig : undefined;
            resourceInputs["connectorProvisioningType"] = args ? args.connectorProvisioningType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["connectorArn"] = undefined /*out*/;
        } else {
            resourceInputs["connectorArn"] = undefined /*out*/;
            resourceInputs["connectorLabel"] = undefined /*out*/;
            resourceInputs["connectorProvisioningConfig"] = undefined /*out*/;
            resourceInputs["connectorProvisioningType"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Connector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Connector resource.
 */
export interface ConnectorArgs {
    /**
     *  The name of the connector. The name is unique for each ConnectorRegistration in your AWS account.
     */
    connectorLabel?: pulumi.Input<string>;
    /**
     * Contains information about the configuration of the connector being registered.
     */
    connectorProvisioningConfig: pulumi.Input<inputs.appflow.ConnectorProvisioningConfigArgs>;
    /**
     * The provisioning type of the connector. Currently the only supported value is LAMBDA. 
     */
    connectorProvisioningType: pulumi.Input<string>;
    /**
     * A description about the connector that's being registered.
     */
    description?: pulumi.Input<string>;
}
