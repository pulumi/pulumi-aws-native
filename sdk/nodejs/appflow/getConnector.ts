// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::AppFlow::Connector
 */
export function getConnector(args: GetConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:appflow:getConnector", {
        "connectorLabel": args.connectorLabel,
    }, opts);
}

export interface GetConnectorArgs {
    /**
     *  The name of the connector. The name is unique for each ConnectorRegistration in your AWS account.
     */
    connectorLabel: string;
}

export interface GetConnectorResult {
    /**
     *  The arn of the connector. The arn is unique for each ConnectorRegistration in your AWS account.
     */
    readonly connectorArn?: string;
    /**
     * Contains information about the configuration of the connector being registered.
     */
    readonly connectorProvisioningConfig?: outputs.appflow.ConnectorProvisioningConfig;
    /**
     * The provisioning type of the connector. Currently the only supported value is LAMBDA. 
     */
    readonly connectorProvisioningType?: string;
    /**
     * A description about the connector that's being registered.
     */
    readonly description?: string;
}

export function getConnectorOutput(args: GetConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectorResult> {
    return pulumi.output(args).apply(a => getConnector(a, opts))
}

export interface GetConnectorOutputArgs {
    /**
     *  The name of the connector. The name is unique for each ConnectorRegistration in your AWS account.
     */
    connectorLabel: pulumi.Input<string>;
}
