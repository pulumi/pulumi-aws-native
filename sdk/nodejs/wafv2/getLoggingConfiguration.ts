// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * A WAFv2 Logging Configuration Resource Provider
 */
export function getLoggingConfiguration(args: GetLoggingConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetLoggingConfigurationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:wafv2:getLoggingConfiguration", {
        "resourceArn": args.resourceArn,
    }, opts);
}

export interface GetLoggingConfigurationArgs {
    /**
     * The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
     */
    resourceArn: string;
}

export interface GetLoggingConfigurationResult {
    /**
     * The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
     */
    readonly logDestinationConfigs?: string[];
    /**
     * Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
     */
    readonly loggingFilter?: outputs.wafv2.LoggingFilterProperties;
    /**
     * Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration.
     */
    readonly managedByFirewallManager?: boolean;
    /**
     * The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
     */
    readonly redactedFields?: outputs.wafv2.LoggingConfigurationFieldToMatch[];
}

export function getLoggingConfigurationOutput(args: GetLoggingConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoggingConfigurationResult> {
    return pulumi.output(args).apply(a => getLoggingConfiguration(a, opts))
}

export interface GetLoggingConfigurationOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
     */
    resourceArn: pulumi.Input<string>;
}
