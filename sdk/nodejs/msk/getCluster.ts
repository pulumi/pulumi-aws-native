// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::MSK::Cluster
 */
export function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:msk:getCluster", {
        "arn": args.arn,
    }, opts);
}

export interface GetClusterArgs {
    arn: string;
}

export interface GetClusterResult {
    readonly arn?: string;
    readonly brokerNodeGroupInfo?: outputs.msk.ClusterBrokerNodeGroupInfo;
    readonly clientAuthentication?: outputs.msk.ClusterClientAuthentication;
    readonly configurationInfo?: outputs.msk.ClusterConfigurationInfo;
    /**
     * The current version of the MSK cluster
     */
    readonly currentVersion?: string;
    readonly encryptionInfo?: outputs.msk.ClusterEncryptionInfo;
    readonly enhancedMonitoring?: enums.msk.ClusterEnhancedMonitoring;
    readonly kafkaVersion?: string;
    readonly loggingInfo?: outputs.msk.ClusterLoggingInfo;
    readonly numberOfBrokerNodes?: number;
    readonly openMonitoring?: outputs.msk.ClusterOpenMonitoring;
}

export function getClusterOutput(args: GetClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterResult> {
    return pulumi.output(args).apply(a => getCluster(a, opts))
}

export interface GetClusterOutputArgs {
    arn: pulumi.Input<string>;
}
