// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BatchScramSecretArgs } from "./batchScramSecret";
export type BatchScramSecret = import("./batchScramSecret").BatchScramSecret;
export const BatchScramSecret: typeof import("./batchScramSecret").BatchScramSecret = null as any;
utilities.lazyLoad(exports, ["BatchScramSecret"], () => require("./batchScramSecret"));

export { ClusterArgs } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ClusterPolicyArgs } from "./clusterPolicy";
export type ClusterPolicy = import("./clusterPolicy").ClusterPolicy;
export const ClusterPolicy: typeof import("./clusterPolicy").ClusterPolicy = null as any;
utilities.lazyLoad(exports, ["ClusterPolicy"], () => require("./clusterPolicy"));

export { ConfigurationArgs } from "./configuration";
export type Configuration = import("./configuration").Configuration;
export const Configuration: typeof import("./configuration").Configuration = null as any;
utilities.lazyLoad(exports, ["Configuration"], () => require("./configuration"));

export { GetBatchScramSecretArgs, GetBatchScramSecretResult, GetBatchScramSecretOutputArgs } from "./getBatchScramSecret";
export const getBatchScramSecret: typeof import("./getBatchScramSecret").getBatchScramSecret = null as any;
export const getBatchScramSecretOutput: typeof import("./getBatchScramSecret").getBatchScramSecretOutput = null as any;
utilities.lazyLoad(exports, ["getBatchScramSecret","getBatchScramSecretOutput"], () => require("./getBatchScramSecret"));

export { GetClusterArgs, GetClusterResult, GetClusterOutputArgs } from "./getCluster";
export const getCluster: typeof import("./getCluster").getCluster = null as any;
export const getClusterOutput: typeof import("./getCluster").getClusterOutput = null as any;
utilities.lazyLoad(exports, ["getCluster","getClusterOutput"], () => require("./getCluster"));

export { GetClusterPolicyArgs, GetClusterPolicyResult, GetClusterPolicyOutputArgs } from "./getClusterPolicy";
export const getClusterPolicy: typeof import("./getClusterPolicy").getClusterPolicy = null as any;
export const getClusterPolicyOutput: typeof import("./getClusterPolicy").getClusterPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getClusterPolicy","getClusterPolicyOutput"], () => require("./getClusterPolicy"));

export { GetConfigurationArgs, GetConfigurationResult, GetConfigurationOutputArgs } from "./getConfiguration";
export const getConfiguration: typeof import("./getConfiguration").getConfiguration = null as any;
export const getConfigurationOutput: typeof import("./getConfiguration").getConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getConfiguration","getConfigurationOutput"], () => require("./getConfiguration"));

export { GetServerlessClusterArgs, GetServerlessClusterResult, GetServerlessClusterOutputArgs } from "./getServerlessCluster";
export const getServerlessCluster: typeof import("./getServerlessCluster").getServerlessCluster = null as any;
export const getServerlessClusterOutput: typeof import("./getServerlessCluster").getServerlessClusterOutput = null as any;
utilities.lazyLoad(exports, ["getServerlessCluster","getServerlessClusterOutput"], () => require("./getServerlessCluster"));

export { ServerlessClusterArgs } from "./serverlessCluster";
export type ServerlessCluster = import("./serverlessCluster").ServerlessCluster;
export const ServerlessCluster: typeof import("./serverlessCluster").ServerlessCluster = null as any;
utilities.lazyLoad(exports, ["ServerlessCluster"], () => require("./serverlessCluster"));


// Export enums:
export * from "../types/enums/msk";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:msk:BatchScramSecret":
                return new BatchScramSecret(name, <any>undefined, { urn })
            case "aws-native:msk:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "aws-native:msk:ClusterPolicy":
                return new ClusterPolicy(name, <any>undefined, { urn })
            case "aws-native:msk:Configuration":
                return new Configuration(name, <any>undefined, { urn })
            case "aws-native:msk:ServerlessCluster":
                return new ServerlessCluster(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "msk", _module)
