// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * A domain defined for 3rd party data source in Profile Service
 */
export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:customerprofiles:getDomain", {
        "domainName": args.domainName,
    }, opts);
}

export interface GetDomainArgs {
    /**
     * The unique name of the domain.
     */
    domainName: string;
}

export interface GetDomainResult {
    /**
     * The time of this integration got created
     */
    readonly createdAt?: string;
    /**
     * The URL of the SQS dead letter queue
     */
    readonly deadLetterQueueUrl?: string;
    /**
     * The default encryption key
     */
    readonly defaultEncryptionKey?: string;
    /**
     * The default number of days until the data within the domain expires.
     */
    readonly defaultExpirationDays?: number;
    /**
     * The time of this integration got last updated at
     */
    readonly lastUpdatedAt?: string;
    /**
     * The tags (keys and values) associated with the domain
     */
    readonly tags?: outputs.customerprofiles.DomainTag[];
}

export function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply(a => getDomain(a, opts))
}

export interface GetDomainOutputArgs {
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
}
