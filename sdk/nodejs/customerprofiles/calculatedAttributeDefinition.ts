// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A calculated attribute definition for Customer Profiles
 */
export class CalculatedAttributeDefinition extends pulumi.CustomResource {
    /**
     * Get an existing CalculatedAttributeDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CalculatedAttributeDefinition {
        return new CalculatedAttributeDefinition(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:customerprofiles:CalculatedAttributeDefinition';

    /**
     * Returns true if the given object is an instance of CalculatedAttributeDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CalculatedAttributeDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CalculatedAttributeDefinition.__pulumiType;
    }

    /**
     * Mathematical expression and a list of attribute items specified in that expression.
     */
    public readonly attributeDetails!: pulumi.Output<outputs.customerprofiles.CalculatedAttributeDefinitionAttributeDetails>;
    /**
     * The name of an attribute defined in a profile object type.
     */
    public readonly calculatedAttributeName!: pulumi.Output<string>;
    /**
     * The conditions including range, object count, and threshold for the calculated attribute.
     */
    public readonly conditions!: pulumi.Output<outputs.customerprofiles.CalculatedAttributeDefinitionConditions | undefined>;
    /**
     * The timestamp of when the calculated attribute definition was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the calculated attribute.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the calculated attribute.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The unique name of the domain.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The timestamp of when the calculated attribute definition was most recently edited.
     */
    public /*out*/ readonly lastUpdatedAt!: pulumi.Output<string>;
    public /*out*/ readonly readiness!: pulumi.Output<outputs.customerprofiles.CalculatedAttributeDefinitionReadiness>;
    /**
     * The aggregation operation to perform for the calculated attribute.
     */
    public readonly statistic!: pulumi.Output<enums.customerprofiles.CalculatedAttributeDefinitionStatistic>;
    /**
     * The status of the calculated attribute definition.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.customerprofiles.CalculatedAttributeDefinitionStatus>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Whether to use historical data for the calculated attribute.
     */
    public readonly useHistoricalData!: pulumi.Output<boolean | undefined>;

    /**
     * Create a CalculatedAttributeDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CalculatedAttributeDefinitionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.attributeDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'attributeDetails'");
            }
            if (args?.calculatedAttributeName === undefined && !opts.urn) {
                throw new Error("Missing required property 'calculatedAttributeName'");
            }
            if (args?.domainName === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if (args?.statistic === undefined && !opts.urn) {
                throw new Error("Missing required property 'statistic'");
            }
            resourceInputs["attributeDetails"] = args?.attributeDetails;
            resourceInputs["calculatedAttributeName"] = args?.calculatedAttributeName;
            resourceInputs["conditions"] = args?.conditions;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["domainName"] = args?.domainName;
            resourceInputs["statistic"] = args?.statistic;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["useHistoricalData"] = args?.useHistoricalData;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["readiness"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["attributeDetails"] = undefined /*out*/;
            resourceInputs["calculatedAttributeName"] = undefined /*out*/;
            resourceInputs["conditions"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["readiness"] = undefined /*out*/;
            resourceInputs["statistic"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["useHistoricalData"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["calculatedAttributeName", "conditions.range.timestampFormat", "conditions.range.timestampSource", "domainName", "useHistoricalData"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(CalculatedAttributeDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CalculatedAttributeDefinition resource.
 */
export interface CalculatedAttributeDefinitionArgs {
    /**
     * Mathematical expression and a list of attribute items specified in that expression.
     */
    attributeDetails: pulumi.Input<inputs.customerprofiles.CalculatedAttributeDefinitionAttributeDetailsArgs>;
    /**
     * The name of an attribute defined in a profile object type.
     */
    calculatedAttributeName: pulumi.Input<string>;
    /**
     * The conditions including range, object count, and threshold for the calculated attribute.
     */
    conditions?: pulumi.Input<inputs.customerprofiles.CalculatedAttributeDefinitionConditionsArgs>;
    /**
     * The description of the calculated attribute.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the calculated attribute.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
    /**
     * The aggregation operation to perform for the calculated attribute.
     */
    statistic: pulumi.Input<enums.customerprofiles.CalculatedAttributeDefinitionStatistic>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Whether to use historical data for the calculated attribute.
     */
    useHistoricalData?: pulumi.Input<boolean>;
}
