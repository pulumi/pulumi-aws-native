// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Creates an Amazon Kinesis Data Analytics application. For information about creating a Kinesis Data Analytics application, see [Creating an Application](https://docs.aws.amazon.com/kinesisanalytics/latest/java/getting-started.html).
 */
export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:kinesisanalyticsv2:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    /**
     * Use this parameter to configure the application.
     */
    public readonly applicationConfiguration!: pulumi.Output<outputs.kinesisanalyticsv2.ApplicationConfiguration | undefined>;
    /**
     * The description of the application.
     */
    public readonly applicationDescription!: pulumi.Output<string | undefined>;
    /**
     * Used to configure start of maintenance window.
     */
    public readonly applicationMaintenanceConfiguration!: pulumi.Output<outputs.kinesisanalyticsv2.ApplicationMaintenanceConfiguration | undefined>;
    /**
     * To create a Kinesis Data Analytics Studio notebook, you must set the mode to `INTERACTIVE`. However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.
     */
    public readonly applicationMode!: pulumi.Output<enums.kinesisanalyticsv2.ApplicationMode | undefined>;
    /**
     * The name of the application.
     */
    public readonly applicationName!: pulumi.Output<string | undefined>;
    /**
     * Specifies run configuration (start parameters) of a Kinesis Data Analytics application. Evaluated on update for RUNNING applications an only.
     */
    public readonly runConfiguration!: pulumi.Output<outputs.kinesisanalyticsv2.ApplicationRunConfiguration | undefined>;
    /**
     * The runtime environment for the application.
     */
    public readonly runtimeEnvironment!: pulumi.Output<string>;
    /**
     * Specifies the IAM role that the application uses to access external resources.
     */
    public readonly serviceExecutionRole!: pulumi.Output<string>;
    /**
     * A list of one or more tags to assign to the application. A tag is a key-value pair that identifies an application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.runtimeEnvironment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runtimeEnvironment'");
            }
            if ((!args || args.serviceExecutionRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceExecutionRole'");
            }
            resourceInputs["applicationConfiguration"] = args ? args.applicationConfiguration : undefined;
            resourceInputs["applicationDescription"] = args ? args.applicationDescription : undefined;
            resourceInputs["applicationMaintenanceConfiguration"] = args ? args.applicationMaintenanceConfiguration : undefined;
            resourceInputs["applicationMode"] = args ? args.applicationMode : undefined;
            resourceInputs["applicationName"] = args ? args.applicationName : undefined;
            resourceInputs["runConfiguration"] = args ? args.runConfiguration : undefined;
            resourceInputs["runtimeEnvironment"] = args ? args.runtimeEnvironment : undefined;
            resourceInputs["serviceExecutionRole"] = args ? args.serviceExecutionRole : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        } else {
            resourceInputs["applicationConfiguration"] = undefined /*out*/;
            resourceInputs["applicationDescription"] = undefined /*out*/;
            resourceInputs["applicationMaintenanceConfiguration"] = undefined /*out*/;
            resourceInputs["applicationMode"] = undefined /*out*/;
            resourceInputs["applicationName"] = undefined /*out*/;
            resourceInputs["runConfiguration"] = undefined /*out*/;
            resourceInputs["runtimeEnvironment"] = undefined /*out*/;
            resourceInputs["serviceExecutionRole"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["applicationMode", "applicationName", "runtimeEnvironment"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Application.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * Use this parameter to configure the application.
     */
    applicationConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationConfigurationArgs>;
    /**
     * The description of the application.
     */
    applicationDescription?: pulumi.Input<string>;
    /**
     * Used to configure start of maintenance window.
     */
    applicationMaintenanceConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationMaintenanceConfigurationArgs>;
    /**
     * To create a Kinesis Data Analytics Studio notebook, you must set the mode to `INTERACTIVE`. However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.
     */
    applicationMode?: pulumi.Input<enums.kinesisanalyticsv2.ApplicationMode>;
    /**
     * The name of the application.
     */
    applicationName?: pulumi.Input<string>;
    /**
     * Specifies run configuration (start parameters) of a Kinesis Data Analytics application. Evaluated on update for RUNNING applications an only.
     */
    runConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationRunConfigurationArgs>;
    /**
     * The runtime environment for the application.
     */
    runtimeEnvironment: pulumi.Input<string>;
    /**
     * Specifies the IAM role that the application uses to access external resources.
     */
    serviceExecutionRole: pulumi.Input<string>;
    /**
     * A list of one or more tags to assign to the application. A tag is a key-value pair that identifies an application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
