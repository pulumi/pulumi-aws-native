// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DataSourceArgs } from "./dataSource";
export type DataSource = import("./dataSource").DataSource;
export const DataSource: typeof import("./dataSource").DataSource = null as any;
utilities.lazyLoad(exports, ["DataSource"], () => require("./dataSource"));

export { FaqArgs } from "./faq";
export type Faq = import("./faq").Faq;
export const Faq: typeof import("./faq").Faq = null as any;
utilities.lazyLoad(exports, ["Faq"], () => require("./faq"));

export { GetDataSourceArgs, GetDataSourceResult, GetDataSourceOutputArgs } from "./getDataSource";
export const getDataSource: typeof import("./getDataSource").getDataSource = null as any;
export const getDataSourceOutput: typeof import("./getDataSource").getDataSourceOutput = null as any;
utilities.lazyLoad(exports, ["getDataSource","getDataSourceOutput"], () => require("./getDataSource"));

export { GetFaqArgs, GetFaqResult, GetFaqOutputArgs } from "./getFaq";
export const getFaq: typeof import("./getFaq").getFaq = null as any;
export const getFaqOutput: typeof import("./getFaq").getFaqOutput = null as any;
utilities.lazyLoad(exports, ["getFaq","getFaqOutput"], () => require("./getFaq"));

export { GetIndexArgs, GetIndexResult, GetIndexOutputArgs } from "./getIndex";
export const getIndex: typeof import("./getIndex").getIndex = null as any;
export const getIndexOutput: typeof import("./getIndex").getIndexOutput = null as any;
utilities.lazyLoad(exports, ["getIndex","getIndexOutput"], () => require("./getIndex"));

export { IndexArgs } from "./index_";
export type Index = import("./index_").Index;
export const Index: typeof import("./index_").Index = null as any;
utilities.lazyLoad(exports, ["Index"], () => require("./index_"));


// Export enums:
export * from "../types/enums/kendra";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:kendra:DataSource":
                return new DataSource(name, <any>undefined, { urn })
            case "aws-native:kendra:Faq":
                return new Faq(name, <any>undefined, { urn })
            case "aws-native:kendra:Index":
                return new Index(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "kendra", _module)
