// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Greengrass::SubscriptionDefinitionVersion
 *
 * @deprecated SubscriptionDefinitionVersion is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class SubscriptionDefinitionVersion extends pulumi.CustomResource {
    /**
     * Get an existing SubscriptionDefinitionVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SubscriptionDefinitionVersion {
        pulumi.log.warn("SubscriptionDefinitionVersion is deprecated: SubscriptionDefinitionVersion is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new SubscriptionDefinitionVersion(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:greengrass:SubscriptionDefinitionVersion';

    /**
     * Returns true if the given object is an instance of SubscriptionDefinitionVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SubscriptionDefinitionVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SubscriptionDefinitionVersion.__pulumiType;
    }

    public readonly subscriptionDefinitionId!: pulumi.Output<string>;
    public readonly subscriptions!: pulumi.Output<outputs.greengrass.SubscriptionDefinitionVersionSubscription[]>;

    /**
     * Create a SubscriptionDefinitionVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated SubscriptionDefinitionVersion is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: SubscriptionDefinitionVersionArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("SubscriptionDefinitionVersion is deprecated: SubscriptionDefinitionVersion is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.subscriptionDefinitionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionDefinitionId'");
            }
            if ((!args || args.subscriptions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptions'");
            }
            inputs["subscriptionDefinitionId"] = args ? args.subscriptionDefinitionId : undefined;
            inputs["subscriptions"] = args ? args.subscriptions : undefined;
        } else {
            inputs["subscriptionDefinitionId"] = undefined /*out*/;
            inputs["subscriptions"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SubscriptionDefinitionVersion.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a SubscriptionDefinitionVersion resource.
 */
export interface SubscriptionDefinitionVersionArgs {
    subscriptionDefinitionId: pulumi.Input<string>;
    subscriptions: pulumi.Input<pulumi.Input<inputs.greengrass.SubscriptionDefinitionVersionSubscriptionArgs>[]>;
}
