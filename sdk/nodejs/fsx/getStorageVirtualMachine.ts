// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::FSx::StorageVirtualMachine
 */
export function getStorageVirtualMachine(args: GetStorageVirtualMachineArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageVirtualMachineResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:fsx:getStorageVirtualMachine", {
        "storageVirtualMachineId": args.storageVirtualMachineId,
    }, opts);
}

export interface GetStorageVirtualMachineArgs {
    storageVirtualMachineId: string;
}

export interface GetStorageVirtualMachineResult {
    readonly activeDirectoryConfiguration?: outputs.fsx.StorageVirtualMachineActiveDirectoryConfiguration;
    readonly resourceARN?: string;
    readonly storageVirtualMachineId?: string;
    readonly svmAdminPassword?: string;
    readonly tags?: outputs.fsx.StorageVirtualMachineTag[];
    readonly uUID?: string;
}

export function getStorageVirtualMachineOutput(args: GetStorageVirtualMachineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageVirtualMachineResult> {
    return pulumi.output(args).apply(a => getStorageVirtualMachine(a, opts))
}

export interface GetStorageVirtualMachineOutputArgs {
    storageVirtualMachineId: pulumi.Input<string>;
}
