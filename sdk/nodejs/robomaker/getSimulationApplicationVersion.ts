// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * AWS::RoboMaker::SimulationApplicationVersion resource creates an AWS RoboMaker SimulationApplicationVersion. This helps you control which code your simulation uses.
 */
export function getSimulationApplicationVersion(args: GetSimulationApplicationVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetSimulationApplicationVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:robomaker:getSimulationApplicationVersion", {
        "arn": args.arn,
    }, opts);
}

export interface GetSimulationApplicationVersionArgs {
    /**
     * The Amazon Resource Name (ARN) of the simulation application version.
     */
    arn: string;
}

export interface GetSimulationApplicationVersionResult {
    /**
     * The simulation application version.
     */
    readonly applicationVersion?: string;
    /**
     * The Amazon Resource Name (ARN) of the simulation application version.
     */
    readonly arn?: string;
}
/**
 * AWS::RoboMaker::SimulationApplicationVersion resource creates an AWS RoboMaker SimulationApplicationVersion. This helps you control which code your simulation uses.
 */
export function getSimulationApplicationVersionOutput(args: GetSimulationApplicationVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSimulationApplicationVersionResult> {
    return pulumi.output(args).apply((a: any) => getSimulationApplicationVersion(a, opts))
}

export interface GetSimulationApplicationVersionOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the simulation application version.
     */
    arn: pulumi.Input<string>;
}
