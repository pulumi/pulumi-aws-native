// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The details of the repository creation template associated with the request.
 */
export class RepositoryCreationTemplate extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryCreationTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RepositoryCreationTemplate {
        return new RepositoryCreationTemplate(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ecr:RepositoryCreationTemplate';

    /**
     * Returns true if the given object is an instance of RepositoryCreationTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RepositoryCreationTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RepositoryCreationTemplate.__pulumiType;
    }

    /**
     * A list of enumerable Strings representing the repository creation scenarios that this template will apply towards. The two supported scenarios are PULL_THROUGH_CACHE and REPLICATION
     */
    public readonly appliedFor!: pulumi.Output<enums.ecr.RepositoryCreationTemplateAppliedForItem[]>;
    /**
     * The date and time, in JavaScript date format, when the repository creation template was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ARN of the role to be assumed by Amazon ECR. Amazon ECR will assume your supplied role when the customRoleArn is specified. When this field isn't specified, Amazon ECR will use the service-linked role for the repository creation template.
     */
    public readonly customRoleArn!: pulumi.Output<string | undefined>;
    /**
     * The description associated with the repository creation template.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The encryption configuration associated with the repository creation template.
     */
    public readonly encryptionConfiguration!: pulumi.Output<outputs.ecr.RepositoryCreationTemplateEncryptionConfiguration | undefined>;
    /**
     * The tag mutability setting for the repository. If this parameter is omitted, the default setting of ``MUTABLE`` will be used which will allow image tags to be overwritten. If ``IMMUTABLE`` is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
     */
    public readonly imageTagMutability!: pulumi.Output<enums.ecr.RepositoryCreationTemplateImageTagMutability | undefined>;
    public readonly imageTagMutabilityExclusionFilters!: pulumi.Output<outputs.ecr.RepositoryCreationTemplateImageTagMutabilityExclusionFilter[] | undefined>;
    /**
     * The lifecycle policy to use for repositories created using the template.
     */
    public readonly lifecyclePolicy!: pulumi.Output<string | undefined>;
    /**
     * The repository namespace prefix associated with the repository creation template.
     */
    public readonly prefix!: pulumi.Output<string>;
    /**
     * The repository policy to apply to repositories created using the template. A repository policy is a permissions policy associated with a repository to control access permissions.
     */
    public readonly repositoryPolicy!: pulumi.Output<string | undefined>;
    /**
     * The metadata to apply to the repository to help you categorize and organize. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
     */
    public readonly resourceTags!: pulumi.Output<outputs.ecr.RepositoryCreationTemplateTag[] | undefined>;
    /**
     * The date and time, in JavaScript date format, when the repository creation template was last updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a RepositoryCreationTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryCreationTemplateArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.appliedFor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appliedFor'");
            }
            if ((!args || args.prefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'prefix'");
            }
            resourceInputs["appliedFor"] = args ? args.appliedFor : undefined;
            resourceInputs["customRoleArn"] = args ? args.customRoleArn : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["encryptionConfiguration"] = args ? args.encryptionConfiguration : undefined;
            resourceInputs["imageTagMutability"] = args ? args.imageTagMutability : undefined;
            resourceInputs["imageTagMutabilityExclusionFilters"] = args ? args.imageTagMutabilityExclusionFilters : undefined;
            resourceInputs["lifecyclePolicy"] = args ? args.lifecyclePolicy : undefined;
            resourceInputs["prefix"] = args ? args.prefix : undefined;
            resourceInputs["repositoryPolicy"] = args ? args.repositoryPolicy : undefined;
            resourceInputs["resourceTags"] = args ? args.resourceTags : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["appliedFor"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["customRoleArn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["encryptionConfiguration"] = undefined /*out*/;
            resourceInputs["imageTagMutability"] = undefined /*out*/;
            resourceInputs["imageTagMutabilityExclusionFilters"] = undefined /*out*/;
            resourceInputs["lifecyclePolicy"] = undefined /*out*/;
            resourceInputs["prefix"] = undefined /*out*/;
            resourceInputs["repositoryPolicy"] = undefined /*out*/;
            resourceInputs["resourceTags"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["prefix"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(RepositoryCreationTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RepositoryCreationTemplate resource.
 */
export interface RepositoryCreationTemplateArgs {
    /**
     * A list of enumerable Strings representing the repository creation scenarios that this template will apply towards. The two supported scenarios are PULL_THROUGH_CACHE and REPLICATION
     */
    appliedFor: pulumi.Input<pulumi.Input<enums.ecr.RepositoryCreationTemplateAppliedForItem>[]>;
    /**
     * The ARN of the role to be assumed by Amazon ECR. Amazon ECR will assume your supplied role when the customRoleArn is specified. When this field isn't specified, Amazon ECR will use the service-linked role for the repository creation template.
     */
    customRoleArn?: pulumi.Input<string>;
    /**
     * The description associated with the repository creation template.
     */
    description?: pulumi.Input<string>;
    /**
     * The encryption configuration associated with the repository creation template.
     */
    encryptionConfiguration?: pulumi.Input<inputs.ecr.RepositoryCreationTemplateEncryptionConfigurationArgs>;
    /**
     * The tag mutability setting for the repository. If this parameter is omitted, the default setting of ``MUTABLE`` will be used which will allow image tags to be overwritten. If ``IMMUTABLE`` is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
     */
    imageTagMutability?: pulumi.Input<enums.ecr.RepositoryCreationTemplateImageTagMutability>;
    imageTagMutabilityExclusionFilters?: pulumi.Input<pulumi.Input<inputs.ecr.RepositoryCreationTemplateImageTagMutabilityExclusionFilterArgs>[]>;
    /**
     * The lifecycle policy to use for repositories created using the template.
     */
    lifecyclePolicy?: pulumi.Input<string>;
    /**
     * The repository namespace prefix associated with the repository creation template.
     */
    prefix: pulumi.Input<string>;
    /**
     * The repository policy to apply to repositories created using the template. A repository policy is a permissions policy associated with a repository to control access permissions.
     */
    repositoryPolicy?: pulumi.Input<string>;
    /**
     * The metadata to apply to the repository to help you categorize and organize. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
     */
    resourceTags?: pulumi.Input<pulumi.Input<inputs.ecr.RepositoryCreationTemplateTagArgs>[]>;
}
