// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::ECR::RegistryScanningConfiguration controls the scanning configuration for an Amazon Elastic Container Registry (Amazon Private ECR). For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html
 */
export class RegistryScanningConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing RegistryScanningConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RegistryScanningConfiguration {
        return new RegistryScanningConfiguration(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ecr:RegistryScanningConfiguration';

    /**
     * Returns true if the given object is an instance of RegistryScanningConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RegistryScanningConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegistryScanningConfiguration.__pulumiType;
    }

    /**
     * The account ID of the destination registry.
     */
    public /*out*/ readonly registryId!: pulumi.Output<string>;
    /**
     * The scanning rules associated with the registry.
     */
    public readonly rules!: pulumi.Output<outputs.ecr.RegistryScanningConfigurationScanningRule[]>;
    /**
     * The type of scanning configured for the registry.
     */
    public readonly scanType!: pulumi.Output<enums.ecr.RegistryScanningConfigurationScanType>;

    /**
     * Create a RegistryScanningConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistryScanningConfigurationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            if ((!args || args.scanType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scanType'");
            }
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["scanType"] = args ? args.scanType : undefined;
            resourceInputs["registryId"] = undefined /*out*/;
        } else {
            resourceInputs["registryId"] = undefined /*out*/;
            resourceInputs["rules"] = undefined /*out*/;
            resourceInputs["scanType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RegistryScanningConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RegistryScanningConfiguration resource.
 */
export interface RegistryScanningConfigurationArgs {
    /**
     * The scanning rules associated with the registry.
     */
    rules: pulumi.Input<pulumi.Input<inputs.ecr.RegistryScanningConfigurationScanningRuleArgs>[]>;
    /**
     * The type of scanning configured for the registry.
     */
    scanType: pulumi.Input<enums.ecr.RegistryScanningConfigurationScanType>;
}
