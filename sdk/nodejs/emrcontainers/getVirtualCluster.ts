// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Schema of AWS::EMRContainers::VirtualCluster Type
 */
export function getVirtualCluster(args: GetVirtualClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:emrcontainers:getVirtualCluster", {
        "id": args.id,
    }, opts);
}

export interface GetVirtualClusterArgs {
    /**
     * Id of the virtual cluster.
     */
    id: string;
}

export interface GetVirtualClusterResult {
    /**
     * The Amazon Resource Name (ARN) of the project, such as `arn:aws:emr-containers:us-east-1:123456789012:/virtualclusters/ab4rp1abcs8xz47n3x0example` .
     */
    readonly arn?: string;
    /**
     * Id of the virtual cluster.
     */
    readonly id?: string;
    /**
     * The ID of the security configuration.
     */
    readonly securityConfigurationId?: string;
    /**
     * An array of key-value pairs to apply to this virtual cluster.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Schema of AWS::EMRContainers::VirtualCluster Type
 */
export function getVirtualClusterOutput(args: GetVirtualClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVirtualClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:emrcontainers:getVirtualCluster", {
        "id": args.id,
    }, opts);
}

export interface GetVirtualClusterOutputArgs {
    /**
     * Id of the virtual cluster.
     */
    id: pulumi.Input<string>;
}
