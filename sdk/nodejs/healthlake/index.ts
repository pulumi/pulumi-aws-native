// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FhirDatastoreArgs } from "./fhirDatastore";
export type FhirDatastore = import("./fhirDatastore").FhirDatastore;
export const FhirDatastore: typeof import("./fhirDatastore").FhirDatastore = null as any;
utilities.lazyLoad(exports, ["FhirDatastore"], () => require("./fhirDatastore"));

export { GetFhirDatastoreArgs, GetFhirDatastoreResult, GetFhirDatastoreOutputArgs } from "./getFhirDatastore";
export const getFhirDatastore: typeof import("./getFhirDatastore").getFhirDatastore = null as any;
export const getFhirDatastoreOutput: typeof import("./getFhirDatastore").getFhirDatastoreOutput = null as any;
utilities.lazyLoad(exports, ["getFhirDatastore","getFhirDatastoreOutput"], () => require("./getFhirDatastore"));


// Export enums:
export * from "../types/enums/healthlake";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:healthlake:FhirDatastore":
                return new FhirDatastore(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "healthlake", _module)
