// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::RedshiftServerless::Snapshot Resource Type.
 */
export class Snapshot extends pulumi.CustomResource {
    /**
     * Get an existing Snapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Snapshot {
        return new Snapshot(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:redshiftserverless:Snapshot';

    /**
     * Returns true if the given object is an instance of Snapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Snapshot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Snapshot.__pulumiType;
    }

    /**
     * The namespace the snapshot is associated with.
     */
    public readonly namespaceName!: pulumi.Output<string | undefined>;
    /**
     * The owner account of the snapshot.
     */
    public /*out*/ readonly ownerAccount!: pulumi.Output<string>;
    /**
     * The retention period of the snapshot.
     */
    public readonly retentionPeriod!: pulumi.Output<number | undefined>;
    /**
     * Definition for snapshot resource
     */
    public /*out*/ readonly snapshot!: pulumi.Output<outputs.redshiftserverless.Snapshot>;
    /**
     * The name of the snapshot.
     */
    public readonly snapshotName!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;

    /**
     * Create a Snapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SnapshotArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["namespaceName"] = args?.namespaceName;
            resourceInputs["retentionPeriod"] = args?.retentionPeriod;
            resourceInputs["snapshotName"] = args?.snapshotName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["ownerAccount"] = undefined /*out*/;
            resourceInputs["snapshot"] = undefined /*out*/;
        } else {
            resourceInputs["namespaceName"] = undefined /*out*/;
            resourceInputs["ownerAccount"] = undefined /*out*/;
            resourceInputs["retentionPeriod"] = undefined /*out*/;
            resourceInputs["snapshot"] = undefined /*out*/;
            resourceInputs["snapshotName"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["namespaceName", "snapshotName", "tags[*]"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Snapshot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Snapshot resource.
 */
export interface SnapshotArgs {
    /**
     * The namespace the snapshot is associated with.
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * The retention period of the snapshot.
     */
    retentionPeriod?: pulumi.Input<number>;
    /**
     * The name of the snapshot.
     */
    snapshotName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
