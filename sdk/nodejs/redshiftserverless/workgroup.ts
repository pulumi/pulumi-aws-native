// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::RedshiftServerless::Workgroup Resource Type
 */
export class Workgroup extends pulumi.CustomResource {
    /**
     * Get an existing Workgroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Workgroup {
        return new Workgroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:redshiftserverless:Workgroup';

    /**
     * Returns true if the given object is an instance of Workgroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workgroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workgroup.__pulumiType;
    }

    /**
     * The base compute capacity of the workgroup in Redshift Processing Units (RPUs).
     */
    public readonly baseCapacity!: pulumi.Output<number | undefined>;
    /**
     * A list of parameters to set for finer control over a database. Available options are datestyle, enable_user_activity_logging, query_group, search_path, max_query_execution_time, and require_ssl.
     */
    public readonly configParameters!: pulumi.Output<outputs.redshiftserverless.WorkgroupConfigParameter[] | undefined>;
    /**
     * The value that specifies whether to enable enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.
     */
    public readonly enhancedVpcRouting!: pulumi.Output<boolean | undefined>;
    /**
     * The max compute capacity of the workgroup in Redshift Processing Units (RPUs).
     */
    public readonly maxCapacity!: pulumi.Output<number | undefined>;
    /**
     * The namespace the workgroup is associated with.
     */
    public readonly namespaceName!: pulumi.Output<string | undefined>;
    /**
     * The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * A property that represents the price performance target settings for the workgroup.
     */
    public readonly pricePerformanceTarget!: pulumi.Output<outputs.redshiftserverless.WorkgroupPerformanceTarget | undefined>;
    /**
     * A value that specifies whether the workgroup can be accessible from a public network.
     */
    public readonly publiclyAccessible!: pulumi.Output<boolean | undefined>;
    /**
     * A list of security group IDs to associate with the workgroup.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * A list of subnet IDs the workgroup is associated with.
     */
    public readonly subnetIds!: pulumi.Output<string[] | undefined>;
    /**
     * The map of the key-value pairs used to tag the workgroup.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    public readonly trackName!: pulumi.Output<string | undefined>;
    /**
     * Definition for workgroup resource
     */
    public readonly workgroup!: pulumi.Output<outputs.redshiftserverless.Workgroup | undefined>;
    /**
     * The name of the workgroup.
     */
    public readonly workgroupName!: pulumi.Output<string>;

    /**
     * Create a Workgroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkgroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["baseCapacity"] = args ? args.baseCapacity : undefined;
            resourceInputs["configParameters"] = args ? args.configParameters : undefined;
            resourceInputs["enhancedVpcRouting"] = args ? args.enhancedVpcRouting : undefined;
            resourceInputs["maxCapacity"] = args ? args.maxCapacity : undefined;
            resourceInputs["namespaceName"] = args ? args.namespaceName : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["pricePerformanceTarget"] = args ? args.pricePerformanceTarget : undefined;
            resourceInputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trackName"] = args ? args.trackName : undefined;
            resourceInputs["workgroup"] = args ? args.workgroup : undefined;
            resourceInputs["workgroupName"] = args ? args.workgroupName : undefined;
        } else {
            resourceInputs["baseCapacity"] = undefined /*out*/;
            resourceInputs["configParameters"] = undefined /*out*/;
            resourceInputs["enhancedVpcRouting"] = undefined /*out*/;
            resourceInputs["maxCapacity"] = undefined /*out*/;
            resourceInputs["namespaceName"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["pricePerformanceTarget"] = undefined /*out*/;
            resourceInputs["publiclyAccessible"] = undefined /*out*/;
            resourceInputs["securityGroupIds"] = undefined /*out*/;
            resourceInputs["subnetIds"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["trackName"] = undefined /*out*/;
            resourceInputs["workgroup"] = undefined /*out*/;
            resourceInputs["workgroupName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["namespaceName", "workgroupName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Workgroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Workgroup resource.
 */
export interface WorkgroupArgs {
    /**
     * The base compute capacity of the workgroup in Redshift Processing Units (RPUs).
     */
    baseCapacity?: pulumi.Input<number>;
    /**
     * A list of parameters to set for finer control over a database. Available options are datestyle, enable_user_activity_logging, query_group, search_path, max_query_execution_time, and require_ssl.
     */
    configParameters?: pulumi.Input<pulumi.Input<inputs.redshiftserverless.WorkgroupConfigParameterArgs>[]>;
    /**
     * The value that specifies whether to enable enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.
     */
    enhancedVpcRouting?: pulumi.Input<boolean>;
    /**
     * The max compute capacity of the workgroup in Redshift Processing Units (RPUs).
     */
    maxCapacity?: pulumi.Input<number>;
    /**
     * The namespace the workgroup is associated with.
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439.
     */
    port?: pulumi.Input<number>;
    /**
     * A property that represents the price performance target settings for the workgroup.
     */
    pricePerformanceTarget?: pulumi.Input<inputs.redshiftserverless.WorkgroupPerformanceTargetArgs>;
    /**
     * A value that specifies whether the workgroup can be accessible from a public network.
     */
    publiclyAccessible?: pulumi.Input<boolean>;
    /**
     * A list of security group IDs to associate with the workgroup.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of subnet IDs the workgroup is associated with.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The map of the key-value pairs used to tag the workgroup.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    trackName?: pulumi.Input<string>;
    /**
     * Definition for workgroup resource
     */
    workgroup?: pulumi.Input<inputs.redshiftserverless.WorkgroupArgs>;
    /**
     * The name of the workgroup.
     */
    workgroupName?: pulumi.Input<string>;
}
