// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::RedshiftServerless::Workgroup Resource Type
 */
export function getWorkgroup(args: GetWorkgroupArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkgroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:redshiftserverless:getWorkgroup", {
        "workgroupName": args.workgroupName,
    }, opts);
}

export interface GetWorkgroupArgs {
    /**
     * The name of the workgroup.
     */
    workgroupName: string;
}

export interface GetWorkgroupResult {
    /**
     * The base compute capacity of the workgroup in Redshift Processing Units (RPUs).
     */
    readonly baseCapacity?: number;
    /**
     * The value that specifies whether to enable enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.
     */
    readonly enhancedVpcRouting?: boolean;
    /**
     * The max compute capacity of the workgroup in Redshift Processing Units (RPUs).
     */
    readonly maxCapacity?: number;
    /**
     * The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439.
     */
    readonly port?: number;
    /**
     * A property that represents the price performance target settings for the workgroup.
     */
    readonly pricePerformanceTarget?: outputs.redshiftserverless.WorkgroupPerformanceTarget;
    /**
     * A value that specifies whether the workgroup can be accessible from a public network.
     */
    readonly publiclyAccessible?: boolean;
    /**
     * The map of the key-value pairs used to tag the workgroup.
     */
    readonly tags?: outputs.Tag[];
    /**
     * An optional parameter for the name of the track for the workgroup. If you don't provide a track name, the workgroup is assigned to the current track.
     */
    readonly trackName?: string;
    /**
     * Definition for workgroup resource
     */
    readonly workgroup?: outputs.redshiftserverless.Workgroup;
}
/**
 * Definition of AWS::RedshiftServerless::Workgroup Resource Type
 */
export function getWorkgroupOutput(args: GetWorkgroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWorkgroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:redshiftserverless:getWorkgroup", {
        "workgroupName": args.workgroupName,
    }, opts);
}

export interface GetWorkgroupOutputArgs {
    /**
     * The name of the workgroup.
     */
    workgroupName: pulumi.Input<string>;
}
