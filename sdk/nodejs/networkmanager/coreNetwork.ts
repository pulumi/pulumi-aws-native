// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * AWS::NetworkManager::CoreNetwork Resource Type Definition.
 *
 * @deprecated CoreNetwork is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class CoreNetwork extends pulumi.CustomResource {
    /**
     * Get an existing CoreNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CoreNetwork {
        pulumi.log.warn("CoreNetwork is deprecated: CoreNetwork is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new CoreNetwork(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:networkmanager:CoreNetwork';

    /**
     * Returns true if the given object is an instance of CoreNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CoreNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CoreNetwork.__pulumiType;
    }

    /**
     * The ARN (Amazon resource name) of core network
     */
    public /*out*/ readonly coreNetworkArn!: pulumi.Output<string>;
    /**
     * The Id of core network
     */
    public /*out*/ readonly coreNetworkId!: pulumi.Output<string>;
    /**
     * The creation time of core network
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of core network
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The edges within a core network.
     */
    public /*out*/ readonly edges!: pulumi.Output<outputs.networkmanager.CoreNetworkEdge[]>;
    /**
     * The ID of the global network that your core network is a part of.
     */
    public readonly globalNetworkId!: pulumi.Output<string>;
    /**
     * Owner of the core network
     */
    public /*out*/ readonly ownerAccount!: pulumi.Output<string>;
    /**
     * Live policy document for the core network
     */
    public readonly policyDocument!: pulumi.Output<string | undefined>;
    /**
     * The segments within a core network.
     */
    public /*out*/ readonly segments!: pulumi.Output<outputs.networkmanager.CoreNetworkSegment[]>;
    /**
     * The state of core network
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The tags for the global network.
     */
    public readonly tags!: pulumi.Output<outputs.networkmanager.CoreNetworkTag[] | undefined>;

    /**
     * Create a CoreNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated CoreNetwork is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: CoreNetworkArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("CoreNetwork is deprecated: CoreNetwork is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.globalNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'globalNetworkId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["globalNetworkId"] = args ? args.globalNetworkId : undefined;
            resourceInputs["policyDocument"] = args ? args.policyDocument : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["coreNetworkArn"] = undefined /*out*/;
            resourceInputs["coreNetworkId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["edges"] = undefined /*out*/;
            resourceInputs["ownerAccount"] = undefined /*out*/;
            resourceInputs["segments"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        } else {
            resourceInputs["coreNetworkArn"] = undefined /*out*/;
            resourceInputs["coreNetworkId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["edges"] = undefined /*out*/;
            resourceInputs["globalNetworkId"] = undefined /*out*/;
            resourceInputs["ownerAccount"] = undefined /*out*/;
            resourceInputs["policyDocument"] = undefined /*out*/;
            resourceInputs["segments"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CoreNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CoreNetwork resource.
 */
export interface CoreNetworkArgs {
    /**
     * The description of core network
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the global network that your core network is a part of.
     */
    globalNetworkId: pulumi.Input<string>;
    /**
     * Live policy document for the core network
     */
    policyDocument?: pulumi.Input<string>;
    /**
     * The tags for the global network.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.networkmanager.CoreNetworkTagArgs>[]>;
}
