// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * AWS::NetworkManager::ConnectPeer Resource Type Definition.
 */
export function getConnectPeer(args: GetConnectPeerArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectPeerResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:networkmanager:getConnectPeer", {
        "connectPeerId": args.connectPeerId,
    }, opts);
}

export interface GetConnectPeerArgs {
    /**
     * The ID of the Connect peer.
     */
    connectPeerId: string;
}

export interface GetConnectPeerResult {
    /**
     * Configuration of the connect peer.
     */
    readonly configuration?: outputs.networkmanager.ConnectPeerConfiguration;
    /**
     * The ID of the Connect peer.
     */
    readonly connectPeerId?: string;
    /**
     * The ID of the core network.
     */
    readonly coreNetworkId?: string;
    /**
     * Connect peer creation time.
     */
    readonly createdAt?: string;
    /**
     * The Connect peer Regions where edges are located.
     */
    readonly edgeLocation?: string;
    /**
     * State of the connect peer.
     */
    readonly state?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.networkmanager.ConnectPeerTag[];
}

export function getConnectPeerOutput(args: GetConnectPeerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectPeerResult> {
    return pulumi.output(args).apply(a => getConnectPeer(a, opts))
}

export interface GetConnectPeerOutputArgs {
    /**
     * The ID of the Connect peer.
     */
    connectPeerId: pulumi.Input<string>;
}
