// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::GuardDuty::Filter
 *
 * @deprecated Filter is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class Filter extends pulumi.CustomResource {
    /**
     * Get an existing Filter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Filter {
        pulumi.log.warn("Filter is deprecated: Filter is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new Filter(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:guardduty:Filter';

    /**
     * Returns true if the given object is an instance of Filter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Filter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Filter.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly detectorId!: pulumi.Output<string>;
    public readonly findingCriteria!: pulumi.Output<outputs.guardduty.FilterFindingCriteria>;
    public readonly name!: pulumi.Output<string>;
    public readonly rank!: pulumi.Output<number>;

    /**
     * Create a Filter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Filter is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: FilterArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Filter is deprecated: Filter is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.detectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'detectorId'");
            }
            if ((!args || args.findingCriteria === undefined) && !opts.urn) {
                throw new Error("Missing required property 'findingCriteria'");
            }
            if ((!args || args.rank === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rank'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["detectorId"] = args ? args.detectorId : undefined;
            resourceInputs["findingCriteria"] = args ? args.findingCriteria : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rank"] = args ? args.rank : undefined;
        } else {
            resourceInputs["action"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["detectorId"] = undefined /*out*/;
            resourceInputs["findingCriteria"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["rank"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Filter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Filter resource.
 */
export interface FilterArgs {
    action: pulumi.Input<string>;
    description: pulumi.Input<string>;
    detectorId: pulumi.Input<string>;
    findingCriteria: pulumi.Input<inputs.guardduty.FilterFindingCriteriaArgs>;
    name?: pulumi.Input<string>;
    rank: pulumi.Input<number>;
}
