// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::GuardDuty::MalwareProtectionPlan
 */
export class MalwareProtectionPlan extends pulumi.CustomResource {
    /**
     * Get an existing MalwareProtectionPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MalwareProtectionPlan {
        return new MalwareProtectionPlan(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:guardduty:MalwareProtectionPlan';

    /**
     * Returns true if the given object is an instance of MalwareProtectionPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MalwareProtectionPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MalwareProtectionPlan.__pulumiType;
    }

    /**
     * Specifies the action that is to be applied to the Malware Protection plan resource.
     */
    declare public readonly actions: pulumi.Output<outputs.guardduty.MalwareProtectionPlanCfnActions | undefined>;
    /**
     * Amazon Resource Name (ARN) of the protected resource.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The timestamp when the Malware Protection plan resource was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * A unique identifier associated with Malware Protection plan resource.
     */
    declare public /*out*/ readonly malwareProtectionPlanId: pulumi.Output<string>;
    /**
     * Information about the protected resource. Presently, S3Bucket is the only supported protected resource.
     */
    declare public readonly protectedResource: pulumi.Output<outputs.guardduty.MalwareProtectionPlanCfnProtectedResource>;
    /**
     * IAM role that includes the permissions required to scan and (optionally) add tags to the associated protected resource.
     */
    declare public readonly role: pulumi.Output<string>;
    /**
     * Status of the Malware Protection plan resource.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Status details associated with the Malware Protection plan resource status.
     */
    declare public /*out*/ readonly statusReasons: pulumi.Output<outputs.guardduty.MalwareProtectionPlanCfnStatusReasons[]>;
    /**
     * The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a MalwareProtectionPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MalwareProtectionPlanArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.protectedResource === undefined && !opts.urn) {
                throw new Error("Missing required property 'protectedResource'");
            }
            if (args?.role === undefined && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["actions"] = args?.actions;
            resourceInputs["protectedResource"] = args?.protectedResource;
            resourceInputs["role"] = args?.role;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["malwareProtectionPlanId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReasons"] = undefined /*out*/;
        } else {
            resourceInputs["actions"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["malwareProtectionPlanId"] = undefined /*out*/;
            resourceInputs["protectedResource"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReasons"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MalwareProtectionPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a MalwareProtectionPlan resource.
 */
export interface MalwareProtectionPlanArgs {
    /**
     * Specifies the action that is to be applied to the Malware Protection plan resource.
     */
    actions?: pulumi.Input<inputs.guardduty.MalwareProtectionPlanCfnActionsArgs>;
    /**
     * Information about the protected resource. Presently, S3Bucket is the only supported protected resource.
     */
    protectedResource: pulumi.Input<inputs.guardduty.MalwareProtectionPlanCfnProtectedResourceArgs>;
    /**
     * IAM role that includes the permissions required to scan and (optionally) add tags to the associated protected resource.
     */
    role: pulumi.Input<string>;
    /**
     * The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
