// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::GuardDuty::PublishingDestination.
 */
export class PublishingDestination extends pulumi.CustomResource {
    /**
     * Get an existing PublishingDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PublishingDestination {
        return new PublishingDestination(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:guardduty:PublishingDestination';

    /**
     * Returns true if the given object is an instance of PublishingDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PublishingDestination {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublishingDestination.__pulumiType;
    }

    /**
     * The ID of the publishing destination.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings.
     */
    public readonly destinationProperties!: pulumi.Output<outputs.guardduty.PublishingDestinationCfnDestinationProperties>;
    /**
     * The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported.
     */
    public readonly destinationType!: pulumi.Output<string>;
    /**
     * The ID of the GuardDuty detector associated with the publishing destination.
     */
    public readonly detectorId!: pulumi.Output<string>;
    /**
     * The time, in epoch millisecond format, at which GuardDuty was first unable to publish findings to the destination.
     */
    public /*out*/ readonly publishingFailureStartTimestamp!: pulumi.Output<string>;
    /**
     * The status of the publishing destination.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Describes a tag.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a PublishingDestination resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PublishingDestinationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.destinationProperties === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationProperties'");
            }
            if (args?.destinationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationType'");
            }
            if (args?.detectorId === undefined && !opts.urn) {
                throw new Error("Missing required property 'detectorId'");
            }
            resourceInputs["destinationProperties"] = args?.destinationProperties;
            resourceInputs["destinationType"] = args?.destinationType;
            resourceInputs["detectorId"] = args?.detectorId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["publishingFailureStartTimestamp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["destinationProperties"] = undefined /*out*/;
            resourceInputs["destinationType"] = undefined /*out*/;
            resourceInputs["detectorId"] = undefined /*out*/;
            resourceInputs["publishingFailureStartTimestamp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["detectorId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(PublishingDestination.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a PublishingDestination resource.
 */
export interface PublishingDestinationArgs {
    /**
     * Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings.
     */
    destinationProperties: pulumi.Input<inputs.guardduty.PublishingDestinationCfnDestinationPropertiesArgs>;
    /**
     * The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported.
     */
    destinationType: pulumi.Input<string>;
    /**
     * The ID of the GuardDuty detector associated with the publishing destination.
     */
    detectorId: pulumi.Input<string>;
    /**
     * Describes a tag.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
