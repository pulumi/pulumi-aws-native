// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::GuardDuty::Member
 */
export function getMember(args: GetMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetMemberResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:guardduty:getMember", {
        "detectorId": args.detectorId,
        "memberId": args.memberId,
    }, opts);
}

export interface GetMemberArgs {
    /**
     * The ID of the detector associated with the GuardDuty service to add the member to.
     */
    detectorId: string;
    /**
     * The AWS account ID of the account to designate as a member.
     */
    memberId: string;
}

export interface GetMemberResult {
    /**
     * The email address associated with the member account.
     */
    readonly email?: string;
    /**
     * You can use the `Status` property to update the status of the relationship between the member account and its administrator account. Valid values are `Created` and `Invited` when using an `AWS::GuardDuty::Member` resource. If the value for this property is not provided or set to `Created` , a member account is created but not invited. If the value of this property is set to `Invited` , a member account is created and invited.
     */
    readonly status?: string;
}
/**
 * Resource Type definition for AWS::GuardDuty::Member
 */
export function getMemberOutput(args: GetMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMemberResult> {
    return pulumi.output(args).apply((a: any) => getMember(a, opts))
}

export interface GetMemberOutputArgs {
    /**
     * The ID of the detector associated with the GuardDuty service to add the member to.
     */
    detectorId: pulumi.Input<string>;
    /**
     * The AWS account ID of the account to designate as a member.
     */
    memberId: pulumi.Input<string>;
}
