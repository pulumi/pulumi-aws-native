// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::GuardDuty::ThreatEntitySet
 */
export class ThreatEntitySet extends pulumi.CustomResource {
    /**
     * Get an existing ThreatEntitySet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ThreatEntitySet {
        return new ThreatEntitySet(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:guardduty:ThreatEntitySet';

    /**
     * Returns true if the given object is an instance of ThreatEntitySet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThreatEntitySet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreatEntitySet.__pulumiType;
    }

    /**
     * A boolean value that determines if GuardDuty can start using this list for custom threat detection. For GuardDuty to consider the entries in this list and generate findings based on associated activity, this list must be active.
     */
    public readonly activate!: pulumi.Output<boolean | undefined>;
    /**
     * Returns the unique ID associated with the newly created threat entity set.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * The timestamp when the threat entity set was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The unique regional detector ID of the GuardDuty account for which you want to create a threat entity set.
     *
     * To find the `detectorId` in the current Region, see the Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
     */
    public readonly detectorId!: pulumi.Output<string | undefined>;
    /**
     * The details associated with the *Error* status of your threat entity list.
     */
    public /*out*/ readonly errorDetails!: pulumi.Output<string>;
    /**
     * The AWS account ID that owns the Amazon S3 bucket specified in the *Location* field.
     *
     * Whether or not you provide the account ID for this optional field, GuardDuty validates that the account ID associated with the `DetectorId` owns the S3 bucket in the `Location` field. If GuardDuty finds that this S3 bucket doesn't belong to the specified account ID, you will get an error at the time of activating this list.
     */
    public readonly expectedBucketOwner!: pulumi.Output<string | undefined>;
    /**
     * The format of the file that contains the threat entity set. For information about supported formats, see [List formats](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#prepare_list) in the *Amazon GuardDuty User Guide* .
     */
    public readonly format!: pulumi.Output<string>;
    /**
     * The URI of the file that contains the threat entity set.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The user-friendly name to identify the threat entity set. Valid characters are alphanumeric, whitespace, dash (-), and underscores (_).
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The status of your `ThreatEntitySet` . For information about valid status values, see [Understanding list statuses](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#guardduty-entity-list-statuses) in the *Amazon GuardDuty User Guide* .
     */
    public /*out*/ readonly status!: pulumi.Output<enums.guardduty.ThreatEntitySetStatus>;
    /**
     * The tags to be added to a new threat entity set resource. Each tag consists of a key and an optional value, both of which you define.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The timestamp when the threat entity set was updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a ThreatEntitySet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThreatEntitySetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.format === undefined) && !opts.urn) {
                throw new Error("Missing required property 'format'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["activate"] = args ? args.activate : undefined;
            resourceInputs["detectorId"] = args ? args.detectorId : undefined;
            resourceInputs["expectedBucketOwner"] = args ? args.expectedBucketOwner : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["errorDetails"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["activate"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["detectorId"] = undefined /*out*/;
            resourceInputs["errorDetails"] = undefined /*out*/;
            resourceInputs["expectedBucketOwner"] = undefined /*out*/;
            resourceInputs["format"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["detectorId", "format"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ThreatEntitySet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ThreatEntitySet resource.
 */
export interface ThreatEntitySetArgs {
    /**
     * A boolean value that determines if GuardDuty can start using this list for custom threat detection. For GuardDuty to consider the entries in this list and generate findings based on associated activity, this list must be active.
     */
    activate?: pulumi.Input<boolean>;
    /**
     * The unique regional detector ID of the GuardDuty account for which you want to create a threat entity set.
     *
     * To find the `detectorId` in the current Region, see the Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
     */
    detectorId?: pulumi.Input<string>;
    /**
     * The AWS account ID that owns the Amazon S3 bucket specified in the *Location* field.
     *
     * Whether or not you provide the account ID for this optional field, GuardDuty validates that the account ID associated with the `DetectorId` owns the S3 bucket in the `Location` field. If GuardDuty finds that this S3 bucket doesn't belong to the specified account ID, you will get an error at the time of activating this list.
     */
    expectedBucketOwner?: pulumi.Input<string>;
    /**
     * The format of the file that contains the threat entity set. For information about supported formats, see [List formats](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#prepare_list) in the *Amazon GuardDuty User Guide* .
     */
    format: pulumi.Input<string>;
    /**
     * The URI of the file that contains the threat entity set.
     */
    location: pulumi.Input<string>;
    /**
     * The user-friendly name to identify the threat entity set. Valid characters are alphanumeric, whitespace, dash (-), and underscores (_).
     */
    name?: pulumi.Input<string>;
    /**
     * The tags to be added to a new threat entity set resource. Each tag consists of a key and an optional value, both of which you define.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
