// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::GuardDuty::IPSet
 */
export class IpSet extends pulumi.CustomResource {
    /**
     * Get an existing IpSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IpSet {
        return new IpSet(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:guardduty:IpSet';

    /**
     * Returns true if the given object is an instance of IpSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpSet.__pulumiType;
    }

    /**
     * A boolean value that determines if GuardDuty can start using this list for custom threat detection. For GuardDuty to prevent generating findings based on an activity associated with these entries, this list must be active.
     */
    declare public readonly activate: pulumi.Output<boolean | undefined>;
    declare public /*out*/ readonly awsId: pulumi.Output<string>;
    /**
     * The unique ID of the detector of the GuardDuty account for which you want to create an IPSet.
     *
     * To find the `detectorId` in the current Region, see the
     * Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
     */
    declare public readonly detectorId: pulumi.Output<string | undefined>;
    /**
     * The AWS account ID that owns the Amazon S3 bucket specified in the *Location* field.
     *
     * When you provide this account ID, GuardDuty will validate that the S3 bucket belongs to this account. If you don't specify an account ID owner, GuardDuty doesn't perform any validation.
     */
    declare public readonly expectedBucketOwner: pulumi.Output<string | undefined>;
    /**
     * The format of the file that contains the IPSet. For information about supported formats, see [List formats](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#prepare_list) in the *Amazon GuardDuty User Guide* .
     */
    declare public readonly format: pulumi.Output<string>;
    /**
     * The URI of the file that contains the IPSet.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The user-friendly name to identify the IPSet.
     *
     * The name of your list must be unique within an AWS account and Region. Valid characters are alphanumeric, whitespace, dash (-), and underscores (_).
     */
    declare public readonly name: pulumi.Output<string | undefined>;
    /**
     * The tags to be added to a new threat entity set resource. Each tag consists of a key and an optional value, both of which you define.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a IpSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpSetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.format === undefined && !opts.urn) {
                throw new Error("Missing required property 'format'");
            }
            if (args?.location === undefined && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["activate"] = args?.activate;
            resourceInputs["detectorId"] = args?.detectorId;
            resourceInputs["expectedBucketOwner"] = args?.expectedBucketOwner;
            resourceInputs["format"] = args?.format;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["awsId"] = undefined /*out*/;
        } else {
            resourceInputs["activate"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["detectorId"] = undefined /*out*/;
            resourceInputs["expectedBucketOwner"] = undefined /*out*/;
            resourceInputs["format"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["detectorId", "format"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(IpSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a IpSet resource.
 */
export interface IpSetArgs {
    /**
     * A boolean value that determines if GuardDuty can start using this list for custom threat detection. For GuardDuty to prevent generating findings based on an activity associated with these entries, this list must be active.
     */
    activate?: pulumi.Input<boolean>;
    /**
     * The unique ID of the detector of the GuardDuty account for which you want to create an IPSet.
     *
     * To find the `detectorId` in the current Region, see the
     * Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
     */
    detectorId?: pulumi.Input<string>;
    /**
     * The AWS account ID that owns the Amazon S3 bucket specified in the *Location* field.
     *
     * When you provide this account ID, GuardDuty will validate that the S3 bucket belongs to this account. If you don't specify an account ID owner, GuardDuty doesn't perform any validation.
     */
    expectedBucketOwner?: pulumi.Input<string>;
    /**
     * The format of the file that contains the IPSet. For information about supported formats, see [List formats](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#prepare_list) in the *Amazon GuardDuty User Guide* .
     */
    format: pulumi.Input<string>;
    /**
     * The URI of the file that contains the IPSet.
     */
    location: pulumi.Input<string>;
    /**
     * The user-friendly name to identify the IPSet.
     *
     * The name of your list must be unique within an AWS account and Region. Valid characters are alphanumeric, whitespace, dash (-), and underscores (_).
     */
    name?: pulumi.Input<string>;
    /**
     * The tags to be added to a new threat entity set resource. Each tag consists of a key and an optional value, both of which you define.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
