// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::ConnectCampaigns::Campaign Resource Type
 */
export class Campaign extends pulumi.CustomResource {
    /**
     * Get an existing Campaign resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Campaign {
        return new Campaign(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:connectcampaigns:Campaign';

    /**
     * Returns true if the given object is an instance of Campaign.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Campaign {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Campaign.__pulumiType;
    }

    /**
     * Amazon Connect Campaign Arn
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Amazon Connect Instance Arn
     */
    declare public readonly connectInstanceArn: pulumi.Output<string>;
    /**
     * Contains information about the dialer configuration.
     */
    declare public readonly dialerConfig: pulumi.Output<outputs.connectcampaigns.CampaignDialerConfig>;
    /**
     * Amazon Connect Campaign Name
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Contains information about the outbound call configuration.
     */
    declare public readonly outboundCallConfig: pulumi.Output<outputs.connectcampaigns.CampaignOutboundCallConfig>;
    /**
     * One or more tags.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a Campaign resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CampaignArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.connectInstanceArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'connectInstanceArn'");
            }
            if (args?.dialerConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'dialerConfig'");
            }
            if (args?.outboundCallConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'outboundCallConfig'");
            }
            resourceInputs["connectInstanceArn"] = args?.connectInstanceArn;
            resourceInputs["dialerConfig"] = args?.dialerConfig;
            resourceInputs["name"] = args?.name;
            resourceInputs["outboundCallConfig"] = args?.outboundCallConfig;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["connectInstanceArn"] = undefined /*out*/;
            resourceInputs["dialerConfig"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["outboundCallConfig"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["connectInstanceArn"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Campaign.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Campaign resource.
 */
export interface CampaignArgs {
    /**
     * Amazon Connect Instance Arn
     */
    connectInstanceArn: pulumi.Input<string>;
    /**
     * Contains information about the dialer configuration.
     */
    dialerConfig: pulumi.Input<inputs.connectcampaigns.CampaignDialerConfigArgs>;
    /**
     * Amazon Connect Campaign Name
     */
    name?: pulumi.Input<string>;
    /**
     * Contains information about the outbound call configuration.
     */
    outboundCallConfig: pulumi.Input<inputs.connectcampaigns.CampaignOutboundCallConfigArgs>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
