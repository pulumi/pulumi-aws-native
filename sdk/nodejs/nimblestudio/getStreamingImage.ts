// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::NimbleStudio::StreamingImage
 */
export function getStreamingImage(args: GetStreamingImageArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamingImageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:nimblestudio:getStreamingImage", {
        "streamingImageId": args.streamingImageId,
    }, opts);
}

export interface GetStreamingImageArgs {
    /**
     * The unique identifier for the streaming image resource.
     */
    streamingImageId: string;
}

export interface GetStreamingImageResult {
    /**
     * A human-readable description of the streaming image.
     */
    readonly description?: string;
    readonly encryptionConfiguration?: outputs.nimblestudio.StreamingImageEncryptionConfiguration;
    readonly encryptionConfigurationKeyArn?: string;
    readonly encryptionConfigurationKeyType?: string;
    /**
     * The list of IDs of EULAs that must be accepted before a streaming session can be started using this streaming image.
     */
    readonly eulaIds?: string[];
    /**
     * A friendly name for a streaming image resource.
     */
    readonly name?: string;
    /**
     * The owner of the streaming image, either the studioId that contains the streaming image or 'amazon' for images that are provided by  .
     */
    readonly owner?: string;
    /**
     * The platform of the streaming image, either WINDOWS or LINUX.
     */
    readonly platform?: string;
    /**
     * The unique identifier for the streaming image resource.
     */
    readonly streamingImageId?: string;
}
/**
 * Resource Type definition for AWS::NimbleStudio::StreamingImage
 */
export function getStreamingImageOutput(args: GetStreamingImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamingImageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:nimblestudio:getStreamingImage", {
        "streamingImageId": args.streamingImageId,
    }, opts);
}

export interface GetStreamingImageOutputArgs {
    /**
     * The unique identifier for the streaming image resource.
     */
    streamingImageId: pulumi.Input<string>;
}
