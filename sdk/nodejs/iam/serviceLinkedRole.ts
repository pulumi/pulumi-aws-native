// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IAM::ServiceLinkedRole
 */
export class ServiceLinkedRole extends pulumi.CustomResource {
    /**
     * Get an existing ServiceLinkedRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceLinkedRole {
        return new ServiceLinkedRole(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:iam:ServiceLinkedRole';

    /**
     * Returns true if the given object is an instance of ServiceLinkedRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceLinkedRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceLinkedRole.__pulumiType;
    }

    /**
     * The service principal for the AWS service to which this role is attached.
     */
    public readonly awsServiceName!: pulumi.Output<string | undefined>;
    /**
     * A string that you provide, which is combined with the service-provided prefix to form the complete role name.
     */
    public readonly customSuffix!: pulumi.Output<string | undefined>;
    /**
     * The description of the role.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the role.
     */
    public /*out*/ readonly roleName!: pulumi.Output<string>;

    /**
     * Create a ServiceLinkedRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServiceLinkedRoleArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["awsServiceName"] = args ? args.awsServiceName : undefined;
            resourceInputs["customSuffix"] = args ? args.customSuffix : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["roleName"] = undefined /*out*/;
        } else {
            resourceInputs["awsServiceName"] = undefined /*out*/;
            resourceInputs["customSuffix"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["roleName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceLinkedRole.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServiceLinkedRole resource.
 */
export interface ServiceLinkedRoleArgs {
    /**
     * The service principal for the AWS service to which this role is attached.
     */
    awsServiceName?: pulumi.Input<string>;
    /**
     * A string that you provide, which is combined with the service-provided prefix to form the complete role name.
     */
    customSuffix?: pulumi.Input<string>;
    /**
     * The description of the role.
     */
    description?: pulumi.Input<string>;
}
