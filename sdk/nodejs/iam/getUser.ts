// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IAM::User
 */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iam:getUser", {
        "userName": args.userName,
    }, opts);
}

export interface GetUserArgs {
    /**
     * The friendly name identifying the user.
     */
    userName: string;
}

export interface GetUserResult {
    /**
     * The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see IAM Identifiers in the IAM User Guide.
     */
    readonly arn?: string;
    /**
     * A list of group names to which you want to add the user.
     */
    readonly groups?: string[];
    /**
     * Creates a password for the specified IAM user. A password allows an IAM user to access AWS services through the AWS Management Console.
     */
    readonly loginProfile?: outputs.iam.UserLoginProfile;
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
     */
    readonly managedPolicyArns?: string[];
    /**
     * The path to the user. For more information about paths, see IAM identifiers in the IAM User Guide. The ARN of the policy used to set the permissions boundary for the user.
     */
    readonly path?: string;
    /**
     * The ARN of the policy that is used to set the permissions boundary for the user.
     */
    readonly permissionsBoundary?: string;
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role.
     */
    readonly policies?: outputs.iam.UserPolicy[];
    /**
     * A list of tags that are associated with the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::IAM::User
 */
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

export interface GetUserOutputArgs {
    /**
     * The friendly name identifying the user.
     */
    userName: pulumi.Input<string>;
}
