// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IAM::Group
 */
export function getGroup(args: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iam:getGroup", {
        "groupName": args.groupName,
    }, opts);
}

export interface GetGroupArgs {
    /**
     * The name of the group to create
     */
    groupName: string;
}

export interface GetGroupResult {
    /**
     * The Arn of the group to create
     */
    readonly arn?: string;
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. 
     */
    readonly managedPolicyArns?: string[];
    /**
     * The path to the group
     */
    readonly path?: string;
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM group
     */
    readonly policies?: outputs.iam.GroupPolicy[];
}
/**
 * Resource Type definition for AWS::IAM::Group
 */
export function getGroupOutput(args: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult> {
    return pulumi.output(args).apply((a: any) => getGroup(a, opts))
}

export interface GetGroupOutputArgs {
    /**
     * The name of the group to create
     */
    groupName: pulumi.Input<string>;
}
