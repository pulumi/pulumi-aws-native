// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IAM::ManagedPolicy
 */
export function getManagedPolicy(args: GetManagedPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iam:getManagedPolicy", {
        "id": args.id,
    }, opts);
}

export interface GetManagedPolicyArgs {
    id: string;
}

export interface GetManagedPolicyResult {
    readonly attachmentCount?: number;
    readonly createDate?: string;
    readonly defaultVersionId?: string;
    readonly groups?: string[];
    readonly id?: string;
    readonly isAttachable?: boolean;
    readonly permissionsBoundaryUsageCount?: number;
    readonly policyArn?: string;
    readonly policyDocument?: any;
    readonly policyId?: string;
    readonly roles?: string[];
    readonly updateDate?: string;
    readonly users?: string[];
}
/**
 * Resource Type definition for AWS::IAM::ManagedPolicy
 */
export function getManagedPolicyOutput(args: GetManagedPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedPolicyResult> {
    return pulumi.output(args).apply((a: any) => getManagedPolicy(a, opts))
}

export interface GetManagedPolicyOutputArgs {
    id: pulumi.Input<string>;
}
