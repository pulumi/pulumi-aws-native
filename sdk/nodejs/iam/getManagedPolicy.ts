// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IAM::ManagedPolicy
 */
export function getManagedPolicy(args: GetManagedPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iam:getManagedPolicy", {
        "policyArn": args.policyArn,
    }, opts);
}

export interface GetManagedPolicyArgs {
    /**
     * Amazon Resource Name (ARN) of the managed policy
     */
    policyArn: string;
}

export interface GetManagedPolicyResult {
    /**
     * The number of entities (users, groups, and roles) that the policy is attached to.
     */
    readonly attachmentCount?: number;
    /**
     * The date and time, in ISO 8601 date-time format, when the policy was created.
     */
    readonly createDate?: string;
    /**
     * The identifier for the version of the policy that is set as the default version.
     */
    readonly defaultVersionId?: string;
    /**
     * The name (friendly name, not ARN) of the group to attach the policy to.
     */
    readonly groups?: string[];
    /**
     * Specifies whether the policy can be attached to an IAM user, group, or role.
     */
    readonly isAttachable?: boolean;
    /**
     * The number of entities (users and roles) for which the policy is used to set the permissions boundary.
     */
    readonly permissionsBoundaryUsageCount?: number;
    /**
     * Amazon Resource Name (ARN) of the managed policy
     */
    readonly policyArn?: string;
    /**
     * The JSON policy document that you want to use as the content for the new policy.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::IAM::ManagedPolicy` for more information about the expected schema for this property.
     */
    readonly policyDocument?: any;
    /**
     * The stable and unique string identifying the policy.
     */
    readonly policyId?: string;
    /**
     * The name (friendly name, not ARN) of the role to attach the policy to.
     */
    readonly roles?: string[];
    /**
     * The date and time, in ISO 8601 date-time format, when the policy was last updated.
     */
    readonly updateDate?: string;
    /**
     * The name (friendly name, not ARN) of the IAM user to attach the policy to.
     */
    readonly users?: string[];
}
/**
 * Resource Type definition for AWS::IAM::ManagedPolicy
 */
export function getManagedPolicyOutput(args: GetManagedPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedPolicyResult> {
    return pulumi.output(args).apply((a: any) => getManagedPolicy(a, opts))
}

export interface GetManagedPolicyOutputArgs {
    /**
     * Amazon Resource Name (ARN) of the managed policy
     */
    policyArn: pulumi.Input<string>;
}
