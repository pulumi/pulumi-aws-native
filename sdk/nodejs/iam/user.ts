// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IAM::User
 *
 * @deprecated User is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): User {
        pulumi.log.warn("User is deprecated: User is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new User(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:iam:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly groups!: pulumi.Output<string[] | undefined>;
    public readonly loginProfile!: pulumi.Output<outputs.iam.UserLoginProfile | undefined>;
    public readonly managedPolicyArns!: pulumi.Output<string[] | undefined>;
    public readonly path!: pulumi.Output<string | undefined>;
    public readonly permissionsBoundary!: pulumi.Output<string | undefined>;
    public readonly policies!: pulumi.Output<outputs.iam.UserPolicy[] | undefined>;
    public readonly tags!: pulumi.Output<outputs.iam.UserTag[] | undefined>;
    public readonly userName!: pulumi.Output<string | undefined>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated User is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: UserArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("User is deprecated: User is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["groups"] = args ? args.groups : undefined;
            inputs["loginProfile"] = args ? args.loginProfile : undefined;
            inputs["managedPolicyArns"] = args ? args.managedPolicyArns : undefined;
            inputs["path"] = args ? args.path : undefined;
            inputs["permissionsBoundary"] = args ? args.permissionsBoundary : undefined;
            inputs["policies"] = args ? args.policies : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["userName"] = args ? args.userName : undefined;
            inputs["arn"] = undefined /*out*/;
        } else {
            inputs["arn"] = undefined /*out*/;
            inputs["groups"] = undefined /*out*/;
            inputs["loginProfile"] = undefined /*out*/;
            inputs["managedPolicyArns"] = undefined /*out*/;
            inputs["path"] = undefined /*out*/;
            inputs["permissionsBoundary"] = undefined /*out*/;
            inputs["policies"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["userName"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(User.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    loginProfile?: pulumi.Input<inputs.iam.UserLoginProfileArgs>;
    managedPolicyArns?: pulumi.Input<pulumi.Input<string>[]>;
    path?: pulumi.Input<string>;
    permissionsBoundary?: pulumi.Input<string>;
    policies?: pulumi.Input<pulumi.Input<inputs.iam.UserPolicyArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.iam.UserTagArgs>[]>;
    userName?: pulumi.Input<string>;
}
