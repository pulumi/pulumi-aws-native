// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IAM::Role
 */
export class Role extends pulumi.CustomResource {
    /**
     * Get an existing Role resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Role {
        return new Role(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:iam:Role';

    /**
     * Returns true if the given object is an instance of Role.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Role {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Role.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) for the role.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The trust policy that is associated with this role.
     */
    public readonly assumeRolePolicyDocument!: pulumi.Output<any>;
    /**
     * A description of the role that you provide.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. 
     */
    public readonly managedPolicyArns!: pulumi.Output<string[] | undefined>;
    /**
     * The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours. 
     */
    public readonly maxSessionDuration!: pulumi.Output<number | undefined>;
    /**
     * The path to the role.
     */
    public readonly path!: pulumi.Output<string | undefined>;
    /**
     * The ARN of the policy used to set the permissions boundary for the role.
     */
    public readonly permissionsBoundary!: pulumi.Output<string | undefined>;
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role. 
     */
    public readonly policies!: pulumi.Output<outputs.iam.RolePolicy[] | undefined>;
    /**
     * The stable and unique string identifying the role.
     */
    public /*out*/ readonly roleId!: pulumi.Output<string>;
    /**
     * A name for the IAM role, up to 64 characters in length.
     */
    public readonly roleName!: pulumi.Output<string | undefined>;
    /**
     * A list of tags that are attached to the role.
     */
    public readonly tags!: pulumi.Output<outputs.iam.RoleTag[] | undefined>;

    /**
     * Create a Role resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.assumeRolePolicyDocument === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assumeRolePolicyDocument'");
            }
            inputs["assumeRolePolicyDocument"] = args ? args.assumeRolePolicyDocument : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["managedPolicyArns"] = args ? args.managedPolicyArns : undefined;
            inputs["maxSessionDuration"] = args ? args.maxSessionDuration : undefined;
            inputs["path"] = args ? args.path : undefined;
            inputs["permissionsBoundary"] = args ? args.permissionsBoundary : undefined;
            inputs["policies"] = args ? args.policies : undefined;
            inputs["roleName"] = args ? args.roleName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["roleId"] = undefined /*out*/;
        } else {
            inputs["arn"] = undefined /*out*/;
            inputs["assumeRolePolicyDocument"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["managedPolicyArns"] = undefined /*out*/;
            inputs["maxSessionDuration"] = undefined /*out*/;
            inputs["path"] = undefined /*out*/;
            inputs["permissionsBoundary"] = undefined /*out*/;
            inputs["policies"] = undefined /*out*/;
            inputs["roleId"] = undefined /*out*/;
            inputs["roleName"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Role.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Role resource.
 */
export interface RoleArgs {
    /**
     * The trust policy that is associated with this role.
     */
    assumeRolePolicyDocument: any;
    /**
     * A description of the role that you provide.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. 
     */
    managedPolicyArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours. 
     */
    maxSessionDuration?: pulumi.Input<number>;
    /**
     * The path to the role.
     */
    path?: pulumi.Input<string>;
    /**
     * The ARN of the policy used to set the permissions boundary for the role.
     */
    permissionsBoundary?: pulumi.Input<string>;
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role. 
     */
    policies?: pulumi.Input<pulumi.Input<inputs.iam.RolePolicyArgs>[]>;
    /**
     * A name for the IAM role, up to 64 characters in length.
     */
    roleName?: pulumi.Input<string>;
    /**
     * A list of tags that are attached to the role.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.iam.RoleTagArgs>[]>;
}
