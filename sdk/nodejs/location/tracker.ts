// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Location::Tracker Resource Type
 */
export class Tracker extends pulumi.CustomResource {
    /**
     * Get an existing Tracker resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Tracker {
        return new Tracker(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:location:Tracker';

    /**
     * Returns true if the given object is an instance of Tracker.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Tracker {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tracker.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS .
     *
     * - Format example: `arn:aws:geo:region:account-id:tracker/ExampleTracker`
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The timestamp for when the tracker resource was created in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * An optional description for the tracker resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly eventBridgeEnabled!: pulumi.Output<boolean | undefined>;
    public readonly kmsKeyEnableGeospatialQueries!: pulumi.Output<boolean | undefined>;
    /**
     * A key identifier for an [AWS KMS customer managed key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html) . Enter a key ID, key ARN, alias name, or alias ARN.
     */
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the position filtering for the tracker resource.
     *
     * Valid values:
     *
     * - `TimeBased` - Location updates are evaluated against linked geofence collections, but not every location update is stored. If your update frequency is more often than 30 seconds, only one update per 30 seconds is stored for each unique device ID.
     * - `DistanceBased` - If the device has moved less than 30 m (98.4 ft), location updates are ignored. Location updates within this area are neither evaluated against linked geofence collections, nor stored. This helps control costs by reducing the number of geofence evaluations and historical device positions to paginate through. Distance-based filtering can also reduce the effects of GPS noise when displaying device trajectories on a map.
     * - `AccuracyBased` - If the device has moved less than the measured accuracy, location updates are ignored. For example, if two consecutive updates from a device have a horizontal accuracy of 5 m and 10 m, the second update is ignored if the device has moved less than 15 m. Ignored location updates are neither evaluated against linked geofence collections, nor stored. This can reduce the effects of GPS noise when displaying device trajectories on a map, and can help control your costs by reducing the number of geofence evaluations.
     *
     * This field is optional. If not specified, the default value is `TimeBased` .
     */
    public readonly positionFiltering!: pulumi.Output<enums.location.TrackerPositionFiltering | undefined>;
    public readonly pricingPlan!: pulumi.Output<enums.location.TrackerPricingPlan | undefined>;
    /**
     * This shape is deprecated since 2022-02-01: Deprecated. No longer allowed.
     */
    public readonly pricingPlanDataSource!: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Synonym for `Arn` . The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS .
     *
     * - Format example: `arn:aws:geo:region:account-id:tracker/ExampleTracker`
     */
    public /*out*/ readonly trackerArn!: pulumi.Output<string>;
    /**
     * The name for the tracker resource.
     *
     * Requirements:
     *
     * - Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and underscores (_).
     * - Must be a unique tracker resource name.
     * - No spaces allowed. For example, `ExampleTracker` .
     */
    public readonly trackerName!: pulumi.Output<string>;
    /**
     * The timestamp for when the tracker resource was last updated in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Tracker resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TrackerArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["eventBridgeEnabled"] = args ? args.eventBridgeEnabled : undefined;
            resourceInputs["kmsKeyEnableGeospatialQueries"] = args ? args.kmsKeyEnableGeospatialQueries : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["positionFiltering"] = args ? args.positionFiltering : undefined;
            resourceInputs["pricingPlan"] = args ? args.pricingPlan : undefined;
            resourceInputs["pricingPlanDataSource"] = args ? args.pricingPlanDataSource : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trackerName"] = args ? args.trackerName : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["trackerArn"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["eventBridgeEnabled"] = undefined /*out*/;
            resourceInputs["kmsKeyEnableGeospatialQueries"] = undefined /*out*/;
            resourceInputs["kmsKeyId"] = undefined /*out*/;
            resourceInputs["positionFiltering"] = undefined /*out*/;
            resourceInputs["pricingPlan"] = undefined /*out*/;
            resourceInputs["pricingPlanDataSource"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["trackerArn"] = undefined /*out*/;
            resourceInputs["trackerName"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["kmsKeyId", "trackerName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Tracker.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Tracker resource.
 */
export interface TrackerArgs {
    /**
     * An optional description for the tracker resource.
     */
    description?: pulumi.Input<string>;
    eventBridgeEnabled?: pulumi.Input<boolean>;
    kmsKeyEnableGeospatialQueries?: pulumi.Input<boolean>;
    /**
     * A key identifier for an [AWS KMS customer managed key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html) . Enter a key ID, key ARN, alias name, or alias ARN.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies the position filtering for the tracker resource.
     *
     * Valid values:
     *
     * - `TimeBased` - Location updates are evaluated against linked geofence collections, but not every location update is stored. If your update frequency is more often than 30 seconds, only one update per 30 seconds is stored for each unique device ID.
     * - `DistanceBased` - If the device has moved less than 30 m (98.4 ft), location updates are ignored. Location updates within this area are neither evaluated against linked geofence collections, nor stored. This helps control costs by reducing the number of geofence evaluations and historical device positions to paginate through. Distance-based filtering can also reduce the effects of GPS noise when displaying device trajectories on a map.
     * - `AccuracyBased` - If the device has moved less than the measured accuracy, location updates are ignored. For example, if two consecutive updates from a device have a horizontal accuracy of 5 m and 10 m, the second update is ignored if the device has moved less than 15 m. Ignored location updates are neither evaluated against linked geofence collections, nor stored. This can reduce the effects of GPS noise when displaying device trajectories on a map, and can help control your costs by reducing the number of geofence evaluations.
     *
     * This field is optional. If not specified, the default value is `TimeBased` .
     */
    positionFiltering?: pulumi.Input<enums.location.TrackerPositionFiltering>;
    pricingPlan?: pulumi.Input<enums.location.TrackerPricingPlan>;
    /**
     * This shape is deprecated since 2022-02-01: Deprecated. No longer allowed.
     */
    pricingPlanDataSource?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The name for the tracker resource.
     *
     * Requirements:
     *
     * - Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and underscores (_).
     * - Must be a unique tracker resource name.
     * - No spaces allowed. For example, `ExampleTracker` .
     */
    trackerName?: pulumi.Input<string>;
}
