// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GeofenceCollectionArgs } from "./geofenceCollection";
export type GeofenceCollection = import("./geofenceCollection").GeofenceCollection;
export const GeofenceCollection: typeof import("./geofenceCollection").GeofenceCollection = null as any;

export { GetGeofenceCollectionArgs, GetGeofenceCollectionResult, GetGeofenceCollectionOutputArgs } from "./getGeofenceCollection";
export const getGeofenceCollection: typeof import("./getGeofenceCollection").getGeofenceCollection = null as any;
export const getGeofenceCollectionOutput: typeof import("./getGeofenceCollection").getGeofenceCollectionOutput = null as any;

export { GetMapArgs, GetMapResult, GetMapOutputArgs } from "./getMap";
export const getMap: typeof import("./getMap").getMap = null as any;
export const getMapOutput: typeof import("./getMap").getMapOutput = null as any;

export { GetPlaceIndexArgs, GetPlaceIndexResult, GetPlaceIndexOutputArgs } from "./getPlaceIndex";
export const getPlaceIndex: typeof import("./getPlaceIndex").getPlaceIndex = null as any;
export const getPlaceIndexOutput: typeof import("./getPlaceIndex").getPlaceIndexOutput = null as any;

export { GetRouteCalculatorArgs, GetRouteCalculatorResult, GetRouteCalculatorOutputArgs } from "./getRouteCalculator";
export const getRouteCalculator: typeof import("./getRouteCalculator").getRouteCalculator = null as any;
export const getRouteCalculatorOutput: typeof import("./getRouteCalculator").getRouteCalculatorOutput = null as any;

export { GetTrackerArgs, GetTrackerResult, GetTrackerOutputArgs } from "./getTracker";
export const getTracker: typeof import("./getTracker").getTracker = null as any;
export const getTrackerOutput: typeof import("./getTracker").getTrackerOutput = null as any;

export { MapArgs } from "./map";
export type Map = import("./map").Map;
export const Map: typeof import("./map").Map = null as any;

export { PlaceIndexArgs } from "./placeIndex";
export type PlaceIndex = import("./placeIndex").PlaceIndex;
export const PlaceIndex: typeof import("./placeIndex").PlaceIndex = null as any;

export { RouteCalculatorArgs } from "./routeCalculator";
export type RouteCalculator = import("./routeCalculator").RouteCalculator;
export const RouteCalculator: typeof import("./routeCalculator").RouteCalculator = null as any;

export { TrackerArgs } from "./tracker";
export type Tracker = import("./tracker").Tracker;
export const Tracker: typeof import("./tracker").Tracker = null as any;

export { TrackerConsumerArgs } from "./trackerConsumer";
export type TrackerConsumer = import("./trackerConsumer").TrackerConsumer;
export const TrackerConsumer: typeof import("./trackerConsumer").TrackerConsumer = null as any;

utilities.lazyLoad(exports, ["GeofenceCollection"], () => require("./geofenceCollection"));
utilities.lazyLoad(exports, ["getGeofenceCollection","getGeofenceCollectionOutput"], () => require("./getGeofenceCollection"));
utilities.lazyLoad(exports, ["getMap","getMapOutput"], () => require("./getMap"));
utilities.lazyLoad(exports, ["getPlaceIndex","getPlaceIndexOutput"], () => require("./getPlaceIndex"));
utilities.lazyLoad(exports, ["getRouteCalculator","getRouteCalculatorOutput"], () => require("./getRouteCalculator"));
utilities.lazyLoad(exports, ["getTracker","getTrackerOutput"], () => require("./getTracker"));
utilities.lazyLoad(exports, ["Map"], () => require("./map"));
utilities.lazyLoad(exports, ["PlaceIndex"], () => require("./placeIndex"));
utilities.lazyLoad(exports, ["RouteCalculator"], () => require("./routeCalculator"));
utilities.lazyLoad(exports, ["Tracker"], () => require("./tracker"));
utilities.lazyLoad(exports, ["TrackerConsumer"], () => require("./trackerConsumer"));

// Export enums:
export * from "../types/enums/location";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:location:GeofenceCollection":
                return new GeofenceCollection(name, <any>undefined, { urn })
            case "aws-native:location:Map":
                return new Map(name, <any>undefined, { urn })
            case "aws-native:location:PlaceIndex":
                return new PlaceIndex(name, <any>undefined, { urn })
            case "aws-native:location:RouteCalculator":
                return new RouteCalculator(name, <any>undefined, { urn })
            case "aws-native:location:Tracker":
                return new Tracker(name, <any>undefined, { urn })
            case "aws-native:location:TrackerConsumer":
                return new TrackerConsumer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "location", _module)
