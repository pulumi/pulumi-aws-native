// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Cassandra::Keyspace
 */
export function getKeyspace(args: GetKeyspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyspaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cassandra:getKeyspace", {
        "keyspaceName": args.keyspaceName,
    }, opts);
}

export interface GetKeyspaceArgs {
    /**
     * Name for Cassandra keyspace
     */
    keyspaceName: string;
}

export interface GetKeyspaceResult {
    /**
     * Indicates whether client-side timestamps are enabled (true) or disabled (false) for all tables in the keyspace. To add a Region to a single-Region keyspace with at least one table, the value must be set to true. After you enabled client-side timestamps for a table, you canâ€™t disable it again.
     */
    readonly clientSideTimestampsEnabled?: boolean;
    /**
     * Specifies the `ReplicationStrategy` of a keyspace. The options are:
     *
     * - `SINGLE_REGION` for a single Region keyspace (optional) or
     * - `MULTI_REGION` for a multi-Region keyspace
     *
     * If no `ReplicationStrategy` is provided, the default is `SINGLE_REGION` . If you choose `MULTI_REGION` , you must also provide a `RegionList` with the AWS Regions that the keyspace is replicated in.
     */
    readonly replicationSpecification?: outputs.cassandra.KeyspaceReplicationSpecification;
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource schema for AWS::Cassandra::Keyspace
 */
export function getKeyspaceOutput(args: GetKeyspaceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKeyspaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:cassandra:getKeyspace", {
        "keyspaceName": args.keyspaceName,
    }, opts);
}

export interface GetKeyspaceOutputArgs {
    /**
     * Name for Cassandra keyspace
     */
    keyspaceName: pulumi.Input<string>;
}
