// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Cassandra::Table
 */
export function getTable(args: GetTableArgs, opts?: pulumi.InvokeOptions): Promise<GetTableResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cassandra:getTable", {
        "keyspaceName": args.keyspaceName,
        "tableName": args.tableName,
    }, opts);
}

export interface GetTableArgs {
    /**
     * Name for Cassandra keyspace
     */
    keyspaceName: string;
    /**
     * Name for Cassandra table
     */
    tableName: string;
}

export interface GetTableResult {
    /**
     * The billing mode for the table, which determines how you'll be charged for reads and writes:
     *
     * - *On-demand mode* (default) - You pay based on the actual reads and writes your application performs.
     * - *Provisioned mode* - Lets you specify the number of reads and writes per second that you need for your application.
     *
     * If you don't specify a value for this property, then the table will use on-demand mode.
     */
    readonly billingMode?: outputs.cassandra.TableBillingMode;
    /**
     * Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
     */
    readonly defaultTimeToLive?: number;
    /**
     * The encryption at rest options for the table.
     *
     * - *AWS owned key* (default) - The key is owned by Amazon Keyspaces .
     * - *Customer managed key* - The key is stored in your account and is created, owned, and managed by you.
     *
     * > If you choose encryption with a customer managed key, you must specify a valid customer managed KMS key with permissions granted to Amazon Keyspaces.
     *
     * For more information, see [Encryption at rest in Amazon Keyspaces](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html) in the *Amazon Keyspaces Developer Guide* .
     */
    readonly encryptionSpecification?: outputs.cassandra.TableEncryptionSpecification;
    /**
     * Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     */
    readonly pointInTimeRecoveryEnabled?: boolean;
    /**
     * Non-key columns of the table
     */
    readonly regularColumns?: outputs.cassandra.TableColumn[];
    /**
     * An array of key-value pairs to apply to this resource
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource schema for AWS::Cassandra::Table
 */
export function getTableOutput(args: GetTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTableResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:cassandra:getTable", {
        "keyspaceName": args.keyspaceName,
        "tableName": args.tableName,
    }, opts);
}

export interface GetTableOutputArgs {
    /**
     * Name for Cassandra keyspace
     */
    keyspaceName: pulumi.Input<string>;
    /**
     * Name for Cassandra table
     */
    tableName: pulumi.Input<string>;
}
