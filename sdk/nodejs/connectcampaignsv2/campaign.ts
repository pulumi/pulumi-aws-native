// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::ConnectCampaignsV2::Campaign Resource Type
 */
export class Campaign extends pulumi.CustomResource {
    /**
     * Get an existing Campaign resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Campaign {
        return new Campaign(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:connectcampaignsv2:Campaign';

    /**
     * Returns true if the given object is an instance of Campaign.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Campaign {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Campaign.__pulumiType;
    }

    /**
     * Amazon Connect Campaign Arn
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Contains channel subtype configuration for an outbound campaign.
     */
    public readonly channelSubtypeConfig!: pulumi.Output<outputs.connectcampaignsv2.CampaignChannelSubtypeConfig>;
    /**
     * Communication limits configuration for an outbound campaign.
     */
    public readonly communicationLimitsOverride!: pulumi.Output<outputs.connectcampaignsv2.CampaignCommunicationLimitsConfig | undefined>;
    /**
     * Contains communication time configuration for an outbound campaign.
     */
    public readonly communicationTimeConfig!: pulumi.Output<outputs.connectcampaignsv2.CampaignCommunicationTimeConfig | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon Connect campaign flow associated with the outbound campaign.
     */
    public readonly connectCampaignFlowArn!: pulumi.Output<string | undefined>;
    /**
     * The identifier of the Amazon Connect instance. You can find the `instanceId` in the ARN of the instance.
     */
    public readonly connectInstanceId!: pulumi.Output<string>;
    /**
     * The name of the outbound campaign.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Contains the schedule configuration.
     */
    public readonly schedule!: pulumi.Output<outputs.connectcampaignsv2.CampaignSchedule | undefined>;
    /**
     * Contains source configuration.
     */
    public readonly source!: pulumi.Output<outputs.connectcampaignsv2.CampaignSource | undefined>;
    /**
     * One or more tags.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a Campaign resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CampaignArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.channelSubtypeConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'channelSubtypeConfig'");
            }
            if (args?.connectInstanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'connectInstanceId'");
            }
            resourceInputs["channelSubtypeConfig"] = args?.channelSubtypeConfig;
            resourceInputs["communicationLimitsOverride"] = args?.communicationLimitsOverride;
            resourceInputs["communicationTimeConfig"] = args?.communicationTimeConfig;
            resourceInputs["connectCampaignFlowArn"] = args?.connectCampaignFlowArn;
            resourceInputs["connectInstanceId"] = args?.connectInstanceId;
            resourceInputs["name"] = args?.name;
            resourceInputs["schedule"] = args?.schedule;
            resourceInputs["source"] = args?.source;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["channelSubtypeConfig"] = undefined /*out*/;
            resourceInputs["communicationLimitsOverride"] = undefined /*out*/;
            resourceInputs["communicationTimeConfig"] = undefined /*out*/;
            resourceInputs["connectCampaignFlowArn"] = undefined /*out*/;
            resourceInputs["connectInstanceId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["schedule"] = undefined /*out*/;
            resourceInputs["source"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["connectInstanceId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Campaign.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Campaign resource.
 */
export interface CampaignArgs {
    /**
     * Contains channel subtype configuration for an outbound campaign.
     */
    channelSubtypeConfig: pulumi.Input<inputs.connectcampaignsv2.CampaignChannelSubtypeConfigArgs>;
    /**
     * Communication limits configuration for an outbound campaign.
     */
    communicationLimitsOverride?: pulumi.Input<inputs.connectcampaignsv2.CampaignCommunicationLimitsConfigArgs>;
    /**
     * Contains communication time configuration for an outbound campaign.
     */
    communicationTimeConfig?: pulumi.Input<inputs.connectcampaignsv2.CampaignCommunicationTimeConfigArgs>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon Connect campaign flow associated with the outbound campaign.
     */
    connectCampaignFlowArn?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance. You can find the `instanceId` in the ARN of the instance.
     */
    connectInstanceId: pulumi.Input<string>;
    /**
     * The name of the outbound campaign.
     */
    name?: pulumi.Input<string>;
    /**
     * Contains the schedule configuration.
     */
    schedule?: pulumi.Input<inputs.connectcampaignsv2.CampaignScheduleArgs>;
    /**
     * Contains source configuration.
     */
    source?: pulumi.Input<inputs.connectcampaignsv2.CampaignSourceArgs>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
