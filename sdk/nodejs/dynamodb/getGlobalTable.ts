// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Version: None. Resource Type definition for AWS::DynamoDB::GlobalTable
 */
export function getGlobalTable(args: GetGlobalTableArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalTableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:dynamodb:getGlobalTable", {
        "tableName": args.tableName,
    }, opts);
}

export interface GetGlobalTableArgs {
    /**
     * A name for the global table. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID as the table name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .
     *
     * > If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     */
    tableName: string;
}

export interface GetGlobalTableResult {
    /**
     * The Amazon Resource Name (ARN) of the DynamoDB table, such as `arn:aws:dynamodb:us-east-2:123456789012:table/myDynamoDBTable` . The ARN returned is that of the replica in the region the stack is deployed to.
     */
    readonly arn?: string;
    /**
     * Represents an attribute for describing the schema for the table and indexes.
     */
    readonly attributeDefinitions?: outputs.dynamodb.GlobalTableAttributeDefinition[];
    /**
     * Specifies how you are charged for read and write throughput and how you manage capacity. Valid values are:
     *
     * - `PAY_PER_REQUEST`
     * - `PROVISIONED`
     *
     * All replicas in your global table will have the same billing mode. If you use `PROVISIONED` billing mode, you must provide an auto scaling configuration via the `WriteProvisionedThroughputSettings` property. The default value of this property is `PROVISIONED` .
     */
    readonly billingMode?: string;
    /**
     * Allows you to specify a global secondary index for the global table. The index will be defined on all replicas.
     */
    readonly globalSecondaryIndexes?: outputs.dynamodb.GlobalTableGlobalSecondaryIndex[];
    /**
     * Defines settings specific to a single replica of a global table.
     */
    readonly replicas?: outputs.dynamodb.GlobalTableReplicaSpecification[];
    /**
     * Represents the settings used to enable server-side encryption.
     */
    readonly sseSpecification?: outputs.dynamodb.GlobalTableSseSpecification;
    /**
     * The ARN of the DynamoDB stream, such as `arn:aws:dynamodb:us-east-1:123456789012:table/testddbstack-myDynamoDBTable-012A1SL7SMP5Q/stream/2015-11-30T20:10:00.000` . The `StreamArn` returned is that of the replica in the region the stack is deployed to.
     *
     * > You must specify the `StreamSpecification` property to use this attribute.
     */
    readonly streamArn?: string;
    /**
     * Represents the DynamoDB Streams configuration for a table in DynamoDB.
     *
     * You can only modify this value if your `AWS::DynamoDB::GlobalTable` contains only one entry in `Replicas` . You must specify a value for this property if your `AWS::DynamoDB::GlobalTable` contains more than one replica.
     */
    readonly streamSpecification?: outputs.dynamodb.GlobalTableStreamSpecification;
    /**
     * Unique identifier for the table, such as `a123b456-01ab-23cd-123a-111222aaabbb` . The `TableId` returned is that of the replica in the region the stack is deployed to.
     */
    readonly tableId?: string;
    /**
     * Represents the settings used to enable or disable Time to Live (TTL) for the specified table. All replicas will have the same time to live configuration.
     */
    readonly timeToLiveSpecification?: outputs.dynamodb.GlobalTableTimeToLiveSpecification;
    /**
     * Sets the write request settings for a global table or a global secondary index. You must specify this setting if you set the `BillingMode` to `PAY_PER_REQUEST` .
     */
    readonly writeOnDemandThroughputSettings?: outputs.dynamodb.GlobalTableWriteOnDemandThroughputSettings;
    /**
     * Specifies an auto scaling policy for write capacity. This policy will be applied to all replicas. This setting must be specified if `BillingMode` is set to `PROVISIONED` .
     */
    readonly writeProvisionedThroughputSettings?: outputs.dynamodb.GlobalTableWriteProvisionedThroughputSettings;
}
/**
 * Version: None. Resource Type definition for AWS::DynamoDB::GlobalTable
 */
export function getGlobalTableOutput(args: GetGlobalTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalTableResult> {
    return pulumi.output(args).apply((a: any) => getGlobalTable(a, opts))
}

export interface GetGlobalTableOutputArgs {
    /**
     * A name for the global table. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID as the table name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .
     *
     * > If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     */
    tableName: pulumi.Input<string>;
}
