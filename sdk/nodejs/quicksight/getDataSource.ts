// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of the AWS::QuickSight::DataSource Resource Type.
 */
export function getDataSource(args: GetDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSourceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:quicksight:getDataSource", {
        "awsAccountId": args.awsAccountId,
        "dataSourceId": args.dataSourceId,
    }, opts);
}

export interface GetDataSourceArgs {
    /**
     * The AWS account ID.
     */
    awsAccountId: string;
    /**
     * An ID for the data source. This ID is unique per AWS Region for each AWS account.
     */
    dataSourceId: string;
}

export interface GetDataSourceResult {
    /**
     * <p>A set of alternate data source parameters that you want to share for the credentials
     *             stored with this data source. The credentials are applied in tandem with the data source
     *             parameters when you copy a data source by using a create or update request. The API
     *             operation compares the <code>DataSourceParameters</code> structure that's in the request
     *             with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the
     *             structures are an exact match, the request is allowed to use the credentials from this
     *             existing data source. If the <code>AlternateDataSourceParameters</code> list is null,
     *             the <code>Credentials</code> originally used with this <code>DataSourceParameters</code>
     *             are automatically allowed.</p>
     */
    readonly alternateDataSourceParameters?: outputs.quicksight.DataSourceParameters[];
    /**
     * <p>The Amazon Resource Name (ARN) of the data source.</p>
     */
    readonly arn?: string;
    /**
     * <p>The time that this data source was created.</p>
     */
    readonly createdTime?: string;
    /**
     * The parameters that Amazon QuickSight uses to connect to your underlying source.
     */
    readonly dataSourceParameters?: outputs.quicksight.DataSourceParameters;
    /**
     * Error information from the last update or the creation of the data source.
     */
    readonly errorInfo?: outputs.quicksight.DataSourceErrorInfo;
    /**
     * <p>The last time that this data source was updated.</p>
     */
    readonly lastUpdatedTime?: string;
    /**
     * A display name for the data source.
     */
    readonly name?: string;
    /**
     * A list of resource permissions on the data source.
     */
    readonly permissions?: outputs.quicksight.DataSourceResourcePermission[];
    /**
     * Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying source.
     */
    readonly sslProperties?: outputs.quicksight.DataSourceSslProperties;
    /**
     * The HTTP status of the request.
     */
    readonly status?: enums.quicksight.DataSourceResourceStatus;
    /**
     * Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.
     */
    readonly tags?: outputs.Tag[];
    /**
     * Use this parameter only when you want Amazon QuickSight to use a VPC connection when connecting to your underlying source.
     */
    readonly vpcConnectionProperties?: outputs.quicksight.DataSourceVpcConnectionProperties;
}
/**
 * Definition of the AWS::QuickSight::DataSource Resource Type.
 */
export function getDataSourceOutput(args: GetDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSourceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:quicksight:getDataSource", {
        "awsAccountId": args.awsAccountId,
        "dataSourceId": args.dataSourceId,
    }, opts);
}

export interface GetDataSourceOutputArgs {
    /**
     * The AWS account ID.
     */
    awsAccountId: pulumi.Input<string>;
    /**
     * An ID for the data source. This ID is unique per AWS Region for each AWS account.
     */
    dataSourceId: pulumi.Input<string>;
}
