// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Definition of the AWS::QuickSight::DataSource Resource Type.
 */
export class DataSource extends pulumi.CustomResource {
    /**
     * Get an existing DataSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataSource {
        return new DataSource(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:quicksight:DataSource';

    /**
     * Returns true if the given object is an instance of DataSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSource.__pulumiType;
    }

    /**
     * <p>A set of alternate data source parameters that you want to share for the credentials
     *             stored with this data source. The credentials are applied in tandem with the data source
     *             parameters when you copy a data source by using a create or update request. The API
     *             operation compares the <code>DataSourceParameters</code> structure that's in the request
     *             with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the
     *             structures are an exact match, the request is allowed to use the credentials from this
     *             existing data source. If the <code>AlternateDataSourceParameters</code> list is null,
     *             the <code>Credentials</code> originally used with this <code>DataSourceParameters</code>
     *             are automatically allowed.</p>
     */
    public readonly alternateDataSourceParameters!: pulumi.Output<outputs.quicksight.DataSourceDataSourceParameters[] | undefined>;
    /**
     * <p>The Amazon Resource Name (ARN) of the data source.</p>
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly awsAccountId!: pulumi.Output<string | undefined>;
    /**
     * <p>The time that this data source was created.</p>
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    public readonly credentials!: pulumi.Output<outputs.quicksight.DataSourceDataSourceCredentials | undefined>;
    public readonly dataSourceId!: pulumi.Output<string | undefined>;
    public readonly dataSourceParameters!: pulumi.Output<outputs.quicksight.DataSourceDataSourceParameters | undefined>;
    public readonly errorInfo!: pulumi.Output<outputs.quicksight.DataSourceDataSourceErrorInfo | undefined>;
    /**
     * <p>The last time that this data source was updated.</p>
     */
    public /*out*/ readonly lastUpdatedTime!: pulumi.Output<string>;
    /**
     * <p>A display name for the data source.</p>
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * <p>A list of resource permissions on the data source.</p>
     */
    public readonly permissions!: pulumi.Output<outputs.quicksight.DataSourceResourcePermission[] | undefined>;
    public readonly sslProperties!: pulumi.Output<outputs.quicksight.DataSourceSslProperties | undefined>;
    public /*out*/ readonly status!: pulumi.Output<enums.quicksight.DataSourceResourceStatus>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.</p>
     */
    public readonly tags!: pulumi.Output<outputs.quicksight.DataSourceTag[] | undefined>;
    public readonly type!: pulumi.Output<enums.quicksight.DataSourceDataSourceType | undefined>;
    public readonly vpcConnectionProperties!: pulumi.Output<outputs.quicksight.DataSourceVpcConnectionProperties | undefined>;

    /**
     * Create a DataSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DataSourceArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["alternateDataSourceParameters"] = args ? args.alternateDataSourceParameters : undefined;
            inputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            inputs["credentials"] = args ? args.credentials : undefined;
            inputs["dataSourceId"] = args ? args.dataSourceId : undefined;
            inputs["dataSourceParameters"] = args ? args.dataSourceParameters : undefined;
            inputs["errorInfo"] = args ? args.errorInfo : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["permissions"] = args ? args.permissions : undefined;
            inputs["sslProperties"] = args ? args.sslProperties : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["vpcConnectionProperties"] = args ? args.vpcConnectionProperties : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["createdTime"] = undefined /*out*/;
            inputs["lastUpdatedTime"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        } else {
            inputs["alternateDataSourceParameters"] = undefined /*out*/;
            inputs["arn"] = undefined /*out*/;
            inputs["awsAccountId"] = undefined /*out*/;
            inputs["createdTime"] = undefined /*out*/;
            inputs["credentials"] = undefined /*out*/;
            inputs["dataSourceId"] = undefined /*out*/;
            inputs["dataSourceParameters"] = undefined /*out*/;
            inputs["errorInfo"] = undefined /*out*/;
            inputs["lastUpdatedTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["permissions"] = undefined /*out*/;
            inputs["sslProperties"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["vpcConnectionProperties"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(DataSource.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a DataSource resource.
 */
export interface DataSourceArgs {
    /**
     * <p>A set of alternate data source parameters that you want to share for the credentials
     *             stored with this data source. The credentials are applied in tandem with the data source
     *             parameters when you copy a data source by using a create or update request. The API
     *             operation compares the <code>DataSourceParameters</code> structure that's in the request
     *             with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the
     *             structures are an exact match, the request is allowed to use the credentials from this
     *             existing data source. If the <code>AlternateDataSourceParameters</code> list is null,
     *             the <code>Credentials</code> originally used with this <code>DataSourceParameters</code>
     *             are automatically allowed.</p>
     */
    alternateDataSourceParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.DataSourceDataSourceParametersArgs>[]>;
    awsAccountId?: pulumi.Input<string>;
    credentials?: pulumi.Input<inputs.quicksight.DataSourceDataSourceCredentialsArgs>;
    dataSourceId?: pulumi.Input<string>;
    dataSourceParameters?: pulumi.Input<inputs.quicksight.DataSourceDataSourceParametersArgs>;
    errorInfo?: pulumi.Input<inputs.quicksight.DataSourceDataSourceErrorInfoArgs>;
    /**
     * <p>A display name for the data source.</p>
     */
    name?: pulumi.Input<string>;
    /**
     * <p>A list of resource permissions on the data source.</p>
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.quicksight.DataSourceResourcePermissionArgs>[]>;
    sslProperties?: pulumi.Input<inputs.quicksight.DataSourceSslPropertiesArgs>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.quicksight.DataSourceTagArgs>[]>;
    type?: pulumi.Input<enums.quicksight.DataSourceDataSourceType>;
    vpcConnectionProperties?: pulumi.Input<inputs.quicksight.DataSourceVpcConnectionPropertiesArgs>;
}
