// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of the AWS::QuickSight::VPCConnection Resource Type.
 */
export class VpcConnection extends pulumi.CustomResource {
    /**
     * Get an existing VpcConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VpcConnection {
        return new VpcConnection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:quicksight:VpcConnection';

    /**
     * Returns true if the given object is an instance of VpcConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcConnection.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly availabilityStatus!: pulumi.Output<enums.quicksight.VpcConnectionVpcConnectionAvailabilityStatus | undefined>;
    public readonly awsAccountId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    public readonly dnsResolvers!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly lastUpdatedTime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string | undefined>;
    public /*out*/ readonly networkInterfaces!: pulumi.Output<outputs.quicksight.VpcConnectionNetworkInterface[]>;
    public readonly roleArn!: pulumi.Output<string | undefined>;
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly status!: pulumi.Output<enums.quicksight.VpcConnectionVpcConnectionResourceStatus>;
    public readonly subnetIds!: pulumi.Output<string[] | undefined>;
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    public readonly vpcConnectionId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a VpcConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpcConnectionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["availabilityStatus"] = args ? args.availabilityStatus : undefined;
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["dnsResolvers"] = args ? args.dnsResolvers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcConnectionId"] = args ? args.vpcConnectionId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
            resourceInputs["networkInterfaces"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["availabilityStatus"] = undefined /*out*/;
            resourceInputs["awsAccountId"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["dnsResolvers"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkInterfaces"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["securityGroupIds"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subnetIds"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpcConnectionId"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["awsAccountId", "vpcConnectionId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(VpcConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VpcConnection resource.
 */
export interface VpcConnectionArgs {
    availabilityStatus?: pulumi.Input<enums.quicksight.VpcConnectionVpcConnectionAvailabilityStatus>;
    awsAccountId?: pulumi.Input<string>;
    dnsResolvers?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    vpcConnectionId?: pulumi.Input<string>;
}
