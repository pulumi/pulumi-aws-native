// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetIndexArgs, GetIndexResult, GetIndexOutputArgs } from "./getIndex";
export const getIndex: typeof import("./getIndex").getIndex = null as any;
export const getIndexOutput: typeof import("./getIndex").getIndexOutput = null as any;
utilities.lazyLoad(exports, ["getIndex","getIndexOutput"], () => require("./getIndex"));

export { GetVectorBucketArgs, GetVectorBucketResult, GetVectorBucketOutputArgs } from "./getVectorBucket";
export const getVectorBucket: typeof import("./getVectorBucket").getVectorBucket = null as any;
export const getVectorBucketOutput: typeof import("./getVectorBucket").getVectorBucketOutput = null as any;
utilities.lazyLoad(exports, ["getVectorBucket","getVectorBucketOutput"], () => require("./getVectorBucket"));

export { GetVectorBucketPolicyArgs, GetVectorBucketPolicyResult, GetVectorBucketPolicyOutputArgs } from "./getVectorBucketPolicy";
export const getVectorBucketPolicy: typeof import("./getVectorBucketPolicy").getVectorBucketPolicy = null as any;
export const getVectorBucketPolicyOutput: typeof import("./getVectorBucketPolicy").getVectorBucketPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getVectorBucketPolicy","getVectorBucketPolicyOutput"], () => require("./getVectorBucketPolicy"));

export { IndexArgs } from "./index_";
export type Index = import("./index_").Index;
export const Index: typeof import("./index_").Index = null as any;
utilities.lazyLoad(exports, ["Index"], () => require("./index_"));

export { VectorBucketArgs } from "./vectorBucket";
export type VectorBucket = import("./vectorBucket").VectorBucket;
export const VectorBucket: typeof import("./vectorBucket").VectorBucket = null as any;
utilities.lazyLoad(exports, ["VectorBucket"], () => require("./vectorBucket"));

export { VectorBucketPolicyArgs } from "./vectorBucketPolicy";
export type VectorBucketPolicy = import("./vectorBucketPolicy").VectorBucketPolicy;
export const VectorBucketPolicy: typeof import("./vectorBucketPolicy").VectorBucketPolicy = null as any;
utilities.lazyLoad(exports, ["VectorBucketPolicy"], () => require("./vectorBucketPolicy"));


// Export enums:
export * from "../types/enums/s3vectors";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:s3vectors:Index":
                return new Index(name, <any>undefined, { urn })
            case "aws-native:s3vectors:VectorBucket":
                return new VectorBucket(name, <any>undefined, { urn })
            case "aws-native:s3vectors:VectorBucketPolicy":
                return new VectorBucketPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "s3vectors", _module)
