// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::S3Vectors::VectorBucket
 */
export class VectorBucket extends pulumi.CustomResource {
    /**
     * Get an existing VectorBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VectorBucket {
        return new VectorBucket(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:s3vectors:VectorBucket';

    /**
     * Returns true if the given object is an instance of VectorBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VectorBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VectorBucket.__pulumiType;
    }

    declare public /*out*/ readonly creationTime: pulumi.Output<string>;
    declare public readonly encryptionConfiguration: pulumi.Output<outputs.s3vectors.VectorBucketEncryptionConfiguration | undefined>;
    declare public /*out*/ readonly vectorBucketArn: pulumi.Output<string>;
    declare public readonly vectorBucketName: pulumi.Output<string | undefined>;

    /**
     * Create a VectorBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VectorBucketArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["encryptionConfiguration"] = args?.encryptionConfiguration;
            resourceInputs["vectorBucketName"] = args?.vectorBucketName;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["vectorBucketArn"] = undefined /*out*/;
        } else {
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["encryptionConfiguration"] = undefined /*out*/;
            resourceInputs["vectorBucketArn"] = undefined /*out*/;
            resourceInputs["vectorBucketName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["encryptionConfiguration", "vectorBucketName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(VectorBucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VectorBucket resource.
 */
export interface VectorBucketArgs {
    encryptionConfiguration?: pulumi.Input<inputs.s3vectors.VectorBucketEncryptionConfigurationArgs>;
    vectorBucketName?: pulumi.Input<string>;
}
