// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for SSO PermissionSet
 */
export function getPermissionSet(args: GetPermissionSetArgs, opts?: pulumi.InvokeOptions): Promise<GetPermissionSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:sso:getPermissionSet", {
        "instanceArn": args.instanceArn,
        "permissionSetArn": args.permissionSetArn,
    }, opts);
}

export interface GetPermissionSetArgs {
    /**
     * The sso instance arn that the permission set is owned.
     */
    instanceArn: string;
    /**
     * The permission set that the policy will be attached to
     */
    permissionSetArn: string;
}

export interface GetPermissionSetResult {
    readonly customerManagedPolicyReferences?: outputs.sso.PermissionSetCustomerManagedPolicyReference[];
    /**
     * The permission set description.
     */
    readonly description?: string;
    /**
     * The inline policy to put in permission set.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SSO::PermissionSet` for more information about the expected schema for this property.
     */
    readonly inlinePolicy?: any;
    readonly managedPolicies?: string[];
    /**
     * The permission set that the policy will be attached to
     */
    readonly permissionSetArn?: string;
    readonly permissionsBoundary?: outputs.sso.PermissionSetPermissionsBoundary;
    /**
     * The relay state URL that redirect links to any service in the AWS Management Console.
     */
    readonly relayStateType?: string;
    /**
     * The length of time that a user can be signed in to an AWS account.
     */
    readonly sessionDuration?: string;
    readonly tags?: outputs.sso.PermissionSetTag[];
}
/**
 * Resource Type definition for SSO PermissionSet
 */
export function getPermissionSetOutput(args: GetPermissionSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPermissionSetResult> {
    return pulumi.output(args).apply((a: any) => getPermissionSet(a, opts))
}

export interface GetPermissionSetOutputArgs {
    /**
     * The sso instance arn that the permission set is owned.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The permission set that the policy will be attached to
     */
    permissionSetArn: pulumi.Input<string>;
}
