// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DataMigrationArgs } from "./dataMigration";
export type DataMigration = import("./dataMigration").DataMigration;
export const DataMigration: typeof import("./dataMigration").DataMigration = null as any;
utilities.lazyLoad(exports, ["DataMigration"], () => require("./dataMigration"));

export { DataProviderArgs } from "./dataProvider";
export type DataProvider = import("./dataProvider").DataProvider;
export const DataProvider: typeof import("./dataProvider").DataProvider = null as any;
utilities.lazyLoad(exports, ["DataProvider"], () => require("./dataProvider"));

export { GetDataMigrationArgs, GetDataMigrationResult, GetDataMigrationOutputArgs } from "./getDataMigration";
export const getDataMigration: typeof import("./getDataMigration").getDataMigration = null as any;
export const getDataMigrationOutput: typeof import("./getDataMigration").getDataMigrationOutput = null as any;
utilities.lazyLoad(exports, ["getDataMigration","getDataMigrationOutput"], () => require("./getDataMigration"));

export { GetDataProviderArgs, GetDataProviderResult, GetDataProviderOutputArgs } from "./getDataProvider";
export const getDataProvider: typeof import("./getDataProvider").getDataProvider = null as any;
export const getDataProviderOutput: typeof import("./getDataProvider").getDataProviderOutput = null as any;
utilities.lazyLoad(exports, ["getDataProvider","getDataProviderOutput"], () => require("./getDataProvider"));

export { GetInstanceProfileArgs, GetInstanceProfileResult, GetInstanceProfileOutputArgs } from "./getInstanceProfile";
export const getInstanceProfile: typeof import("./getInstanceProfile").getInstanceProfile = null as any;
export const getInstanceProfileOutput: typeof import("./getInstanceProfile").getInstanceProfileOutput = null as any;
utilities.lazyLoad(exports, ["getInstanceProfile","getInstanceProfileOutput"], () => require("./getInstanceProfile"));

export { GetMigrationProjectArgs, GetMigrationProjectResult, GetMigrationProjectOutputArgs } from "./getMigrationProject";
export const getMigrationProject: typeof import("./getMigrationProject").getMigrationProject = null as any;
export const getMigrationProjectOutput: typeof import("./getMigrationProject").getMigrationProjectOutput = null as any;
utilities.lazyLoad(exports, ["getMigrationProject","getMigrationProjectOutput"], () => require("./getMigrationProject"));

export { GetReplicationConfigArgs, GetReplicationConfigResult, GetReplicationConfigOutputArgs } from "./getReplicationConfig";
export const getReplicationConfig: typeof import("./getReplicationConfig").getReplicationConfig = null as any;
export const getReplicationConfigOutput: typeof import("./getReplicationConfig").getReplicationConfigOutput = null as any;
utilities.lazyLoad(exports, ["getReplicationConfig","getReplicationConfigOutput"], () => require("./getReplicationConfig"));

export { InstanceProfileArgs } from "./instanceProfile";
export type InstanceProfile = import("./instanceProfile").InstanceProfile;
export const InstanceProfile: typeof import("./instanceProfile").InstanceProfile = null as any;
utilities.lazyLoad(exports, ["InstanceProfile"], () => require("./instanceProfile"));

export { MigrationProjectArgs } from "./migrationProject";
export type MigrationProject = import("./migrationProject").MigrationProject;
export const MigrationProject: typeof import("./migrationProject").MigrationProject = null as any;
utilities.lazyLoad(exports, ["MigrationProject"], () => require("./migrationProject"));

export { ReplicationConfigArgs } from "./replicationConfig";
export type ReplicationConfig = import("./replicationConfig").ReplicationConfig;
export const ReplicationConfig: typeof import("./replicationConfig").ReplicationConfig = null as any;
utilities.lazyLoad(exports, ["ReplicationConfig"], () => require("./replicationConfig"));


// Export enums:
export * from "../types/enums/dms";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:dms:DataMigration":
                return new DataMigration(name, <any>undefined, { urn })
            case "aws-native:dms:DataProvider":
                return new DataProvider(name, <any>undefined, { urn })
            case "aws-native:dms:InstanceProfile":
                return new InstanceProfile(name, <any>undefined, { urn })
            case "aws-native:dms:MigrationProject":
                return new MigrationProject(name, <any>undefined, { urn })
            case "aws-native:dms:ReplicationConfig":
                return new ReplicationConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "dms", _module)
