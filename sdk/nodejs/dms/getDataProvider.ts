// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::DMS::DataProvider
 */
export function getDataProvider(args: GetDataProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetDataProviderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:dms:getDataProvider", {
        "dataProviderArn": args.dataProviderArn,
    }, opts);
}

export interface GetDataProviderArgs {
    /**
     * The data provider ARN.
     */
    dataProviderArn: string;
}

export interface GetDataProviderResult {
    /**
     * The data provider ARN.
     */
    readonly dataProviderArn?: string;
    /**
     * The data provider creation time.
     */
    readonly dataProviderCreationTime?: string;
    /**
     * The property describes a name to identify the data provider.
     */
    readonly dataProviderName?: string;
    /**
     * The optional description of the data provider.
     */
    readonly description?: string;
    /**
     * The property describes a data engine for the data provider.
     */
    readonly engine?: enums.dms.DataProviderEngine;
    /**
     * The property identifies the exact type of settings for the data provider.
     */
    readonly settings?: outputs.dms.Settings0Properties | outputs.dms.Settings1Properties | outputs.dms.Settings2Properties | outputs.dms.Settings3Properties;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource schema for AWS::DMS::DataProvider
 */
export function getDataProviderOutput(args: GetDataProviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataProviderResult> {
    return pulumi.output(args).apply((a: any) => getDataProvider(a, opts))
}

export interface GetDataProviderOutputArgs {
    /**
     * The data provider ARN.
     */
    dataProviderArn: pulumi.Input<string>;
}
