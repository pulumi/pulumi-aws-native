// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::DMS::ReplicationInstance
 *
 * @deprecated ReplicationInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class ReplicationInstance extends pulumi.CustomResource {
    /**
     * Get an existing ReplicationInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicationInstance {
        pulumi.log.warn("ReplicationInstance is deprecated: ReplicationInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new ReplicationInstance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:dms:ReplicationInstance';

    /**
     * Returns true if the given object is an instance of ReplicationInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReplicationInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicationInstance.__pulumiType;
    }

    public readonly allocatedStorage!: pulumi.Output<number | undefined>;
    public readonly allowMajorVersionUpgrade!: pulumi.Output<boolean | undefined>;
    public readonly autoMinorVersionUpgrade!: pulumi.Output<boolean | undefined>;
    public readonly availabilityZone!: pulumi.Output<string | undefined>;
    public readonly engineVersion!: pulumi.Output<string | undefined>;
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    public readonly multiAZ!: pulumi.Output<boolean | undefined>;
    public readonly preferredMaintenanceWindow!: pulumi.Output<string | undefined>;
    public readonly publiclyAccessible!: pulumi.Output<boolean | undefined>;
    public readonly replicationInstanceClass!: pulumi.Output<string>;
    public readonly replicationInstanceIdentifier!: pulumi.Output<string | undefined>;
    public /*out*/ readonly replicationInstancePrivateIpAddresses!: pulumi.Output<string>;
    public /*out*/ readonly replicationInstancePublicIpAddresses!: pulumi.Output<string>;
    public readonly replicationSubnetGroupIdentifier!: pulumi.Output<string | undefined>;
    public readonly resourceIdentifier!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.dms.ReplicationInstanceTag[] | undefined>;
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ReplicationInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated ReplicationInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: ReplicationInstanceArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("ReplicationInstance is deprecated: ReplicationInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.replicationInstanceClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'replicationInstanceClass'");
            }
            resourceInputs["allocatedStorage"] = args ? args.allocatedStorage : undefined;
            resourceInputs["allowMajorVersionUpgrade"] = args ? args.allowMajorVersionUpgrade : undefined;
            resourceInputs["autoMinorVersionUpgrade"] = args ? args.autoMinorVersionUpgrade : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["multiAZ"] = args ? args.multiAZ : undefined;
            resourceInputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            resourceInputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            resourceInputs["replicationInstanceClass"] = args ? args.replicationInstanceClass : undefined;
            resourceInputs["replicationInstanceIdentifier"] = args ? args.replicationInstanceIdentifier : undefined;
            resourceInputs["replicationSubnetGroupIdentifier"] = args ? args.replicationSubnetGroupIdentifier : undefined;
            resourceInputs["resourceIdentifier"] = args ? args.resourceIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            resourceInputs["replicationInstancePrivateIpAddresses"] = undefined /*out*/;
            resourceInputs["replicationInstancePublicIpAddresses"] = undefined /*out*/;
        } else {
            resourceInputs["allocatedStorage"] = undefined /*out*/;
            resourceInputs["allowMajorVersionUpgrade"] = undefined /*out*/;
            resourceInputs["autoMinorVersionUpgrade"] = undefined /*out*/;
            resourceInputs["availabilityZone"] = undefined /*out*/;
            resourceInputs["engineVersion"] = undefined /*out*/;
            resourceInputs["kmsKeyId"] = undefined /*out*/;
            resourceInputs["multiAZ"] = undefined /*out*/;
            resourceInputs["preferredMaintenanceWindow"] = undefined /*out*/;
            resourceInputs["publiclyAccessible"] = undefined /*out*/;
            resourceInputs["replicationInstanceClass"] = undefined /*out*/;
            resourceInputs["replicationInstanceIdentifier"] = undefined /*out*/;
            resourceInputs["replicationInstancePrivateIpAddresses"] = undefined /*out*/;
            resourceInputs["replicationInstancePublicIpAddresses"] = undefined /*out*/;
            resourceInputs["replicationSubnetGroupIdentifier"] = undefined /*out*/;
            resourceInputs["resourceIdentifier"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpcSecurityGroupIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ReplicationInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ReplicationInstance resource.
 */
export interface ReplicationInstanceArgs {
    allocatedStorage?: pulumi.Input<number>;
    allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    multiAZ?: pulumi.Input<boolean>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    publiclyAccessible?: pulumi.Input<boolean>;
    replicationInstanceClass: pulumi.Input<string>;
    replicationInstanceIdentifier?: pulumi.Input<string>;
    replicationSubnetGroupIdentifier?: pulumi.Input<string>;
    resourceIdentifier?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.dms.ReplicationInstanceTagArgs>[]>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
