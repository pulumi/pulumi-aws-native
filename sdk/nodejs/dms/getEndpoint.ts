// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::DMS::Endpoint
 */
export function getEndpoint(args: GetEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:dms:getEndpoint", {
        "id": args.id,
    }, opts);
}

export interface GetEndpointArgs {
    id: string;
}

export interface GetEndpointResult {
    readonly certificateArn?: string;
    readonly databaseName?: string;
    readonly docDbSettings?: outputs.dms.EndpointDocDbSettings;
    readonly dynamoDbSettings?: outputs.dms.EndpointDynamoDbSettings;
    readonly elasticsearchSettings?: outputs.dms.EndpointElasticsearchSettings;
    readonly endpointIdentifier?: string;
    readonly endpointType?: string;
    readonly engineName?: string;
    readonly externalId?: string;
    readonly extraConnectionAttributes?: string;
    readonly gcpMySQLSettings?: outputs.dms.EndpointGcpMySQLSettings;
    readonly ibmDb2Settings?: outputs.dms.EndpointIbmDb2Settings;
    readonly id?: string;
    readonly kafkaSettings?: outputs.dms.EndpointKafkaSettings;
    readonly kinesisSettings?: outputs.dms.EndpointKinesisSettings;
    readonly microsoftSqlServerSettings?: outputs.dms.EndpointMicrosoftSqlServerSettings;
    readonly mongoDbSettings?: outputs.dms.EndpointMongoDbSettings;
    readonly mySqlSettings?: outputs.dms.EndpointMySqlSettings;
    readonly neptuneSettings?: outputs.dms.EndpointNeptuneSettings;
    readonly oracleSettings?: outputs.dms.EndpointOracleSettings;
    readonly password?: string;
    readonly port?: number;
    readonly postgreSqlSettings?: outputs.dms.EndpointPostgreSqlSettings;
    readonly redisSettings?: outputs.dms.EndpointRedisSettings;
    readonly redshiftSettings?: outputs.dms.EndpointRedshiftSettings;
    readonly s3Settings?: outputs.dms.EndpointS3Settings;
    readonly serverName?: string;
    readonly sslMode?: string;
    readonly sybaseSettings?: outputs.dms.EndpointSybaseSettings;
    readonly tags?: outputs.dms.EndpointTag[];
    readonly username?: string;
}

export function getEndpointOutput(args: GetEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEndpointResult> {
    return pulumi.output(args).apply(a => getEndpoint(a, opts))
}

export interface GetEndpointOutputArgs {
    id: pulumi.Input<string>;
}
