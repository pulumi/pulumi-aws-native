// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::MediaTailor::SourceLocation Resource Type
 */
export function getSourceLocation(args: GetSourceLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetSourceLocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:mediatailor:getSourceLocation", {
        "sourceLocationName": args.sourceLocationName,
    }, opts);
}

export interface GetSourceLocationArgs {
    /**
     * The name of the source location.
     */
    sourceLocationName: string;
}

export interface GetSourceLocationResult {
    /**
     * Access configuration parameters.
     */
    readonly accessConfiguration?: outputs.mediatailor.SourceLocationAccessConfiguration;
    /**
     * <p>The ARN of the source location.</p>
     */
    readonly arn?: string;
    /**
     * The optional configuration for a server that serves segments. Use this if you want the segment delivery server to be different from the source location server. For example, you can configure your source location server to be an origination server, such as MediaPackage, and the segment delivery server to be a content delivery network (CDN), such as CloudFront. If you don't specify a segment delivery server, then the source location server is used.
     */
    readonly defaultSegmentDeliveryConfiguration?: outputs.mediatailor.SourceLocationDefaultSegmentDeliveryConfiguration;
    /**
     * The HTTP configuration for the source location.
     */
    readonly httpConfiguration?: outputs.mediatailor.SourceLocationHttpConfiguration;
    /**
     * <p>A list of the segment delivery configurations associated with this resource.</p>
     */
    readonly segmentDeliveryConfigurations?: outputs.mediatailor.SourceLocationSegmentDeliveryConfiguration[];
    /**
     * The tags to assign to the source location.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Definition of AWS::MediaTailor::SourceLocation Resource Type
 */
export function getSourceLocationOutput(args: GetSourceLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourceLocationResult> {
    return pulumi.output(args).apply((a: any) => getSourceLocation(a, opts))
}

export interface GetSourceLocationOutputArgs {
    /**
     * The name of the source location.
     */
    sourceLocationName: pulumi.Input<string>;
}
