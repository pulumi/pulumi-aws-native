// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::MediaTailor::VodSource Resource Type
 */
export function getVodSource(args: GetVodSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetVodSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:mediatailor:getVodSource", {
        "sourceLocationName": args.sourceLocationName,
        "vodSourceName": args.vodSourceName,
    }, opts);
}

export interface GetVodSourceArgs {
    sourceLocationName: string;
    vodSourceName: string;
}

export interface GetVodSourceResult {
    /**
     * <p>The ARN of the VOD source.</p>
     */
    readonly arn?: string;
    /**
     * <p>A list of HTTP package configuration parameters for this VOD source.</p>
     */
    readonly httpPackageConfigurations?: outputs.mediatailor.VodSourceHttpPackageConfiguration[];
    /**
     * The tags to assign to the VOD source.
     */
    readonly tags?: outputs.mediatailor.VodSourceTag[];
}
/**
 * Definition of AWS::MediaTailor::VodSource Resource Type
 */
export function getVodSourceOutput(args: GetVodSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVodSourceResult> {
    return pulumi.output(args).apply((a: any) => getVodSource(a, opts))
}

export interface GetVodSourceOutputArgs {
    sourceLocationName: pulumi.Input<string>;
    vodSourceName: pulumi.Input<string>;
}
