// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::MediaTailor::Channel Resource Type
 */
export function getChannel(args: GetChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetChannelResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:mediatailor:getChannel", {
        "channelName": args.channelName,
    }, opts);
}

export interface GetChannelArgs {
    /**
     * The name of the channel.
     */
    channelName: string;
}

export interface GetChannelResult {
    /**
     * <p>The ARN of the channel.</p>
     */
    readonly arn?: string;
    /**
     * <p>The list of audiences defined in channel.</p>
     */
    readonly audiences?: string[];
    /**
     * The slate used to fill gaps between programs in the schedule. You must configure filler slate if your channel uses the `LINEAR` `PlaybackMode` . MediaTailor doesn't support filler slate for channels using the `LOOP` `PlaybackMode` .
     */
    readonly fillerSlate?: outputs.mediatailor.ChannelSlateSource;
    /**
     * The log configuration.
     */
    readonly logConfiguration?: outputs.mediatailor.ChannelLogConfigurationForChannel;
    /**
     * The type of playback mode for this channel.
     *
     * `LINEAR` - Programs play back-to-back only once.
     *
     * `LOOP` - Programs play back-to-back in an endless loop. When the last program in the schedule plays, playback loops back to the first program in the schedule.
     */
    readonly playbackMode?: enums.mediatailor.ChannelPlaybackMode;
    /**
     * The tags to assign to the channel.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The configuration for time-shifted viewing.
     */
    readonly timeShiftConfiguration?: outputs.mediatailor.ChannelTimeShiftConfiguration;
}
/**
 * Definition of AWS::MediaTailor::Channel Resource Type
 */
export function getChannelOutput(args: GetChannelOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetChannelResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:mediatailor:getChannel", {
        "channelName": args.channelName,
    }, opts);
}

export interface GetChannelOutputArgs {
    /**
     * The name of the channel.
     */
    channelName: pulumi.Input<string>;
}
