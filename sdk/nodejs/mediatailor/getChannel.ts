// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::MediaTailor::Channel Resource Type
 */
export function getChannel(args: GetChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetChannelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:mediatailor:getChannel", {
        "channelName": args.channelName,
    }, opts);
}

export interface GetChannelArgs {
    channelName: string;
}

export interface GetChannelResult {
    /**
     * <p>The ARN of the channel.</p>
     */
    readonly arn?: string;
    readonly fillerSlate?: outputs.mediatailor.ChannelSlateSource;
    readonly logConfiguration?: outputs.mediatailor.ChannelLogConfigurationForChannel;
    readonly playbackMode?: enums.mediatailor.ChannelPlaybackMode;
    /**
     * The tags to assign to the channel.
     */
    readonly tags?: outputs.mediatailor.ChannelTag[];
    readonly timeShiftConfiguration?: outputs.mediatailor.ChannelTimeShiftConfiguration;
}
/**
 * Definition of AWS::MediaTailor::Channel Resource Type
 */
export function getChannelOutput(args: GetChannelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetChannelResult> {
    return pulumi.output(args).apply((a: any) => getChannel(a, opts))
}

export interface GetChannelOutputArgs {
    channelName: pulumi.Input<string>;
}
