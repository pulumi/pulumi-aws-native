// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::MediaTailor::LiveSource Resource Type
 */
export function getLiveSource(args: GetLiveSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetLiveSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:mediatailor:getLiveSource", {
        "liveSourceName": args.liveSourceName,
        "sourceLocationName": args.sourceLocationName,
    }, opts);
}

export interface GetLiveSourceArgs {
    liveSourceName: string;
    sourceLocationName: string;
}

export interface GetLiveSourceResult {
    /**
     * <p>The ARN of the live source.</p>
     */
    readonly arn?: string;
    /**
     * <p>A list of HTTP package configuration parameters for this live source.</p>
     */
    readonly httpPackageConfigurations?: outputs.mediatailor.LiveSourceHttpPackageConfiguration[];
    /**
     * The tags to assign to the live source.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Definition of AWS::MediaTailor::LiveSource Resource Type
 */
export function getLiveSourceOutput(args: GetLiveSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLiveSourceResult> {
    return pulumi.output(args).apply((a: any) => getLiveSource(a, opts))
}

export interface GetLiveSourceOutputArgs {
    liveSourceName: pulumi.Input<string>;
    sourceLocationName: pulumi.Input<string>;
}
