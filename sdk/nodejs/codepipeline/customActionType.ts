// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::CodePipeline::CustomActionType
 *
 * @deprecated CustomActionType is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class CustomActionType extends pulumi.CustomResource {
    /**
     * Get an existing CustomActionType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomActionType {
        pulumi.log.warn("CustomActionType is deprecated: CustomActionType is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new CustomActionType(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:codepipeline:CustomActionType';

    /**
     * Returns true if the given object is an instance of CustomActionType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomActionType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomActionType.__pulumiType;
    }

    public readonly category!: pulumi.Output<string>;
    public readonly configurationProperties!: pulumi.Output<outputs.codepipeline.CustomActionTypeConfigurationProperties[] | undefined>;
    public readonly inputArtifactDetails!: pulumi.Output<outputs.codepipeline.CustomActionTypeArtifactDetails>;
    public readonly outputArtifactDetails!: pulumi.Output<outputs.codepipeline.CustomActionTypeArtifactDetails>;
    public readonly provider!: pulumi.Output<string>;
    public readonly settings!: pulumi.Output<outputs.codepipeline.CustomActionTypeSettings | undefined>;
    public readonly tags!: pulumi.Output<outputs.codepipeline.CustomActionTypeTag[] | undefined>;
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a CustomActionType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated CustomActionType is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: CustomActionTypeArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("CustomActionType is deprecated: CustomActionType is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if ((!args || args.inputArtifactDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inputArtifactDetails'");
            }
            if ((!args || args.outputArtifactDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'outputArtifactDetails'");
            }
            if ((!args || args.provider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'provider'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            inputs["category"] = args ? args.category : undefined;
            inputs["configurationProperties"] = args ? args.configurationProperties : undefined;
            inputs["inputArtifactDetails"] = args ? args.inputArtifactDetails : undefined;
            inputs["outputArtifactDetails"] = args ? args.outputArtifactDetails : undefined;
            inputs["provider"] = args ? args.provider : undefined;
            inputs["settings"] = args ? args.settings : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["version"] = args ? args.version : undefined;
        } else {
            inputs["category"] = undefined /*out*/;
            inputs["configurationProperties"] = undefined /*out*/;
            inputs["inputArtifactDetails"] = undefined /*out*/;
            inputs["outputArtifactDetails"] = undefined /*out*/;
            inputs["provider"] = undefined /*out*/;
            inputs["settings"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CustomActionType.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a CustomActionType resource.
 */
export interface CustomActionTypeArgs {
    category: pulumi.Input<string>;
    configurationProperties?: pulumi.Input<pulumi.Input<inputs.codepipeline.CustomActionTypeConfigurationPropertiesArgs>[]>;
    inputArtifactDetails: pulumi.Input<inputs.codepipeline.CustomActionTypeArtifactDetailsArgs>;
    outputArtifactDetails: pulumi.Input<inputs.codepipeline.CustomActionTypeArtifactDetailsArgs>;
    provider: pulumi.Input<string>;
    settings?: pulumi.Input<inputs.codepipeline.CustomActionTypeSettingsArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.codepipeline.CustomActionTypeTagArgs>[]>;
    version: pulumi.Input<string>;
}
