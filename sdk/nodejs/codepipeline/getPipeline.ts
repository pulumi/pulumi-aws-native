// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::CodePipeline::Pipeline resource creates a CodePipeline pipeline that describes how software changes go through a release process.
 */
export function getPipeline(args: GetPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:codepipeline:getPipeline", {
        "name": args.name,
    }, opts);
}

export interface GetPipelineArgs {
    /**
     * The name of the pipeline.
     */
    name: string;
}

export interface GetPipelineResult {
    /**
     * The S3 bucket where artifacts for the pipeline are stored.
     */
    readonly artifactStore?: outputs.codepipeline.PipelineArtifactStore;
    /**
     * A mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.
     */
    readonly artifactStores?: outputs.codepipeline.PipelineArtifactStoreMap[];
    /**
     * Represents the input of a DisableStageTransition action.
     */
    readonly disableInboundStageTransitions?: outputs.codepipeline.PipelineStageTransition[];
    /**
     * The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED.
     */
    readonly executionMode?: enums.codepipeline.PipelineExecutionMode;
    /**
     * CodePipeline provides the following pipeline types, which differ in characteristics and price, so that you can tailor your pipeline features and cost to the needs of your applications.
     */
    readonly pipelineType?: enums.codepipeline.PipelineType;
    /**
     * The Amazon Resource Name (ARN) for CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn
     */
    readonly roleArn?: string;
    /**
     * Represents information about a stage and its definition.
     */
    readonly stages?: outputs.codepipeline.PipelineStageDeclaration[];
    /**
     * Specifies the tags applied to the pipeline.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The trigger configuration specifying a type of event, such as Git tags, that starts the pipeline.
     */
    readonly triggers?: outputs.codepipeline.PipelineTriggerDeclaration[];
    /**
     * A list that defines the pipeline variables for a pipeline resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9@\-_]+.
     */
    readonly variables?: outputs.codepipeline.PipelineVariableDeclaration[];
    /**
     * The version of the pipeline.
     */
    readonly version?: string;
}
/**
 * The AWS::CodePipeline::Pipeline resource creates a CodePipeline pipeline that describes how software changes go through a release process.
 */
export function getPipelineOutput(args: GetPipelineOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPipelineResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:codepipeline:getPipeline", {
        "name": args.name,
    }, opts);
}

export interface GetPipelineOutputArgs {
    /**
     * The name of the pipeline.
     */
    name: pulumi.Input<string>;
}
