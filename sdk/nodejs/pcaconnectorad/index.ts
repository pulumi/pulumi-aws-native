// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConnectorArgs } from "./connector";
export type Connector = import("./connector").Connector;
export const Connector: typeof import("./connector").Connector = null as any;
utilities.lazyLoad(exports, ["Connector"], () => require("./connector"));

export { DirectoryRegistrationArgs } from "./directoryRegistration";
export type DirectoryRegistration = import("./directoryRegistration").DirectoryRegistration;
export const DirectoryRegistration: typeof import("./directoryRegistration").DirectoryRegistration = null as any;
utilities.lazyLoad(exports, ["DirectoryRegistration"], () => require("./directoryRegistration"));

export { GetConnectorArgs, GetConnectorResult, GetConnectorOutputArgs } from "./getConnector";
export const getConnector: typeof import("./getConnector").getConnector = null as any;
export const getConnectorOutput: typeof import("./getConnector").getConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getConnector","getConnectorOutput"], () => require("./getConnector"));

export { GetDirectoryRegistrationArgs, GetDirectoryRegistrationResult, GetDirectoryRegistrationOutputArgs } from "./getDirectoryRegistration";
export const getDirectoryRegistration: typeof import("./getDirectoryRegistration").getDirectoryRegistration = null as any;
export const getDirectoryRegistrationOutput: typeof import("./getDirectoryRegistration").getDirectoryRegistrationOutput = null as any;
utilities.lazyLoad(exports, ["getDirectoryRegistration","getDirectoryRegistrationOutput"], () => require("./getDirectoryRegistration"));

export { GetTemplateArgs, GetTemplateResult, GetTemplateOutputArgs } from "./getTemplate";
export const getTemplate: typeof import("./getTemplate").getTemplate = null as any;
export const getTemplateOutput: typeof import("./getTemplate").getTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getTemplate","getTemplateOutput"], () => require("./getTemplate"));

export { ServicePrincipalNameArgs } from "./servicePrincipalName";
export type ServicePrincipalName = import("./servicePrincipalName").ServicePrincipalName;
export const ServicePrincipalName: typeof import("./servicePrincipalName").ServicePrincipalName = null as any;
utilities.lazyLoad(exports, ["ServicePrincipalName"], () => require("./servicePrincipalName"));

export { TemplateArgs } from "./template";
export type Template = import("./template").Template;
export const Template: typeof import("./template").Template = null as any;
utilities.lazyLoad(exports, ["Template"], () => require("./template"));

export { TemplateGroupAccessControlEntryArgs } from "./templateGroupAccessControlEntry";
export type TemplateGroupAccessControlEntry = import("./templateGroupAccessControlEntry").TemplateGroupAccessControlEntry;
export const TemplateGroupAccessControlEntry: typeof import("./templateGroupAccessControlEntry").TemplateGroupAccessControlEntry = null as any;
utilities.lazyLoad(exports, ["TemplateGroupAccessControlEntry"], () => require("./templateGroupAccessControlEntry"));


// Export enums:
export * from "../types/enums/pcaconnectorad";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:pcaconnectorad:Connector":
                return new Connector(name, <any>undefined, { urn })
            case "aws-native:pcaconnectorad:DirectoryRegistration":
                return new DirectoryRegistration(name, <any>undefined, { urn })
            case "aws-native:pcaconnectorad:ServicePrincipalName":
                return new ServicePrincipalName(name, <any>undefined, { urn })
            case "aws-native:pcaconnectorad:Template":
                return new Template(name, <any>undefined, { urn })
            case "aws-native:pcaconnectorad:TemplateGroupAccessControlEntry":
                return new TemplateGroupAccessControlEntry(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "pcaconnectorad", _module)
