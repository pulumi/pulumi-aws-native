// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Definition of AWS::PCAConnectorAD::ServicePrincipalName Resource Type
 */
export class ServicePrincipalName extends pulumi.CustomResource {
    /**
     * Get an existing ServicePrincipalName resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServicePrincipalName {
        return new ServicePrincipalName(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:pcaconnectorad:ServicePrincipalName';

    /**
     * Returns true if the given object is an instance of ServicePrincipalName.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServicePrincipalName {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServicePrincipalName.__pulumiType;
    }

    public readonly connectorArn!: pulumi.Output<string | undefined>;
    public readonly directoryRegistrationArn!: pulumi.Output<string | undefined>;

    /**
     * Create a ServicePrincipalName resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServicePrincipalNameArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["connectorArn"] = args ? args.connectorArn : undefined;
            resourceInputs["directoryRegistrationArn"] = args ? args.directoryRegistrationArn : undefined;
        } else {
            resourceInputs["connectorArn"] = undefined /*out*/;
            resourceInputs["directoryRegistrationArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["connectorArn", "directoryRegistrationArn"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ServicePrincipalName.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServicePrincipalName resource.
 */
export interface ServicePrincipalNameArgs {
    connectorArn?: pulumi.Input<string>;
    directoryRegistrationArn?: pulumi.Input<string>;
}
