// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export class Integration extends pulumi.CustomResource {
    /**
     * Get an existing Integration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Integration {
        return new Integration(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:apigatewayv2:Integration';

    /**
     * Returns true if the given object is an instance of Integration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Integration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Integration.__pulumiType;
    }

    /**
     * The API identifier.
     */
    public readonly apiId!: pulumi.Output<string>;
    /**
     * The ID of the VPC link for a private integration. Supported only for HTTP APIs.
     */
    public readonly connectionId!: pulumi.Output<string | undefined>;
    /**
     * The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.
     */
    public readonly connectionType!: pulumi.Output<string | undefined>;
    /**
     * Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT.
     */
    public readonly contentHandlingStrategy!: pulumi.Output<string | undefined>;
    /**
     * Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, don't specify this parameter.
     */
    public readonly credentialsArn!: pulumi.Output<string | undefined>;
    /**
     * The description of the integration.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The integration ID.
     */
    public /*out*/ readonly integrationId!: pulumi.Output<string>;
    /**
     * Specifies the integration's HTTP method type.
     */
    public readonly integrationMethod!: pulumi.Output<string | undefined>;
    /**
     * Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS service action to invoke.
     */
    public readonly integrationSubtype!: pulumi.Output<string | undefined>;
    /**
     * The integration type of an integration.
     */
    public readonly integrationType!: pulumi.Output<string>;
    /**
     * For a Lambda integration, specify the URI of a Lambda function. For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
     */
    public readonly integrationUri!: pulumi.Output<string | undefined>;
    /**
     * Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
     */
    public readonly passthroughBehavior!: pulumi.Output<string | undefined>;
    /**
     * Specifies the format of the payload sent to an integration. Required for HTTP APIs. For HTTP APIs, supported values for Lambda proxy integrations are 1.0 and 2.0 For all other integrations, 1.0 is the only supported value.
     */
    public readonly payloadFormatVersion!: pulumi.Output<string | undefined>;
    /**
     * A key-value map specifying parameters.
     */
    public readonly requestParameters!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
     */
    public readonly requestTemplates!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Parameters that transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
     */
    public readonly responseParameters!: pulumi.Output<{[key: string]: outputs.apigatewayv2.IntegrationResponseParameterMap} | undefined>;
    /**
     * The template selection expression for the integration. Supported only for WebSocket APIs.
     */
    public readonly templateSelectionExpression!: pulumi.Output<string | undefined>;
    /**
     * Custom timeout between 50 and 29000 milliseconds for WebSocket APIs and between 50 and 30000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
     */
    public readonly timeoutInMillis!: pulumi.Output<number | undefined>;
    /**
     * The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
     */
    public readonly tlsConfig!: pulumi.Output<outputs.apigatewayv2.IntegrationTlsConfig | undefined>;

    /**
     * Create a Integration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.apiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            if ((!args || args.integrationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationType'");
            }
            resourceInputs["apiId"] = args ? args.apiId : undefined;
            resourceInputs["connectionId"] = args ? args.connectionId : undefined;
            resourceInputs["connectionType"] = args ? args.connectionType : undefined;
            resourceInputs["contentHandlingStrategy"] = args ? args.contentHandlingStrategy : undefined;
            resourceInputs["credentialsArn"] = args ? args.credentialsArn : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["integrationMethod"] = args ? args.integrationMethod : undefined;
            resourceInputs["integrationSubtype"] = args ? args.integrationSubtype : undefined;
            resourceInputs["integrationType"] = args ? args.integrationType : undefined;
            resourceInputs["integrationUri"] = args ? args.integrationUri : undefined;
            resourceInputs["passthroughBehavior"] = args ? args.passthroughBehavior : undefined;
            resourceInputs["payloadFormatVersion"] = args ? args.payloadFormatVersion : undefined;
            resourceInputs["requestParameters"] = args ? args.requestParameters : undefined;
            resourceInputs["requestTemplates"] = args ? args.requestTemplates : undefined;
            resourceInputs["responseParameters"] = args ? args.responseParameters : undefined;
            resourceInputs["templateSelectionExpression"] = args ? args.templateSelectionExpression : undefined;
            resourceInputs["timeoutInMillis"] = args ? args.timeoutInMillis : undefined;
            resourceInputs["tlsConfig"] = args ? args.tlsConfig : undefined;
            resourceInputs["integrationId"] = undefined /*out*/;
        } else {
            resourceInputs["apiId"] = undefined /*out*/;
            resourceInputs["connectionId"] = undefined /*out*/;
            resourceInputs["connectionType"] = undefined /*out*/;
            resourceInputs["contentHandlingStrategy"] = undefined /*out*/;
            resourceInputs["credentialsArn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["integrationId"] = undefined /*out*/;
            resourceInputs["integrationMethod"] = undefined /*out*/;
            resourceInputs["integrationSubtype"] = undefined /*out*/;
            resourceInputs["integrationType"] = undefined /*out*/;
            resourceInputs["integrationUri"] = undefined /*out*/;
            resourceInputs["passthroughBehavior"] = undefined /*out*/;
            resourceInputs["payloadFormatVersion"] = undefined /*out*/;
            resourceInputs["requestParameters"] = undefined /*out*/;
            resourceInputs["requestTemplates"] = undefined /*out*/;
            resourceInputs["responseParameters"] = undefined /*out*/;
            resourceInputs["templateSelectionExpression"] = undefined /*out*/;
            resourceInputs["timeoutInMillis"] = undefined /*out*/;
            resourceInputs["tlsConfig"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["apiId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Integration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Integration resource.
 */
export interface IntegrationArgs {
    /**
     * The API identifier.
     */
    apiId: pulumi.Input<string>;
    /**
     * The ID of the VPC link for a private integration. Supported only for HTTP APIs.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.
     */
    connectionType?: pulumi.Input<string>;
    /**
     * Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT.
     */
    contentHandlingStrategy?: pulumi.Input<string>;
    /**
     * Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, don't specify this parameter.
     */
    credentialsArn?: pulumi.Input<string>;
    /**
     * The description of the integration.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the integration's HTTP method type.
     */
    integrationMethod?: pulumi.Input<string>;
    /**
     * Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS service action to invoke.
     */
    integrationSubtype?: pulumi.Input<string>;
    /**
     * The integration type of an integration.
     */
    integrationType: pulumi.Input<string>;
    /**
     * For a Lambda integration, specify the URI of a Lambda function. For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
     */
    integrationUri?: pulumi.Input<string>;
    /**
     * Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
     */
    passthroughBehavior?: pulumi.Input<string>;
    /**
     * Specifies the format of the payload sent to an integration. Required for HTTP APIs. For HTTP APIs, supported values for Lambda proxy integrations are 1.0 and 2.0 For all other integrations, 1.0 is the only supported value.
     */
    payloadFormatVersion?: pulumi.Input<string>;
    /**
     * A key-value map specifying parameters.
     */
    requestParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
     */
    requestTemplates?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Parameters that transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
     */
    responseParameters?: pulumi.Input<{[key: string]: pulumi.Input<inputs.apigatewayv2.IntegrationResponseParameterMapArgs>}>;
    /**
     * The template selection expression for the integration. Supported only for WebSocket APIs.
     */
    templateSelectionExpression?: pulumi.Input<string>;
    /**
     * Custom timeout between 50 and 29000 milliseconds for WebSocket APIs and between 50 and 30000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
     */
    timeoutInMillis?: pulumi.Input<number>;
    /**
     * The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
     */
    tlsConfig?: pulumi.Input<inputs.apigatewayv2.IntegrationTlsConfigArgs>;
}
