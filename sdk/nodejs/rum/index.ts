// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AppMonitorArgs } from "./appMonitor";
export type AppMonitor = import("./appMonitor").AppMonitor;
export const AppMonitor: typeof import("./appMonitor").AppMonitor = null as any;

export { GetAppMonitorArgs, GetAppMonitorResult, GetAppMonitorOutputArgs } from "./getAppMonitor";
export const getAppMonitor: typeof import("./getAppMonitor").getAppMonitor = null as any;
export const getAppMonitorOutput: typeof import("./getAppMonitor").getAppMonitorOutput = null as any;

utilities.lazyLoad(exports, ["AppMonitor"], () => require("./appMonitor"));
utilities.lazyLoad(exports, ["getAppMonitor","getAppMonitorOutput"], () => require("./getAppMonitor"));

// Export enums:
export * from "../types/enums/rum";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:rum:AppMonitor":
                return new AppMonitor(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "rum", _module)
