// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::RUM::AppMonitor
 */
export function getAppMonitor(args: GetAppMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetAppMonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:rum:getAppMonitor", {
        "name": args.name,
    }, opts);
}

export interface GetAppMonitorArgs {
    /**
     * A name for the app monitor
     */
    name: string;
}

export interface GetAppMonitorResult {
    readonly appMonitorConfiguration?: outputs.rum.AppMonitorConfiguration;
    /**
     * Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter specifies whether RUM sends a copy of this telemetry data to CWLlong in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur CWLlong charges. If you omit this parameter, the default is false
     */
    readonly cwLogEnabled?: boolean;
    /**
     * The top-level internet domain name for which your application has administrative authority.
     */
    readonly domain?: string;
    readonly tags?: outputs.rum.AppMonitorTag[];
}
/**
 * Resource Type definition for AWS::RUM::AppMonitor
 */
export function getAppMonitorOutput(args: GetAppMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppMonitorResult> {
    return pulumi.output(args).apply((a: any) => getAppMonitor(a, opts))
}

export interface GetAppMonitorOutputArgs {
    /**
     * A name for the app monitor
     */
    name: pulumi.Input<string>;
}
