// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::SecurityHub::DelegatedAdmin resource represents the AWS Security Hub delegated admin account in your organization. One delegated admin resource is allowed to create for the organization in each region in which you configure the AdminAccountId.
 */
export function getDelegatedAdmin(args: GetDelegatedAdminArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegatedAdminResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:securityhub:getDelegatedAdmin", {
        "delegatedAdminIdentifier": args.delegatedAdminIdentifier,
    }, opts);
}

export interface GetDelegatedAdminArgs {
    /**
     * The identifier of the DelegatedAdmin being created and assigned as the unique identifier
     */
    delegatedAdminIdentifier: string;
}

export interface GetDelegatedAdminResult {
    /**
     * The identifier of the DelegatedAdmin being created and assigned as the unique identifier
     */
    readonly delegatedAdminIdentifier?: string;
    /**
     * The current status of the Security Hub administrator account. Indicates whether the account is currently enabled as a Security Hub administrator
     */
    readonly status?: enums.securityhub.DelegatedAdminStatus;
}
/**
 * The AWS::SecurityHub::DelegatedAdmin resource represents the AWS Security Hub delegated admin account in your organization. One delegated admin resource is allowed to create for the organization in each region in which you configure the AdminAccountId.
 */
export function getDelegatedAdminOutput(args: GetDelegatedAdminOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegatedAdminResult> {
    return pulumi.output(args).apply((a: any) => getDelegatedAdmin(a, opts))
}

export interface GetDelegatedAdminOutputArgs {
    /**
     * The identifier of the DelegatedAdmin being created and assigned as the unique identifier
     */
    delegatedAdminIdentifier: pulumi.Input<string>;
}
