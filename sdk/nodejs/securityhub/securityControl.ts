// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A security control in Security Hub describes a security best practice related to a specific resource.
 */
export class SecurityControl extends pulumi.CustomResource {
    /**
     * Get an existing SecurityControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityControl {
        return new SecurityControl(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:securityhub:SecurityControl';

    /**
     * Returns true if the given object is an instance of SecurityControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityControl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityControl.__pulumiType;
    }

    /**
     * The most recent reason for updating the customizable properties of a security control. This differs from the UpdateReason field of the BatchUpdateStandardsControlAssociations API, which tracks the reason for updating the enablement status of a control. This field accepts alphanumeric characters in addition to white spaces, dashes, and underscores.
     */
    public readonly lastUpdateReason!: pulumi.Output<string | undefined>;
    /**
     * An object that identifies the name of a control parameter, its current value, and whether it has been customized.
     */
    public readonly parameters!: pulumi.Output<{[key: string]: outputs.securityhub.SecurityControlParameterConfiguration}>;
    /**
     * The Amazon Resource Name (ARN) for a security control across standards, such as `arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1`. This parameter doesn't mention a specific standard.
     */
    public readonly securityControlArn!: pulumi.Output<string | undefined>;
    /**
     * The unique identifier of a security control across standards. Values for this field typically consist of an AWS service name and a number, such as APIGateway.3.
     */
    public readonly securityControlId!: pulumi.Output<string | undefined>;

    /**
     * Create a SecurityControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityControlArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.parameters === undefined && !opts.urn) {
                throw new Error("Missing required property 'parameters'");
            }
            resourceInputs["lastUpdateReason"] = args?.lastUpdateReason;
            resourceInputs["parameters"] = args?.parameters;
            resourceInputs["securityControlArn"] = args?.securityControlArn;
            resourceInputs["securityControlId"] = args?.securityControlId;
        } else {
            resourceInputs["lastUpdateReason"] = undefined /*out*/;
            resourceInputs["parameters"] = undefined /*out*/;
            resourceInputs["securityControlArn"] = undefined /*out*/;
            resourceInputs["securityControlId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["securityControlId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(SecurityControl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SecurityControl resource.
 */
export interface SecurityControlArgs {
    /**
     * The most recent reason for updating the customizable properties of a security control. This differs from the UpdateReason field of the BatchUpdateStandardsControlAssociations API, which tracks the reason for updating the enablement status of a control. This field accepts alphanumeric characters in addition to white spaces, dashes, and underscores.
     */
    lastUpdateReason?: pulumi.Input<string>;
    /**
     * An object that identifies the name of a control parameter, its current value, and whether it has been customized.
     */
    parameters: pulumi.Input<{[key: string]: pulumi.Input<inputs.securityhub.SecurityControlParameterConfigurationArgs>}>;
    /**
     * The Amazon Resource Name (ARN) for a security control across standards, such as `arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1`. This parameter doesn't mention a specific standard.
     */
    securityControlArn?: pulumi.Input<string>;
    /**
     * The unique identifier of a security control across standards. Values for this field typically consist of an AWS service name and a number, such as APIGateway.3.
     */
    securityControlId?: pulumi.Input<string>;
}
