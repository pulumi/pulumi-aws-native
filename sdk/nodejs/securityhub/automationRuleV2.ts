// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::SecurityHub::AutomationRuleV2
 */
export class AutomationRuleV2 extends pulumi.CustomResource {
    /**
     * Get an existing AutomationRuleV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AutomationRuleV2 {
        return new AutomationRuleV2(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:securityhub:AutomationRuleV2';

    /**
     * Returns true if the given object is an instance of AutomationRuleV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutomationRuleV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutomationRuleV2.__pulumiType;
    }

    /**
     * A list of actions to be performed when the rule criteria is met
     */
    public readonly actions!: pulumi.Output<outputs.securityhub.AutomationRuleV2AutomationRulesActionV2[]>;
    /**
     * The timestamp when the V2 automation rule was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The filtering type and configuration of the automation rule.
     */
    public readonly criteria!: pulumi.Output<outputs.securityhub.AutomationRuleV2Criteria>;
    /**
     * A description of the automation rule
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The ARN of the automation rule
     */
    public /*out*/ readonly ruleArn!: pulumi.Output<string>;
    /**
     * The ID of the automation rule
     */
    public /*out*/ readonly ruleId!: pulumi.Output<string>;
    /**
     * The name of the automation rule
     */
    public readonly ruleName!: pulumi.Output<string>;
    /**
     * The value for the rule priority
     */
    public readonly ruleOrder!: pulumi.Output<number>;
    /**
     * The status of the automation rule
     */
    public readonly ruleStatus!: pulumi.Output<enums.securityhub.AutomationRuleV2RuleStatus | undefined>;
    /**
     * A list of key-value pairs associated with the V2 automation rule.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The timestamp when the V2 automation rule was updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a AutomationRuleV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutomationRuleV2Args, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.actions === undefined && !opts.urn) {
                throw new Error("Missing required property 'actions'");
            }
            if (args?.criteria === undefined && !opts.urn) {
                throw new Error("Missing required property 'criteria'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.ruleName === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            if (args?.ruleOrder === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleOrder'");
            }
            resourceInputs["actions"] = args?.actions;
            resourceInputs["criteria"] = args?.criteria;
            resourceInputs["description"] = args?.description;
            resourceInputs["ruleName"] = args?.ruleName;
            resourceInputs["ruleOrder"] = args?.ruleOrder;
            resourceInputs["ruleStatus"] = args?.ruleStatus;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["ruleArn"] = undefined /*out*/;
            resourceInputs["ruleId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["actions"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["criteria"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["ruleArn"] = undefined /*out*/;
            resourceInputs["ruleId"] = undefined /*out*/;
            resourceInputs["ruleName"] = undefined /*out*/;
            resourceInputs["ruleOrder"] = undefined /*out*/;
            resourceInputs["ruleStatus"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutomationRuleV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AutomationRuleV2 resource.
 */
export interface AutomationRuleV2Args {
    /**
     * A list of actions to be performed when the rule criteria is met
     */
    actions: pulumi.Input<pulumi.Input<inputs.securityhub.AutomationRuleV2AutomationRulesActionV2Args>[]>;
    /**
     * The filtering type and configuration of the automation rule.
     */
    criteria: pulumi.Input<inputs.securityhub.AutomationRuleV2CriteriaArgs>;
    /**
     * A description of the automation rule
     */
    description: pulumi.Input<string>;
    /**
     * The name of the automation rule
     */
    ruleName: pulumi.Input<string>;
    /**
     * The value for the rule priority
     */
    ruleOrder: pulumi.Input<number>;
    /**
     * The status of the automation rule
     */
    ruleStatus?: pulumi.Input<enums.securityhub.AutomationRuleV2RuleStatus>;
    /**
     * A list of key-value pairs associated with the V2 automation rule.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
