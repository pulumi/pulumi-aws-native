// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::SecurityHub::Hub resource represents the implementation of the AWS Security Hub service in your account. One hub resource is created for each Region in which you enable Security Hub.
 */
export class Hub extends pulumi.CustomResource {
    /**
     * Get an existing Hub resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Hub {
        return new Hub(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:securityhub:Hub';

    /**
     * Returns true if the given object is an instance of Hub.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Hub {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Hub.__pulumiType;
    }

    /**
     * An ARN is automatically created for the customer.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Whether to automatically enable new controls when they are added to standards that are enabled
     */
    public readonly autoEnableControls!: pulumi.Output<boolean | undefined>;
    /**
     * This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
     */
    public readonly controlFindingGenerator!: pulumi.Output<string | undefined>;
    /**
     * Whether to enable the security standards that Security Hub has designated as automatically enabled.
     */
    public readonly enableDefaultStandards!: pulumi.Output<boolean | undefined>;
    /**
     * The date and time when Security Hub was enabled in the account.
     */
    public /*out*/ readonly subscribedAt!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.securityhub.HubTags | undefined>;

    /**
     * Create a Hub resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HubArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["autoEnableControls"] = args ? args.autoEnableControls : undefined;
            resourceInputs["controlFindingGenerator"] = args ? args.controlFindingGenerator : undefined;
            resourceInputs["enableDefaultStandards"] = args ? args.enableDefaultStandards : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["subscribedAt"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["autoEnableControls"] = undefined /*out*/;
            resourceInputs["controlFindingGenerator"] = undefined /*out*/;
            resourceInputs["enableDefaultStandards"] = undefined /*out*/;
            resourceInputs["subscribedAt"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Hub.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Hub resource.
 */
export interface HubArgs {
    /**
     * Whether to automatically enable new controls when they are added to standards that are enabled
     */
    autoEnableControls?: pulumi.Input<boolean>;
    /**
     * This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
     */
    controlFindingGenerator?: pulumi.Input<string>;
    /**
     * Whether to enable the security standards that Security Hub has designated as automatically enabled.
     */
    enableDefaultStandards?: pulumi.Input<boolean>;
    tags?: pulumi.Input<inputs.securityhub.HubTagsArgs>;
}
