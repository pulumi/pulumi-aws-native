// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The ``AWS::SecurityHub::FindingAggregator`` resource enables cross-Region aggregation. When cross-Region aggregation is enabled, you can aggregate findings, finding updates, insights, control compliance statuses, and security scores from one or more linked Regions to a single aggregation Region. You can then view and manage all of this data from the aggregation Region. For more details about cross-Region aggregation, see [Cross-Region aggregation](https://docs.aws.amazon.com/securityhub/latest/userguide/finding-aggregation.html) in the *User Guide*
 *  This resource must be created in the Region that you want to designate as your aggregation Region.
 *  Cross-Region aggregation is also a prerequisite for using [central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html) in ASH.
 */
export class FindingAggregator extends pulumi.CustomResource {
    /**
     * Get an existing FindingAggregator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FindingAggregator {
        return new FindingAggregator(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:securityhub:FindingAggregator';

    /**
     * Returns true if the given object is an instance of FindingAggregator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FindingAggregator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FindingAggregator.__pulumiType;
    }

    /**
     * The home Region. Findings generated in linked Regions are replicated and sent to the home Region.
     */
    public /*out*/ readonly findingAggregationRegion!: pulumi.Output<string>;
    /**
     * The ARN of the finding aggregator. You use the finding aggregator ARN to retrieve details for, update, and delete the finding aggregator.
     */
    public /*out*/ readonly findingAggregatorArn!: pulumi.Output<string>;
    /**
     * Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
     *  The selected option also determines how to use the Regions provided in the Regions list.
     *  In CFN, the options for this property are as follows:
     *   +  ``ALL_REGIONS`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
     *   +  ``ALL_REGIONS_EXCEPT_SPECIFIED`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the ``Regions`` parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
     *   +  ``SPECIFIED_REGIONS`` - Indicates to aggregate findings only from the Regions listed in the ``Regions`` parameter. Security Hub does not automatically aggregate findings from new Regions.
     */
    public readonly regionLinkingMode!: pulumi.Output<enums.securityhub.FindingAggregatorRegionLinkingMode>;
    /**
     * If ``RegionLinkingMode`` is ``ALL_REGIONS_EXCEPT_SPECIFIED``, then this is a space-separated list of Regions that do not aggregate findings to the aggregation Region.
     *  If ``RegionLinkingMode`` is ``SPECIFIED_REGIONS``, then this is a space-separated list of Regions that do aggregate findings to the aggregation Region.
     */
    public readonly regions!: pulumi.Output<string[] | undefined>;

    /**
     * Create a FindingAggregator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FindingAggregatorArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.regionLinkingMode === undefined && !opts.urn) {
                throw new Error("Missing required property 'regionLinkingMode'");
            }
            resourceInputs["regionLinkingMode"] = args?.regionLinkingMode;
            resourceInputs["regions"] = args?.regions;
            resourceInputs["findingAggregationRegion"] = undefined /*out*/;
            resourceInputs["findingAggregatorArn"] = undefined /*out*/;
        } else {
            resourceInputs["findingAggregationRegion"] = undefined /*out*/;
            resourceInputs["findingAggregatorArn"] = undefined /*out*/;
            resourceInputs["regionLinkingMode"] = undefined /*out*/;
            resourceInputs["regions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FindingAggregator.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a FindingAggregator resource.
 */
export interface FindingAggregatorArgs {
    /**
     * Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
     *  The selected option also determines how to use the Regions provided in the Regions list.
     *  In CFN, the options for this property are as follows:
     *   +  ``ALL_REGIONS`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
     *   +  ``ALL_REGIONS_EXCEPT_SPECIFIED`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the ``Regions`` parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
     *   +  ``SPECIFIED_REGIONS`` - Indicates to aggregate findings only from the Regions listed in the ``Regions`` parameter. Security Hub does not automatically aggregate findings from new Regions.
     */
    regionLinkingMode: pulumi.Input<enums.securityhub.FindingAggregatorRegionLinkingMode>;
    /**
     * If ``RegionLinkingMode`` is ``ALL_REGIONS_EXCEPT_SPECIFIED``, then this is a space-separated list of Regions that do not aggregate findings to the aggregation Region.
     *  If ``RegionLinkingMode`` is ``SPECIFIED_REGIONS``, then this is a space-separated list of Regions that do aggregate findings to the aggregation Region.
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
}
