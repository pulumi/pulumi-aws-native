// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::SecurityHub::OrganizationConfiguration resource represents the configuration of your organization in Security Hub. Only the Security Hub administrator account can create Organization Configuration resource in each region and can opt-in to Central Configuration only in the aggregation region of FindingAggregator.
 */
export class OrganizationConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OrganizationConfiguration {
        return new OrganizationConfiguration(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:securityhub:OrganizationConfiguration';

    /**
     * Returns true if the given object is an instance of OrganizationConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationConfiguration.__pulumiType;
    }

    /**
     * Whether to automatically enable Security Hub in new member accounts when they join the organization.
     */
    public readonly autoEnable!: pulumi.Output<boolean>;
    /**
     * Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
     */
    public readonly autoEnableStandards!: pulumi.Output<enums.securityhub.OrganizationConfigurationAutoEnableStandards | undefined>;
    /**
     * Indicates whether the organization uses local or central configuration.
     */
    public readonly configurationType!: pulumi.Output<enums.securityhub.OrganizationConfigurationConfigurationType | undefined>;
    /**
     * Whether the maximum number of allowed member accounts are already associated with the Security Hub administrator account.
     */
    public /*out*/ readonly memberAccountLimitReached!: pulumi.Output<boolean>;
    /**
     * The identifier of the OrganizationConfiguration being created and assigned as the unique identifier.
     */
    public /*out*/ readonly organizationConfigurationIdentifier!: pulumi.Output<string>;
    /**
     * Describes whether central configuration could be enabled as the ConfigurationType for the organization.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.securityhub.OrganizationConfigurationStatus>;
    /**
     * Provides an explanation if the value of Status is equal to FAILED when ConfigurationType is equal to CENTRAL.
     */
    public /*out*/ readonly statusMessage!: pulumi.Output<string>;

    /**
     * Create a OrganizationConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationConfigurationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.autoEnable === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoEnable'");
            }
            resourceInputs["autoEnable"] = args ? args.autoEnable : undefined;
            resourceInputs["autoEnableStandards"] = args ? args.autoEnableStandards : undefined;
            resourceInputs["configurationType"] = args ? args.configurationType : undefined;
            resourceInputs["memberAccountLimitReached"] = undefined /*out*/;
            resourceInputs["organizationConfigurationIdentifier"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
        } else {
            resourceInputs["autoEnable"] = undefined /*out*/;
            resourceInputs["autoEnableStandards"] = undefined /*out*/;
            resourceInputs["configurationType"] = undefined /*out*/;
            resourceInputs["memberAccountLimitReached"] = undefined /*out*/;
            resourceInputs["organizationConfigurationIdentifier"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a OrganizationConfiguration resource.
 */
export interface OrganizationConfigurationArgs {
    /**
     * Whether to automatically enable Security Hub in new member accounts when they join the organization.
     */
    autoEnable: pulumi.Input<boolean>;
    /**
     * Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
     */
    autoEnableStandards?: pulumi.Input<enums.securityhub.OrganizationConfigurationAutoEnableStandards>;
    /**
     * Indicates whether the organization uses local or central configuration.
     */
    configurationType?: pulumi.Input<enums.securityhub.OrganizationConfigurationConfigurationType>;
}
