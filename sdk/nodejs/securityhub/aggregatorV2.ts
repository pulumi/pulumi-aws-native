// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::SecurityHub::AggregatorV2 resource represents the AWS Security Hub AggregatorV2 in your account. One aggregatorv2 resource is created for each account in non opt-in region in which you configure region linking mode.
 */
export class AggregatorV2 extends pulumi.CustomResource {
    /**
     * Get an existing AggregatorV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AggregatorV2 {
        return new AggregatorV2(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:securityhub:AggregatorV2';

    /**
     * Returns true if the given object is an instance of AggregatorV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AggregatorV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AggregatorV2.__pulumiType;
    }

    /**
     * The aggregation Region of the AggregatorV2
     */
    public /*out*/ readonly aggregationRegion!: pulumi.Output<string>;
    /**
     * The ARN of the AggregatorV2 being created and assigned as the unique identifier
     */
    public /*out*/ readonly aggregatorV2Arn!: pulumi.Output<string>;
    /**
     * The list of included Regions
     */
    public readonly linkedRegions!: pulumi.Output<string[]>;
    /**
     * Indicates to link a list of included Regions
     */
    public readonly regionLinkingMode!: pulumi.Output<enums.securityhub.AggregatorV2RegionLinkingMode>;
    /**
     * A list of key-value pairs to be applied to the AggregatorV2.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a AggregatorV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AggregatorV2Args, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.linkedRegions === undefined && !opts.urn) {
                throw new Error("Missing required property 'linkedRegions'");
            }
            if (args?.regionLinkingMode === undefined && !opts.urn) {
                throw new Error("Missing required property 'regionLinkingMode'");
            }
            resourceInputs["linkedRegions"] = args?.linkedRegions;
            resourceInputs["regionLinkingMode"] = args?.regionLinkingMode;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["aggregationRegion"] = undefined /*out*/;
            resourceInputs["aggregatorV2Arn"] = undefined /*out*/;
        } else {
            resourceInputs["aggregationRegion"] = undefined /*out*/;
            resourceInputs["aggregatorV2Arn"] = undefined /*out*/;
            resourceInputs["linkedRegions"] = undefined /*out*/;
            resourceInputs["regionLinkingMode"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AggregatorV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AggregatorV2 resource.
 */
export interface AggregatorV2Args {
    /**
     * The list of included Regions
     */
    linkedRegions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates to link a list of included Regions
     */
    regionLinkingMode: pulumi.Input<enums.securityhub.AggregatorV2RegionLinkingMode>;
    /**
     * A list of key-value pairs to be applied to the AggregatorV2.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
