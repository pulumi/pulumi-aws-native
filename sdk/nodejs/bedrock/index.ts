// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AgentArgs } from "./agent";
export type Agent = import("./agent").Agent;
export const Agent: typeof import("./agent").Agent = null as any;
utilities.lazyLoad(exports, ["Agent"], () => require("./agent"));

export { AgentAliasArgs } from "./agentAlias";
export type AgentAlias = import("./agentAlias").AgentAlias;
export const AgentAlias: typeof import("./agentAlias").AgentAlias = null as any;
utilities.lazyLoad(exports, ["AgentAlias"], () => require("./agentAlias"));

export { DataSourceArgs } from "./dataSource";
export type DataSource = import("./dataSource").DataSource;
export const DataSource: typeof import("./dataSource").DataSource = null as any;
utilities.lazyLoad(exports, ["DataSource"], () => require("./dataSource"));

export { GetAgentArgs, GetAgentResult, GetAgentOutputArgs } from "./getAgent";
export const getAgent: typeof import("./getAgent").getAgent = null as any;
export const getAgentOutput: typeof import("./getAgent").getAgentOutput = null as any;
utilities.lazyLoad(exports, ["getAgent","getAgentOutput"], () => require("./getAgent"));

export { GetAgentAliasArgs, GetAgentAliasResult, GetAgentAliasOutputArgs } from "./getAgentAlias";
export const getAgentAlias: typeof import("./getAgentAlias").getAgentAlias = null as any;
export const getAgentAliasOutput: typeof import("./getAgentAlias").getAgentAliasOutput = null as any;
utilities.lazyLoad(exports, ["getAgentAlias","getAgentAliasOutput"], () => require("./getAgentAlias"));

export { GetDataSourceArgs, GetDataSourceResult, GetDataSourceOutputArgs } from "./getDataSource";
export const getDataSource: typeof import("./getDataSource").getDataSource = null as any;
export const getDataSourceOutput: typeof import("./getDataSource").getDataSourceOutput = null as any;
utilities.lazyLoad(exports, ["getDataSource","getDataSourceOutput"], () => require("./getDataSource"));

export { GetKnowledgeBaseArgs, GetKnowledgeBaseResult, GetKnowledgeBaseOutputArgs } from "./getKnowledgeBase";
export const getKnowledgeBase: typeof import("./getKnowledgeBase").getKnowledgeBase = null as any;
export const getKnowledgeBaseOutput: typeof import("./getKnowledgeBase").getKnowledgeBaseOutput = null as any;
utilities.lazyLoad(exports, ["getKnowledgeBase","getKnowledgeBaseOutput"], () => require("./getKnowledgeBase"));

export { KnowledgeBaseArgs } from "./knowledgeBase";
export type KnowledgeBase = import("./knowledgeBase").KnowledgeBase;
export const KnowledgeBase: typeof import("./knowledgeBase").KnowledgeBase = null as any;
utilities.lazyLoad(exports, ["KnowledgeBase"], () => require("./knowledgeBase"));


// Export enums:
export * from "../types/enums/bedrock";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:bedrock:Agent":
                return new Agent(name, <any>undefined, { urn })
            case "aws-native:bedrock:AgentAlias":
                return new AgentAlias(name, <any>undefined, { urn })
            case "aws-native:bedrock:DataSource":
                return new DataSource(name, <any>undefined, { urn })
            case "aws-native:bedrock:KnowledgeBase":
                return new KnowledgeBase(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "bedrock", _module)
