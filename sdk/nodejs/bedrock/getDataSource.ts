// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Bedrock::DataSource Resource Type
 */
export function getDataSource(args: GetDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:bedrock:getDataSource", {
        "dataSourceId": args.dataSourceId,
        "knowledgeBaseId": args.knowledgeBaseId,
    }, opts);
}

export interface GetDataSourceArgs {
    /**
     * Identifier for a resource.
     */
    dataSourceId: string;
    /**
     * The unique identifier of the knowledge base to which to add the data source.
     */
    knowledgeBaseId: string;
}

export interface GetDataSourceResult {
    /**
     * The time at which the data source was created.
     */
    readonly createdAt?: string;
    /**
     * The data deletion policy for a data source.
     */
    readonly dataDeletionPolicy?: enums.bedrock.DataSourceDataDeletionPolicy;
    /**
     * Contains details about how a data source is stored.
     */
    readonly dataSourceConfiguration?: outputs.bedrock.DataSourceConfiguration;
    /**
     * Identifier for a resource.
     */
    readonly dataSourceId?: string;
    /**
     * The status of the data source. The following statuses are possible:
     *
     * - Available – The data source has been created and is ready for ingestion into the knowledge base.
     * - Deleting – The data source is being deleted.
     */
    readonly dataSourceStatus?: enums.bedrock.DataSourceStatus;
    /**
     * Description of the Resource.
     */
    readonly description?: string;
    /**
     * The details of the failure reasons related to the data source.
     */
    readonly failureReasons?: string[];
    /**
     * The name of the data source.
     */
    readonly name?: string;
    /**
     * Contains the configuration for server-side encryption.
     */
    readonly serverSideEncryptionConfiguration?: outputs.bedrock.DataSourceServerSideEncryptionConfiguration;
    /**
     * The time at which the knowledge base was last updated.
     */
    readonly updatedAt?: string;
}
/**
 * Definition of AWS::Bedrock::DataSource Resource Type
 */
export function getDataSourceOutput(args: GetDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getDataSource(a, opts))
}

export interface GetDataSourceOutputArgs {
    /**
     * Identifier for a resource.
     */
    dataSourceId: pulumi.Input<string>;
    /**
     * The unique identifier of the knowledge base to which to add the data source.
     */
    knowledgeBaseId: pulumi.Input<string>;
}
