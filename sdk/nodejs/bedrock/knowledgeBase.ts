// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Bedrock::KnowledgeBase Resource Type
 */
export class KnowledgeBase extends pulumi.CustomResource {
    /**
     * Get an existing KnowledgeBase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KnowledgeBase {
        return new KnowledgeBase(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:bedrock:KnowledgeBase';

    /**
     * Returns true if the given object is an instance of KnowledgeBase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KnowledgeBase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KnowledgeBase.__pulumiType;
    }

    /**
     * The time at which the knowledge base was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Description of the Resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A list of reasons that the API operation on the knowledge base failed.
     */
    public /*out*/ readonly failureReasons!: pulumi.Output<string[]>;
    /**
     * The ARN of the knowledge base.
     */
    public /*out*/ readonly knowledgeBaseArn!: pulumi.Output<string>;
    /**
     * Contains details about the embeddings configuration of the knowledge base.
     */
    public readonly knowledgeBaseConfiguration!: pulumi.Output<outputs.bedrock.KnowledgeBaseConfiguration>;
    /**
     * The unique identifier of the knowledge base.
     */
    public /*out*/ readonly knowledgeBaseId!: pulumi.Output<string>;
    /**
     * The name of the knowledge base.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * The status of the knowledge base.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.bedrock.KnowledgeBaseStatus>;
    /**
     * Contains details about the storage configuration of the knowledge base.
     */
    public readonly storageConfiguration!: pulumi.Output<outputs.bedrock.KnowledgeBaseStorageConfiguration | undefined>;
    /**
     * Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
     *
     * - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
     * - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The time at which the knowledge base was last updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a KnowledgeBase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KnowledgeBaseArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.knowledgeBaseConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'knowledgeBaseConfiguration'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["knowledgeBaseConfiguration"] = args ? args.knowledgeBaseConfiguration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["storageConfiguration"] = args ? args.storageConfiguration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["failureReasons"] = undefined /*out*/;
            resourceInputs["knowledgeBaseArn"] = undefined /*out*/;
            resourceInputs["knowledgeBaseId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["failureReasons"] = undefined /*out*/;
            resourceInputs["knowledgeBaseArn"] = undefined /*out*/;
            resourceInputs["knowledgeBaseConfiguration"] = undefined /*out*/;
            resourceInputs["knowledgeBaseId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storageConfiguration"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["knowledgeBaseConfiguration.kendraKnowledgeBaseConfiguration", "knowledgeBaseConfiguration.sqlKnowledgeBaseConfiguration.redshiftConfiguration.queryEngineConfiguration", "knowledgeBaseConfiguration.sqlKnowledgeBaseConfiguration.redshiftConfiguration.storageConfigurations[*]", "knowledgeBaseConfiguration.sqlKnowledgeBaseConfiguration.type", "knowledgeBaseConfiguration.type", "knowledgeBaseConfiguration.vectorKnowledgeBaseConfiguration", "storageConfiguration"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(KnowledgeBase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a KnowledgeBase resource.
 */
export interface KnowledgeBaseArgs {
    /**
     * Description of the Resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Contains details about the embeddings configuration of the knowledge base.
     */
    knowledgeBaseConfiguration: pulumi.Input<inputs.bedrock.KnowledgeBaseConfigurationArgs>;
    /**
     * The name of the knowledge base.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
     */
    roleArn: pulumi.Input<string>;
    /**
     * Contains details about the storage configuration of the knowledge base.
     */
    storageConfiguration?: pulumi.Input<inputs.bedrock.KnowledgeBaseStorageConfigurationArgs>;
    /**
     * Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
     *
     * - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
     * - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
