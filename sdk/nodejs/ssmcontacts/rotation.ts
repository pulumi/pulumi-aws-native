// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SSMContacts::Rotation.
 */
export class Rotation extends pulumi.CustomResource {
    /**
     * Get an existing Rotation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Rotation {
        return new Rotation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ssmcontacts:Rotation';

    /**
     * Returns true if the given object is an instance of Rotation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Rotation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Rotation.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the rotation.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Members of the rotation
     */
    public readonly contactIds!: pulumi.Output<string[]>;
    /**
     * Name of the Rotation
     */
    public readonly name!: pulumi.Output<string>;
    public readonly recurrence!: pulumi.Output<outputs.ssmcontacts.RotationRecurrenceSettings>;
    /**
     * Start time of the first shift of Oncall Schedule
     */
    public readonly startTime!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.ssmcontacts.RotationTag[] | undefined>;
    /**
     * TimeZone Identifier for the Oncall Schedule
     */
    public readonly timeZoneId!: pulumi.Output<string>;

    /**
     * Create a Rotation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RotationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.contactIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contactIds'");
            }
            if ((!args || args.recurrence === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recurrence'");
            }
            if ((!args || args.startTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            if ((!args || args.timeZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeZoneId'");
            }
            resourceInputs["contactIds"] = args ? args.contactIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recurrence"] = args ? args.recurrence : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeZoneId"] = args ? args.timeZoneId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["contactIds"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["recurrence"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["timeZoneId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Rotation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Rotation resource.
 */
export interface RotationArgs {
    /**
     * Members of the rotation
     */
    contactIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Rotation
     */
    name?: pulumi.Input<string>;
    recurrence: pulumi.Input<inputs.ssmcontacts.RotationRecurrenceSettingsArgs>;
    /**
     * Start time of the first shift of Oncall Schedule
     */
    startTime: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ssmcontacts.RotationTagArgs>[]>;
    /**
     * TimeZone Identifier for the Oncall Schedule
     */
    timeZoneId: pulumi.Input<string>;
}
