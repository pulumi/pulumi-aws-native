// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::IoTSiteWise::Gateway
 */
export function getGateway(args: GetGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:iotsitewise:getGateway", {
        "gatewayId": args.gatewayId,
    }, opts);
}

export interface GetGatewayArgs {
    /**
     * The ID of the gateway device.
     */
    gatewayId: string;
}

export interface GetGatewayResult {
    /**
     * A list of gateway capability summaries that each contain a namespace and status.
     */
    readonly gatewayCapabilitySummaries?: outputs.iotsitewise.GatewayCapabilitySummary[];
    /**
     * The ID of the gateway device.
     */
    readonly gatewayId?: string;
    /**
     * A unique, friendly name for the gateway.
     */
    readonly gatewayName?: string;
    /**
     * A list of key-value pairs that contain metadata for the gateway.
     */
    readonly tags?: outputs.iotsitewise.GatewayTag[];
}

export function getGatewayOutput(args: GetGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayResult> {
    return pulumi.output(args).apply(a => getGateway(a, opts))
}

export interface GetGatewayOutputArgs {
    /**
     * The ID of the gateway device.
     */
    gatewayId: pulumi.Input<string>;
}
