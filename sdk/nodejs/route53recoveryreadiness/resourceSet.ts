// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Schema for the AWS Route53 Recovery Readiness ResourceSet Resource and API.
 */
export class ResourceSet extends pulumi.CustomResource {
    /**
     * Get an existing ResourceSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourceSet {
        return new ResourceSet(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:route53recoveryreadiness:ResourceSet';

    /**
     * Returns true if the given object is an instance of ResourceSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceSet.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the resource set.
     */
    public /*out*/ readonly resourceSetArn!: pulumi.Output<string>;
    /**
     * The name of the resource set to create.
     */
    public readonly resourceSetName!: pulumi.Output<string>;
    /**
     * The resource type of the resources in the resource set. Enter one of the following values for resource type: 
     *
     * AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
     */
    public readonly resourceSetType!: pulumi.Output<string>;
    /**
     * A list of resource objects in the resource set.
     */
    public readonly resources!: pulumi.Output<outputs.route53recoveryreadiness.ResourceSetResource[]>;
    /**
     * A tag to associate with the parameters for a resource set.
     */
    public readonly tags!: pulumi.Output<outputs.route53recoveryreadiness.ResourceSetTag[] | undefined>;

    /**
     * Create a ResourceSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceSetArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceSetName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceSetName'");
            }
            if ((!args || args.resourceSetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceSetType'");
            }
            if ((!args || args.resources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resources'");
            }
            inputs["resourceSetName"] = args ? args.resourceSetName : undefined;
            inputs["resourceSetType"] = args ? args.resourceSetType : undefined;
            inputs["resources"] = args ? args.resources : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["resourceSetArn"] = undefined /*out*/;
        } else {
            inputs["resourceSetArn"] = undefined /*out*/;
            inputs["resourceSetName"] = undefined /*out*/;
            inputs["resourceSetType"] = undefined /*out*/;
            inputs["resources"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ResourceSet.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ResourceSet resource.
 */
export interface ResourceSetArgs {
    /**
     * The name of the resource set to create.
     */
    resourceSetName: pulumi.Input<string>;
    /**
     * The resource type of the resources in the resource set. Enter one of the following values for resource type: 
     *
     * AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
     */
    resourceSetType: pulumi.Input<string>;
    /**
     * A list of resource objects in the resource set.
     */
    resources: pulumi.Input<pulumi.Input<inputs.route53recoveryreadiness.ResourceSetResourceArgs>[]>;
    /**
     * A tag to associate with the parameters for a resource set.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.route53recoveryreadiness.ResourceSetTagArgs>[]>;
}
