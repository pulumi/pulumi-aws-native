// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::DataSync::LocationSMB.
 */
export function getLocationSmb(args: GetLocationSmbArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationSmbResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:datasync:getLocationSmb", {
        "locationArn": args.locationArn,
    }, opts);
}

export interface GetLocationSmbArgs {
    /**
     * The Amazon Resource Name (ARN) of the SMB location that is created.
     */
    locationArn: string;
}

export interface GetLocationSmbResult {
    /**
     * The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
     */
    readonly agentArns?: string[];
    /**
     * The authentication mode used to determine identity of user.
     */
    readonly authenticationType?: enums.datasync.LocationSmbAuthenticationType;
    /**
     * Specifies the IPv4 addresses for the DNS servers that your SMB file server belongs to. This parameter applies only if AuthenticationType is set to KERBEROS. If you have multiple domains in your environment, configuring this parameter makes sure that DataSync connects to the right SMB file server.
     */
    readonly dnsIpAddresses?: string[];
    /**
     * The name of the Windows domain that the SMB server belongs to.
     */
    readonly domain?: string;
    /**
     * Specifies a service principal name (SPN), which is an identity in your Kerberos realm that has permission to access the files, folders, and file metadata in your SMB file server. SPNs are case sensitive and must include a prepended cifs/. For example, an SPN might look like cifs/kerberosuser@EXAMPLE.COM. Your task execution will fail if the SPN that you provide for this parameter doesn't match exactly what's in your keytab or krb5.conf files.
     */
    readonly kerberosPrincipal?: string;
    /**
     * The Amazon Resource Name (ARN) of the SMB location that is created.
     */
    readonly locationArn?: string;
    /**
     * The URL of the SMB location that was described.
     */
    readonly locationUri?: string;
    /**
     * Specifies the version of the SMB protocol that DataSync uses to access your SMB file server.
     */
    readonly mountOptions?: outputs.datasync.LocationSmbMountOptions;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The user who can mount the share, has the permissions to access files and folders in the SMB share.
     */
    readonly user?: string;
}
/**
 * Resource schema for AWS::DataSync::LocationSMB.
 */
export function getLocationSmbOutput(args: GetLocationSmbOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLocationSmbResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:datasync:getLocationSmb", {
        "locationArn": args.locationArn,
    }, opts);
}

export interface GetLocationSmbOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the SMB location that is created.
     */
    locationArn: pulumi.Input<string>;
}
