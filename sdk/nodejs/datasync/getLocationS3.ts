// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::DataSync::LocationS3
 */
export function getLocationS3(args: GetLocationS3Args, opts?: pulumi.InvokeOptions): Promise<GetLocationS3Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:datasync:getLocationS3", {
        "locationArn": args.locationArn,
    }, opts);
}

export interface GetLocationS3Args {
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket location.
     */
    locationArn: string;
}

export interface GetLocationS3Result {
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket location.
     */
    readonly locationArn?: string;
    /**
     * The URL of the S3 location that was described.
     */
    readonly locationUri?: string;
    /**
     * The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that is used to access an Amazon S3 bucket.
     *
     * For detailed information about using such a role, see [Creating a Location for Amazon S3](https://docs.aws.amazon.com/datasync/latest/userguide/working-with-locations.html#create-s3-location) in the *AWS DataSync User Guide* .
     */
    readonly s3Config?: outputs.datasync.LocationS3s3Config;
    /**
     * The Amazon S3 storage class you want to store your files in when this location is used as a task destination.
     */
    readonly s3StorageClass?: enums.datasync.LocationS3S3StorageClass;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource schema for AWS::DataSync::LocationS3
 */
export function getLocationS3Output(args: GetLocationS3OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLocationS3Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:datasync:getLocationS3", {
        "locationArn": args.locationArn,
    }, opts);
}

export interface GetLocationS3OutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket location.
     */
    locationArn: pulumi.Input<string>;
}
