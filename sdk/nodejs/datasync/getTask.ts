// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::DataSync::Task.
 */
export function getTask(args: GetTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetTaskResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:datasync:getTask", {
        "taskArn": args.taskArn,
    }, opts);
}

export interface GetTaskArgs {
    /**
     * The ARN of the task.
     */
    taskArn: string;
}

export interface GetTaskResult {
    /**
     * The ARN of the Amazon CloudWatch log group that is used to monitor and log events in the task.
     */
    readonly cloudWatchLogGroupArn?: string;
    readonly destinationNetworkInterfaceArns?: string[];
    /**
     * Errors that AWS DataSync encountered during execution of the task. You can use this error code to help troubleshoot issues.
     */
    readonly errorCode?: string;
    /**
     * Detailed description of an error that was encountered during the task execution.
     */
    readonly errorDetail?: string;
    readonly excludes?: outputs.datasync.TaskFilterRule[];
    readonly includes?: outputs.datasync.TaskFilterRule[];
    /**
     * The name of a task. This value is a text reference that is used to identify the task in the console.
     */
    readonly name?: string;
    readonly options?: outputs.datasync.TaskOptions;
    readonly schedule?: outputs.datasync.TaskSchedule;
    readonly sourceNetworkInterfaceArns?: string[];
    /**
     * The status of the task that was described.
     */
    readonly status?: enums.datasync.TaskStatus;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.datasync.TaskTag[];
    /**
     * The ARN of the task.
     */
    readonly taskArn?: string;
}

export function getTaskOutput(args: GetTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTaskResult> {
    return pulumi.output(args).apply(a => getTask(a, opts))
}

export interface GetTaskOutputArgs {
    /**
     * The ARN of the task.
     */
    taskArn: pulumi.Input<string>;
}
