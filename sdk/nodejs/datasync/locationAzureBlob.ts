// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::DataSync::LocationAzureBlob.
 */
export class LocationAzureBlob extends pulumi.CustomResource {
    /**
     * Get an existing LocationAzureBlob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocationAzureBlob {
        return new LocationAzureBlob(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:datasync:LocationAzureBlob';

    /**
     * Returns true if the given object is an instance of LocationAzureBlob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocationAzureBlob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocationAzureBlob.__pulumiType;
    }

    /**
     * Specifies the Amazon Resource Name (ARN) of the DataSync agent that can connect with your Azure Blob Storage container. If you are setting up an agentless cross-cloud transfer, you do not need to specify a value for this parameter.
     */
    public readonly agentArns!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
     */
    public readonly azureAccessTier!: pulumi.Output<enums.datasync.LocationAzureBlobAzureAccessTier | undefined>;
    /**
     * The specific authentication type that you want DataSync to use to access your Azure Blob Container.
     */
    public readonly azureBlobAuthenticationType!: pulumi.Output<enums.datasync.LocationAzureBlobAzureBlobAuthenticationType>;
    /**
     * The URL of the Azure Blob container that was described.
     */
    public readonly azureBlobContainerUrl!: pulumi.Output<string | undefined>;
    /**
     * Specifies the SAS configuration that allows DataSync to access your Azure Blob Storage.
     *
     * > If you provide an authentication token using `SasConfiguration` , but do not provide secret configuration details using `CmkSecretConfig` or `CustomSecretConfig` , then DataSync stores the token using your AWS account's secrets manager secret.
     */
    public readonly azureBlobSasConfiguration!: pulumi.Output<outputs.datasync.LocationAzureBlobAzureBlobSasConfiguration | undefined>;
    /**
     * Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
     */
    public readonly azureBlobType!: pulumi.Output<enums.datasync.LocationAzureBlobAzureBlobType | undefined>;
    /**
     * Specifies configuration information for a DataSync-managed secret, such as an authentication token or secret key that DataSync uses to access a specific storage location, with a customer-managed AWS KMS key .
     *
     * > You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
     */
    public readonly cmkSecretConfig!: pulumi.Output<outputs.datasync.LocationAzureBlobCmkSecretConfig | undefined>;
    /**
     * Specifies configuration information for a customer-managed Secrets Manager secret where a storage location authentication token or secret key is stored in plain text. This configuration includes the secret ARN, and the ARN for an IAM role that provides access to the secret.
     *
     * > You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
     */
    public readonly customSecretConfig!: pulumi.Output<outputs.datasync.LocationAzureBlobCustomSecretConfig | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
     */
    public /*out*/ readonly locationArn!: pulumi.Output<string>;
    /**
     * The URL of the Azure Blob Location that was described.
     */
    public /*out*/ readonly locationUri!: pulumi.Output<string>;
    public /*out*/ readonly managedSecretConfig!: pulumi.Output<outputs.datasync.LocationAzureBlobManagedSecretConfig>;
    /**
     * The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
     */
    public readonly subdirectory!: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a LocationAzureBlob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationAzureBlobArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.azureBlobAuthenticationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'azureBlobAuthenticationType'");
            }
            resourceInputs["agentArns"] = args?.agentArns;
            resourceInputs["azureAccessTier"] = args?.azureAccessTier;
            resourceInputs["azureBlobAuthenticationType"] = args?.azureBlobAuthenticationType;
            resourceInputs["azureBlobContainerUrl"] = args?.azureBlobContainerUrl;
            resourceInputs["azureBlobSasConfiguration"] = args?.azureBlobSasConfiguration;
            resourceInputs["azureBlobType"] = args?.azureBlobType;
            resourceInputs["cmkSecretConfig"] = args?.cmkSecretConfig;
            resourceInputs["customSecretConfig"] = args?.customSecretConfig;
            resourceInputs["subdirectory"] = args?.subdirectory;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["locationArn"] = undefined /*out*/;
            resourceInputs["locationUri"] = undefined /*out*/;
            resourceInputs["managedSecretConfig"] = undefined /*out*/;
        } else {
            resourceInputs["agentArns"] = undefined /*out*/;
            resourceInputs["azureAccessTier"] = undefined /*out*/;
            resourceInputs["azureBlobAuthenticationType"] = undefined /*out*/;
            resourceInputs["azureBlobContainerUrl"] = undefined /*out*/;
            resourceInputs["azureBlobSasConfiguration"] = undefined /*out*/;
            resourceInputs["azureBlobType"] = undefined /*out*/;
            resourceInputs["cmkSecretConfig"] = undefined /*out*/;
            resourceInputs["customSecretConfig"] = undefined /*out*/;
            resourceInputs["locationArn"] = undefined /*out*/;
            resourceInputs["locationUri"] = undefined /*out*/;
            resourceInputs["managedSecretConfig"] = undefined /*out*/;
            resourceInputs["subdirectory"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["azureBlobContainerUrl"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(LocationAzureBlob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LocationAzureBlob resource.
 */
export interface LocationAzureBlobArgs {
    /**
     * Specifies the Amazon Resource Name (ARN) of the DataSync agent that can connect with your Azure Blob Storage container. If you are setting up an agentless cross-cloud transfer, you do not need to specify a value for this parameter.
     */
    agentArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
     */
    azureAccessTier?: pulumi.Input<enums.datasync.LocationAzureBlobAzureAccessTier>;
    /**
     * The specific authentication type that you want DataSync to use to access your Azure Blob Container.
     */
    azureBlobAuthenticationType: pulumi.Input<enums.datasync.LocationAzureBlobAzureBlobAuthenticationType>;
    /**
     * The URL of the Azure Blob container that was described.
     */
    azureBlobContainerUrl?: pulumi.Input<string>;
    /**
     * Specifies the SAS configuration that allows DataSync to access your Azure Blob Storage.
     *
     * > If you provide an authentication token using `SasConfiguration` , but do not provide secret configuration details using `CmkSecretConfig` or `CustomSecretConfig` , then DataSync stores the token using your AWS account's secrets manager secret.
     */
    azureBlobSasConfiguration?: pulumi.Input<inputs.datasync.LocationAzureBlobAzureBlobSasConfigurationArgs>;
    /**
     * Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
     */
    azureBlobType?: pulumi.Input<enums.datasync.LocationAzureBlobAzureBlobType>;
    /**
     * Specifies configuration information for a DataSync-managed secret, such as an authentication token or secret key that DataSync uses to access a specific storage location, with a customer-managed AWS KMS key .
     *
     * > You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
     */
    cmkSecretConfig?: pulumi.Input<inputs.datasync.LocationAzureBlobCmkSecretConfigArgs>;
    /**
     * Specifies configuration information for a customer-managed Secrets Manager secret where a storage location authentication token or secret key is stored in plain text. This configuration includes the secret ARN, and the ARN for an IAM role that provides access to the secret.
     *
     * > You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
     */
    customSecretConfig?: pulumi.Input<inputs.datasync.LocationAzureBlobCustomSecretConfigArgs>;
    /**
     * The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
     */
    subdirectory?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
