// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::DataSync::LocationEFS.
 */
export class LocationEfs extends pulumi.CustomResource {
    /**
     * Get an existing LocationEfs resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocationEfs {
        return new LocationEfs(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:datasync:LocationEfs';

    /**
     * Returns true if the given object is an instance of LocationEfs.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocationEfs {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocationEfs.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
     */
    public readonly accessPointArn!: pulumi.Output<string | undefined>;
    public readonly ec2Config!: pulumi.Output<outputs.datasync.LocationEfsEc2Config>;
    /**
     * The Amazon Resource Name (ARN) for the Amazon EFS file system.
     */
    public readonly efsFilesystemArn!: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
     */
    public readonly fileSystemAccessRoleArn!: pulumi.Output<string | undefined>;
    /**
     * Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
     */
    public readonly inTransitEncryption!: pulumi.Output<enums.datasync.LocationEfsInTransitEncryption | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon EFS file system location that is created.
     */
    public /*out*/ readonly locationArn!: pulumi.Output<string>;
    /**
     * The URL of the EFS location that was described.
     */
    public /*out*/ readonly locationUri!: pulumi.Output<string>;
    /**
     * A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
     */
    public readonly subdirectory!: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.datasync.LocationEfsTag[] | undefined>;

    /**
     * Create a LocationEfs resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationEfsArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.ec2Config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ec2Config'");
            }
            resourceInputs["accessPointArn"] = args ? args.accessPointArn : undefined;
            resourceInputs["ec2Config"] = args ? args.ec2Config : undefined;
            resourceInputs["efsFilesystemArn"] = args ? args.efsFilesystemArn : undefined;
            resourceInputs["fileSystemAccessRoleArn"] = args ? args.fileSystemAccessRoleArn : undefined;
            resourceInputs["inTransitEncryption"] = args ? args.inTransitEncryption : undefined;
            resourceInputs["subdirectory"] = args ? args.subdirectory : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["locationArn"] = undefined /*out*/;
            resourceInputs["locationUri"] = undefined /*out*/;
        } else {
            resourceInputs["accessPointArn"] = undefined /*out*/;
            resourceInputs["ec2Config"] = undefined /*out*/;
            resourceInputs["efsFilesystemArn"] = undefined /*out*/;
            resourceInputs["fileSystemAccessRoleArn"] = undefined /*out*/;
            resourceInputs["inTransitEncryption"] = undefined /*out*/;
            resourceInputs["locationArn"] = undefined /*out*/;
            resourceInputs["locationUri"] = undefined /*out*/;
            resourceInputs["subdirectory"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["accessPointArn", "ec2Config", "efsFilesystemArn", "fileSystemAccessRoleArn", "inTransitEncryption", "subdirectory"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(LocationEfs.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LocationEfs resource.
 */
export interface LocationEfsArgs {
    /**
     * The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
     */
    accessPointArn?: pulumi.Input<string>;
    ec2Config: pulumi.Input<inputs.datasync.LocationEfsEc2ConfigArgs>;
    /**
     * The Amazon Resource Name (ARN) for the Amazon EFS file system.
     */
    efsFilesystemArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
     */
    fileSystemAccessRoleArn?: pulumi.Input<string>;
    /**
     * Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
     */
    inTransitEncryption?: pulumi.Input<enums.datasync.LocationEfsInTransitEncryption>;
    /**
     * A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
     */
    subdirectory?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.datasync.LocationEfsTagArgs>[]>;
}
