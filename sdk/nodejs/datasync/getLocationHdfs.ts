// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::DataSync::LocationHDFS.
 */
export function getLocationHdfs(args: GetLocationHdfsArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationHdfsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:datasync:getLocationHdfs", {
        "locationArn": args.locationArn,
    }, opts);
}

export interface GetLocationHdfsArgs {
    /**
     * The Amazon Resource Name (ARN) of the HDFS location.
     */
    locationArn: string;
}

export interface GetLocationHdfsResult {
    /**
     * ARN(s) of the agent(s) to use for an HDFS location.
     */
    readonly agentArns?: string[];
    /**
     * The authentication mode used to determine identity of user.
     */
    readonly authenticationType?: enums.datasync.LocationHdfsAuthenticationType;
    /**
     * Size of chunks (blocks) in bytes that the data is divided into when stored in the HDFS cluster.
     */
    readonly blockSize?: number;
    /**
     * The unique identity, or principal, to which Kerberos can assign tickets.
     */
    readonly kerberosPrincipal?: string;
    /**
     * The identifier for the Key Management Server where the encryption keys that encrypt data inside HDFS clusters are stored.
     */
    readonly kmsKeyProviderUri?: string;
    /**
     * The Amazon Resource Name (ARN) of the HDFS location.
     */
    readonly locationArn?: string;
    /**
     * The URL of the HDFS location that was described.
     */
    readonly locationUri?: string;
    /**
     * An array of Name Node(s) of the HDFS location.
     */
    readonly nameNodes?: outputs.datasync.LocationHdfsNameNode[];
    readonly qopConfiguration?: outputs.datasync.LocationHdfsQopConfiguration;
    /**
     * Number of copies of each block that exists inside the HDFS cluster.
     */
    readonly replicationFactor?: number;
    /**
     * The user name that has read and write permissions on the specified HDFS cluster.
     */
    readonly simpleUser?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.datasync.LocationHdfsTag[];
}
/**
 * Resource schema for AWS::DataSync::LocationHDFS.
 */
export function getLocationHdfsOutput(args: GetLocationHdfsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationHdfsResult> {
    return pulumi.output(args).apply((a: any) => getLocationHdfs(a, opts))
}

export interface GetLocationHdfsOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the HDFS location.
     */
    locationArn: pulumi.Input<string>;
}
