// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::DataSync::LocationAzureBlob.
 */
export function getLocationAzureBlob(args: GetLocationAzureBlobArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationAzureBlobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:datasync:getLocationAzureBlob", {
        "locationArn": args.locationArn,
    }, opts);
}

export interface GetLocationAzureBlobArgs {
    /**
     * The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
     */
    locationArn: string;
}

export interface GetLocationAzureBlobResult {
    /**
     * Specifies the Amazon Resource Name (ARN) of the DataSync agent that can connect with your Azure Blob Storage container. If you are setting up an agentless cross-cloud transfer, you do not need to specify a value for this parameter.
     */
    readonly agentArns?: string[];
    /**
     * Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
     */
    readonly azureAccessTier?: enums.datasync.LocationAzureBlobAzureAccessTier;
    /**
     * The specific authentication type that you want DataSync to use to access your Azure Blob Container.
     */
    readonly azureBlobAuthenticationType?: enums.datasync.LocationAzureBlobAzureBlobAuthenticationType;
    /**
     * Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
     */
    readonly azureBlobType?: enums.datasync.LocationAzureBlobAzureBlobType;
    /**
     * Specifies configuration information for a DataSync-managed secret, such as an authentication token or secret key that DataSync uses to access a specific storage location, with a customer-managed AWS KMS key .
     *
     * > You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
     */
    readonly cmkSecretConfig?: outputs.datasync.LocationAzureBlobCmkSecretConfig;
    /**
     * Specifies configuration information for a customer-managed Secrets Manager secret where a storage location authentication token or secret key is stored in plain text. This configuration includes the secret ARN, and the ARN for an IAM role that provides access to the secret.
     *
     * > You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
     */
    readonly customSecretConfig?: outputs.datasync.LocationAzureBlobCustomSecretConfig;
    /**
     * The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
     */
    readonly locationArn?: string;
    /**
     * The URL of the Azure Blob Location that was described.
     */
    readonly locationUri?: string;
    readonly managedSecretConfig?: outputs.datasync.LocationAzureBlobManagedSecretConfig;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::DataSync::LocationAzureBlob.
 */
export function getLocationAzureBlobOutput(args: GetLocationAzureBlobOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLocationAzureBlobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:datasync:getLocationAzureBlob", {
        "locationArn": args.locationArn,
    }, opts);
}

export interface GetLocationAzureBlobOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
     */
    locationArn: pulumi.Input<string>;
}
