// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::DLM::LifecyclePolicy
 */
export function getLifecyclePolicy(args: GetLifecyclePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetLifecyclePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:dlm:getLifecyclePolicy", {
        "id": args.id,
    }, opts);
}

export interface GetLifecyclePolicyArgs {
    id: string;
}

export interface GetLifecyclePolicyResult {
    readonly arn?: string;
    readonly copyTags?: boolean;
    readonly createInterval?: number;
    readonly crossRegionCopyTargets?: outputs.dlm.LifecyclePolicyCrossRegionCopyTargets;
    readonly defaultPolicy?: string;
    readonly description?: string;
    readonly exclusions?: outputs.dlm.LifecyclePolicyExclusions;
    readonly executionRoleArn?: string;
    readonly extendDeletion?: boolean;
    readonly id?: string;
    readonly policyDetails?: outputs.dlm.LifecyclePolicyPolicyDetails;
    readonly retainInterval?: number;
    readonly state?: string;
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::DLM::LifecyclePolicy
 */
export function getLifecyclePolicyOutput(args: GetLifecyclePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLifecyclePolicyResult> {
    return pulumi.output(args).apply((a: any) => getLifecyclePolicy(a, opts))
}

export interface GetLifecyclePolicyOutputArgs {
    id: pulumi.Input<string>;
}
