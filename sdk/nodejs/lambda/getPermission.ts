// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Lambda::Permission
 */
export function getPermission(args: GetPermissionArgs, opts?: pulumi.InvokeOptions): Promise<GetPermissionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:lambda:getPermission", {
        "functionName": args.functionName,
        "id": args.id,
    }, opts);
}

export interface GetPermissionArgs {
    /**
     * The name of the Lambda function, version, or alias.
     */
    functionName: string;
    /**
     * A statement identifier that differentiates the statement from others in the same policy.
     */
    id: string;
}

export interface GetPermissionResult {
    /**
     * A statement identifier that differentiates the statement from others in the same policy.
     */
    readonly id?: string;
}
/**
 * Resource Type definition for AWS::Lambda::Permission
 */
export function getPermissionOutput(args: GetPermissionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPermissionResult> {
    return pulumi.output(args).apply((a: any) => getPermission(a, opts))
}

export interface GetPermissionOutputArgs {
    /**
     * The name of the Lambda function, version, or alias.
     */
    functionName: pulumi.Input<string>;
    /**
     * A statement identifier that differentiates the statement from others in the same policy.
     */
    id: pulumi.Input<string>;
}
