// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::GameLift::Alias resource creates an alias for an Amazon GameLift (GameLift) fleet destination.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const aliasResource = new aws_native.gamelift.Alias("aliasResource", {
 *     name: "MyTerminalAlias",
 *     description: "A terminal alias",
 *     routingStrategy: {
 *         type: aws_native.gamelift.AliasRoutingStrategyType.Terminal,
 *         message: "Terminal routing strategy message",
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const aliasResource = new aws_native.gamelift.Alias("aliasResource", {
 *     name: "MyTerminalAlias",
 *     description: "A terminal alias",
 *     routingStrategy: {
 *         type: aws_native.gamelift.AliasRoutingStrategyType.Terminal,
 *         message: "Terminal routing strategy message",
 *     },
 * });
 *
 * ```
 */
export class Alias extends pulumi.CustomResource {
    /**
     * Get an existing Alias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Alias {
        return new Alias(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:gamelift:Alias';

    /**
     * Returns true if the given object is an instance of Alias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Alias {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Alias.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift Alias resource and uniquely identifies it. ARNs are unique across all Regions. In a GameLift Alias ARN, the resource ID matches the AliasId value.
     */
    declare public /*out*/ readonly aliasArn: pulumi.Output<string>;
    /**
     * Unique alias ID
     */
    declare public /*out*/ readonly aliasId: pulumi.Output<string>;
    /**
     * A human-readable description of the alias.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * A descriptive label that is associated with an alias. Alias names do not need to be unique.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * A routing configuration that specifies where traffic is directed for this alias, such as to a fleet or to a message.
     */
    declare public readonly routingStrategy: pulumi.Output<outputs.gamelift.AliasRoutingStrategy>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a Alias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AliasArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.routingStrategy === undefined && !opts.urn) {
                throw new Error("Missing required property 'routingStrategy'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["routingStrategy"] = args?.routingStrategy;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["aliasArn"] = undefined /*out*/;
            resourceInputs["aliasId"] = undefined /*out*/;
        } else {
            resourceInputs["aliasArn"] = undefined /*out*/;
            resourceInputs["aliasId"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["routingStrategy"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Alias.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Alias resource.
 */
export interface AliasArgs {
    /**
     * A human-readable description of the alias.
     */
    description?: pulumi.Input<string>;
    /**
     * A descriptive label that is associated with an alias. Alias names do not need to be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * A routing configuration that specifies where traffic is directed for this alias, such as to a fleet or to a message.
     */
    routingStrategy: pulumi.Input<inputs.gamelift.AliasRoutingStrategyArgs>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
