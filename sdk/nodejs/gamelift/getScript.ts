// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::GameLift::Script resource creates a new script record for your Realtime Servers script. Realtime scripts are JavaScript that provide configuration settings and optional custom game logic for your game. The script is deployed when you create a Realtime Servers fleet to host your game sessions. Script logic is executed during an active game session.
 */
export function getScript(args: GetScriptArgs, opts?: pulumi.InvokeOptions): Promise<GetScriptResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:gamelift:getScript", {
        "id": args.id,
    }, opts);
}

export interface GetScriptArgs {
    /**
     * A unique identifier for the Realtime script
     */
    id: string;
}

export interface GetScriptResult {
    /**
     * The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift script resource and uniquely identifies it. ARNs are unique across all Regions. In a GameLift script ARN, the resource ID matches the Id value.
     */
    readonly arn?: string;
    /**
     * A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
     */
    readonly creationTime?: string;
    /**
     * A unique identifier for the Realtime script
     */
    readonly id?: string;
    /**
     * A descriptive label that is associated with a script. Script names do not need to be unique.
     */
    readonly name?: string;
    /**
     * The file size of the uploaded Realtime script, expressed in bytes. When files are uploaded from an S3 location, this value remains at "0".
     */
    readonly sizeOnDisk?: number;
    /**
     * The location of the Amazon S3 bucket where a zipped file containing your Realtime scripts is stored. The storage location must specify the Amazon S3 bucket name, the zip file name (the "key"), and a role ARN that allows Amazon GameLift to access the Amazon S3 storage location. The S3 bucket must be in the same Region where you want to create a new script. By default, Amazon GameLift uploads the latest version of the zip file; if you have S3 object versioning turned on, you can use the ObjectVersion parameter to specify an earlier version.
     */
    readonly storageLocation?: outputs.gamelift.ScriptS3Location;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.gamelift.ScriptTag[];
    /**
     * The version that is associated with a script. Version strings do not need to be unique.
     */
    readonly version?: string;
}
/**
 * The AWS::GameLift::Script resource creates a new script record for your Realtime Servers script. Realtime scripts are JavaScript that provide configuration settings and optional custom game logic for your game. The script is deployed when you create a Realtime Servers fleet to host your game sessions. Script logic is executed during an active game session.
 */
export function getScriptOutput(args: GetScriptOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScriptResult> {
    return pulumi.output(args).apply((a: any) => getScript(a, opts))
}

export interface GetScriptOutputArgs {
    /**
     * A unique identifier for the Realtime script
     */
    id: pulumi.Input<string>;
}
