// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::GameLift::MatchmakingConfiguration
 */
export function getMatchmakingConfiguration(args: GetMatchmakingConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetMatchmakingConfigurationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:gamelift:getMatchmakingConfiguration", {
        "id": args.id,
    }, opts);
}

export interface GetMatchmakingConfigurationArgs {
    id: string;
}

export interface GetMatchmakingConfigurationResult {
    readonly acceptanceRequired?: boolean;
    readonly acceptanceTimeoutSeconds?: number;
    readonly additionalPlayerCount?: number;
    readonly arn?: string;
    readonly backfillMode?: string;
    readonly customEventData?: string;
    readonly description?: string;
    readonly flexMatchMode?: string;
    readonly gameProperties?: outputs.gamelift.MatchmakingConfigurationGameProperty[];
    readonly gameSessionData?: string;
    readonly gameSessionQueueArns?: string[];
    readonly id?: string;
    readonly notificationTarget?: string;
    readonly requestTimeoutSeconds?: number;
    readonly ruleSetName?: string;
    readonly tags?: outputs.gamelift.MatchmakingConfigurationTag[];
}

export function getMatchmakingConfigurationOutput(args: GetMatchmakingConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMatchmakingConfigurationResult> {
    return pulumi.output(args).apply(a => getMatchmakingConfiguration(a, opts))
}

export interface GetMatchmakingConfigurationOutputArgs {
    id: pulumi.Input<string>;
}
