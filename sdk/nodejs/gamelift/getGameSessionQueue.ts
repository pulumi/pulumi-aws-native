// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::GameLift::GameSessionQueue
 */
export function getGameSessionQueue(args: GetGameSessionQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetGameSessionQueueResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:gamelift:getGameSessionQueue", {
        "id": args.id,
    }, opts);
}

export interface GetGameSessionQueueArgs {
    id: string;
}

export interface GetGameSessionQueueResult {
    readonly arn?: string;
    readonly customEventData?: string;
    readonly destinations?: outputs.gamelift.GameSessionQueueDestination[];
    readonly filterConfiguration?: outputs.gamelift.GameSessionQueueFilterConfiguration;
    readonly id?: string;
    readonly notificationTarget?: string;
    readonly playerLatencyPolicies?: outputs.gamelift.GameSessionQueuePlayerLatencyPolicy[];
    readonly priorityConfiguration?: outputs.gamelift.GameSessionQueuePriorityConfiguration;
    readonly tags?: outputs.gamelift.GameSessionQueueTag[];
    readonly timeoutInSeconds?: number;
}

export function getGameSessionQueueOutput(args: GetGameSessionQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGameSessionQueueResult> {
    return pulumi.output(args).apply(a => getGameSessionQueue(a, opts))
}

export interface GetGameSessionQueueOutputArgs {
    id: pulumi.Input<string>;
}
