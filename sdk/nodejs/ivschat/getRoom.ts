// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource type definition for AWS::IVSChat::Room.
 */
export function getRoom(args: GetRoomArgs, opts?: pulumi.InvokeOptions): Promise<GetRoomResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ivschat:getRoom", {
        "arn": args.arn,
    }, opts);
}

export interface GetRoomArgs {
    /**
     * Room ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn: string;
}

export interface GetRoomResult {
    /**
     * Room ARN is automatically generated on creation and assigned as the unique identifier.
     */
    readonly arn?: string;
    /**
     * The system-generated ID of the room.
     */
    readonly id?: string;
    /**
     * Array of logging configuration identifiers attached to the room.
     */
    readonly loggingConfigurationIdentifiers?: string[];
    /**
     * The maximum number of characters in a single message.
     */
    readonly maximumMessageLength?: number;
    /**
     * The maximum number of messages per second that can be sent to the room.
     */
    readonly maximumMessageRatePerSecond?: number;
    readonly messageReviewHandler?: outputs.ivschat.RoomMessageReviewHandler;
    /**
     * The name of the room. The value does not need to be unique.
     */
    readonly name?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource type definition for AWS::IVSChat::Room.
 */
export function getRoomOutput(args: GetRoomOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoomResult> {
    return pulumi.output(args).apply((a: any) => getRoom(a, opts))
}

export interface GetRoomOutputArgs {
    /**
     * Room ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn: pulumi.Input<string>;
}
