// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource type definition for AWS::IVSChat::LoggingConfiguration.
 */
export function getLoggingConfiguration(args: GetLoggingConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetLoggingConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ivschat:getLoggingConfiguration", {
        "arn": args.arn,
    }, opts);
}

export interface GetLoggingConfigurationArgs {
    /**
     * LoggingConfiguration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn: string;
}

export interface GetLoggingConfigurationResult {
    /**
     * LoggingConfiguration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    readonly arn?: string;
    readonly destinationConfiguration?: outputs.ivschat.LoggingConfigurationDestinationConfiguration;
    /**
     * The system-generated ID of the logging configuration.
     */
    readonly id?: string;
    /**
     * The name of the logging configuration. The value does not need to be unique.
     */
    readonly name?: string;
    /**
     * The state of the logging configuration. When the state is ACTIVE, the configuration is ready to log chat content.
     */
    readonly state?: enums.ivschat.LoggingConfigurationState;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.ivschat.LoggingConfigurationTag[];
}
/**
 * Resource type definition for AWS::IVSChat::LoggingConfiguration.
 */
export function getLoggingConfigurationOutput(args: GetLoggingConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoggingConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getLoggingConfiguration(a, opts))
}

export interface GetLoggingConfigurationOutputArgs {
    /**
     * LoggingConfiguration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn: pulumi.Input<string>;
}
