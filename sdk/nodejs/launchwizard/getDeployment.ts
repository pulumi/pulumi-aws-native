// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::LaunchWizard::Deployment Resource Type
 */
export function getDeployment(args: GetDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:launchwizard:getDeployment", {
        "arn": args.arn,
    }, opts);
}

export interface GetDeploymentArgs {
    /**
     * ARN of the LaunchWizard deployment
     */
    arn: string;
}

export interface GetDeploymentResult {
    /**
     * ARN of the LaunchWizard deployment
     */
    readonly arn?: string;
    /**
     * Timestamp of LaunchWizard deployment creation
     */
    readonly createdAt?: string;
    /**
     * Timestamp of LaunchWizard deployment deletion
     */
    readonly deletedAt?: string;
    /**
     * Deployment ID of the LaunchWizard deployment
     */
    readonly deploymentId?: string;
    /**
     * Resource Group Name created for LaunchWizard deployment
     */
    readonly resourceGroup?: string;
    /**
     * Status of LaunchWizard deployment
     */
    readonly status?: enums.launchwizard.DeploymentStatus;
    /**
     * Tags for LaunchWizard deployment
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Definition of AWS::LaunchWizard::Deployment Resource Type
 */
export function getDeploymentOutput(args: GetDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getDeployment(a, opts))
}

export interface GetDeploymentOutputArgs {
    /**
     * ARN of the LaunchWizard deployment
     */
    arn: pulumi.Input<string>;
}
