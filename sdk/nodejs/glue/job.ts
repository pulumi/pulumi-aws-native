// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Glue::Job
 */
export class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Job {
        return new Job(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:glue:Job';

    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Job {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }

    /**
     * The number of capacity units that are allocated to this job.
     */
    public readonly allocatedCapacity!: pulumi.Output<number | undefined>;
    /**
     * The code that executes a job.
     */
    public readonly command!: pulumi.Output<outputs.glue.JobCommand>;
    /**
     * Specifies the connections used by a job
     */
    public readonly connections!: pulumi.Output<outputs.glue.JobConnectionsList | undefined>;
    /**
     * The default arguments for this job, specified as name-value pairs.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
     */
    public readonly defaultArguments!: pulumi.Output<any | undefined>;
    /**
     * A description of the job.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the job is run with a standard or flexible execution class.
     */
    public readonly executionClass!: pulumi.Output<string | undefined>;
    /**
     * The maximum number of concurrent runs that are allowed for this job.
     */
    public readonly executionProperty!: pulumi.Output<outputs.glue.JobExecutionProperty | undefined>;
    /**
     * Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
     */
    public readonly glueVersion!: pulumi.Output<string | undefined>;
    /**
     * Property description not available.
     */
    public readonly jobMode!: pulumi.Output<string | undefined>;
    /**
     * Property description not available.
     */
    public readonly jobRunQueuingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * This field is reserved for future use.
     */
    public readonly logUri!: pulumi.Output<string | undefined>;
    /**
     * Property description not available.
     */
    public readonly maintenanceWindow!: pulumi.Output<string | undefined>;
    /**
     * The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
     */
    public readonly maxCapacity!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of times to retry this job after a JobRun fails
     */
    public readonly maxRetries!: pulumi.Output<number | undefined>;
    /**
     * The name you assign to the job definition
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Non-overridable arguments for this job, specified as name-value pairs.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
     */
    public readonly nonOverridableArguments!: pulumi.Output<any | undefined>;
    /**
     * Specifies configuration properties of a notification.
     */
    public readonly notificationProperty!: pulumi.Output<outputs.glue.JobNotificationProperty | undefined>;
    /**
     * The number of workers of a defined workerType that are allocated when a job runs.
     */
    public readonly numberOfWorkers!: pulumi.Output<number | undefined>;
    /**
     * The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * The name of the SecurityConfiguration structure to be used with this job.
     */
    public readonly securityConfiguration!: pulumi.Output<string | undefined>;
    /**
     * The tags to use with this job.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
     */
    public readonly tags!: pulumi.Output<any | undefined>;
    /**
     * The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * TThe type of predefined worker that is allocated when a job runs.
     */
    public readonly workerType!: pulumi.Output<enums.glue.JobWorkerType | undefined>;

    /**
     * Create a Job resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.command === undefined && !opts.urn) {
                throw new Error("Missing required property 'command'");
            }
            if (args?.role === undefined && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["allocatedCapacity"] = args?.allocatedCapacity;
            resourceInputs["command"] = args?.command;
            resourceInputs["connections"] = args?.connections;
            resourceInputs["defaultArguments"] = args?.defaultArguments;
            resourceInputs["description"] = args?.description;
            resourceInputs["executionClass"] = args?.executionClass;
            resourceInputs["executionProperty"] = args?.executionProperty;
            resourceInputs["glueVersion"] = args?.glueVersion;
            resourceInputs["jobMode"] = args?.jobMode;
            resourceInputs["jobRunQueuingEnabled"] = args?.jobRunQueuingEnabled;
            resourceInputs["logUri"] = args?.logUri;
            resourceInputs["maintenanceWindow"] = args?.maintenanceWindow;
            resourceInputs["maxCapacity"] = args?.maxCapacity;
            resourceInputs["maxRetries"] = args?.maxRetries;
            resourceInputs["name"] = args?.name;
            resourceInputs["nonOverridableArguments"] = args?.nonOverridableArguments;
            resourceInputs["notificationProperty"] = args?.notificationProperty;
            resourceInputs["numberOfWorkers"] = args?.numberOfWorkers;
            resourceInputs["role"] = args?.role;
            resourceInputs["securityConfiguration"] = args?.securityConfiguration;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["timeout"] = args?.timeout;
            resourceInputs["workerType"] = args?.workerType;
        } else {
            resourceInputs["allocatedCapacity"] = undefined /*out*/;
            resourceInputs["command"] = undefined /*out*/;
            resourceInputs["connections"] = undefined /*out*/;
            resourceInputs["defaultArguments"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["executionClass"] = undefined /*out*/;
            resourceInputs["executionProperty"] = undefined /*out*/;
            resourceInputs["glueVersion"] = undefined /*out*/;
            resourceInputs["jobMode"] = undefined /*out*/;
            resourceInputs["jobRunQueuingEnabled"] = undefined /*out*/;
            resourceInputs["logUri"] = undefined /*out*/;
            resourceInputs["maintenanceWindow"] = undefined /*out*/;
            resourceInputs["maxCapacity"] = undefined /*out*/;
            resourceInputs["maxRetries"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nonOverridableArguments"] = undefined /*out*/;
            resourceInputs["notificationProperty"] = undefined /*out*/;
            resourceInputs["numberOfWorkers"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["securityConfiguration"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["timeout"] = undefined /*out*/;
            resourceInputs["workerType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Job.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Job resource.
 */
export interface JobArgs {
    /**
     * The number of capacity units that are allocated to this job.
     */
    allocatedCapacity?: pulumi.Input<number>;
    /**
     * The code that executes a job.
     */
    command: pulumi.Input<inputs.glue.JobCommandArgs>;
    /**
     * Specifies the connections used by a job
     */
    connections?: pulumi.Input<inputs.glue.JobConnectionsListArgs>;
    /**
     * The default arguments for this job, specified as name-value pairs.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
     */
    defaultArguments?: any;
    /**
     * A description of the job.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the job is run with a standard or flexible execution class.
     */
    executionClass?: pulumi.Input<string>;
    /**
     * The maximum number of concurrent runs that are allowed for this job.
     */
    executionProperty?: pulumi.Input<inputs.glue.JobExecutionPropertyArgs>;
    /**
     * Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
     */
    glueVersion?: pulumi.Input<string>;
    /**
     * Property description not available.
     */
    jobMode?: pulumi.Input<string>;
    /**
     * Property description not available.
     */
    jobRunQueuingEnabled?: pulumi.Input<boolean>;
    /**
     * This field is reserved for future use.
     */
    logUri?: pulumi.Input<string>;
    /**
     * Property description not available.
     */
    maintenanceWindow?: pulumi.Input<string>;
    /**
     * The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
     */
    maxCapacity?: pulumi.Input<number>;
    /**
     * The maximum number of times to retry this job after a JobRun fails
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * The name you assign to the job definition
     */
    name?: pulumi.Input<string>;
    /**
     * Non-overridable arguments for this job, specified as name-value pairs.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
     */
    nonOverridableArguments?: any;
    /**
     * Specifies configuration properties of a notification.
     */
    notificationProperty?: pulumi.Input<inputs.glue.JobNotificationPropertyArgs>;
    /**
     * The number of workers of a defined workerType that are allocated when a job runs.
     */
    numberOfWorkers?: pulumi.Input<number>;
    /**
     * The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
     */
    role: pulumi.Input<string>;
    /**
     * The name of the SecurityConfiguration structure to be used with this job.
     */
    securityConfiguration?: pulumi.Input<string>;
    /**
     * The tags to use with this job.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
     */
    tags?: any;
    /**
     * The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
     */
    timeout?: pulumi.Input<number>;
    /**
     * TThe type of predefined worker that is allocated when a job runs.
     */
    workerType?: pulumi.Input<enums.glue.JobWorkerType>;
}
