// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Glue::Crawler
 */
export function getCrawler(args: GetCrawlerArgs, opts?: pulumi.InvokeOptions): Promise<GetCrawlerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:glue:getCrawler", {
        "name": args.name,
    }, opts);
}

export interface GetCrawlerArgs {
    /**
     * The name of the crawler.
     */
    name: string;
}

export interface GetCrawlerResult {
    /**
     * A list of UTF-8 strings that specify the names of custom classifiers that are associated with the crawler.
     */
    readonly classifiers?: string[];
    /**
     * Crawler configuration information. This versioned JSON string allows users to specify aspects of a crawler's behavior.
     */
    readonly configuration?: string;
    /**
     * The name of the SecurityConfiguration structure to be used by this crawler.
     */
    readonly crawlerSecurityConfiguration?: string;
    /**
     * The name of the database in which the crawler's output is stored.
     */
    readonly databaseName?: string;
    /**
     * A description of the crawler.
     */
    readonly description?: string;
    /**
     * Specifies whether the crawler should use AWS Lake Formation credentials for the crawler instead of the IAM role credentials.
     */
    readonly lakeFormationConfiguration?: outputs.glue.CrawlerLakeFormationConfiguration;
    /**
     * A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.
     */
    readonly recrawlPolicy?: outputs.glue.CrawlerRecrawlPolicy;
    /**
     * The Amazon Resource Name (ARN) of an IAM role that's used to access customer resources, such as Amazon Simple Storage Service (Amazon S3) data.
     */
    readonly role?: string;
    /**
     * For scheduled crawlers, the schedule when the crawler runs.
     */
    readonly schedule?: outputs.glue.CrawlerSchedule;
    /**
     * The policy that specifies update and delete behaviors for the crawler. The policy tells the crawler what to do in the event that it detects a change in a table that already exists in the customer's database at the time of the crawl. The `SchemaChangePolicy` does not affect whether or how new tables and partitions are added. New tables and partitions are always created regardless of the `SchemaChangePolicy` on a crawler.
     *
     * The SchemaChangePolicy consists of two components, `UpdateBehavior` and `DeleteBehavior` .
     */
    readonly schemaChangePolicy?: outputs.glue.CrawlerSchemaChangePolicy;
    /**
     * The prefix added to the names of tables that are created.
     */
    readonly tablePrefix?: string;
    /**
     * The tags to use with this crawler.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Crawler` for more information about the expected schema for this property.
     */
    readonly tags?: any;
    /**
     * A collection of targets to crawl.
     */
    readonly targets?: outputs.glue.CrawlerTargets;
}
/**
 * Resource Type definition for AWS::Glue::Crawler
 */
export function getCrawlerOutput(args: GetCrawlerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCrawlerResult> {
    return pulumi.output(args).apply((a: any) => getCrawler(a, opts))
}

export interface GetCrawlerOutputArgs {
    /**
     * The name of the crawler.
     */
    name: pulumi.Input<string>;
}
