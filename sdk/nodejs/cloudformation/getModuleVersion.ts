// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * A module that has been registered in the CloudFormation registry.
 */
export function getModuleVersion(args: GetModuleVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetModuleVersionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:cloudformation:getModuleVersion", {
        "arn": args.arn,
    }, opts);
}

export interface GetModuleVersionArgs {
    /**
     * The Amazon Resource Name (ARN) of the module.
     */
    arn: string;
}

export interface GetModuleVersionResult {
    /**
     * The Amazon Resource Name (ARN) of the module.
     */
    readonly arn?: string;
    /**
     * The description of the registered module.
     */
    readonly description?: string;
    /**
     * The URL of a page providing detailed documentation for this module.
     */
    readonly documentationUrl?: string;
    /**
     * Indicator of whether this module version is the current default version
     */
    readonly isDefaultVersion?: boolean;
    /**
     * The schema defining input parameters to and resources generated by the module.
     */
    readonly schema?: string;
    /**
     * The time that the specified module version was registered.
     */
    readonly timeCreated?: string;
    /**
     * The version ID of the module represented by this module instance.
     */
    readonly versionId?: string;
    /**
     * The scope at which the type is visible and usable in CloudFormation operations.
     *
     * The only allowed value at present is:
     *
     * PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
     */
    readonly visibility?: enums.cloudformation.ModuleVersionVisibility;
}

export function getModuleVersionOutput(args: GetModuleVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetModuleVersionResult> {
    return pulumi.output(args).apply(a => getModuleVersion(a, opts))
}

export interface GetModuleVersionOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the module.
     */
    arn: pulumi.Input<string>;
}
