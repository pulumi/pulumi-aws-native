// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Specifies the configuration data for a registered hook in CloudFormation Registry.
 */
export function getHookTypeConfig(args: GetHookTypeConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetHookTypeConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:cloudformation:getHookTypeConfig", {
        "configurationArn": args.configurationArn,
    }, opts);
}

export interface GetHookTypeConfigArgs {
    /**
     * The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     */
    configurationArn: string;
}

export interface GetHookTypeConfigResult {
    /**
     * The configuration data for the extension, in this account and region.
     */
    readonly configuration?: string;
    /**
     * The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     */
    readonly configurationArn?: string;
    /**
     * The Amazon Resource Name (ARN) of the type without version number.
     */
    readonly typeArn?: string;
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    readonly typeName?: string;
}

export function getHookTypeConfigOutput(args: GetHookTypeConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHookTypeConfigResult> {
    return pulumi.output(args).apply(a => getHookTypeConfig(a, opts))
}

export interface GetHookTypeConfigOutputArgs {
    /**
     * The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     */
    configurationArn: pulumi.Input<string>;
}
