// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Specifies the configuration data for a registered hook in CloudFormation Registry.
 */
export class HookTypeConfig extends pulumi.CustomResource {
    /**
     * Get an existing HookTypeConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HookTypeConfig {
        return new HookTypeConfig(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:cloudformation:HookTypeConfig';

    /**
     * Returns true if the given object is an instance of HookTypeConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HookTypeConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HookTypeConfig.__pulumiType;
    }

    /**
     * The configuration data for the extension, in this account and region.
     */
    public readonly configuration!: pulumi.Output<string | undefined>;
    /**
     * An alias by which to refer to this extension configuration data.
     */
    public readonly configurationAlias!: pulumi.Output<enums.cloudformation.HookTypeConfigConfigurationAlias | undefined>;
    /**
     * The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     */
    public /*out*/ readonly configurationArn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the type without version number.
     */
    public readonly typeArn!: pulumi.Output<string | undefined>;
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    public readonly typeName!: pulumi.Output<string | undefined>;

    /**
     * Create a HookTypeConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HookTypeConfigArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["configurationAlias"] = args ? args.configurationAlias : undefined;
            resourceInputs["typeArn"] = args ? args.typeArn : undefined;
            resourceInputs["typeName"] = args ? args.typeName : undefined;
            resourceInputs["configurationArn"] = undefined /*out*/;
        } else {
            resourceInputs["configuration"] = undefined /*out*/;
            resourceInputs["configurationAlias"] = undefined /*out*/;
            resourceInputs["configurationArn"] = undefined /*out*/;
            resourceInputs["typeArn"] = undefined /*out*/;
            resourceInputs["typeName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HookTypeConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a HookTypeConfig resource.
 */
export interface HookTypeConfigArgs {
    /**
     * The configuration data for the extension, in this account and region.
     */
    configuration?: pulumi.Input<string>;
    /**
     * An alias by which to refer to this extension configuration data.
     */
    configurationAlias?: pulumi.Input<enums.cloudformation.HookTypeConfigConfigurationAlias>;
    /**
     * The Amazon Resource Name (ARN) of the type without version number.
     */
    typeArn?: pulumi.Input<string>;
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    typeName?: pulumi.Input<string>;
}
