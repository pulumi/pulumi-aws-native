// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * A resource that has been registered in the CloudFormation Registry.
 */
export function getResourceVersion(args: GetResourceVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceVersionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:cloudformation:getResourceVersion", {
        "arn": args.arn,
    }, opts);
}

export interface GetResourceVersionArgs {
    /**
     * The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
     */
    arn: string;
}

export interface GetResourceVersionResult {
    /**
     * The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
     */
    readonly arn?: string;
    /**
     * Indicates if this type version is the current default version
     */
    readonly isDefaultVersion?: boolean;
    /**
     * The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.
     */
    readonly provisioningType?: enums.cloudformation.ResourceVersionProvisioningType;
    /**
     * The Amazon Resource Name (ARN) of the type without the versionID.
     */
    readonly typeArn?: string;
    /**
     * The ID of the version of the type represented by this resource instance.
     */
    readonly versionId?: string;
    /**
     * The scope at which the type is visible and usable in CloudFormation operations.
     *
     * Valid values include:
     *
     * PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
     *
     * PUBLIC: The type is publically visible and usable within any Amazon account.
     */
    readonly visibility?: enums.cloudformation.ResourceVersionVisibility;
}

export function getResourceVersionOutput(args: GetResourceVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceVersionResult> {
    return pulumi.output(args).apply(a => getResourceVersion(a, opts))
}

export interface GetResourceVersionOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
     */
    arn: pulumi.Input<string>;
}
