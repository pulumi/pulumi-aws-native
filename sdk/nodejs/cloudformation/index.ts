// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./customResource";
export * from "./getCustomResource";
export * from "./getHookDefaultVersion";
export * from "./getHookTypeConfig";
export * from "./getHookVersion";
export * from "./getMacro";
export * from "./getModuleVersion";
export * from "./getPublicTypeVersion";
export * from "./getPublisher";
export * from "./getResourceDefaultVersion";
export * from "./getResourceVersion";
export * from "./getStack";
export * from "./getStackSet";
export * from "./getTypeActivation";
export * from "./getWaitCondition";
export * from "./getWaitConditionHandle";
export * from "./hookDefaultVersion";
export * from "./hookTypeConfig";
export * from "./hookVersion";
export * from "./macro";
export * from "./moduleDefaultVersion";
export * from "./moduleVersion";
export * from "./publicTypeVersion";
export * from "./publisher";
export * from "./resourceDefaultVersion";
export * from "./resourceVersion";
export * from "./stack";
export * from "./stackSet";
export * from "./typeActivation";
export * from "./waitCondition";
export * from "./waitConditionHandle";

// Export enums:
export * from "../types/enums/cloudformation";

// Import resources to register:
import { CustomResource } from "./customResource";
import { HookDefaultVersion } from "./hookDefaultVersion";
import { HookTypeConfig } from "./hookTypeConfig";
import { HookVersion } from "./hookVersion";
import { Macro } from "./macro";
import { ModuleDefaultVersion } from "./moduleDefaultVersion";
import { ModuleVersion } from "./moduleVersion";
import { PublicTypeVersion } from "./publicTypeVersion";
import { Publisher } from "./publisher";
import { ResourceDefaultVersion } from "./resourceDefaultVersion";
import { ResourceVersion } from "./resourceVersion";
import { Stack } from "./stack";
import { StackSet } from "./stackSet";
import { TypeActivation } from "./typeActivation";
import { WaitCondition } from "./waitCondition";
import { WaitConditionHandle } from "./waitConditionHandle";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:cloudformation:CustomResource":
                return new CustomResource(name, <any>undefined, { urn })
            case "aws-native:cloudformation:HookDefaultVersion":
                return new HookDefaultVersion(name, <any>undefined, { urn })
            case "aws-native:cloudformation:HookTypeConfig":
                return new HookTypeConfig(name, <any>undefined, { urn })
            case "aws-native:cloudformation:HookVersion":
                return new HookVersion(name, <any>undefined, { urn })
            case "aws-native:cloudformation:Macro":
                return new Macro(name, <any>undefined, { urn })
            case "aws-native:cloudformation:ModuleDefaultVersion":
                return new ModuleDefaultVersion(name, <any>undefined, { urn })
            case "aws-native:cloudformation:ModuleVersion":
                return new ModuleVersion(name, <any>undefined, { urn })
            case "aws-native:cloudformation:PublicTypeVersion":
                return new PublicTypeVersion(name, <any>undefined, { urn })
            case "aws-native:cloudformation:Publisher":
                return new Publisher(name, <any>undefined, { urn })
            case "aws-native:cloudformation:ResourceDefaultVersion":
                return new ResourceDefaultVersion(name, <any>undefined, { urn })
            case "aws-native:cloudformation:ResourceVersion":
                return new ResourceVersion(name, <any>undefined, { urn })
            case "aws-native:cloudformation:Stack":
                return new Stack(name, <any>undefined, { urn })
            case "aws-native:cloudformation:StackSet":
                return new StackSet(name, <any>undefined, { urn })
            case "aws-native:cloudformation:TypeActivation":
                return new TypeActivation(name, <any>undefined, { urn })
            case "aws-native:cloudformation:WaitCondition":
                return new WaitCondition(name, <any>undefined, { urn })
            case "aws-native:cloudformation:WaitConditionHandle":
                return new WaitConditionHandle(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "cloudformation", _module)
