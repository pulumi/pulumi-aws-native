// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The default version of a resource that has been registered in the CloudFormation Registry.
 */
export function getResourceDefaultVersion(args: GetResourceDefaultVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceDefaultVersionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:cloudformation:getResourceDefaultVersion", {
        "arn": args.arn,
    }, opts);
}

export interface GetResourceDefaultVersionArgs {
    /**
     * The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a ResourceDefaultVersion
     */
    arn: string;
}

export interface GetResourceDefaultVersionResult {
    /**
     * The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a ResourceDefaultVersion
     */
    readonly arn?: string;
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    readonly typeName?: string;
    /**
     * The Amazon Resource Name (ARN) of the type version.
     */
    readonly typeVersionArn?: string;
    /**
     * The ID of an existing version of the resource to set as the default.
     */
    readonly versionId?: string;
}

export function getResourceDefaultVersionOutput(args: GetResourceDefaultVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceDefaultVersionResult> {
    return pulumi.output(args).apply(a => getResourceDefaultVersion(a, opts))
}

export interface GetResourceDefaultVersionOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a ResourceDefaultVersion
     */
    arn: pulumi.Input<string>;
}
