// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetOrganizationTelemetryRuleArgs, GetOrganizationTelemetryRuleResult, GetOrganizationTelemetryRuleOutputArgs } from "./getOrganizationTelemetryRule";
export const getOrganizationTelemetryRule: typeof import("./getOrganizationTelemetryRule").getOrganizationTelemetryRule = null as any;
export const getOrganizationTelemetryRuleOutput: typeof import("./getOrganizationTelemetryRule").getOrganizationTelemetryRuleOutput = null as any;
utilities.lazyLoad(exports, ["getOrganizationTelemetryRule","getOrganizationTelemetryRuleOutput"], () => require("./getOrganizationTelemetryRule"));

export { GetTelemetryRuleArgs, GetTelemetryRuleResult, GetTelemetryRuleOutputArgs } from "./getTelemetryRule";
export const getTelemetryRule: typeof import("./getTelemetryRule").getTelemetryRule = null as any;
export const getTelemetryRuleOutput: typeof import("./getTelemetryRule").getTelemetryRuleOutput = null as any;
utilities.lazyLoad(exports, ["getTelemetryRule","getTelemetryRuleOutput"], () => require("./getTelemetryRule"));

export { OrganizationTelemetryRuleArgs } from "./organizationTelemetryRule";
export type OrganizationTelemetryRule = import("./organizationTelemetryRule").OrganizationTelemetryRule;
export const OrganizationTelemetryRule: typeof import("./organizationTelemetryRule").OrganizationTelemetryRule = null as any;
utilities.lazyLoad(exports, ["OrganizationTelemetryRule"], () => require("./organizationTelemetryRule"));

export { TelemetryRuleArgs } from "./telemetryRule";
export type TelemetryRule = import("./telemetryRule").TelemetryRule;
export const TelemetryRule: typeof import("./telemetryRule").TelemetryRule = null as any;
utilities.lazyLoad(exports, ["TelemetryRule"], () => require("./telemetryRule"));


// Export enums:
export * from "../types/enums/observabilityadmin";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:observabilityadmin:OrganizationTelemetryRule":
                return new OrganizationTelemetryRule(name, <any>undefined, { urn })
            case "aws-native:observabilityadmin:TelemetryRule":
                return new TelemetryRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "observabilityadmin", _module)
