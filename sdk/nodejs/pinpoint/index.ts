// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AdmChannelArgs } from "./admChannel";
export type AdmChannel = import("./admChannel").AdmChannel;
export const AdmChannel: typeof import("./admChannel").AdmChannel = null as any;
utilities.lazyLoad(exports, ["AdmChannel"], () => require("./admChannel"));

export { ApnsChannelArgs } from "./apnsChannel";
export type ApnsChannel = import("./apnsChannel").ApnsChannel;
export const ApnsChannel: typeof import("./apnsChannel").ApnsChannel = null as any;
utilities.lazyLoad(exports, ["ApnsChannel"], () => require("./apnsChannel"));

export { ApnsSandboxChannelArgs } from "./apnsSandboxChannel";
export type ApnsSandboxChannel = import("./apnsSandboxChannel").ApnsSandboxChannel;
export const ApnsSandboxChannel: typeof import("./apnsSandboxChannel").ApnsSandboxChannel = null as any;
utilities.lazyLoad(exports, ["ApnsSandboxChannel"], () => require("./apnsSandboxChannel"));

export { ApnsVoipChannelArgs } from "./apnsVoipChannel";
export type ApnsVoipChannel = import("./apnsVoipChannel").ApnsVoipChannel;
export const ApnsVoipChannel: typeof import("./apnsVoipChannel").ApnsVoipChannel = null as any;
utilities.lazyLoad(exports, ["ApnsVoipChannel"], () => require("./apnsVoipChannel"));

export { ApnsVoipSandboxChannelArgs } from "./apnsVoipSandboxChannel";
export type ApnsVoipSandboxChannel = import("./apnsVoipSandboxChannel").ApnsVoipSandboxChannel;
export const ApnsVoipSandboxChannel: typeof import("./apnsVoipSandboxChannel").ApnsVoipSandboxChannel = null as any;
utilities.lazyLoad(exports, ["ApnsVoipSandboxChannel"], () => require("./apnsVoipSandboxChannel"));

export { AppArgs } from "./app";
export type App = import("./app").App;
export const App: typeof import("./app").App = null as any;
utilities.lazyLoad(exports, ["App"], () => require("./app"));

export { ApplicationSettingsArgs } from "./applicationSettings";
export type ApplicationSettings = import("./applicationSettings").ApplicationSettings;
export const ApplicationSettings: typeof import("./applicationSettings").ApplicationSettings = null as any;
utilities.lazyLoad(exports, ["ApplicationSettings"], () => require("./applicationSettings"));

export { BaiduChannelArgs } from "./baiduChannel";
export type BaiduChannel = import("./baiduChannel").BaiduChannel;
export const BaiduChannel: typeof import("./baiduChannel").BaiduChannel = null as any;
utilities.lazyLoad(exports, ["BaiduChannel"], () => require("./baiduChannel"));

export { CampaignArgs } from "./campaign";
export type Campaign = import("./campaign").Campaign;
export const Campaign: typeof import("./campaign").Campaign = null as any;
utilities.lazyLoad(exports, ["Campaign"], () => require("./campaign"));

export { EmailChannelArgs } from "./emailChannel";
export type EmailChannel = import("./emailChannel").EmailChannel;
export const EmailChannel: typeof import("./emailChannel").EmailChannel = null as any;
utilities.lazyLoad(exports, ["EmailChannel"], () => require("./emailChannel"));

export { EmailTemplateArgs } from "./emailTemplate";
export type EmailTemplate = import("./emailTemplate").EmailTemplate;
export const EmailTemplate: typeof import("./emailTemplate").EmailTemplate = null as any;
utilities.lazyLoad(exports, ["EmailTemplate"], () => require("./emailTemplate"));

export { EventStreamArgs } from "./eventStream";
export type EventStream = import("./eventStream").EventStream;
export const EventStream: typeof import("./eventStream").EventStream = null as any;
utilities.lazyLoad(exports, ["EventStream"], () => require("./eventStream"));

export { GcmChannelArgs } from "./gcmChannel";
export type GcmChannel = import("./gcmChannel").GcmChannel;
export const GcmChannel: typeof import("./gcmChannel").GcmChannel = null as any;
utilities.lazyLoad(exports, ["GcmChannel"], () => require("./gcmChannel"));

export { GetAdmChannelArgs, GetAdmChannelResult, GetAdmChannelOutputArgs } from "./getAdmChannel";
export const getAdmChannel: typeof import("./getAdmChannel").getAdmChannel = null as any;
export const getAdmChannelOutput: typeof import("./getAdmChannel").getAdmChannelOutput = null as any;
utilities.lazyLoad(exports, ["getAdmChannel","getAdmChannelOutput"], () => require("./getAdmChannel"));

export { GetApnsChannelArgs, GetApnsChannelResult, GetApnsChannelOutputArgs } from "./getApnsChannel";
export const getApnsChannel: typeof import("./getApnsChannel").getApnsChannel = null as any;
export const getApnsChannelOutput: typeof import("./getApnsChannel").getApnsChannelOutput = null as any;
utilities.lazyLoad(exports, ["getApnsChannel","getApnsChannelOutput"], () => require("./getApnsChannel"));

export { GetApnsSandboxChannelArgs, GetApnsSandboxChannelResult, GetApnsSandboxChannelOutputArgs } from "./getApnsSandboxChannel";
export const getApnsSandboxChannel: typeof import("./getApnsSandboxChannel").getApnsSandboxChannel = null as any;
export const getApnsSandboxChannelOutput: typeof import("./getApnsSandboxChannel").getApnsSandboxChannelOutput = null as any;
utilities.lazyLoad(exports, ["getApnsSandboxChannel","getApnsSandboxChannelOutput"], () => require("./getApnsSandboxChannel"));

export { GetApnsVoipChannelArgs, GetApnsVoipChannelResult, GetApnsVoipChannelOutputArgs } from "./getApnsVoipChannel";
export const getApnsVoipChannel: typeof import("./getApnsVoipChannel").getApnsVoipChannel = null as any;
export const getApnsVoipChannelOutput: typeof import("./getApnsVoipChannel").getApnsVoipChannelOutput = null as any;
utilities.lazyLoad(exports, ["getApnsVoipChannel","getApnsVoipChannelOutput"], () => require("./getApnsVoipChannel"));

export { GetApnsVoipSandboxChannelArgs, GetApnsVoipSandboxChannelResult, GetApnsVoipSandboxChannelOutputArgs } from "./getApnsVoipSandboxChannel";
export const getApnsVoipSandboxChannel: typeof import("./getApnsVoipSandboxChannel").getApnsVoipSandboxChannel = null as any;
export const getApnsVoipSandboxChannelOutput: typeof import("./getApnsVoipSandboxChannel").getApnsVoipSandboxChannelOutput = null as any;
utilities.lazyLoad(exports, ["getApnsVoipSandboxChannel","getApnsVoipSandboxChannelOutput"], () => require("./getApnsVoipSandboxChannel"));

export { GetAppArgs, GetAppResult, GetAppOutputArgs } from "./getApp";
export const getApp: typeof import("./getApp").getApp = null as any;
export const getAppOutput: typeof import("./getApp").getAppOutput = null as any;
utilities.lazyLoad(exports, ["getApp","getAppOutput"], () => require("./getApp"));

export { GetApplicationSettingsArgs, GetApplicationSettingsResult, GetApplicationSettingsOutputArgs } from "./getApplicationSettings";
export const getApplicationSettings: typeof import("./getApplicationSettings").getApplicationSettings = null as any;
export const getApplicationSettingsOutput: typeof import("./getApplicationSettings").getApplicationSettingsOutput = null as any;
utilities.lazyLoad(exports, ["getApplicationSettings","getApplicationSettingsOutput"], () => require("./getApplicationSettings"));

export { GetBaiduChannelArgs, GetBaiduChannelResult, GetBaiduChannelOutputArgs } from "./getBaiduChannel";
export const getBaiduChannel: typeof import("./getBaiduChannel").getBaiduChannel = null as any;
export const getBaiduChannelOutput: typeof import("./getBaiduChannel").getBaiduChannelOutput = null as any;
utilities.lazyLoad(exports, ["getBaiduChannel","getBaiduChannelOutput"], () => require("./getBaiduChannel"));

export { GetCampaignArgs, GetCampaignResult, GetCampaignOutputArgs } from "./getCampaign";
export const getCampaign: typeof import("./getCampaign").getCampaign = null as any;
export const getCampaignOutput: typeof import("./getCampaign").getCampaignOutput = null as any;
utilities.lazyLoad(exports, ["getCampaign","getCampaignOutput"], () => require("./getCampaign"));

export { GetEmailChannelArgs, GetEmailChannelResult, GetEmailChannelOutputArgs } from "./getEmailChannel";
export const getEmailChannel: typeof import("./getEmailChannel").getEmailChannel = null as any;
export const getEmailChannelOutput: typeof import("./getEmailChannel").getEmailChannelOutput = null as any;
utilities.lazyLoad(exports, ["getEmailChannel","getEmailChannelOutput"], () => require("./getEmailChannel"));

export { GetEmailTemplateArgs, GetEmailTemplateResult, GetEmailTemplateOutputArgs } from "./getEmailTemplate";
export const getEmailTemplate: typeof import("./getEmailTemplate").getEmailTemplate = null as any;
export const getEmailTemplateOutput: typeof import("./getEmailTemplate").getEmailTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getEmailTemplate","getEmailTemplateOutput"], () => require("./getEmailTemplate"));

export { GetEventStreamArgs, GetEventStreamResult, GetEventStreamOutputArgs } from "./getEventStream";
export const getEventStream: typeof import("./getEventStream").getEventStream = null as any;
export const getEventStreamOutput: typeof import("./getEventStream").getEventStreamOutput = null as any;
utilities.lazyLoad(exports, ["getEventStream","getEventStreamOutput"], () => require("./getEventStream"));

export { GetGcmChannelArgs, GetGcmChannelResult, GetGcmChannelOutputArgs } from "./getGcmChannel";
export const getGcmChannel: typeof import("./getGcmChannel").getGcmChannel = null as any;
export const getGcmChannelOutput: typeof import("./getGcmChannel").getGcmChannelOutput = null as any;
utilities.lazyLoad(exports, ["getGcmChannel","getGcmChannelOutput"], () => require("./getGcmChannel"));

export { GetInAppTemplateArgs, GetInAppTemplateResult, GetInAppTemplateOutputArgs } from "./getInAppTemplate";
export const getInAppTemplate: typeof import("./getInAppTemplate").getInAppTemplate = null as any;
export const getInAppTemplateOutput: typeof import("./getInAppTemplate").getInAppTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getInAppTemplate","getInAppTemplateOutput"], () => require("./getInAppTemplate"));

export { GetPushTemplateArgs, GetPushTemplateResult, GetPushTemplateOutputArgs } from "./getPushTemplate";
export const getPushTemplate: typeof import("./getPushTemplate").getPushTemplate = null as any;
export const getPushTemplateOutput: typeof import("./getPushTemplate").getPushTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getPushTemplate","getPushTemplateOutput"], () => require("./getPushTemplate"));

export { GetSegmentArgs, GetSegmentResult, GetSegmentOutputArgs } from "./getSegment";
export const getSegment: typeof import("./getSegment").getSegment = null as any;
export const getSegmentOutput: typeof import("./getSegment").getSegmentOutput = null as any;
utilities.lazyLoad(exports, ["getSegment","getSegmentOutput"], () => require("./getSegment"));

export { GetSmsChannelArgs, GetSmsChannelResult, GetSmsChannelOutputArgs } from "./getSmsChannel";
export const getSmsChannel: typeof import("./getSmsChannel").getSmsChannel = null as any;
export const getSmsChannelOutput: typeof import("./getSmsChannel").getSmsChannelOutput = null as any;
utilities.lazyLoad(exports, ["getSmsChannel","getSmsChannelOutput"], () => require("./getSmsChannel"));

export { GetSmsTemplateArgs, GetSmsTemplateResult, GetSmsTemplateOutputArgs } from "./getSmsTemplate";
export const getSmsTemplate: typeof import("./getSmsTemplate").getSmsTemplate = null as any;
export const getSmsTemplateOutput: typeof import("./getSmsTemplate").getSmsTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getSmsTemplate","getSmsTemplateOutput"], () => require("./getSmsTemplate"));

export { GetVoiceChannelArgs, GetVoiceChannelResult, GetVoiceChannelOutputArgs } from "./getVoiceChannel";
export const getVoiceChannel: typeof import("./getVoiceChannel").getVoiceChannel = null as any;
export const getVoiceChannelOutput: typeof import("./getVoiceChannel").getVoiceChannelOutput = null as any;
utilities.lazyLoad(exports, ["getVoiceChannel","getVoiceChannelOutput"], () => require("./getVoiceChannel"));

export { InAppTemplateArgs } from "./inAppTemplate";
export type InAppTemplate = import("./inAppTemplate").InAppTemplate;
export const InAppTemplate: typeof import("./inAppTemplate").InAppTemplate = null as any;
utilities.lazyLoad(exports, ["InAppTemplate"], () => require("./inAppTemplate"));

export { PushTemplateArgs } from "./pushTemplate";
export type PushTemplate = import("./pushTemplate").PushTemplate;
export const PushTemplate: typeof import("./pushTemplate").PushTemplate = null as any;
utilities.lazyLoad(exports, ["PushTemplate"], () => require("./pushTemplate"));

export { SegmentArgs } from "./segment";
export type Segment = import("./segment").Segment;
export const Segment: typeof import("./segment").Segment = null as any;
utilities.lazyLoad(exports, ["Segment"], () => require("./segment"));

export { SmsChannelArgs } from "./smsChannel";
export type SmsChannel = import("./smsChannel").SmsChannel;
export const SmsChannel: typeof import("./smsChannel").SmsChannel = null as any;
utilities.lazyLoad(exports, ["SmsChannel"], () => require("./smsChannel"));

export { SmsTemplateArgs } from "./smsTemplate";
export type SmsTemplate = import("./smsTemplate").SmsTemplate;
export const SmsTemplate: typeof import("./smsTemplate").SmsTemplate = null as any;
utilities.lazyLoad(exports, ["SmsTemplate"], () => require("./smsTemplate"));

export { VoiceChannelArgs } from "./voiceChannel";
export type VoiceChannel = import("./voiceChannel").VoiceChannel;
export const VoiceChannel: typeof import("./voiceChannel").VoiceChannel = null as any;
utilities.lazyLoad(exports, ["VoiceChannel"], () => require("./voiceChannel"));


// Export enums:
export * from "../types/enums/pinpoint";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:pinpoint:AdmChannel":
                return new AdmChannel(name, <any>undefined, { urn })
            case "aws-native:pinpoint:ApnsChannel":
                return new ApnsChannel(name, <any>undefined, { urn })
            case "aws-native:pinpoint:ApnsSandboxChannel":
                return new ApnsSandboxChannel(name, <any>undefined, { urn })
            case "aws-native:pinpoint:ApnsVoipChannel":
                return new ApnsVoipChannel(name, <any>undefined, { urn })
            case "aws-native:pinpoint:ApnsVoipSandboxChannel":
                return new ApnsVoipSandboxChannel(name, <any>undefined, { urn })
            case "aws-native:pinpoint:App":
                return new App(name, <any>undefined, { urn })
            case "aws-native:pinpoint:ApplicationSettings":
                return new ApplicationSettings(name, <any>undefined, { urn })
            case "aws-native:pinpoint:BaiduChannel":
                return new BaiduChannel(name, <any>undefined, { urn })
            case "aws-native:pinpoint:Campaign":
                return new Campaign(name, <any>undefined, { urn })
            case "aws-native:pinpoint:EmailChannel":
                return new EmailChannel(name, <any>undefined, { urn })
            case "aws-native:pinpoint:EmailTemplate":
                return new EmailTemplate(name, <any>undefined, { urn })
            case "aws-native:pinpoint:EventStream":
                return new EventStream(name, <any>undefined, { urn })
            case "aws-native:pinpoint:GcmChannel":
                return new GcmChannel(name, <any>undefined, { urn })
            case "aws-native:pinpoint:InAppTemplate":
                return new InAppTemplate(name, <any>undefined, { urn })
            case "aws-native:pinpoint:PushTemplate":
                return new PushTemplate(name, <any>undefined, { urn })
            case "aws-native:pinpoint:Segment":
                return new Segment(name, <any>undefined, { urn })
            case "aws-native:pinpoint:SmsChannel":
                return new SmsChannel(name, <any>undefined, { urn })
            case "aws-native:pinpoint:SmsTemplate":
                return new SmsTemplate(name, <any>undefined, { urn })
            case "aws-native:pinpoint:VoiceChannel":
                return new VoiceChannel(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "pinpoint", _module)
