// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Pinpoint::Campaign
 */
export function getCampaign(args: GetCampaignArgs, opts?: pulumi.InvokeOptions): Promise<GetCampaignResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:pinpoint:getCampaign", {
        "campaignId": args.campaignId,
    }, opts);
}

export interface GetCampaignArgs {
    campaignId: string;
}

export interface GetCampaignResult {
    readonly additionalTreatments?: outputs.pinpoint.CampaignWriteTreatmentResource[];
    readonly arn?: string;
    readonly campaignHook?: outputs.pinpoint.CampaignHook;
    readonly campaignId?: string;
    readonly description?: string;
    readonly holdoutPercent?: number;
    readonly isPaused?: boolean;
    readonly limits?: outputs.pinpoint.CampaignLimits;
    readonly messageConfiguration?: outputs.pinpoint.CampaignMessageConfiguration;
    readonly name?: string;
    readonly priority?: number;
    readonly schedule?: outputs.pinpoint.CampaignSchedule;
    readonly segmentId?: string;
    readonly segmentVersion?: number;
    readonly tags?: any;
    readonly treatmentDescription?: string;
    readonly treatmentName?: string;
}

export function getCampaignOutput(args: GetCampaignOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCampaignResult> {
    return pulumi.output(args).apply(a => getCampaign(a, opts))
}

export interface GetCampaignOutputArgs {
    campaignId: pulumi.Input<string>;
}
