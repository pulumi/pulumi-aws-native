// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Amazon OpenSearchServerless collection resource
 */
export class Collection extends pulumi.CustomResource {
    /**
     * Get an existing Collection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Collection {
        return new Collection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:opensearchserverless:Collection';

    /**
     * Returns true if the given object is an instance of Collection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Collection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Collection.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the collection.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The endpoint for the collection.
     */
    public /*out*/ readonly collectionEndpoint!: pulumi.Output<string>;
    /**
     * The OpenSearch Dashboards endpoint for the collection.
     */
    public /*out*/ readonly dashboardEndpoint!: pulumi.Output<string>;
    /**
     * The description of the collection
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the collection.
     *
     * The name must meet the following criteria:
     * Unique to your account and AWS Region
     * Starts with a lowercase letter
     * Contains only lowercase letters a-z, the numbers 0-9 and the hyphen (-)
     * Contains between 3 and 32 characters
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of tags to be added to the resource
     */
    public readonly tags!: pulumi.Output<outputs.opensearchserverless.CollectionTag[] | undefined>;
    public readonly type!: pulumi.Output<enums.opensearchserverless.CollectionType | undefined>;

    /**
     * Create a Collection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CollectionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["collectionEndpoint"] = undefined /*out*/;
            resourceInputs["dashboardEndpoint"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["collectionEndpoint"] = undefined /*out*/;
            resourceInputs["dashboardEndpoint"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name", "tags[*]", "type"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Collection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Collection resource.
 */
export interface CollectionArgs {
    /**
     * The description of the collection
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the collection.
     *
     * The name must meet the following criteria:
     * Unique to your account and AWS Region
     * Starts with a lowercase letter
     * Contains only lowercase letters a-z, the numbers 0-9 and the hyphen (-)
     * Contains between 3 and 32 characters
     */
    name?: pulumi.Input<string>;
    /**
     * List of tags to be added to the resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.opensearchserverless.CollectionTagArgs>[]>;
    type?: pulumi.Input<enums.opensearchserverless.CollectionType>;
}
