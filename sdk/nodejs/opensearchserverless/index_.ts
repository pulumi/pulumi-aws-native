// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * An OpenSearch Serverless index resource
 */
export class Index extends pulumi.CustomResource {
    /**
     * Get an existing Index resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Index {
        return new Index(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:opensearchserverless:Index';

    /**
     * Returns true if the given object is an instance of Index.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Index {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Index.__pulumiType;
    }

    /**
     * The endpoint for the collection.
     */
    declare public readonly collectionEndpoint: pulumi.Output<string>;
    /**
     * The name of the OpenSearch Serverless index.
     */
    declare public readonly indexName: pulumi.Output<string>;
    /**
     * Index Mappings
     */
    declare public readonly mappings: pulumi.Output<outputs.opensearchserverless.MappingsProperties | undefined>;
    /**
     * Index settings
     */
    declare public readonly settings: pulumi.Output<outputs.opensearchserverless.IndexSettings | undefined>;
    /**
     * The unique identifier for the index.
     */
    declare public /*out*/ readonly uuid: pulumi.Output<string>;

    /**
     * Create a Index resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IndexArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.collectionEndpoint === undefined && !opts.urn) {
                throw new Error("Missing required property 'collectionEndpoint'");
            }
            resourceInputs["collectionEndpoint"] = args?.collectionEndpoint;
            resourceInputs["indexName"] = args?.indexName;
            resourceInputs["mappings"] = args?.mappings;
            resourceInputs["settings"] = args?.settings;
            resourceInputs["uuid"] = undefined /*out*/;
        } else {
            resourceInputs["collectionEndpoint"] = undefined /*out*/;
            resourceInputs["indexName"] = undefined /*out*/;
            resourceInputs["mappings"] = undefined /*out*/;
            resourceInputs["settings"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["collectionEndpoint", "indexName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Index.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Index resource.
 */
export interface IndexArgs {
    /**
     * The endpoint for the collection.
     */
    collectionEndpoint: pulumi.Input<string>;
    /**
     * The name of the OpenSearch Serverless index.
     */
    indexName?: pulumi.Input<string>;
    /**
     * Index Mappings
     */
    mappings?: pulumi.Input<inputs.opensearchserverless.MappingsPropertiesArgs>;
    /**
     * Index settings
     */
    settings?: pulumi.Input<inputs.opensearchserverless.IndexSettingsArgs>;
}
