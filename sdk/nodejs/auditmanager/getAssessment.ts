// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * An entity that defines the scope of audit evidence collected by AWS Audit Manager.
 */
export function getAssessment(args: GetAssessmentArgs, opts?: pulumi.InvokeOptions): Promise<GetAssessmentResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:auditmanager:getAssessment", {
        "assessmentId": args.assessmentId,
    }, opts);
}

export interface GetAssessmentArgs {
    assessmentId: string;
}

export interface GetAssessmentResult {
    readonly arn?: string;
    readonly assessmentId?: string;
    readonly assessmentReportsDestination?: outputs.auditmanager.AssessmentReportsDestination;
    readonly creationTime?: number;
    /**
     * The list of delegations.
     */
    readonly delegations?: outputs.auditmanager.AssessmentDelegation[];
    /**
     * The list of roles for the specified assessment.
     */
    readonly roles?: outputs.auditmanager.AssessmentRole[];
    readonly scope?: outputs.auditmanager.AssessmentScope;
    readonly status?: enums.auditmanager.AssessmentStatus;
    /**
     * The tags associated with the assessment.
     */
    readonly tags?: outputs.auditmanager.AssessmentTag[];
}

export function getAssessmentOutput(args: GetAssessmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAssessmentResult> {
    return pulumi.output(args).apply(a => getAssessment(a, opts))
}

export interface GetAssessmentOutputArgs {
    assessmentId: pulumi.Input<string>;
}
