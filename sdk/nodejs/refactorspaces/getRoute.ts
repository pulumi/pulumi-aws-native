// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::RefactorSpaces::Route Resource Type
 */
export function getRoute(args: GetRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:refactorspaces:getRoute", {
        "applicationIdentifier": args.applicationIdentifier,
        "environmentIdentifier": args.environmentIdentifier,
        "routeIdentifier": args.routeIdentifier,
    }, opts);
}

export interface GetRouteArgs {
    /**
     * The unique identifier of the application.
     */
    applicationIdentifier: string;
    /**
     * The unique identifier of the environment.
     */
    environmentIdentifier: string;
    /**
     * The unique identifier of the route.
     */
    routeIdentifier: string;
}

export interface GetRouteResult {
    /**
     * The Amazon Resource Name (ARN) of the route.
     */
    readonly arn?: string;
    /**
     * A mapping of Amazon API Gateway path resources to resource IDs.
     */
    readonly pathResourceToId?: string;
    /**
     * The unique identifier of the route.
     */
    readonly routeIdentifier?: string;
    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Definition of AWS::RefactorSpaces::Route Resource Type
 */
export function getRouteOutput(args: GetRouteOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRouteResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:refactorspaces:getRoute", {
        "applicationIdentifier": args.applicationIdentifier,
        "environmentIdentifier": args.environmentIdentifier,
        "routeIdentifier": args.routeIdentifier,
    }, opts);
}

export interface GetRouteOutputArgs {
    /**
     * The unique identifier of the application.
     */
    applicationIdentifier: pulumi.Input<string>;
    /**
     * The unique identifier of the environment.
     */
    environmentIdentifier: pulumi.Input<string>;
    /**
     * The unique identifier of the route.
     */
    routeIdentifier: pulumi.Input<string>;
}
