// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::RefactorSpaces::Service Resource Type
 */
export function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:refactorspaces:getService", {
        "applicationIdentifier": args.applicationIdentifier,
        "environmentIdentifier": args.environmentIdentifier,
        "serviceIdentifier": args.serviceIdentifier,
    }, opts);
}

export interface GetServiceArgs {
    /**
     * The unique identifier of the application.
     */
    applicationIdentifier: string;
    /**
     * The unique identifier of the environment.
     */
    environmentIdentifier: string;
    /**
     * The unique identifier of the service.
     */
    serviceIdentifier: string;
}

export interface GetServiceResult {
    /**
     * The Amazon Resource Name (ARN) of the service.
     */
    readonly arn?: string;
    /**
     * The unique identifier of the service.
     */
    readonly serviceIdentifier?: string;
    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Definition of AWS::RefactorSpaces::Service Resource Type
 */
export function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:refactorspaces:getService", {
        "applicationIdentifier": args.applicationIdentifier,
        "environmentIdentifier": args.environmentIdentifier,
        "serviceIdentifier": args.serviceIdentifier,
    }, opts);
}

export interface GetServiceOutputArgs {
    /**
     * The unique identifier of the application.
     */
    applicationIdentifier: pulumi.Input<string>;
    /**
     * The unique identifier of the environment.
     */
    environmentIdentifier: pulumi.Input<string>;
    /**
     * The unique identifier of the service.
     */
    serviceIdentifier: pulumi.Input<string>;
}
