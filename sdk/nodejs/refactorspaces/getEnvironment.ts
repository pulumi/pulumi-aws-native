// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::RefactorSpaces::Environment Resource Type
 */
export function getEnvironment(args: GetEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:refactorspaces:getEnvironment", {
        "environmentIdentifier": args.environmentIdentifier,
    }, opts);
}

export interface GetEnvironmentArgs {
    /**
     * The unique identifier of the environment.
     */
    environmentIdentifier: string;
}

export interface GetEnvironmentResult {
    /**
     * The Amazon Resource Name (ARN) of the environment.
     */
    readonly arn?: string;
    /**
     * The unique identifier of the environment.
     */
    readonly environmentIdentifier?: string;
    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The ID of the AWS Transit Gateway set up by the environment.
     */
    readonly transitGatewayId?: string;
}
/**
 * Definition of AWS::RefactorSpaces::Environment Resource Type
 */
export function getEnvironmentOutput(args: GetEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getEnvironment(a, opts))
}

export interface GetEnvironmentOutputArgs {
    /**
     * The unique identifier of the environment.
     */
    environmentIdentifier: pulumi.Input<string>;
}
