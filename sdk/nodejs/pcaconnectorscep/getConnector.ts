// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Represents a Connector that allows certificate issuance through Simple Certificate Enrollment Protocol (SCEP)
 */
export function getConnector(args: GetConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:pcaconnectorscep:getConnector", {
        "connectorArn": args.connectorArn,
    }, opts);
}

export interface GetConnectorArgs {
    connectorArn: string;
}

export interface GetConnectorResult {
    readonly connectorArn?: string;
    readonly endpoint?: string;
    readonly openIdConfiguration?: outputs.pcaconnectorscep.ConnectorOpenIdConfiguration;
    readonly tags?: {[key: string]: string};
    readonly type?: enums.pcaconnectorscep.ConnectorType;
}
/**
 * Represents a Connector that allows certificate issuance through Simple Certificate Enrollment Protocol (SCEP)
 */
export function getConnectorOutput(args: GetConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectorResult> {
    return pulumi.output(args).apply((a: any) => getConnector(a, opts))
}

export interface GetConnectorOutputArgs {
    connectorArn: pulumi.Input<string>;
}
