// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Represents a SCEP Challenge that is used for certificate enrollment
 */
export function getChallenge(args: GetChallengeArgs, opts?: pulumi.InvokeOptions): Promise<GetChallengeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:pcaconnectorscep:getChallenge", {
        "challengeArn": args.challengeArn,
    }, opts);
}

export interface GetChallengeArgs {
    /**
     * The Amazon Resource Name (ARN) of the challenge.
     */
    challengeArn: string;
}

export interface GetChallengeResult {
    /**
     * The Amazon Resource Name (ARN) of the challenge.
     */
    readonly challengeArn?: string;
    readonly tags?: {[key: string]: string};
}
/**
 * Represents a SCEP Challenge that is used for certificate enrollment
 */
export function getChallengeOutput(args: GetChallengeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetChallengeResult> {
    return pulumi.output(args).apply((a: any) => getChallenge(a, opts))
}

export interface GetChallengeOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the challenge.
     */
    challengeArn: pulumi.Input<string>;
}
