// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Amazon Lex conversational bot performing automated tasks such as ordering a pizza, booking a hotel, and so on.
 */
export class Bot extends pulumi.CustomResource {
    /**
     * Get an existing Bot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Bot {
        return new Bot(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:lex:Bot';

    /**
     * Returns true if the given object is an instance of Bot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bot.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the bot.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Indicates whether Amazon Lex V2 should automatically build the locales for the bot after a change.
     */
    declare public readonly autoBuildBotLocales: pulumi.Output<boolean | undefined>;
    /**
     * The unique identifier of the bot.
     */
    declare public /*out*/ readonly awsId: pulumi.Output<string>;
    /**
     * The Amazon S3 location of files used to import a bot. The files must be in the import format specified in [JSON format for importing and exporting](https://docs.aws.amazon.com/lexv2/latest/dg/import-export-format.html) in the *Amazon Lex developer guide.*
     */
    declare public readonly botFileS3Location: pulumi.Output<outputs.lex.BotS3Location | undefined>;
    /**
     * A list of locales for the bot.
     */
    declare public readonly botLocales: pulumi.Output<outputs.lex.BotLocale[] | undefined>;
    /**
     * A list of tags to add to the bot. You can only add tags when you import a bot. You can't use the `UpdateBot` operation to update tags. To update tags, use the `TagResource` operation.
     */
    declare public readonly botTags: pulumi.Output<outputs.lex.BotTag[] | undefined>;
    /**
     * By default, data stored by Amazon Lex is encrypted. The `DataPrivacy` structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot.
     */
    declare public readonly dataPrivacy: pulumi.Output<outputs.lex.DataPrivacyProperties>;
    /**
     * The description of the version.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot.
     *
     * A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.
     *
     * You can specify between 60 (1 minute) and 86,400 (24 hours) seconds.
     */
    declare public readonly idleSessionTtlInSeconds: pulumi.Output<number>;
    /**
     * The name of the bot locale.
     */
    declare public readonly name: pulumi.Output<string>;
    declare public readonly replication: pulumi.Output<outputs.lex.BotReplication | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role used to build and run the bot.
     */
    declare public readonly roleArn: pulumi.Output<string>;
    /**
     * Specifies configuration settings for the alias used to test the bot. If the `TestBotAliasSettings` property is not specified, the settings are configured with default values.
     */
    declare public readonly testBotAliasSettings: pulumi.Output<outputs.lex.BotTestBotAliasSettings | undefined>;
    /**
     * A list of tags to add to the test alias for a bot. You can only add tags when you import a bot. You can't use the `UpdateAlias` operation to update tags. To update tags on the test alias, use the `TagResource` operation.
     */
    declare public readonly testBotAliasTags: pulumi.Output<outputs.lex.BotTag[] | undefined>;

    /**
     * Create a Bot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.dataPrivacy === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataPrivacy'");
            }
            if (args?.idleSessionTtlInSeconds === undefined && !opts.urn) {
                throw new Error("Missing required property 'idleSessionTtlInSeconds'");
            }
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["autoBuildBotLocales"] = args?.autoBuildBotLocales;
            resourceInputs["botFileS3Location"] = args?.botFileS3Location;
            resourceInputs["botLocales"] = args?.botLocales;
            resourceInputs["botTags"] = args?.botTags;
            resourceInputs["dataPrivacy"] = args?.dataPrivacy;
            resourceInputs["description"] = args?.description;
            resourceInputs["idleSessionTtlInSeconds"] = args?.idleSessionTtlInSeconds;
            resourceInputs["name"] = args?.name;
            resourceInputs["replication"] = args?.replication;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["testBotAliasSettings"] = args?.testBotAliasSettings;
            resourceInputs["testBotAliasTags"] = args?.testBotAliasTags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["autoBuildBotLocales"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["botFileS3Location"] = undefined /*out*/;
            resourceInputs["botLocales"] = undefined /*out*/;
            resourceInputs["botTags"] = undefined /*out*/;
            resourceInputs["dataPrivacy"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["idleSessionTtlInSeconds"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["replication"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["testBotAliasSettings"] = undefined /*out*/;
            resourceInputs["testBotAliasTags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Bot resource.
 */
export interface BotArgs {
    /**
     * Indicates whether Amazon Lex V2 should automatically build the locales for the bot after a change.
     */
    autoBuildBotLocales?: pulumi.Input<boolean>;
    /**
     * The Amazon S3 location of files used to import a bot. The files must be in the import format specified in [JSON format for importing and exporting](https://docs.aws.amazon.com/lexv2/latest/dg/import-export-format.html) in the *Amazon Lex developer guide.*
     */
    botFileS3Location?: pulumi.Input<inputs.lex.BotS3LocationArgs>;
    /**
     * A list of locales for the bot.
     */
    botLocales?: pulumi.Input<pulumi.Input<inputs.lex.BotLocaleArgs>[]>;
    /**
     * A list of tags to add to the bot. You can only add tags when you import a bot. You can't use the `UpdateBot` operation to update tags. To update tags, use the `TagResource` operation.
     */
    botTags?: pulumi.Input<pulumi.Input<inputs.lex.BotTagArgs>[]>;
    /**
     * By default, data stored by Amazon Lex is encrypted. The `DataPrivacy` structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot.
     */
    dataPrivacy: pulumi.Input<inputs.lex.DataPrivacyPropertiesArgs>;
    /**
     * The description of the version.
     */
    description?: pulumi.Input<string>;
    /**
     * The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot.
     *
     * A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.
     *
     * You can specify between 60 (1 minute) and 86,400 (24 hours) seconds.
     */
    idleSessionTtlInSeconds: pulumi.Input<number>;
    /**
     * The name of the bot locale.
     */
    name?: pulumi.Input<string>;
    replication?: pulumi.Input<inputs.lex.BotReplicationArgs>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role used to build and run the bot.
     */
    roleArn: pulumi.Input<string>;
    /**
     * Specifies configuration settings for the alias used to test the bot. If the `TestBotAliasSettings` property is not specified, the settings are configured with default values.
     */
    testBotAliasSettings?: pulumi.Input<inputs.lex.BotTestBotAliasSettingsArgs>;
    /**
     * A list of tags to add to the test alias for a bot. You can only add tags when you import a bot. You can't use the `UpdateAlias` operation to update tags. To update tags on the test alias, use the `TagResource` operation.
     */
    testBotAliasTags?: pulumi.Input<pulumi.Input<inputs.lex.BotTagArgs>[]>;
}
