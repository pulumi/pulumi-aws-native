// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Lightsail::Distribution
 */
export function getDistribution(args: GetDistributionArgs, opts?: pulumi.InvokeOptions): Promise<GetDistributionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:lightsail:getDistribution", {
        "distributionName": args.distributionName,
    }, opts);
}

export interface GetDistributionArgs {
    /**
     * The name for the distribution.
     */
    distributionName: string;
}

export interface GetDistributionResult {
    /**
     * Indicates whether the bundle that is currently applied to your distribution, specified using the distributionName parameter, can be changed to another bundle.
     */
    readonly ableToUpdateBundle?: boolean;
    /**
     * The bundle ID to use for the distribution.
     */
    readonly bundleId?: string;
    /**
     * An object that describes the cache behavior settings for the distribution.
     */
    readonly cacheBehaviorSettings?: outputs.lightsail.DistributionCacheSettings;
    /**
     * An array of objects that describe the per-path cache behavior for the distribution.
     */
    readonly cacheBehaviors?: outputs.lightsail.DistributionCacheBehaviorPerPath[];
    /**
     * The certificate attached to the Distribution.
     */
    readonly certificateName?: string;
    /**
     * An object that describes the default cache behavior for the distribution.
     */
    readonly defaultCacheBehavior?: outputs.lightsail.DistributionCacheBehavior;
    readonly distributionArn?: string;
    /**
     * Indicates whether the distribution is enabled.
     */
    readonly isEnabled?: boolean;
    /**
     * An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
     */
    readonly origin?: outputs.lightsail.DistributionInputOrigin;
    /**
     * The status of the distribution.
     */
    readonly status?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.lightsail.DistributionTag[];
}

export function getDistributionOutput(args: GetDistributionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDistributionResult> {
    return pulumi.output(args).apply(a => getDistribution(a, opts))
}

export interface GetDistributionOutputArgs {
    /**
     * The name for the distribution.
     */
    distributionName: pulumi.Input<string>;
}
