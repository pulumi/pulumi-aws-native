// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Lightsail::Alarm
 */
export function getAlarm(args: GetAlarmArgs, opts?: pulumi.InvokeOptions): Promise<GetAlarmResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:lightsail:getAlarm", {
        "alarmName": args.alarmName,
    }, opts);
}

export interface GetAlarmArgs {
    /**
     * The name for the alarm. Specify the name of an existing alarm to update, and overwrite the previous configuration of the alarm.
     */
    alarmName: string;
}

export interface GetAlarmResult {
    readonly alarmArn?: string;
    /**
     * The arithmetic operation to use when comparing the specified statistic to the threshold. The specified statistic value is used as the first operand.
     */
    readonly comparisonOperator?: string;
    /**
     * The contact protocols to use for the alarm, such as Email, SMS (text messaging), or both.
     */
    readonly contactProtocols?: string[];
    /**
     * The number of data points that must be not within the specified threshold to trigger the alarm. If you are setting an "M out of N" alarm, this value (datapointsToAlarm) is the M.
     */
    readonly datapointsToAlarm?: number;
    /**
     * The number of most recent periods over which data is compared to the specified threshold. If you are setting an "M out of N" alarm, this value (evaluationPeriods) is the N.
     */
    readonly evaluationPeriods?: number;
    /**
     * Indicates whether the alarm is enabled. Notifications are enabled by default if you don't specify this parameter.
     */
    readonly notificationEnabled?: boolean;
    /**
     * The alarm states that trigger a notification.
     */
    readonly notificationTriggers?: string[];
    /**
     * The current state of the alarm.
     */
    readonly state?: string;
    /**
     * The value against which the specified statistic is compared.
     */
    readonly threshold?: number;
    /**
     * Sets how this alarm will handle missing data points.
     */
    readonly treatMissingData?: string;
}

export function getAlarmOutput(args: GetAlarmOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlarmResult> {
    return pulumi.output(args).apply(a => getAlarm(a, opts))
}

export interface GetAlarmOutputArgs {
    /**
     * The name for the alarm. Specify the name of an existing alarm to update, and overwrite the previous configuration of the alarm.
     */
    alarmName: pulumi.Input<string>;
}
