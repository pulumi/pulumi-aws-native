// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Lightsail::Database
 */
export function getDatabase(args: GetDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:lightsail:getDatabase", {
        "relationalDatabaseName": args.relationalDatabaseName,
    }, opts);
}

export interface GetDatabaseArgs {
    /**
     * The name to use for your new Lightsail database resource.
     */
    relationalDatabaseName: string;
}

export interface GetDatabaseResult {
    /**
     * When true, enables automated backup retention for your database. Updates are applied during the next maintenance window because this can result in an outage.
     */
    readonly backupRetention?: boolean;
    /**
     * Indicates the certificate that needs to be associated with the database.
     */
    readonly caCertificateIdentifier?: string;
    readonly databaseArn?: string;
    /**
     * The daily time range during which automated backups are created for your new database if automated backups are enabled.
     */
    readonly preferredBackupWindow?: string;
    /**
     * The weekly time range during which system maintenance can occur on your new database.
     */
    readonly preferredMaintenanceWindow?: string;
    /**
     * Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
     */
    readonly publiclyAccessible?: boolean;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.lightsail.DatabaseTag[];
}

export function getDatabaseOutput(args: GetDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseResult> {
    return pulumi.output(args).apply(a => getDatabase(a, opts))
}

export interface GetDatabaseOutputArgs {
    /**
     * The name to use for your new Lightsail database resource.
     */
    relationalDatabaseName: pulumi.Input<string>;
}
