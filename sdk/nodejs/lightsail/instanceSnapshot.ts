// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Lightsail::InstanceSnapshot
 */
export class InstanceSnapshot extends pulumi.CustomResource {
    /**
     * Get an existing InstanceSnapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceSnapshot {
        return new InstanceSnapshot(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:lightsail:InstanceSnapshot';

    /**
     * Returns true if the given object is an instance of InstanceSnapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceSnapshot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceSnapshot.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the snapshot.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the instance from which the snapshot was created.
     */
    declare public /*out*/ readonly fromInstanceArn: pulumi.Output<string>;
    /**
     * The instance from which the snapshot was created.
     */
    declare public /*out*/ readonly fromInstanceName: pulumi.Output<string>;
    /**
     * The instance from which the snapshot was created.
     */
    declare public readonly instanceName: pulumi.Output<string>;
    /**
     * The name of the snapshot.
     */
    declare public readonly instanceSnapshotName: pulumi.Output<string>;
    /**
     * A Boolean value indicating whether the snapshot was created from an automatic snapshot.
     */
    declare public /*out*/ readonly isFromAutoSnapshot: pulumi.Output<boolean>;
    declare public /*out*/ readonly location: pulumi.Output<outputs.lightsail.InstanceSnapshotLocation>;
    /**
     * The type of resource (usually InstanceSnapshot).
     */
    declare public /*out*/ readonly resourceType: pulumi.Output<string>;
    /**
     * The size in GB of the SSD
     */
    declare public /*out*/ readonly sizeInGb: pulumi.Output<number>;
    /**
     * The state the snapshot is in.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Support code to help identify any issues
     */
    declare public /*out*/ readonly supportCode: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a InstanceSnapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceSnapshotArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.instanceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            resourceInputs["instanceName"] = args?.instanceName;
            resourceInputs["instanceSnapshotName"] = args?.instanceSnapshotName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fromInstanceArn"] = undefined /*out*/;
            resourceInputs["fromInstanceName"] = undefined /*out*/;
            resourceInputs["isFromAutoSnapshot"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
            resourceInputs["sizeInGb"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["supportCode"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fromInstanceArn"] = undefined /*out*/;
            resourceInputs["fromInstanceName"] = undefined /*out*/;
            resourceInputs["instanceName"] = undefined /*out*/;
            resourceInputs["instanceSnapshotName"] = undefined /*out*/;
            resourceInputs["isFromAutoSnapshot"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
            resourceInputs["sizeInGb"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["supportCode"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["instanceName", "instanceSnapshotName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(InstanceSnapshot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a InstanceSnapshot resource.
 */
export interface InstanceSnapshotArgs {
    /**
     * The instance from which the snapshot was created.
     */
    instanceName: pulumi.Input<string>;
    /**
     * The name of the snapshot.
     */
    instanceSnapshotName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
