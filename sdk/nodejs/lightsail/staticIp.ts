// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Lightsail::StaticIp
 */
export class StaticIp extends pulumi.CustomResource {
    /**
     * Get an existing StaticIp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StaticIp {
        return new StaticIp(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:lightsail:StaticIp';

    /**
     * Returns true if the given object is an instance of StaticIp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StaticIp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StaticIp.__pulumiType;
    }

    /**
     * The instance where the static IP is attached.
     */
    public readonly attachedTo!: pulumi.Output<string | undefined>;
    /**
     * The static IP address.
     */
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    /**
     * A Boolean value indicating whether the static IP is attached.
     */
    public /*out*/ readonly isAttached!: pulumi.Output<boolean>;
    public /*out*/ readonly staticIpArn!: pulumi.Output<string>;
    /**
     * The name of the static IP address.
     */
    public readonly staticIpName!: pulumi.Output<string>;

    /**
     * Create a StaticIp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StaticIpArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["attachedTo"] = args ? args.attachedTo : undefined;
            inputs["staticIpName"] = args ? args.staticIpName : undefined;
            inputs["ipAddress"] = undefined /*out*/;
            inputs["isAttached"] = undefined /*out*/;
            inputs["staticIpArn"] = undefined /*out*/;
        } else {
            inputs["attachedTo"] = undefined /*out*/;
            inputs["ipAddress"] = undefined /*out*/;
            inputs["isAttached"] = undefined /*out*/;
            inputs["staticIpArn"] = undefined /*out*/;
            inputs["staticIpName"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(StaticIp.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a StaticIp resource.
 */
export interface StaticIpArgs {
    /**
     * The instance where the static IP is attached.
     */
    attachedTo?: pulumi.Input<string>;
    /**
     * The name of the static IP address.
     */
    staticIpName?: pulumi.Input<string>;
}
