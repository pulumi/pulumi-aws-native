// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Lightsail::Distribution
 *
 * @deprecated Distribution is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class Distribution extends pulumi.CustomResource {
    /**
     * Get an existing Distribution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Distribution {
        pulumi.log.warn("Distribution is deprecated: Distribution is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new Distribution(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:lightsail:Distribution';

    /**
     * Returns true if the given object is an instance of Distribution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Distribution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Distribution.__pulumiType;
    }

    /**
     * Indicates whether the bundle that is currently applied to your distribution, specified using the distributionName parameter, can be changed to another bundle.
     */
    public /*out*/ readonly ableToUpdateBundle!: pulumi.Output<boolean>;
    /**
     * The bundle ID to use for the distribution.
     */
    public readonly bundleId!: pulumi.Output<string>;
    /**
     * An object that describes the cache behavior settings for the distribution.
     */
    public readonly cacheBehaviorSettings!: pulumi.Output<outputs.lightsail.DistributionCacheSettings | undefined>;
    /**
     * An array of objects that describe the per-path cache behavior for the distribution.
     */
    public readonly cacheBehaviors!: pulumi.Output<outputs.lightsail.DistributionCacheBehaviorPerPath[] | undefined>;
    /**
     * The certificate attached to the Distribution.
     */
    public readonly certificateName!: pulumi.Output<string | undefined>;
    /**
     * An object that describes the default cache behavior for the distribution.
     */
    public readonly defaultCacheBehavior!: pulumi.Output<outputs.lightsail.DistributionCacheBehavior>;
    public /*out*/ readonly distributionArn!: pulumi.Output<string>;
    /**
     * The name for the distribution.
     */
    public readonly distributionName!: pulumi.Output<string>;
    /**
     * The IP address type for the distribution.
     */
    public readonly ipAddressType!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the distribution is enabled.
     */
    public readonly isEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
     */
    public readonly origin!: pulumi.Output<outputs.lightsail.DistributionInputOrigin>;
    /**
     * The status of the distribution.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.lightsail.DistributionTag[] | undefined>;

    /**
     * Create a Distribution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Distribution is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: DistributionArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Distribution is deprecated: Distribution is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.bundleId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bundleId'");
            }
            if ((!args || args.defaultCacheBehavior === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultCacheBehavior'");
            }
            if ((!args || args.origin === undefined) && !opts.urn) {
                throw new Error("Missing required property 'origin'");
            }
            resourceInputs["bundleId"] = args ? args.bundleId : undefined;
            resourceInputs["cacheBehaviorSettings"] = args ? args.cacheBehaviorSettings : undefined;
            resourceInputs["cacheBehaviors"] = args ? args.cacheBehaviors : undefined;
            resourceInputs["certificateName"] = args ? args.certificateName : undefined;
            resourceInputs["defaultCacheBehavior"] = args ? args.defaultCacheBehavior : undefined;
            resourceInputs["distributionName"] = args ? args.distributionName : undefined;
            resourceInputs["ipAddressType"] = args ? args.ipAddressType : undefined;
            resourceInputs["isEnabled"] = args ? args.isEnabled : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["ableToUpdateBundle"] = undefined /*out*/;
            resourceInputs["distributionArn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["ableToUpdateBundle"] = undefined /*out*/;
            resourceInputs["bundleId"] = undefined /*out*/;
            resourceInputs["cacheBehaviorSettings"] = undefined /*out*/;
            resourceInputs["cacheBehaviors"] = undefined /*out*/;
            resourceInputs["certificateName"] = undefined /*out*/;
            resourceInputs["defaultCacheBehavior"] = undefined /*out*/;
            resourceInputs["distributionArn"] = undefined /*out*/;
            resourceInputs["distributionName"] = undefined /*out*/;
            resourceInputs["ipAddressType"] = undefined /*out*/;
            resourceInputs["isEnabled"] = undefined /*out*/;
            resourceInputs["origin"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Distribution.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Distribution resource.
 */
export interface DistributionArgs {
    /**
     * The bundle ID to use for the distribution.
     */
    bundleId: pulumi.Input<string>;
    /**
     * An object that describes the cache behavior settings for the distribution.
     */
    cacheBehaviorSettings?: pulumi.Input<inputs.lightsail.DistributionCacheSettingsArgs>;
    /**
     * An array of objects that describe the per-path cache behavior for the distribution.
     */
    cacheBehaviors?: pulumi.Input<pulumi.Input<inputs.lightsail.DistributionCacheBehaviorPerPathArgs>[]>;
    /**
     * The certificate attached to the Distribution.
     */
    certificateName?: pulumi.Input<string>;
    /**
     * An object that describes the default cache behavior for the distribution.
     */
    defaultCacheBehavior: pulumi.Input<inputs.lightsail.DistributionCacheBehaviorArgs>;
    /**
     * The name for the distribution.
     */
    distributionName?: pulumi.Input<string>;
    /**
     * The IP address type for the distribution.
     */
    ipAddressType?: pulumi.Input<string>;
    /**
     * Indicates whether the distribution is enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
     */
    origin: pulumi.Input<inputs.lightsail.DistributionInputOriginArgs>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.lightsail.DistributionTagArgs>[]>;
}
