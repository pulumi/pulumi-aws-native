// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Schema for AWS::ServiceCatalog::ServiceAction
 */
export class ServiceAction extends pulumi.CustomResource {
    /**
     * Get an existing ServiceAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceAction {
        return new ServiceAction(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:servicecatalog:ServiceAction';

    /**
     * Returns true if the given object is an instance of ServiceAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceAction.__pulumiType;
    }

    public readonly acceptLanguage!: pulumi.Output<enums.servicecatalog.ServiceActionAcceptLanguage | undefined>;
    public readonly definition!: pulumi.Output<outputs.servicecatalog.ServiceActionDefinitionParameter[]>;
    public readonly definitionType!: pulumi.Output<enums.servicecatalog.ServiceActionDefinitionType>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a ServiceAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceActionArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.definition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'definition'");
            }
            if ((!args || args.definitionType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'definitionType'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            inputs["acceptLanguage"] = args ? args.acceptLanguage : undefined;
            inputs["definition"] = args ? args.definition : undefined;
            inputs["definitionType"] = args ? args.definitionType : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["name"] = args ? args.name : undefined;
        } else {
            inputs["acceptLanguage"] = undefined /*out*/;
            inputs["definition"] = undefined /*out*/;
            inputs["definitionType"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ServiceAction.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServiceAction resource.
 */
export interface ServiceActionArgs {
    acceptLanguage?: pulumi.Input<enums.servicecatalog.ServiceActionAcceptLanguage>;
    definition: pulumi.Input<pulumi.Input<inputs.servicecatalog.ServiceActionDefinitionParameterArgs>[]>;
    definitionType: pulumi.Input<enums.servicecatalog.ServiceActionDefinitionType>;
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
