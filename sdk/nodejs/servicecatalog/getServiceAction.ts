// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Schema for AWS::ServiceCatalog::ServiceAction
 */
export function getServiceAction(args: GetServiceActionArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceActionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:servicecatalog:getServiceAction", {
        "id": args.id,
    }, opts);
}

export interface GetServiceActionArgs {
    id: string;
}

export interface GetServiceActionResult {
    readonly acceptLanguage?: enums.servicecatalog.ServiceActionAcceptLanguage;
    readonly definition?: outputs.servicecatalog.ServiceActionDefinitionParameter[];
    readonly definitionType?: enums.servicecatalog.ServiceActionDefinitionType;
    readonly description?: string;
    readonly id?: string;
    readonly name?: string;
}

export function getServiceActionOutput(args: GetServiceActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceActionResult> {
    return pulumi.output(args).apply(a => getServiceAction(a, opts))
}

export interface GetServiceActionOutputArgs {
    id: pulumi.Input<string>;
}
