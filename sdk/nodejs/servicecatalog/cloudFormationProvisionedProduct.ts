// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
 */
export class CloudFormationProvisionedProduct extends pulumi.CustomResource {
    /**
     * Get an existing CloudFormationProvisionedProduct resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CloudFormationProvisionedProduct {
        return new CloudFormationProvisionedProduct(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:servicecatalog:CloudFormationProvisionedProduct';

    /**
     * Returns true if the given object is an instance of CloudFormationProvisionedProduct.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudFormationProvisionedProduct {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudFormationProvisionedProduct.__pulumiType;
    }

    /**
     * The language code.
     *
     * - `jp` - Japanese
     * - `zh` - Chinese
     */
    public readonly acceptLanguage!: pulumi.Output<enums.servicecatalog.CloudFormationProvisionedProductAcceptLanguage | undefined>;
    public /*out*/ readonly cloudformationStackArn!: pulumi.Output<string>;
    /**
     * Passed to AWS CloudFormation . The SNS topic ARNs to which to publish stack-related events.
     */
    public readonly notificationArns!: pulumi.Output<string[] | undefined>;
    /**
     * List of key-value pair outputs.
     */
    public /*out*/ readonly outputs!: pulumi.Output<{[key: string]: string}>;
    /**
     * The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use [ListLaunchPaths](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ListLaunchPaths.html) .
     *
     * > You must provide the name or ID, but not both.
     */
    public readonly pathId!: pulumi.Output<string | undefined>;
    /**
     * The name of the path. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use [ListLaunchPaths](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ListLaunchPaths.html) .
     *
     * > You must provide the name or ID, but not both.
     */
    public readonly pathName!: pulumi.Output<string | undefined>;
    /**
     * The product identifier.
     *
     * > You must specify either the ID or the name of the product, but not both.
     */
    public readonly productId!: pulumi.Output<string | undefined>;
    /**
     * The name of the Service Catalog product.
     *
     * Each time a stack is created or updated, if `ProductName` is provided it will successfully resolve to `ProductId` as long as only one product exists in the account or Region with that `ProductName` .
     *
     * > You must specify either the name or the ID of the product, but not both.
     */
    public readonly productName!: pulumi.Output<string | undefined>;
    /**
     * The ID of the provisioned product.
     */
    public /*out*/ readonly provisionedProductId!: pulumi.Output<string>;
    /**
     * A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
     */
    public readonly provisionedProductName!: pulumi.Output<string | undefined>;
    /**
     * The identifier of the provisioning artifact (also known as a version).
     *
     * > You must specify either the ID or the name of the provisioning artifact, but not both.
     */
    public readonly provisioningArtifactId!: pulumi.Output<string | undefined>;
    /**
     * The name of the provisioning artifact (also known as a version) for the product. This name must be unique for the product.
     *
     * > You must specify either the name or the ID of the provisioning artifact, but not both. You must also specify either the name or the ID of the product, but not both.
     */
    public readonly provisioningArtifactName!: pulumi.Output<string | undefined>;
    /**
     * Information about a parameter used to provision a product.
     */
    public readonly provisioningParameters!: pulumi.Output<outputs.servicecatalog.CloudFormationProvisionedProductProvisioningParameter[] | undefined>;
    /**
     * The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product type
     *
     * One or more AWS accounts that will have access to the provisioned product.
     *
     * Applicable only to a `CFN_STACKSET` provisioned product type.
     *
     * The AWS accounts specified should be within the list of accounts in the `STACKSET` constraint. To get the list of accounts in the `STACKSET` constraint, use the `DescribeProvisioningParameters` operation.
     *
     * If no values are specified, the default value is all accounts from the `STACKSET` constraint.
     */
    public readonly provisioningPreferences!: pulumi.Output<outputs.servicecatalog.CloudFormationProvisionedProductProvisioningPreferences | undefined>;
    /**
     * The ID of the record, such as `rec-rjeatvy434trk` .
     */
    public /*out*/ readonly recordId!: pulumi.Output<string>;
    /**
     * Information about a tag. A tag is a key-value pair. Tags are propagated to the resources created when provisioning a product.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a CloudFormationProvisionedProduct resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CloudFormationProvisionedProductArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["acceptLanguage"] = args ? args.acceptLanguage : undefined;
            resourceInputs["notificationArns"] = args ? args.notificationArns : undefined;
            resourceInputs["pathId"] = args ? args.pathId : undefined;
            resourceInputs["pathName"] = args ? args.pathName : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["productName"] = args ? args.productName : undefined;
            resourceInputs["provisionedProductName"] = args ? args.provisionedProductName : undefined;
            resourceInputs["provisioningArtifactId"] = args ? args.provisioningArtifactId : undefined;
            resourceInputs["provisioningArtifactName"] = args ? args.provisioningArtifactName : undefined;
            resourceInputs["provisioningParameters"] = args ? args.provisioningParameters : undefined;
            resourceInputs["provisioningPreferences"] = args ? args.provisioningPreferences : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["cloudformationStackArn"] = undefined /*out*/;
            resourceInputs["outputs"] = undefined /*out*/;
            resourceInputs["provisionedProductId"] = undefined /*out*/;
            resourceInputs["recordId"] = undefined /*out*/;
        } else {
            resourceInputs["acceptLanguage"] = undefined /*out*/;
            resourceInputs["cloudformationStackArn"] = undefined /*out*/;
            resourceInputs["notificationArns"] = undefined /*out*/;
            resourceInputs["outputs"] = undefined /*out*/;
            resourceInputs["pathId"] = undefined /*out*/;
            resourceInputs["pathName"] = undefined /*out*/;
            resourceInputs["productId"] = undefined /*out*/;
            resourceInputs["productName"] = undefined /*out*/;
            resourceInputs["provisionedProductId"] = undefined /*out*/;
            resourceInputs["provisionedProductName"] = undefined /*out*/;
            resourceInputs["provisioningArtifactId"] = undefined /*out*/;
            resourceInputs["provisioningArtifactName"] = undefined /*out*/;
            resourceInputs["provisioningParameters"] = undefined /*out*/;
            resourceInputs["provisioningPreferences"] = undefined /*out*/;
            resourceInputs["recordId"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["notificationArns[*]", "provisionedProductName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(CloudFormationProvisionedProduct.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CloudFormationProvisionedProduct resource.
 */
export interface CloudFormationProvisionedProductArgs {
    /**
     * The language code.
     *
     * - `jp` - Japanese
     * - `zh` - Chinese
     */
    acceptLanguage?: pulumi.Input<enums.servicecatalog.CloudFormationProvisionedProductAcceptLanguage>;
    /**
     * Passed to AWS CloudFormation . The SNS topic ARNs to which to publish stack-related events.
     */
    notificationArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use [ListLaunchPaths](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ListLaunchPaths.html) .
     *
     * > You must provide the name or ID, but not both.
     */
    pathId?: pulumi.Input<string>;
    /**
     * The name of the path. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use [ListLaunchPaths](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ListLaunchPaths.html) .
     *
     * > You must provide the name or ID, but not both.
     */
    pathName?: pulumi.Input<string>;
    /**
     * The product identifier.
     *
     * > You must specify either the ID or the name of the product, but not both.
     */
    productId?: pulumi.Input<string>;
    /**
     * The name of the Service Catalog product.
     *
     * Each time a stack is created or updated, if `ProductName` is provided it will successfully resolve to `ProductId` as long as only one product exists in the account or Region with that `ProductName` .
     *
     * > You must specify either the name or the ID of the product, but not both.
     */
    productName?: pulumi.Input<string>;
    /**
     * A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
     */
    provisionedProductName?: pulumi.Input<string>;
    /**
     * The identifier of the provisioning artifact (also known as a version).
     *
     * > You must specify either the ID or the name of the provisioning artifact, but not both.
     */
    provisioningArtifactId?: pulumi.Input<string>;
    /**
     * The name of the provisioning artifact (also known as a version) for the product. This name must be unique for the product.
     *
     * > You must specify either the name or the ID of the provisioning artifact, but not both. You must also specify either the name or the ID of the product, but not both.
     */
    provisioningArtifactName?: pulumi.Input<string>;
    /**
     * Information about a parameter used to provision a product.
     */
    provisioningParameters?: pulumi.Input<pulumi.Input<inputs.servicecatalog.CloudFormationProvisionedProductProvisioningParameterArgs>[]>;
    /**
     * The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product type
     *
     * One or more AWS accounts that will have access to the provisioned product.
     *
     * Applicable only to a `CFN_STACKSET` provisioned product type.
     *
     * The AWS accounts specified should be within the list of accounts in the `STACKSET` constraint. To get the list of accounts in the `STACKSET` constraint, use the `DescribeProvisioningParameters` operation.
     *
     * If no values are specified, the default value is all accounts from the `STACKSET` constraint.
     */
    provisioningPreferences?: pulumi.Input<inputs.servicecatalog.CloudFormationProvisionedProductProvisioningPreferencesArgs>;
    /**
     * Information about a tag. A tag is a key-value pair. Tags are propagated to the resources created when provisioning a product.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
