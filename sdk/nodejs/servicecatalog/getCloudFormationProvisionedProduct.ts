// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
 */
export function getCloudFormationProvisionedProduct(args: GetCloudFormationProvisionedProductArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudFormationProvisionedProductResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:servicecatalog:getCloudFormationProvisionedProduct", {
        "provisionedProductId": args.provisionedProductId,
    }, opts);
}

export interface GetCloudFormationProvisionedProductArgs {
    provisionedProductId: string;
}

export interface GetCloudFormationProvisionedProductResult {
    readonly acceptLanguage?: enums.servicecatalog.CloudFormationProvisionedProductAcceptLanguage;
    readonly cloudformationStackArn?: string;
    /**
     * List of key-value pair outputs.
     */
    readonly outputs?: any;
    readonly pathId?: string;
    readonly pathName?: string;
    readonly productId?: string;
    readonly productName?: string;
    readonly provisionedProductId?: string;
    readonly provisioningArtifactId?: string;
    readonly provisioningArtifactName?: string;
    readonly provisioningParameters?: outputs.servicecatalog.CloudFormationProvisionedProductProvisioningParameter[];
    readonly provisioningPreferences?: outputs.servicecatalog.CloudFormationProvisionedProductProvisioningPreferences;
    readonly recordId?: string;
    readonly tags?: outputs.servicecatalog.CloudFormationProvisionedProductTag[];
}

export function getCloudFormationProvisionedProductOutput(args: GetCloudFormationProvisionedProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudFormationProvisionedProductResult> {
    return pulumi.output(args).apply(a => getCloudFormationProvisionedProduct(a, opts))
}

export interface GetCloudFormationProvisionedProductOutputArgs {
    provisionedProductId: pulumi.Input<string>;
}
