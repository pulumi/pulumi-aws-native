// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ServiceCatalog::PortfolioProductAssociation
 */
export class PortfolioProductAssociation extends pulumi.CustomResource {
    /**
     * Get an existing PortfolioProductAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PortfolioProductAssociation {
        return new PortfolioProductAssociation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:servicecatalog:PortfolioProductAssociation';

    /**
     * Returns true if the given object is an instance of PortfolioProductAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PortfolioProductAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PortfolioProductAssociation.__pulumiType;
    }

    /**
     * The language code.
     */
    declare public readonly acceptLanguage: pulumi.Output<string | undefined>;
    /**
     * The portfolio identifier.
     */
    declare public readonly portfolioId: pulumi.Output<string | undefined>;
    /**
     * The product identifier.
     */
    declare public readonly productId: pulumi.Output<string | undefined>;
    /**
     * The identifier of the source portfolio. The source portfolio must be a portfolio imported from a different account than the one creating the association. This account must have previously shared this portfolio with the account creating the association.
     */
    declare public readonly sourcePortfolioId: pulumi.Output<string | undefined>;

    /**
     * Create a PortfolioProductAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PortfolioProductAssociationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["acceptLanguage"] = args?.acceptLanguage;
            resourceInputs["portfolioId"] = args?.portfolioId;
            resourceInputs["productId"] = args?.productId;
            resourceInputs["sourcePortfolioId"] = args?.sourcePortfolioId;
        } else {
            resourceInputs["acceptLanguage"] = undefined /*out*/;
            resourceInputs["portfolioId"] = undefined /*out*/;
            resourceInputs["productId"] = undefined /*out*/;
            resourceInputs["sourcePortfolioId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["acceptLanguage", "portfolioId", "productId", "sourcePortfolioId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(PortfolioProductAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a PortfolioProductAssociation resource.
 */
export interface PortfolioProductAssociationArgs {
    /**
     * The language code.
     */
    acceptLanguage?: pulumi.Input<string>;
    /**
     * The portfolio identifier.
     */
    portfolioId?: pulumi.Input<string>;
    /**
     * The product identifier.
     */
    productId?: pulumi.Input<string>;
    /**
     * The identifier of the source portfolio. The source portfolio must be a portfolio imported from a different account than the one creating the association. This account must have previously shared this portfolio with the account creating the association.
     */
    sourcePortfolioId?: pulumi.Input<string>;
}
