// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ServiceCatalog::CloudFormationProduct
 */
export function getCloudFormationProduct(args: GetCloudFormationProductArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudFormationProductResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:servicecatalog:getCloudFormationProduct", {
        "id": args.id,
    }, opts);
}

export interface GetCloudFormationProductArgs {
    id: string;
}

export interface GetCloudFormationProductResult {
    readonly acceptLanguage?: string;
    readonly description?: string;
    readonly distributor?: string;
    readonly id?: string;
    readonly name?: string;
    readonly owner?: string;
    readonly productName?: string;
    readonly provisioningArtifactIds?: string;
    readonly provisioningArtifactNames?: string;
    readonly provisioningArtifactParameters?: outputs.servicecatalog.CloudFormationProductProvisioningArtifactProperties[];
    readonly replaceProvisioningArtifacts?: boolean;
    readonly supportDescription?: string;
    readonly supportEmail?: string;
    readonly supportUrl?: string;
    readonly tags?: outputs.servicecatalog.CloudFormationProductTag[];
}

export function getCloudFormationProductOutput(args: GetCloudFormationProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudFormationProductResult> {
    return pulumi.output(args).apply(a => getCloudFormationProduct(a, opts))
}

export interface GetCloudFormationProductOutputArgs {
    id: pulumi.Input<string>;
}
