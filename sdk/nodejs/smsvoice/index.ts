// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConfigurationSetArgs } from "./configurationSet";
export type ConfigurationSet = import("./configurationSet").ConfigurationSet;
export const ConfigurationSet: typeof import("./configurationSet").ConfigurationSet = null as any;
utilities.lazyLoad(exports, ["ConfigurationSet"], () => require("./configurationSet"));

export { GetConfigurationSetArgs, GetConfigurationSetResult, GetConfigurationSetOutputArgs } from "./getConfigurationSet";
export const getConfigurationSet: typeof import("./getConfigurationSet").getConfigurationSet = null as any;
export const getConfigurationSetOutput: typeof import("./getConfigurationSet").getConfigurationSetOutput = null as any;
utilities.lazyLoad(exports, ["getConfigurationSet","getConfigurationSetOutput"], () => require("./getConfigurationSet"));

export { GetOptOutListArgs, GetOptOutListResult, GetOptOutListOutputArgs } from "./getOptOutList";
export const getOptOutList: typeof import("./getOptOutList").getOptOutList = null as any;
export const getOptOutListOutput: typeof import("./getOptOutList").getOptOutListOutput = null as any;
utilities.lazyLoad(exports, ["getOptOutList","getOptOutListOutput"], () => require("./getOptOutList"));

export { GetPhoneNumberArgs, GetPhoneNumberResult, GetPhoneNumberOutputArgs } from "./getPhoneNumber";
export const getPhoneNumber: typeof import("./getPhoneNumber").getPhoneNumber = null as any;
export const getPhoneNumberOutput: typeof import("./getPhoneNumber").getPhoneNumberOutput = null as any;
utilities.lazyLoad(exports, ["getPhoneNumber","getPhoneNumberOutput"], () => require("./getPhoneNumber"));

export { GetPoolArgs, GetPoolResult, GetPoolOutputArgs } from "./getPool";
export const getPool: typeof import("./getPool").getPool = null as any;
export const getPoolOutput: typeof import("./getPool").getPoolOutput = null as any;
utilities.lazyLoad(exports, ["getPool","getPoolOutput"], () => require("./getPool"));

export { GetProtectConfigurationArgs, GetProtectConfigurationResult, GetProtectConfigurationOutputArgs } from "./getProtectConfiguration";
export const getProtectConfiguration: typeof import("./getProtectConfiguration").getProtectConfiguration = null as any;
export const getProtectConfigurationOutput: typeof import("./getProtectConfiguration").getProtectConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getProtectConfiguration","getProtectConfigurationOutput"], () => require("./getProtectConfiguration"));

export { GetResourcePolicyArgs, GetResourcePolicyResult, GetResourcePolicyOutputArgs } from "./getResourcePolicy";
export const getResourcePolicy: typeof import("./getResourcePolicy").getResourcePolicy = null as any;
export const getResourcePolicyOutput: typeof import("./getResourcePolicy").getResourcePolicyOutput = null as any;
utilities.lazyLoad(exports, ["getResourcePolicy","getResourcePolicyOutput"], () => require("./getResourcePolicy"));

export { GetSenderIdArgs, GetSenderIdResult, GetSenderIdOutputArgs } from "./getSenderId";
export const getSenderId: typeof import("./getSenderId").getSenderId = null as any;
export const getSenderIdOutput: typeof import("./getSenderId").getSenderIdOutput = null as any;
utilities.lazyLoad(exports, ["getSenderId","getSenderIdOutput"], () => require("./getSenderId"));

export { OptOutListArgs } from "./optOutList";
export type OptOutList = import("./optOutList").OptOutList;
export const OptOutList: typeof import("./optOutList").OptOutList = null as any;
utilities.lazyLoad(exports, ["OptOutList"], () => require("./optOutList"));

export { PhoneNumberArgs } from "./phoneNumber";
export type PhoneNumber = import("./phoneNumber").PhoneNumber;
export const PhoneNumber: typeof import("./phoneNumber").PhoneNumber = null as any;
utilities.lazyLoad(exports, ["PhoneNumber"], () => require("./phoneNumber"));

export { PoolArgs } from "./pool";
export type Pool = import("./pool").Pool;
export const Pool: typeof import("./pool").Pool = null as any;
utilities.lazyLoad(exports, ["Pool"], () => require("./pool"));

export { ProtectConfigurationArgs } from "./protectConfiguration";
export type ProtectConfiguration = import("./protectConfiguration").ProtectConfiguration;
export const ProtectConfiguration: typeof import("./protectConfiguration").ProtectConfiguration = null as any;
utilities.lazyLoad(exports, ["ProtectConfiguration"], () => require("./protectConfiguration"));

export { ResourcePolicyArgs } from "./resourcePolicy";
export type ResourcePolicy = import("./resourcePolicy").ResourcePolicy;
export const ResourcePolicy: typeof import("./resourcePolicy").ResourcePolicy = null as any;
utilities.lazyLoad(exports, ["ResourcePolicy"], () => require("./resourcePolicy"));

export { SenderIdArgs } from "./senderId";
export type SenderId = import("./senderId").SenderId;
export const SenderId: typeof import("./senderId").SenderId = null as any;
utilities.lazyLoad(exports, ["SenderId"], () => require("./senderId"));


// Export enums:
export * from "../types/enums/smsvoice";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:smsvoice:ConfigurationSet":
                return new ConfigurationSet(name, <any>undefined, { urn })
            case "aws-native:smsvoice:OptOutList":
                return new OptOutList(name, <any>undefined, { urn })
            case "aws-native:smsvoice:PhoneNumber":
                return new PhoneNumber(name, <any>undefined, { urn })
            case "aws-native:smsvoice:Pool":
                return new Pool(name, <any>undefined, { urn })
            case "aws-native:smsvoice:ProtectConfiguration":
                return new ProtectConfiguration(name, <any>undefined, { urn })
            case "aws-native:smsvoice:ResourcePolicy":
                return new ResourcePolicy(name, <any>undefined, { urn })
            case "aws-native:smsvoice:SenderId":
                return new SenderId(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "smsvoice", _module)
