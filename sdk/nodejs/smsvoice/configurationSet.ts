// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SMSVOICE::ConfigurationSet
 */
export class ConfigurationSet extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConfigurationSet {
        return new ConfigurationSet(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:smsvoice:ConfigurationSet';

    /**
     * Returns true if the given object is an instance of ConfigurationSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigurationSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationSet.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the ConfigurationSet.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name to use for the configuration set.
     */
    public readonly configurationSetName!: pulumi.Output<string | undefined>;
    /**
     * The default sender ID to set for the ConfigurationSet.
     */
    public readonly defaultSenderId!: pulumi.Output<string | undefined>;
    /**
     * An event destination is a location where you send message events.
     */
    public readonly eventDestinations!: pulumi.Output<outputs.smsvoice.ConfigurationSetEventDestination[] | undefined>;
    /**
     * Set to true to enable message feedback.
     */
    public readonly messageFeedbackEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The unique identifier for the protect configuration to be associated to the configuration set.
     */
    public readonly protectConfigurationId!: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a ConfigurationSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConfigurationSetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["configurationSetName"] = args ? args.configurationSetName : undefined;
            resourceInputs["defaultSenderId"] = args ? args.defaultSenderId : undefined;
            resourceInputs["eventDestinations"] = args ? args.eventDestinations : undefined;
            resourceInputs["messageFeedbackEnabled"] = args ? args.messageFeedbackEnabled : undefined;
            resourceInputs["protectConfigurationId"] = args ? args.protectConfigurationId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["configurationSetName"] = undefined /*out*/;
            resourceInputs["defaultSenderId"] = undefined /*out*/;
            resourceInputs["eventDestinations"] = undefined /*out*/;
            resourceInputs["messageFeedbackEnabled"] = undefined /*out*/;
            resourceInputs["protectConfigurationId"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["configurationSetName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ConfigurationSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ConfigurationSet resource.
 */
export interface ConfigurationSetArgs {
    /**
     * The name to use for the configuration set.
     */
    configurationSetName?: pulumi.Input<string>;
    /**
     * The default sender ID to set for the ConfigurationSet.
     */
    defaultSenderId?: pulumi.Input<string>;
    /**
     * An event destination is a location where you send message events.
     */
    eventDestinations?: pulumi.Input<pulumi.Input<inputs.smsvoice.ConfigurationSetEventDestinationArgs>[]>;
    /**
     * Set to true to enable message feedback.
     */
    messageFeedbackEnabled?: pulumi.Input<boolean>;
    /**
     * The unique identifier for the protect configuration to be associated to the configuration set.
     */
    protectConfigurationId?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
