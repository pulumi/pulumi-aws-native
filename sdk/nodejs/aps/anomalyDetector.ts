// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * AnomalyDetector schema for cloudformation.
 */
export class AnomalyDetector extends pulumi.CustomResource {
    /**
     * Get an existing AnomalyDetector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AnomalyDetector {
        return new AnomalyDetector(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:aps:AnomalyDetector';

    /**
     * Returns true if the given object is an instance of AnomalyDetector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AnomalyDetector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AnomalyDetector.__pulumiType;
    }

    /**
     * The AnomalyDetector alias.
     */
    declare public readonly alias: pulumi.Output<string>;
    /**
     * The AnomalyDetector ARN.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Determines the anomaly detector's algorithm and its configuration.
     */
    declare public readonly configuration: pulumi.Output<outputs.aps.AnomalyDetectorConfiguration>;
    /**
     * The AnomalyDetector period of detection and metric generation.
     */
    declare public readonly evaluationIntervalInSeconds: pulumi.Output<number | undefined>;
    /**
     * An array of key-value pairs to provide meta-data.
     */
    declare public readonly labels: pulumi.Output<outputs.aps.AnomalyDetectorLabel[] | undefined>;
    /**
     * The action to perform when running the expression returns no data.
     */
    declare public readonly missingDataAction: pulumi.Output<outputs.aps.AnomalyDetectorMissingDataAction | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Required to identify a specific APS Workspace associated with this Anomaly Detector.
     */
    declare public readonly workspace: pulumi.Output<string>;

    /**
     * Create a AnomalyDetector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnomalyDetectorArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.alias === undefined && !opts.urn) {
                throw new Error("Missing required property 'alias'");
            }
            if (args?.configuration === undefined && !opts.urn) {
                throw new Error("Missing required property 'configuration'");
            }
            if (args?.workspace === undefined && !opts.urn) {
                throw new Error("Missing required property 'workspace'");
            }
            resourceInputs["alias"] = args?.alias;
            resourceInputs["configuration"] = args?.configuration;
            resourceInputs["evaluationIntervalInSeconds"] = args?.evaluationIntervalInSeconds;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["missingDataAction"] = args?.missingDataAction;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["workspace"] = args?.workspace;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["alias"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["configuration"] = undefined /*out*/;
            resourceInputs["evaluationIntervalInSeconds"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["missingDataAction"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["workspace"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["alias", "workspace"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AnomalyDetector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AnomalyDetector resource.
 */
export interface AnomalyDetectorArgs {
    /**
     * The AnomalyDetector alias.
     */
    alias: pulumi.Input<string>;
    /**
     * Determines the anomaly detector's algorithm and its configuration.
     */
    configuration: pulumi.Input<inputs.aps.AnomalyDetectorConfigurationArgs>;
    /**
     * The AnomalyDetector period of detection and metric generation.
     */
    evaluationIntervalInSeconds?: pulumi.Input<number>;
    /**
     * An array of key-value pairs to provide meta-data.
     */
    labels?: pulumi.Input<pulumi.Input<inputs.aps.AnomalyDetectorLabelArgs>[]>;
    /**
     * The action to perform when running the expression returns no data.
     */
    missingDataAction?: pulumi.Input<inputs.aps.AnomalyDetectorMissingDataActionArgs>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Required to identify a specific APS Workspace associated with this Anomaly Detector.
     */
    workspace: pulumi.Input<string>;
}
