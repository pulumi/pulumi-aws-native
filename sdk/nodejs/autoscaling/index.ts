// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AutoScalingGroupArgs } from "./autoScalingGroup";
export type AutoScalingGroup = import("./autoScalingGroup").AutoScalingGroup;
export const AutoScalingGroup: typeof import("./autoScalingGroup").AutoScalingGroup = null as any;

export { GetAutoScalingGroupArgs, GetAutoScalingGroupResult, GetAutoScalingGroupOutputArgs } from "./getAutoScalingGroup";
export const getAutoScalingGroup: typeof import("./getAutoScalingGroup").getAutoScalingGroup = null as any;
export const getAutoScalingGroupOutput: typeof import("./getAutoScalingGroup").getAutoScalingGroupOutput = null as any;

export { GetLifecycleHookArgs, GetLifecycleHookResult, GetLifecycleHookOutputArgs } from "./getLifecycleHook";
export const getLifecycleHook: typeof import("./getLifecycleHook").getLifecycleHook = null as any;
export const getLifecycleHookOutput: typeof import("./getLifecycleHook").getLifecycleHookOutput = null as any;

export { GetScalingPolicyArgs, GetScalingPolicyResult, GetScalingPolicyOutputArgs } from "./getScalingPolicy";
export const getScalingPolicy: typeof import("./getScalingPolicy").getScalingPolicy = null as any;
export const getScalingPolicyOutput: typeof import("./getScalingPolicy").getScalingPolicyOutput = null as any;

export { GetScheduledActionArgs, GetScheduledActionResult, GetScheduledActionOutputArgs } from "./getScheduledAction";
export const getScheduledAction: typeof import("./getScheduledAction").getScheduledAction = null as any;
export const getScheduledActionOutput: typeof import("./getScheduledAction").getScheduledActionOutput = null as any;

export { GetWarmPoolArgs, GetWarmPoolResult, GetWarmPoolOutputArgs } from "./getWarmPool";
export const getWarmPool: typeof import("./getWarmPool").getWarmPool = null as any;
export const getWarmPoolOutput: typeof import("./getWarmPool").getWarmPoolOutput = null as any;

export { LaunchConfigurationArgs } from "./launchConfiguration";
export type LaunchConfiguration = import("./launchConfiguration").LaunchConfiguration;
export const LaunchConfiguration: typeof import("./launchConfiguration").LaunchConfiguration = null as any;

export { LifecycleHookArgs } from "./lifecycleHook";
export type LifecycleHook = import("./lifecycleHook").LifecycleHook;
export const LifecycleHook: typeof import("./lifecycleHook").LifecycleHook = null as any;

export { ScalingPolicyArgs } from "./scalingPolicy";
export type ScalingPolicy = import("./scalingPolicy").ScalingPolicy;
export const ScalingPolicy: typeof import("./scalingPolicy").ScalingPolicy = null as any;

export { ScheduledActionArgs } from "./scheduledAction";
export type ScheduledAction = import("./scheduledAction").ScheduledAction;
export const ScheduledAction: typeof import("./scheduledAction").ScheduledAction = null as any;

export { WarmPoolArgs } from "./warmPool";
export type WarmPool = import("./warmPool").WarmPool;
export const WarmPool: typeof import("./warmPool").WarmPool = null as any;

utilities.lazyLoad(exports, ["AutoScalingGroup"], () => require("./autoScalingGroup"));
utilities.lazyLoad(exports, ["getAutoScalingGroup","getAutoScalingGroupOutput"], () => require("./getAutoScalingGroup"));
utilities.lazyLoad(exports, ["getLifecycleHook","getLifecycleHookOutput"], () => require("./getLifecycleHook"));
utilities.lazyLoad(exports, ["getScalingPolicy","getScalingPolicyOutput"], () => require("./getScalingPolicy"));
utilities.lazyLoad(exports, ["getScheduledAction","getScheduledActionOutput"], () => require("./getScheduledAction"));
utilities.lazyLoad(exports, ["getWarmPool","getWarmPoolOutput"], () => require("./getWarmPool"));
utilities.lazyLoad(exports, ["LaunchConfiguration"], () => require("./launchConfiguration"));
utilities.lazyLoad(exports, ["LifecycleHook"], () => require("./lifecycleHook"));
utilities.lazyLoad(exports, ["ScalingPolicy"], () => require("./scalingPolicy"));
utilities.lazyLoad(exports, ["ScheduledAction"], () => require("./scheduledAction"));
utilities.lazyLoad(exports, ["WarmPool"], () => require("./warmPool"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:autoscaling:AutoScalingGroup":
                return new AutoScalingGroup(name, <any>undefined, { urn })
            case "aws-native:autoscaling:LaunchConfiguration":
                return new LaunchConfiguration(name, <any>undefined, { urn })
            case "aws-native:autoscaling:LifecycleHook":
                return new LifecycleHook(name, <any>undefined, { urn })
            case "aws-native:autoscaling:ScalingPolicy":
                return new ScalingPolicy(name, <any>undefined, { urn })
            case "aws-native:autoscaling:ScheduledAction":
                return new ScheduledAction(name, <any>undefined, { urn })
            case "aws-native:autoscaling:WarmPool":
                return new WarmPool(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "autoscaling", _module)
