// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AutoScaling::AutoScalingGroup
 */
export function getAutoScalingGroup(args: GetAutoScalingGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoScalingGroupResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:autoscaling:getAutoScalingGroup", {
        "id": args.id,
    }, opts);
}

export interface GetAutoScalingGroupArgs {
    id: string;
}

export interface GetAutoScalingGroupResult {
    readonly availabilityZones?: string[];
    readonly capacityRebalance?: boolean;
    readonly context?: string;
    readonly cooldown?: string;
    readonly defaultInstanceWarmup?: number;
    readonly desiredCapacity?: string;
    readonly desiredCapacityType?: string;
    readonly healthCheckGracePeriod?: number;
    readonly healthCheckType?: string;
    readonly id?: string;
    readonly launchConfigurationName?: string;
    readonly launchTemplate?: outputs.autoscaling.AutoScalingGroupLaunchTemplateSpecification;
    readonly launchTemplateSpecification?: string;
    readonly lifecycleHookSpecificationList?: outputs.autoscaling.AutoScalingGroupLifecycleHookSpecification[];
    readonly loadBalancerNames?: string[];
    readonly maxInstanceLifetime?: number;
    readonly maxSize?: string;
    readonly metricsCollection?: outputs.autoscaling.AutoScalingGroupMetricsCollection[];
    readonly minSize?: string;
    readonly mixedInstancesPolicy?: outputs.autoscaling.AutoScalingGroupMixedInstancesPolicy;
    readonly newInstancesProtectedFromScaleIn?: boolean;
    readonly notificationConfigurations?: outputs.autoscaling.AutoScalingGroupNotificationConfiguration[];
    readonly placementGroup?: string;
    readonly serviceLinkedRoleARN?: string;
    readonly tags?: outputs.autoscaling.AutoScalingGroupTagProperty[];
    readonly targetGroupARNs?: string[];
    readonly terminationPolicies?: string[];
    readonly vPCZoneIdentifier?: string[];
}

export function getAutoScalingGroupOutput(args: GetAutoScalingGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutoScalingGroupResult> {
    return pulumi.output(args).apply(a => getAutoScalingGroup(a, opts))
}

export interface GetAutoScalingGroupOutputArgs {
    id: pulumi.Input<string>;
}
