// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Create and manage Multicast groups.
 */
export class MulticastGroup extends pulumi.CustomResource {
    /**
     * Get an existing MulticastGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MulticastGroup {
        return new MulticastGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:iotwireless:MulticastGroup';

    /**
     * Returns true if the given object is an instance of MulticastGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MulticastGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MulticastGroup.__pulumiType;
    }

    /**
     * Multicast group arn. Returned after successful create.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Wireless device to associate. Only for update request.
     */
    public readonly associateWirelessDevice!: pulumi.Output<string | undefined>;
    /**
     * Multicast group description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    public readonly disassociateWirelessDevice!: pulumi.Output<string | undefined>;
    /**
     * Multicast group LoRaWAN
     */
    public readonly loRaWAN!: pulumi.Output<outputs.iotwireless.MulticastGroupLoRaWAN>;
    /**
     * Name of Multicast group
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Multicast group status. Returned after successful read.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the Multicast group.
     */
    public readonly tags!: pulumi.Output<outputs.iotwireless.MulticastGroupTag[] | undefined>;

    /**
     * Create a MulticastGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MulticastGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.loRaWAN === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loRaWAN'");
            }
            resourceInputs["associateWirelessDevice"] = args ? args.associateWirelessDevice : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disassociateWirelessDevice"] = args ? args.disassociateWirelessDevice : undefined;
            resourceInputs["loRaWAN"] = args ? args.loRaWAN : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["associateWirelessDevice"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["disassociateWirelessDevice"] = undefined /*out*/;
            resourceInputs["loRaWAN"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MulticastGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a MulticastGroup resource.
 */
export interface MulticastGroupArgs {
    /**
     * Wireless device to associate. Only for update request.
     */
    associateWirelessDevice?: pulumi.Input<string>;
    /**
     * Multicast group description
     */
    description?: pulumi.Input<string>;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    disassociateWirelessDevice?: pulumi.Input<string>;
    /**
     * Multicast group LoRaWAN
     */
    loRaWAN: pulumi.Input<inputs.iotwireless.MulticastGroupLoRaWANArgs>;
    /**
     * Name of Multicast group
     */
    name?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the Multicast group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.iotwireless.MulticastGroupTagArgs>[]>;
}
