// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Wireless Device Import Tasks
 */
export function getWirelessDeviceImportTask(args: GetWirelessDeviceImportTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetWirelessDeviceImportTaskResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iotwireless:getWirelessDeviceImportTask", {
        "id": args.id,
    }, opts);
}

export interface GetWirelessDeviceImportTaskArgs {
    /**
     * Id for Wireless Device Import Task, Returned upon successful start.
     */
    id: string;
}

export interface GetWirelessDeviceImportTaskResult {
    /**
     * Arn for Wireless Device Import Task, Returned upon successful start.
     */
    readonly arn?: string;
    /**
     * CreationDate for import task
     */
    readonly creationDate?: string;
    /**
     * Destination Name for import task
     */
    readonly destinationName?: string;
    /**
     * Failed Imported Devices Count
     */
    readonly failedImportedDevicesCount?: number;
    /**
     * Id for Wireless Device Import Task, Returned upon successful start.
     */
    readonly id?: string;
    /**
     * Initialized Imported Devices Count
     */
    readonly initializedImportedDevicesCount?: number;
    /**
     * Onboarded Imported Devices Count
     */
    readonly onboardedImportedDevicesCount?: number;
    /**
     * Pending Imported Devices Count
     */
    readonly pendingImportedDevicesCount?: number;
    /**
     * sidewalk contain file for created device and role
     */
    readonly sidewalk?: outputs.iotwireless.SidewalkProperties;
    /**
     * Status for import task
     */
    readonly status?: enums.iotwireless.WirelessDeviceImportTaskStatus;
    /**
     * StatusReason for import task
     */
    readonly statusReason?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Wireless Device Import Tasks
 */
export function getWirelessDeviceImportTaskOutput(args: GetWirelessDeviceImportTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWirelessDeviceImportTaskResult> {
    return pulumi.output(args).apply((a: any) => getWirelessDeviceImportTask(a, opts))
}

export interface GetWirelessDeviceImportTaskOutputArgs {
    /**
     * Id for Wireless Device Import Task, Returned upon successful start.
     */
    id: pulumi.Input<string>;
}
