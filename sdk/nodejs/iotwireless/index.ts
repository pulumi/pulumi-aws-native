// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DestinationArgs } from "./destination";
export type Destination = import("./destination").Destination;
export const Destination: typeof import("./destination").Destination = null as any;
utilities.lazyLoad(exports, ["Destination"], () => require("./destination"));

export { DeviceProfileArgs } from "./deviceProfile";
export type DeviceProfile = import("./deviceProfile").DeviceProfile;
export const DeviceProfile: typeof import("./deviceProfile").DeviceProfile = null as any;
utilities.lazyLoad(exports, ["DeviceProfile"], () => require("./deviceProfile"));

export { FuotaTaskArgs } from "./fuotaTask";
export type FuotaTask = import("./fuotaTask").FuotaTask;
export const FuotaTask: typeof import("./fuotaTask").FuotaTask = null as any;
utilities.lazyLoad(exports, ["FuotaTask"], () => require("./fuotaTask"));

export { GetDestinationArgs, GetDestinationResult, GetDestinationOutputArgs } from "./getDestination";
export const getDestination: typeof import("./getDestination").getDestination = null as any;
export const getDestinationOutput: typeof import("./getDestination").getDestinationOutput = null as any;
utilities.lazyLoad(exports, ["getDestination","getDestinationOutput"], () => require("./getDestination"));

export { GetDeviceProfileArgs, GetDeviceProfileResult, GetDeviceProfileOutputArgs } from "./getDeviceProfile";
export const getDeviceProfile: typeof import("./getDeviceProfile").getDeviceProfile = null as any;
export const getDeviceProfileOutput: typeof import("./getDeviceProfile").getDeviceProfileOutput = null as any;
utilities.lazyLoad(exports, ["getDeviceProfile","getDeviceProfileOutput"], () => require("./getDeviceProfile"));

export { GetFuotaTaskArgs, GetFuotaTaskResult, GetFuotaTaskOutputArgs } from "./getFuotaTask";
export const getFuotaTask: typeof import("./getFuotaTask").getFuotaTask = null as any;
export const getFuotaTaskOutput: typeof import("./getFuotaTask").getFuotaTaskOutput = null as any;
utilities.lazyLoad(exports, ["getFuotaTask","getFuotaTaskOutput"], () => require("./getFuotaTask"));

export { GetMulticastGroupArgs, GetMulticastGroupResult, GetMulticastGroupOutputArgs } from "./getMulticastGroup";
export const getMulticastGroup: typeof import("./getMulticastGroup").getMulticastGroup = null as any;
export const getMulticastGroupOutput: typeof import("./getMulticastGroup").getMulticastGroupOutput = null as any;
utilities.lazyLoad(exports, ["getMulticastGroup","getMulticastGroupOutput"], () => require("./getMulticastGroup"));

export { GetNetworkAnalyzerConfigurationArgs, GetNetworkAnalyzerConfigurationResult, GetNetworkAnalyzerConfigurationOutputArgs } from "./getNetworkAnalyzerConfiguration";
export const getNetworkAnalyzerConfiguration: typeof import("./getNetworkAnalyzerConfiguration").getNetworkAnalyzerConfiguration = null as any;
export const getNetworkAnalyzerConfigurationOutput: typeof import("./getNetworkAnalyzerConfiguration").getNetworkAnalyzerConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getNetworkAnalyzerConfiguration","getNetworkAnalyzerConfigurationOutput"], () => require("./getNetworkAnalyzerConfiguration"));

export { GetPartnerAccountArgs, GetPartnerAccountResult, GetPartnerAccountOutputArgs } from "./getPartnerAccount";
export const getPartnerAccount: typeof import("./getPartnerAccount").getPartnerAccount = null as any;
export const getPartnerAccountOutput: typeof import("./getPartnerAccount").getPartnerAccountOutput = null as any;
utilities.lazyLoad(exports, ["getPartnerAccount","getPartnerAccountOutput"], () => require("./getPartnerAccount"));

export { GetServiceProfileArgs, GetServiceProfileResult, GetServiceProfileOutputArgs } from "./getServiceProfile";
export const getServiceProfile: typeof import("./getServiceProfile").getServiceProfile = null as any;
export const getServiceProfileOutput: typeof import("./getServiceProfile").getServiceProfileOutput = null as any;
utilities.lazyLoad(exports, ["getServiceProfile","getServiceProfileOutput"], () => require("./getServiceProfile"));

export { GetTaskDefinitionArgs, GetTaskDefinitionResult, GetTaskDefinitionOutputArgs } from "./getTaskDefinition";
export const getTaskDefinition: typeof import("./getTaskDefinition").getTaskDefinition = null as any;
export const getTaskDefinitionOutput: typeof import("./getTaskDefinition").getTaskDefinitionOutput = null as any;
utilities.lazyLoad(exports, ["getTaskDefinition","getTaskDefinitionOutput"], () => require("./getTaskDefinition"));

export { GetWirelessDeviceArgs, GetWirelessDeviceResult, GetWirelessDeviceOutputArgs } from "./getWirelessDevice";
export const getWirelessDevice: typeof import("./getWirelessDevice").getWirelessDevice = null as any;
export const getWirelessDeviceOutput: typeof import("./getWirelessDevice").getWirelessDeviceOutput = null as any;
utilities.lazyLoad(exports, ["getWirelessDevice","getWirelessDeviceOutput"], () => require("./getWirelessDevice"));

export { GetWirelessGatewayArgs, GetWirelessGatewayResult, GetWirelessGatewayOutputArgs } from "./getWirelessGateway";
export const getWirelessGateway: typeof import("./getWirelessGateway").getWirelessGateway = null as any;
export const getWirelessGatewayOutput: typeof import("./getWirelessGateway").getWirelessGatewayOutput = null as any;
utilities.lazyLoad(exports, ["getWirelessGateway","getWirelessGatewayOutput"], () => require("./getWirelessGateway"));

export { MulticastGroupArgs } from "./multicastGroup";
export type MulticastGroup = import("./multicastGroup").MulticastGroup;
export const MulticastGroup: typeof import("./multicastGroup").MulticastGroup = null as any;
utilities.lazyLoad(exports, ["MulticastGroup"], () => require("./multicastGroup"));

export { NetworkAnalyzerConfigurationArgs } from "./networkAnalyzerConfiguration";
export type NetworkAnalyzerConfiguration = import("./networkAnalyzerConfiguration").NetworkAnalyzerConfiguration;
export const NetworkAnalyzerConfiguration: typeof import("./networkAnalyzerConfiguration").NetworkAnalyzerConfiguration = null as any;
utilities.lazyLoad(exports, ["NetworkAnalyzerConfiguration"], () => require("./networkAnalyzerConfiguration"));

export { PartnerAccountArgs } from "./partnerAccount";
export type PartnerAccount = import("./partnerAccount").PartnerAccount;
export const PartnerAccount: typeof import("./partnerAccount").PartnerAccount = null as any;
utilities.lazyLoad(exports, ["PartnerAccount"], () => require("./partnerAccount"));

export { ServiceProfileArgs } from "./serviceProfile";
export type ServiceProfile = import("./serviceProfile").ServiceProfile;
export const ServiceProfile: typeof import("./serviceProfile").ServiceProfile = null as any;
utilities.lazyLoad(exports, ["ServiceProfile"], () => require("./serviceProfile"));

export { TaskDefinitionArgs } from "./taskDefinition";
export type TaskDefinition = import("./taskDefinition").TaskDefinition;
export const TaskDefinition: typeof import("./taskDefinition").TaskDefinition = null as any;
utilities.lazyLoad(exports, ["TaskDefinition"], () => require("./taskDefinition"));

export { WirelessDeviceArgs } from "./wirelessDevice";
export type WirelessDevice = import("./wirelessDevice").WirelessDevice;
export const WirelessDevice: typeof import("./wirelessDevice").WirelessDevice = null as any;
utilities.lazyLoad(exports, ["WirelessDevice"], () => require("./wirelessDevice"));

export { WirelessGatewayArgs } from "./wirelessGateway";
export type WirelessGateway = import("./wirelessGateway").WirelessGateway;
export const WirelessGateway: typeof import("./wirelessGateway").WirelessGateway = null as any;
utilities.lazyLoad(exports, ["WirelessGateway"], () => require("./wirelessGateway"));


// Export enums:
export * from "../types/enums/iotwireless";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:iotwireless:Destination":
                return new Destination(name, <any>undefined, { urn })
            case "aws-native:iotwireless:DeviceProfile":
                return new DeviceProfile(name, <any>undefined, { urn })
            case "aws-native:iotwireless:FuotaTask":
                return new FuotaTask(name, <any>undefined, { urn })
            case "aws-native:iotwireless:MulticastGroup":
                return new MulticastGroup(name, <any>undefined, { urn })
            case "aws-native:iotwireless:NetworkAnalyzerConfiguration":
                return new NetworkAnalyzerConfiguration(name, <any>undefined, { urn })
            case "aws-native:iotwireless:PartnerAccount":
                return new PartnerAccount(name, <any>undefined, { urn })
            case "aws-native:iotwireless:ServiceProfile":
                return new ServiceProfile(name, <any>undefined, { urn })
            case "aws-native:iotwireless:TaskDefinition":
                return new TaskDefinition(name, <any>undefined, { urn })
            case "aws-native:iotwireless:WirelessDevice":
                return new WirelessDevice(name, <any>undefined, { urn })
            case "aws-native:iotwireless:WirelessGateway":
                return new WirelessGateway(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "iotwireless", _module)
