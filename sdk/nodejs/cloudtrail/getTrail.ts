// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Creates a trail that specifies the settings for delivery of log data to an Amazon S3 bucket. A maximum of five trails can exist in a region, irrespective of the region in which they were created.
 */
export function getTrail(args: GetTrailArgs, opts?: pulumi.InvokeOptions): Promise<GetTrailResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:cloudtrail:getTrail", {
        "trailName": args.trailName,
    }, opts);
}

export interface GetTrailArgs {
    trailName: string;
}

export interface GetTrailResult {
    readonly arn?: string;
    /**
     * Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn.
     */
    readonly cloudWatchLogsLogGroupArn?: string;
    /**
     * Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.
     */
    readonly cloudWatchLogsRoleArn?: string;
    /**
     * Specifies whether log file validation is enabled. The default is false.
     */
    readonly enableLogFileValidation?: boolean;
    /**
     * Use event selectors to further specify the management and data event settings for your trail. By default, trails created without specific event selectors will be configured to log all read and write management events, and no data events. When an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the trail doesn't log the event. You can configure up to five event selectors for a trail.
     */
    readonly eventSelectors?: outputs.cloudtrail.TrailEventSelector[];
    /**
     * Specifies whether the trail is publishing events from global services such as IAM to the log files.
     */
    readonly includeGlobalServiceEvents?: boolean;
    /**
     * Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail.
     */
    readonly insightSelectors?: outputs.cloudtrail.TrailInsightSelector[];
    /**
     * Whether the CloudTrail is currently logging AWS API calls.
     */
    readonly isLogging?: boolean;
    /**
     * Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails that log events in all regions.
     */
    readonly isMultiRegionTrail?: boolean;
    /**
     * Specifies whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the master account for an organization in AWS Organizations.
     */
    readonly isOrganizationTrail?: boolean;
    /**
     * Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
     */
    readonly kMSKeyId?: string;
    /**
     * Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements.
     */
    readonly s3BucketName?: string;
    /**
     * Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery. For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters.
     */
    readonly s3KeyPrefix?: string;
    readonly snsTopicArn?: string;
    /**
     * Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters.
     */
    readonly snsTopicName?: string;
    readonly tags?: outputs.cloudtrail.TrailTag[];
}

export function getTrailOutput(args: GetTrailOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrailResult> {
    return pulumi.output(args).apply(a => getTrail(a, opts))
}

export interface GetTrailOutputArgs {
    trailName: pulumi.Input<string>;
}
