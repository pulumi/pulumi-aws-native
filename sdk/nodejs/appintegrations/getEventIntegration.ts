// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppIntegrations::EventIntegration
 */
export function getEventIntegration(args: GetEventIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetEventIntegrationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:appintegrations:getEventIntegration", {
        "name": args.name,
    }, opts);
}

export interface GetEventIntegrationArgs {
    /**
     * The name of the event integration.
     */
    name: string;
}

export interface GetEventIntegrationResult {
    /**
     * The associations with the event integration.
     */
    readonly associations?: outputs.appintegrations.EventIntegrationAssociation[];
    /**
     * The event integration description.
     */
    readonly description?: string;
    /**
     * The Amazon Resource Name (ARN) of the event integration.
     */
    readonly eventIntegrationArn?: string;
    /**
     * The tags (keys and values) associated with the event integration.
     */
    readonly tags?: outputs.appintegrations.EventIntegrationTag[];
}

export function getEventIntegrationOutput(args: GetEventIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventIntegrationResult> {
    return pulumi.output(args).apply(a => getEventIntegration(a, opts))
}

export interface GetEventIntegrationOutputArgs {
    /**
     * The name of the event integration.
     */
    name: pulumi.Input<string>;
}
