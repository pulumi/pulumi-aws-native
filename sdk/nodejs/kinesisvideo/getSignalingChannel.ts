// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type Definition for AWS::KinesisVideo::SignalingChannel
 */
export function getSignalingChannel(args: GetSignalingChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetSignalingChannelResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:kinesisvideo:getSignalingChannel", {
        "name": args.name,
    }, opts);
}

export interface GetSignalingChannelArgs {
    /**
     * The name of the Kinesis Video Signaling Channel.
     */
    name: string;
}

export interface GetSignalingChannelResult {
    /**
     * The Amazon Resource Name (ARN) of the Kinesis Video Signaling Channel.
     */
    readonly arn?: string;
    /**
     * The period of time a signaling channel retains undelivered messages before they are discarded.
     */
    readonly messageTtlSeconds?: number;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.kinesisvideo.SignalingChannelTag[];
    /**
     * The type of the Kinesis Video Signaling Channel to create. Currently, SINGLE_MASTER is the only supported channel type.
     */
    readonly type?: enums.kinesisvideo.SignalingChannelType;
}

export function getSignalingChannelOutput(args: GetSignalingChannelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSignalingChannelResult> {
    return pulumi.output(args).apply(a => getSignalingChannel(a, opts))
}

export interface GetSignalingChannelOutputArgs {
    /**
     * The name of the Kinesis Video Signaling Channel.
     */
    name: pulumi.Input<string>;
}
