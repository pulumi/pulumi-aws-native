// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::CloudFront::AnycastIpList Resource Type
 */
export class AnycastIpList extends pulumi.CustomResource {
    /**
     * Get an existing AnycastIpList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AnycastIpList {
        return new AnycastIpList(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:cloudfront:AnycastIpList';

    /**
     * Returns true if the given object is an instance of AnycastIpList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AnycastIpList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AnycastIpList.__pulumiType;
    }

    public /*out*/ readonly anycastIpList!: pulumi.Output<outputs.cloudfront.AnycastIpList>;
    /**
     * The ID of the Anycast static IP list.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * A complex type that contains `Tag` key and `Tag` value.
     */
    public /*out*/ readonly eTag!: pulumi.Output<string>;
    /**
     * The number of IP addresses in the Anycast static IP list.
     */
    public readonly ipCount!: pulumi.Output<number>;
    /**
     * The name of the Anycast static IP list.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A complex type that contains zero or more `Tag` elements.
     */
    public readonly tags!: pulumi.Output<outputs.cloudfront.AnycastIpListTags | undefined>;

    /**
     * Create a AnycastIpList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnycastIpListArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.ipCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipCount'");
            }
            resourceInputs["ipCount"] = args ? args.ipCount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["anycastIpList"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["eTag"] = undefined /*out*/;
        } else {
            resourceInputs["anycastIpList"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["eTag"] = undefined /*out*/;
            resourceInputs["ipCount"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["ipCount", "name", "tags"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AnycastIpList.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AnycastIpList resource.
 */
export interface AnycastIpListArgs {
    /**
     * The number of IP addresses in the Anycast static IP list.
     */
    ipCount: pulumi.Input<number>;
    /**
     * The name of the Anycast static IP list.
     */
    name?: pulumi.Input<string>;
    /**
     * A complex type that contains zero or more `Tag` elements.
     */
    tags?: pulumi.Input<inputs.cloudfront.AnycastIpListTagsArgs>;
}
