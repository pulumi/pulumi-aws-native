// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Creates a continuous deployment policy that routes a subset of production traffic from a primary distribution to a staging distribution.
 *  After you create and update a staging distribution, you can use a continuous deployment policy to incrementally move traffic to the staging distribution. This enables you to test changes to a distribution's configuration before moving all of your production traffic to the new configuration.
 *  For more information, see [Using CloudFront continuous deployment to safely test CDN configuration changes](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/continuous-deployment.html) in the *Amazon CloudFront Developer Guide*.
 */
export function getContinuousDeploymentPolicy(args: GetContinuousDeploymentPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetContinuousDeploymentPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cloudfront:getContinuousDeploymentPolicy", {
        "id": args.id,
    }, opts);
}

export interface GetContinuousDeploymentPolicyArgs {
    /**
     * The identifier of the cotinuous deployment policy.
     */
    id: string;
}

export interface GetContinuousDeploymentPolicyResult {
    /**
     * Contains the configuration for a continuous deployment policy.
     */
    readonly continuousDeploymentPolicyConfig?: outputs.cloudfront.ContinuousDeploymentPolicyConfig;
    /**
     * The identifier of the cotinuous deployment policy.
     */
    readonly id?: string;
    /**
     * The date and time when the continuous deployment policy was last modified.
     */
    readonly lastModifiedTime?: string;
}
/**
 * Creates a continuous deployment policy that routes a subset of production traffic from a primary distribution to a staging distribution.
 *  After you create and update a staging distribution, you can use a continuous deployment policy to incrementally move traffic to the staging distribution. This enables you to test changes to a distribution's configuration before moving all of your production traffic to the new configuration.
 *  For more information, see [Using CloudFront continuous deployment to safely test CDN configuration changes](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/continuous-deployment.html) in the *Amazon CloudFront Developer Guide*.
 */
export function getContinuousDeploymentPolicyOutput(args: GetContinuousDeploymentPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetContinuousDeploymentPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:cloudfront:getContinuousDeploymentPolicy", {
        "id": args.id,
    }, opts);
}

export interface GetContinuousDeploymentPolicyOutputArgs {
    /**
     * The identifier of the cotinuous deployment policy.
     */
    id: pulumi.Input<string>;
}
