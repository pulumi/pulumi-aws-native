// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::CloudFront::DistributionTenant
 */
export class DistributionTenant extends pulumi.CustomResource {
    /**
     * Get an existing DistributionTenant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DistributionTenant {
        return new DistributionTenant(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:cloudfront:DistributionTenant';

    /**
     * Returns true if the given object is an instance of DistributionTenant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DistributionTenant {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DistributionTenant.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    public readonly connectionGroupId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    public readonly customizations!: pulumi.Output<outputs.cloudfront.DistributionTenantCustomizations | undefined>;
    /**
     * The distribution's identifier. For example: `E1U5RQF7T870K0` .
     */
    public readonly distributionId!: pulumi.Output<string>;
    public /*out*/ readonly domainResults!: pulumi.Output<outputs.cloudfront.DistributionTenantDomainResult[]>;
    public readonly domains!: pulumi.Output<string[]>;
    /**
     * A complex type that contains `Tag` key and `Tag` value.
     */
    public /*out*/ readonly eTag!: pulumi.Output<string>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<string>;
    public readonly managedCertificateRequest!: pulumi.Output<outputs.cloudfront.DistributionTenantManagedCertificateRequest | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly parameters!: pulumi.Output<outputs.cloudfront.DistributionTenantParameter[] | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * A complex type that contains zero or more `Tag` elements.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a DistributionTenant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DistributionTenantArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.distributionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'distributionId'");
            }
            if ((!args || args.domains === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domains'");
            }
            resourceInputs["connectionGroupId"] = args ? args.connectionGroupId : undefined;
            resourceInputs["customizations"] = args ? args.customizations : undefined;
            resourceInputs["distributionId"] = args ? args.distributionId : undefined;
            resourceInputs["domains"] = args ? args.domains : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["managedCertificateRequest"] = args ? args.managedCertificateRequest : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["domainResults"] = undefined /*out*/;
            resourceInputs["eTag"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["connectionGroupId"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["customizations"] = undefined /*out*/;
            resourceInputs["distributionId"] = undefined /*out*/;
            resourceInputs["domainResults"] = undefined /*out*/;
            resourceInputs["domains"] = undefined /*out*/;
            resourceInputs["eTag"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["managedCertificateRequest"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["parameters"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["managedCertificateRequest", "name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DistributionTenant.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DistributionTenant resource.
 */
export interface DistributionTenantArgs {
    connectionGroupId?: pulumi.Input<string>;
    customizations?: pulumi.Input<inputs.cloudfront.DistributionTenantCustomizationsArgs>;
    /**
     * The distribution's identifier. For example: `E1U5RQF7T870K0` .
     */
    distributionId: pulumi.Input<string>;
    domains: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    managedCertificateRequest?: pulumi.Input<inputs.cloudfront.DistributionTenantManagedCertificateRequestArgs>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionTenantParameterArgs>[]>;
    /**
     * A complex type that contains zero or more `Tag` elements.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
