// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The key value store. Use this to separate data from function code, allowing you to update data without having to publish a new version of a function. The key value store holds keys and their corresponding values.
 */
export function getKeyValueStore(args: GetKeyValueStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyValueStoreResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cloudfront:getKeyValueStore", {
        "name": args.name,
    }, opts);
}

export interface GetKeyValueStoreArgs {
    /**
     * The name of the key value store.
     */
    name: string;
}

export interface GetKeyValueStoreResult {
    /**
     * The Amazon Resource Name (ARN) of the key value store.
     */
    readonly arn?: string;
    /**
     * A comment for the key value store.
     */
    readonly comment?: string;
    /**
     * The unique Id for the key value store.
     */
    readonly id?: string;
    /**
     * The current status of the key value store. For more information, see [Key value store statuses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/kvs-with-functions-create.html#key-value-store-status) in the *.*
     */
    readonly status?: string;
}
/**
 * The key value store. Use this to separate data from function code, allowing you to update data without having to publish a new version of a function. The key value store holds keys and their corresponding values.
 */
export function getKeyValueStoreOutput(args: GetKeyValueStoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyValueStoreResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:cloudfront:getKeyValueStore", {
        "name": args.name,
    }, opts);
}

export interface GetKeyValueStoreOutputArgs {
    /**
     * The name of the key value store.
     */
    name: pulumi.Input<string>;
}
