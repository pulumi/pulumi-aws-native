// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for LookoutEquipment InferenceScheduler.
 */
export function getInferenceScheduler(args: GetInferenceSchedulerArgs, opts?: pulumi.InvokeOptions): Promise<GetInferenceSchedulerResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:lookoutequipment:getInferenceScheduler", {
        "inferenceSchedulerName": args.inferenceSchedulerName,
    }, opts);
}

export interface GetInferenceSchedulerArgs {
    /**
     * The name of the inference scheduler being created.
     */
    inferenceSchedulerName: string;
}

export interface GetInferenceSchedulerResult {
    /**
     * A period of time (in minutes) by which inference on the data is delayed after the data starts.
     */
    readonly dataDelayOffsetInMinutes?: number;
    /**
     * Specifies configuration information for the input data for the inference scheduler, including delimiter, format, and dataset location.
     */
    readonly dataInputConfiguration?: outputs.lookoutequipment.DataInputConfigurationProperties;
    /**
     * Specifies configuration information for the output results for the inference scheduler, including the S3 location for the output.
     */
    readonly dataOutputConfiguration?: outputs.lookoutequipment.DataOutputConfigurationProperties;
    /**
     * How often data is uploaded to the source S3 bucket for the input data.
     */
    readonly dataUploadFrequency?: enums.lookoutequipment.InferenceSchedulerDataUploadFrequency;
    /**
     * The Amazon Resource Name (ARN) of the inference scheduler being created.
     */
    readonly inferenceSchedulerArn?: string;
    /**
     * The Amazon Resource Name (ARN) of a role with permission to access the data source being used for the inference.
     */
    readonly roleArn?: string;
    /**
     * Any tags associated with the inference scheduler.
     */
    readonly tags?: outputs.lookoutequipment.InferenceSchedulerTag[];
}

export function getInferenceSchedulerOutput(args: GetInferenceSchedulerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInferenceSchedulerResult> {
    return pulumi.output(args).apply(a => getInferenceScheduler(a, opts))
}

export interface GetInferenceSchedulerOutputArgs {
    /**
     * The name of the inference scheduler being created.
     */
    inferenceSchedulerName: pulumi.Input<string>;
}
