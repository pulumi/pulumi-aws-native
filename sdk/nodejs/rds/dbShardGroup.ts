// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Creates a new DB shard group for Aurora Limitless Database. You must enable Aurora Limitless Database to create a DB shard group.
 *  Valid for: Aurora DB clusters only
 */
export class DbShardGroup extends pulumi.CustomResource {
    /**
     * Get an existing DbShardGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DbShardGroup {
        return new DbShardGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:rds:DbShardGroup';

    /**
     * Returns true if the given object is an instance of DbShardGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbShardGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbShardGroup.__pulumiType;
    }

    /**
     * Specifies whether to create standby standby DB data access shard for the DB shard group. Valid values are the following:
     *   +  0 - Creates a DB shard group without a standby DB data access shard. This is the default value.
     *   +  1 - Creates a DB shard group with a standby DB data access shard in a different Availability Zone (AZ).
     *   +  2 - Creates a DB shard group with two standby DB data access shard in two different AZs.
     */
    public readonly computeRedundancy!: pulumi.Output<number | undefined>;
    /**
     * The name of the primary DB cluster for the DB shard group.
     */
    public readonly dbClusterIdentifier!: pulumi.Output<string>;
    /**
     * The name of the DB shard group.
     */
    public readonly dbShardGroupIdentifier!: pulumi.Output<string | undefined>;
    /**
     * The AWS Region -unique, immutable identifier for the DB shard group.
     */
    public /*out*/ readonly dbShardGroupResourceId!: pulumi.Output<string>;
    /**
     * This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:
     *
     * - `CreateDBInstance`
     * - `DescribeDBInstances`
     * - `DeleteDBInstance`
     *
     * For the data structure that represents Amazon Aurora DB cluster endpoints, see `DBClusterEndpoint` .
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * The maximum capacity of the DB shard group in Aurora capacity units (ACUs).
     */
    public readonly maxAcu!: pulumi.Output<number>;
    /**
     * The minimum capacity of the DB shard group in Aurora capacity units (ACUs).
     */
    public readonly minAcu!: pulumi.Output<number | undefined>;
    /**
     * Specifies whether the DB shard group is publicly accessible.
     *  When the DB shard group is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB shard group's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB shard group's VPC. Access to the DB shard group is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB shard group doesn't permit it.
     *  When the DB shard group isn't publicly accessible, it is an internal DB shard group with a DNS name that resolves to a private IP address.
     *  Default: The default behavior varies depending on whether ``DBSubnetGroupName`` is specified.
     *  If ``DBSubnetGroupName`` isn't specified, and ``PubliclyAccessible`` isn't specified, the following applies:
     *   +  If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB shard group is private.
     *   +  If the default VPC in the target Region has an internet gateway attached to it, the DB shard group is public.
     *   
     *  If ``DBSubnetGroupName`` is specified, and ``PubliclyAccessible`` isn't specified, the following applies:
     *   +  If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB shard group is private.
     *   +  If the subnets are part of a VPC that has an internet gateway attached to it, the DB shard group is public.
     */
    public readonly publiclyAccessible!: pulumi.Output<boolean | undefined>;
    /**
     * An optional set of key-value pairs to associate arbitrary data of your choosing with the DB shard group.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a DbShardGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbShardGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dbClusterIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbClusterIdentifier'");
            }
            if ((!args || args.maxAcu === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxAcu'");
            }
            resourceInputs["computeRedundancy"] = args ? args.computeRedundancy : undefined;
            resourceInputs["dbClusterIdentifier"] = args ? args.dbClusterIdentifier : undefined;
            resourceInputs["dbShardGroupIdentifier"] = args ? args.dbShardGroupIdentifier : undefined;
            resourceInputs["maxAcu"] = args ? args.maxAcu : undefined;
            resourceInputs["minAcu"] = args ? args.minAcu : undefined;
            resourceInputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["dbShardGroupResourceId"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
        } else {
            resourceInputs["computeRedundancy"] = undefined /*out*/;
            resourceInputs["dbClusterIdentifier"] = undefined /*out*/;
            resourceInputs["dbShardGroupIdentifier"] = undefined /*out*/;
            resourceInputs["dbShardGroupResourceId"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["maxAcu"] = undefined /*out*/;
            resourceInputs["minAcu"] = undefined /*out*/;
            resourceInputs["publiclyAccessible"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["dbClusterIdentifier", "dbShardGroupIdentifier", "publiclyAccessible"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DbShardGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DbShardGroup resource.
 */
export interface DbShardGroupArgs {
    /**
     * Specifies whether to create standby standby DB data access shard for the DB shard group. Valid values are the following:
     *   +  0 - Creates a DB shard group without a standby DB data access shard. This is the default value.
     *   +  1 - Creates a DB shard group with a standby DB data access shard in a different Availability Zone (AZ).
     *   +  2 - Creates a DB shard group with two standby DB data access shard in two different AZs.
     */
    computeRedundancy?: pulumi.Input<number>;
    /**
     * The name of the primary DB cluster for the DB shard group.
     */
    dbClusterIdentifier: pulumi.Input<string>;
    /**
     * The name of the DB shard group.
     */
    dbShardGroupIdentifier?: pulumi.Input<string>;
    /**
     * The maximum capacity of the DB shard group in Aurora capacity units (ACUs).
     */
    maxAcu: pulumi.Input<number>;
    /**
     * The minimum capacity of the DB shard group in Aurora capacity units (ACUs).
     */
    minAcu?: pulumi.Input<number>;
    /**
     * Specifies whether the DB shard group is publicly accessible.
     *  When the DB shard group is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB shard group's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB shard group's VPC. Access to the DB shard group is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB shard group doesn't permit it.
     *  When the DB shard group isn't publicly accessible, it is an internal DB shard group with a DNS name that resolves to a private IP address.
     *  Default: The default behavior varies depending on whether ``DBSubnetGroupName`` is specified.
     *  If ``DBSubnetGroupName`` isn't specified, and ``PubliclyAccessible`` isn't specified, the following applies:
     *   +  If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB shard group is private.
     *   +  If the default VPC in the target Region has an internet gateway attached to it, the DB shard group is public.
     *   
     *  If ``DBSubnetGroupName`` is specified, and ``PubliclyAccessible`` isn't specified, the following applies:
     *   +  If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB shard group is private.
     *   +  If the subnets are part of a VPC that has an internet gateway attached to it, the DB shard group is public.
     */
    publiclyAccessible?: pulumi.Input<boolean>;
    /**
     * An optional set of key-value pairs to associate arbitrary data of your choosing with the DB shard group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
