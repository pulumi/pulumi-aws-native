// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./dbcluster";
export * from "./dbclusterParameterGroup";
export * from "./dbinstance";
export * from "./dbparameterGroup";
export * from "./dbproxy";
export * from "./dbproxyEndpoint";
export * from "./dbproxyTargetGroup";
export * from "./dbsecurityGroup";
export * from "./dbsecurityGroupIngress";
export * from "./dbsubnetGroup";
export * from "./eventSubscription";
export * from "./globalCluster";
export * from "./optionGroup";

// Export enums:
export * from "../types/enums/rds";

// Import resources to register:
import { DBCluster } from "./dbcluster";
import { DBClusterParameterGroup } from "./dbclusterParameterGroup";
import { DBInstance } from "./dbinstance";
import { DBParameterGroup } from "./dbparameterGroup";
import { DBProxy } from "./dbproxy";
import { DBProxyEndpoint } from "./dbproxyEndpoint";
import { DBProxyTargetGroup } from "./dbproxyTargetGroup";
import { DBSecurityGroup } from "./dbsecurityGroup";
import { DBSecurityGroupIngress } from "./dbsecurityGroupIngress";
import { DBSubnetGroup } from "./dbsubnetGroup";
import { EventSubscription } from "./eventSubscription";
import { GlobalCluster } from "./globalCluster";
import { OptionGroup } from "./optionGroup";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:rds:DBCluster":
                return new DBCluster(name, <any>undefined, { urn })
            case "aws-native:rds:DBClusterParameterGroup":
                return new DBClusterParameterGroup(name, <any>undefined, { urn })
            case "aws-native:rds:DBInstance":
                return new DBInstance(name, <any>undefined, { urn })
            case "aws-native:rds:DBParameterGroup":
                return new DBParameterGroup(name, <any>undefined, { urn })
            case "aws-native:rds:DBProxy":
                return new DBProxy(name, <any>undefined, { urn })
            case "aws-native:rds:DBProxyEndpoint":
                return new DBProxyEndpoint(name, <any>undefined, { urn })
            case "aws-native:rds:DBProxyTargetGroup":
                return new DBProxyTargetGroup(name, <any>undefined, { urn })
            case "aws-native:rds:DBSecurityGroup":
                return new DBSecurityGroup(name, <any>undefined, { urn })
            case "aws-native:rds:DBSecurityGroupIngress":
                return new DBSecurityGroupIngress(name, <any>undefined, { urn })
            case "aws-native:rds:DBSubnetGroup":
                return new DBSubnetGroup(name, <any>undefined, { urn })
            case "aws-native:rds:EventSubscription":
                return new EventSubscription(name, <any>undefined, { urn })
            case "aws-native:rds:GlobalCluster":
                return new GlobalCluster(name, <any>undefined, { urn })
            case "aws-native:rds:OptionGroup":
                return new OptionGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "rds", _module)
