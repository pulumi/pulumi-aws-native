// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::RDS::DBCluster resource creates an Amazon Aurora DB cluster.
 */
export function getDBCluster(args: GetDBClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetDBClusterResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:rds:getDBCluster", {
        "dBClusterIdentifier": args.dBClusterIdentifier,
    }, opts);
}

export interface GetDBClusterArgs {
    /**
     * The DB cluster identifier. This parameter is stored as a lowercase string.
     */
    dBClusterIdentifier: string;
}

export interface GetDBClusterResult {
    /**
     * The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
     */
    readonly allocatedStorage?: number;
    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.
     */
    readonly associatedRoles?: outputs.rds.DBClusterRole[];
    /**
     * A value that indicates whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window. By default, minor engine upgrades are applied automatically.
     */
    readonly autoMinorVersionUpgrade?: boolean;
    /**
     * The target backtrack window, in seconds. To disable backtracking, set this value to 0.
     */
    readonly backtrackWindow?: number;
    /**
     * The number of days for which automated backups are retained.
     */
    readonly backupRetentionPeriod?: number;
    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.
     */
    readonly copyTagsToSnapshot?: boolean;
    /**
     * The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge.
     */
    readonly dBClusterInstanceClass?: string;
    /**
     * The name of the DB cluster parameter group to associate with this DB cluster.
     */
    readonly dBClusterParameterGroupName?: string;
    /**
     * A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
     */
    readonly deletionProtection?: boolean;
    /**
     * The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon Aurora User Guide.
     */
    readonly enableCloudwatchLogsExports?: string[];
    /**
     * A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster. By default, the HTTP endpoint is disabled.
     */
    readonly enableHttpEndpoint?: boolean;
    /**
     * A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.
     */
    readonly enableIAMDatabaseAuthentication?: boolean;
    readonly endpoint?: outputs.rds.DBClusterEndpoint;
    /**
     * The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora), and aurora-postgresql
     */
    readonly engine?: string;
    /**
     * The version number of the database engine to use.
     */
    readonly engineVersion?: string;
    /**
     * If you are configuring an Aurora global database cluster and want your Aurora DB cluster to be a secondary member in the global database cluster, specify the global cluster ID of the global database cluster. To define the primary database cluster of the global cluster, use the AWS::RDS::GlobalCluster resource.
     *
     * If you aren't configuring a global database cluster, don't specify this property.
     */
    readonly globalClusterIdentifier?: string;
    /**
     * The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.
     */
    readonly iops?: number;
    /**
     * The name of the master user for the DB cluster. You must specify MasterUsername, unless you specify SnapshotIdentifier. In that case, don't specify MasterUsername.
     */
    readonly masterUsername?: string;
    /**
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster. To turn off collecting Enhanced Monitoring metrics, specify 0. The default is 0.
     */
    readonly monitoringInterval?: number;
    /**
     * The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
     */
    readonly monitoringRoleArn?: string;
    /**
     * A value that indicates whether to turn on Performance Insights for the DB cluster.
     */
    readonly performanceInsightsEnabled?: boolean;
    /**
     * The Amazon Web Services KMS key identifier for encryption of Performance Insights data.
     */
    readonly performanceInsightsKmsKeyId?: string;
    /**
     * The amount of time, in days, to retain Performance Insights data.
     */
    readonly performanceInsightsRetentionPeriod?: number;
    /**
     * The port number on which the instances in the DB cluster accept connections. Default: 3306 if engine is set as aurora or 5432 if set to aurora-postgresql.
     */
    readonly port?: number;
    /**
     * The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window in the Amazon Aurora User Guide.
     */
    readonly preferredBackupWindow?: string;
    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window in the Amazon Aurora User Guide.
     */
    readonly preferredMaintenanceWindow?: string;
    readonly readEndpoint?: outputs.rds.DBClusterReadEndpoint;
    /**
     * The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a Read Replica.
     */
    readonly replicationSourceIdentifier?: string;
    /**
     * The ScalingConfiguration property type specifies the scaling configuration of an Aurora Serverless DB cluster.
     */
    readonly scalingConfiguration?: outputs.rds.DBClusterScalingConfiguration;
    /**
     * Specifies the storage type to be associated with the DB cluster.
     */
    readonly storageType?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.rds.DBClusterTag[];
    /**
     * A list of EC2 VPC security groups to associate with this DB cluster.
     */
    readonly vpcSecurityGroupIds?: string[];
}

export function getDBClusterOutput(args: GetDBClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDBClusterResult> {
    return pulumi.output(args).apply(a => getDBCluster(a, opts))
}

export interface GetDBClusterOutputArgs {
    /**
     * The DB cluster identifier. This parameter is stored as a lowercase string.
     */
    dBClusterIdentifier: pulumi.Input<string>;
}
