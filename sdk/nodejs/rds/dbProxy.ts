// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::RDS::DBProxy
 */
export class DbProxy extends pulumi.CustomResource {
    /**
     * Get an existing DbProxy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DbProxy {
        return new DbProxy(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:rds:DbProxy';

    /**
     * Returns true if the given object is an instance of DbProxy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbProxy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbProxy.__pulumiType;
    }

    /**
     * The authorization mechanism that the proxy uses.
     */
    public readonly auth!: pulumi.Output<outputs.rds.DbProxyAuthFormat[]>;
    /**
     * The Amazon Resource Name (ARN) for the proxy.
     */
    public /*out*/ readonly dbProxyArn!: pulumi.Output<string>;
    /**
     * The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
     */
    public readonly dbProxyName!: pulumi.Output<string>;
    /**
     * Whether the proxy includes detailed information about SQL statements in its logs.
     */
    public readonly debugLogging!: pulumi.Output<boolean | undefined>;
    /**
     * The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * The kinds of databases that the proxy can connect to.
     */
    public readonly engineFamily!: pulumi.Output<enums.rds.DbProxyEngineFamily>;
    /**
     * The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it.
     */
    public readonly idleClientTimeout!: pulumi.Output<number | undefined>;
    /**
     * A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
     */
    public readonly requireTls!: pulumi.Output<boolean | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
     */
    public readonly tags!: pulumi.Output<outputs.rds.DbProxyTagFormat[] | undefined>;
    /**
     * VPC ID to associate with the new DB proxy.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;
    /**
     * VPC security group IDs to associate with the new proxy.
     */
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * VPC subnet IDs to associate with the new proxy.
     */
    public readonly vpcSubnetIds!: pulumi.Output<string[]>;

    /**
     * Create a DbProxy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbProxyArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.auth === undefined) && !opts.urn) {
                throw new Error("Missing required property 'auth'");
            }
            if ((!args || args.engineFamily === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engineFamily'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if ((!args || args.vpcSubnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcSubnetIds'");
            }
            resourceInputs["auth"] = args ? args.auth : undefined;
            resourceInputs["dbProxyName"] = args ? args.dbProxyName : undefined;
            resourceInputs["debugLogging"] = args ? args.debugLogging : undefined;
            resourceInputs["engineFamily"] = args ? args.engineFamily : undefined;
            resourceInputs["idleClientTimeout"] = args ? args.idleClientTimeout : undefined;
            resourceInputs["requireTls"] = args ? args.requireTls : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            resourceInputs["vpcSubnetIds"] = args ? args.vpcSubnetIds : undefined;
            resourceInputs["dbProxyArn"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        } else {
            resourceInputs["auth"] = undefined /*out*/;
            resourceInputs["dbProxyArn"] = undefined /*out*/;
            resourceInputs["dbProxyName"] = undefined /*out*/;
            resourceInputs["debugLogging"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["engineFamily"] = undefined /*out*/;
            resourceInputs["idleClientTimeout"] = undefined /*out*/;
            resourceInputs["requireTls"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
            resourceInputs["vpcSecurityGroupIds"] = undefined /*out*/;
            resourceInputs["vpcSubnetIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["dbProxyName", "engineFamily", "vpcSubnetIds[*]"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DbProxy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DbProxy resource.
 */
export interface DbProxyArgs {
    /**
     * The authorization mechanism that the proxy uses.
     */
    auth: pulumi.Input<pulumi.Input<inputs.rds.DbProxyAuthFormatArgs>[]>;
    /**
     * The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
     */
    dbProxyName?: pulumi.Input<string>;
    /**
     * Whether the proxy includes detailed information about SQL statements in its logs.
     */
    debugLogging?: pulumi.Input<boolean>;
    /**
     * The kinds of databases that the proxy can connect to.
     */
    engineFamily: pulumi.Input<enums.rds.DbProxyEngineFamily>;
    /**
     * The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it.
     */
    idleClientTimeout?: pulumi.Input<number>;
    /**
     * A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
     */
    requireTls?: pulumi.Input<boolean>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
     */
    roleArn: pulumi.Input<string>;
    /**
     * An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.rds.DbProxyTagFormatArgs>[]>;
    /**
     * VPC security group IDs to associate with the new proxy.
     */
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC subnet IDs to associate with the new proxy.
     */
    vpcSubnetIds: pulumi.Input<pulumi.Input<string>[]>;
}
