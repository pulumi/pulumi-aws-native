// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::RDS::DBInstance
 *
 * @deprecated DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class DBInstance extends pulumi.CustomResource {
    /**
     * Get an existing DBInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DBInstance {
        pulumi.log.warn("DBInstance is deprecated: DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new DBInstance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:rds:DBInstance';

    /**
     * Returns true if the given object is an instance of DBInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DBInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DBInstance.__pulumiType;
    }

    public readonly allocatedStorage!: pulumi.Output<string | undefined>;
    public readonly allowMajorVersionUpgrade!: pulumi.Output<boolean | undefined>;
    public readonly associatedRoles!: pulumi.Output<outputs.rds.DBInstanceRole[] | undefined>;
    public readonly autoMinorVersionUpgrade!: pulumi.Output<boolean | undefined>;
    public readonly availabilityZone!: pulumi.Output<string | undefined>;
    public readonly backupRetentionPeriod!: pulumi.Output<number | undefined>;
    public readonly cACertificateIdentifier!: pulumi.Output<string | undefined>;
    public readonly characterSetName!: pulumi.Output<string | undefined>;
    public readonly copyTagsToSnapshot!: pulumi.Output<boolean | undefined>;
    public readonly dBClusterIdentifier!: pulumi.Output<string | undefined>;
    public readonly dBInstanceClass!: pulumi.Output<string>;
    public readonly dBInstanceIdentifier!: pulumi.Output<string | undefined>;
    public readonly dBName!: pulumi.Output<string | undefined>;
    public readonly dBParameterGroupName!: pulumi.Output<string | undefined>;
    public readonly dBSecurityGroups!: pulumi.Output<string[] | undefined>;
    public readonly dBSnapshotIdentifier!: pulumi.Output<string | undefined>;
    public readonly dBSubnetGroupName!: pulumi.Output<string | undefined>;
    public readonly deleteAutomatedBackups!: pulumi.Output<boolean | undefined>;
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    public readonly domain!: pulumi.Output<string | undefined>;
    public readonly domainIAMRoleName!: pulumi.Output<string | undefined>;
    public readonly enableCloudwatchLogsExports!: pulumi.Output<string[] | undefined>;
    public readonly enableIAMDatabaseAuthentication!: pulumi.Output<boolean | undefined>;
    public readonly enablePerformanceInsights!: pulumi.Output<boolean | undefined>;
    public readonly endpointAddress!: pulumi.Output<string | undefined>;
    public readonly endpointPort!: pulumi.Output<string | undefined>;
    public readonly engine!: pulumi.Output<string | undefined>;
    public readonly engineVersion!: pulumi.Output<string | undefined>;
    public readonly iops!: pulumi.Output<number | undefined>;
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    public readonly licenseModel!: pulumi.Output<string | undefined>;
    public readonly masterUserPassword!: pulumi.Output<string | undefined>;
    public readonly masterUsername!: pulumi.Output<string | undefined>;
    public readonly maxAllocatedStorage!: pulumi.Output<number | undefined>;
    public readonly monitoringInterval!: pulumi.Output<number | undefined>;
    public readonly monitoringRoleArn!: pulumi.Output<string | undefined>;
    public readonly multiAZ!: pulumi.Output<boolean | undefined>;
    public readonly optionGroupName!: pulumi.Output<string | undefined>;
    public readonly performanceInsightsKMSKeyId!: pulumi.Output<string | undefined>;
    public readonly performanceInsightsRetentionPeriod!: pulumi.Output<number | undefined>;
    public readonly port!: pulumi.Output<string | undefined>;
    public readonly preferredBackupWindow!: pulumi.Output<string | undefined>;
    public readonly preferredMaintenanceWindow!: pulumi.Output<string | undefined>;
    public readonly processorFeatures!: pulumi.Output<outputs.rds.DBInstanceProcessorFeature[] | undefined>;
    public readonly promotionTier!: pulumi.Output<number | undefined>;
    public readonly publiclyAccessible!: pulumi.Output<boolean | undefined>;
    public readonly sourceDBInstanceIdentifier!: pulumi.Output<string | undefined>;
    public readonly sourceRegion!: pulumi.Output<string | undefined>;
    public readonly storageEncrypted!: pulumi.Output<boolean | undefined>;
    public readonly storageType!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.rds.DBInstanceTag[] | undefined>;
    public readonly timezone!: pulumi.Output<string | undefined>;
    public readonly useDefaultProcessorFeatures!: pulumi.Output<boolean | undefined>;
    public readonly vPCSecurityGroups!: pulumi.Output<string[] | undefined>;

    /**
     * Create a DBInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: DBInstanceArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("DBInstance is deprecated: DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dBInstanceClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dBInstanceClass'");
            }
            resourceInputs["allocatedStorage"] = args ? args.allocatedStorage : undefined;
            resourceInputs["allowMajorVersionUpgrade"] = args ? args.allowMajorVersionUpgrade : undefined;
            resourceInputs["associatedRoles"] = args ? args.associatedRoles : undefined;
            resourceInputs["autoMinorVersionUpgrade"] = args ? args.autoMinorVersionUpgrade : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["backupRetentionPeriod"] = args ? args.backupRetentionPeriod : undefined;
            resourceInputs["cACertificateIdentifier"] = args ? args.cACertificateIdentifier : undefined;
            resourceInputs["characterSetName"] = args ? args.characterSetName : undefined;
            resourceInputs["copyTagsToSnapshot"] = args ? args.copyTagsToSnapshot : undefined;
            resourceInputs["dBClusterIdentifier"] = args ? args.dBClusterIdentifier : undefined;
            resourceInputs["dBInstanceClass"] = args ? args.dBInstanceClass : undefined;
            resourceInputs["dBInstanceIdentifier"] = args ? args.dBInstanceIdentifier : undefined;
            resourceInputs["dBName"] = args ? args.dBName : undefined;
            resourceInputs["dBParameterGroupName"] = args ? args.dBParameterGroupName : undefined;
            resourceInputs["dBSecurityGroups"] = args ? args.dBSecurityGroups : undefined;
            resourceInputs["dBSnapshotIdentifier"] = args ? args.dBSnapshotIdentifier : undefined;
            resourceInputs["dBSubnetGroupName"] = args ? args.dBSubnetGroupName : undefined;
            resourceInputs["deleteAutomatedBackups"] = args ? args.deleteAutomatedBackups : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["domainIAMRoleName"] = args ? args.domainIAMRoleName : undefined;
            resourceInputs["enableCloudwatchLogsExports"] = args ? args.enableCloudwatchLogsExports : undefined;
            resourceInputs["enableIAMDatabaseAuthentication"] = args ? args.enableIAMDatabaseAuthentication : undefined;
            resourceInputs["enablePerformanceInsights"] = args ? args.enablePerformanceInsights : undefined;
            resourceInputs["endpointAddress"] = args ? args.endpointAddress : undefined;
            resourceInputs["endpointPort"] = args ? args.endpointPort : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["iops"] = args ? args.iops : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["licenseModel"] = args ? args.licenseModel : undefined;
            resourceInputs["masterUserPassword"] = args ? args.masterUserPassword : undefined;
            resourceInputs["masterUsername"] = args ? args.masterUsername : undefined;
            resourceInputs["maxAllocatedStorage"] = args ? args.maxAllocatedStorage : undefined;
            resourceInputs["monitoringInterval"] = args ? args.monitoringInterval : undefined;
            resourceInputs["monitoringRoleArn"] = args ? args.monitoringRoleArn : undefined;
            resourceInputs["multiAZ"] = args ? args.multiAZ : undefined;
            resourceInputs["optionGroupName"] = args ? args.optionGroupName : undefined;
            resourceInputs["performanceInsightsKMSKeyId"] = args ? args.performanceInsightsKMSKeyId : undefined;
            resourceInputs["performanceInsightsRetentionPeriod"] = args ? args.performanceInsightsRetentionPeriod : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["preferredBackupWindow"] = args ? args.preferredBackupWindow : undefined;
            resourceInputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            resourceInputs["processorFeatures"] = args ? args.processorFeatures : undefined;
            resourceInputs["promotionTier"] = args ? args.promotionTier : undefined;
            resourceInputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            resourceInputs["sourceDBInstanceIdentifier"] = args ? args.sourceDBInstanceIdentifier : undefined;
            resourceInputs["sourceRegion"] = args ? args.sourceRegion : undefined;
            resourceInputs["storageEncrypted"] = args ? args.storageEncrypted : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["useDefaultProcessorFeatures"] = args ? args.useDefaultProcessorFeatures : undefined;
            resourceInputs["vPCSecurityGroups"] = args ? args.vPCSecurityGroups : undefined;
        } else {
            resourceInputs["allocatedStorage"] = undefined /*out*/;
            resourceInputs["allowMajorVersionUpgrade"] = undefined /*out*/;
            resourceInputs["associatedRoles"] = undefined /*out*/;
            resourceInputs["autoMinorVersionUpgrade"] = undefined /*out*/;
            resourceInputs["availabilityZone"] = undefined /*out*/;
            resourceInputs["backupRetentionPeriod"] = undefined /*out*/;
            resourceInputs["cACertificateIdentifier"] = undefined /*out*/;
            resourceInputs["characterSetName"] = undefined /*out*/;
            resourceInputs["copyTagsToSnapshot"] = undefined /*out*/;
            resourceInputs["dBClusterIdentifier"] = undefined /*out*/;
            resourceInputs["dBInstanceClass"] = undefined /*out*/;
            resourceInputs["dBInstanceIdentifier"] = undefined /*out*/;
            resourceInputs["dBName"] = undefined /*out*/;
            resourceInputs["dBParameterGroupName"] = undefined /*out*/;
            resourceInputs["dBSecurityGroups"] = undefined /*out*/;
            resourceInputs["dBSnapshotIdentifier"] = undefined /*out*/;
            resourceInputs["dBSubnetGroupName"] = undefined /*out*/;
            resourceInputs["deleteAutomatedBackups"] = undefined /*out*/;
            resourceInputs["deletionProtection"] = undefined /*out*/;
            resourceInputs["domain"] = undefined /*out*/;
            resourceInputs["domainIAMRoleName"] = undefined /*out*/;
            resourceInputs["enableCloudwatchLogsExports"] = undefined /*out*/;
            resourceInputs["enableIAMDatabaseAuthentication"] = undefined /*out*/;
            resourceInputs["enablePerformanceInsights"] = undefined /*out*/;
            resourceInputs["endpointAddress"] = undefined /*out*/;
            resourceInputs["endpointPort"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["engineVersion"] = undefined /*out*/;
            resourceInputs["iops"] = undefined /*out*/;
            resourceInputs["kmsKeyId"] = undefined /*out*/;
            resourceInputs["licenseModel"] = undefined /*out*/;
            resourceInputs["masterUserPassword"] = undefined /*out*/;
            resourceInputs["masterUsername"] = undefined /*out*/;
            resourceInputs["maxAllocatedStorage"] = undefined /*out*/;
            resourceInputs["monitoringInterval"] = undefined /*out*/;
            resourceInputs["monitoringRoleArn"] = undefined /*out*/;
            resourceInputs["multiAZ"] = undefined /*out*/;
            resourceInputs["optionGroupName"] = undefined /*out*/;
            resourceInputs["performanceInsightsKMSKeyId"] = undefined /*out*/;
            resourceInputs["performanceInsightsRetentionPeriod"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["preferredBackupWindow"] = undefined /*out*/;
            resourceInputs["preferredMaintenanceWindow"] = undefined /*out*/;
            resourceInputs["processorFeatures"] = undefined /*out*/;
            resourceInputs["promotionTier"] = undefined /*out*/;
            resourceInputs["publiclyAccessible"] = undefined /*out*/;
            resourceInputs["sourceDBInstanceIdentifier"] = undefined /*out*/;
            resourceInputs["sourceRegion"] = undefined /*out*/;
            resourceInputs["storageEncrypted"] = undefined /*out*/;
            resourceInputs["storageType"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["timezone"] = undefined /*out*/;
            resourceInputs["useDefaultProcessorFeatures"] = undefined /*out*/;
            resourceInputs["vPCSecurityGroups"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DBInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DBInstance resource.
 */
export interface DBInstanceArgs {
    allocatedStorage?: pulumi.Input<string>;
    allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    associatedRoles?: pulumi.Input<pulumi.Input<inputs.rds.DBInstanceRoleArgs>[]>;
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    backupRetentionPeriod?: pulumi.Input<number>;
    cACertificateIdentifier?: pulumi.Input<string>;
    characterSetName?: pulumi.Input<string>;
    copyTagsToSnapshot?: pulumi.Input<boolean>;
    dBClusterIdentifier?: pulumi.Input<string>;
    dBInstanceClass: pulumi.Input<string>;
    dBInstanceIdentifier?: pulumi.Input<string>;
    dBName?: pulumi.Input<string>;
    dBParameterGroupName?: pulumi.Input<string>;
    dBSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    dBSnapshotIdentifier?: pulumi.Input<string>;
    dBSubnetGroupName?: pulumi.Input<string>;
    deleteAutomatedBackups?: pulumi.Input<boolean>;
    deletionProtection?: pulumi.Input<boolean>;
    domain?: pulumi.Input<string>;
    domainIAMRoleName?: pulumi.Input<string>;
    enableCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    enableIAMDatabaseAuthentication?: pulumi.Input<boolean>;
    enablePerformanceInsights?: pulumi.Input<boolean>;
    endpointAddress?: pulumi.Input<string>;
    endpointPort?: pulumi.Input<string>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    iops?: pulumi.Input<number>;
    kmsKeyId?: pulumi.Input<string>;
    licenseModel?: pulumi.Input<string>;
    masterUserPassword?: pulumi.Input<string>;
    masterUsername?: pulumi.Input<string>;
    maxAllocatedStorage?: pulumi.Input<number>;
    monitoringInterval?: pulumi.Input<number>;
    monitoringRoleArn?: pulumi.Input<string>;
    multiAZ?: pulumi.Input<boolean>;
    optionGroupName?: pulumi.Input<string>;
    performanceInsightsKMSKeyId?: pulumi.Input<string>;
    performanceInsightsRetentionPeriod?: pulumi.Input<number>;
    port?: pulumi.Input<string>;
    preferredBackupWindow?: pulumi.Input<string>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    processorFeatures?: pulumi.Input<pulumi.Input<inputs.rds.DBInstanceProcessorFeatureArgs>[]>;
    promotionTier?: pulumi.Input<number>;
    publiclyAccessible?: pulumi.Input<boolean>;
    sourceDBInstanceIdentifier?: pulumi.Input<string>;
    sourceRegion?: pulumi.Input<string>;
    storageEncrypted?: pulumi.Input<boolean>;
    storageType?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.rds.DBInstanceTagArgs>[]>;
    timezone?: pulumi.Input<string>;
    useDefaultProcessorFeatures?: pulumi.Input<boolean>;
    vPCSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
}
