// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::RDS::DBSubnetGroup resource creates a database subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.
 */
export function getDBSubnetGroup(args: GetDBSubnetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetDBSubnetGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:rds:getDBSubnetGroup", {
        "dbSubnetGroupName": args.dbSubnetGroupName,
    }, opts);
}

export interface GetDBSubnetGroupArgs {
    dbSubnetGroupName: string;
}

export interface GetDBSubnetGroupResult {
    readonly dbSubnetGroupDescription?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.rds.DBSubnetGroupTag[];
}
/**
 * The AWS::RDS::DBSubnetGroup resource creates a database subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.
 */
export function getDBSubnetGroupOutput(args: GetDBSubnetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDBSubnetGroupResult> {
    return pulumi.output(args).apply((a: any) => getDBSubnetGroup(a, opts))
}

export interface GetDBSubnetGroupOutputArgs {
    dbSubnetGroupName: pulumi.Input<string>;
}
