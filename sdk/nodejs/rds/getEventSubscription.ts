// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The ``AWS::RDS::EventSubscription`` resource allows you to receive notifications for Amazon Relational Database Service events through the Amazon Simple Notification Service (Amazon SNS). For more information, see [Using Amazon RDS Event Notification](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html) in the *Amazon RDS User Guide*.
 */
export function getEventSubscription(args: GetEventSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetEventSubscriptionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:rds:getEventSubscription", {
        "subscriptionName": args.subscriptionName,
    }, opts);
}

export interface GetEventSubscriptionArgs {
    /**
     * The name of the subscription.
     *  Constraints: The name must be less than 255 characters.
     */
    subscriptionName: string;
}

export interface GetEventSubscriptionResult {
    /**
     * Specifies whether to activate the subscription. If the event notification subscription isn't activated, the subscription is created but not active.
     */
    readonly enabled?: boolean;
    /**
     * A list of event categories for a particular source type (``SourceType``) that you want to subscribe to. You can see a list of the categories for a given source type in the "Amazon RDS event categories and event messages" section of the [Amazon RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.Messages.html) or the [Amazon Aurora User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Events.Messages.html). You can also see this list by using the ``DescribeEventCategories`` operation.
     */
    readonly eventCategories?: string[];
    /**
     * The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It can't end with a hyphen or contain two consecutive hyphens.
     *  Constraints:
     *   +  If ``SourceIds`` are supplied, ``SourceType`` must also be provided.
     *   +  If the source type is a DB instance, a ``DBInstanceIdentifier`` value must be supplied.
     *   +  If the source type is a DB cluster, a ``DBClusterIdentifier`` value must be supplied.
     *   +  If the source type is a DB parameter group, a ``DBParameterGroupName`` value must be supplied.
     *   +  If the source type is a DB security group, a ``DBSecurityGroupName`` value must be supplied.
     *   +  If the source type is a DB snapshot, a ``DBSnapshotIdentifier`` value must be supplied.
     *   +  If the source type is a DB cluster snapshot, a ``DBClusterSnapshotIdentifier`` value must be supplied.
     *   +  If the source type is an RDS Proxy, a ``DBProxyName`` value must be supplied.
     */
    readonly sourceIds?: string[];
    /**
     * The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you set this parameter to ``db-instance``. For RDS Proxy events, specify ``db-proxy``. If this value isn't specified, all events are returned.
     *  Valid Values:``db-instance | db-cluster | db-parameter-group | db-security-group | db-snapshot | db-cluster-snapshot | db-proxy | zero-etl | custom-engine-version | blue-green-deployment``
     */
    readonly sourceType?: string;
    /**
     * An optional array of key-value pairs to apply to this subscription.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * The ``AWS::RDS::EventSubscription`` resource allows you to receive notifications for Amazon Relational Database Service events through the Amazon Simple Notification Service (Amazon SNS). For more information, see [Using Amazon RDS Event Notification](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html) in the *Amazon RDS User Guide*.
 */
export function getEventSubscriptionOutput(args: GetEventSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventSubscriptionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:rds:getEventSubscription", {
        "subscriptionName": args.subscriptionName,
    }, opts);
}

export interface GetEventSubscriptionOutputArgs {
    /**
     * The name of the subscription.
     *  Constraints: The name must be less than 255 characters.
     */
    subscriptionName: pulumi.Input<string>;
}
