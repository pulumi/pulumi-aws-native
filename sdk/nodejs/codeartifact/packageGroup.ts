// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The resource schema to create a CodeArtifact package group.
 */
export class PackageGroup extends pulumi.CustomResource {
    /**
     * Get an existing PackageGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PackageGroup {
        return new PackageGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:codeartifact:PackageGroup';

    /**
     * Returns true if the given object is an instance of PackageGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PackageGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PackageGroup.__pulumiType;
    }

    /**
     * The ARN of the package group.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The contact info of the package group.
     */
    public readonly contactInfo!: pulumi.Output<string | undefined>;
    /**
     * The text description of the package group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the domain that contains the package group.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The 12-digit account ID of the AWS account that owns the domain.
     */
    public readonly domainOwner!: pulumi.Output<string | undefined>;
    /**
     * The package origin configuration of the package group.
     */
    public readonly originConfiguration!: pulumi.Output<outputs.codeartifact.PackageGroupOriginConfiguration | undefined>;
    /**
     * The package group pattern that is used to gather packages.
     */
    public readonly pattern!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to the package group.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a PackageGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PackageGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.pattern === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pattern'");
            }
            resourceInputs["contactInfo"] = args ? args.contactInfo : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["domainOwner"] = args ? args.domainOwner : undefined;
            resourceInputs["originConfiguration"] = args ? args.originConfiguration : undefined;
            resourceInputs["pattern"] = args ? args.pattern : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["contactInfo"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["domainOwner"] = undefined /*out*/;
            resourceInputs["originConfiguration"] = undefined /*out*/;
            resourceInputs["pattern"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["domainName", "pattern"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(PackageGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a PackageGroup resource.
 */
export interface PackageGroupArgs {
    /**
     * The contact info of the package group.
     */
    contactInfo?: pulumi.Input<string>;
    /**
     * The text description of the package group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the domain that contains the package group.
     */
    domainName: pulumi.Input<string>;
    /**
     * The 12-digit account ID of the AWS account that owns the domain.
     */
    domainOwner?: pulumi.Input<string>;
    /**
     * The package origin configuration of the package group.
     */
    originConfiguration?: pulumi.Input<inputs.codeartifact.PackageGroupOriginConfigurationArgs>;
    /**
     * The package group pattern that is used to gather packages.
     */
    pattern: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to the package group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
