// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DomainArgs } from "./domain";
export type Domain = import("./domain").Domain;
export const Domain: typeof import("./domain").Domain = null as any;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));

export { GetDomainArgs, GetDomainResult, GetDomainOutputArgs } from "./getDomain";
export const getDomain: typeof import("./getDomain").getDomain = null as any;
export const getDomainOutput: typeof import("./getDomain").getDomainOutput = null as any;
utilities.lazyLoad(exports, ["getDomain","getDomainOutput"], () => require("./getDomain"));

export { GetPackageGroupArgs, GetPackageGroupResult, GetPackageGroupOutputArgs } from "./getPackageGroup";
export const getPackageGroup: typeof import("./getPackageGroup").getPackageGroup = null as any;
export const getPackageGroupOutput: typeof import("./getPackageGroup").getPackageGroupOutput = null as any;
utilities.lazyLoad(exports, ["getPackageGroup","getPackageGroupOutput"], () => require("./getPackageGroup"));

export { GetRepositoryArgs, GetRepositoryResult, GetRepositoryOutputArgs } from "./getRepository";
export const getRepository: typeof import("./getRepository").getRepository = null as any;
export const getRepositoryOutput: typeof import("./getRepository").getRepositoryOutput = null as any;
utilities.lazyLoad(exports, ["getRepository","getRepositoryOutput"], () => require("./getRepository"));

export { PackageGroupArgs } from "./packageGroup";
export type PackageGroup = import("./packageGroup").PackageGroup;
export const PackageGroup: typeof import("./packageGroup").PackageGroup = null as any;
utilities.lazyLoad(exports, ["PackageGroup"], () => require("./packageGroup"));

export { RepositoryArgs } from "./repository";
export type Repository = import("./repository").Repository;
export const Repository: typeof import("./repository").Repository = null as any;
utilities.lazyLoad(exports, ["Repository"], () => require("./repository"));


// Export enums:
export * from "../types/enums/codeartifact";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:codeartifact:Domain":
                return new Domain(name, <any>undefined, { urn })
            case "aws-native:codeartifact:PackageGroup":
                return new PackageGroup(name, <any>undefined, { urn })
            case "aws-native:codeartifact:Repository":
                return new Repository(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "codeartifact", _module)
