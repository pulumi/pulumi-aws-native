// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Logs::DeliverySource.
 */
export function getDeliverySource(args: GetDeliverySourceArgs, opts?: pulumi.InvokeOptions): Promise<GetDeliverySourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:logs:getDeliverySource", {
        "name": args.name,
    }, opts);
}

export interface GetDeliverySourceArgs {
    /**
     * The unique name of the Log source.
     */
    name: string;
}

export interface GetDeliverySourceResult {
    /**
     * The ARN of the Aqueduct Source.
     */
    readonly arn?: string;
    /**
     * The type of logs being delivered. Only mandatory when the resourceArn could match more than one. In such a case, the error message will contain all the possible options.
     */
    readonly logType?: string;
    /**
     * List of ARN of the resource that will be sending the logs
     */
    readonly resourceArns?: string[];
    /**
     * The service generating the log
     */
    readonly service?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.logs.DeliverySourceTag[];
}
/**
 * Resource Type definition for AWS::Logs::DeliverySource.
 */
export function getDeliverySourceOutput(args: GetDeliverySourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeliverySourceResult> {
    return pulumi.output(args).apply((a: any) => getDeliverySource(a, opts))
}

export interface GetDeliverySourceOutputArgs {
    /**
     * The unique name of the Log source.
     */
    name: pulumi.Input<string>;
}
