// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Specifies a transformer on the log group to transform logs into consistent structured and information rich format.
 */
export function getTransformer(args: GetTransformerArgs, opts?: pulumi.InvokeOptions): Promise<GetTransformerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:logs:getTransformer", {
        "logGroupIdentifier": args.logGroupIdentifier,
    }, opts);
}

export interface GetTransformerArgs {
    /**
     * Existing log group that you want to associate with this transformer.
     */
    logGroupIdentifier: string;
}

export interface GetTransformerResult {
    /**
     * List of processors in a transformer
     */
    readonly transformerConfig?: outputs.logs.TransformerProcessor[];
}
/**
 * Specifies a transformer on the log group to transform logs into consistent structured and information rich format.
 */
export function getTransformerOutput(args: GetTransformerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTransformerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:logs:getTransformer", {
        "logGroupIdentifier": args.logGroupIdentifier,
    }, opts);
}

export interface GetTransformerOutputArgs {
    /**
     * Existing log group that you want to associate with this transformer.
     */
    logGroupIdentifier: pulumi.Input<string>;
}
