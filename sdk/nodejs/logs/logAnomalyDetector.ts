// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::Logs::LogAnomalyDetector resource specifies a CloudWatch Logs LogAnomalyDetector.
 */
export class LogAnomalyDetector extends pulumi.CustomResource {
    /**
     * Get an existing LogAnomalyDetector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LogAnomalyDetector {
        return new LogAnomalyDetector(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:logs:LogAnomalyDetector';

    /**
     * Returns true if the given object is an instance of LogAnomalyDetector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogAnomalyDetector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogAnomalyDetector.__pulumiType;
    }

    /**
     * Account ID for owner of detector
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * ARN of LogAnomalyDetector
     */
    public /*out*/ readonly anomalyDetectorArn!: pulumi.Output<string>;
    /**
     * Current status of detector.
     */
    public /*out*/ readonly anomalyDetectorStatus!: pulumi.Output<string>;
    public readonly anomalyVisibilityTime!: pulumi.Output<number | undefined>;
    /**
     * When detector was created.
     */
    public /*out*/ readonly creationTimeStamp!: pulumi.Output<number>;
    /**
     * Name of detector
     */
    public readonly detectorName!: pulumi.Output<string | undefined>;
    /**
     * How often log group is evaluated
     */
    public readonly evaluationFrequency!: pulumi.Output<enums.logs.LogAnomalyDetectorEvaluationFrequency | undefined>;
    public readonly filterPattern!: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
     */
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    /**
     * When detector was lsat modified.
     */
    public /*out*/ readonly lastModifiedTimeStamp!: pulumi.Output<number>;
    /**
     * List of Arns for the given log group
     */
    public readonly logGroupArnList!: pulumi.Output<string[] | undefined>;

    /**
     * Create a LogAnomalyDetector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LogAnomalyDetectorArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["anomalyVisibilityTime"] = args ? args.anomalyVisibilityTime : undefined;
            resourceInputs["detectorName"] = args ? args.detectorName : undefined;
            resourceInputs["evaluationFrequency"] = args ? args.evaluationFrequency : undefined;
            resourceInputs["filterPattern"] = args ? args.filterPattern : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["logGroupArnList"] = args ? args.logGroupArnList : undefined;
            resourceInputs["anomalyDetectorArn"] = undefined /*out*/;
            resourceInputs["anomalyDetectorStatus"] = undefined /*out*/;
            resourceInputs["creationTimeStamp"] = undefined /*out*/;
            resourceInputs["lastModifiedTimeStamp"] = undefined /*out*/;
        } else {
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["anomalyDetectorArn"] = undefined /*out*/;
            resourceInputs["anomalyDetectorStatus"] = undefined /*out*/;
            resourceInputs["anomalyVisibilityTime"] = undefined /*out*/;
            resourceInputs["creationTimeStamp"] = undefined /*out*/;
            resourceInputs["detectorName"] = undefined /*out*/;
            resourceInputs["evaluationFrequency"] = undefined /*out*/;
            resourceInputs["filterPattern"] = undefined /*out*/;
            resourceInputs["kmsKeyId"] = undefined /*out*/;
            resourceInputs["lastModifiedTimeStamp"] = undefined /*out*/;
            resourceInputs["logGroupArnList"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogAnomalyDetector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LogAnomalyDetector resource.
 */
export interface LogAnomalyDetectorArgs {
    /**
     * Account ID for owner of detector
     */
    accountId?: pulumi.Input<string>;
    anomalyVisibilityTime?: pulumi.Input<number>;
    /**
     * Name of detector
     */
    detectorName?: pulumi.Input<string>;
    /**
     * How often log group is evaluated
     */
    evaluationFrequency?: pulumi.Input<enums.logs.LogAnomalyDetectorEvaluationFrequency>;
    filterPattern?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * List of Arns for the given log group
     */
    logGroupArnList?: pulumi.Input<pulumi.Input<string>[]>;
}
