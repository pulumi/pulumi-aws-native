// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The ``AWS::Logs::MetricFilter`` resource specifies a metric filter that describes how CWL extracts information from logs and transforms it into Amazon CloudWatch metrics. If you have multiple metric filters that are associated with a log group, all the filters are applied to the log streams in that group.
 *  The maximum number of metric filters that can be associated with a log group is 100.
 */
export function getMetricFilter(args: GetMetricFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricFilterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:logs:getMetricFilter", {
        "filterName": args.filterName,
        "logGroupName": args.logGroupName,
    }, opts);
}

export interface GetMetricFilterArgs {
    /**
     * The name of the metric filter.
     */
    filterName: string;
    /**
     * The name of an existing log group that you want to associate with this metric filter.
     */
    logGroupName: string;
}

export interface GetMetricFilterResult {
    /**
     * This parameter is valid only for log groups that have an active log transformer. For more information about log transformers, see [PutTransformer](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutTransformer.html).
     *  If this value is ``true``, the metric filter is applied on the transformed version of the log events instead of the original ingested log events.
     */
    readonly applyOnTransformedLogs?: boolean;
    /**
     * The list of system fields that are emitted as additional dimensions in the generated metrics. Returns the `emitSystemFieldDimensions` value if it was specified when the metric filter was created.
     */
    readonly emitSystemFieldDimensions?: string[];
    /**
     * The filter expression that specifies which log events are processed by this metric filter based on system fields. Returns the `fieldSelectionCriteria` value if it was specified when the metric filter was created.
     */
    readonly fieldSelectionCriteria?: string;
    /**
     * A filter pattern for extracting metric data out of ingested log events. For more information, see [Filter and Pattern Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html).
     */
    readonly filterPattern?: string;
    /**
     * The metric transformations.
     */
    readonly metricTransformations?: outputs.logs.MetricFilterMetricTransformation[];
}
/**
 * The ``AWS::Logs::MetricFilter`` resource specifies a metric filter that describes how CWL extracts information from logs and transforms it into Amazon CloudWatch metrics. If you have multiple metric filters that are associated with a log group, all the filters are applied to the log streams in that group.
 *  The maximum number of metric filters that can be associated with a log group is 100.
 */
export function getMetricFilterOutput(args: GetMetricFilterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMetricFilterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:logs:getMetricFilter", {
        "filterName": args.filterName,
        "logGroupName": args.logGroupName,
    }, opts);
}

export interface GetMetricFilterOutputArgs {
    /**
     * The name of the metric filter.
     */
    filterName: pulumi.Input<string>;
    /**
     * The name of an existing log group that you want to associate with this metric filter.
     */
    logGroupName: pulumi.Input<string>;
}
