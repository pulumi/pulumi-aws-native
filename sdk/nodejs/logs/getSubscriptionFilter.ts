// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export function getSubscriptionFilter(args: GetSubscriptionFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionFilterResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:logs:getSubscriptionFilter", {
        "filterName": args.filterName,
        "logGroupName": args.logGroupName,
    }, opts);
}

export interface GetSubscriptionFilterArgs {
    /**
     * The name of the filter generated by resource.
     */
    filterName: string;
    /**
     * Existing log group that you want to associate with this filter.
     */
    logGroupName: string;
}

export interface GetSubscriptionFilterResult {
    /**
     * The name of the filter generated by resource.
     */
    readonly filterName?: string;
}

export function getSubscriptionFilterOutput(args: GetSubscriptionFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriptionFilterResult> {
    return pulumi.output(args).apply(a => getSubscriptionFilter(a, opts))
}

export interface GetSubscriptionFilterOutputArgs {
    /**
     * The name of the filter generated by resource.
     */
    filterName: pulumi.Input<string>;
    /**
     * Existing log group that you want to associate with this filter.
     */
    logGroupName: pulumi.Input<string>;
}
