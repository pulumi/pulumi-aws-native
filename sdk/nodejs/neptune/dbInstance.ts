// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::Neptune::DBInstance resource creates an Amazon Neptune DB instance.
 */
export class DbInstance extends pulumi.CustomResource {
    /**
     * Get an existing DbInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DbInstance {
        return new DbInstance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:neptune:DbInstance';

    /**
     * Returns true if the given object is an instance of DbInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbInstance.__pulumiType;
    }

    /**
     * Indicates that major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible. This parameter must be set to true when specifying a value for the EngineVersion parameter that is a different major version than the DB instance's current version.
     */
    declare public readonly allowMajorVersionUpgrade: pulumi.Output<boolean | undefined>;
    /**
     * Indicates that minor version patches are applied automatically.
     *
     * When updating this property, some interruptions may occur.
     */
    declare public readonly autoMinorVersionUpgrade: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the name of the Availability Zone the DB instance is located in.
     */
    declare public readonly availabilityZone: pulumi.Output<string | undefined>;
    /**
     * If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.
     */
    declare public readonly dbClusterIdentifier: pulumi.Output<string | undefined>;
    /**
     * Contains the name of the compute and memory capacity class of the DB instance.
     *
     * If you update this property, some interruptions may occur.
     */
    declare public readonly dbInstanceClass: pulumi.Output<string>;
    /**
     * Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.
     */
    declare public readonly dbInstanceIdentifier: pulumi.Output<string | undefined>;
    /**
     * The name of an existing DB parameter group or a reference to an AWS::Neptune::DBParameterGroup resource created in the template. If any of the data members of the referenced parameter group are changed during an update, the DB instance might need to be restarted, which causes some interruption. If the parameter group contains static parameters, whether they were changed or not, an update triggers a reboot.
     */
    declare public readonly dbParameterGroupName: pulumi.Output<string | undefined>;
    /**
     * This parameter is not supported.
     *
     * `AWS::Neptune::DBInstance` does not support restoring from snapshots.
     *
     * `AWS::Neptune::DBCluster` does support restoring from snapshots.
     */
    declare public readonly dbSnapshotIdentifier: pulumi.Output<string | undefined>;
    /**
     * A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new virtual private cloud (VPC).
     */
    declare public readonly dbSubnetGroupName: pulumi.Output<string | undefined>;
    /**
     * The connection endpoint for the database. For example: `mystack-mydb-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`.
     */
    declare public /*out*/ readonly endpoint: pulumi.Output<string>;
    /**
     * The port number on which the database accepts connections. For example: `8182`.
     */
    declare public /*out*/ readonly port: pulumi.Output<string>;
    /**
     * Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     */
    declare public readonly preferredMaintenanceWindow: pulumi.Output<string | undefined>;
    /**
     * An arbitrary set of tags (key-value pairs) for this DB instance.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a DbInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbInstanceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.dbInstanceClass === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceClass'");
            }
            resourceInputs["allowMajorVersionUpgrade"] = args?.allowMajorVersionUpgrade;
            resourceInputs["autoMinorVersionUpgrade"] = args?.autoMinorVersionUpgrade;
            resourceInputs["availabilityZone"] = args?.availabilityZone;
            resourceInputs["dbClusterIdentifier"] = args?.dbClusterIdentifier;
            resourceInputs["dbInstanceClass"] = args?.dbInstanceClass;
            resourceInputs["dbInstanceIdentifier"] = args?.dbInstanceIdentifier;
            resourceInputs["dbParameterGroupName"] = args?.dbParameterGroupName;
            resourceInputs["dbSnapshotIdentifier"] = args?.dbSnapshotIdentifier;
            resourceInputs["dbSubnetGroupName"] = args?.dbSubnetGroupName;
            resourceInputs["preferredMaintenanceWindow"] = args?.preferredMaintenanceWindow;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
        } else {
            resourceInputs["allowMajorVersionUpgrade"] = undefined /*out*/;
            resourceInputs["autoMinorVersionUpgrade"] = undefined /*out*/;
            resourceInputs["availabilityZone"] = undefined /*out*/;
            resourceInputs["dbClusterIdentifier"] = undefined /*out*/;
            resourceInputs["dbInstanceClass"] = undefined /*out*/;
            resourceInputs["dbInstanceIdentifier"] = undefined /*out*/;
            resourceInputs["dbParameterGroupName"] = undefined /*out*/;
            resourceInputs["dbSnapshotIdentifier"] = undefined /*out*/;
            resourceInputs["dbSubnetGroupName"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["preferredMaintenanceWindow"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["availabilityZone", "dbClusterIdentifier", "dbInstanceIdentifier", "dbSnapshotIdentifier", "dbSubnetGroupName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DbInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DbInstance resource.
 */
export interface DbInstanceArgs {
    /**
     * Indicates that major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible. This parameter must be set to true when specifying a value for the EngineVersion parameter that is a different major version than the DB instance's current version.
     */
    allowMajorVersionUpgrade?: pulumi.Input<boolean>;
    /**
     * Indicates that minor version patches are applied automatically.
     *
     * When updating this property, some interruptions may occur.
     */
    autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the Availability Zone the DB instance is located in.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.
     */
    dbClusterIdentifier?: pulumi.Input<string>;
    /**
     * Contains the name of the compute and memory capacity class of the DB instance.
     *
     * If you update this property, some interruptions may occur.
     */
    dbInstanceClass: pulumi.Input<string>;
    /**
     * Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.
     */
    dbInstanceIdentifier?: pulumi.Input<string>;
    /**
     * The name of an existing DB parameter group or a reference to an AWS::Neptune::DBParameterGroup resource created in the template. If any of the data members of the referenced parameter group are changed during an update, the DB instance might need to be restarted, which causes some interruption. If the parameter group contains static parameters, whether they were changed or not, an update triggers a reboot.
     */
    dbParameterGroupName?: pulumi.Input<string>;
    /**
     * This parameter is not supported.
     *
     * `AWS::Neptune::DBInstance` does not support restoring from snapshots.
     *
     * `AWS::Neptune::DBCluster` does support restoring from snapshots.
     */
    dbSnapshotIdentifier?: pulumi.Input<string>;
    /**
     * A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new virtual private cloud (VPC).
     */
    dbSubnetGroupName?: pulumi.Input<string>;
    /**
     * Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     */
    preferredMaintenanceWindow?: pulumi.Input<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this DB instance.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
