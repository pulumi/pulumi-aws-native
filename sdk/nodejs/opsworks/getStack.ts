// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::OpsWorks::Stack
 */
export function getStack(args: GetStackArgs, opts?: pulumi.InvokeOptions): Promise<GetStackResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:opsworks:getStack", {
        "id": args.id,
    }, opts);
}

export interface GetStackArgs {
    id: string;
}

export interface GetStackResult {
    readonly agentVersion?: string;
    readonly attributes?: any;
    readonly chefConfiguration?: outputs.opsworks.StackChefConfiguration;
    readonly configurationManager?: outputs.opsworks.StackConfigurationManager;
    readonly customCookbooksSource?: outputs.opsworks.StackSource;
    readonly customJson?: any;
    readonly defaultAvailabilityZone?: string;
    readonly defaultInstanceProfileArn?: string;
    readonly defaultOs?: string;
    readonly defaultRootDeviceType?: string;
    readonly defaultSshKeyName?: string;
    readonly defaultSubnetId?: string;
    readonly ecsClusterArn?: string;
    readonly elasticIps?: outputs.opsworks.StackElasticIp[];
    readonly hostnameTheme?: string;
    readonly id?: string;
    readonly name?: string;
    readonly rdsDbInstances?: outputs.opsworks.StackRdsDbInstance[];
    readonly tags?: outputs.opsworks.StackTag[];
    readonly useCustomCookbooks?: boolean;
    readonly useOpsworksSecurityGroups?: boolean;
}

export function getStackOutput(args: GetStackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStackResult> {
    return pulumi.output(args).apply(a => getStack(a, opts))
}

export interface GetStackOutputArgs {
    id: pulumi.Input<string>;
}
