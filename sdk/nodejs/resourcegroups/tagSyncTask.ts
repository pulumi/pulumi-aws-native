// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Schema for ResourceGroups::TagSyncTask
 */
export class TagSyncTask extends pulumi.CustomResource {
    /**
     * Get an existing TagSyncTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TagSyncTask {
        return new TagSyncTask(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:resourcegroups:TagSyncTask';

    /**
     * Returns true if the given object is an instance of TagSyncTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TagSyncTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TagSyncTask.__pulumiType;
    }

    /**
     * The Amazon resource name (ARN) or name of the application group for which you want to create a tag-sync task
     */
    public readonly group!: pulumi.Output<string>;
    /**
     * The Amazon resource name (ARN) of the ApplicationGroup for which the TagSyncTask is created
     */
    public /*out*/ readonly groupArn!: pulumi.Output<string>;
    /**
     * The Name of the application group for which the TagSyncTask is created
     */
    public /*out*/ readonly groupName!: pulumi.Output<string>;
    /**
     * The Amazon resource name (ARN) of the role assumed by the service to tag and untag resources on your behalf.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * The status of the TagSyncTask
     */
    public /*out*/ readonly status!: pulumi.Output<enums.resourcegroups.TagSyncTaskStatus>;
    /**
     * The tag key. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
     */
    public readonly tagKey!: pulumi.Output<string>;
    /**
     * The tag value. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
     */
    public readonly tagValue!: pulumi.Output<string>;
    /**
     * The ARN of the TagSyncTask resource
     */
    public /*out*/ readonly taskArn!: pulumi.Output<string>;

    /**
     * Create a TagSyncTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TagSyncTaskArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.group === undefined) && !opts.urn) {
                throw new Error("Missing required property 'group'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if ((!args || args.tagKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tagKey'");
            }
            if ((!args || args.tagValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tagValue'");
            }
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tagKey"] = args ? args.tagKey : undefined;
            resourceInputs["tagValue"] = args ? args.tagValue : undefined;
            resourceInputs["groupArn"] = undefined /*out*/;
            resourceInputs["groupName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["taskArn"] = undefined /*out*/;
        } else {
            resourceInputs["group"] = undefined /*out*/;
            resourceInputs["groupArn"] = undefined /*out*/;
            resourceInputs["groupName"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tagKey"] = undefined /*out*/;
            resourceInputs["tagValue"] = undefined /*out*/;
            resourceInputs["taskArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["group", "roleArn", "tagKey", "tagValue"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(TagSyncTask.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a TagSyncTask resource.
 */
export interface TagSyncTaskArgs {
    /**
     * The Amazon resource name (ARN) or name of the application group for which you want to create a tag-sync task
     */
    group: pulumi.Input<string>;
    /**
     * The Amazon resource name (ARN) of the role assumed by the service to tag and untag resources on your behalf.
     */
    roleArn: pulumi.Input<string>;
    /**
     * The tag key. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
     */
    tagKey: pulumi.Input<string>;
    /**
     * The tag value. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
     */
    tagValue: pulumi.Input<string>;
}
