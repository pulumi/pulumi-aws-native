// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetGitHubRepositoryArgs, GetGitHubRepositoryResult, GetGitHubRepositoryOutputArgs } from "./getGitHubRepository";
export const getGitHubRepository: typeof import("./getGitHubRepository").getGitHubRepository = null as any;
export const getGitHubRepositoryOutput: typeof import("./getGitHubRepository").getGitHubRepositoryOutput = null as any;

export { GitHubRepositoryArgs } from "./gitHubRepository";
export type GitHubRepository = import("./gitHubRepository").GitHubRepository;
export const GitHubRepository: typeof import("./gitHubRepository").GitHubRepository = null as any;

utilities.lazyLoad(exports, ["getGitHubRepository","getGitHubRepositoryOutput"], () => require("./getGitHubRepository"));
utilities.lazyLoad(exports, ["GitHubRepository"], () => require("./gitHubRepository"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:codestar:GitHubRepository":
                return new GitHubRepository(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "codestar", _module)
