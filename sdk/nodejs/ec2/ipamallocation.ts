// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Schema of AWS::EC2::IPAMAllocation Type
 */
export class IPAMAllocation extends pulumi.CustomResource {
    /**
     * Get an existing IPAMAllocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IPAMAllocation {
        return new IPAMAllocation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:IPAMAllocation';

    /**
     * Returns true if the given object is an instance of IPAMAllocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IPAMAllocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IPAMAllocation.__pulumiType;
    }

    public readonly cidr!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Id of the allocation.
     */
    public /*out*/ readonly ipamPoolAllocationId!: pulumi.Output<string>;
    /**
     * Id of the IPAM Pool.
     */
    public readonly ipamPoolId!: pulumi.Output<string>;
    /**
     * The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
     */
    public readonly netmaskLength!: pulumi.Output<number | undefined>;

    /**
     * Create a IPAMAllocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IPAMAllocationArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.ipamPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipamPoolId'");
            }
            inputs["cidr"] = args ? args.cidr : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["ipamPoolId"] = args ? args.ipamPoolId : undefined;
            inputs["netmaskLength"] = args ? args.netmaskLength : undefined;
            inputs["ipamPoolAllocationId"] = undefined /*out*/;
        } else {
            inputs["cidr"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["ipamPoolAllocationId"] = undefined /*out*/;
            inputs["ipamPoolId"] = undefined /*out*/;
            inputs["netmaskLength"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(IPAMAllocation.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a IPAMAllocation resource.
 */
export interface IPAMAllocationArgs {
    cidr?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * Id of the IPAM Pool.
     */
    ipamPoolId: pulumi.Input<string>;
    /**
     * The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
     */
    netmaskLength?: pulumi.Input<number>;
}
