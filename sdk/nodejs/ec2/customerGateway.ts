// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Specifies a customer gateway.
 */
export class CustomerGateway extends pulumi.CustomResource {
    /**
     * Get an existing CustomerGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomerGateway {
        return new CustomerGateway(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:CustomerGateway';

    /**
     * Returns true if the given object is an instance of CustomerGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomerGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomerGateway.__pulumiType;
    }

    /**
     * For customer gateway devices that support BGP, specify the device's ASN. You must specify either ``BgpAsn`` or ``BgpAsnExtended`` when creating the customer gateway. If the ASN is larger than ``2,147,483,647``, you must use ``BgpAsnExtended``.
     *  Default: 65000
     *  Valid values: ``1`` to ``2,147,483,647``
     */
    public readonly bgpAsn!: pulumi.Output<number | undefined>;
    /**
     * For customer gateway devices that support BGP, specify the device's ASN. You must specify either ``BgpAsn`` or ``BgpAsnExtended`` when creating the customer gateway. If the ASN is larger than ``2,147,483,647``, you must use ``BgpAsnExtended``.
     *  Valid values: ``2,147,483,648`` to ``4,294,967,295``
     */
    public readonly bgpAsnExtended!: pulumi.Output<number | undefined>;
    /**
     * The Amazon Resource Name (ARN) for the customer gateway certificate.
     */
    public readonly certificateArn!: pulumi.Output<string | undefined>;
    /**
     * The ID of the customer gateway.
     */
    public /*out*/ readonly customerGatewayId!: pulumi.Output<string>;
    /**
     * The name of customer gateway device.
     */
    public readonly deviceName!: pulumi.Output<string | undefined>;
    /**
     * The IP address for the customer gateway device's outside interface. The address must be static. If ``OutsideIpAddressType`` in your VPN connection options is set to ``PrivateIpv4``, you can use an RFC6598 or RFC1918 private IPv4 address. If ``OutsideIpAddressType`` is set to ``Ipv6``, you can use an IPv6 address.
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * One or more tags for the customer gateway.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The type of VPN connection that this customer gateway supports (``ipsec.1``).
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a CustomerGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomerGatewayArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.ipAddress === undefined && !opts.urn) {
                throw new Error("Missing required property 'ipAddress'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["bgpAsn"] = args?.bgpAsn;
            resourceInputs["bgpAsnExtended"] = args?.bgpAsnExtended;
            resourceInputs["certificateArn"] = args?.certificateArn;
            resourceInputs["deviceName"] = args?.deviceName;
            resourceInputs["ipAddress"] = args?.ipAddress;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["type"] = args?.type;
            resourceInputs["customerGatewayId"] = undefined /*out*/;
        } else {
            resourceInputs["bgpAsn"] = undefined /*out*/;
            resourceInputs["bgpAsnExtended"] = undefined /*out*/;
            resourceInputs["certificateArn"] = undefined /*out*/;
            resourceInputs["customerGatewayId"] = undefined /*out*/;
            resourceInputs["deviceName"] = undefined /*out*/;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["bgpAsn", "bgpAsnExtended", "certificateArn", "deviceName", "ipAddress", "type"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(CustomerGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CustomerGateway resource.
 */
export interface CustomerGatewayArgs {
    /**
     * For customer gateway devices that support BGP, specify the device's ASN. You must specify either ``BgpAsn`` or ``BgpAsnExtended`` when creating the customer gateway. If the ASN is larger than ``2,147,483,647``, you must use ``BgpAsnExtended``.
     *  Default: 65000
     *  Valid values: ``1`` to ``2,147,483,647``
     */
    bgpAsn?: pulumi.Input<number>;
    /**
     * For customer gateway devices that support BGP, specify the device's ASN. You must specify either ``BgpAsn`` or ``BgpAsnExtended`` when creating the customer gateway. If the ASN is larger than ``2,147,483,647``, you must use ``BgpAsnExtended``.
     *  Valid values: ``2,147,483,648`` to ``4,294,967,295``
     */
    bgpAsnExtended?: pulumi.Input<number>;
    /**
     * The Amazon Resource Name (ARN) for the customer gateway certificate.
     */
    certificateArn?: pulumi.Input<string>;
    /**
     * The name of customer gateway device.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * The IP address for the customer gateway device's outside interface. The address must be static. If ``OutsideIpAddressType`` in your VPN connection options is set to ``PrivateIpv4``, you can use an RFC6598 or RFC1918 private IPv4 address. If ``OutsideIpAddressType`` is set to ``Ipv6``, you can use an IPv6 address.
     */
    ipAddress: pulumi.Input<string>;
    /**
     * One or more tags for the customer gateway.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The type of VPN connection that this customer gateway supports (``ipsec.1``).
     */
    type: pulumi.Input<string>;
}
