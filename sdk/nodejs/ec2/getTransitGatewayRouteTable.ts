// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::TransitGatewayRouteTable
 */
export function getTransitGatewayRouteTable(args: GetTransitGatewayRouteTableArgs, opts?: pulumi.InvokeOptions): Promise<GetTransitGatewayRouteTableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getTransitGatewayRouteTable", {
        "transitGatewayRouteTableId": args.transitGatewayRouteTableId,
    }, opts);
}

export interface GetTransitGatewayRouteTableArgs {
    /**
     * Transit Gateway Route Table primary identifier
     */
    transitGatewayRouteTableId: string;
}

export interface GetTransitGatewayRouteTableResult {
    /**
     * Tags are composed of a Key/Value pair. You can use tags to categorize and track each parameter group. The tag value null is permitted.
     */
    readonly tags?: outputs.Tag[];
    /**
     * Transit Gateway Route Table primary identifier
     */
    readonly transitGatewayRouteTableId?: string;
}
/**
 * Resource Type definition for AWS::EC2::TransitGatewayRouteTable
 */
export function getTransitGatewayRouteTableOutput(args: GetTransitGatewayRouteTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransitGatewayRouteTableResult> {
    return pulumi.output(args).apply((a: any) => getTransitGatewayRouteTable(a, opts))
}

export interface GetTransitGatewayRouteTableOutputArgs {
    /**
     * Transit Gateway Route Table primary identifier
     */
    transitGatewayRouteTableId: pulumi.Input<string>;
}
