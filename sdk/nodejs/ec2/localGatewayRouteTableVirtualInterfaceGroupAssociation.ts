// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Describes a local gateway route table virtual interface group association for a local gateway.
 */
export class LocalGatewayRouteTableVirtualInterfaceGroupAssociation extends pulumi.CustomResource {
    /**
     * Get an existing LocalGatewayRouteTableVirtualInterfaceGroupAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocalGatewayRouteTableVirtualInterfaceGroupAssociation {
        return new LocalGatewayRouteTableVirtualInterfaceGroupAssociation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:LocalGatewayRouteTableVirtualInterfaceGroupAssociation';

    /**
     * Returns true if the given object is an instance of LocalGatewayRouteTableVirtualInterfaceGroupAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocalGatewayRouteTableVirtualInterfaceGroupAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocalGatewayRouteTableVirtualInterfaceGroupAssociation.__pulumiType;
    }

    /**
     * The ID of the local gateway.
     */
    public /*out*/ readonly localGatewayId!: pulumi.Output<string>;
    /**
     * The ARN of the local gateway route table.
     */
    public /*out*/ readonly localGatewayRouteTableArn!: pulumi.Output<string>;
    /**
     * The ID of the local gateway route table.
     */
    public readonly localGatewayRouteTableId!: pulumi.Output<string>;
    /**
     * The ID of the local gateway route table virtual interface group association.
     */
    public /*out*/ readonly localGatewayRouteTableVirtualInterfaceGroupAssociationId!: pulumi.Output<string>;
    /**
     * The ID of the local gateway route table virtual interface group.
     */
    public readonly localGatewayVirtualInterfaceGroupId!: pulumi.Output<string>;
    /**
     * The owner of the local gateway route table virtual interface group association.
     */
    public /*out*/ readonly ownerId!: pulumi.Output<string>;
    /**
     * The state of the local gateway route table virtual interface group association.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The tags for the local gateway route table virtual interface group association.
     */
    public readonly tags!: pulumi.Output<outputs.ec2.LocalGatewayRouteTableVirtualInterfaceGroupAssociationTag[] | undefined>;

    /**
     * Create a LocalGatewayRouteTableVirtualInterfaceGroupAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocalGatewayRouteTableVirtualInterfaceGroupAssociationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.localGatewayRouteTableId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localGatewayRouteTableId'");
            }
            if ((!args || args.localGatewayVirtualInterfaceGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localGatewayVirtualInterfaceGroupId'");
            }
            resourceInputs["localGatewayRouteTableId"] = args ? args.localGatewayRouteTableId : undefined;
            resourceInputs["localGatewayVirtualInterfaceGroupId"] = args ? args.localGatewayVirtualInterfaceGroupId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["localGatewayId"] = undefined /*out*/;
            resourceInputs["localGatewayRouteTableArn"] = undefined /*out*/;
            resourceInputs["localGatewayRouteTableVirtualInterfaceGroupAssociationId"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        } else {
            resourceInputs["localGatewayId"] = undefined /*out*/;
            resourceInputs["localGatewayRouteTableArn"] = undefined /*out*/;
            resourceInputs["localGatewayRouteTableId"] = undefined /*out*/;
            resourceInputs["localGatewayRouteTableVirtualInterfaceGroupAssociationId"] = undefined /*out*/;
            resourceInputs["localGatewayVirtualInterfaceGroupId"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["localGatewayRouteTableId", "localGatewayVirtualInterfaceGroupId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(LocalGatewayRouteTableVirtualInterfaceGroupAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LocalGatewayRouteTableVirtualInterfaceGroupAssociation resource.
 */
export interface LocalGatewayRouteTableVirtualInterfaceGroupAssociationArgs {
    /**
     * The ID of the local gateway route table.
     */
    localGatewayRouteTableId: pulumi.Input<string>;
    /**
     * The ID of the local gateway route table virtual interface group.
     */
    localGatewayVirtualInterfaceGroupId: pulumi.Input<string>;
    /**
     * The tags for the local gateway route table virtual interface group association.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.LocalGatewayRouteTableVirtualInterfaceGroupAssociationTagArgs>[]>;
}
