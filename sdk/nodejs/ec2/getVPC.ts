// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::VPC
 */
export function getVPC(args: GetVPCArgs, opts?: pulumi.InvokeOptions): Promise<GetVPCResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ec2:getVPC", {
        "vpcId": args.vpcId,
    }, opts);
}

export interface GetVPCArgs {
    /**
     * The Id for the model.
     */
    vpcId: string;
}

export interface GetVPCResult {
    /**
     * A list of IPv4 CIDR block association IDs for the VPC.
     */
    readonly cidrBlockAssociations?: string[];
    /**
     * The default network ACL ID that is associated with the VPC.
     */
    readonly defaultNetworkAcl?: string;
    /**
     * The default security group ID that is associated with the VPC.
     */
    readonly defaultSecurityGroup?: string;
    /**
     * Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs.
     */
    readonly enableDnsHostnames?: boolean;
    /**
     * Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default.
     */
    readonly enableDnsSupport?: boolean;
    /**
     * The allowed tenancy of instances launched into the VPC.
     *
     * "default": An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.
     *
     * "dedicated": An instance launched into the VPC is a Dedicated Instance by default, unless you explicitly specify a tenancy of host during instance launch. You cannot specify a tenancy of default during instance launch.
     *
     * Updating InstanceTenancy requires no replacement only if you are updating its value from "dedicated" to "default". Updating InstanceTenancy from "default" to "dedicated" requires replacement.
     */
    readonly instanceTenancy?: string;
    /**
     * A list of IPv6 CIDR blocks that are associated with the VPC.
     */
    readonly ipv6CidrBlocks?: string[];
    /**
     * The tags for the VPC.
     */
    readonly tags?: outputs.ec2.VPCTag[];
    /**
     * The Id for the model.
     */
    readonly vpcId?: string;
}

export function getVPCOutput(args: GetVPCOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVPCResult> {
    return pulumi.output(args).apply(a => getVPC(a, opts))
}

export interface GetVPCOutputArgs {
    /**
     * The Id for the model.
     */
    vpcId: pulumi.Input<string>;
}
