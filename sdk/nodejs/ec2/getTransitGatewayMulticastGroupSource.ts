// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The AWS::EC2::TransitGatewayMulticastGroupSource registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
 */
export function getTransitGatewayMulticastGroupSource(args: GetTransitGatewayMulticastGroupSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetTransitGatewayMulticastGroupSourceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ec2:getTransitGatewayMulticastGroupSource", {
        "groupIpAddress": args.groupIpAddress,
        "networkInterfaceId": args.networkInterfaceId,
        "transitGatewayMulticastDomainId": args.transitGatewayMulticastDomainId,
    }, opts);
}

export interface GetTransitGatewayMulticastGroupSourceArgs {
    /**
     * The IP address assigned to the transit gateway multicast group.
     */
    groupIpAddress: string;
    /**
     * The ID of the transit gateway attachment.
     */
    networkInterfaceId: string;
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId: string;
}

export interface GetTransitGatewayMulticastGroupSourceResult {
    /**
     * Indicates that the resource is a transit gateway multicast group member.
     */
    readonly groupMember?: boolean;
    /**
     * Indicates that the resource is a transit gateway multicast group member.
     */
    readonly groupSource?: boolean;
    /**
     * The member type (for example, static).
     */
    readonly memberType?: string;
    /**
     * The ID of the resource.
     */
    readonly resourceId?: string;
    /**
     * The type of resource, for example a VPC attachment.
     */
    readonly resourceType?: string;
    /**
     * The source type.
     */
    readonly sourceType?: string;
    /**
     * The ID of the subnet.
     */
    readonly subnetId?: string;
    /**
     * The ID of the transit gateway attachment.
     */
    readonly transitGatewayAttachmentId?: string;
}

export function getTransitGatewayMulticastGroupSourceOutput(args: GetTransitGatewayMulticastGroupSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransitGatewayMulticastGroupSourceResult> {
    return pulumi.output(args).apply(a => getTransitGatewayMulticastGroupSource(a, opts))
}

export interface GetTransitGatewayMulticastGroupSourceOutputArgs {
    /**
     * The IP address assigned to the transit gateway multicast group.
     */
    groupIpAddress: pulumi.Input<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    networkInterfaceId: pulumi.Input<string>;
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId: pulumi.Input<string>;
}
