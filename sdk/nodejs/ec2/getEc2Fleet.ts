// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::EC2Fleet
 */
export function getEc2Fleet(args: GetEc2FleetArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2FleetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getEc2Fleet", {
        "fleetId": args.fleetId,
    }, opts);
}

export interface GetEc2FleetArgs {
    /**
     * The ID of the EC2 Fleet.
     */
    fleetId: string;
}

export interface GetEc2FleetResult {
    /**
     * Reserved.
     */
    readonly context?: string;
    /**
     * Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
     *
     * Supported only for fleets of type `maintain` .
     */
    readonly excessCapacityTerminationPolicy?: enums.ec2.Ec2FleetExcessCapacityTerminationPolicy;
    /**
     * The ID of the EC2 Fleet.
     */
    readonly fleetId?: string;
    /**
     * The number of units to request.
     */
    readonly targetCapacitySpecification?: outputs.ec2.Ec2FleetTargetCapacitySpecificationRequest;
}
/**
 * Resource Type definition for AWS::EC2::EC2Fleet
 */
export function getEc2FleetOutput(args: GetEc2FleetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2FleetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ec2:getEc2Fleet", {
        "fleetId": args.fleetId,
    }, opts);
}

export interface GetEc2FleetOutputArgs {
    /**
     * The ID of the EC2 Fleet.
     */
    fleetId: pulumi.Input<string>;
}
