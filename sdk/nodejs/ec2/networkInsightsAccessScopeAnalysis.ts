// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::EC2::NetworkInsightsAccessScopeAnalysis
 */
export class NetworkInsightsAccessScopeAnalysis extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInsightsAccessScopeAnalysis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkInsightsAccessScopeAnalysis {
        return new NetworkInsightsAccessScopeAnalysis(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:NetworkInsightsAccessScopeAnalysis';

    /**
     * Returns true if the given object is an instance of NetworkInsightsAccessScopeAnalysis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkInsightsAccessScopeAnalysis {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInsightsAccessScopeAnalysis.__pulumiType;
    }

    public /*out*/ readonly analyzedEniCount!: pulumi.Output<number>;
    public /*out*/ readonly endDate!: pulumi.Output<string>;
    public /*out*/ readonly findingsFound!: pulumi.Output<enums.ec2.NetworkInsightsAccessScopeAnalysisFindingsFound>;
    public /*out*/ readonly networkInsightsAccessScopeAnalysisArn!: pulumi.Output<string>;
    public /*out*/ readonly networkInsightsAccessScopeAnalysisId!: pulumi.Output<string>;
    public readonly networkInsightsAccessScopeId!: pulumi.Output<string>;
    public /*out*/ readonly startDate!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<enums.ec2.NetworkInsightsAccessScopeAnalysisStatus>;
    public /*out*/ readonly statusMessage!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.ec2.NetworkInsightsAccessScopeAnalysisTag[] | undefined>;

    /**
     * Create a NetworkInsightsAccessScopeAnalysis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInsightsAccessScopeAnalysisArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.networkInsightsAccessScopeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInsightsAccessScopeId'");
            }
            inputs["networkInsightsAccessScopeId"] = args ? args.networkInsightsAccessScopeId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["analyzedEniCount"] = undefined /*out*/;
            inputs["endDate"] = undefined /*out*/;
            inputs["findingsFound"] = undefined /*out*/;
            inputs["networkInsightsAccessScopeAnalysisArn"] = undefined /*out*/;
            inputs["networkInsightsAccessScopeAnalysisId"] = undefined /*out*/;
            inputs["startDate"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["statusMessage"] = undefined /*out*/;
        } else {
            inputs["analyzedEniCount"] = undefined /*out*/;
            inputs["endDate"] = undefined /*out*/;
            inputs["findingsFound"] = undefined /*out*/;
            inputs["networkInsightsAccessScopeAnalysisArn"] = undefined /*out*/;
            inputs["networkInsightsAccessScopeAnalysisId"] = undefined /*out*/;
            inputs["networkInsightsAccessScopeId"] = undefined /*out*/;
            inputs["startDate"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["statusMessage"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(NetworkInsightsAccessScopeAnalysis.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a NetworkInsightsAccessScopeAnalysis resource.
 */
export interface NetworkInsightsAccessScopeAnalysisArgs {
    networkInsightsAccessScopeId: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.NetworkInsightsAccessScopeAnalysisTagArgs>[]>;
}
