// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::VPCEndpointServicePermissions
 */
export function getVpcEndpointServicePermissions(args: GetVpcEndpointServicePermissionsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcEndpointServicePermissionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getVpcEndpointServicePermissions", {
        "serviceId": args.serviceId,
    }, opts);
}

export interface GetVpcEndpointServicePermissionsArgs {
    /**
     * The ID of the service.
     */
    serviceId: string;
}

export interface GetVpcEndpointServicePermissionsResult {
    /**
     * The Amazon Resource Names (ARN) of one or more principals (for example, users, IAM roles, and AWS accounts ). Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked.
     */
    readonly allowedPrincipals?: string[];
}
/**
 * Resource Type definition for AWS::EC2::VPCEndpointServicePermissions
 */
export function getVpcEndpointServicePermissionsOutput(args: GetVpcEndpointServicePermissionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcEndpointServicePermissionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ec2:getVpcEndpointServicePermissions", {
        "serviceId": args.serviceId,
    }, opts);
}

export interface GetVpcEndpointServicePermissionsOutputArgs {
    /**
     * The ID of the service.
     */
    serviceId: pulumi.Input<string>;
}
