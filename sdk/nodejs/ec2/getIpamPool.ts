// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Schema of AWS::EC2::IPAMPool Type
 */
export function getIpamPool(args: GetIpamPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetIpamPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getIpamPool", {
        "ipamPoolId": args.ipamPoolId,
    }, opts);
}

export interface GetIpamPoolArgs {
    /**
     * Id of the IPAM Pool.
     */
    ipamPoolId: string;
}

export interface GetIpamPoolResult {
    /**
     * The default netmask length for allocations made from this pool. This value is used when the netmask length of an allocation isn't specified.
     */
    readonly allocationDefaultNetmaskLength?: number;
    /**
     * The maximum allowed netmask length for allocations made from this pool.
     */
    readonly allocationMaxNetmaskLength?: number;
    /**
     * The minimum allowed netmask length for allocations made from this pool.
     */
    readonly allocationMinNetmaskLength?: number;
    /**
     * When specified, an allocation will not be allowed unless a resource has a matching set of tags.
     */
    readonly allocationResourceTags?: outputs.ec2.IpamPoolTag[];
    /**
     * The Amazon Resource Name (ARN) of the IPAM Pool.
     */
    readonly arn?: string;
    /**
     * Determines what to do if IPAM discovers resources that haven't been assigned an allocation. If set to true, an allocation will be made automatically.
     */
    readonly autoImport?: boolean;
    readonly description?: string;
    /**
     * The Amazon Resource Name (ARN) of the IPAM this pool is a part of.
     */
    readonly ipamArn?: string;
    /**
     * Id of the IPAM Pool.
     */
    readonly ipamPoolId?: string;
    /**
     * The Amazon Resource Name (ARN) of the scope this pool is a part of.
     */
    readonly ipamScopeArn?: string;
    /**
     * Determines whether this scope contains publicly routable space or space for a private network
     */
    readonly ipamScopeType?: enums.ec2.IpamPoolIpamScopeType;
    /**
     * The depth of this pool in the source pool hierarchy.
     */
    readonly poolDepth?: number;
    /**
     * A list of cidrs representing the address space available for allocation in this pool.
     */
    readonly provisionedCidrs?: outputs.ec2.IpamPoolProvisionedCidr[];
    /**
     * The state of this pool. This can be one of the following values: "create-in-progress", "create-complete", "modify-in-progress", "modify-complete", "delete-in-progress", or "delete-complete"
     */
    readonly state?: enums.ec2.IpamPoolState;
    /**
     * An explanation of how the pool arrived at it current state.
     */
    readonly stateMessage?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.ec2.IpamPoolTag[];
}
/**
 * Resource Schema of AWS::EC2::IPAMPool Type
 */
export function getIpamPoolOutput(args: GetIpamPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpamPoolResult> {
    return pulumi.output(args).apply((a: any) => getIpamPool(a, opts))
}

export interface GetIpamPoolOutputArgs {
    /**
     * Id of the IPAM Pool.
     */
    ipamPoolId: pulumi.Input<string>;
}
