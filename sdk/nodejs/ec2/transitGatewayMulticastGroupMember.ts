// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The AWS::EC2::TransitGatewayMulticastGroupMember registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
 */
export class TransitGatewayMulticastGroupMember extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayMulticastGroupMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TransitGatewayMulticastGroupMember {
        return new TransitGatewayMulticastGroupMember(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:TransitGatewayMulticastGroupMember';

    /**
     * Returns true if the given object is an instance of TransitGatewayMulticastGroupMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitGatewayMulticastGroupMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitGatewayMulticastGroupMember.__pulumiType;
    }

    /**
     * The IP address assigned to the transit gateway multicast group.
     */
    public readonly groupIpAddress!: pulumi.Output<string>;
    /**
     * Indicates that the resource is a transit gateway multicast group member.
     */
    public /*out*/ readonly groupMember!: pulumi.Output<boolean>;
    /**
     * Indicates that the resource is a transit gateway multicast group member.
     */
    public /*out*/ readonly groupSource!: pulumi.Output<boolean>;
    /**
     * The member type (for example, static).
     */
    public /*out*/ readonly memberType!: pulumi.Output<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    public readonly networkInterfaceId!: pulumi.Output<string>;
    /**
     * The ID of the resource.
     */
    public /*out*/ readonly resourceId!: pulumi.Output<string>;
    /**
     * The type of resource, for example a VPC attachment.
     */
    public /*out*/ readonly resourceType!: pulumi.Output<string>;
    /**
     * The source type.
     */
    public /*out*/ readonly sourceType!: pulumi.Output<string>;
    /**
     * The ID of the subnet.
     */
    public /*out*/ readonly subnetId!: pulumi.Output<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    public /*out*/ readonly transitGatewayAttachmentId!: pulumi.Output<string>;
    /**
     * The ID of the transit gateway multicast domain.
     */
    public readonly transitGatewayMulticastDomainId!: pulumi.Output<string>;

    /**
     * Create a TransitGatewayMulticastGroupMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayMulticastGroupMemberArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.groupIpAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupIpAddress'");
            }
            if ((!args || args.networkInterfaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterfaceId'");
            }
            if ((!args || args.transitGatewayMulticastDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitGatewayMulticastDomainId'");
            }
            inputs["groupIpAddress"] = args ? args.groupIpAddress : undefined;
            inputs["networkInterfaceId"] = args ? args.networkInterfaceId : undefined;
            inputs["transitGatewayMulticastDomainId"] = args ? args.transitGatewayMulticastDomainId : undefined;
            inputs["groupMember"] = undefined /*out*/;
            inputs["groupSource"] = undefined /*out*/;
            inputs["memberType"] = undefined /*out*/;
            inputs["resourceId"] = undefined /*out*/;
            inputs["resourceType"] = undefined /*out*/;
            inputs["sourceType"] = undefined /*out*/;
            inputs["subnetId"] = undefined /*out*/;
            inputs["transitGatewayAttachmentId"] = undefined /*out*/;
        } else {
            inputs["groupIpAddress"] = undefined /*out*/;
            inputs["groupMember"] = undefined /*out*/;
            inputs["groupSource"] = undefined /*out*/;
            inputs["memberType"] = undefined /*out*/;
            inputs["networkInterfaceId"] = undefined /*out*/;
            inputs["resourceId"] = undefined /*out*/;
            inputs["resourceType"] = undefined /*out*/;
            inputs["sourceType"] = undefined /*out*/;
            inputs["subnetId"] = undefined /*out*/;
            inputs["transitGatewayAttachmentId"] = undefined /*out*/;
            inputs["transitGatewayMulticastDomainId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(TransitGatewayMulticastGroupMember.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a TransitGatewayMulticastGroupMember resource.
 */
export interface TransitGatewayMulticastGroupMemberArgs {
    /**
     * The IP address assigned to the transit gateway multicast group.
     */
    groupIpAddress: pulumi.Input<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    networkInterfaceId: pulumi.Input<string>;
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId: pulumi.Input<string>;
}
