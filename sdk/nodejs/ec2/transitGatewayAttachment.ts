// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::TransitGatewayAttachment
 */
export class TransitGatewayAttachment extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TransitGatewayAttachment {
        return new TransitGatewayAttachment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:TransitGatewayAttachment';

    /**
     * Returns true if the given object is an instance of TransitGatewayAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitGatewayAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitGatewayAttachment.__pulumiType;
    }

    /**
     * The ID of the attachment.
     */
    declare public /*out*/ readonly awsId: pulumi.Output<string>;
    /**
     * The options for the transit gateway vpc attachment.
     */
    declare public readonly options: pulumi.Output<outputs.ec2.OptionsProperties | undefined>;
    /**
     * The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.
     */
    declare public readonly subnetIds: pulumi.Output<string[]>;
    /**
     * The tags for the attachment.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ID of the transit gateway.
     */
    declare public readonly transitGatewayId: pulumi.Output<string>;
    /**
     * The ID of the VPC.
     */
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a TransitGatewayAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayAttachmentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.subnetIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            if (args?.transitGatewayId === undefined && !opts.urn) {
                throw new Error("Missing required property 'transitGatewayId'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["options"] = args?.options;
            resourceInputs["subnetIds"] = args?.subnetIds;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["transitGatewayId"] = args?.transitGatewayId;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["awsId"] = undefined /*out*/;
        } else {
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["options"] = undefined /*out*/;
            resourceInputs["subnetIds"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["transitGatewayId"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["transitGatewayId", "vpcId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(TransitGatewayAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a TransitGatewayAttachment resource.
 */
export interface TransitGatewayAttachmentArgs {
    /**
     * The options for the transit gateway vpc attachment.
     */
    options?: pulumi.Input<inputs.ec2.OptionsPropertiesArgs>;
    /**
     * The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tags for the attachment.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The ID of the transit gateway.
     */
    transitGatewayId: pulumi.Input<string>;
    /**
     * The ID of the VPC.
     */
    vpcId: pulumi.Input<string>;
}
