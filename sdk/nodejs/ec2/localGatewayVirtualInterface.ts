// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for Local Gateway Virtual Interface which describes a virtual interface for AWS Outposts local gateways.
 */
export class LocalGatewayVirtualInterface extends pulumi.CustomResource {
    /**
     * Get an existing LocalGatewayVirtualInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocalGatewayVirtualInterface {
        return new LocalGatewayVirtualInterface(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:LocalGatewayVirtualInterface';

    /**
     * Returns true if the given object is an instance of LocalGatewayVirtualInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocalGatewayVirtualInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocalGatewayVirtualInterface.__pulumiType;
    }

    /**
     * The current state of the local gateway virtual interface
     */
    declare public /*out*/ readonly configurationState: pulumi.Output<string>;
    /**
     * The local address.
     */
    declare public readonly localAddress: pulumi.Output<string>;
    /**
     * The Autonomous System Number(ASN) for the local Border Gateway Protocol (BGP)
     */
    declare public /*out*/ readonly localBgpAsn: pulumi.Output<number>;
    /**
     * The ID of the local gateway
     */
    declare public /*out*/ readonly localGatewayId: pulumi.Output<string>;
    /**
     * The ID of the virtual interface group
     */
    declare public readonly localGatewayVirtualInterfaceGroupId: pulumi.Output<string>;
    /**
     * The ID of the virtual interface
     */
    declare public /*out*/ readonly localGatewayVirtualInterfaceId: pulumi.Output<string>;
    /**
     * The Outpost LAG ID.
     */
    declare public readonly outpostLagId: pulumi.Output<string>;
    /**
     * The ID of the Amazon Web Services account that owns the local gateway virtual interface group
     */
    declare public /*out*/ readonly ownerId: pulumi.Output<string>;
    /**
     * The peer address.
     */
    declare public readonly peerAddress: pulumi.Output<string>;
    /**
     * The peer BGP ASN.
     */
    declare public readonly peerBgpAsn: pulumi.Output<number | undefined>;
    /**
     * The extended 32-bit ASN of the BGP peer for use with larger ASN values.
     */
    declare public readonly peerBgpAsnExtended: pulumi.Output<number | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ID of the VLAN.
     */
    declare public readonly vlan: pulumi.Output<number>;

    /**
     * Create a LocalGatewayVirtualInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocalGatewayVirtualInterfaceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.localAddress === undefined && !opts.urn) {
                throw new Error("Missing required property 'localAddress'");
            }
            if (args?.localGatewayVirtualInterfaceGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'localGatewayVirtualInterfaceGroupId'");
            }
            if (args?.outpostLagId === undefined && !opts.urn) {
                throw new Error("Missing required property 'outpostLagId'");
            }
            if (args?.peerAddress === undefined && !opts.urn) {
                throw new Error("Missing required property 'peerAddress'");
            }
            if (args?.vlan === undefined && !opts.urn) {
                throw new Error("Missing required property 'vlan'");
            }
            resourceInputs["localAddress"] = args?.localAddress;
            resourceInputs["localGatewayVirtualInterfaceGroupId"] = args?.localGatewayVirtualInterfaceGroupId;
            resourceInputs["outpostLagId"] = args?.outpostLagId;
            resourceInputs["peerAddress"] = args?.peerAddress;
            resourceInputs["peerBgpAsn"] = args?.peerBgpAsn;
            resourceInputs["peerBgpAsnExtended"] = args?.peerBgpAsnExtended;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vlan"] = args?.vlan;
            resourceInputs["configurationState"] = undefined /*out*/;
            resourceInputs["localBgpAsn"] = undefined /*out*/;
            resourceInputs["localGatewayId"] = undefined /*out*/;
            resourceInputs["localGatewayVirtualInterfaceId"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
        } else {
            resourceInputs["configurationState"] = undefined /*out*/;
            resourceInputs["localAddress"] = undefined /*out*/;
            resourceInputs["localBgpAsn"] = undefined /*out*/;
            resourceInputs["localGatewayId"] = undefined /*out*/;
            resourceInputs["localGatewayVirtualInterfaceGroupId"] = undefined /*out*/;
            resourceInputs["localGatewayVirtualInterfaceId"] = undefined /*out*/;
            resourceInputs["outpostLagId"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["peerAddress"] = undefined /*out*/;
            resourceInputs["peerBgpAsn"] = undefined /*out*/;
            resourceInputs["peerBgpAsnExtended"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vlan"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["localAddress", "localGatewayVirtualInterfaceGroupId", "outpostLagId", "peerAddress", "peerBgpAsn", "peerBgpAsnExtended", "vlan"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(LocalGatewayVirtualInterface.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LocalGatewayVirtualInterface resource.
 */
export interface LocalGatewayVirtualInterfaceArgs {
    /**
     * The local address.
     */
    localAddress: pulumi.Input<string>;
    /**
     * The ID of the virtual interface group
     */
    localGatewayVirtualInterfaceGroupId: pulumi.Input<string>;
    /**
     * The Outpost LAG ID.
     */
    outpostLagId: pulumi.Input<string>;
    /**
     * The peer address.
     */
    peerAddress: pulumi.Input<string>;
    /**
     * The peer BGP ASN.
     */
    peerBgpAsn?: pulumi.Input<number>;
    /**
     * The extended 32-bit ASN of the BGP peer for use with larger ASN values.
     */
    peerBgpAsnExtended?: pulumi.Input<number>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The ID of the VLAN.
     */
    vlan: pulumi.Input<number>;
}
