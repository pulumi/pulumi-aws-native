// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::VPCEndpointConnectionNotification
 */
export function getVpcEndpointConnectionNotification(args: GetVpcEndpointConnectionNotificationArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcEndpointConnectionNotificationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getVpcEndpointConnectionNotification", {
        "vpcEndpointConnectionNotificationId": args.vpcEndpointConnectionNotificationId,
    }, opts);
}

export interface GetVpcEndpointConnectionNotificationArgs {
    /**
     * VPC Endpoint Connection ID generated by service
     */
    vpcEndpointConnectionNotificationId: string;
}

export interface GetVpcEndpointConnectionNotificationResult {
    /**
     * The endpoint events for which to receive notifications.
     */
    readonly connectionEvents?: string[];
    /**
     * The ARN of the SNS topic for the notifications.
     */
    readonly connectionNotificationArn?: string;
    /**
     * VPC Endpoint Connection ID generated by service
     */
    readonly vpcEndpointConnectionNotificationId?: string;
}
/**
 * Resource Type definition for AWS::EC2::VPCEndpointConnectionNotification
 */
export function getVpcEndpointConnectionNotificationOutput(args: GetVpcEndpointConnectionNotificationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcEndpointConnectionNotificationResult> {
    return pulumi.output(args).apply((a: any) => getVpcEndpointConnectionNotification(a, opts))
}

export interface GetVpcEndpointConnectionNotificationOutputArgs {
    /**
     * VPC Endpoint Connection ID generated by service
     */
    vpcEndpointConnectionNotificationId: pulumi.Input<string>;
}
