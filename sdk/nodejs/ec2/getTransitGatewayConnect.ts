// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The AWS::EC2::TransitGatewayConnect type
 */
export function getTransitGatewayConnect(args: GetTransitGatewayConnectArgs, opts?: pulumi.InvokeOptions): Promise<GetTransitGatewayConnectResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ec2:getTransitGatewayConnect", {
        "transitGatewayAttachmentId": args.transitGatewayAttachmentId,
    }, opts);
}

export interface GetTransitGatewayConnectArgs {
    /**
     * The ID of the Connect attachment.
     */
    transitGatewayAttachmentId: string;
}

export interface GetTransitGatewayConnectResult {
    /**
     * The creation time.
     */
    readonly creationTime?: string;
    /**
     * The state of the attachment.
     */
    readonly state?: string;
    /**
     * The tags for the attachment.
     */
    readonly tags?: outputs.ec2.TransitGatewayConnectTag[];
    /**
     * The ID of the Connect attachment.
     */
    readonly transitGatewayAttachmentId?: string;
    /**
     * The ID of the transit gateway.
     */
    readonly transitGatewayId?: string;
}

export function getTransitGatewayConnectOutput(args: GetTransitGatewayConnectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransitGatewayConnectResult> {
    return pulumi.output(args).apply(a => getTransitGatewayConnect(a, opts))
}

export interface GetTransitGatewayConnectOutputArgs {
    /**
     * The ID of the Connect attachment.
     */
    transitGatewayAttachmentId: pulumi.Input<string>;
}
