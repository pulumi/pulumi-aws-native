// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::VPNGatewayRoutePropagation
 */
export function getVPNGatewayRoutePropagation(args: GetVPNGatewayRoutePropagationArgs, opts?: pulumi.InvokeOptions): Promise<GetVPNGatewayRoutePropagationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ec2:getVPNGatewayRoutePropagation", {
        "id": args.id,
    }, opts);
}

export interface GetVPNGatewayRoutePropagationArgs {
    id: string;
}

export interface GetVPNGatewayRoutePropagationResult {
    readonly id?: string;
    /**
     * The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to
     */
    readonly routeTableIds?: string[];
    /**
     * The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with
     */
    readonly vpnGatewayId?: string;
}

export function getVPNGatewayRoutePropagationOutput(args: GetVPNGatewayRoutePropagationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVPNGatewayRoutePropagationResult> {
    return pulumi.output(args).apply(a => getVPNGatewayRoutePropagation(a, opts))
}

export interface GetVPNGatewayRoutePropagationOutputArgs {
    id: pulumi.Input<string>;
}
