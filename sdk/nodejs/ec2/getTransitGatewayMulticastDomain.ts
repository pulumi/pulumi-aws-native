// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The AWS::EC2::TransitGatewayMulticastDomain type
 */
export function getTransitGatewayMulticastDomain(args: GetTransitGatewayMulticastDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetTransitGatewayMulticastDomainResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ec2:getTransitGatewayMulticastDomain", {
        "transitGatewayMulticastDomainId": args.transitGatewayMulticastDomainId,
    }, opts);
}

export interface GetTransitGatewayMulticastDomainArgs {
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId: string;
}

export interface GetTransitGatewayMulticastDomainResult {
    /**
     * The time the transit gateway multicast domain was created.
     */
    readonly creationTime?: string;
    /**
     * The options for the transit gateway multicast domain.
     */
    readonly options?: outputs.ec2.OptionsProperties;
    /**
     * The state of the transit gateway multicast domain.
     */
    readonly state?: string;
    /**
     * The tags for the transit gateway multicast domain.
     */
    readonly tags?: outputs.ec2.TransitGatewayMulticastDomainTag[];
    /**
     * The Amazon Resource Name (ARN) of the transit gateway multicast domain.
     */
    readonly transitGatewayMulticastDomainArn?: string;
    /**
     * The ID of the transit gateway multicast domain.
     */
    readonly transitGatewayMulticastDomainId?: string;
}

export function getTransitGatewayMulticastDomainOutput(args: GetTransitGatewayMulticastDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransitGatewayMulticastDomainResult> {
    return pulumi.output(args).apply(a => getTransitGatewayMulticastDomain(a, opts))
}

export interface GetTransitGatewayMulticastDomainOutputArgs {
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId: pulumi.Input<string>;
}
