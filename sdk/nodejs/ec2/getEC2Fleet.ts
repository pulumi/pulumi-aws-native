// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::EC2Fleet
 */
export function getEC2Fleet(args: GetEC2FleetArgs, opts?: pulumi.InvokeOptions): Promise<GetEC2FleetResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ec2:getEC2Fleet", {
        "fleetId": args.fleetId,
    }, opts);
}

export interface GetEC2FleetArgs {
    fleetId: string;
}

export interface GetEC2FleetResult {
    readonly context?: string;
    readonly excessCapacityTerminationPolicy?: enums.ec2.EC2FleetExcessCapacityTerminationPolicy;
    readonly fleetId?: string;
    readonly targetCapacitySpecification?: outputs.ec2.EC2FleetTargetCapacitySpecificationRequest;
}

export function getEC2FleetOutput(args: GetEC2FleetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEC2FleetResult> {
    return pulumi.output(args).apply(a => getEC2Fleet(a, opts))
}

export interface GetEC2FleetOutputArgs {
    fleetId: pulumi.Input<string>;
}
