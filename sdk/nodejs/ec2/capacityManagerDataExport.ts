// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::CapacityManagerDataExport
 */
export class CapacityManagerDataExport extends pulumi.CustomResource {
    /**
     * Get an existing CapacityManagerDataExport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CapacityManagerDataExport {
        return new CapacityManagerDataExport(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:CapacityManagerDataExport';

    /**
     * Returns true if the given object is an instance of CapacityManagerDataExport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CapacityManagerDataExport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CapacityManagerDataExport.__pulumiType;
    }

    /**
     * The unique identifier of the capacity manager data export.
     */
    declare public /*out*/ readonly capacityManagerDataExportId: pulumi.Output<string>;
    /**
     * The format of the exported capacity manager data. Choose 'csv' for comma-separated values or 'parquet' for optimized columnar storage format.
     */
    declare public readonly outputFormat: pulumi.Output<enums.ec2.CapacityManagerDataExportOutputFormat>;
    /**
     * The name of the Amazon S3 bucket where the capacity manager data export will be stored. The bucket must exist and be accessible by EC2 Capacity Manager service.
     */
    declare public readonly s3BucketName: pulumi.Output<string>;
    /**
     * The prefix for the S3 bucket location where exported files will be placed. If not specified, files will be placed in the root of the bucket.
     */
    declare public readonly s3BucketPrefix: pulumi.Output<string | undefined>;
    /**
     * The schedule for the capacity manager data export. Currently supports hourly exports that provide periodic snapshots of capacity manager data.
     */
    declare public readonly schedule: pulumi.Output<enums.ec2.CapacityManagerDataExportSchedule>;
    /**
     * An array of key-value pairs to apply to the capacity manager data export.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a CapacityManagerDataExport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CapacityManagerDataExportArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.outputFormat === undefined && !opts.urn) {
                throw new Error("Missing required property 'outputFormat'");
            }
            if (args?.s3BucketName === undefined && !opts.urn) {
                throw new Error("Missing required property 's3BucketName'");
            }
            if (args?.schedule === undefined && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            resourceInputs["outputFormat"] = args?.outputFormat;
            resourceInputs["s3BucketName"] = args?.s3BucketName;
            resourceInputs["s3BucketPrefix"] = args?.s3BucketPrefix;
            resourceInputs["schedule"] = args?.schedule;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["capacityManagerDataExportId"] = undefined /*out*/;
        } else {
            resourceInputs["capacityManagerDataExportId"] = undefined /*out*/;
            resourceInputs["outputFormat"] = undefined /*out*/;
            resourceInputs["s3BucketName"] = undefined /*out*/;
            resourceInputs["s3BucketPrefix"] = undefined /*out*/;
            resourceInputs["schedule"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["outputFormat", "s3BucketName", "s3BucketPrefix", "schedule"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(CapacityManagerDataExport.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CapacityManagerDataExport resource.
 */
export interface CapacityManagerDataExportArgs {
    /**
     * The format of the exported capacity manager data. Choose 'csv' for comma-separated values or 'parquet' for optimized columnar storage format.
     */
    outputFormat: pulumi.Input<enums.ec2.CapacityManagerDataExportOutputFormat>;
    /**
     * The name of the Amazon S3 bucket where the capacity manager data export will be stored. The bucket must exist and be accessible by EC2 Capacity Manager service.
     */
    s3BucketName: pulumi.Input<string>;
    /**
     * The prefix for the S3 bucket location where exported files will be placed. If not specified, files will be placed in the root of the bucket.
     */
    s3BucketPrefix?: pulumi.Input<string>;
    /**
     * The schedule for the capacity manager data export. Currently supports hourly exports that provide periodic snapshots of capacity manager data.
     */
    schedule: pulumi.Input<enums.ec2.CapacityManagerDataExportSchedule>;
    /**
     * An array of key-value pairs to apply to the capacity manager data export.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
