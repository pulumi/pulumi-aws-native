// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::NetworkInterface
 */
export class NetworkInterface extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkInterface {
        return new NetworkInterface(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:NetworkInterface';

    /**
     * Returns true if the given object is an instance of NetworkInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInterface.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    public readonly groupSet!: pulumi.Output<string[] | undefined>;
    public readonly interfaceType!: pulumi.Output<string | undefined>;
    public readonly ipv6AddressCount!: pulumi.Output<number | undefined>;
    public readonly ipv6Addresses!: pulumi.Output<outputs.ec2.NetworkInterfaceInstanceIpv6Address[] | undefined>;
    public /*out*/ readonly primaryPrivateIpAddress!: pulumi.Output<string>;
    public readonly privateIpAddress!: pulumi.Output<string | undefined>;
    public readonly privateIpAddresses!: pulumi.Output<outputs.ec2.NetworkInterfacePrivateIpAddressSpecification[] | undefined>;
    public readonly secondaryPrivateIpAddressCount!: pulumi.Output<number | undefined>;
    public /*out*/ readonly secondaryPrivateIpAddresses!: pulumi.Output<string[]>;
    public readonly sourceDestCheck!: pulumi.Output<boolean | undefined>;
    public readonly subnetId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.ec2.NetworkInterfaceTag[] | undefined>;

    /**
     * Create a NetworkInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInterfaceArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["groupSet"] = args ? args.groupSet : undefined;
            inputs["interfaceType"] = args ? args.interfaceType : undefined;
            inputs["ipv6AddressCount"] = args ? args.ipv6AddressCount : undefined;
            inputs["ipv6Addresses"] = args ? args.ipv6Addresses : undefined;
            inputs["privateIpAddress"] = args ? args.privateIpAddress : undefined;
            inputs["privateIpAddresses"] = args ? args.privateIpAddresses : undefined;
            inputs["secondaryPrivateIpAddressCount"] = args ? args.secondaryPrivateIpAddressCount : undefined;
            inputs["sourceDestCheck"] = args ? args.sourceDestCheck : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["primaryPrivateIpAddress"] = undefined /*out*/;
            inputs["secondaryPrivateIpAddresses"] = undefined /*out*/;
        } else {
            inputs["description"] = undefined /*out*/;
            inputs["groupSet"] = undefined /*out*/;
            inputs["interfaceType"] = undefined /*out*/;
            inputs["ipv6AddressCount"] = undefined /*out*/;
            inputs["ipv6Addresses"] = undefined /*out*/;
            inputs["primaryPrivateIpAddress"] = undefined /*out*/;
            inputs["privateIpAddress"] = undefined /*out*/;
            inputs["privateIpAddresses"] = undefined /*out*/;
            inputs["secondaryPrivateIpAddressCount"] = undefined /*out*/;
            inputs["secondaryPrivateIpAddresses"] = undefined /*out*/;
            inputs["sourceDestCheck"] = undefined /*out*/;
            inputs["subnetId"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(NetworkInterface.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a NetworkInterface resource.
 */
export interface NetworkInterfaceArgs {
    description?: pulumi.Input<string>;
    groupSet?: pulumi.Input<pulumi.Input<string>[]>;
    interfaceType?: pulumi.Input<string>;
    ipv6AddressCount?: pulumi.Input<number>;
    ipv6Addresses?: pulumi.Input<pulumi.Input<inputs.ec2.NetworkInterfaceInstanceIpv6AddressArgs>[]>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAddresses?: pulumi.Input<pulumi.Input<inputs.ec2.NetworkInterfacePrivateIpAddressSpecificationArgs>[]>;
    secondaryPrivateIpAddressCount?: pulumi.Input<number>;
    sourceDestCheck?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.NetworkInterfaceTagArgs>[]>;
}
