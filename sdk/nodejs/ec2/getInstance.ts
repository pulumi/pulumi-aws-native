// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::Instance
 */
export function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ec2:getInstance", {
        "id": args.id,
    }, opts);
}

export interface GetInstanceArgs {
    id: string;
}

export interface GetInstanceResult {
    readonly additionalInfo?: string;
    readonly affinity?: string;
    readonly blockDeviceMappings?: outputs.ec2.InstanceBlockDeviceMapping[];
    readonly creditSpecification?: outputs.ec2.InstanceCreditSpecification;
    readonly disableApiTermination?: boolean;
    readonly ebsOptimized?: boolean;
    readonly hostId?: string;
    readonly iamInstanceProfile?: string;
    readonly id?: string;
    readonly instanceInitiatedShutdownBehavior?: string;
    readonly instanceType?: string;
    readonly kernelId?: string;
    readonly monitoring?: boolean;
    readonly privateDnsName?: string;
    readonly privateDnsNameOptions?: outputs.ec2.InstancePrivateDnsNameOptions;
    readonly privateIp?: string;
    readonly propagateTagsToVolumeOnCreation?: boolean;
    readonly publicDnsName?: string;
    readonly publicIp?: string;
    readonly ramdiskId?: string;
    readonly securityGroupIds?: string[];
    readonly sourceDestCheck?: boolean;
    readonly ssmAssociations?: outputs.ec2.InstanceSsmAssociation[];
    readonly tags?: outputs.ec2.InstanceTag[];
    readonly tenancy?: string;
    readonly userData?: string;
    readonly volumes?: outputs.ec2.InstanceVolume[];
}

export function getInstanceOutput(args: GetInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceResult> {
    return pulumi.output(args).apply(a => getInstance(a, opts))
}

export interface GetInstanceOutputArgs {
    id: pulumi.Input<string>;
}
