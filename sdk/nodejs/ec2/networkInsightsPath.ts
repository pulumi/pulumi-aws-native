// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::EC2::NetworkInsightsPath
 */
export class NetworkInsightsPath extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInsightsPath resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkInsightsPath {
        return new NetworkInsightsPath(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:NetworkInsightsPath';

    /**
     * Returns true if the given object is an instance of NetworkInsightsPath.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkInsightsPath {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInsightsPath.__pulumiType;
    }

    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    public readonly destination!: pulumi.Output<string>;
    public readonly destinationIp!: pulumi.Output<string | undefined>;
    public readonly destinationPort!: pulumi.Output<number | undefined>;
    public /*out*/ readonly networkInsightsPathArn!: pulumi.Output<string>;
    public /*out*/ readonly networkInsightsPathId!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly source!: pulumi.Output<string>;
    public readonly sourceIp!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.ec2.NetworkInsightsPathTag[] | undefined>;

    /**
     * Create a NetworkInsightsPath resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInsightsPathArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.destination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            inputs["destination"] = args ? args.destination : undefined;
            inputs["destinationIp"] = args ? args.destinationIp : undefined;
            inputs["destinationPort"] = args ? args.destinationPort : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["sourceIp"] = args ? args.sourceIp : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["createdDate"] = undefined /*out*/;
            inputs["networkInsightsPathArn"] = undefined /*out*/;
            inputs["networkInsightsPathId"] = undefined /*out*/;
        } else {
            inputs["createdDate"] = undefined /*out*/;
            inputs["destination"] = undefined /*out*/;
            inputs["destinationIp"] = undefined /*out*/;
            inputs["destinationPort"] = undefined /*out*/;
            inputs["networkInsightsPathArn"] = undefined /*out*/;
            inputs["networkInsightsPathId"] = undefined /*out*/;
            inputs["protocol"] = undefined /*out*/;
            inputs["source"] = undefined /*out*/;
            inputs["sourceIp"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(NetworkInsightsPath.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a NetworkInsightsPath resource.
 */
export interface NetworkInsightsPathArgs {
    destination: pulumi.Input<string>;
    destinationIp?: pulumi.Input<string>;
    destinationPort?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    source: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.NetworkInsightsPathTagArgs>[]>;
}
