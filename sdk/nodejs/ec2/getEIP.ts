// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::EIP
 */
export function getEIP(args: GetEIPArgs, opts?: pulumi.InvokeOptions): Promise<GetEIPResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ec2:getEIP", {
        "allocationId": args.allocationId,
        "publicIp": args.publicIp,
    }, opts);
}

export interface GetEIPArgs {
    /**
     * The Allocation ID of the EIP generated by resource.
     */
    allocationId: string;
    /**
     * The PublicIP of the EIP generated by resource.
     */
    publicIp: string;
}

export interface GetEIPResult {
    /**
     * The Allocation ID of the EIP generated by resource.
     */
    readonly allocationId?: string;
    /**
     * The ID of the instance.
     */
    readonly instanceId?: string;
    /**
     * The PublicIP of the EIP generated by resource.
     */
    readonly publicIp?: string;
    /**
     * The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
     */
    readonly publicIpv4Pool?: string;
    /**
     * Any tags assigned to the EIP.
     */
    readonly tags?: outputs.ec2.EIPTag[];
}

export function getEIPOutput(args: GetEIPOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEIPResult> {
    return pulumi.output(args).apply(a => getEIP(a, opts))
}

export interface GetEIPOutputArgs {
    /**
     * The Allocation ID of the EIP generated by resource.
     */
    allocationId: pulumi.Input<string>;
    /**
     * The PublicIP of the EIP generated by resource.
     */
    publicIp: pulumi.Input<string>;
}
