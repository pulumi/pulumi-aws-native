// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::VPCCidrBlock
 *
 * @deprecated VPCCidrBlock is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class VPCCidrBlock extends pulumi.CustomResource {
    /**
     * Get an existing VPCCidrBlock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VPCCidrBlock {
        pulumi.log.warn("VPCCidrBlock is deprecated: VPCCidrBlock is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new VPCCidrBlock(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:VPCCidrBlock';

    /**
     * Returns true if the given object is an instance of VPCCidrBlock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VPCCidrBlock {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VPCCidrBlock.__pulumiType;
    }

    public readonly amazonProvidedIpv6CidrBlock!: pulumi.Output<boolean | undefined>;
    public readonly cidrBlock!: pulumi.Output<string | undefined>;
    public readonly ipv4IpamPoolId!: pulumi.Output<string | undefined>;
    public readonly ipv4NetmaskLength!: pulumi.Output<number | undefined>;
    public readonly ipv6CidrBlock!: pulumi.Output<string | undefined>;
    public readonly ipv6IpamPoolId!: pulumi.Output<string | undefined>;
    public readonly ipv6NetmaskLength!: pulumi.Output<number | undefined>;
    public readonly ipv6Pool!: pulumi.Output<string | undefined>;
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a VPCCidrBlock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated VPCCidrBlock is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: VPCCidrBlockArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("VPCCidrBlock is deprecated: VPCCidrBlock is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["amazonProvidedIpv6CidrBlock"] = args ? args.amazonProvidedIpv6CidrBlock : undefined;
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["ipv4IpamPoolId"] = args ? args.ipv4IpamPoolId : undefined;
            resourceInputs["ipv4NetmaskLength"] = args ? args.ipv4NetmaskLength : undefined;
            resourceInputs["ipv6CidrBlock"] = args ? args.ipv6CidrBlock : undefined;
            resourceInputs["ipv6IpamPoolId"] = args ? args.ipv6IpamPoolId : undefined;
            resourceInputs["ipv6NetmaskLength"] = args ? args.ipv6NetmaskLength : undefined;
            resourceInputs["ipv6Pool"] = args ? args.ipv6Pool : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        } else {
            resourceInputs["amazonProvidedIpv6CidrBlock"] = undefined /*out*/;
            resourceInputs["cidrBlock"] = undefined /*out*/;
            resourceInputs["ipv4IpamPoolId"] = undefined /*out*/;
            resourceInputs["ipv4NetmaskLength"] = undefined /*out*/;
            resourceInputs["ipv6CidrBlock"] = undefined /*out*/;
            resourceInputs["ipv6IpamPoolId"] = undefined /*out*/;
            resourceInputs["ipv6NetmaskLength"] = undefined /*out*/;
            resourceInputs["ipv6Pool"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VPCCidrBlock.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VPCCidrBlock resource.
 */
export interface VPCCidrBlockArgs {
    amazonProvidedIpv6CidrBlock?: pulumi.Input<boolean>;
    cidrBlock?: pulumi.Input<string>;
    ipv4IpamPoolId?: pulumi.Input<string>;
    ipv4NetmaskLength?: pulumi.Input<number>;
    ipv6CidrBlock?: pulumi.Input<string>;
    ipv6IpamPoolId?: pulumi.Input<string>;
    ipv6NetmaskLength?: pulumi.Input<number>;
    ipv6Pool?: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
}
