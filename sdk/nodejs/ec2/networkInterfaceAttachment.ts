// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::NetworkInterfaceAttachment
 */
export class NetworkInterfaceAttachment extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInterfaceAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkInterfaceAttachment {
        return new NetworkInterfaceAttachment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:NetworkInterfaceAttachment';

    /**
     * Returns true if the given object is an instance of NetworkInterfaceAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkInterfaceAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInterfaceAttachment.__pulumiType;
    }

    /**
     * The ID of the network interface attachment.
     */
    public /*out*/ readonly attachmentId!: pulumi.Output<string>;
    /**
     * Whether to delete the network interface when the instance terminates. By default, this value is set to true.
     */
    public readonly deleteOnTermination!: pulumi.Output<boolean | undefined>;
    /**
     * The network interface's position in the attachment order. For example, the first attached network interface has a DeviceIndex of 0.
     */
    public readonly deviceIndex!: pulumi.Output<string>;
    public readonly enaSrdSpecification!: pulumi.Output<outputs.ec2.NetworkInterfaceAttachmentEnaSrdSpecification | undefined>;
    /**
     * The ID of the instance to which you will attach the ENI.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The ID of the ENI that you want to attach.
     */
    public readonly networkInterfaceId!: pulumi.Output<string>;

    /**
     * Create a NetworkInterfaceAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInterfaceAttachmentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.deviceIndex === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceIndex'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.networkInterfaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterfaceId'");
            }
            resourceInputs["deleteOnTermination"] = args ? args.deleteOnTermination : undefined;
            resourceInputs["deviceIndex"] = args ? args.deviceIndex : undefined;
            resourceInputs["enaSrdSpecification"] = args ? args.enaSrdSpecification : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["networkInterfaceId"] = args ? args.networkInterfaceId : undefined;
            resourceInputs["attachmentId"] = undefined /*out*/;
        } else {
            resourceInputs["attachmentId"] = undefined /*out*/;
            resourceInputs["deleteOnTermination"] = undefined /*out*/;
            resourceInputs["deviceIndex"] = undefined /*out*/;
            resourceInputs["enaSrdSpecification"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["networkInterfaceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["deviceIndex", "instanceId", "networkInterfaceId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(NetworkInterfaceAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a NetworkInterfaceAttachment resource.
 */
export interface NetworkInterfaceAttachmentArgs {
    /**
     * Whether to delete the network interface when the instance terminates. By default, this value is set to true.
     */
    deleteOnTermination?: pulumi.Input<boolean>;
    /**
     * The network interface's position in the attachment order. For example, the first attached network interface has a DeviceIndex of 0.
     */
    deviceIndex: pulumi.Input<string>;
    enaSrdSpecification?: pulumi.Input<inputs.ec2.NetworkInterfaceAttachmentEnaSrdSpecificationArgs>;
    /**
     * The ID of the instance to which you will attach the ENI.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The ID of the ENI that you want to attach.
     */
    networkInterfaceId: pulumi.Input<string>;
}
