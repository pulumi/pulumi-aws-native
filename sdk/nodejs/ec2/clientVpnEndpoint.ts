// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::ClientVpnEndpoint
 *
 * @deprecated ClientVpnEndpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class ClientVpnEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ClientVpnEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClientVpnEndpoint {
        pulumi.log.warn("ClientVpnEndpoint is deprecated: ClientVpnEndpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new ClientVpnEndpoint(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:ClientVpnEndpoint';

    /**
     * Returns true if the given object is an instance of ClientVpnEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClientVpnEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClientVpnEndpoint.__pulumiType;
    }

    public readonly authenticationOptions!: pulumi.Output<outputs.ec2.ClientVpnEndpointClientAuthenticationRequest[]>;
    public readonly clientCidrBlock!: pulumi.Output<string>;
    public readonly clientConnectOptions!: pulumi.Output<outputs.ec2.ClientVpnEndpointClientConnectOptions | undefined>;
    public readonly clientLoginBannerOptions!: pulumi.Output<outputs.ec2.ClientVpnEndpointClientLoginBannerOptions | undefined>;
    public readonly connectionLogOptions!: pulumi.Output<outputs.ec2.ClientVpnEndpointConnectionLogOptions>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly dnsServers!: pulumi.Output<string[] | undefined>;
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    public readonly selfServicePortal!: pulumi.Output<string | undefined>;
    public readonly serverCertificateArn!: pulumi.Output<string>;
    public readonly sessionTimeoutHours!: pulumi.Output<number | undefined>;
    public readonly splitTunnel!: pulumi.Output<boolean | undefined>;
    public readonly tagSpecifications!: pulumi.Output<outputs.ec2.ClientVpnEndpointTagSpecification[] | undefined>;
    public readonly transportProtocol!: pulumi.Output<string | undefined>;
    public readonly vpcId!: pulumi.Output<string | undefined>;
    public readonly vpnPort!: pulumi.Output<number | undefined>;

    /**
     * Create a ClientVpnEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated ClientVpnEndpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: ClientVpnEndpointArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("ClientVpnEndpoint is deprecated: ClientVpnEndpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.authenticationOptions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationOptions'");
            }
            if ((!args || args.clientCidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientCidrBlock'");
            }
            if ((!args || args.connectionLogOptions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionLogOptions'");
            }
            if ((!args || args.serverCertificateArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverCertificateArn'");
            }
            resourceInputs["authenticationOptions"] = args ? args.authenticationOptions : undefined;
            resourceInputs["clientCidrBlock"] = args ? args.clientCidrBlock : undefined;
            resourceInputs["clientConnectOptions"] = args ? args.clientConnectOptions : undefined;
            resourceInputs["clientLoginBannerOptions"] = args ? args.clientLoginBannerOptions : undefined;
            resourceInputs["connectionLogOptions"] = args ? args.connectionLogOptions : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsServers"] = args ? args.dnsServers : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["selfServicePortal"] = args ? args.selfServicePortal : undefined;
            resourceInputs["serverCertificateArn"] = args ? args.serverCertificateArn : undefined;
            resourceInputs["sessionTimeoutHours"] = args ? args.sessionTimeoutHours : undefined;
            resourceInputs["splitTunnel"] = args ? args.splitTunnel : undefined;
            resourceInputs["tagSpecifications"] = args ? args.tagSpecifications : undefined;
            resourceInputs["transportProtocol"] = args ? args.transportProtocol : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpnPort"] = args ? args.vpnPort : undefined;
        } else {
            resourceInputs["authenticationOptions"] = undefined /*out*/;
            resourceInputs["clientCidrBlock"] = undefined /*out*/;
            resourceInputs["clientConnectOptions"] = undefined /*out*/;
            resourceInputs["clientLoginBannerOptions"] = undefined /*out*/;
            resourceInputs["connectionLogOptions"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["dnsServers"] = undefined /*out*/;
            resourceInputs["securityGroupIds"] = undefined /*out*/;
            resourceInputs["selfServicePortal"] = undefined /*out*/;
            resourceInputs["serverCertificateArn"] = undefined /*out*/;
            resourceInputs["sessionTimeoutHours"] = undefined /*out*/;
            resourceInputs["splitTunnel"] = undefined /*out*/;
            resourceInputs["tagSpecifications"] = undefined /*out*/;
            resourceInputs["transportProtocol"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
            resourceInputs["vpnPort"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClientVpnEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ClientVpnEndpoint resource.
 */
export interface ClientVpnEndpointArgs {
    authenticationOptions: pulumi.Input<pulumi.Input<inputs.ec2.ClientVpnEndpointClientAuthenticationRequestArgs>[]>;
    clientCidrBlock: pulumi.Input<string>;
    clientConnectOptions?: pulumi.Input<inputs.ec2.ClientVpnEndpointClientConnectOptionsArgs>;
    clientLoginBannerOptions?: pulumi.Input<inputs.ec2.ClientVpnEndpointClientLoginBannerOptionsArgs>;
    connectionLogOptions: pulumi.Input<inputs.ec2.ClientVpnEndpointConnectionLogOptionsArgs>;
    description?: pulumi.Input<string>;
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    selfServicePortal?: pulumi.Input<string>;
    serverCertificateArn: pulumi.Input<string>;
    sessionTimeoutHours?: pulumi.Input<number>;
    splitTunnel?: pulumi.Input<boolean>;
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.ClientVpnEndpointTagSpecificationArgs>[]>;
    transportProtocol?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vpnPort?: pulumi.Input<number>;
}
