// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::CapacityManagerDataExport
 */
export function getCapacityManagerDataExport(args: GetCapacityManagerDataExportArgs, opts?: pulumi.InvokeOptions): Promise<GetCapacityManagerDataExportResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getCapacityManagerDataExport", {
        "capacityManagerDataExportId": args.capacityManagerDataExportId,
    }, opts);
}

export interface GetCapacityManagerDataExportArgs {
    /**
     * The unique identifier of the capacity manager data export.
     */
    capacityManagerDataExportId: string;
}

export interface GetCapacityManagerDataExportResult {
    /**
     * The unique identifier of the capacity manager data export.
     */
    readonly capacityManagerDataExportId?: string;
    /**
     * An array of key-value pairs to apply to the capacity manager data export.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::EC2::CapacityManagerDataExport
 */
export function getCapacityManagerDataExportOutput(args: GetCapacityManagerDataExportOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCapacityManagerDataExportResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ec2:getCapacityManagerDataExport", {
        "capacityManagerDataExportId": args.capacityManagerDataExportId,
    }, opts);
}

export interface GetCapacityManagerDataExportOutputArgs {
    /**
     * The unique identifier of the capacity manager data export.
     */
    capacityManagerDataExportId: pulumi.Input<string>;
}
