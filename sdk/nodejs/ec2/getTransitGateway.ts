// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::TransitGateway
 */
export function getTransitGateway(args: GetTransitGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetTransitGatewayResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getTransitGateway", {
        "id": args.id,
    }, opts);
}

export interface GetTransitGatewayArgs {
    /**
     * The ID of the transit gateway.
     */
    id: string;
}

export interface GetTransitGatewayResult {
    /**
     * The ID of the default association route table.
     */
    readonly associationDefaultRouteTableId?: string;
    /**
     * Enable or disable automatic acceptance of attachment requests. Disabled by default.
     */
    readonly autoAcceptSharedAttachments?: string;
    /**
     * Enable or disable automatic association with the default association route table. Enabled by default.
     */
    readonly defaultRouteTableAssociation?: string;
    /**
     * Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default.
     */
    readonly defaultRouteTablePropagation?: string;
    /**
     * The description of the transit gateway.
     */
    readonly description?: string;
    /**
     * Enable or disable DNS support. Enabled by default.
     */
    readonly dnsSupport?: string;
    /**
     * The ID of the transit gateway.
     */
    readonly id?: string;
    /**
     * The ID of the default propagation route table.
     */
    readonly propagationDefaultRouteTableId?: string;
    /**
     * Enables you to reference a security group across VPCs attached to a transit gateway (TGW). Use this option to simplify security group management and control of instance-to-instance traffic across VPCs that are connected by transit gateway. You can also use this option to migrate from VPC peering (which was the only option that supported security group referencing) to transit gateways (which now also support security group referencing). This option is disabled by default and there are no additional costs to use this feature.
     *
     * For important information about this feature, see [Create a transit gateway](https://docs.aws.amazon.com/vpc/latest/tgw/tgw-transit-gateways.html#create-tgw) in the *AWS Transit Gateway Guide* .
     */
    readonly securityGroupReferencingSupport?: string;
    /**
     * The tags for the transit gateway.
     */
    readonly tags?: outputs.Tag[];
    readonly transitGatewayArn?: string;
    /**
     * The transit gateway CIDR blocks.
     */
    readonly transitGatewayCidrBlocks?: string[];
    /**
     * Enable or disable Equal Cost Multipath Protocol support. Enabled by default.
     */
    readonly vpnEcmpSupport?: string;
}
/**
 * Resource Type definition for AWS::EC2::TransitGateway
 */
export function getTransitGatewayOutput(args: GetTransitGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransitGatewayResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ec2:getTransitGateway", {
        "id": args.id,
    }, opts);
}

export interface GetTransitGatewayOutputArgs {
    /**
     * The ID of the transit gateway.
     */
    id: pulumi.Input<string>;
}
