// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::VPCCidrBlock
 */
export class VpcCidrBlock extends pulumi.CustomResource {
    /**
     * Get an existing VpcCidrBlock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VpcCidrBlock {
        return new VpcCidrBlock(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:VpcCidrBlock';

    /**
     * Returns true if the given object is an instance of VpcCidrBlock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcCidrBlock {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcCidrBlock.__pulumiType;
    }

    /**
     * Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.
     */
    public readonly amazonProvidedIpv6CidrBlock!: pulumi.Output<boolean | undefined>;
    /**
     * The Id of the VPC associated CIDR Block.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * An IPv4 CIDR block to associate with the VPC.
     */
    public readonly cidrBlock!: pulumi.Output<string | undefined>;
    /**
     * The IP Source of an IPv6 VPC CIDR Block.
     */
    public /*out*/ readonly ipSource!: pulumi.Output<string>;
    /**
     * The ID of the IPv4 IPAM pool to Associate a CIDR from to a VPC.
     */
    public readonly ipv4IpamPoolId!: pulumi.Output<string | undefined>;
    /**
     * The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool.
     */
    public readonly ipv4NetmaskLength!: pulumi.Output<number | undefined>;
    /**
     * The value denoting whether an IPv6 VPC CIDR Block is public or private.
     */
    public /*out*/ readonly ipv6AddressAttribute!: pulumi.Output<string>;
    /**
     * An IPv6 CIDR block from the IPv6 address pool.
     */
    public readonly ipv6CidrBlock!: pulumi.Output<string | undefined>;
    /**
     * The name of the location from which we advertise the IPV6 CIDR block.
     */
    public readonly ipv6CidrBlockNetworkBorderGroup!: pulumi.Output<string | undefined>;
    /**
     * The ID of the IPv6 IPAM pool to Associate a CIDR from to a VPC.
     */
    public readonly ipv6IpamPoolId!: pulumi.Output<string | undefined>;
    /**
     * The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool.
     */
    public readonly ipv6NetmaskLength!: pulumi.Output<number | undefined>;
    /**
     * The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
     */
    public readonly ipv6Pool!: pulumi.Output<string | undefined>;
    /**
     * The ID of the VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a VpcCidrBlock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcCidrBlockArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["amazonProvidedIpv6CidrBlock"] = args ? args.amazonProvidedIpv6CidrBlock : undefined;
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["ipv4IpamPoolId"] = args ? args.ipv4IpamPoolId : undefined;
            resourceInputs["ipv4NetmaskLength"] = args ? args.ipv4NetmaskLength : undefined;
            resourceInputs["ipv6CidrBlock"] = args ? args.ipv6CidrBlock : undefined;
            resourceInputs["ipv6CidrBlockNetworkBorderGroup"] = args ? args.ipv6CidrBlockNetworkBorderGroup : undefined;
            resourceInputs["ipv6IpamPoolId"] = args ? args.ipv6IpamPoolId : undefined;
            resourceInputs["ipv6NetmaskLength"] = args ? args.ipv6NetmaskLength : undefined;
            resourceInputs["ipv6Pool"] = args ? args.ipv6Pool : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["ipSource"] = undefined /*out*/;
            resourceInputs["ipv6AddressAttribute"] = undefined /*out*/;
        } else {
            resourceInputs["amazonProvidedIpv6CidrBlock"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["cidrBlock"] = undefined /*out*/;
            resourceInputs["ipSource"] = undefined /*out*/;
            resourceInputs["ipv4IpamPoolId"] = undefined /*out*/;
            resourceInputs["ipv4NetmaskLength"] = undefined /*out*/;
            resourceInputs["ipv6AddressAttribute"] = undefined /*out*/;
            resourceInputs["ipv6CidrBlock"] = undefined /*out*/;
            resourceInputs["ipv6CidrBlockNetworkBorderGroup"] = undefined /*out*/;
            resourceInputs["ipv6IpamPoolId"] = undefined /*out*/;
            resourceInputs["ipv6NetmaskLength"] = undefined /*out*/;
            resourceInputs["ipv6Pool"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["amazonProvidedIpv6CidrBlock", "cidrBlock", "ipv4IpamPoolId", "ipv4NetmaskLength", "ipv6CidrBlock", "ipv6CidrBlockNetworkBorderGroup", "ipv6IpamPoolId", "ipv6NetmaskLength", "ipv6Pool", "vpcId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(VpcCidrBlock.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VpcCidrBlock resource.
 */
export interface VpcCidrBlockArgs {
    /**
     * Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.
     */
    amazonProvidedIpv6CidrBlock?: pulumi.Input<boolean>;
    /**
     * An IPv4 CIDR block to associate with the VPC.
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * The ID of the IPv4 IPAM pool to Associate a CIDR from to a VPC.
     */
    ipv4IpamPoolId?: pulumi.Input<string>;
    /**
     * The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool.
     */
    ipv4NetmaskLength?: pulumi.Input<number>;
    /**
     * An IPv6 CIDR block from the IPv6 address pool.
     */
    ipv6CidrBlock?: pulumi.Input<string>;
    /**
     * The name of the location from which we advertise the IPV6 CIDR block.
     */
    ipv6CidrBlockNetworkBorderGroup?: pulumi.Input<string>;
    /**
     * The ID of the IPv6 IPAM pool to Associate a CIDR from to a VPC.
     */
    ipv6IpamPoolId?: pulumi.Input<string>;
    /**
     * The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool.
     */
    ipv6NetmaskLength?: pulumi.Input<number>;
    /**
     * The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
     */
    ipv6Pool?: pulumi.Input<string>;
    /**
     * The ID of the VPC.
     */
    vpcId: pulumi.Input<string>;
}
