// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::VPCEndpointService
 */
export class VpcEndpointService extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpointService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VpcEndpointService {
        return new VpcEndpointService(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:VpcEndpointService';

    /**
     * Returns true if the given object is an instance of VpcEndpointService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcEndpointService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcEndpointService.__pulumiType;
    }

    public readonly acceptanceRequired!: pulumi.Output<boolean | undefined>;
    public readonly contributorInsightsEnabled!: pulumi.Output<boolean | undefined>;
    public readonly gatewayLoadBalancerArns!: pulumi.Output<string[] | undefined>;
    public readonly networkLoadBalancerArns!: pulumi.Output<string[] | undefined>;
    public readonly payerResponsibility!: pulumi.Output<string | undefined>;
    public /*out*/ readonly serviceId!: pulumi.Output<string>;

    /**
     * Create a VpcEndpointService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpcEndpointServiceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["acceptanceRequired"] = args ? args.acceptanceRequired : undefined;
            resourceInputs["contributorInsightsEnabled"] = args ? args.contributorInsightsEnabled : undefined;
            resourceInputs["gatewayLoadBalancerArns"] = args ? args.gatewayLoadBalancerArns : undefined;
            resourceInputs["networkLoadBalancerArns"] = args ? args.networkLoadBalancerArns : undefined;
            resourceInputs["payerResponsibility"] = args ? args.payerResponsibility : undefined;
            resourceInputs["serviceId"] = undefined /*out*/;
        } else {
            resourceInputs["acceptanceRequired"] = undefined /*out*/;
            resourceInputs["contributorInsightsEnabled"] = undefined /*out*/;
            resourceInputs["gatewayLoadBalancerArns"] = undefined /*out*/;
            resourceInputs["networkLoadBalancerArns"] = undefined /*out*/;
            resourceInputs["payerResponsibility"] = undefined /*out*/;
            resourceInputs["serviceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcEndpointService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VpcEndpointService resource.
 */
export interface VpcEndpointServiceArgs {
    acceptanceRequired?: pulumi.Input<boolean>;
    contributorInsightsEnabled?: pulumi.Input<boolean>;
    gatewayLoadBalancerArns?: pulumi.Input<pulumi.Input<string>[]>;
    networkLoadBalancerArns?: pulumi.Input<pulumi.Input<string>[]>;
    payerResponsibility?: pulumi.Input<string>;
}
