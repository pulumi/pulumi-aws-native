// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::CapacityReservationFleet
 */
export class CapacityReservationFleet extends pulumi.CustomResource {
    /**
     * Get an existing CapacityReservationFleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CapacityReservationFleet {
        return new CapacityReservationFleet(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:CapacityReservationFleet';

    /**
     * Returns true if the given object is an instance of CapacityReservationFleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CapacityReservationFleet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CapacityReservationFleet.__pulumiType;
    }

    public readonly allocationStrategy!: pulumi.Output<string | undefined>;
    public /*out*/ readonly capacityReservationFleetId!: pulumi.Output<string>;
    public readonly endDate!: pulumi.Output<string | undefined>;
    public readonly instanceMatchCriteria!: pulumi.Output<enums.ec2.CapacityReservationFleetInstanceMatchCriteria | undefined>;
    public readonly instanceTypeSpecifications!: pulumi.Output<outputs.ec2.CapacityReservationFleetInstanceTypeSpecification[] | undefined>;
    public readonly noRemoveEndDate!: pulumi.Output<boolean | undefined>;
    public readonly removeEndDate!: pulumi.Output<boolean | undefined>;
    public readonly tagSpecifications!: pulumi.Output<outputs.ec2.CapacityReservationFleetTagSpecification[] | undefined>;
    public readonly tenancy!: pulumi.Output<enums.ec2.CapacityReservationFleetTenancy | undefined>;
    public readonly totalTargetCapacity!: pulumi.Output<number | undefined>;

    /**
     * Create a CapacityReservationFleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CapacityReservationFleetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["allocationStrategy"] = args ? args.allocationStrategy : undefined;
            resourceInputs["endDate"] = args ? args.endDate : undefined;
            resourceInputs["instanceMatchCriteria"] = args ? args.instanceMatchCriteria : undefined;
            resourceInputs["instanceTypeSpecifications"] = args ? args.instanceTypeSpecifications : undefined;
            resourceInputs["noRemoveEndDate"] = args ? args.noRemoveEndDate : undefined;
            resourceInputs["removeEndDate"] = args ? args.removeEndDate : undefined;
            resourceInputs["tagSpecifications"] = args ? args.tagSpecifications : undefined;
            resourceInputs["tenancy"] = args ? args.tenancy : undefined;
            resourceInputs["totalTargetCapacity"] = args ? args.totalTargetCapacity : undefined;
            resourceInputs["capacityReservationFleetId"] = undefined /*out*/;
        } else {
            resourceInputs["allocationStrategy"] = undefined /*out*/;
            resourceInputs["capacityReservationFleetId"] = undefined /*out*/;
            resourceInputs["endDate"] = undefined /*out*/;
            resourceInputs["instanceMatchCriteria"] = undefined /*out*/;
            resourceInputs["instanceTypeSpecifications"] = undefined /*out*/;
            resourceInputs["noRemoveEndDate"] = undefined /*out*/;
            resourceInputs["removeEndDate"] = undefined /*out*/;
            resourceInputs["tagSpecifications"] = undefined /*out*/;
            resourceInputs["tenancy"] = undefined /*out*/;
            resourceInputs["totalTargetCapacity"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CapacityReservationFleet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CapacityReservationFleet resource.
 */
export interface CapacityReservationFleetArgs {
    allocationStrategy?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    instanceMatchCriteria?: pulumi.Input<enums.ec2.CapacityReservationFleetInstanceMatchCriteria>;
    instanceTypeSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.CapacityReservationFleetInstanceTypeSpecificationArgs>[]>;
    noRemoveEndDate?: pulumi.Input<boolean>;
    removeEndDate?: pulumi.Input<boolean>;
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.CapacityReservationFleetTagSpecificationArgs>[]>;
    tenancy?: pulumi.Input<enums.ec2.CapacityReservationFleetTenancy>;
    totalTargetCapacity?: pulumi.Input<number>;
}
