// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The AWS::EC2::NetworkInterface resource creates network interface
 */
export function getNetworkInterface(args: GetNetworkInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkInterfaceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ec2:getNetworkInterface", {
        "id": args.id,
    }, opts);
}

export interface GetNetworkInterfaceArgs {
    /**
     * Network interface id.
     */
    id: string;
}

export interface GetNetworkInterfaceResult {
    /**
     * A description for the network interface.
     */
    readonly description?: string;
    /**
     * A list of security group IDs associated with this network interface.
     */
    readonly groupSet?: string[];
    /**
     * Network interface id.
     */
    readonly id?: string;
    /**
     * The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the Ipv6Addresses property and don't specify this property.
     */
    readonly ipv6AddressCount?: number;
    /**
     * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface. If you're specifying a number of IPv6 addresses, use the Ipv6AddressCount property and don't specify this property.
     */
    readonly ipv6Addresses?: outputs.ec2.NetworkInterfaceInstanceIpv6Address[];
    /**
     * Returns the primary private IP address of the network interface.
     */
    readonly primaryPrivateIpAddress?: string;
    /**
     * Assigns a list of private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the Primary property to true in the PrivateIpAddressSpecification property. If you want EC2 to automatically assign private IP addresses, use the SecondaryPrivateIpAddressCount property and do not specify this property.
     */
    readonly privateIpAddresses?: outputs.ec2.NetworkInterfacePrivateIpAddressSpecification[];
    /**
     * The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using privateIpAddresses
     */
    readonly secondaryPrivateIpAddressCount?: number;
    /**
     * Returns the secondary private IP addresses of the network interface.
     */
    readonly secondaryPrivateIpAddresses?: string[];
    /**
     * Indicates whether traffic to or from the instance is validated.
     */
    readonly sourceDestCheck?: boolean;
    /**
     * An arbitrary set of tags (key-value pairs) for this network interface.
     */
    readonly tags?: outputs.ec2.NetworkInterfaceTag[];
}

export function getNetworkInterfaceOutput(args: GetNetworkInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkInterfaceResult> {
    return pulumi.output(args).apply(a => getNetworkInterface(a, opts))
}

export interface GetNetworkInterfaceOutputArgs {
    /**
     * Network interface id.
     */
    id: pulumi.Input<string>;
}
