// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::VPCBlockPublicAccessOptions
 */
export function getVpcBlockPublicAccessOptions(args: GetVpcBlockPublicAccessOptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcBlockPublicAccessOptionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getVpcBlockPublicAccessOptions", {
        "accountId": args.accountId,
    }, opts);
}

export interface GetVpcBlockPublicAccessOptionsArgs {
    /**
     * The identifier for the specified AWS account.
     */
    accountId: string;
}

export interface GetVpcBlockPublicAccessOptionsResult {
    /**
     * The identifier for the specified AWS account.
     */
    readonly accountId?: string;
    /**
     * The desired Block Public Access mode for Internet Gateways in your account. We do not allow to create in a off mode as this is the default value
     */
    readonly internetGatewayBlockMode?: enums.ec2.VpcBlockPublicAccessOptionsInternetGatewayBlockMode;
}
/**
 * Resource Type definition for AWS::EC2::VPCBlockPublicAccessOptions
 */
export function getVpcBlockPublicAccessOptionsOutput(args: GetVpcBlockPublicAccessOptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcBlockPublicAccessOptionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ec2:getVpcBlockPublicAccessOptions", {
        "accountId": args.accountId,
    }, opts);
}

export interface GetVpcBlockPublicAccessOptionsOutputArgs {
    /**
     * The identifier for the specified AWS account.
     */
    accountId: pulumi.Input<string>;
}
