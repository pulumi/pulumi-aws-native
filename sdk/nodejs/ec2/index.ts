// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./carrierGateway";
export * from "./dhcpoptions";
export * from "./ec2fleet";
export * from "./egressOnlyInternetGateway";
export * from "./enclaveCertificateIamRoleAssociation";
export * from "./flowLog";
export * from "./gatewayRouteTableAssociation";
export * from "./internetGateway";
export * from "./localGatewayRoute";
export * from "./localGatewayRouteTableVPCAssociation";
export * from "./networkInsightsAnalysis";
export * from "./networkInsightsPath";
export * from "./prefixList";
export * from "./spotFleet";
export * from "./transitGateway";
export * from "./transitGatewayConnect";
export * from "./transitGatewayMulticastDomain";
export * from "./transitGatewayMulticastDomainAssociation";
export * from "./transitGatewayMulticastGroupMember";
export * from "./transitGatewayMulticastGroupSource";
export * from "./transitGatewayPeeringAttachment";

// Export enums:
export * from "../types/enums/ec2";

// Import resources to register:
import { CarrierGateway } from "./carrierGateway";
import { DHCPOptions } from "./dhcpoptions";
import { EC2Fleet } from "./ec2fleet";
import { EgressOnlyInternetGateway } from "./egressOnlyInternetGateway";
import { EnclaveCertificateIamRoleAssociation } from "./enclaveCertificateIamRoleAssociation";
import { FlowLog } from "./flowLog";
import { GatewayRouteTableAssociation } from "./gatewayRouteTableAssociation";
import { InternetGateway } from "./internetGateway";
import { LocalGatewayRoute } from "./localGatewayRoute";
import { LocalGatewayRouteTableVPCAssociation } from "./localGatewayRouteTableVPCAssociation";
import { NetworkInsightsAnalysis } from "./networkInsightsAnalysis";
import { NetworkInsightsPath } from "./networkInsightsPath";
import { PrefixList } from "./prefixList";
import { SpotFleet } from "./spotFleet";
import { TransitGateway } from "./transitGateway";
import { TransitGatewayConnect } from "./transitGatewayConnect";
import { TransitGatewayMulticastDomain } from "./transitGatewayMulticastDomain";
import { TransitGatewayMulticastDomainAssociation } from "./transitGatewayMulticastDomainAssociation";
import { TransitGatewayMulticastGroupMember } from "./transitGatewayMulticastGroupMember";
import { TransitGatewayMulticastGroupSource } from "./transitGatewayMulticastGroupSource";
import { TransitGatewayPeeringAttachment } from "./transitGatewayPeeringAttachment";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:ec2:CarrierGateway":
                return new CarrierGateway(name, <any>undefined, { urn })
            case "aws-native:ec2:DHCPOptions":
                return new DHCPOptions(name, <any>undefined, { urn })
            case "aws-native:ec2:EC2Fleet":
                return new EC2Fleet(name, <any>undefined, { urn })
            case "aws-native:ec2:EgressOnlyInternetGateway":
                return new EgressOnlyInternetGateway(name, <any>undefined, { urn })
            case "aws-native:ec2:EnclaveCertificateIamRoleAssociation":
                return new EnclaveCertificateIamRoleAssociation(name, <any>undefined, { urn })
            case "aws-native:ec2:FlowLog":
                return new FlowLog(name, <any>undefined, { urn })
            case "aws-native:ec2:GatewayRouteTableAssociation":
                return new GatewayRouteTableAssociation(name, <any>undefined, { urn })
            case "aws-native:ec2:InternetGateway":
                return new InternetGateway(name, <any>undefined, { urn })
            case "aws-native:ec2:LocalGatewayRoute":
                return new LocalGatewayRoute(name, <any>undefined, { urn })
            case "aws-native:ec2:LocalGatewayRouteTableVPCAssociation":
                return new LocalGatewayRouteTableVPCAssociation(name, <any>undefined, { urn })
            case "aws-native:ec2:NetworkInsightsAnalysis":
                return new NetworkInsightsAnalysis(name, <any>undefined, { urn })
            case "aws-native:ec2:NetworkInsightsPath":
                return new NetworkInsightsPath(name, <any>undefined, { urn })
            case "aws-native:ec2:PrefixList":
                return new PrefixList(name, <any>undefined, { urn })
            case "aws-native:ec2:SpotFleet":
                return new SpotFleet(name, <any>undefined, { urn })
            case "aws-native:ec2:TransitGateway":
                return new TransitGateway(name, <any>undefined, { urn })
            case "aws-native:ec2:TransitGatewayConnect":
                return new TransitGatewayConnect(name, <any>undefined, { urn })
            case "aws-native:ec2:TransitGatewayMulticastDomain":
                return new TransitGatewayMulticastDomain(name, <any>undefined, { urn })
            case "aws-native:ec2:TransitGatewayMulticastDomainAssociation":
                return new TransitGatewayMulticastDomainAssociation(name, <any>undefined, { urn })
            case "aws-native:ec2:TransitGatewayMulticastGroupMember":
                return new TransitGatewayMulticastGroupMember(name, <any>undefined, { urn })
            case "aws-native:ec2:TransitGatewayMulticastGroupSource":
                return new TransitGatewayMulticastGroupSource(name, <any>undefined, { urn })
            case "aws-native:ec2:TransitGatewayPeeringAttachment":
                return new TransitGatewayPeeringAttachment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "ec2", _module)
