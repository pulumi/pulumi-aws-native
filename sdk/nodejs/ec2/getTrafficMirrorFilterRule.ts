// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for for AWS::EC2::TrafficMirrorFilterRule
 */
export function getTrafficMirrorFilterRule(args: GetTrafficMirrorFilterRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetTrafficMirrorFilterRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getTrafficMirrorFilterRule", {
        "trafficMirrorFilterRuleId": args.trafficMirrorFilterRuleId,
    }, opts);
}

export interface GetTrafficMirrorFilterRuleArgs {
    /**
     * The ID of the Traffic Mirror Filter rule.
     */
    trafficMirrorFilterRuleId: string;
}

export interface GetTrafficMirrorFilterRuleResult {
    /**
     * The description of the Traffic Mirror Filter rule.
     */
    readonly description?: string;
    /**
     * The destination CIDR block to assign to the Traffic Mirror rule.
     */
    readonly destinationCidrBlock?: string;
    /**
     * The destination port range.
     */
    readonly destinationPortRange?: outputs.ec2.TrafficMirrorFilterRuleTrafficMirrorPortRange;
    /**
     * The number of protocol, for example 17 (UDP), to assign to the Traffic Mirror rule.
     */
    readonly protocol?: number;
    /**
     * The action to take on the filtered traffic (accept/reject).
     */
    readonly ruleAction?: string;
    /**
     * The number of the Traffic Mirror rule.
     */
    readonly ruleNumber?: number;
    /**
     * The source CIDR block to assign to the Traffic Mirror Filter rule.
     */
    readonly sourceCidrBlock?: string;
    /**
     * The source port range.
     */
    readonly sourcePortRange?: outputs.ec2.TrafficMirrorFilterRuleTrafficMirrorPortRange;
    /**
     * Any tags assigned to the Traffic Mirror Filter rule.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The direction of traffic (ingress/egress).
     */
    readonly trafficDirection?: string;
    /**
     * The ID of the Traffic Mirror Filter rule.
     */
    readonly trafficMirrorFilterRuleId?: string;
}
/**
 * Resource Type definition for for AWS::EC2::TrafficMirrorFilterRule
 */
export function getTrafficMirrorFilterRuleOutput(args: GetTrafficMirrorFilterRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTrafficMirrorFilterRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ec2:getTrafficMirrorFilterRule", {
        "trafficMirrorFilterRuleId": args.trafficMirrorFilterRuleId,
    }, opts);
}

export interface GetTrafficMirrorFilterRuleOutputArgs {
    /**
     * The ID of the Traffic Mirror Filter rule.
     */
    trafficMirrorFilterRuleId: pulumi.Input<string>;
}
