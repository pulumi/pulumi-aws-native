// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::EC2::VerifiedAccessEndpoint resource creates an AWS EC2 Verified Access Endpoint.
 */
export function getVerifiedAccessEndpoint(args: GetVerifiedAccessEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetVerifiedAccessEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getVerifiedAccessEndpoint", {
        "verifiedAccessEndpointId": args.verifiedAccessEndpointId,
    }, opts);
}

export interface GetVerifiedAccessEndpointArgs {
    /**
     * The ID of the AWS Verified Access endpoint.
     */
    verifiedAccessEndpointId: string;
}

export interface GetVerifiedAccessEndpointResult {
    /**
     * The creation time.
     */
    readonly creationTime?: string;
    /**
     * A description for the AWS Verified Access endpoint.
     */
    readonly description?: string;
    /**
     * Returned if endpoint has a device trust provider attached.
     */
    readonly deviceValidationDomain?: string;
    /**
     * A DNS name that is generated for the endpoint.
     */
    readonly endpointDomain?: string;
    /**
     * The last updated time.
     */
    readonly lastUpdatedTime?: string;
    /**
     * The load balancer details if creating the AWS Verified Access endpoint as load-balancer type.
     */
    readonly loadBalancerOptions?: outputs.ec2.VerifiedAccessEndpointLoadBalancerOptions;
    /**
     * The options for network-interface type endpoint.
     */
    readonly networkInterfaceOptions?: outputs.ec2.VerifiedAccessEndpointNetworkInterfaceOptions;
    /**
     * The AWS Verified Access policy document.
     */
    readonly policyDocument?: string;
    /**
     * The status of the Verified Access policy.
     */
    readonly policyEnabled?: boolean;
    /**
     * The configuration options for customer provided KMS encryption.
     */
    readonly sseSpecification?: outputs.ec2.VerifiedAccessEndpointSseSpecification;
    /**
     * The endpoint status.
     */
    readonly status?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The ID of the AWS Verified Access endpoint.
     */
    readonly verifiedAccessEndpointId?: string;
    /**
     * The ID of the AWS Verified Access group.
     */
    readonly verifiedAccessGroupId?: string;
    /**
     * The ID of the AWS Verified Access instance.
     */
    readonly verifiedAccessInstanceId?: string;
}
/**
 * The AWS::EC2::VerifiedAccessEndpoint resource creates an AWS EC2 Verified Access Endpoint.
 */
export function getVerifiedAccessEndpointOutput(args: GetVerifiedAccessEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVerifiedAccessEndpointResult> {
    return pulumi.output(args).apply((a: any) => getVerifiedAccessEndpoint(a, opts))
}

export interface GetVerifiedAccessEndpointOutputArgs {
    /**
     * The ID of the AWS Verified Access endpoint.
     */
    verifiedAccessEndpointId: pulumi.Input<string>;
}
