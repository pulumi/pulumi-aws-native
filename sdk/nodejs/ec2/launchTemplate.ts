// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EC2::LaunchTemplate
 */
export class LaunchTemplate extends pulumi.CustomResource {
    /**
     * Get an existing LaunchTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LaunchTemplate {
        return new LaunchTemplate(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ec2:LaunchTemplate';

    /**
     * Returns true if the given object is an instance of LaunchTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LaunchTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LaunchTemplate.__pulumiType;
    }

    /**
     * The default version of the launch template
     */
    public /*out*/ readonly defaultVersionNumber!: pulumi.Output<string>;
    /**
     * The latest version of the launch template
     */
    public /*out*/ readonly latestVersionNumber!: pulumi.Output<string>;
    public readonly launchTemplateData!: pulumi.Output<outputs.ec2.LaunchTemplateData>;
    /**
     * LaunchTemplate ID generated by service
     */
    public /*out*/ readonly launchTemplateId!: pulumi.Output<string>;
    /**
     * A name for the launch template.
     */
    public readonly launchTemplateName!: pulumi.Output<string | undefined>;
    /**
     * The tags to apply to the launch template on creation.
     */
    public readonly tagSpecifications!: pulumi.Output<outputs.ec2.LaunchTemplateTagSpecification[] | undefined>;
    /**
     * A description for the first version of the launch template.
     */
    public readonly versionDescription!: pulumi.Output<string | undefined>;

    /**
     * Create a LaunchTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LaunchTemplateArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.launchTemplateData === undefined) && !opts.urn) {
                throw new Error("Missing required property 'launchTemplateData'");
            }
            resourceInputs["launchTemplateData"] = args ? args.launchTemplateData : undefined;
            resourceInputs["launchTemplateName"] = args ? args.launchTemplateName : undefined;
            resourceInputs["tagSpecifications"] = args ? args.tagSpecifications : undefined;
            resourceInputs["versionDescription"] = args ? args.versionDescription : undefined;
            resourceInputs["defaultVersionNumber"] = undefined /*out*/;
            resourceInputs["latestVersionNumber"] = undefined /*out*/;
            resourceInputs["launchTemplateId"] = undefined /*out*/;
        } else {
            resourceInputs["defaultVersionNumber"] = undefined /*out*/;
            resourceInputs["latestVersionNumber"] = undefined /*out*/;
            resourceInputs["launchTemplateData"] = undefined /*out*/;
            resourceInputs["launchTemplateId"] = undefined /*out*/;
            resourceInputs["launchTemplateName"] = undefined /*out*/;
            resourceInputs["tagSpecifications"] = undefined /*out*/;
            resourceInputs["versionDescription"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LaunchTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LaunchTemplate resource.
 */
export interface LaunchTemplateArgs {
    launchTemplateData: pulumi.Input<inputs.ec2.LaunchTemplateDataArgs>;
    /**
     * A name for the launch template.
     */
    launchTemplateName?: pulumi.Input<string>;
    /**
     * The tags to apply to the launch template on creation.
     */
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateTagSpecificationArgs>[]>;
    /**
     * A description for the first version of the launch template.
     */
    versionDescription?: pulumi.Input<string>;
}
