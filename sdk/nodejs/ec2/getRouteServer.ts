// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * VPC Route Server
 */
export function getRouteServer(args: GetRouteServerArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteServerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getRouteServer", {
        "id": args.id,
    }, opts);
}

export interface GetRouteServerArgs {
    /**
     * The ID of the Route Server.
     */
    id: string;
}

export interface GetRouteServerResult {
    /**
     * The Amazon Resource Name (ARN) of the Route Server.
     */
    readonly arn?: string;
    /**
     * The ID of the Route Server.
     */
    readonly id?: string;
    /**
     * Whether to enable persistent routes
     */
    readonly persistRoutes?: enums.ec2.RouteServerPersistRoutes;
    /**
     * Whether to enable SNS notifications
     */
    readonly snsNotificationsEnabled?: boolean;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * VPC Route Server
 */
export function getRouteServerOutput(args: GetRouteServerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRouteServerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ec2:getRouteServer", {
        "id": args.id,
    }, opts);
}

export interface GetRouteServerOutputArgs {
    /**
     * The ID of the Route Server.
     */
    id: pulumi.Input<string>;
}
