// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::EC2::TrafficMirrorSession
 */
export function getTrafficMirrorSession(args: GetTrafficMirrorSessionArgs, opts?: pulumi.InvokeOptions): Promise<GetTrafficMirrorSessionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getTrafficMirrorSession", {
        "id": args.id,
    }, opts);
}

export interface GetTrafficMirrorSessionArgs {
    /**
     * The ID of a Traffic Mirror session.
     */
    id: string;
}

export interface GetTrafficMirrorSessionResult {
    /**
     * The description of the Traffic Mirror session.
     */
    readonly description?: string;
    /**
     * The ID of a Traffic Mirror session.
     */
    readonly id?: string;
    /**
     * The ID of the source network interface.
     */
    readonly networkInterfaceId?: string;
    /**
     * The ID of the account that owns the Traffic Mirror session.
     */
    readonly ownerId?: string;
    /**
     * The number of bytes in each packet to mirror.
     */
    readonly packetLength?: number;
    /**
     * The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.
     */
    readonly sessionNumber?: number;
    /**
     * The tags assigned to the Traffic Mirror session.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The ID of a Traffic Mirror filter.
     */
    readonly trafficMirrorFilterId?: string;
    /**
     * The ID of a Traffic Mirror target.
     */
    readonly trafficMirrorTargetId?: string;
    /**
     * The VXLAN ID for the Traffic Mirror session.
     */
    readonly virtualNetworkId?: number;
}
/**
 * Resource schema for AWS::EC2::TrafficMirrorSession
 */
export function getTrafficMirrorSessionOutput(args: GetTrafficMirrorSessionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTrafficMirrorSessionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ec2:getTrafficMirrorSession", {
        "id": args.id,
    }, opts);
}

export interface GetTrafficMirrorSessionOutputArgs {
    /**
     * The ID of a Traffic Mirror session.
     */
    id: pulumi.Input<string>;
}
