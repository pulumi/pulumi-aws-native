// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Create a task set in the specified cluster and service. This is used when a service uses the EXTERNAL deployment controller type. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.htmlin the Amazon Elastic Container Service Developer Guide.
 */
export function getTaskSet(args: GetTaskSetArgs, opts?: pulumi.InvokeOptions): Promise<GetTaskSetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ecs:getTaskSet", {
        "cluster": args.cluster,
        "id": args.id,
        "service": args.service,
    }, opts);
}

export interface GetTaskSetArgs {
    /**
     * The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.
     */
    cluster: string;
    /**
     * The ID of the task set.
     */
    id: string;
    /**
     * The short name or full Amazon Resource Name (ARN) of the service to create the task set in.
     */
    service: string;
}

export interface GetTaskSetResult {
    /**
     * The ID of the task set.
     */
    readonly id?: string;
    /**
     * A floating-point percentage of the desired number of tasks to place and keep running in the task set.
     */
    readonly scale?: outputs.ecs.TaskSetScale;
    /**
     * The metadata that you apply to the task set to help you categorize and organize them. Each tag consists of a key and an optional value. You define both.
     *
     * The following basic restrictions apply to tags:
     *
     * - Maximum number of tags per resource - 50
     * - For each resource, each tag key must be unique, and each tag key can have only one value.
     * - Maximum key length - 128 Unicode characters in UTF-8
     * - Maximum value length - 256 Unicode characters in UTF-8
     * - If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
     * - Tag keys and values are case-sensitive.
     * - Do not use `aws:` , `AWS:` , or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for AWS use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Create a task set in the specified cluster and service. This is used when a service uses the EXTERNAL deployment controller type. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.htmlin the Amazon Elastic Container Service Developer Guide.
 */
export function getTaskSetOutput(args: GetTaskSetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTaskSetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ecs:getTaskSet", {
        "cluster": args.cluster,
        "id": args.id,
        "service": args.service,
    }, opts);
}

export interface GetTaskSetOutputArgs {
    /**
     * The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.
     */
    cluster: pulumi.Input<string>;
    /**
     * The ID of the task set.
     */
    id: pulumi.Input<string>;
    /**
     * The short name or full Amazon Resource Name (ARN) of the service to create the task set in.
     */
    service: pulumi.Input<string>;
}
