// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AlarmArgs } from "./alarm";
export type Alarm = import("./alarm").Alarm;
export const Alarm: typeof import("./alarm").Alarm = null as any;
utilities.lazyLoad(exports, ["Alarm"], () => require("./alarm"));

export { CompositeAlarmArgs } from "./compositeAlarm";
export type CompositeAlarm = import("./compositeAlarm").CompositeAlarm;
export const CompositeAlarm: typeof import("./compositeAlarm").CompositeAlarm = null as any;
utilities.lazyLoad(exports, ["CompositeAlarm"], () => require("./compositeAlarm"));

export { GetAlarmArgs, GetAlarmResult, GetAlarmOutputArgs } from "./getAlarm";
export const getAlarm: typeof import("./getAlarm").getAlarm = null as any;
export const getAlarmOutput: typeof import("./getAlarm").getAlarmOutput = null as any;
utilities.lazyLoad(exports, ["getAlarm","getAlarmOutput"], () => require("./getAlarm"));

export { GetCompositeAlarmArgs, GetCompositeAlarmResult, GetCompositeAlarmOutputArgs } from "./getCompositeAlarm";
export const getCompositeAlarm: typeof import("./getCompositeAlarm").getCompositeAlarm = null as any;
export const getCompositeAlarmOutput: typeof import("./getCompositeAlarm").getCompositeAlarmOutput = null as any;
utilities.lazyLoad(exports, ["getCompositeAlarm","getCompositeAlarmOutput"], () => require("./getCompositeAlarm"));

export { GetMetricStreamArgs, GetMetricStreamResult, GetMetricStreamOutputArgs } from "./getMetricStream";
export const getMetricStream: typeof import("./getMetricStream").getMetricStream = null as any;
export const getMetricStreamOutput: typeof import("./getMetricStream").getMetricStreamOutput = null as any;
utilities.lazyLoad(exports, ["getMetricStream","getMetricStreamOutput"], () => require("./getMetricStream"));

export { MetricStreamArgs } from "./metricStream";
export type MetricStream = import("./metricStream").MetricStream;
export const MetricStream: typeof import("./metricStream").MetricStream = null as any;
utilities.lazyLoad(exports, ["MetricStream"], () => require("./metricStream"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:cloudwatch:Alarm":
                return new Alarm(name, <any>undefined, { urn })
            case "aws-native:cloudwatch:CompositeAlarm":
                return new CompositeAlarm(name, <any>undefined, { urn })
            case "aws-native:cloudwatch:MetricStream":
                return new MetricStream(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "cloudwatch", _module)
