// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SageMaker::AppImageConfig
 */
export class AppImageConfig extends pulumi.CustomResource {
    /**
     * Get an existing AppImageConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AppImageConfig {
        return new AppImageConfig(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:sagemaker:AppImageConfig';

    /**
     * Returns true if the given object is an instance of AppImageConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppImageConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppImageConfig.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the AppImageConfig.
     */
    declare public /*out*/ readonly appImageConfigArn: pulumi.Output<string>;
    /**
     * The Name of the AppImageConfig.
     */
    declare public readonly appImageConfigName: pulumi.Output<string>;
    /**
     * The CodeEditorAppImageConfig.
     */
    declare public readonly codeEditorAppImageConfig: pulumi.Output<outputs.sagemaker.AppImageConfigCodeEditorAppImageConfig | undefined>;
    /**
     * The JupyterLabAppImageConfig.
     */
    declare public readonly jupyterLabAppImageConfig: pulumi.Output<outputs.sagemaker.AppImageConfigJupyterLabAppImageConfig | undefined>;
    /**
     * The KernelGatewayImageConfig.
     */
    declare public readonly kernelGatewayImageConfig: pulumi.Output<outputs.sagemaker.AppImageConfigKernelGatewayImageConfig | undefined>;
    /**
     * A list of tags to apply to the AppImageConfig.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a AppImageConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppImageConfigArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["appImageConfigName"] = args?.appImageConfigName;
            resourceInputs["codeEditorAppImageConfig"] = args?.codeEditorAppImageConfig;
            resourceInputs["jupyterLabAppImageConfig"] = args?.jupyterLabAppImageConfig;
            resourceInputs["kernelGatewayImageConfig"] = args?.kernelGatewayImageConfig;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["appImageConfigArn"] = undefined /*out*/;
        } else {
            resourceInputs["appImageConfigArn"] = undefined /*out*/;
            resourceInputs["appImageConfigName"] = undefined /*out*/;
            resourceInputs["codeEditorAppImageConfig"] = undefined /*out*/;
            resourceInputs["jupyterLabAppImageConfig"] = undefined /*out*/;
            resourceInputs["kernelGatewayImageConfig"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["appImageConfigName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AppImageConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AppImageConfig resource.
 */
export interface AppImageConfigArgs {
    /**
     * The Name of the AppImageConfig.
     */
    appImageConfigName?: pulumi.Input<string>;
    /**
     * The CodeEditorAppImageConfig.
     */
    codeEditorAppImageConfig?: pulumi.Input<inputs.sagemaker.AppImageConfigCodeEditorAppImageConfigArgs>;
    /**
     * The JupyterLabAppImageConfig.
     */
    jupyterLabAppImageConfig?: pulumi.Input<inputs.sagemaker.AppImageConfigJupyterLabAppImageConfigArgs>;
    /**
     * The KernelGatewayImageConfig.
     */
    kernelGatewayImageConfig?: pulumi.Input<inputs.sagemaker.AppImageConfigKernelGatewayImageConfigArgs>;
    /**
     * A list of tags to apply to the AppImageConfig.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
