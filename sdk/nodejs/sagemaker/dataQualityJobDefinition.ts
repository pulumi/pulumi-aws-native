// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SageMaker::DataQualityJobDefinition
 */
export class DataQualityJobDefinition extends pulumi.CustomResource {
    /**
     * Get an existing DataQualityJobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataQualityJobDefinition {
        return new DataQualityJobDefinition(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:sagemaker:DataQualityJobDefinition';

    /**
     * Returns true if the given object is an instance of DataQualityJobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataQualityJobDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataQualityJobDefinition.__pulumiType;
    }

    /**
     * The time at which the job definition was created.
     */
    declare public /*out*/ readonly creationTime: pulumi.Output<string>;
    /**
     * Specifies the container that runs the monitoring job.
     */
    declare public readonly dataQualityAppSpecification: pulumi.Output<outputs.sagemaker.DataQualityJobDefinitionDataQualityAppSpecification>;
    /**
     * Configures the constraints and baselines for the monitoring job.
     */
    declare public readonly dataQualityBaselineConfig: pulumi.Output<outputs.sagemaker.DataQualityJobDefinitionDataQualityBaselineConfig | undefined>;
    /**
     * A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.
     */
    declare public readonly dataQualityJobInput: pulumi.Output<outputs.sagemaker.DataQualityJobDefinitionDataQualityJobInput>;
    /**
     * The output configuration for monitoring jobs.
     */
    declare public readonly dataQualityJobOutputConfig: pulumi.Output<outputs.sagemaker.DataQualityJobDefinitionMonitoringOutputConfig>;
    declare public readonly endpointName: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of job definition.
     */
    declare public /*out*/ readonly jobDefinitionArn: pulumi.Output<string>;
    /**
     * The name for the monitoring job definition.
     */
    declare public readonly jobDefinitionName: pulumi.Output<string | undefined>;
    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    declare public readonly jobResources: pulumi.Output<outputs.sagemaker.DataQualityJobDefinitionMonitoringResources>;
    /**
     * Specifies networking configuration for the monitoring job.
     */
    declare public readonly networkConfig: pulumi.Output<outputs.sagemaker.DataQualityJobDefinitionNetworkConfig | undefined>;
    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     */
    declare public readonly roleArn: pulumi.Output<string>;
    /**
     * A time limit for how long the monitoring job is allowed to run before stopping.
     */
    declare public readonly stoppingCondition: pulumi.Output<outputs.sagemaker.DataQualityJobDefinitionStoppingCondition | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    declare public readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;

    /**
     * Create a DataQualityJobDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataQualityJobDefinitionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.dataQualityAppSpecification === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataQualityAppSpecification'");
            }
            if (args?.dataQualityJobInput === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataQualityJobInput'");
            }
            if (args?.dataQualityJobOutputConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataQualityJobOutputConfig'");
            }
            if (args?.jobResources === undefined && !opts.urn) {
                throw new Error("Missing required property 'jobResources'");
            }
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["dataQualityAppSpecification"] = args?.dataQualityAppSpecification;
            resourceInputs["dataQualityBaselineConfig"] = args?.dataQualityBaselineConfig;
            resourceInputs["dataQualityJobInput"] = args?.dataQualityJobInput;
            resourceInputs["dataQualityJobOutputConfig"] = args?.dataQualityJobOutputConfig;
            resourceInputs["endpointName"] = args?.endpointName;
            resourceInputs["jobDefinitionName"] = args?.jobDefinitionName;
            resourceInputs["jobResources"] = args?.jobResources;
            resourceInputs["networkConfig"] = args?.networkConfig;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["stoppingCondition"] = args?.stoppingCondition;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["jobDefinitionArn"] = undefined /*out*/;
        } else {
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["dataQualityAppSpecification"] = undefined /*out*/;
            resourceInputs["dataQualityBaselineConfig"] = undefined /*out*/;
            resourceInputs["dataQualityJobInput"] = undefined /*out*/;
            resourceInputs["dataQualityJobOutputConfig"] = undefined /*out*/;
            resourceInputs["endpointName"] = undefined /*out*/;
            resourceInputs["jobDefinitionArn"] = undefined /*out*/;
            resourceInputs["jobDefinitionName"] = undefined /*out*/;
            resourceInputs["jobResources"] = undefined /*out*/;
            resourceInputs["networkConfig"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["stoppingCondition"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["dataQualityAppSpecification", "dataQualityBaselineConfig", "dataQualityJobInput", "dataQualityJobOutputConfig", "endpointName", "jobDefinitionName", "jobResources", "networkConfig", "roleArn", "stoppingCondition", "tags[*]"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DataQualityJobDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DataQualityJobDefinition resource.
 */
export interface DataQualityJobDefinitionArgs {
    /**
     * Specifies the container that runs the monitoring job.
     */
    dataQualityAppSpecification: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionDataQualityAppSpecificationArgs>;
    /**
     * Configures the constraints and baselines for the monitoring job.
     */
    dataQualityBaselineConfig?: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionDataQualityBaselineConfigArgs>;
    /**
     * A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.
     */
    dataQualityJobInput: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionDataQualityJobInputArgs>;
    /**
     * The output configuration for monitoring jobs.
     */
    dataQualityJobOutputConfig: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionMonitoringOutputConfigArgs>;
    endpointName?: pulumi.Input<string>;
    /**
     * The name for the monitoring job definition.
     */
    jobDefinitionName?: pulumi.Input<string>;
    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    jobResources: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionMonitoringResourcesArgs>;
    /**
     * Specifies networking configuration for the monitoring job.
     */
    networkConfig?: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionNetworkConfigArgs>;
    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     */
    roleArn: pulumi.Input<string>;
    /**
     * A time limit for how long the monitoring job is allowed to run before stopping.
     */
    stoppingCondition?: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionStoppingConditionArgs>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
