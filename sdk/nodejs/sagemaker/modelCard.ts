// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SageMaker::ModelCard.
 */
export class ModelCard extends pulumi.CustomResource {
    /**
     * Get an existing ModelCard resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ModelCard {
        return new ModelCard(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:sagemaker:ModelCard';

    /**
     * Returns true if the given object is an instance of ModelCard.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ModelCard {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ModelCard.__pulumiType;
    }

    public readonly content!: pulumi.Output<outputs.sagemaker.ModelCardContent>;
    /**
     * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
     */
    public readonly createdBy!: pulumi.Output<outputs.sagemaker.ModelCardUserContext | undefined>;
    /**
     * The date and time the model card was created.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
     */
    public readonly lastModifiedBy!: pulumi.Output<outputs.sagemaker.ModelCardUserContext | undefined>;
    /**
     * The date and time the model card was last modified.
     */
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the successfully created model card.
     */
    public /*out*/ readonly modelCardArn!: pulumi.Output<string>;
    /**
     * The unique name of the model card.
     */
    public readonly modelCardName!: pulumi.Output<string>;
    /**
     * The processing status of model card deletion. The ModelCardProcessingStatus updates throughout the different deletion steps.
     */
    public /*out*/ readonly modelCardProcessingStatus!: pulumi.Output<enums.sagemaker.ModelCardProcessingStatus>;
    /**
     * The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.
     */
    public readonly modelCardStatus!: pulumi.Output<enums.sagemaker.ModelCardStatus>;
    /**
     * A version of the model card.
     */
    public /*out*/ readonly modelCardVersion!: pulumi.Output<number>;
    public readonly securityConfig!: pulumi.Output<outputs.sagemaker.ModelCardSecurityConfig | undefined>;
    /**
     * Key-value pairs used to manage metadata for model cards.
     */
    public readonly tags!: pulumi.Output<outputs.sagemaker.ModelCardTag[] | undefined>;

    /**
     * Create a ModelCard resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModelCardArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.modelCardStatus === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelCardStatus'");
            }
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["lastModifiedBy"] = args ? args.lastModifiedBy : undefined;
            resourceInputs["modelCardName"] = args ? args.modelCardName : undefined;
            resourceInputs["modelCardStatus"] = args ? args.modelCardStatus : undefined;
            resourceInputs["securityConfig"] = args ? args.securityConfig : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["modelCardArn"] = undefined /*out*/;
            resourceInputs["modelCardProcessingStatus"] = undefined /*out*/;
            resourceInputs["modelCardVersion"] = undefined /*out*/;
        } else {
            resourceInputs["content"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["lastModifiedBy"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["modelCardArn"] = undefined /*out*/;
            resourceInputs["modelCardName"] = undefined /*out*/;
            resourceInputs["modelCardProcessingStatus"] = undefined /*out*/;
            resourceInputs["modelCardStatus"] = undefined /*out*/;
            resourceInputs["modelCardVersion"] = undefined /*out*/;
            resourceInputs["securityConfig"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ModelCard.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ModelCard resource.
 */
export interface ModelCardArgs {
    content: pulumi.Input<inputs.sagemaker.ModelCardContentArgs>;
    /**
     * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
     */
    createdBy?: pulumi.Input<inputs.sagemaker.ModelCardUserContextArgs>;
    /**
     * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
     */
    lastModifiedBy?: pulumi.Input<inputs.sagemaker.ModelCardUserContextArgs>;
    /**
     * The unique name of the model card.
     */
    modelCardName?: pulumi.Input<string>;
    /**
     * The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.
     */
    modelCardStatus: pulumi.Input<enums.sagemaker.ModelCardStatus>;
    securityConfig?: pulumi.Input<inputs.sagemaker.ModelCardSecurityConfigArgs>;
    /**
     * Key-value pairs used to manage metadata for model cards.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.sagemaker.ModelCardTagArgs>[]>;
}
