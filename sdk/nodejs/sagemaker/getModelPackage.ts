// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SageMaker::ModelPackage
 */
export function getModelPackage(args: GetModelPackageArgs, opts?: pulumi.InvokeOptions): Promise<GetModelPackageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:sagemaker:getModelPackage", {
        "modelPackageArn": args.modelPackageArn,
    }, opts);
}

export interface GetModelPackageArgs {
    modelPackageArn: string;
}

export interface GetModelPackageResult {
    readonly additionalInferenceSpecifications?: outputs.sagemaker.ModelPackageAdditionalInferenceSpecificationDefinition[];
    readonly approvalDescription?: string;
    readonly certifyForMarketplace?: boolean;
    readonly creationTime?: string;
    readonly customerMetadataProperties?: outputs.sagemaker.ModelPackageCustomerMetadataProperties;
    readonly lastModifiedTime?: string;
    readonly modelApprovalStatus?: enums.sagemaker.ModelPackageModelApprovalStatus;
    readonly modelPackageArn?: string;
    readonly modelPackageName?: string;
    readonly modelPackageStatus?: enums.sagemaker.ModelPackageStatus;
    readonly modelPackageStatusDetails?: outputs.sagemaker.ModelPackageStatusDetails;
    readonly modelPackageVersion?: number;
    readonly skipModelValidation?: enums.sagemaker.ModelPackageSkipModelValidation;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::SageMaker::ModelPackage
 */
export function getModelPackageOutput(args: GetModelPackageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetModelPackageResult> {
    return pulumi.output(args).apply((a: any) => getModelPackage(a, opts))
}

export interface GetModelPackageOutputArgs {
    modelPackageArn: pulumi.Input<string>;
}
