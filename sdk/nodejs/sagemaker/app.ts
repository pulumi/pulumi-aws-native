// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SageMaker::App
 */
export class App extends pulumi.CustomResource {
    /**
     * Get an existing App resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): App {
        return new App(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:sagemaker:App';

    /**
     * Returns true if the given object is an instance of App.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is App {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === App.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the app.
     */
    public /*out*/ readonly appArn!: pulumi.Output<string>;
    /**
     * The name of the app.
     */
    public readonly appName!: pulumi.Output<string>;
    /**
     * The type of app.
     */
    public readonly appType!: pulumi.Output<enums.sagemaker.AppType>;
    /**
     * The domain ID.
     */
    public readonly domainId!: pulumi.Output<string>;
    /**
     * The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
     */
    public readonly resourceSpec!: pulumi.Output<outputs.sagemaker.AppResourceSpec | undefined>;
    /**
     * A list of tags to apply to the app.
     */
    public readonly tags!: pulumi.Output<outputs.sagemaker.AppTag[] | undefined>;
    /**
     * The user profile name.
     */
    public readonly userProfileName!: pulumi.Output<string>;

    /**
     * Create a App resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.appType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appType'");
            }
            if ((!args || args.domainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainId'");
            }
            if ((!args || args.userProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userProfileName'");
            }
            resourceInputs["appName"] = args ? args.appName : undefined;
            resourceInputs["appType"] = args ? args.appType : undefined;
            resourceInputs["domainId"] = args ? args.domainId : undefined;
            resourceInputs["resourceSpec"] = args ? args.resourceSpec : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userProfileName"] = args ? args.userProfileName : undefined;
            resourceInputs["appArn"] = undefined /*out*/;
        } else {
            resourceInputs["appArn"] = undefined /*out*/;
            resourceInputs["appName"] = undefined /*out*/;
            resourceInputs["appType"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["resourceSpec"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["userProfileName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(App.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a App resource.
 */
export interface AppArgs {
    /**
     * The name of the app.
     */
    appName?: pulumi.Input<string>;
    /**
     * The type of app.
     */
    appType: pulumi.Input<enums.sagemaker.AppType>;
    /**
     * The domain ID.
     */
    domainId: pulumi.Input<string>;
    /**
     * The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
     */
    resourceSpec?: pulumi.Input<inputs.sagemaker.AppResourceSpecArgs>;
    /**
     * A list of tags to apply to the app.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.sagemaker.AppTagArgs>[]>;
    /**
     * The user profile name.
     */
    userProfileName: pulumi.Input<string>;
}
