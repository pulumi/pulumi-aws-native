// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SageMaker::App
 */
export function getApp(args: GetAppArgs, opts?: pulumi.InvokeOptions): Promise<GetAppResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:sagemaker:getApp", {
        "appName": args.appName,
        "appType": args.appType,
        "domainId": args.domainId,
        "userProfileName": args.userProfileName,
    }, opts);
}

export interface GetAppArgs {
    /**
     * The name of the app.
     */
    appName: string;
    /**
     * The type of app.
     */
    appType: enums.sagemaker.AppType;
    /**
     * The domain ID.
     */
    domainId: string;
    /**
     * The user profile name.
     */
    userProfileName: string;
}

export interface GetAppResult {
    /**
     * The Amazon Resource Name (ARN) of the app.
     */
    readonly appArn?: string;
    /**
     * The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
     */
    readonly resourceSpec?: outputs.sagemaker.AppResourceSpec;
}

export function getAppOutput(args: GetAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppResult> {
    return pulumi.output(args).apply(a => getApp(a, opts))
}

export interface GetAppOutputArgs {
    /**
     * The name of the app.
     */
    appName: pulumi.Input<string>;
    /**
     * The type of app.
     */
    appType: pulumi.Input<enums.sagemaker.AppType>;
    /**
     * The domain ID.
     */
    domainId: pulumi.Input<string>;
    /**
     * The user profile name.
     */
    userProfileName: pulumi.Input<string>;
}
