// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SageMaker::MonitoringSchedule
 */
export function getMonitoringSchedule(args: GetMonitoringScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringScheduleResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:sagemaker:getMonitoringSchedule", {
        "monitoringScheduleArn": args.monitoringScheduleArn,
    }, opts);
}

export interface GetMonitoringScheduleArgs {
    /**
     * The Amazon Resource Name (ARN) of the monitoring schedule.
     */
    monitoringScheduleArn: string;
}

export interface GetMonitoringScheduleResult {
    /**
     * The time at which the schedule was created.
     */
    readonly creationTime?: string;
    readonly endpointName?: string;
    /**
     * Contains the reason a monitoring job failed, if it failed.
     */
    readonly failureReason?: string;
    /**
     * A timestamp that indicates the last time the monitoring job was modified.
     */
    readonly lastModifiedTime?: string;
    /**
     * Describes metadata on the last execution to run, if there was one.
     */
    readonly lastMonitoringExecutionSummary?: outputs.sagemaker.MonitoringScheduleMonitoringExecutionSummary;
    /**
     * The Amazon Resource Name (ARN) of the monitoring schedule.
     */
    readonly monitoringScheduleArn?: string;
    readonly monitoringScheduleConfig?: outputs.sagemaker.MonitoringScheduleConfig;
    /**
     * The status of a schedule job.
     */
    readonly monitoringScheduleStatus?: enums.sagemaker.MonitoringScheduleStatus;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.sagemaker.MonitoringScheduleTag[];
}

export function getMonitoringScheduleOutput(args: GetMonitoringScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoringScheduleResult> {
    return pulumi.output(args).apply(a => getMonitoringSchedule(a, opts))
}

export interface GetMonitoringScheduleOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the monitoring schedule.
     */
    monitoringScheduleArn: pulumi.Input<string>;
}
