// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SageMaker::ModelPackageGroup
 */
export class ModelPackageGroup extends pulumi.CustomResource {
    /**
     * Get an existing ModelPackageGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ModelPackageGroup {
        return new ModelPackageGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:sagemaker:ModelPackageGroup';

    /**
     * Returns true if the given object is an instance of ModelPackageGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ModelPackageGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ModelPackageGroup.__pulumiType;
    }

    /**
     * The time at which the model package group was created.
     */
    declare public /*out*/ readonly creationTime: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the model group.
     */
    declare public /*out*/ readonly modelPackageGroupArn: pulumi.Output<string>;
    /**
     * The description for the model group.
     */
    declare public readonly modelPackageGroupDescription: pulumi.Output<string | undefined>;
    /**
     * The name of the model group.
     */
    declare public readonly modelPackageGroupName: pulumi.Output<string>;
    /**
     * A resouce policy to control access to a model group. For information about resoure policies, see [Identity-based policies and resource-based policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_identity-vs-resource.html) in the *AWS Identity and Access Management User Guide.* .
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SageMaker::ModelPackageGroup` for more information about the expected schema for this property.
     */
    declare public readonly modelPackageGroupPolicy: pulumi.Output<any | undefined>;
    /**
     * The status of a modelpackage group job.
     */
    declare public /*out*/ readonly modelPackageGroupStatus: pulumi.Output<enums.sagemaker.ModelPackageGroupStatus>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a ModelPackageGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ModelPackageGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["modelPackageGroupDescription"] = args?.modelPackageGroupDescription;
            resourceInputs["modelPackageGroupName"] = args?.modelPackageGroupName;
            resourceInputs["modelPackageGroupPolicy"] = args?.modelPackageGroupPolicy;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["modelPackageGroupArn"] = undefined /*out*/;
            resourceInputs["modelPackageGroupStatus"] = undefined /*out*/;
        } else {
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["modelPackageGroupArn"] = undefined /*out*/;
            resourceInputs["modelPackageGroupDescription"] = undefined /*out*/;
            resourceInputs["modelPackageGroupName"] = undefined /*out*/;
            resourceInputs["modelPackageGroupPolicy"] = undefined /*out*/;
            resourceInputs["modelPackageGroupStatus"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["modelPackageGroupDescription", "modelPackageGroupName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ModelPackageGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ModelPackageGroup resource.
 */
export interface ModelPackageGroupArgs {
    /**
     * The description for the model group.
     */
    modelPackageGroupDescription?: pulumi.Input<string>;
    /**
     * The name of the model group.
     */
    modelPackageGroupName?: pulumi.Input<string>;
    /**
     * A resouce policy to control access to a model group. For information about resoure policies, see [Identity-based policies and resource-based policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_identity-vs-resource.html) in the *AWS Identity and Access Management User Guide.* .
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SageMaker::ModelPackageGroup` for more information about the expected schema for this property.
     */
    modelPackageGroupPolicy?: any;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
