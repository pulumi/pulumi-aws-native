// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConfigurationManagerArgs } from "./configurationManager";
export type ConfigurationManager = import("./configurationManager").ConfigurationManager;
export const ConfigurationManager: typeof import("./configurationManager").ConfigurationManager = null as any;
utilities.lazyLoad(exports, ["ConfigurationManager"], () => require("./configurationManager"));

export { GetConfigurationManagerArgs, GetConfigurationManagerResult, GetConfigurationManagerOutputArgs } from "./getConfigurationManager";
export const getConfigurationManager: typeof import("./getConfigurationManager").getConfigurationManager = null as any;
export const getConfigurationManagerOutput: typeof import("./getConfigurationManager").getConfigurationManagerOutput = null as any;
utilities.lazyLoad(exports, ["getConfigurationManager","getConfigurationManagerOutput"], () => require("./getConfigurationManager"));


// Export enums:
export * from "../types/enums/ssmquicksetup";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:ssmquicksetup:ConfigurationManager":
                return new ConfigurationManager(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "ssmquicksetup", _module)
