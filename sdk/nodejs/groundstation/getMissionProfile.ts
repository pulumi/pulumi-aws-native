// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * AWS Ground Station Mission Profile resource type for CloudFormation.
 */
export function getMissionProfile(args: GetMissionProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetMissionProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:groundstation:getMissionProfile", {
        "arn": args.arn,
        "id": args.id,
    }, opts);
}

export interface GetMissionProfileArgs {
    /**
     * The ARN of the mission profile, such as `arn:aws:groundstation:us-east-2:1234567890:mission-profile/9940bf3b-d2ba-427e-9906-842b5e5d2296` .
     */
    arn: string;
    /**
     * The ID of the mission profile, such as `9940bf3b-d2ba-427e-9906-842b5e5d2296` .
     */
    id: string;
}

export interface GetMissionProfileResult {
    /**
     * The ARN of the mission profile, such as `arn:aws:groundstation:us-east-2:1234567890:mission-profile/9940bf3b-d2ba-427e-9906-842b5e5d2296` .
     */
    readonly arn?: string;
    /**
     * Post-pass time needed after the contact.
     */
    readonly contactPostPassDurationSeconds?: number;
    /**
     * Pre-pass time needed before the contact.
     */
    readonly contactPrePassDurationSeconds?: number;
    /**
     * A dataflow edge defines from where and to where data will flow during a contact.
     */
    readonly dataflowEdges?: outputs.groundstation.MissionProfileDataflowEdge[];
    /**
     * The ID of the mission profile, such as `9940bf3b-d2ba-427e-9906-842b5e5d2296` .
     */
    readonly id?: string;
    /**
     * Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
     */
    readonly minimumViableContactDurationSeconds?: number;
    /**
     * A name used to identify a mission profile.
     */
    readonly name?: string;
    /**
     * The region of the mission profile.
     */
    readonly region?: string;
    /**
     * The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
     */
    readonly streamsKmsKey?: outputs.groundstation.MissionProfileStreamsKmsKey;
    /**
     * The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
     */
    readonly streamsKmsRole?: string;
    /**
     * Tags assigned to the mission profile.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The ARN of a tracking config objects that defines how to track the satellite through the sky during a contact.
     */
    readonly trackingConfigArn?: string;
}
/**
 * AWS Ground Station Mission Profile resource type for CloudFormation.
 */
export function getMissionProfileOutput(args: GetMissionProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMissionProfileResult> {
    return pulumi.output(args).apply((a: any) => getMissionProfile(a, opts))
}

export interface GetMissionProfileOutputArgs {
    /**
     * The ARN of the mission profile, such as `arn:aws:groundstation:us-east-2:1234567890:mission-profile/9940bf3b-d2ba-427e-9906-842b5e5d2296` .
     */
    arn: pulumi.Input<string>;
    /**
     * The ID of the mission profile, such as `9940bf3b-d2ba-427e-9906-842b5e5d2296` .
     */
    id: pulumi.Input<string>;
}
