// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * AWS Ground Station Mission Profile resource type for CloudFormation.
 */
export function getMissionProfile(args: GetMissionProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetMissionProfileResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:groundstation:getMissionProfile", {
        "arn": args.arn,
        "id": args.id,
    }, opts);
}

export interface GetMissionProfileArgs {
    arn: string;
    id: string;
}

export interface GetMissionProfileResult {
    readonly arn?: string;
    /**
     * Post-pass time needed after the contact.
     */
    readonly contactPostPassDurationSeconds?: number;
    /**
     * Pre-pass time needed before the contact.
     */
    readonly contactPrePassDurationSeconds?: number;
    readonly dataflowEdges?: outputs.groundstation.MissionProfileDataflowEdge[];
    readonly id?: string;
    /**
     * Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
     */
    readonly minimumViableContactDurationSeconds?: number;
    /**
     * A name used to identify a mission profile.
     */
    readonly name?: string;
    readonly region?: string;
    readonly tags?: outputs.groundstation.MissionProfileTag[];
    readonly trackingConfigArn?: string;
}

export function getMissionProfileOutput(args: GetMissionProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMissionProfileResult> {
    return pulumi.output(args).apply(a => getMissionProfile(a, opts))
}

export interface GetMissionProfileOutputArgs {
    arn: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
