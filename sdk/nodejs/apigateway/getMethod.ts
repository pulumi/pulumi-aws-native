// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The ``AWS::ApiGateway::Method`` resource creates API Gateway methods that define the parameters and body that clients must send in their requests.
 */
export function getMethod(args: GetMethodArgs, opts?: pulumi.InvokeOptions): Promise<GetMethodResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:apigateway:getMethod", {
        "httpMethod": args.httpMethod,
        "resourceId": args.resourceId,
        "restApiId": args.restApiId,
    }, opts);
}

export interface GetMethodArgs {
    /**
     * The method's HTTP verb.
     */
    httpMethod: string;
    /**
     * The Resource identifier for the MethodResponse resource.
     */
    resourceId: string;
    /**
     * The string identifier of the associated RestApi.
     */
    restApiId: string;
}

export interface GetMethodResult {
    /**
     * A boolean flag specifying whether a valid ApiKey is required to invoke this method.
     */
    readonly apiKeyRequired?: boolean;
    /**
     * A list of authorization scopes configured on the method. The scopes are used with a ``COGNITO_USER_POOLS`` authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
     */
    readonly authorizationScopes?: string[];
    /**
     * The method's authorization type. This parameter is required. For valid values, see [Method](https://docs.aws.amazon.com/apigateway/latest/api/API_Method.html) in the *API Gateway API Reference*.
     *   If you specify the ``AuthorizerId`` property, specify ``CUSTOM`` or ``COGNITO_USER_POOLS`` for this property.
     */
    readonly authorizationType?: enums.apigateway.MethodAuthorizationType;
    /**
     * The identifier of an authorizer to use on this method. The method's authorization type must be ``CUSTOM`` or ``COGNITO_USER_POOLS``.
     */
    readonly authorizerId?: string;
    /**
     * Represents an ``HTTP``, ``HTTP_PROXY``, ``AWS``, ``AWS_PROXY``, or Mock integration.
     */
    readonly integration?: outputs.apigateway.MethodIntegration;
    /**
     * Gets a method response associated with a given HTTP status code.
     */
    readonly methodResponses?: outputs.apigateway.MethodResponse[];
    /**
     * A human-friendly operation identifier for the method. For example, you can assign the ``operationName`` of ``ListPets`` for the ``GET /pets`` method in the ``PetStore`` example.
     */
    readonly operationName?: string;
    /**
     * A key-value map specifying data schemas, represented by Model resources, (as the mapped value) of the request payloads of given content types (as the mapping key).
     */
    readonly requestModels?: {[key: string]: string};
    /**
     * A key-value map defining required or optional method request parameters that can be accepted by API Gateway. A key is a method request parameter name matching the pattern of ``method.request.{location}.{name}``, where ``location`` is ``querystring``, ``path``, or ``header`` and ``name`` is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (``true``) or optional (``false``). The method request parameter names defined here are available in Integration to be mapped to integration request parameters or templates.
     */
    readonly requestParameters?: {[key: string]: boolean | string};
    /**
     * The identifier of a RequestValidator for request validation.
     */
    readonly requestValidatorId?: string;
}
/**
 * The ``AWS::ApiGateway::Method`` resource creates API Gateway methods that define the parameters and body that clients must send in their requests.
 */
export function getMethodOutput(args: GetMethodOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMethodResult> {
    return pulumi.output(args).apply((a: any) => getMethod(a, opts))
}

export interface GetMethodOutputArgs {
    /**
     * The method's HTTP verb.
     */
    httpMethod: pulumi.Input<string>;
    /**
     * The Resource identifier for the MethodResponse resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The string identifier of the associated RestApi.
     */
    restApiId: pulumi.Input<string>;
}
