// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Represents an authorization layer for methods. If enabled on a method, API Gateway will activate the authorizer when a client calls the method.
 */
export function getAuthorizer(args: GetAuthorizerArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorizerResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:apigateway:getAuthorizer", {
        "authorizerId": args.authorizerId,
        "restApiId": args.restApiId,
    }, opts);
}

export interface GetAuthorizerArgs {
    authorizerId: string;
    /**
     * The identifier of the API.
     */
    restApiId: string;
}

export interface GetAuthorizerResult {
    /**
     * Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
     */
    readonly authType?: string;
    /**
     * Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
     */
    readonly authorizerCredentials?: string;
    readonly authorizerId?: string;
    /**
     * The TTL in seconds of cached authorizer results.
     */
    readonly authorizerResultTtlInSeconds?: number;
    /**
     * Specifies the authorizer's Uniform Resource Identifier (URI).
     */
    readonly authorizerUri?: string;
    /**
     * The identity source for which authorization is requested.
     */
    readonly identitySource?: string;
    /**
     * A validation expression for the incoming identity token.
     */
    readonly identityValidationExpression?: string;
    /**
     * The name of the authorizer.
     */
    readonly name?: string;
    /**
     * A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
     */
    readonly providerARNs?: string[];
    /**
     * The authorizer type.
     */
    readonly type?: string;
}

export function getAuthorizerOutput(args: GetAuthorizerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthorizerResult> {
    return pulumi.output(args).apply(a => getAuthorizer(a, opts))
}

export interface GetAuthorizerOutputArgs {
    authorizerId: pulumi.Input<string>;
    /**
     * The identifier of the API.
     */
    restApiId: pulumi.Input<string>;
}
