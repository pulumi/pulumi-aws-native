// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The ``AWS::ApiGateway::GatewayResponse`` resource creates a gateway response for your API. For more information, see [API Gateway Responses](https://docs.aws.amazon.com/apigateway/latest/developerguide/customize-gateway-responses.html#api-gateway-gatewayResponse-definition) in the *API Gateway Developer Guide*.
 *
 * @deprecated GatewayResponse is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class GatewayResponse extends pulumi.CustomResource {
    /**
     * Get an existing GatewayResponse resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GatewayResponse {
        pulumi.log.warn("GatewayResponse is deprecated: GatewayResponse is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new GatewayResponse(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:apigateway:GatewayResponse';

    /**
     * Returns true if the given object is an instance of GatewayResponse.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GatewayResponse {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GatewayResponse.__pulumiType;
    }

    /**
     * Response parameters (paths, query strings and headers) of the GatewayResponse as a string-to-string map of key-value pairs.
     */
    public readonly responseParameters!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Response templates of the GatewayResponse as a string-to-string map of key-value pairs.
     */
    public readonly responseTemplates!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The response type of the associated GatewayResponse.
     */
    public readonly responseType!: pulumi.Output<string>;
    /**
     * The string identifier of the associated RestApi.
     */
    public readonly restApiId!: pulumi.Output<string>;
    /**
     * The HTTP status code for this GatewayResponse.
     */
    public readonly statusCode!: pulumi.Output<string | undefined>;

    /**
     * Create a GatewayResponse resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated GatewayResponse is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: GatewayResponseArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("GatewayResponse is deprecated: GatewayResponse is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.responseType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'responseType'");
            }
            if ((!args || args.restApiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restApiId'");
            }
            resourceInputs["responseParameters"] = args ? args.responseParameters : undefined;
            resourceInputs["responseTemplates"] = args ? args.responseTemplates : undefined;
            resourceInputs["responseType"] = args ? args.responseType : undefined;
            resourceInputs["restApiId"] = args ? args.restApiId : undefined;
            resourceInputs["statusCode"] = args ? args.statusCode : undefined;
        } else {
            resourceInputs["responseParameters"] = undefined /*out*/;
            resourceInputs["responseTemplates"] = undefined /*out*/;
            resourceInputs["responseType"] = undefined /*out*/;
            resourceInputs["restApiId"] = undefined /*out*/;
            resourceInputs["statusCode"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["responseType", "restApiId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(GatewayResponse.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a GatewayResponse resource.
 */
export interface GatewayResponseArgs {
    /**
     * Response parameters (paths, query strings and headers) of the GatewayResponse as a string-to-string map of key-value pairs.
     */
    responseParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Response templates of the GatewayResponse as a string-to-string map of key-value pairs.
     */
    responseTemplates?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The response type of the associated GatewayResponse.
     */
    responseType: pulumi.Input<string>;
    /**
     * The string identifier of the associated RestApi.
     */
    restApiId: pulumi.Input<string>;
    /**
     * The HTTP status code for this GatewayResponse.
     */
    statusCode?: pulumi.Input<string>;
}
