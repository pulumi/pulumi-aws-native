// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ApiGateway::UsagePlan
 */
export class UsagePlan extends pulumi.CustomResource {
    /**
     * Get an existing UsagePlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UsagePlan {
        return new UsagePlan(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:apigateway:UsagePlan';

    /**
     * Returns true if the given object is an instance of UsagePlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UsagePlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UsagePlan.__pulumiType;
    }

    /**
     * The API stages to associate with this usage plan.
     */
    public readonly apiStages!: pulumi.Output<outputs.apigateway.UsagePlanApiStage[] | undefined>;
    /**
     * A description of the usage plan.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Configures the number of requests that users can make within a given interval.
     */
    public readonly quota!: pulumi.Output<outputs.apigateway.UsagePlanQuotaSettings | undefined>;
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the usage plan.
     */
    public readonly tags!: pulumi.Output<outputs.apigateway.UsagePlanTag[] | undefined>;
    /**
     * Configures the overall request rate (average requests per second) and burst capacity.
     */
    public readonly throttle!: pulumi.Output<outputs.apigateway.UsagePlanThrottleSettings | undefined>;
    /**
     * A name for the usage plan.
     */
    public readonly usagePlanName!: pulumi.Output<string | undefined>;

    /**
     * Create a UsagePlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UsagePlanArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["apiStages"] = args ? args.apiStages : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["quota"] = args ? args.quota : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["throttle"] = args ? args.throttle : undefined;
            inputs["usagePlanName"] = args ? args.usagePlanName : undefined;
        } else {
            inputs["apiStages"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["quota"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["throttle"] = undefined /*out*/;
            inputs["usagePlanName"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(UsagePlan.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a UsagePlan resource.
 */
export interface UsagePlanArgs {
    /**
     * The API stages to associate with this usage plan.
     */
    apiStages?: pulumi.Input<pulumi.Input<inputs.apigateway.UsagePlanApiStageArgs>[]>;
    /**
     * A description of the usage plan.
     */
    description?: pulumi.Input<string>;
    /**
     * Configures the number of requests that users can make within a given interval.
     */
    quota?: pulumi.Input<inputs.apigateway.UsagePlanQuotaSettingsArgs>;
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the usage plan.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.apigateway.UsagePlanTagArgs>[]>;
    /**
     * Configures the overall request rate (average requests per second) and burst capacity.
     */
    throttle?: pulumi.Input<inputs.apigateway.UsagePlanThrottleSettingsArgs>;
    /**
     * A name for the usage plan.
     */
    usagePlanName?: pulumi.Input<string>;
}
