// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ApiGateway::ApiKey
 */
export class ApiKey extends pulumi.CustomResource {
    /**
     * Get an existing ApiKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ApiKey {
        return new ApiKey(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:apigateway:ApiKey';

    /**
     * Returns true if the given object is an instance of ApiKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiKey.__pulumiType;
    }

    /**
     * A Unique Key ID which identifies the API Key. Generated by the Create API and returned by the Read and List APIs 
     */
    public /*out*/ readonly aPIKeyId!: pulumi.Output<string>;
    /**
     * An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace.
     */
    public readonly customerId!: pulumi.Output<string | undefined>;
    /**
     * A description of the purpose of the API key.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the API key can be used by clients.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether the key identifier is distinct from the created API key value. This parameter is deprecated and should not be used.
     */
    public readonly generateDistinctId!: pulumi.Output<boolean | undefined>;
    /**
     * A name for the API key. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the API key name.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * A list of stages to associate with this API key.
     */
    public readonly stageKeys!: pulumi.Output<outputs.apigateway.ApiKeyStageKey[] | undefined>;
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the API key.
     */
    public readonly tags!: pulumi.Output<outputs.apigateway.ApiKeyTag[] | undefined>;
    /**
     * The value of the API key. Must be at least 20 characters long.
     */
    public readonly value!: pulumi.Output<string | undefined>;

    /**
     * Create a ApiKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApiKeyArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["customerId"] = args ? args.customerId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["generateDistinctId"] = args ? args.generateDistinctId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["stageKeys"] = args ? args.stageKeys : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["aPIKeyId"] = undefined /*out*/;
        } else {
            resourceInputs["aPIKeyId"] = undefined /*out*/;
            resourceInputs["customerId"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["generateDistinctId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["stageKeys"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["value"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ApiKey resource.
 */
export interface ApiKeyArgs {
    /**
     * An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace.
     */
    customerId?: pulumi.Input<string>;
    /**
     * A description of the purpose of the API key.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the API key can be used by clients.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether the key identifier is distinct from the created API key value. This parameter is deprecated and should not be used.
     */
    generateDistinctId?: pulumi.Input<boolean>;
    /**
     * A name for the API key. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the API key name.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of stages to associate with this API key.
     */
    stageKeys?: pulumi.Input<pulumi.Input<inputs.apigateway.ApiKeyStageKeyArgs>[]>;
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the API key.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.apigateway.ApiKeyTagArgs>[]>;
    /**
     * The value of the API key. Must be at least 20 characters long.
     */
    value?: pulumi.Input<string>;
}
