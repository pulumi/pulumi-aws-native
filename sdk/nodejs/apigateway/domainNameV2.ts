// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ApiGateway::DomainNameV2.
 */
export class DomainNameV2 extends pulumi.CustomResource {
    /**
     * Get an existing DomainNameV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DomainNameV2 {
        return new DomainNameV2(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:apigateway:DomainNameV2';

    /**
     * Returns true if the given object is an instance of DomainNameV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainNameV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainNameV2.__pulumiType;
    }

    /**
     * The reference to an AWS -managed certificate that will be used by the private endpoint for this domain name. AWS Certificate Manager is the only supported source.
     */
    public readonly certificateArn!: pulumi.Output<string | undefined>;
    /**
     * Represents a custom domain name as a user-friendly host name of an API (RestApi).
     */
    public readonly domainName!: pulumi.Output<string | undefined>;
    /**
     * The amazon resource name (ARN) of the domain name resource.
     */
    public /*out*/ readonly domainNameArn!: pulumi.Output<string>;
    /**
     * The domain name ID.
     */
    public /*out*/ readonly domainNameId!: pulumi.Output<string>;
    /**
     * The endpoint configuration to indicate the types of endpoints an API (RestApi) or its custom domain name (DomainName) has and the IP address types that can invoke it.
     */
    public readonly endpointConfiguration!: pulumi.Output<outputs.apigateway.DomainNameV2EndpointConfiguration | undefined>;
    /**
     * A stringified JSON policy document that applies to the `execute-api` service for this DomainName regardless of the caller and Method configuration. You can use `Fn::ToJsonString` to enter your `policy` . For more information, see [Fn::ToJsonString](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ToJsonString.html) .
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ApiGateway::DomainNameV2` for more information about the expected schema for this property.
     */
    public readonly policy!: pulumi.Output<any | undefined>;
    /**
     * The valid routing modes are [BASE_PATH_MAPPING_ONLY], [ROUTING_RULE_THEN_BASE_PATH_MAPPING] and [ROUTING_RULE_ONLY]. All other inputs are invalid.
     */
    public readonly routingMode!: pulumi.Output<enums.apigateway.DomainNameV2RoutingMode | undefined>;
    /**
     * The Transport Layer Security (TLS) version + cipher suite for this DomainName. Only `TLS_1_2` is supported.
     */
    public readonly securityPolicy!: pulumi.Output<string | undefined>;
    /**
     * The collection of tags. Each tag element is associated with a given resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a DomainNameV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DomainNameV2Args, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["certificateArn"] = args?.certificateArn;
            resourceInputs["domainName"] = args?.domainName;
            resourceInputs["endpointConfiguration"] = args?.endpointConfiguration;
            resourceInputs["policy"] = args?.policy;
            resourceInputs["routingMode"] = args?.routingMode;
            resourceInputs["securityPolicy"] = args?.securityPolicy;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["domainNameArn"] = undefined /*out*/;
            resourceInputs["domainNameId"] = undefined /*out*/;
        } else {
            resourceInputs["certificateArn"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["domainNameArn"] = undefined /*out*/;
            resourceInputs["domainNameId"] = undefined /*out*/;
            resourceInputs["endpointConfiguration"] = undefined /*out*/;
            resourceInputs["policy"] = undefined /*out*/;
            resourceInputs["routingMode"] = undefined /*out*/;
            resourceInputs["securityPolicy"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["domainName", "endpointConfiguration", "securityPolicy"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DomainNameV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DomainNameV2 resource.
 */
export interface DomainNameV2Args {
    /**
     * The reference to an AWS -managed certificate that will be used by the private endpoint for this domain name. AWS Certificate Manager is the only supported source.
     */
    certificateArn?: pulumi.Input<string>;
    /**
     * Represents a custom domain name as a user-friendly host name of an API (RestApi).
     */
    domainName?: pulumi.Input<string>;
    /**
     * The endpoint configuration to indicate the types of endpoints an API (RestApi) or its custom domain name (DomainName) has and the IP address types that can invoke it.
     */
    endpointConfiguration?: pulumi.Input<inputs.apigateway.DomainNameV2EndpointConfigurationArgs>;
    /**
     * A stringified JSON policy document that applies to the `execute-api` service for this DomainName regardless of the caller and Method configuration. You can use `Fn::ToJsonString` to enter your `policy` . For more information, see [Fn::ToJsonString](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ToJsonString.html) .
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ApiGateway::DomainNameV2` for more information about the expected schema for this property.
     */
    policy?: any;
    /**
     * The valid routing modes are [BASE_PATH_MAPPING_ONLY], [ROUTING_RULE_THEN_BASE_PATH_MAPPING] and [ROUTING_RULE_ONLY]. All other inputs are invalid.
     */
    routingMode?: pulumi.Input<enums.apigateway.DomainNameV2RoutingMode>;
    /**
     * The Transport Layer Security (TLS) version + cipher suite for this DomainName. Only `TLS_1_2` is supported.
     */
    securityPolicy?: pulumi.Input<string>;
    /**
     * The collection of tags. Each tag element is associated with a given resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
