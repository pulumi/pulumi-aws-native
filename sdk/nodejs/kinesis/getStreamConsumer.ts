// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Kinesis::StreamConsumer
 */
export function getStreamConsumer(args: GetStreamConsumerArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamConsumerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:kinesis:getStreamConsumer", {
        "consumerArn": args.consumerArn,
    }, opts);
}

export interface GetStreamConsumerArgs {
    /**
     * The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.
     */
    consumerArn: string;
}

export interface GetStreamConsumerResult {
    /**
     * The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.
     */
    readonly consumerArn?: string;
    /**
     * Timestamp when the consumer was created.
     */
    readonly consumerCreationTimestamp?: string;
    /**
     * A consumer can't read data while in the CREATING or DELETING states. Valid Values: CREATING | DELETING | ACTIVE
     */
    readonly consumerStatus?: string;
}
/**
 * Resource Type definition for AWS::Kinesis::StreamConsumer
 */
export function getStreamConsumerOutput(args: GetStreamConsumerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamConsumerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:kinesis:getStreamConsumer", {
        "consumerArn": args.consumerArn,
    }, opts);
}

export interface GetStreamConsumerOutputArgs {
    /**
     * The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.
     */
    consumerArn: pulumi.Input<string>;
}
