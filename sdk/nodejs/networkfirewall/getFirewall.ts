// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource type definition for AWS::NetworkFirewall::Firewall
 */
export function getFirewall(args: GetFirewallArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:networkfirewall:getFirewall", {
        "firewallArn": args.firewallArn,
    }, opts);
}

export interface GetFirewallArgs {
    /**
     * The Amazon Resource Name (ARN) of the `Firewall` .
     */
    firewallArn: string;
}

export interface GetFirewallResult {
    /**
     * A flag indicating whether it is possible to delete the firewall. A setting of `TRUE` indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to `TRUE` .
     */
    readonly deleteProtection?: boolean;
    /**
     * A description of the firewall.
     */
    readonly description?: string;
    /**
     * The unique IDs of the firewall endpoints for all of the subnets that you attached to the firewall. The subnets are not listed in any particular order. For example: `["us-west-2c:vpce-111122223333", "us-west-2a:vpce-987654321098", "us-west-2b:vpce-012345678901"]` .
     */
    readonly endpointIds?: string[];
    /**
     * The Amazon Resource Name (ARN) of the `Firewall` .
     */
    readonly firewallArn?: string;
    /**
     * The name of the `Firewall` resource.
     */
    readonly firewallId?: string;
    /**
     * The Amazon Resource Name (ARN) of the firewall policy.
     *
     * The relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.
     */
    readonly firewallPolicyArn?: string;
    /**
     * A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
     */
    readonly firewallPolicyChangeProtection?: boolean;
    /**
     * A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
     */
    readonly subnetChangeProtection?: boolean;
    /**
     * The public subnets that Network Firewall is using for the firewall. Each subnet must belong to a different Availability Zone.
     */
    readonly subnetMappings?: outputs.networkfirewall.FirewallSubnetMapping[];
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource type definition for AWS::NetworkFirewall::Firewall
 */
export function getFirewallOutput(args: GetFirewallOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:networkfirewall:getFirewall", {
        "firewallArn": args.firewallArn,
    }, opts);
}

export interface GetFirewallOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the `Firewall` .
     */
    firewallArn: pulumi.Input<string>;
}
