// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource type definition for AWS::NetworkFirewall::VpcEndpointAssociation
 */
export class VpcEndpointAssociation extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpointAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VpcEndpointAssociation {
        return new VpcEndpointAssociation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:networkfirewall:VpcEndpointAssociation';

    /**
     * Returns true if the given object is an instance of VpcEndpointAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcEndpointAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcEndpointAssociation.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly endpointId!: pulumi.Output<string>;
    public readonly firewallArn!: pulumi.Output<string>;
    public readonly subnetMapping!: pulumi.Output<outputs.networkfirewall.VpcEndpointAssociationSubnetMapping>;
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    public /*out*/ readonly vpcEndpointAssociationArn!: pulumi.Output<string>;
    public /*out*/ readonly vpcEndpointAssociationId!: pulumi.Output<string>;
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a VpcEndpointAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcEndpointAssociationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.firewallArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallArn'");
            }
            if ((!args || args.subnetMapping === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetMapping'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["firewallArn"] = args ? args.firewallArn : undefined;
            resourceInputs["subnetMapping"] = args ? args.subnetMapping : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["endpointId"] = undefined /*out*/;
            resourceInputs["vpcEndpointAssociationArn"] = undefined /*out*/;
            resourceInputs["vpcEndpointAssociationId"] = undefined /*out*/;
        } else {
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["endpointId"] = undefined /*out*/;
            resourceInputs["firewallArn"] = undefined /*out*/;
            resourceInputs["subnetMapping"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpcEndpointAssociationArn"] = undefined /*out*/;
            resourceInputs["vpcEndpointAssociationId"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["description", "firewallArn", "subnetMapping", "vpcId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(VpcEndpointAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VpcEndpointAssociation resource.
 */
export interface VpcEndpointAssociationArgs {
    description?: pulumi.Input<string>;
    firewallArn: pulumi.Input<string>;
    subnetMapping: pulumi.Input<inputs.networkfirewall.VpcEndpointAssociationSubnetMappingArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    vpcId: pulumi.Input<string>;
}
