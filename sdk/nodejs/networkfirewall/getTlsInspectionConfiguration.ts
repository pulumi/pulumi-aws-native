// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource type definition for AWS::NetworkFirewall::TLSInspectionConfiguration
 */
export function getTlsInspectionConfiguration(args: GetTlsInspectionConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsInspectionConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:networkfirewall:getTlsInspectionConfiguration", {
        "tlsInspectionConfigurationArn": args.tlsInspectionConfigurationArn,
    }, opts);
}

export interface GetTlsInspectionConfigurationArgs {
    /**
     * The Amazon Resource Name (ARN) of the TLS inspection configuration.
     */
    tlsInspectionConfigurationArn: string;
}

export interface GetTlsInspectionConfigurationResult {
    /**
     * A description of the TLS inspection configuration.
     */
    readonly description?: string;
    /**
     * The key:value pairs to associate with the resource.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The object that defines a TLS inspection configuration. AWS Network Firewall uses TLS inspection configurations to decrypt your firewall's inbound and outbound SSL/TLS traffic. After decryption, AWS Network Firewall inspects the traffic according to your firewall policy's stateful rules, and then re-encrypts it before sending it to its destination. You can enable inspection of your firewall's inbound traffic, outbound traffic, or both. To use TLS inspection with your firewall, you must first import or provision certificates using AWS Certificate Manager , create a TLS inspection configuration, add that configuration to a new firewall policy, and then associate that policy with your firewall. For more information about using TLS inspection configurations, see [Inspecting SSL/TLS traffic with TLS inspection configurations](https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection.html) in the *AWS Network Firewall Developer Guide* .
     */
    readonly tlsInspectionConfiguration?: outputs.networkfirewall.TlsInspectionConfigurationTlsInspectionConfiguration;
    /**
     * The Amazon Resource Name (ARN) of the TLS inspection configuration.
     */
    readonly tlsInspectionConfigurationArn?: string;
    /**
     * A unique identifier for the TLS inspection configuration. This ID is returned in the responses to create and list commands. You provide it to operations such as update and delete.
     */
    readonly tlsInspectionConfigurationId?: string;
}
/**
 * Resource type definition for AWS::NetworkFirewall::TLSInspectionConfiguration
 */
export function getTlsInspectionConfigurationOutput(args: GetTlsInspectionConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsInspectionConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getTlsInspectionConfiguration(a, opts))
}

export interface GetTlsInspectionConfigurationOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the TLS inspection configuration.
     */
    tlsInspectionConfigurationArn: pulumi.Input<string>;
}
