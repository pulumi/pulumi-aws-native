// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource type definition for AWS::NetworkFirewall::FirewallPolicy
 */
export class FirewallPolicy extends pulumi.CustomResource {
    /**
     * Get an existing FirewallPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FirewallPolicy {
        return new FirewallPolicy(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:networkfirewall:FirewallPolicy';

    /**
     * Returns true if the given object is an instance of FirewallPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallPolicy.__pulumiType;
    }

    /**
     * A description of the firewall policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The traffic filtering behavior of a firewall policy, defined in a collection of stateless and stateful rule groups and other settings.
     */
    public readonly firewallPolicy!: pulumi.Output<outputs.networkfirewall.FirewallPolicy>;
    /**
     * The Amazon Resource Name (ARN) of the firewall policy.
     */
    public /*out*/ readonly firewallPolicyArn!: pulumi.Output<string>;
    /**
     * The unique ID of the firewall policy resource.
     */
    public /*out*/ readonly firewallPolicyId!: pulumi.Output<string>;
    /**
     * The descriptive name of the firewall policy. You can't change the name of a firewall policy after you create it.
     */
    public readonly firewallPolicyName!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a FirewallPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallPolicyArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.firewallPolicy === undefined && !opts.urn) {
                throw new Error("Missing required property 'firewallPolicy'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["firewallPolicy"] = args?.firewallPolicy;
            resourceInputs["firewallPolicyName"] = args?.firewallPolicyName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["firewallPolicyArn"] = undefined /*out*/;
            resourceInputs["firewallPolicyId"] = undefined /*out*/;
        } else {
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["firewallPolicy"] = undefined /*out*/;
            resourceInputs["firewallPolicyArn"] = undefined /*out*/;
            resourceInputs["firewallPolicyId"] = undefined /*out*/;
            resourceInputs["firewallPolicyName"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["firewallPolicyName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(FirewallPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a FirewallPolicy resource.
 */
export interface FirewallPolicyArgs {
    /**
     * A description of the firewall policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The traffic filtering behavior of a firewall policy, defined in a collection of stateless and stateful rule groups and other settings.
     */
    firewallPolicy: pulumi.Input<inputs.networkfirewall.FirewallPolicyArgs>;
    /**
     * The descriptive name of the firewall policy. You can't change the name of a firewall policy after you create it.
     */
    firewallPolicyName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
