// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IVS::RecordingConfiguration
 */
export function getRecordingConfiguration(args: GetRecordingConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetRecordingConfigurationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:ivs:getRecordingConfiguration", {
        "arn": args.arn,
    }, opts);
}

export interface GetRecordingConfigurationArgs {
    /**
     * Recording Configuration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn: string;
}

export interface GetRecordingConfigurationResult {
    /**
     * Recording Configuration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    readonly arn?: string;
    /**
     * Recording Configuration State.
     */
    readonly state?: enums.ivs.RecordingConfigurationState;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    readonly tags?: outputs.ivs.RecordingConfigurationTag[];
}

export function getRecordingConfigurationOutput(args: GetRecordingConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecordingConfigurationResult> {
    return pulumi.output(args).apply(a => getRecordingConfiguration(a, opts))
}

export interface GetRecordingConfigurationOutputArgs {
    /**
     * Recording Configuration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn: pulumi.Input<string>;
}
