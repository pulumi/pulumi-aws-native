// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Transfer::User
 */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:transfer:getUser", {
        "id": args.id,
    }, opts);
}

export interface GetUserArgs {
    id: string;
}

export interface GetUserResult {
    readonly arn?: string;
    readonly homeDirectory?: string;
    readonly homeDirectoryMappings?: outputs.transfer.UserHomeDirectoryMapEntry[];
    readonly homeDirectoryType?: string;
    readonly id?: string;
    readonly policy?: string;
    readonly posixProfile?: outputs.transfer.UserPosixProfile;
    readonly role?: string;
    readonly sshPublicKeys?: outputs.transfer.UserSshPublicKey[];
    readonly tags?: outputs.transfer.UserTag[];
}

export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply(a => getUser(a, opts))
}

export interface GetUserOutputArgs {
    id: pulumi.Input<string>;
}
