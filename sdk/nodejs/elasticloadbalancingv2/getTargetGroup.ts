// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ElasticLoadBalancingV2::TargetGroup
 */
export function getTargetGroup(args: GetTargetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetTargetGroupResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:elasticloadbalancingv2:getTargetGroup", {
        "id": args.id,
    }, opts);
}

export interface GetTargetGroupArgs {
    id: string;
}

export interface GetTargetGroupResult {
    readonly healthCheckEnabled?: boolean;
    readonly healthCheckIntervalSeconds?: number;
    readonly healthCheckPath?: string;
    readonly healthCheckPort?: string;
    readonly healthCheckProtocol?: string;
    readonly healthCheckTimeoutSeconds?: number;
    readonly healthyThresholdCount?: number;
    readonly id?: string;
    readonly loadBalancerArns?: string[];
    readonly matcher?: outputs.elasticloadbalancingv2.TargetGroupMatcher;
    readonly tags?: outputs.elasticloadbalancingv2.TargetGroupTag[];
    readonly targetGroupAttributes?: outputs.elasticloadbalancingv2.TargetGroupAttribute[];
    readonly targetGroupFullName?: string;
    readonly targetGroupName?: string;
    readonly targets?: outputs.elasticloadbalancingv2.TargetGroupTargetDescription[];
    readonly unhealthyThresholdCount?: number;
}

export function getTargetGroupOutput(args: GetTargetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTargetGroupResult> {
    return pulumi.output(args).apply(a => getTargetGroup(a, opts))
}

export interface GetTargetGroupOutputArgs {
    id: pulumi.Input<string>;
}
