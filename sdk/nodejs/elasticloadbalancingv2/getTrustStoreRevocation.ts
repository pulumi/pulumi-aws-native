// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ElasticLoadBalancingV2::TrustStoreRevocation
 */
export function getTrustStoreRevocation(args: GetTrustStoreRevocationArgs, opts?: pulumi.InvokeOptions): Promise<GetTrustStoreRevocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:elasticloadbalancingv2:getTrustStoreRevocation", {
        "revocationId": args.revocationId,
        "trustStoreArn": args.trustStoreArn,
    }, opts);
}

export interface GetTrustStoreRevocationArgs {
    /**
     * The ID associated with the revocation.
     */
    revocationId: number;
    /**
     * The Amazon Resource Name (ARN) of the trust store.
     */
    trustStoreArn: string;
}

export interface GetTrustStoreRevocationResult {
    /**
     * The ID associated with the revocation.
     */
    readonly revocationId?: number;
    /**
     * The data associated with a trust store revocation
     */
    readonly trustStoreRevocations?: outputs.elasticloadbalancingv2.TrustStoreRevocation[];
}
/**
 * Resource Type definition for AWS::ElasticLoadBalancingV2::TrustStoreRevocation
 */
export function getTrustStoreRevocationOutput(args: GetTrustStoreRevocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrustStoreRevocationResult> {
    return pulumi.output(args).apply((a: any) => getTrustStoreRevocation(a, opts))
}

export interface GetTrustStoreRevocationOutputArgs {
    /**
     * The ID associated with the revocation.
     */
    revocationId: pulumi.Input<number>;
    /**
     * The Amazon Resource Name (ARN) of the trust store.
     */
    trustStoreArn: pulumi.Input<string>;
}
