// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Configures the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
 */
export class AccountAuditConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing AccountAuditConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AccountAuditConfiguration {
        return new AccountAuditConfiguration(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:iot:AccountAuditConfiguration';

    /**
     * Returns true if the given object is an instance of AccountAuditConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountAuditConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountAuditConfiguration.__pulumiType;
    }

    /**
     * Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     */
    public readonly accountId!: pulumi.Output<string>;
    public readonly auditCheckConfigurations!: pulumi.Output<outputs.iot.AccountAuditConfigurationAuditCheckConfigurations>;
    public readonly auditNotificationTargetConfigurations!: pulumi.Output<outputs.iot.AccountAuditConfigurationAuditNotificationTargetConfigurations | undefined>;
    /**
     * The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.
     */
    public readonly roleArn!: pulumi.Output<string>;

    /**
     * Create a AccountAuditConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountAuditConfigurationArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.auditCheckConfigurations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'auditCheckConfigurations'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["auditCheckConfigurations"] = args ? args.auditCheckConfigurations : undefined;
            inputs["auditNotificationTargetConfigurations"] = args ? args.auditNotificationTargetConfigurations : undefined;
            inputs["roleArn"] = args ? args.roleArn : undefined;
        } else {
            inputs["accountId"] = undefined /*out*/;
            inputs["auditCheckConfigurations"] = undefined /*out*/;
            inputs["auditNotificationTargetConfigurations"] = undefined /*out*/;
            inputs["roleArn"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AccountAuditConfiguration.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a AccountAuditConfiguration resource.
 */
export interface AccountAuditConfigurationArgs {
    /**
     * Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     */
    accountId: pulumi.Input<string>;
    auditCheckConfigurations: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationsArgs>;
    auditNotificationTargetConfigurations?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs>;
    /**
     * The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.
     */
    roleArn: pulumi.Input<string>;
}
