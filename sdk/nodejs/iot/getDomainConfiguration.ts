// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Create and manage a Domain Configuration
 */
export function getDomainConfiguration(args: GetDomainConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainConfigurationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:iot:getDomainConfiguration", {
        "domainConfigurationName": args.domainConfigurationName,
    }, opts);
}

export interface GetDomainConfigurationArgs {
    domainConfigurationName: string;
}

export interface GetDomainConfigurationResult {
    readonly arn?: string;
    readonly authorizerConfig?: outputs.iot.DomainConfigurationAuthorizerConfig;
    readonly domainConfigurationStatus?: enums.iot.DomainConfigurationStatus;
    readonly domainType?: enums.iot.DomainConfigurationDomainType;
    readonly serverCertificates?: outputs.iot.DomainConfigurationServerCertificateSummary[];
    readonly tags?: outputs.iot.DomainConfigurationTag[];
}

export function getDomainConfigurationOutput(args: GetDomainConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainConfigurationResult> {
    return pulumi.output(args).apply(a => getDomainConfiguration(a, opts))
}

export interface GetDomainConfigurationOutputArgs {
    domainConfigurationName: pulumi.Input<string>;
}
