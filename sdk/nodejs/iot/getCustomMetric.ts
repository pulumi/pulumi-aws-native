// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * A custom metric published by your devices to Device Defender.
 */
export function getCustomMetric(args: GetCustomMetricArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomMetricResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:iot:getCustomMetric", {
        "metricName": args.metricName,
    }, opts);
}

export interface GetCustomMetricArgs {
    /**
     * The name of the custom metric. This will be used in the metric report submitted from the device/thing. Shouldn't begin with aws: . Cannot be updated once defined.
     */
    metricName: string;
}

export interface GetCustomMetricResult {
    /**
     * Field represents a friendly name in the console for the custom metric; it doesn't have to be unique. Don't use this name as the metric identifier in the device metric report. Can be updated once defined.
     */
    readonly displayName?: string;
    /**
     * The Amazon Resource Number (ARN) of the custom metric.
     */
    readonly metricArn?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.iot.CustomMetricTag[];
}

export function getCustomMetricOutput(args: GetCustomMetricOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomMetricResult> {
    return pulumi.output(args).apply(a => getCustomMetric(a, opts))
}

export interface GetCustomMetricOutputArgs {
    /**
     * The name of the custom metric. This will be used in the metric report submitted from the device/thing. Shouldn't begin with aws: . Cannot be updated once defined.
     */
    metricName: pulumi.Input<string>;
}
