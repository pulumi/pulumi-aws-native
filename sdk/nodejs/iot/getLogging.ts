// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Logging Options enable you to configure your IoT V2 logging role and default logging level so that you can monitor progress events logs as it passes from your devices through Iot core service.
 */
export function getLogging(args: GetLoggingArgs, opts?: pulumi.InvokeOptions): Promise<GetLoggingResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:iot:getLogging", {
        "accountId": args.accountId,
    }, opts);
}

export interface GetLoggingArgs {
    /**
     * Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     */
    accountId: string;
}

export interface GetLoggingResult {
    /**
     * The log level to use. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED.
     */
    readonly defaultLogLevel?: enums.iot.LoggingDefaultLogLevel;
    /**
     * The ARN of the role that allows IoT to write to Cloudwatch logs.
     */
    readonly roleArn?: string;
}

export function getLoggingOutput(args: GetLoggingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoggingResult> {
    return pulumi.output(args).apply(a => getLogging(a, opts))
}

export interface GetLoggingOutputArgs {
    /**
     * Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     */
    accountId: pulumi.Input<string>;
}
