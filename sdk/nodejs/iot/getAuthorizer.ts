// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Creates an authorizer.
 */
export function getAuthorizer(args: GetAuthorizerArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorizerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iot:getAuthorizer", {
        "authorizerName": args.authorizerName,
    }, opts);
}

export interface GetAuthorizerArgs {
    authorizerName: string;
}

export interface GetAuthorizerResult {
    readonly arn?: string;
    readonly authorizerFunctionArn?: string;
    readonly enableCachingForHttp?: boolean;
    readonly status?: enums.iot.AuthorizerStatus;
    readonly tags?: outputs.iot.AuthorizerTag[];
    readonly tokenKeyName?: string;
    readonly tokenSigningPublicKeys?: {[key: string]: string};
}
/**
 * Creates an authorizer.
 */
export function getAuthorizerOutput(args: GetAuthorizerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthorizerResult> {
    return pulumi.output(args).apply((a: any) => getAuthorizer(a, opts))
}

export interface GetAuthorizerOutputArgs {
    authorizerName: pulumi.Input<string>;
}
