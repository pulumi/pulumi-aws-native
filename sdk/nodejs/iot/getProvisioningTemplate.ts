// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Creates a fleet provisioning template.
 */
export function getProvisioningTemplate(args: GetProvisioningTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetProvisioningTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iot:getProvisioningTemplate", {
        "templateName": args.templateName,
    }, opts);
}

export interface GetProvisioningTemplateArgs {
    /**
     * The name of the fleet provisioning template.
     */
    templateName: string;
}

export interface GetProvisioningTemplateResult {
    /**
     * The description of the fleet provisioning template.
     */
    readonly description?: string;
    /**
     * True to enable the fleet provisioning template, otherwise false.
     */
    readonly enabled?: boolean;
    /**
     * Creates a pre-provisioning hook template.
     */
    readonly preProvisioningHook?: outputs.iot.ProvisioningTemplateProvisioningHook;
    /**
     * The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
     */
    readonly provisioningRoleArn?: string;
    /**
     * Metadata that can be used to manage the fleet provisioning template.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The ARN that identifies the provisioning template.
     */
    readonly templateArn?: string;
    /**
     * The JSON formatted contents of the fleet provisioning template version.
     */
    readonly templateBody?: string;
}
/**
 * Creates a fleet provisioning template.
 */
export function getProvisioningTemplateOutput(args: GetProvisioningTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProvisioningTemplateResult> {
    return pulumi.output(args).apply((a: any) => getProvisioningTemplate(a, opts))
}

export interface GetProvisioningTemplateOutputArgs {
    /**
     * The name of the fleet provisioning template.
     */
    templateName: pulumi.Input<string>;
}
