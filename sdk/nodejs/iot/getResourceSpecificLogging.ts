// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource-specific logging allows you to specify a logging level for a specific thing group.
 */
export function getResourceSpecificLogging(args: GetResourceSpecificLoggingArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceSpecificLoggingResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:iot:getResourceSpecificLogging", {
        "targetId": args.targetId,
    }, opts);
}

export interface GetResourceSpecificLoggingArgs {
    /**
     * Unique Id for a Target (TargetType:TargetName), this will be internally built to serve as primary identifier for a log target.
     */
    targetId: string;
}

export interface GetResourceSpecificLoggingResult {
    /**
     * The log level for a specific target. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED.
     */
    readonly logLevel?: enums.iot.ResourceSpecificLoggingLogLevel;
    /**
     * Unique Id for a Target (TargetType:TargetName), this will be internally built to serve as primary identifier for a log target.
     */
    readonly targetId?: string;
}

export function getResourceSpecificLoggingOutput(args: GetResourceSpecificLoggingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceSpecificLoggingResult> {
    return pulumi.output(args).apply(a => getResourceSpecificLogging(a, opts))
}

export interface GetResourceSpecificLoggingOutputArgs {
    /**
     * Unique Id for a Target (TargetType:TargetName), this will be internally built to serve as primary identifier for a log target.
     */
    targetId: pulumi.Input<string>;
}
