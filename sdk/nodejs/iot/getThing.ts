// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IoT::Thing
 */
export function getThing(args: GetThingArgs, opts?: pulumi.InvokeOptions): Promise<GetThingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iot:getThing", {
        "thingName": args.thingName,
    }, opts);
}

export interface GetThingArgs {
    /**
     * The name of the thing to update.
     *
     * You can't change a thing's name. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.
     */
    thingName: string;
}

export interface GetThingResult {
    /**
     * The Amazon Resource Name (ARN) of the AWS IoT thing, such as `arn:aws:iot:us-east-2:123456789012:thing/MyThing` .
     */
    readonly arn?: string;
    /**
     * The AttributePayload property specifies up to three attributes for an AWS IoT as key-value pairs. AttributePayload is a property of the [AWS::IoT::Thing](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thing.html) resource.
     */
    readonly attributePayload?: outputs.iot.ThingAttributePayload;
    /**
     * The Id of this thing.
     */
    readonly id?: string;
}
/**
 * Resource Type definition for AWS::IoT::Thing
 */
export function getThingOutput(args: GetThingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetThingResult> {
    return pulumi.output(args).apply((a: any) => getThing(a, opts))
}

export interface GetThingOutputArgs {
    /**
     * The name of the thing to update.
     *
     * You can't change a thing's name. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.
     */
    thingName: pulumi.Input<string>;
}
