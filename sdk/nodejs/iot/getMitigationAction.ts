// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Mitigation actions can be used to take actions to mitigate issues that were found in an Audit finding or Detect violation.
 */
export function getMitigationAction(args: GetMitigationActionArgs, opts?: pulumi.InvokeOptions): Promise<GetMitigationActionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:iot:getMitigationAction", {
        "actionName": args.actionName,
    }, opts);
}

export interface GetMitigationActionArgs {
    /**
     * A unique identifier for the mitigation action.
     */
    actionName: string;
}

export interface GetMitigationActionResult {
    readonly actionParams?: outputs.iot.MitigationActionActionParams;
    readonly mitigationActionArn?: string;
    readonly mitigationActionId?: string;
    readonly roleArn?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.iot.MitigationActionTag[];
}

export function getMitigationActionOutput(args: GetMitigationActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMitigationActionResult> {
    return pulumi.output(args).apply(a => getMitigationAction(a, opts))
}

export interface GetMitigationActionOutputArgs {
    /**
     * A unique identifier for the mitigation action.
     */
    actionName: pulumi.Input<string>;
}
