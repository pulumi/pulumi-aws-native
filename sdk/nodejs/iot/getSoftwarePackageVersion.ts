// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * resource definition
 */
export function getSoftwarePackageVersion(args: GetSoftwarePackageVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwarePackageVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iot:getSoftwarePackageVersion", {
        "packageName": args.packageName,
        "versionName": args.versionName,
    }, opts);
}

export interface GetSoftwarePackageVersionArgs {
    packageName: string;
    versionName: string;
}

export interface GetSoftwarePackageVersionResult {
    readonly attributes?: {[key: string]: string};
    readonly description?: string;
    /**
     * Error reason for a package version failure during creation or update.
     */
    readonly errorReason?: string;
    /**
     * The Amazon Resource Name (ARN) for the package.
     */
    readonly packageVersionArn?: string;
    /**
     * The status of the package version. For more information, see [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle) .
     */
    readonly status?: enums.iot.SoftwarePackageVersionPackageVersionStatus;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * resource definition
 */
export function getSoftwarePackageVersionOutput(args: GetSoftwarePackageVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwarePackageVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:iot:getSoftwarePackageVersion", {
        "packageName": args.packageName,
        "versionName": args.versionName,
    }, opts);
}

export interface GetSoftwarePackageVersionOutputArgs {
    packageName: pulumi.Input<string>;
    versionName: pulumi.Input<string>;
}
