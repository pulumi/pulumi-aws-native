// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::IoT::Policy
 */
export function getPolicy(args: GetPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:iot:getPolicy", {
        "id": args.id,
    }, opts);
}

export interface GetPolicyArgs {
    /**
     * The name of this policy.
     */
    id: string;
}

export interface GetPolicyResult {
    /**
     * The Amazon Resource Name (ARN) of the AWS IoT policy, such as `arn:aws:iot:us-east-2:123456789012:policy/MyPolicy` .
     */
    readonly arn?: string;
    /**
     * The name of this policy.
     */
    readonly id?: string;
    /**
     * The JSON document that describes the policy.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::IoT::Policy` for more information about the expected schema for this property.
     */
    readonly policyDocument?: any;
    /**
     * A set of key/value pairs that are used to manage the resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::IoT::Policy
 */
export function getPolicyOutput(args: GetPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyResult> {
    return pulumi.output(args).apply((a: any) => getPolicy(a, opts))
}

export interface GetPolicyOutputArgs {
    /**
     * The name of this policy.
     */
    id: pulumi.Input<string>;
}
