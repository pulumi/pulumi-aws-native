// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetIdentitySourceArgs, GetIdentitySourceResult, GetIdentitySourceOutputArgs } from "./getIdentitySource";
export const getIdentitySource: typeof import("./getIdentitySource").getIdentitySource = null as any;
export const getIdentitySourceOutput: typeof import("./getIdentitySource").getIdentitySourceOutput = null as any;
utilities.lazyLoad(exports, ["getIdentitySource","getIdentitySourceOutput"], () => require("./getIdentitySource"));

export { GetPolicyArgs, GetPolicyResult, GetPolicyOutputArgs } from "./getPolicy";
export const getPolicy: typeof import("./getPolicy").getPolicy = null as any;
export const getPolicyOutput: typeof import("./getPolicy").getPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getPolicy","getPolicyOutput"], () => require("./getPolicy"));

export { GetPolicyStoreArgs, GetPolicyStoreResult, GetPolicyStoreOutputArgs } from "./getPolicyStore";
export const getPolicyStore: typeof import("./getPolicyStore").getPolicyStore = null as any;
export const getPolicyStoreOutput: typeof import("./getPolicyStore").getPolicyStoreOutput = null as any;
utilities.lazyLoad(exports, ["getPolicyStore","getPolicyStoreOutput"], () => require("./getPolicyStore"));

export { GetPolicyTemplateArgs, GetPolicyTemplateResult, GetPolicyTemplateOutputArgs } from "./getPolicyTemplate";
export const getPolicyTemplate: typeof import("./getPolicyTemplate").getPolicyTemplate = null as any;
export const getPolicyTemplateOutput: typeof import("./getPolicyTemplate").getPolicyTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getPolicyTemplate","getPolicyTemplateOutput"], () => require("./getPolicyTemplate"));

export { IdentitySourceArgs } from "./identitySource";
export type IdentitySource = import("./identitySource").IdentitySource;
export const IdentitySource: typeof import("./identitySource").IdentitySource = null as any;
utilities.lazyLoad(exports, ["IdentitySource"], () => require("./identitySource"));

export { PolicyArgs } from "./policy";
export type Policy = import("./policy").Policy;
export const Policy: typeof import("./policy").Policy = null as any;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));

export { PolicyStoreArgs } from "./policyStore";
export type PolicyStore = import("./policyStore").PolicyStore;
export const PolicyStore: typeof import("./policyStore").PolicyStore = null as any;
utilities.lazyLoad(exports, ["PolicyStore"], () => require("./policyStore"));

export { PolicyTemplateArgs } from "./policyTemplate";
export type PolicyTemplate = import("./policyTemplate").PolicyTemplate;
export const PolicyTemplate: typeof import("./policyTemplate").PolicyTemplate = null as any;
utilities.lazyLoad(exports, ["PolicyTemplate"], () => require("./policyTemplate"));


// Export enums:
export * from "../types/enums/verifiedpermissions";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:verifiedpermissions:IdentitySource":
                return new IdentitySource(name, <any>undefined, { urn })
            case "aws-native:verifiedpermissions:Policy":
                return new Policy(name, <any>undefined, { urn })
            case "aws-native:verifiedpermissions:PolicyStore":
                return new PolicyStore(name, <any>undefined, { urn })
            case "aws-native:verifiedpermissions:PolicyTemplate":
                return new PolicyTemplate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "verifiedpermissions", _module)
