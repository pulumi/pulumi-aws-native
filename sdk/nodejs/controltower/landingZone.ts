// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::ControlTower::LandingZone Resource Type
 */
export class LandingZone extends pulumi.CustomResource {
    /**
     * Get an existing LandingZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LandingZone {
        return new LandingZone(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:controltower:LandingZone';

    /**
     * Returns true if the given object is an instance of LandingZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LandingZone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LandingZone.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly driftStatus!: pulumi.Output<enums.controltower.LandingZoneDriftStatus>;
    public /*out*/ readonly landingZoneIdentifier!: pulumi.Output<string>;
    public /*out*/ readonly latestAvailableVersion!: pulumi.Output<string>;
    public readonly manifest!: pulumi.Output<any>;
    public /*out*/ readonly status!: pulumi.Output<enums.controltower.LandingZoneStatus>;
    public readonly tags!: pulumi.Output<outputs.controltower.LandingZoneTag[] | undefined>;
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a LandingZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LandingZoneArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.manifest === undefined) && !opts.urn) {
                throw new Error("Missing required property 'manifest'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["manifest"] = args ? args.manifest : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["driftStatus"] = undefined /*out*/;
            resourceInputs["landingZoneIdentifier"] = undefined /*out*/;
            resourceInputs["latestAvailableVersion"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["driftStatus"] = undefined /*out*/;
            resourceInputs["landingZoneIdentifier"] = undefined /*out*/;
            resourceInputs["latestAvailableVersion"] = undefined /*out*/;
            resourceInputs["manifest"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LandingZone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LandingZone resource.
 */
export interface LandingZoneArgs {
    manifest: any;
    tags?: pulumi.Input<pulumi.Input<inputs.controltower.LandingZoneTagArgs>[]>;
    version: pulumi.Input<string>;
}
