// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::ControlTower::EnabledBaseline Resource Type
 */
export class EnabledBaseline extends pulumi.CustomResource {
    /**
     * Get an existing EnabledBaseline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EnabledBaseline {
        return new EnabledBaseline(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:controltower:EnabledBaseline';

    /**
     * Returns true if the given object is an instance of EnabledBaseline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnabledBaseline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnabledBaseline.__pulumiType;
    }

    public readonly baselineIdentifier!: pulumi.Output<string>;
    public readonly baselineVersion!: pulumi.Output<string>;
    public /*out*/ readonly enabledBaselineIdentifier!: pulumi.Output<string>;
    public readonly parameters!: pulumi.Output<outputs.controltower.EnabledBaselineParameter[] | undefined>;
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    public readonly targetIdentifier!: pulumi.Output<string>;

    /**
     * Create a EnabledBaseline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnabledBaselineArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.baselineIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baselineIdentifier'");
            }
            if ((!args || args.baselineVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baselineVersion'");
            }
            if ((!args || args.targetIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetIdentifier'");
            }
            resourceInputs["baselineIdentifier"] = args ? args.baselineIdentifier : undefined;
            resourceInputs["baselineVersion"] = args ? args.baselineVersion : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetIdentifier"] = args ? args.targetIdentifier : undefined;
            resourceInputs["enabledBaselineIdentifier"] = undefined /*out*/;
        } else {
            resourceInputs["baselineIdentifier"] = undefined /*out*/;
            resourceInputs["baselineVersion"] = undefined /*out*/;
            resourceInputs["enabledBaselineIdentifier"] = undefined /*out*/;
            resourceInputs["parameters"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["targetIdentifier"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["baselineIdentifier", "targetIdentifier"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(EnabledBaseline.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EnabledBaseline resource.
 */
export interface EnabledBaselineArgs {
    baselineIdentifier: pulumi.Input<string>;
    baselineVersion: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.controltower.EnabledBaselineParameterArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    targetIdentifier: pulumi.Input<string>;
}
