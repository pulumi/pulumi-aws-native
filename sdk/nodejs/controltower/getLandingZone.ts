// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::ControlTower::LandingZone Resource Type
 */
export function getLandingZone(args: GetLandingZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetLandingZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:controltower:getLandingZone", {
        "landingZoneIdentifier": args.landingZoneIdentifier,
    }, opts);
}

export interface GetLandingZoneArgs {
    landingZoneIdentifier: string;
}

export interface GetLandingZoneResult {
    readonly arn?: string;
    readonly driftStatus?: enums.controltower.LandingZoneDriftStatus;
    readonly landingZoneIdentifier?: string;
    readonly latestAvailableVersion?: string;
    /**
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ControlTower::LandingZone` for more information about the expected schema for this property.
     */
    readonly manifest?: any;
    readonly status?: enums.controltower.LandingZoneStatus;
    readonly tags?: outputs.Tag[];
    readonly version?: string;
}
/**
 * Definition of AWS::ControlTower::LandingZone Resource Type
 */
export function getLandingZoneOutput(args: GetLandingZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLandingZoneResult> {
    return pulumi.output(args).apply((a: any) => getLandingZone(a, opts))
}

export interface GetLandingZoneOutputArgs {
    landingZoneIdentifier: pulumi.Input<string>;
}
