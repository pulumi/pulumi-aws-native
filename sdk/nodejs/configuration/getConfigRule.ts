// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Config::ConfigRule
 */
export function getConfigRule(args: GetConfigRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigRuleResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:configuration:getConfigRule", {
        "configRuleId": args.configRuleId,
    }, opts);
}

export interface GetConfigRuleArgs {
    configRuleId: string;
}

export interface GetConfigRuleResult {
    readonly arn?: string;
    readonly complianceType?: string;
    readonly configRuleId?: string;
    readonly description?: string;
    readonly inputParameters?: any;
    readonly maximumExecutionFrequency?: string;
    readonly scope?: outputs.configuration.ConfigRuleScope;
    readonly source?: outputs.configuration.ConfigRuleSource;
}

export function getConfigRuleOutput(args: GetConfigRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigRuleResult> {
    return pulumi.output(args).apply(a => getConfigRule(a, opts))
}

export interface GetConfigRuleOutputArgs {
    configRuleId: pulumi.Input<string>;
}
