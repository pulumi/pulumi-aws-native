// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html
 */
export class Policy extends pulumi.CustomResource {
    /**
     * Get an existing Policy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Policy {
        return new Policy(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:FMS:Policy';

    /**
     * Returns true if the given object is an instance of Policy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Policy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Policy.__pulumiType;
    }

    public /*out*/ readonly Arn!: pulumi.Output<string>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-deleteallpolicyresources
     */
    public readonly DeleteAllPolicyResources!: pulumi.Output<boolean | undefined>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-excludemap
     */
    public readonly ExcludeMap!: pulumi.Output<outputs.FMS.PolicyIEMap | undefined>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-excluderesourcetags
     */
    public readonly ExcludeResourceTags!: pulumi.Output<boolean>;
    public /*out*/ readonly Id!: pulumi.Output<string>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-includemap
     */
    public readonly IncludeMap!: pulumi.Output<outputs.FMS.PolicyIEMap | undefined>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-policyname
     */
    public readonly PolicyName!: pulumi.Output<string>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-remediationenabled
     */
    public readonly RemediationEnabled!: pulumi.Output<boolean>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetags
     */
    public readonly ResourceTags!: pulumi.Output<outputs.FMS.PolicyResourceTag[] | undefined>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetype
     */
    public readonly ResourceType!: pulumi.Output<string>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetypelist
     */
    public readonly ResourceTypeList!: pulumi.Output<string[] | undefined>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-securityservicepolicydata
     */
    public readonly SecurityServicePolicyData!: pulumi.Output<any | string>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-tags
     */
    public readonly Tags!: pulumi.Output<outputs.FMS.PolicyPolicyTag[] | undefined>;

    /**
     * Create a Policy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if ((!args || args.ExcludeResourceTags === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'ExcludeResourceTags'");
            }
            if ((!args || args.PolicyName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'PolicyName'");
            }
            if ((!args || args.RemediationEnabled === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'RemediationEnabled'");
            }
            if ((!args || args.ResourceType === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'ResourceType'");
            }
            if ((!args || args.SecurityServicePolicyData === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'SecurityServicePolicyData'");
            }
            inputs["DeleteAllPolicyResources"] = args ? args.DeleteAllPolicyResources : undefined;
            inputs["ExcludeMap"] = args ? args.ExcludeMap : undefined;
            inputs["ExcludeResourceTags"] = args ? args.ExcludeResourceTags : undefined;
            inputs["IncludeMap"] = args ? args.IncludeMap : undefined;
            inputs["PolicyName"] = args ? args.PolicyName : undefined;
            inputs["RemediationEnabled"] = args ? args.RemediationEnabled : undefined;
            inputs["ResourceTags"] = args ? args.ResourceTags : undefined;
            inputs["ResourceType"] = args ? args.ResourceType : undefined;
            inputs["ResourceTypeList"] = args ? args.ResourceTypeList : undefined;
            inputs["SecurityServicePolicyData"] = args ? args.SecurityServicePolicyData : undefined;
            inputs["Tags"] = args ? args.Tags : undefined;
            inputs["Arn"] = undefined /*out*/;
            inputs["Id"] = undefined /*out*/;
        } else {
            inputs["Arn"] = undefined /*out*/;
            inputs["DeleteAllPolicyResources"] = undefined /*out*/;
            inputs["ExcludeMap"] = undefined /*out*/;
            inputs["ExcludeResourceTags"] = undefined /*out*/;
            inputs["Id"] = undefined /*out*/;
            inputs["IncludeMap"] = undefined /*out*/;
            inputs["PolicyName"] = undefined /*out*/;
            inputs["RemediationEnabled"] = undefined /*out*/;
            inputs["ResourceTags"] = undefined /*out*/;
            inputs["ResourceType"] = undefined /*out*/;
            inputs["ResourceTypeList"] = undefined /*out*/;
            inputs["SecurityServicePolicyData"] = undefined /*out*/;
            inputs["Tags"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Policy.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Policy resource.
 */
export interface PolicyArgs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-deleteallpolicyresources
     */
    readonly DeleteAllPolicyResources?: pulumi.Input<boolean>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-excludemap
     */
    readonly ExcludeMap?: pulumi.Input<inputs.FMS.PolicyIEMap>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-excluderesourcetags
     */
    readonly ExcludeResourceTags: pulumi.Input<boolean>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-includemap
     */
    readonly IncludeMap?: pulumi.Input<inputs.FMS.PolicyIEMap>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-policyname
     */
    readonly PolicyName: pulumi.Input<string>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-remediationenabled
     */
    readonly RemediationEnabled: pulumi.Input<boolean>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetags
     */
    readonly ResourceTags?: pulumi.Input<pulumi.Input<inputs.FMS.PolicyResourceTag>[]>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetype
     */
    readonly ResourceType: pulumi.Input<string>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetypelist
     */
    readonly ResourceTypeList?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-securityservicepolicydata
     */
    readonly SecurityServicePolicyData: pulumi.Input<any | string>;
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-tags
     */
    readonly Tags?: pulumi.Input<pulumi.Input<inputs.FMS.PolicyPolicyTag>[]>;
}
