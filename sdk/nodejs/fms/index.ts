// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetNotificationChannelArgs, GetNotificationChannelResult, GetNotificationChannelOutputArgs } from "./getNotificationChannel";
export const getNotificationChannel: typeof import("./getNotificationChannel").getNotificationChannel = null as any;
export const getNotificationChannelOutput: typeof import("./getNotificationChannel").getNotificationChannelOutput = null as any;

export { GetPolicyArgs, GetPolicyResult, GetPolicyOutputArgs } from "./getPolicy";
export const getPolicy: typeof import("./getPolicy").getPolicy = null as any;
export const getPolicyOutput: typeof import("./getPolicy").getPolicyOutput = null as any;

export { NotificationChannelArgs } from "./notificationChannel";
export type NotificationChannel = import("./notificationChannel").NotificationChannel;
export const NotificationChannel: typeof import("./notificationChannel").NotificationChannel = null as any;

export { PolicyArgs } from "./policy";
export type Policy = import("./policy").Policy;
export const Policy: typeof import("./policy").Policy = null as any;

utilities.lazyLoad(exports, ["getNotificationChannel","getNotificationChannelOutput"], () => require("./getNotificationChannel"));
utilities.lazyLoad(exports, ["getPolicy","getPolicyOutput"], () => require("./getPolicy"));
utilities.lazyLoad(exports, ["NotificationChannel"], () => require("./notificationChannel"));
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));

// Export enums:
export * from "../types/enums/fms";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:fms:NotificationChannel":
                return new NotificationChannel(name, <any>undefined, { urn })
            case "aws-native:fms:Policy":
                return new Policy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "fms", _module)
