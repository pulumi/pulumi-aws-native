// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SNS::Subscription
 */
export function getSubscription(args: GetSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:sns:getSubscription", {
        "arn": args.arn,
    }, opts);
}

export interface GetSubscriptionArgs {
    /**
     * Arn of the subscription
     */
    arn: string;
}

export interface GetSubscriptionResult {
    /**
     * Arn of the subscription
     */
    readonly arn?: string;
    /**
     * The delivery policy JSON assigned to the subscription. Enables the subscriber to define the message delivery retry strategy in the case of an HTTP/S endpoint subscribed to the topic.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Subscription` for more information about the expected schema for this property.
     */
    readonly deliveryPolicy?: any;
    /**
     * The filter policy JSON assigned to the subscription. Enables the subscriber to filter out unwanted messages.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Subscription` for more information about the expected schema for this property.
     */
    readonly filterPolicy?: any;
    /**
     * This attribute lets you choose the filtering scope by using one of the following string value types: MessageAttributes (default) and MessageBody.
     */
    readonly filterPolicyScope?: string;
    /**
     * When set to true, enables raw message delivery. Raw messages don't contain any JSON formatting and can be sent to Amazon SQS and HTTP/S endpoints.
     */
    readonly rawMessageDelivery?: boolean;
    /**
     * When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can't be delivered due to client errors are held in the dead-letter queue for further analysis or reprocessing.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Subscription` for more information about the expected schema for this property.
     */
    readonly redrivePolicy?: any;
    /**
     * Specifies whether Amazon SNS resends the notification to the subscription when a message's attribute changes.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Subscription` for more information about the expected schema for this property.
     */
    readonly replayPolicy?: any;
    /**
     * This property applies only to Amazon Data Firehose delivery stream subscriptions.
     */
    readonly subscriptionRoleArn?: string;
}
/**
 * Resource Type definition for AWS::SNS::Subscription
 */
export function getSubscriptionOutput(args: GetSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getSubscription(a, opts))
}

export interface GetSubscriptionOutputArgs {
    /**
     * Arn of the subscription
     */
    arn: pulumi.Input<string>;
}
