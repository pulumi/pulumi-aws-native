// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetSubscriptionArgs, GetSubscriptionResult, GetSubscriptionOutputArgs } from "./getSubscription";
export const getSubscription: typeof import("./getSubscription").getSubscription = null as any;
export const getSubscriptionOutput: typeof import("./getSubscription").getSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getSubscription","getSubscriptionOutput"], () => require("./getSubscription"));

export { GetTopicArgs, GetTopicResult, GetTopicOutputArgs } from "./getTopic";
export const getTopic: typeof import("./getTopic").getTopic = null as any;
export const getTopicOutput: typeof import("./getTopic").getTopicOutput = null as any;
utilities.lazyLoad(exports, ["getTopic","getTopicOutput"], () => require("./getTopic"));

export { GetTopicPolicyArgs, GetTopicPolicyResult, GetTopicPolicyOutputArgs } from "./getTopicPolicy";
export const getTopicPolicy: typeof import("./getTopicPolicy").getTopicPolicy = null as any;
export const getTopicPolicyOutput: typeof import("./getTopicPolicy").getTopicPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getTopicPolicy","getTopicPolicyOutput"], () => require("./getTopicPolicy"));

export { SubscriptionArgs } from "./subscription";
export type Subscription = import("./subscription").Subscription;
export const Subscription: typeof import("./subscription").Subscription = null as any;
utilities.lazyLoad(exports, ["Subscription"], () => require("./subscription"));

export { TopicArgs } from "./topic";
export type Topic = import("./topic").Topic;
export const Topic: typeof import("./topic").Topic = null as any;
utilities.lazyLoad(exports, ["Topic"], () => require("./topic"));

export { TopicPolicyArgs } from "./topicPolicy";
export type TopicPolicy = import("./topicPolicy").TopicPolicy;
export const TopicPolicy: typeof import("./topicPolicy").TopicPolicy = null as any;
utilities.lazyLoad(exports, ["TopicPolicy"], () => require("./topicPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:sns:Subscription":
                return new Subscription(name, <any>undefined, { urn })
            case "aws-native:sns:Topic":
                return new Topic(name, <any>undefined, { urn })
            case "aws-native:sns:TopicPolicy":
                return new TopicPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "sns", _module)
