// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Route53::RecordSet
 */
export function getRecordSet(args: GetRecordSetArgs, opts?: pulumi.InvokeOptions): Promise<GetRecordSetResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:route53:getRecordSet", {
        "id": args.id,
    }, opts);
}

export interface GetRecordSetArgs {
    id: string;
}

export interface GetRecordSetResult {
    readonly aliasTarget?: outputs.route53.RecordSetAliasTarget;
    readonly cidrRoutingConfig?: outputs.route53.RecordSetCidrRoutingConfig;
    readonly comment?: string;
    readonly failover?: string;
    readonly geoLocation?: outputs.route53.RecordSetGeoLocation;
    readonly healthCheckId?: string;
    readonly id?: string;
    readonly multiValueAnswer?: boolean;
    readonly region?: string;
    readonly resourceRecords?: string[];
    readonly setIdentifier?: string;
    readonly tTL?: string;
    readonly type?: string;
    readonly weight?: number;
}

export function getRecordSetOutput(args: GetRecordSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecordSetResult> {
    return pulumi.output(args).apply(a => getRecordSet(a, opts))
}

export interface GetRecordSetOutputArgs {
    id: pulumi.Input<string>;
}
