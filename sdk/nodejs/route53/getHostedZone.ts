// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Route53::HostedZone.
 */
export function getHostedZone(args: GetHostedZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetHostedZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:route53:getHostedZone", {
        "id": args.id,
    }, opts);
}

export interface GetHostedZoneArgs {
    id: string;
}

export interface GetHostedZoneResult {
    readonly hostedZoneConfig?: outputs.route53.HostedZoneConfig;
    /**
     * Adds, edits, or deletes tags for a health check or a hosted zone.
     *
     * For information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.
     */
    readonly hostedZoneTags?: outputs.route53.HostedZoneTag[];
    readonly id?: string;
    readonly nameServers?: string[];
    readonly queryLoggingConfig?: outputs.route53.HostedZoneQueryLoggingConfig;
    /**
     * A complex type that contains information about the VPCs that are associated with the specified hosted zone.
     */
    readonly vPCs?: outputs.route53.HostedZoneVPC[];
}
/**
 * Resource schema for AWS::Route53::HostedZone.
 */
export function getHostedZoneOutput(args: GetHostedZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostedZoneResult> {
    return pulumi.output(args).apply((a: any) => getHostedZone(a, opts))
}

export interface GetHostedZoneOutputArgs {
    id: pulumi.Input<string>;
}
