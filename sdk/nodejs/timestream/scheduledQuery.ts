// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The AWS::Timestream::ScheduledQuery resource creates a Timestream Scheduled Query.
 */
export class ScheduledQuery extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledQuery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScheduledQuery {
        return new ScheduledQuery(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:timestream:ScheduledQuery';

    /**
     * Returns true if the given object is an instance of ScheduledQuery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScheduledQuery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScheduledQuery.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly clientToken!: pulumi.Output<string | undefined>;
    public readonly errorReportConfiguration!: pulumi.Output<outputs.timestream.ScheduledQueryErrorReportConfiguration>;
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    public readonly notificationConfiguration!: pulumi.Output<outputs.timestream.ScheduledQueryNotificationConfiguration>;
    public readonly queryString!: pulumi.Output<string>;
    /**
     * Configuration for where error reports will be placed, how they will be named, and how they will be encrypted.
     */
    public /*out*/ readonly sQErrorReportConfiguration!: pulumi.Output<string>;
    /**
     * The KMS key for the scheduled query. If the KMS key is not specified, the database will be encrypted with a Timestream owned KMS key located in the Timestream account.
     */
    public /*out*/ readonly sQKmsKeyId!: pulumi.Output<string>;
    /**
     * The name for the scheduled query.
     */
    public /*out*/ readonly sQName!: pulumi.Output<string>;
    /**
     * Configuration for notification upon scheduled query execution.
     */
    public /*out*/ readonly sQNotificationConfiguration!: pulumi.Output<string>;
    /**
     * The query scheduled to be executed.
     */
    public /*out*/ readonly sQQueryString!: pulumi.Output<string>;
    /**
     * Configuration that indicates when the scheduled query is executed.
     */
    public /*out*/ readonly sQScheduleConfiguration!: pulumi.Output<string>;
    /**
     * Role that AWS Timestream will assume to execute scheduled query.
     */
    public /*out*/ readonly sQScheduledQueryExecutionRoleArn!: pulumi.Output<string>;
    /**
     * Target data source to export query results from.
     */
    public /*out*/ readonly sQTargetConfiguration!: pulumi.Output<string>;
    public readonly scheduleConfiguration!: pulumi.Output<outputs.timestream.ScheduledQueryScheduleConfiguration>;
    public readonly scheduledQueryExecutionRoleArn!: pulumi.Output<string>;
    public readonly scheduledQueryName!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.timestream.ScheduledQueryTag[] | undefined>;
    public readonly targetConfiguration!: pulumi.Output<outputs.timestream.ScheduledQueryTargetConfiguration | undefined>;

    /**
     * Create a ScheduledQuery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduledQueryArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.errorReportConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'errorReportConfiguration'");
            }
            if ((!args || args.notificationConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notificationConfiguration'");
            }
            if ((!args || args.queryString === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queryString'");
            }
            if ((!args || args.scheduleConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduleConfiguration'");
            }
            if ((!args || args.scheduledQueryExecutionRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduledQueryExecutionRoleArn'");
            }
            inputs["clientToken"] = args ? args.clientToken : undefined;
            inputs["errorReportConfiguration"] = args ? args.errorReportConfiguration : undefined;
            inputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            inputs["notificationConfiguration"] = args ? args.notificationConfiguration : undefined;
            inputs["queryString"] = args ? args.queryString : undefined;
            inputs["scheduleConfiguration"] = args ? args.scheduleConfiguration : undefined;
            inputs["scheduledQueryExecutionRoleArn"] = args ? args.scheduledQueryExecutionRoleArn : undefined;
            inputs["scheduledQueryName"] = args ? args.scheduledQueryName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["targetConfiguration"] = args ? args.targetConfiguration : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["sQErrorReportConfiguration"] = undefined /*out*/;
            inputs["sQKmsKeyId"] = undefined /*out*/;
            inputs["sQName"] = undefined /*out*/;
            inputs["sQNotificationConfiguration"] = undefined /*out*/;
            inputs["sQQueryString"] = undefined /*out*/;
            inputs["sQScheduleConfiguration"] = undefined /*out*/;
            inputs["sQScheduledQueryExecutionRoleArn"] = undefined /*out*/;
            inputs["sQTargetConfiguration"] = undefined /*out*/;
        } else {
            inputs["arn"] = undefined /*out*/;
            inputs["clientToken"] = undefined /*out*/;
            inputs["errorReportConfiguration"] = undefined /*out*/;
            inputs["kmsKeyId"] = undefined /*out*/;
            inputs["notificationConfiguration"] = undefined /*out*/;
            inputs["queryString"] = undefined /*out*/;
            inputs["sQErrorReportConfiguration"] = undefined /*out*/;
            inputs["sQKmsKeyId"] = undefined /*out*/;
            inputs["sQName"] = undefined /*out*/;
            inputs["sQNotificationConfiguration"] = undefined /*out*/;
            inputs["sQQueryString"] = undefined /*out*/;
            inputs["sQScheduleConfiguration"] = undefined /*out*/;
            inputs["sQScheduledQueryExecutionRoleArn"] = undefined /*out*/;
            inputs["sQTargetConfiguration"] = undefined /*out*/;
            inputs["scheduleConfiguration"] = undefined /*out*/;
            inputs["scheduledQueryExecutionRoleArn"] = undefined /*out*/;
            inputs["scheduledQueryName"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["targetConfiguration"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ScheduledQuery.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ScheduledQuery resource.
 */
export interface ScheduledQueryArgs {
    clientToken?: pulumi.Input<string>;
    errorReportConfiguration: pulumi.Input<inputs.timestream.ScheduledQueryErrorReportConfigurationArgs>;
    kmsKeyId?: pulumi.Input<string>;
    notificationConfiguration: pulumi.Input<inputs.timestream.ScheduledQueryNotificationConfigurationArgs>;
    queryString: pulumi.Input<string>;
    scheduleConfiguration: pulumi.Input<inputs.timestream.ScheduledQueryScheduleConfigurationArgs>;
    scheduledQueryExecutionRoleArn: pulumi.Input<string>;
    scheduledQueryName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.timestream.ScheduledQueryTagArgs>[]>;
    targetConfiguration?: pulumi.Input<inputs.timestream.ScheduledQueryTargetConfigurationArgs>;
}
