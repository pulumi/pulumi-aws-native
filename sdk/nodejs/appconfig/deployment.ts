// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppConfig::Deployment
 *
 * @deprecated Deployment is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment {
        pulumi.log.warn("Deployment is deprecated: Deployment is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new Deployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appconfig:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    public readonly applicationId!: pulumi.Output<string>;
    public readonly configurationProfileId!: pulumi.Output<string>;
    public readonly configurationVersion!: pulumi.Output<string>;
    public readonly deploymentStrategyId!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly environmentId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.appconfig.DeploymentTags[] | undefined>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Deployment is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Deployment is deprecated: Deployment is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.configurationProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationProfileId'");
            }
            if ((!args || args.configurationVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationVersion'");
            }
            if ((!args || args.deploymentStrategyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deploymentStrategyId'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["configurationProfileId"] = args ? args.configurationProfileId : undefined;
            resourceInputs["configurationVersion"] = args ? args.configurationVersion : undefined;
            resourceInputs["deploymentStrategyId"] = args ? args.deploymentStrategyId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        } else {
            resourceInputs["applicationId"] = undefined /*out*/;
            resourceInputs["configurationProfileId"] = undefined /*out*/;
            resourceInputs["configurationVersion"] = undefined /*out*/;
            resourceInputs["deploymentStrategyId"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Deployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    applicationId: pulumi.Input<string>;
    configurationProfileId: pulumi.Input<string>;
    configurationVersion: pulumi.Input<string>;
    deploymentStrategyId: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.appconfig.DeploymentTagsArgs>[]>;
}
