// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppConfig::Deployment
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment {
        return new Deployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appconfig:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * The application ID.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * The configuration profile ID.
     */
    public readonly configurationProfileId!: pulumi.Output<string>;
    /**
     * The configuration version to deploy. If deploying an AWS AppConfig hosted configuration version, you can specify either the version number or version label. For all other configurations, you must specify the version number.
     */
    public readonly configurationVersion!: pulumi.Output<string>;
    /**
     * The sequence number of the deployment.
     */
    public /*out*/ readonly deploymentNumber!: pulumi.Output<string>;
    /**
     * The deployment strategy ID.
     */
    public readonly deploymentStrategyId!: pulumi.Output<string>;
    /**
     * A description of the deployment.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A map of dynamic extension parameter names to values to pass to associated extensions with `PRE_START_DEPLOYMENT` actions.
     */
    public readonly dynamicExtensionParameters!: pulumi.Output<outputs.appconfig.DeploymentDynamicExtensionParameters[] | undefined>;
    /**
     * The environment ID.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * The AWS Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.
     */
    public readonly kmsKeyIdentifier!: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.configurationProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationProfileId'");
            }
            if ((!args || args.configurationVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationVersion'");
            }
            if ((!args || args.deploymentStrategyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deploymentStrategyId'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["configurationProfileId"] = args ? args.configurationProfileId : undefined;
            resourceInputs["configurationVersion"] = args ? args.configurationVersion : undefined;
            resourceInputs["deploymentStrategyId"] = args ? args.deploymentStrategyId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dynamicExtensionParameters"] = args ? args.dynamicExtensionParameters : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["kmsKeyIdentifier"] = args ? args.kmsKeyIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["deploymentNumber"] = undefined /*out*/;
        } else {
            resourceInputs["applicationId"] = undefined /*out*/;
            resourceInputs["configurationProfileId"] = undefined /*out*/;
            resourceInputs["configurationVersion"] = undefined /*out*/;
            resourceInputs["deploymentNumber"] = undefined /*out*/;
            resourceInputs["deploymentStrategyId"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["dynamicExtensionParameters"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["kmsKeyIdentifier"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["applicationId", "configurationProfileId", "configurationVersion", "deploymentStrategyId", "description", "dynamicExtensionParameters[*]", "environmentId", "kmsKeyIdentifier", "tags[*]"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Deployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * The application ID.
     */
    applicationId: pulumi.Input<string>;
    /**
     * The configuration profile ID.
     */
    configurationProfileId: pulumi.Input<string>;
    /**
     * The configuration version to deploy. If deploying an AWS AppConfig hosted configuration version, you can specify either the version number or version label. For all other configurations, you must specify the version number.
     */
    configurationVersion: pulumi.Input<string>;
    /**
     * The deployment strategy ID.
     */
    deploymentStrategyId: pulumi.Input<string>;
    /**
     * A description of the deployment.
     */
    description?: pulumi.Input<string>;
    /**
     * A map of dynamic extension parameter names to values to pass to associated extensions with `PRE_START_DEPLOYMENT` actions.
     */
    dynamicExtensionParameters?: pulumi.Input<pulumi.Input<inputs.appconfig.DeploymentDynamicExtensionParametersArgs>[]>;
    /**
     * The environment ID.
     */
    environmentId: pulumi.Input<string>;
    /**
     * The AWS Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.
     */
    kmsKeyIdentifier?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
