// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Schema for ApplicationInstance CloudFormation Resource
 */
export function getApplicationInstance(args: GetApplicationInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:panorama:getApplicationInstance", {
        "applicationInstanceId": args.applicationInstanceId,
    }, opts);
}

export interface GetApplicationInstanceArgs {
    applicationInstanceId: string;
}

export interface GetApplicationInstanceResult {
    readonly applicationInstanceId?: string;
    readonly arn?: string;
    readonly createdTime?: number;
    readonly defaultRuntimeContextDeviceName?: string;
    readonly deviceId?: string;
    readonly healthStatus?: enums.panorama.ApplicationInstanceHealthStatus;
    readonly lastUpdatedTime?: number;
    readonly status?: enums.panorama.ApplicationInstanceStatus;
    readonly statusDescription?: string;
    readonly statusFilter?: enums.panorama.ApplicationInstanceStatusFilter;
    readonly tags?: outputs.panorama.ApplicationInstanceTag[];
}
/**
 * Schema for ApplicationInstance CloudFormation Resource
 */
export function getApplicationInstanceOutput(args: GetApplicationInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationInstanceResult> {
    return pulumi.output(args).apply((a: any) => getApplicationInstance(a, opts))
}

export interface GetApplicationInstanceOutputArgs {
    applicationInstanceId: pulumi.Input<string>;
}
