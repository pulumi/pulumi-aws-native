// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Registers a package version.
 */
export function getPackageVersion(args: GetPackageVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetPackageVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:panorama:getPackageVersion", {
        "packageId": args.packageId,
        "packageVersion": args.packageVersion,
        "patchVersion": args.patchVersion,
    }, opts);
}

export interface GetPackageVersionArgs {
    /**
     * A package ID.
     */
    packageId: string;
    /**
     * A package version.
     */
    packageVersion: string;
    /**
     * A patch version.
     */
    patchVersion: string;
}

export interface GetPackageVersionResult {
    /**
     * Whether the package version is the latest version.
     */
    readonly isLatestPatch?: boolean;
    /**
     * Whether to mark the new version as the latest version.
     */
    readonly markLatest?: boolean;
    /**
     * The package version's ARN.
     */
    readonly packageArn?: string;
    /**
     * The package version's name.
     */
    readonly packageName?: string;
    /**
     * The package version's registered time.
     */
    readonly registeredTime?: number;
    /**
     * The package version's status.
     */
    readonly status?: enums.panorama.PackageVersionStatus;
    /**
     * The package version's status description.
     */
    readonly statusDescription?: string;
}
/**
 * Registers a package version.
 */
export function getPackageVersionOutput(args: GetPackageVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackageVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:panorama:getPackageVersion", {
        "packageId": args.packageId,
        "packageVersion": args.packageVersion,
        "patchVersion": args.patchVersion,
    }, opts);
}

export interface GetPackageVersionOutputArgs {
    /**
     * A package ID.
     */
    packageId: pulumi.Input<string>;
    /**
     * A package version.
     */
    packageVersion: pulumi.Input<string>;
    /**
     * A patch version.
     */
    patchVersion: pulumi.Input<string>;
}
