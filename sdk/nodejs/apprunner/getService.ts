// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::AppRunner::Service resource specifies an AppRunner Service.
 */
export function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:apprunner:getService", {
        "serviceArn": args.serviceArn,
    }, opts);
}

export interface GetServiceArgs {
    /**
     * The Amazon Resource Name (ARN) of the AppRunner Service.
     */
    serviceArn: string;
}

export interface GetServiceResult {
    /**
     * The settings for the health check that AWS App Runner performs to monitor the health of the App Runner service.
     */
    readonly healthCheckConfiguration?: outputs.apprunner.ServiceHealthCheckConfiguration;
    /**
     * The runtime configuration of instances (scaling units) of your service.
     */
    readonly instanceConfiguration?: outputs.apprunner.ServiceInstanceConfiguration;
    /**
     * Configuration settings related to network traffic of the web application that the App Runner service runs.
     */
    readonly networkConfiguration?: outputs.apprunner.ServiceNetworkConfiguration;
    /**
     * The observability configuration of your service.
     */
    readonly observabilityConfiguration?: outputs.apprunner.ServiceObservabilityConfiguration;
    /**
     * The Amazon Resource Name (ARN) of the AppRunner Service.
     */
    readonly serviceArn?: string;
    /**
     * The AppRunner Service Id
     */
    readonly serviceId?: string;
    /**
     * The Service Url of the AppRunner Service.
     */
    readonly serviceUrl?: string;
    /**
     * The source to deploy to the App Runner service. It can be a code or an image repository.
     */
    readonly sourceConfiguration?: outputs.apprunner.ServiceSourceConfiguration;
    /**
     * AppRunner Service status.
     */
    readonly status?: string;
}
/**
 * The AWS::AppRunner::Service resource specifies an AppRunner Service.
 */
export function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:apprunner:getService", {
        "serviceArn": args.serviceArn,
    }, opts);
}

export interface GetServiceOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the AppRunner Service.
     */
    serviceArn: pulumi.Input<string>;
}
