// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetGroupArgs, GetGroupResult, GetGroupOutputArgs } from "./getGroup";
export const getGroup: typeof import("./getGroup").getGroup = null as any;
export const getGroupOutput: typeof import("./getGroup").getGroupOutput = null as any;
utilities.lazyLoad(exports, ["getGroup","getGroupOutput"], () => require("./getGroup"));

export { GetResourcePolicyArgs, GetResourcePolicyResult, GetResourcePolicyOutputArgs } from "./getResourcePolicy";
export const getResourcePolicy: typeof import("./getResourcePolicy").getResourcePolicy = null as any;
export const getResourcePolicyOutput: typeof import("./getResourcePolicy").getResourcePolicyOutput = null as any;
utilities.lazyLoad(exports, ["getResourcePolicy","getResourcePolicyOutput"], () => require("./getResourcePolicy"));

export { GetSamplingRuleArgs, GetSamplingRuleResult, GetSamplingRuleOutputArgs } from "./getSamplingRule";
export const getSamplingRule: typeof import("./getSamplingRule").getSamplingRule = null as any;
export const getSamplingRuleOutput: typeof import("./getSamplingRule").getSamplingRuleOutput = null as any;
utilities.lazyLoad(exports, ["getSamplingRule","getSamplingRuleOutput"], () => require("./getSamplingRule"));

export { GroupArgs } from "./group";
export type Group = import("./group").Group;
export const Group: typeof import("./group").Group = null as any;
utilities.lazyLoad(exports, ["Group"], () => require("./group"));

export { ResourcePolicyArgs } from "./resourcePolicy";
export type ResourcePolicy = import("./resourcePolicy").ResourcePolicy;
export const ResourcePolicy: typeof import("./resourcePolicy").ResourcePolicy = null as any;
utilities.lazyLoad(exports, ["ResourcePolicy"], () => require("./resourcePolicy"));

export { SamplingRuleArgs } from "./samplingRule";
export type SamplingRule = import("./samplingRule").SamplingRule;
export const SamplingRule: typeof import("./samplingRule").SamplingRule = null as any;
utilities.lazyLoad(exports, ["SamplingRule"], () => require("./samplingRule"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:xray:Group":
                return new Group(name, <any>undefined, { urn })
            case "aws-native:xray:ResourcePolicy":
                return new ResourcePolicy(name, <any>undefined, { urn })
            case "aws-native:xray:SamplingRule":
                return new SamplingRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "xray", _module)
