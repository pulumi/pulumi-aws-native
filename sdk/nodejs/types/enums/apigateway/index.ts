// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const MethodAuthorizationType = {
    None: "NONE",
    AwsIam: "AWS_IAM",
    Custom: "CUSTOM",
    CognitoUserPools: "COGNITO_USER_POOLS",
} as const;

/**
 * The method's authorization type.
 */
export type MethodAuthorizationType = (typeof MethodAuthorizationType)[keyof typeof MethodAuthorizationType];

export const MethodIntegrationConnectionType = {
    Internet: "INTERNET",
    VpcLink: "VPC_LINK",
} as const;

/**
 * The type of the network connection to the integration endpoint.
 */
export type MethodIntegrationConnectionType = (typeof MethodIntegrationConnectionType)[keyof typeof MethodIntegrationConnectionType];

export const MethodIntegrationContentHandling = {
    ConvertToBinary: "CONVERT_TO_BINARY",
    ConvertToText: "CONVERT_TO_TEXT",
} as const;

/**
 * Specifies how to handle request payload content type conversions.
 */
export type MethodIntegrationContentHandling = (typeof MethodIntegrationContentHandling)[keyof typeof MethodIntegrationContentHandling];

export const MethodIntegrationPassthroughBehavior = {
    WhenNoMatch: "WHEN_NO_MATCH",
    WhenNoTemplates: "WHEN_NO_TEMPLATES",
    Never: "NEVER",
} as const;

/**
 * Indicates when API Gateway passes requests to the targeted backend.
 */
export type MethodIntegrationPassthroughBehavior = (typeof MethodIntegrationPassthroughBehavior)[keyof typeof MethodIntegrationPassthroughBehavior];

export const MethodIntegrationResponseContentHandling = {
    ConvertToBinary: "CONVERT_TO_BINARY",
    ConvertToText: "CONVERT_TO_TEXT",
} as const;

/**
 * Specifies how to handle request payload content type conversions.
 */
export type MethodIntegrationResponseContentHandling = (typeof MethodIntegrationResponseContentHandling)[keyof typeof MethodIntegrationResponseContentHandling];

export const MethodIntegrationType = {
    Aws: "AWS",
    AwsProxy: "AWS_PROXY",
    Http: "HTTP",
    HttpProxy: "HTTP_PROXY",
    Mock: "MOCK",
} as const;

/**
 * The type of backend that your method is running.
 */
export type MethodIntegrationType = (typeof MethodIntegrationType)[keyof typeof MethodIntegrationType];

export const UsagePlanKeyKeyType = {
    ApiKey: "API_KEY",
} as const;

/**
 * The type of usage plan key. Currently, the only valid key type is API_KEY.
 */
export type UsagePlanKeyKeyType = (typeof UsagePlanKeyKeyType)[keyof typeof UsagePlanKeyKeyType];
