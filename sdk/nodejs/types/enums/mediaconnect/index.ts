// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const FlowEncryptionAlgorithm = {
    Aes128: "aes128",
    Aes192: "aes192",
    Aes256: "aes256",
} as const;

/**
 * The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
 */
export type FlowEncryptionAlgorithm = (typeof FlowEncryptionAlgorithm)[keyof typeof FlowEncryptionAlgorithm];

export const FlowEncryptionKeyType = {
    Speke: "speke",
    StaticKey: "static-key",
} as const;

/**
 * The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
 */
export type FlowEncryptionKeyType = (typeof FlowEncryptionKeyType)[keyof typeof FlowEncryptionKeyType];

export const FlowEntitlementEncryptionAlgorithm = {
    Aes128: "aes128",
    Aes192: "aes192",
    Aes256: "aes256",
} as const;

/**
 * The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
 */
export type FlowEntitlementEncryptionAlgorithm = (typeof FlowEntitlementEncryptionAlgorithm)[keyof typeof FlowEntitlementEncryptionAlgorithm];

export const FlowEntitlementEncryptionKeyType = {
    Speke: "speke",
    StaticKey: "static-key",
} as const;

/**
 * The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
 */
export type FlowEntitlementEncryptionKeyType = (typeof FlowEntitlementEncryptionKeyType)[keyof typeof FlowEntitlementEncryptionKeyType];

export const FlowEntitlementEntitlementStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

/**
 *  An indication of whether the entitlement is enabled.
 */
export type FlowEntitlementEntitlementStatus = (typeof FlowEntitlementEntitlementStatus)[keyof typeof FlowEntitlementEntitlementStatus];

export const FlowFailoverConfigState = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type FlowFailoverConfigState = (typeof FlowFailoverConfigState)[keyof typeof FlowFailoverConfigState];

export const FlowOutputEncryptionAlgorithm = {
    Aes128: "aes128",
    Aes192: "aes192",
    Aes256: "aes256",
} as const;

/**
 * The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
 */
export type FlowOutputEncryptionAlgorithm = (typeof FlowOutputEncryptionAlgorithm)[keyof typeof FlowOutputEncryptionAlgorithm];

export const FlowOutputEncryptionKeyType = {
    StaticKey: "static-key",
} as const;

/**
 * The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
 */
export type FlowOutputEncryptionKeyType = (typeof FlowOutputEncryptionKeyType)[keyof typeof FlowOutputEncryptionKeyType];

export const FlowOutputProtocol = {
    ZixiPush: "zixi-push",
    RtpFec: "rtp-fec",
    Rtp: "rtp",
    ZixiPull: "zixi-pull",
    Rist: "rist",
} as const;

/**
 * The protocol that is used by the source or output.
 */
export type FlowOutputProtocol = (typeof FlowOutputProtocol)[keyof typeof FlowOutputProtocol];

export const FlowSourceEncryptionAlgorithm = {
    Aes128: "aes128",
    Aes192: "aes192",
    Aes256: "aes256",
} as const;

/**
 * The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
 */
export type FlowSourceEncryptionAlgorithm = (typeof FlowSourceEncryptionAlgorithm)[keyof typeof FlowSourceEncryptionAlgorithm];

export const FlowSourceEncryptionKeyType = {
    Speke: "speke",
    StaticKey: "static-key",
} as const;

/**
 * The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
 */
export type FlowSourceEncryptionKeyType = (typeof FlowSourceEncryptionKeyType)[keyof typeof FlowSourceEncryptionKeyType];

export const FlowSourceProtocol = {
    ZixiPush: "zixi-push",
    RtpFec: "rtp-fec",
    Rtp: "rtp",
    Rist: "rist",
} as const;

/**
 * The protocol that is used by the source.
 */
export type FlowSourceProtocol = (typeof FlowSourceProtocol)[keyof typeof FlowSourceProtocol];
