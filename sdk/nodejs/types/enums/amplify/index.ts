// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AppAutoBranchCreationConfigStage = {
    Experimental: "EXPERIMENTAL",
    Beta: "BETA",
    PullRequest: "PULL_REQUEST",
    Production: "PRODUCTION",
    Development: "DEVELOPMENT",
} as const;

/**
 * Stage for the auto created branch.
 */
export type AppAutoBranchCreationConfigStage = (typeof AppAutoBranchCreationConfigStage)[keyof typeof AppAutoBranchCreationConfigStage];

export const AppCacheConfigType = {
    AmplifyManaged: "AMPLIFY_MANAGED",
    AmplifyManagedNoCookies: "AMPLIFY_MANAGED_NO_COOKIES",
} as const;

/**
 * The type of cache configuration to use for an Amplify app.
 *
 * The `AMPLIFY_MANAGED` cache configuration automatically applies an optimized cache configuration for your app based on its platform, routing rules, and rewrite rules.
 *
 * The `AMPLIFY_MANAGED_NO_COOKIES` cache configuration type is the same as `AMPLIFY_MANAGED` , except that it excludes all cookies from the cache key. This is the default setting.
 */
export type AppCacheConfigType = (typeof AppCacheConfigType)[keyof typeof AppCacheConfigType];

export const AppJobConfigBuildComputeType = {
    Standard8gb: "STANDARD_8GB",
    Large16gb: "LARGE_16GB",
    Xlarge72gb: "XLARGE_72GB",
} as const;

/**
 * Specifies the size of the build instance. Amplify supports three instance sizes: `STANDARD_8GB` , `LARGE_16GB` , and `XLARGE_72GB` . If you don't specify a value, Amplify uses the `STANDARD_8GB` default.
 *
 * The following list describes the CPU, memory, and storage capacity for each build instance type:
 *
 * - **STANDARD_8GB** - - vCPUs: 4
 * - Memory: 8 GiB
 * - Disk space: 128 GB
 * - **LARGE_16GB** - - vCPUs: 8
 * - Memory: 16 GiB
 * - Disk space: 128 GB
 * - **XLARGE_72GB** - - vCPUs: 36
 * - Memory: 72 GiB
 * - Disk space: 256 GB
 */
export type AppJobConfigBuildComputeType = (typeof AppJobConfigBuildComputeType)[keyof typeof AppJobConfigBuildComputeType];

export const AppPlatform = {
    Web: "WEB",
    WebDynamic: "WEB_DYNAMIC",
    WebCompute: "WEB_COMPUTE",
} as const;

/**
 * The platform for the Amplify app. For a static app, set the platform type to `WEB` . For a dynamic server-side rendered (SSR) app, set the platform type to `WEB_COMPUTE` . For an app requiring Amplify Hosting's original SSR support only, set the platform type to `WEB_DYNAMIC` .
 *
 * If you are deploying an SSG only app with Next.js version 14 or later, you must set the platform type to `WEB_COMPUTE` and set the artifacts `baseDirectory` to `.next` in the application's build settings. For an example of the build specification settings, see [Amplify build settings for a Next.js 14 SSG application](https://docs.aws.amazon.com/amplify/latest/userguide/deploy-nextjs-app.html#build-setting-detection-ssg-14) in the *Amplify Hosting User Guide* .
 */
export type AppPlatform = (typeof AppPlatform)[keyof typeof AppPlatform];

export const BranchStage = {
    Experimental: "EXPERIMENTAL",
    Beta: "BETA",
    PullRequest: "PULL_REQUEST",
    Production: "PRODUCTION",
    Development: "DEVELOPMENT",
} as const;

/**
 * Describes the current stage for the branch.
 */
export type BranchStage = (typeof BranchStage)[keyof typeof BranchStage];

export const DomainCertificateCertificateType = {
    AmplifyManaged: "AMPLIFY_MANAGED",
    Custom: "CUSTOM",
} as const;

/**
 * The type of SSL/TLS certificate that you want to use.
 *
 * Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.
 *
 * Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
 */
export type DomainCertificateCertificateType = (typeof DomainCertificateCertificateType)[keyof typeof DomainCertificateCertificateType];

export const DomainCertificateSettingsCertificateType = {
    AmplifyManaged: "AMPLIFY_MANAGED",
    Custom: "CUSTOM",
} as const;

/**
 * The certificate type.
 *
 * Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.
 *
 * Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
 */
export type DomainCertificateSettingsCertificateType = (typeof DomainCertificateSettingsCertificateType)[keyof typeof DomainCertificateSettingsCertificateType];
