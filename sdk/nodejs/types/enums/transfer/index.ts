// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AgreementStatus = {
    Active: "ACTIVE",
    Inactive: "INACTIVE",
} as const;

/**
 * Specifies the status of the agreement.
 */
export type AgreementStatus = (typeof AgreementStatus)[keyof typeof AgreementStatus];

export const CertificateStatus = {
    Active: "ACTIVE",
    Pending: "PENDING",
    Inactive: "INACTIVE",
} as const;

/**
 * A status description for the certificate.
 */
export type CertificateStatus = (typeof CertificateStatus)[keyof typeof CertificateStatus];

export const CertificateType = {
    Certificate: "CERTIFICATE",
    CertificateWithPrivateKey: "CERTIFICATE_WITH_PRIVATE_KEY",
} as const;

/**
 * Describing the type of certificate. With or without a private key.
 */
export type CertificateType = (typeof CertificateType)[keyof typeof CertificateType];

export const CertificateUsage = {
    Signing: "SIGNING",
    Encryption: "ENCRYPTION",
} as const;

/**
 * Specifies the usage type for the certificate.
 */
export type CertificateUsage = (typeof CertificateUsage)[keyof typeof CertificateUsage];

export const ConnectorAs2ConfigPropertiesCompression = {
    Zlib: "ZLIB",
    Disabled: "DISABLED",
} as const;

/**
 * Compression setting for this AS2 connector configuration.
 */
export type ConnectorAs2ConfigPropertiesCompression = (typeof ConnectorAs2ConfigPropertiesCompression)[keyof typeof ConnectorAs2ConfigPropertiesCompression];

export const ConnectorAs2ConfigPropertiesEncryptionAlgorithm = {
    Aes128Cbc: "AES128_CBC",
    Aes192Cbc: "AES192_CBC",
    Aes256Cbc: "AES256_CBC",
    None: "NONE",
} as const;

/**
 * Encryption algorithm for this AS2 connector configuration.
 */
export type ConnectorAs2ConfigPropertiesEncryptionAlgorithm = (typeof ConnectorAs2ConfigPropertiesEncryptionAlgorithm)[keyof typeof ConnectorAs2ConfigPropertiesEncryptionAlgorithm];

export const ConnectorAs2ConfigPropertiesMdnResponse = {
    Sync: "SYNC",
    None: "NONE",
} as const;

/**
 * MDN Response setting for this AS2 connector configuration.
 */
export type ConnectorAs2ConfigPropertiesMdnResponse = (typeof ConnectorAs2ConfigPropertiesMdnResponse)[keyof typeof ConnectorAs2ConfigPropertiesMdnResponse];

export const ConnectorAs2ConfigPropertiesMdnSigningAlgorithm = {
    Sha256: "SHA256",
    Sha384: "SHA384",
    Sha512: "SHA512",
    Sha1: "SHA1",
    None: "NONE",
    Default: "DEFAULT",
} as const;

/**
 * MDN Signing algorithm for this AS2 connector configuration.
 */
export type ConnectorAs2ConfigPropertiesMdnSigningAlgorithm = (typeof ConnectorAs2ConfigPropertiesMdnSigningAlgorithm)[keyof typeof ConnectorAs2ConfigPropertiesMdnSigningAlgorithm];

export const ConnectorAs2ConfigPropertiesSigningAlgorithm = {
    Sha256: "SHA256",
    Sha384: "SHA384",
    Sha512: "SHA512",
    Sha1: "SHA1",
    None: "NONE",
} as const;

/**
 * Signing algorithm for this AS2 connector configuration.
 */
export type ConnectorAs2ConfigPropertiesSigningAlgorithm = (typeof ConnectorAs2ConfigPropertiesSigningAlgorithm)[keyof typeof ConnectorAs2ConfigPropertiesSigningAlgorithm];

export const ProfileType = {
    Local: "LOCAL",
    Partner: "PARTNER",
} as const;

/**
 * Enum specifying whether the profile is local or associated with a trading partner.
 */
export type ProfileType = (typeof ProfileType)[keyof typeof ProfileType];

export const WorkflowStepCopyStepDetailsPropertiesOverwriteExisting = {
    True: "TRUE",
    False: "FALSE",
} as const;

/**
 * A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
 */
export type WorkflowStepCopyStepDetailsPropertiesOverwriteExisting = (typeof WorkflowStepCopyStepDetailsPropertiesOverwriteExisting)[keyof typeof WorkflowStepCopyStepDetailsPropertiesOverwriteExisting];

export const WorkflowStepDecryptStepDetailsPropertiesOverwriteExisting = {
    True: "TRUE",
    False: "FALSE",
} as const;

/**
 * A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
 */
export type WorkflowStepDecryptStepDetailsPropertiesOverwriteExisting = (typeof WorkflowStepDecryptStepDetailsPropertiesOverwriteExisting)[keyof typeof WorkflowStepDecryptStepDetailsPropertiesOverwriteExisting];

export const WorkflowStepDecryptStepDetailsPropertiesType = {
    Pgp: "PGP",
} as const;

/**
 * Specifies which encryption method to use.
 */
export type WorkflowStepDecryptStepDetailsPropertiesType = (typeof WorkflowStepDecryptStepDetailsPropertiesType)[keyof typeof WorkflowStepDecryptStepDetailsPropertiesType];

export const WorkflowStepType = {
    Copy: "COPY",
    Custom: "CUSTOM",
    Decrypt: "DECRYPT",
    Delete: "DELETE",
    Tag: "TAG",
} as const;

export type WorkflowStepType = (typeof WorkflowStepType)[keyof typeof WorkflowStepType];
