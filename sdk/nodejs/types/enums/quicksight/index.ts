// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AnalysisAnchorOption = {
    Now: "NOW",
} as const;

export type AnalysisAnchorOption = (typeof AnalysisAnchorOption)[keyof typeof AnalysisAnchorOption];

export const AnalysisArcThickness = {
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
    Whole: "WHOLE",
} as const;

export type AnalysisArcThickness = (typeof AnalysisArcThickness)[keyof typeof AnalysisArcThickness];

export const AnalysisArcThicknessOptions = {
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
} as const;

export type AnalysisArcThicknessOptions = (typeof AnalysisArcThicknessOptions)[keyof typeof AnalysisArcThicknessOptions];

export const AnalysisAxisBinding = {
    PrimaryYaxis: "PRIMARY_YAXIS",
    SecondaryYaxis: "SECONDARY_YAXIS",
} as const;

export type AnalysisAxisBinding = (typeof AnalysisAxisBinding)[keyof typeof AnalysisAxisBinding];

export const AnalysisBarChartOrientation = {
    Horizontal: "HORIZONTAL",
    Vertical: "VERTICAL",
} as const;

export type AnalysisBarChartOrientation = (typeof AnalysisBarChartOrientation)[keyof typeof AnalysisBarChartOrientation];

export const AnalysisBarsArrangement = {
    Clustered: "CLUSTERED",
    Stacked: "STACKED",
    StackedPercent: "STACKED_PERCENT",
} as const;

export type AnalysisBarsArrangement = (typeof AnalysisBarsArrangement)[keyof typeof AnalysisBarsArrangement];

export const AnalysisBaseMapStyleType = {
    LightGray: "LIGHT_GRAY",
    DarkGray: "DARK_GRAY",
    Street: "STREET",
    Imagery: "IMAGERY",
} as const;

export type AnalysisBaseMapStyleType = (typeof AnalysisBaseMapStyleType)[keyof typeof AnalysisBaseMapStyleType];

export const AnalysisBoxPlotFillStyle = {
    Solid: "SOLID",
    Transparent: "TRANSPARENT",
} as const;

export type AnalysisBoxPlotFillStyle = (typeof AnalysisBoxPlotFillStyle)[keyof typeof AnalysisBoxPlotFillStyle];

export const AnalysisCategoricalAggregationFunction = {
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
} as const;

export type AnalysisCategoricalAggregationFunction = (typeof AnalysisCategoricalAggregationFunction)[keyof typeof AnalysisCategoricalAggregationFunction];

export const AnalysisCategoryFilterMatchOperator = {
    Equals: "EQUALS",
    DoesNotEqual: "DOES_NOT_EQUAL",
    Contains: "CONTAINS",
    DoesNotContain: "DOES_NOT_CONTAIN",
    StartsWith: "STARTS_WITH",
    EndsWith: "ENDS_WITH",
} as const;

export type AnalysisCategoryFilterMatchOperator = (typeof AnalysisCategoryFilterMatchOperator)[keyof typeof AnalysisCategoryFilterMatchOperator];

export const AnalysisCategoryFilterSelectAllOptions = {
    FilterAllValues: "FILTER_ALL_VALUES",
} as const;

export type AnalysisCategoryFilterSelectAllOptions = (typeof AnalysisCategoryFilterSelectAllOptions)[keyof typeof AnalysisCategoryFilterSelectAllOptions];

export const AnalysisColorFillType = {
    Discrete: "DISCRETE",
    Gradient: "GRADIENT",
} as const;

export type AnalysisColorFillType = (typeof AnalysisColorFillType)[keyof typeof AnalysisColorFillType];

export const AnalysisColumnRole = {
    Dimension: "DIMENSION",
    Measure: "MEASURE",
} as const;

export type AnalysisColumnRole = (typeof AnalysisColumnRole)[keyof typeof AnalysisColumnRole];

export const AnalysisComparisonMethod = {
    Difference: "DIFFERENCE",
    PercentDifference: "PERCENT_DIFFERENCE",
    Percent: "PERCENT",
} as const;

export type AnalysisComparisonMethod = (typeof AnalysisComparisonMethod)[keyof typeof AnalysisComparisonMethod];

export const AnalysisConditionalFormattingIconDisplayOption = {
    IconOnly: "ICON_ONLY",
} as const;

export type AnalysisConditionalFormattingIconDisplayOption = (typeof AnalysisConditionalFormattingIconDisplayOption)[keyof typeof AnalysisConditionalFormattingIconDisplayOption];

export const AnalysisConditionalFormattingIconSetType = {
    PlusMinus: "PLUS_MINUS",
    CheckX: "CHECK_X",
    ThreeColorArrow: "THREE_COLOR_ARROW",
    ThreeGrayArrow: "THREE_GRAY_ARROW",
    CaretUpMinusDown: "CARET_UP_MINUS_DOWN",
    ThreeShape: "THREE_SHAPE",
    ThreeCircle: "THREE_CIRCLE",
    Flags: "FLAGS",
    Bars: "BARS",
    FourColorArrow: "FOUR_COLOR_ARROW",
    FourGrayArrow: "FOUR_GRAY_ARROW",
} as const;

export type AnalysisConditionalFormattingIconSetType = (typeof AnalysisConditionalFormattingIconSetType)[keyof typeof AnalysisConditionalFormattingIconSetType];

export const AnalysisCrossDatasetTypes = {
    AllDatasets: "ALL_DATASETS",
    SingleDataset: "SINGLE_DATASET",
} as const;

export type AnalysisCrossDatasetTypes = (typeof AnalysisCrossDatasetTypes)[keyof typeof AnalysisCrossDatasetTypes];

export const AnalysisCustomContentImageScalingConfiguration = {
    FitToHeight: "FIT_TO_HEIGHT",
    FitToWidth: "FIT_TO_WIDTH",
    DoNotScale: "DO_NOT_SCALE",
    ScaleToVisual: "SCALE_TO_VISUAL",
} as const;

export type AnalysisCustomContentImageScalingConfiguration = (typeof AnalysisCustomContentImageScalingConfiguration)[keyof typeof AnalysisCustomContentImageScalingConfiguration];

export const AnalysisCustomContentType = {
    Image: "IMAGE",
    OtherEmbeddedContent: "OTHER_EMBEDDED_CONTENT",
} as const;

export type AnalysisCustomContentType = (typeof AnalysisCustomContentType)[keyof typeof AnalysisCustomContentType];

export const AnalysisDataLabelContent = {
    Value: "VALUE",
    Percent: "PERCENT",
    ValueAndPercent: "VALUE_AND_PERCENT",
} as const;

export type AnalysisDataLabelContent = (typeof AnalysisDataLabelContent)[keyof typeof AnalysisDataLabelContent];

export const AnalysisDataLabelOverlap = {
    DisableOverlap: "DISABLE_OVERLAP",
    EnableOverlap: "ENABLE_OVERLAP",
} as const;

export type AnalysisDataLabelOverlap = (typeof AnalysisDataLabelOverlap)[keyof typeof AnalysisDataLabelOverlap];

export const AnalysisDataLabelPosition = {
    Inside: "INSIDE",
    Outside: "OUTSIDE",
    Left: "LEFT",
    Top: "TOP",
    Bottom: "BOTTOM",
    Right: "RIGHT",
} as const;

export type AnalysisDataLabelPosition = (typeof AnalysisDataLabelPosition)[keyof typeof AnalysisDataLabelPosition];

export const AnalysisDateAggregationFunction = {
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
    Min: "MIN",
    Max: "MAX",
} as const;

export type AnalysisDateAggregationFunction = (typeof AnalysisDateAggregationFunction)[keyof typeof AnalysisDateAggregationFunction];

export const AnalysisDayOfTheWeek = {
    Sunday: "SUNDAY",
    Monday: "MONDAY",
    Tuesday: "TUESDAY",
    Wednesday: "WEDNESDAY",
    Thursday: "THURSDAY",
    Friday: "FRIDAY",
    Saturday: "SATURDAY",
} as const;

export type AnalysisDayOfTheWeek = (typeof AnalysisDayOfTheWeek)[keyof typeof AnalysisDayOfTheWeek];

export const AnalysisErrorType = {
    AccessDenied: "ACCESS_DENIED",
    SourceNotFound: "SOURCE_NOT_FOUND",
    DataSetNotFound: "DATA_SET_NOT_FOUND",
    InternalFailure: "INTERNAL_FAILURE",
    ParameterValueIncompatible: "PARAMETER_VALUE_INCOMPATIBLE",
    ParameterTypeInvalid: "PARAMETER_TYPE_INVALID",
    ParameterNotFound: "PARAMETER_NOT_FOUND",
    ColumnTypeMismatch: "COLUMN_TYPE_MISMATCH",
    ColumnGeographicRoleMismatch: "COLUMN_GEOGRAPHIC_ROLE_MISMATCH",
    ColumnReplacementMissing: "COLUMN_REPLACEMENT_MISSING",
} as const;

export type AnalysisErrorType = (typeof AnalysisErrorType)[keyof typeof AnalysisErrorType];

export const AnalysisFilterNullOption = {
    AllValues: "ALL_VALUES",
    NullsOnly: "NULLS_ONLY",
    NonNullsOnly: "NON_NULLS_ONLY",
} as const;

export type AnalysisFilterNullOption = (typeof AnalysisFilterNullOption)[keyof typeof AnalysisFilterNullOption];

export const AnalysisFilterVisualScope = {
    AllVisuals: "ALL_VISUALS",
    SelectedVisuals: "SELECTED_VISUALS",
} as const;

export type AnalysisFilterVisualScope = (typeof AnalysisFilterVisualScope)[keyof typeof AnalysisFilterVisualScope];

export const AnalysisFontDecoration = {
    Underline: "UNDERLINE",
    None: "NONE",
} as const;

export type AnalysisFontDecoration = (typeof AnalysisFontDecoration)[keyof typeof AnalysisFontDecoration];

export const AnalysisFontStyle = {
    Normal: "NORMAL",
    Italic: "ITALIC",
} as const;

export type AnalysisFontStyle = (typeof AnalysisFontStyle)[keyof typeof AnalysisFontStyle];

export const AnalysisFontWeightName = {
    Normal: "NORMAL",
    Bold: "BOLD",
} as const;

export type AnalysisFontWeightName = (typeof AnalysisFontWeightName)[keyof typeof AnalysisFontWeightName];

export const AnalysisForecastComputationSeasonality = {
    Automatic: "AUTOMATIC",
    Custom: "CUSTOM",
} as const;

export type AnalysisForecastComputationSeasonality = (typeof AnalysisForecastComputationSeasonality)[keyof typeof AnalysisForecastComputationSeasonality];

export const AnalysisFunnelChartMeasureDataLabelStyle = {
    ValueOnly: "VALUE_ONLY",
    PercentageByFirstStage: "PERCENTAGE_BY_FIRST_STAGE",
    PercentageByPreviousStage: "PERCENTAGE_BY_PREVIOUS_STAGE",
    ValueAndPercentageByFirstStage: "VALUE_AND_PERCENTAGE_BY_FIRST_STAGE",
    ValueAndPercentageByPreviousStage: "VALUE_AND_PERCENTAGE_BY_PREVIOUS_STAGE",
} as const;

export type AnalysisFunnelChartMeasureDataLabelStyle = (typeof AnalysisFunnelChartMeasureDataLabelStyle)[keyof typeof AnalysisFunnelChartMeasureDataLabelStyle];

export const AnalysisGeospatialSelectedPointStyle = {
    Point: "POINT",
    Cluster: "CLUSTER",
    Heatmap: "HEATMAP",
} as const;

export type AnalysisGeospatialSelectedPointStyle = (typeof AnalysisGeospatialSelectedPointStyle)[keyof typeof AnalysisGeospatialSelectedPointStyle];

export const AnalysisHistogramBinType = {
    BinCount: "BIN_COUNT",
    BinWidth: "BIN_WIDTH",
} as const;

export type AnalysisHistogramBinType = (typeof AnalysisHistogramBinType)[keyof typeof AnalysisHistogramBinType];

export const AnalysisHorizontalTextAlignment = {
    Left: "LEFT",
    Center: "CENTER",
    Right: "RIGHT",
    Auto: "AUTO",
} as const;

export type AnalysisHorizontalTextAlignment = (typeof AnalysisHorizontalTextAlignment)[keyof typeof AnalysisHorizontalTextAlignment];

export const AnalysisIcon = {
    CaretUp: "CARET_UP",
    CaretDown: "CARET_DOWN",
    Plus: "PLUS",
    Minus: "MINUS",
    ArrowUp: "ARROW_UP",
    ArrowDown: "ARROW_DOWN",
    ArrowLeft: "ARROW_LEFT",
    ArrowUpLeft: "ARROW_UP_LEFT",
    ArrowDownLeft: "ARROW_DOWN_LEFT",
    ArrowRight: "ARROW_RIGHT",
    ArrowUpRight: "ARROW_UP_RIGHT",
    ArrowDownRight: "ARROW_DOWN_RIGHT",
    FaceUp: "FACE_UP",
    FaceDown: "FACE_DOWN",
    FaceFlat: "FACE_FLAT",
    OneBar: "ONE_BAR",
    TwoBar: "TWO_BAR",
    ThreeBar: "THREE_BAR",
    Circle: "CIRCLE",
    Triangle: "TRIANGLE",
    Square: "SQUARE",
    Flag: "FLAG",
    ThumbsUp: "THUMBS_UP",
    ThumbsDown: "THUMBS_DOWN",
    Checkmark: "CHECKMARK",
    X: "X",
} as const;

export type AnalysisIcon = (typeof AnalysisIcon)[keyof typeof AnalysisIcon];

export const AnalysisKpiSparklineType = {
    Line: "LINE",
    Area: "AREA",
} as const;

export type AnalysisKpiSparklineType = (typeof AnalysisKpiSparklineType)[keyof typeof AnalysisKpiSparklineType];

export const AnalysisKpiVisualStandardLayoutType = {
    Classic: "CLASSIC",
    Vertical: "VERTICAL",
} as const;

export type AnalysisKpiVisualStandardLayoutType = (typeof AnalysisKpiVisualStandardLayoutType)[keyof typeof AnalysisKpiVisualStandardLayoutType];

export const AnalysisLayoutElementType = {
    Visual: "VISUAL",
    FilterControl: "FILTER_CONTROL",
    ParameterControl: "PARAMETER_CONTROL",
    TextBox: "TEXT_BOX",
} as const;

export type AnalysisLayoutElementType = (typeof AnalysisLayoutElementType)[keyof typeof AnalysisLayoutElementType];

export const AnalysisLegendPosition = {
    Auto: "AUTO",
    Right: "RIGHT",
    Bottom: "BOTTOM",
    Top: "TOP",
} as const;

export type AnalysisLegendPosition = (typeof AnalysisLegendPosition)[keyof typeof AnalysisLegendPosition];

export const AnalysisLineChartLineStyle = {
    Solid: "SOLID",
    Dotted: "DOTTED",
    Dashed: "DASHED",
} as const;

export type AnalysisLineChartLineStyle = (typeof AnalysisLineChartLineStyle)[keyof typeof AnalysisLineChartLineStyle];

export const AnalysisLineChartMarkerShape = {
    Circle: "CIRCLE",
    Triangle: "TRIANGLE",
    Square: "SQUARE",
    Diamond: "DIAMOND",
    RoundedSquare: "ROUNDED_SQUARE",
} as const;

export type AnalysisLineChartMarkerShape = (typeof AnalysisLineChartMarkerShape)[keyof typeof AnalysisLineChartMarkerShape];

export const AnalysisLineChartType = {
    Line: "LINE",
    Area: "AREA",
    StackedArea: "STACKED_AREA",
} as const;

export type AnalysisLineChartType = (typeof AnalysisLineChartType)[keyof typeof AnalysisLineChartType];

export const AnalysisLineInterpolation = {
    Linear: "LINEAR",
    Smooth: "SMOOTH",
    Stepped: "STEPPED",
} as const;

export type AnalysisLineInterpolation = (typeof AnalysisLineInterpolation)[keyof typeof AnalysisLineInterpolation];

export const AnalysisMapZoomMode = {
    Auto: "AUTO",
    Manual: "MANUAL",
} as const;

export type AnalysisMapZoomMode = (typeof AnalysisMapZoomMode)[keyof typeof AnalysisMapZoomMode];

export const AnalysisMaximumMinimumComputationType = {
    Maximum: "MAXIMUM",
    Minimum: "MINIMUM",
} as const;

export type AnalysisMaximumMinimumComputationType = (typeof AnalysisMaximumMinimumComputationType)[keyof typeof AnalysisMaximumMinimumComputationType];

export const AnalysisMissingDataTreatmentOption = {
    Interpolate: "INTERPOLATE",
    ShowAsZero: "SHOW_AS_ZERO",
    ShowAsBlank: "SHOW_AS_BLANK",
} as const;

export type AnalysisMissingDataTreatmentOption = (typeof AnalysisMissingDataTreatmentOption)[keyof typeof AnalysisMissingDataTreatmentOption];

export const AnalysisNegativeValueDisplayMode = {
    Positive: "POSITIVE",
    Negative: "NEGATIVE",
} as const;

export type AnalysisNegativeValueDisplayMode = (typeof AnalysisNegativeValueDisplayMode)[keyof typeof AnalysisNegativeValueDisplayMode];

export const AnalysisNumberScale = {
    None: "NONE",
    Auto: "AUTO",
    Thousands: "THOUSANDS",
    Millions: "MILLIONS",
    Billions: "BILLIONS",
    Trillions: "TRILLIONS",
} as const;

export type AnalysisNumberScale = (typeof AnalysisNumberScale)[keyof typeof AnalysisNumberScale];

export const AnalysisNumericEqualityMatchOperator = {
    Equals: "EQUALS",
    DoesNotEqual: "DOES_NOT_EQUAL",
} as const;

export type AnalysisNumericEqualityMatchOperator = (typeof AnalysisNumericEqualityMatchOperator)[keyof typeof AnalysisNumericEqualityMatchOperator];

export const AnalysisNumericFilterSelectAllOptions = {
    FilterAllValues: "FILTER_ALL_VALUES",
} as const;

export type AnalysisNumericFilterSelectAllOptions = (typeof AnalysisNumericFilterSelectAllOptions)[keyof typeof AnalysisNumericFilterSelectAllOptions];

export const AnalysisNumericSeparatorSymbol = {
    Comma: "COMMA",
    Dot: "DOT",
    Space: "SPACE",
} as const;

export type AnalysisNumericSeparatorSymbol = (typeof AnalysisNumericSeparatorSymbol)[keyof typeof AnalysisNumericSeparatorSymbol];

export const AnalysisOtherCategories = {
    Include: "INCLUDE",
    Exclude: "EXCLUDE",
} as const;

export type AnalysisOtherCategories = (typeof AnalysisOtherCategories)[keyof typeof AnalysisOtherCategories];

export const AnalysisPanelBorderStyle = {
    Solid: "SOLID",
    Dashed: "DASHED",
    Dotted: "DOTTED",
} as const;

export type AnalysisPanelBorderStyle = (typeof AnalysisPanelBorderStyle)[keyof typeof AnalysisPanelBorderStyle];

export const AnalysisPaperOrientation = {
    Portrait: "PORTRAIT",
    Landscape: "LANDSCAPE",
} as const;

export type AnalysisPaperOrientation = (typeof AnalysisPaperOrientation)[keyof typeof AnalysisPaperOrientation];

export const AnalysisPaperSize = {
    UsLetter: "US_LETTER",
    UsLegal: "US_LEGAL",
    UsTabloidLedger: "US_TABLOID_LEDGER",
    A0: "A0",
    A1: "A1",
    A2: "A2",
    A3: "A3",
    A4: "A4",
    A5: "A5",
    JisB4: "JIS_B4",
    JisB5: "JIS_B5",
} as const;

export type AnalysisPaperSize = (typeof AnalysisPaperSize)[keyof typeof AnalysisPaperSize];

export const AnalysisParameterValueType = {
    MultiValued: "MULTI_VALUED",
    SingleValued: "SINGLE_VALUED",
} as const;

export type AnalysisParameterValueType = (typeof AnalysisParameterValueType)[keyof typeof AnalysisParameterValueType];

export const AnalysisPivotTableConditionalFormattingScopeRole = {
    Field: "FIELD",
    FieldTotal: "FIELD_TOTAL",
    GrandTotal: "GRAND_TOTAL",
} as const;

export type AnalysisPivotTableConditionalFormattingScopeRole = (typeof AnalysisPivotTableConditionalFormattingScopeRole)[keyof typeof AnalysisPivotTableConditionalFormattingScopeRole];

export const AnalysisPivotTableDataPathType = {
    HierarchyRowsLayoutColumn: "HIERARCHY_ROWS_LAYOUT_COLUMN",
    MultipleRowMetricsColumn: "MULTIPLE_ROW_METRICS_COLUMN",
    EmptyColumnHeader: "EMPTY_COLUMN_HEADER",
    CountMetricColumn: "COUNT_METRIC_COLUMN",
} as const;

export type AnalysisPivotTableDataPathType = (typeof AnalysisPivotTableDataPathType)[keyof typeof AnalysisPivotTableDataPathType];

export const AnalysisPivotTableFieldCollapseState = {
    Collapsed: "COLLAPSED",
    Expanded: "EXPANDED",
} as const;

export type AnalysisPivotTableFieldCollapseState = (typeof AnalysisPivotTableFieldCollapseState)[keyof typeof AnalysisPivotTableFieldCollapseState];

export const AnalysisPivotTableMetricPlacement = {
    Row: "ROW",
    Column: "COLUMN",
} as const;

export type AnalysisPivotTableMetricPlacement = (typeof AnalysisPivotTableMetricPlacement)[keyof typeof AnalysisPivotTableMetricPlacement];

export const AnalysisPivotTableRowsLayout = {
    Tabular: "TABULAR",
    Hierarchy: "HIERARCHY",
} as const;

export type AnalysisPivotTableRowsLayout = (typeof AnalysisPivotTableRowsLayout)[keyof typeof AnalysisPivotTableRowsLayout];

export const AnalysisPivotTableSubtotalLevel = {
    All: "ALL",
    Custom: "CUSTOM",
    Last: "LAST",
} as const;

export type AnalysisPivotTableSubtotalLevel = (typeof AnalysisPivotTableSubtotalLevel)[keyof typeof AnalysisPivotTableSubtotalLevel];

export const AnalysisPrimaryValueDisplayType = {
    Hidden: "HIDDEN",
    Comparison: "COMPARISON",
    Actual: "ACTUAL",
} as const;

export type AnalysisPrimaryValueDisplayType = (typeof AnalysisPrimaryValueDisplayType)[keyof typeof AnalysisPrimaryValueDisplayType];

export const AnalysisRadarChartAxesRangeScale = {
    Auto: "AUTO",
    Independent: "INDEPENDENT",
    Shared: "SHARED",
} as const;

export type AnalysisRadarChartAxesRangeScale = (typeof AnalysisRadarChartAxesRangeScale)[keyof typeof AnalysisRadarChartAxesRangeScale];

export const AnalysisRadarChartShape = {
    Circle: "CIRCLE",
    Polygon: "POLYGON",
} as const;

export type AnalysisRadarChartShape = (typeof AnalysisRadarChartShape)[keyof typeof AnalysisRadarChartShape];

export const AnalysisReferenceLineLabelHorizontalPosition = {
    Left: "LEFT",
    Center: "CENTER",
    Right: "RIGHT",
} as const;

export type AnalysisReferenceLineLabelHorizontalPosition = (typeof AnalysisReferenceLineLabelHorizontalPosition)[keyof typeof AnalysisReferenceLineLabelHorizontalPosition];

export const AnalysisReferenceLineLabelVerticalPosition = {
    Above: "ABOVE",
    Below: "BELOW",
} as const;

export type AnalysisReferenceLineLabelVerticalPosition = (typeof AnalysisReferenceLineLabelVerticalPosition)[keyof typeof AnalysisReferenceLineLabelVerticalPosition];

export const AnalysisReferenceLinePatternType = {
    Solid: "SOLID",
    Dashed: "DASHED",
    Dotted: "DOTTED",
} as const;

export type AnalysisReferenceLinePatternType = (typeof AnalysisReferenceLinePatternType)[keyof typeof AnalysisReferenceLinePatternType];

export const AnalysisReferenceLineSeriesType = {
    Bar: "BAR",
    Line: "LINE",
} as const;

export type AnalysisReferenceLineSeriesType = (typeof AnalysisReferenceLineSeriesType)[keyof typeof AnalysisReferenceLineSeriesType];

export const AnalysisReferenceLineValueLabelRelativePosition = {
    BeforeCustomLabel: "BEFORE_CUSTOM_LABEL",
    AfterCustomLabel: "AFTER_CUSTOM_LABEL",
} as const;

export type AnalysisReferenceLineValueLabelRelativePosition = (typeof AnalysisReferenceLineValueLabelRelativePosition)[keyof typeof AnalysisReferenceLineValueLabelRelativePosition];

export const AnalysisRelativeDateType = {
    Previous: "PREVIOUS",
    This: "THIS",
    Last: "LAST",
    Now: "NOW",
    Next: "NEXT",
} as const;

export type AnalysisRelativeDateType = (typeof AnalysisRelativeDateType)[keyof typeof AnalysisRelativeDateType];

export const AnalysisRelativeFontSize = {
    ExtraSmall: "EXTRA_SMALL",
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
    ExtraLarge: "EXTRA_LARGE",
} as const;

export type AnalysisRelativeFontSize = (typeof AnalysisRelativeFontSize)[keyof typeof AnalysisRelativeFontSize];

export const AnalysisResizeOption = {
    Fixed: "FIXED",
    Responsive: "RESPONSIVE",
} as const;

export type AnalysisResizeOption = (typeof AnalysisResizeOption)[keyof typeof AnalysisResizeOption];

export const AnalysisResourceStatus = {
    CreationInProgress: "CREATION_IN_PROGRESS",
    CreationSuccessful: "CREATION_SUCCESSFUL",
    CreationFailed: "CREATION_FAILED",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    UpdateSuccessful: "UPDATE_SUCCESSFUL",
    UpdateFailed: "UPDATE_FAILED",
    Deleted: "DELETED",
} as const;

export type AnalysisResourceStatus = (typeof AnalysisResourceStatus)[keyof typeof AnalysisResourceStatus];

export const AnalysisSectionPageBreakStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type AnalysisSectionPageBreakStatus = (typeof AnalysisSectionPageBreakStatus)[keyof typeof AnalysisSectionPageBreakStatus];

export const AnalysisSelectAllValueOptions = {
    AllValues: "ALL_VALUES",
} as const;

export type AnalysisSelectAllValueOptions = (typeof AnalysisSelectAllValueOptions)[keyof typeof AnalysisSelectAllValueOptions];

export const AnalysisSelectedFieldOptions = {
    AllFields: "ALL_FIELDS",
} as const;

export type AnalysisSelectedFieldOptions = (typeof AnalysisSelectedFieldOptions)[keyof typeof AnalysisSelectedFieldOptions];

export const AnalysisSelectedTooltipType = {
    Basic: "BASIC",
    Detailed: "DETAILED",
} as const;

export type AnalysisSelectedTooltipType = (typeof AnalysisSelectedTooltipType)[keyof typeof AnalysisSelectedTooltipType];

export const AnalysisSheetContentType = {
    Paginated: "PAGINATED",
    Interactive: "INTERACTIVE",
} as const;

export type AnalysisSheetContentType = (typeof AnalysisSheetContentType)[keyof typeof AnalysisSheetContentType];

export const AnalysisSheetControlDateTimePickerType = {
    SingleValued: "SINGLE_VALUED",
    DateRange: "DATE_RANGE",
} as const;

export type AnalysisSheetControlDateTimePickerType = (typeof AnalysisSheetControlDateTimePickerType)[keyof typeof AnalysisSheetControlDateTimePickerType];

export const AnalysisSheetControlListType = {
    MultiSelect: "MULTI_SELECT",
    SingleSelect: "SINGLE_SELECT",
} as const;

export type AnalysisSheetControlListType = (typeof AnalysisSheetControlListType)[keyof typeof AnalysisSheetControlListType];

export const AnalysisSheetControlSliderType = {
    SinglePoint: "SINGLE_POINT",
    Range: "RANGE",
} as const;

export type AnalysisSheetControlSliderType = (typeof AnalysisSheetControlSliderType)[keyof typeof AnalysisSheetControlSliderType];

export const AnalysisSimpleAttributeAggregationFunction = {
    UniqueValue: "UNIQUE_VALUE",
} as const;

export type AnalysisSimpleAttributeAggregationFunction = (typeof AnalysisSimpleAttributeAggregationFunction)[keyof typeof AnalysisSimpleAttributeAggregationFunction];

export const AnalysisSimpleNumericalAggregationFunction = {
    Sum: "SUM",
    Average: "AVERAGE",
    Min: "MIN",
    Max: "MAX",
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
    Var: "VAR",
    Varp: "VARP",
    Stdev: "STDEV",
    Stdevp: "STDEVP",
    Median: "MEDIAN",
} as const;

export type AnalysisSimpleNumericalAggregationFunction = (typeof AnalysisSimpleNumericalAggregationFunction)[keyof typeof AnalysisSimpleNumericalAggregationFunction];

export const AnalysisSimpleTotalAggregationFunction = {
    Default: "DEFAULT",
    Sum: "SUM",
    Average: "AVERAGE",
    Min: "MIN",
    Max: "MAX",
    None: "NONE",
} as const;

export type AnalysisSimpleTotalAggregationFunction = (typeof AnalysisSimpleTotalAggregationFunction)[keyof typeof AnalysisSimpleTotalAggregationFunction];

export const AnalysisSmallMultiplesAxisPlacement = {
    Outside: "OUTSIDE",
    Inside: "INSIDE",
} as const;

export type AnalysisSmallMultiplesAxisPlacement = (typeof AnalysisSmallMultiplesAxisPlacement)[keyof typeof AnalysisSmallMultiplesAxisPlacement];

export const AnalysisSmallMultiplesAxisScale = {
    Shared: "SHARED",
    Independent: "INDEPENDENT",
} as const;

export type AnalysisSmallMultiplesAxisScale = (typeof AnalysisSmallMultiplesAxisScale)[keyof typeof AnalysisSmallMultiplesAxisScale];

export const AnalysisSortDirection = {
    Asc: "ASC",
    Desc: "DESC",
} as const;

export type AnalysisSortDirection = (typeof AnalysisSortDirection)[keyof typeof AnalysisSortDirection];

export const AnalysisSpecialValue = {
    Empty: "EMPTY",
    Null: "NULL",
    Other: "OTHER",
} as const;

export type AnalysisSpecialValue = (typeof AnalysisSpecialValue)[keyof typeof AnalysisSpecialValue];

export const AnalysisStyledCellType = {
    Total: "TOTAL",
    MetricHeader: "METRIC_HEADER",
    Value: "VALUE",
} as const;

export type AnalysisStyledCellType = (typeof AnalysisStyledCellType)[keyof typeof AnalysisStyledCellType];

export const AnalysisTableBorderStyle = {
    None: "NONE",
    Solid: "SOLID",
} as const;

export type AnalysisTableBorderStyle = (typeof AnalysisTableBorderStyle)[keyof typeof AnalysisTableBorderStyle];

export const AnalysisTableCellImageScalingConfiguration = {
    FitToCellHeight: "FIT_TO_CELL_HEIGHT",
    FitToCellWidth: "FIT_TO_CELL_WIDTH",
    DoNotScale: "DO_NOT_SCALE",
} as const;

export type AnalysisTableCellImageScalingConfiguration = (typeof AnalysisTableCellImageScalingConfiguration)[keyof typeof AnalysisTableCellImageScalingConfiguration];

export const AnalysisTableFieldIconSetType = {
    Link: "LINK",
} as const;

export type AnalysisTableFieldIconSetType = (typeof AnalysisTableFieldIconSetType)[keyof typeof AnalysisTableFieldIconSetType];

export const AnalysisTableOrientation = {
    Vertical: "VERTICAL",
    Horizontal: "HORIZONTAL",
} as const;

export type AnalysisTableOrientation = (typeof AnalysisTableOrientation)[keyof typeof AnalysisTableOrientation];

export const AnalysisTableTotalsPlacement = {
    Start: "START",
    End: "END",
    Auto: "AUTO",
} as const;

export type AnalysisTableTotalsPlacement = (typeof AnalysisTableTotalsPlacement)[keyof typeof AnalysisTableTotalsPlacement];

export const AnalysisTableTotalsScrollStatus = {
    Pinned: "PINNED",
    Scrolled: "SCROLLED",
} as const;

export type AnalysisTableTotalsScrollStatus = (typeof AnalysisTableTotalsScrollStatus)[keyof typeof AnalysisTableTotalsScrollStatus];

export const AnalysisTargetVisualOptions = {
    AllVisuals: "ALL_VISUALS",
} as const;

export type AnalysisTargetVisualOptions = (typeof AnalysisTargetVisualOptions)[keyof typeof AnalysisTargetVisualOptions];

export const AnalysisTextWrap = {
    None: "NONE",
    Wrap: "WRAP",
} as const;

export type AnalysisTextWrap = (typeof AnalysisTextWrap)[keyof typeof AnalysisTextWrap];

export const AnalysisTimeGranularity = {
    Year: "YEAR",
    Quarter: "QUARTER",
    Month: "MONTH",
    Week: "WEEK",
    Day: "DAY",
    Hour: "HOUR",
    Minute: "MINUTE",
    Second: "SECOND",
    Millisecond: "MILLISECOND",
} as const;

export type AnalysisTimeGranularity = (typeof AnalysisTimeGranularity)[keyof typeof AnalysisTimeGranularity];

export const AnalysisTooltipTitleType = {
    None: "NONE",
    PrimaryValue: "PRIMARY_VALUE",
} as const;

export type AnalysisTooltipTitleType = (typeof AnalysisTooltipTitleType)[keyof typeof AnalysisTooltipTitleType];

export const AnalysisTopBottomComputationType = {
    Top: "TOP",
    Bottom: "BOTTOM",
} as const;

export type AnalysisTopBottomComputationType = (typeof AnalysisTopBottomComputationType)[keyof typeof AnalysisTopBottomComputationType];

export const AnalysisTopBottomSortOrder = {
    PercentDifference: "PERCENT_DIFFERENCE",
    AbsoluteDifference: "ABSOLUTE_DIFFERENCE",
} as const;

export type AnalysisTopBottomSortOrder = (typeof AnalysisTopBottomSortOrder)[keyof typeof AnalysisTopBottomSortOrder];

export const AnalysisUrlTargetConfiguration = {
    NewTab: "NEW_TAB",
    NewWindow: "NEW_WINDOW",
    SameTab: "SAME_TAB",
} as const;

export type AnalysisUrlTargetConfiguration = (typeof AnalysisUrlTargetConfiguration)[keyof typeof AnalysisUrlTargetConfiguration];

export const AnalysisValidationStrategyMode = {
    Strict: "STRICT",
    Lenient: "LENIENT",
} as const;

export type AnalysisValidationStrategyMode = (typeof AnalysisValidationStrategyMode)[keyof typeof AnalysisValidationStrategyMode];

export const AnalysisValueWhenUnsetOption = {
    RecommendedValue: "RECOMMENDED_VALUE",
    Null: "NULL",
} as const;

export type AnalysisValueWhenUnsetOption = (typeof AnalysisValueWhenUnsetOption)[keyof typeof AnalysisValueWhenUnsetOption];

export const AnalysisVerticalTextAlignment = {
    Top: "TOP",
    Middle: "MIDDLE",
    Bottom: "BOTTOM",
    Auto: "AUTO",
} as const;

export type AnalysisVerticalTextAlignment = (typeof AnalysisVerticalTextAlignment)[keyof typeof AnalysisVerticalTextAlignment];

export const AnalysisVisibility = {
    Hidden: "HIDDEN",
    Visible: "VISIBLE",
} as const;

export type AnalysisVisibility = (typeof AnalysisVisibility)[keyof typeof AnalysisVisibility];

export const AnalysisVisualCustomActionTrigger = {
    DataPointClick: "DATA_POINT_CLICK",
    DataPointMenu: "DATA_POINT_MENU",
} as const;

export type AnalysisVisualCustomActionTrigger = (typeof AnalysisVisualCustomActionTrigger)[keyof typeof AnalysisVisualCustomActionTrigger];

export const AnalysisWidgetStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type AnalysisWidgetStatus = (typeof AnalysisWidgetStatus)[keyof typeof AnalysisWidgetStatus];

export const AnalysisWordCloudCloudLayout = {
    Fluid: "FLUID",
    Normal: "NORMAL",
} as const;

export type AnalysisWordCloudCloudLayout = (typeof AnalysisWordCloudCloudLayout)[keyof typeof AnalysisWordCloudCloudLayout];

export const AnalysisWordCloudWordCasing = {
    LowerCase: "LOWER_CASE",
    ExistingCase: "EXISTING_CASE",
} as const;

export type AnalysisWordCloudWordCasing = (typeof AnalysisWordCloudWordCasing)[keyof typeof AnalysisWordCloudWordCasing];

export const AnalysisWordCloudWordOrientation = {
    Horizontal: "HORIZONTAL",
    HorizontalAndVertical: "HORIZONTAL_AND_VERTICAL",
} as const;

export type AnalysisWordCloudWordOrientation = (typeof AnalysisWordCloudWordOrientation)[keyof typeof AnalysisWordCloudWordOrientation];

export const AnalysisWordCloudWordPadding = {
    None: "NONE",
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
} as const;

export type AnalysisWordCloudWordPadding = (typeof AnalysisWordCloudWordPadding)[keyof typeof AnalysisWordCloudWordPadding];

export const AnalysisWordCloudWordScaling = {
    Emphasize: "EMPHASIZE",
    Normal: "NORMAL",
} as const;

export type AnalysisWordCloudWordScaling = (typeof AnalysisWordCloudWordScaling)[keyof typeof AnalysisWordCloudWordScaling];

export const DashboardAnchorOption = {
    Now: "NOW",
} as const;

export type DashboardAnchorOption = (typeof DashboardAnchorOption)[keyof typeof DashboardAnchorOption];

export const DashboardArcThickness = {
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
    Whole: "WHOLE",
} as const;

export type DashboardArcThickness = (typeof DashboardArcThickness)[keyof typeof DashboardArcThickness];

export const DashboardArcThicknessOptions = {
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
} as const;

export type DashboardArcThicknessOptions = (typeof DashboardArcThicknessOptions)[keyof typeof DashboardArcThicknessOptions];

export const DashboardAxisBinding = {
    PrimaryYaxis: "PRIMARY_YAXIS",
    SecondaryYaxis: "SECONDARY_YAXIS",
} as const;

export type DashboardAxisBinding = (typeof DashboardAxisBinding)[keyof typeof DashboardAxisBinding];

export const DashboardBarChartOrientation = {
    Horizontal: "HORIZONTAL",
    Vertical: "VERTICAL",
} as const;

export type DashboardBarChartOrientation = (typeof DashboardBarChartOrientation)[keyof typeof DashboardBarChartOrientation];

export const DashboardBarsArrangement = {
    Clustered: "CLUSTERED",
    Stacked: "STACKED",
    StackedPercent: "STACKED_PERCENT",
} as const;

export type DashboardBarsArrangement = (typeof DashboardBarsArrangement)[keyof typeof DashboardBarsArrangement];

export const DashboardBaseMapStyleType = {
    LightGray: "LIGHT_GRAY",
    DarkGray: "DARK_GRAY",
    Street: "STREET",
    Imagery: "IMAGERY",
} as const;

export type DashboardBaseMapStyleType = (typeof DashboardBaseMapStyleType)[keyof typeof DashboardBaseMapStyleType];

export const DashboardBehavior = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type DashboardBehavior = (typeof DashboardBehavior)[keyof typeof DashboardBehavior];

export const DashboardBoxPlotFillStyle = {
    Solid: "SOLID",
    Transparent: "TRANSPARENT",
} as const;

export type DashboardBoxPlotFillStyle = (typeof DashboardBoxPlotFillStyle)[keyof typeof DashboardBoxPlotFillStyle];

export const DashboardCategoricalAggregationFunction = {
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
} as const;

export type DashboardCategoricalAggregationFunction = (typeof DashboardCategoricalAggregationFunction)[keyof typeof DashboardCategoricalAggregationFunction];

export const DashboardCategoryFilterMatchOperator = {
    Equals: "EQUALS",
    DoesNotEqual: "DOES_NOT_EQUAL",
    Contains: "CONTAINS",
    DoesNotContain: "DOES_NOT_CONTAIN",
    StartsWith: "STARTS_WITH",
    EndsWith: "ENDS_WITH",
} as const;

export type DashboardCategoryFilterMatchOperator = (typeof DashboardCategoryFilterMatchOperator)[keyof typeof DashboardCategoryFilterMatchOperator];

export const DashboardCategoryFilterSelectAllOptions = {
    FilterAllValues: "FILTER_ALL_VALUES",
} as const;

export type DashboardCategoryFilterSelectAllOptions = (typeof DashboardCategoryFilterSelectAllOptions)[keyof typeof DashboardCategoryFilterSelectAllOptions];

export const DashboardColorFillType = {
    Discrete: "DISCRETE",
    Gradient: "GRADIENT",
} as const;

export type DashboardColorFillType = (typeof DashboardColorFillType)[keyof typeof DashboardColorFillType];

export const DashboardColumnRole = {
    Dimension: "DIMENSION",
    Measure: "MEASURE",
} as const;

export type DashboardColumnRole = (typeof DashboardColumnRole)[keyof typeof DashboardColumnRole];

export const DashboardComparisonMethod = {
    Difference: "DIFFERENCE",
    PercentDifference: "PERCENT_DIFFERENCE",
    Percent: "PERCENT",
} as const;

export type DashboardComparisonMethod = (typeof DashboardComparisonMethod)[keyof typeof DashboardComparisonMethod];

export const DashboardConditionalFormattingIconDisplayOption = {
    IconOnly: "ICON_ONLY",
} as const;

export type DashboardConditionalFormattingIconDisplayOption = (typeof DashboardConditionalFormattingIconDisplayOption)[keyof typeof DashboardConditionalFormattingIconDisplayOption];

export const DashboardConditionalFormattingIconSetType = {
    PlusMinus: "PLUS_MINUS",
    CheckX: "CHECK_X",
    ThreeColorArrow: "THREE_COLOR_ARROW",
    ThreeGrayArrow: "THREE_GRAY_ARROW",
    CaretUpMinusDown: "CARET_UP_MINUS_DOWN",
    ThreeShape: "THREE_SHAPE",
    ThreeCircle: "THREE_CIRCLE",
    Flags: "FLAGS",
    Bars: "BARS",
    FourColorArrow: "FOUR_COLOR_ARROW",
    FourGrayArrow: "FOUR_GRAY_ARROW",
} as const;

export type DashboardConditionalFormattingIconSetType = (typeof DashboardConditionalFormattingIconSetType)[keyof typeof DashboardConditionalFormattingIconSetType];

export const DashboardCrossDatasetTypes = {
    AllDatasets: "ALL_DATASETS",
    SingleDataset: "SINGLE_DATASET",
} as const;

export type DashboardCrossDatasetTypes = (typeof DashboardCrossDatasetTypes)[keyof typeof DashboardCrossDatasetTypes];

export const DashboardCustomContentImageScalingConfiguration = {
    FitToHeight: "FIT_TO_HEIGHT",
    FitToWidth: "FIT_TO_WIDTH",
    DoNotScale: "DO_NOT_SCALE",
    ScaleToVisual: "SCALE_TO_VISUAL",
} as const;

export type DashboardCustomContentImageScalingConfiguration = (typeof DashboardCustomContentImageScalingConfiguration)[keyof typeof DashboardCustomContentImageScalingConfiguration];

export const DashboardCustomContentType = {
    Image: "IMAGE",
    OtherEmbeddedContent: "OTHER_EMBEDDED_CONTENT",
} as const;

export type DashboardCustomContentType = (typeof DashboardCustomContentType)[keyof typeof DashboardCustomContentType];

export const DashboardDataLabelContent = {
    Value: "VALUE",
    Percent: "PERCENT",
    ValueAndPercent: "VALUE_AND_PERCENT",
} as const;

export type DashboardDataLabelContent = (typeof DashboardDataLabelContent)[keyof typeof DashboardDataLabelContent];

export const DashboardDataLabelOverlap = {
    DisableOverlap: "DISABLE_OVERLAP",
    EnableOverlap: "ENABLE_OVERLAP",
} as const;

export type DashboardDataLabelOverlap = (typeof DashboardDataLabelOverlap)[keyof typeof DashboardDataLabelOverlap];

export const DashboardDataLabelPosition = {
    Inside: "INSIDE",
    Outside: "OUTSIDE",
    Left: "LEFT",
    Top: "TOP",
    Bottom: "BOTTOM",
    Right: "RIGHT",
} as const;

export type DashboardDataLabelPosition = (typeof DashboardDataLabelPosition)[keyof typeof DashboardDataLabelPosition];

export const DashboardDateAggregationFunction = {
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
    Min: "MIN",
    Max: "MAX",
} as const;

export type DashboardDateAggregationFunction = (typeof DashboardDateAggregationFunction)[keyof typeof DashboardDateAggregationFunction];

export const DashboardDayOfTheWeek = {
    Sunday: "SUNDAY",
    Monday: "MONDAY",
    Tuesday: "TUESDAY",
    Wednesday: "WEDNESDAY",
    Thursday: "THURSDAY",
    Friday: "FRIDAY",
    Saturday: "SATURDAY",
} as const;

export type DashboardDayOfTheWeek = (typeof DashboardDayOfTheWeek)[keyof typeof DashboardDayOfTheWeek];

export const DashboardErrorType = {
    AccessDenied: "ACCESS_DENIED",
    SourceNotFound: "SOURCE_NOT_FOUND",
    DataSetNotFound: "DATA_SET_NOT_FOUND",
    InternalFailure: "INTERNAL_FAILURE",
    ParameterValueIncompatible: "PARAMETER_VALUE_INCOMPATIBLE",
    ParameterTypeInvalid: "PARAMETER_TYPE_INVALID",
    ParameterNotFound: "PARAMETER_NOT_FOUND",
    ColumnTypeMismatch: "COLUMN_TYPE_MISMATCH",
    ColumnGeographicRoleMismatch: "COLUMN_GEOGRAPHIC_ROLE_MISMATCH",
    ColumnReplacementMissing: "COLUMN_REPLACEMENT_MISSING",
} as const;

export type DashboardErrorType = (typeof DashboardErrorType)[keyof typeof DashboardErrorType];

export const DashboardFilterNullOption = {
    AllValues: "ALL_VALUES",
    NullsOnly: "NULLS_ONLY",
    NonNullsOnly: "NON_NULLS_ONLY",
} as const;

export type DashboardFilterNullOption = (typeof DashboardFilterNullOption)[keyof typeof DashboardFilterNullOption];

export const DashboardFilterVisualScope = {
    AllVisuals: "ALL_VISUALS",
    SelectedVisuals: "SELECTED_VISUALS",
} as const;

export type DashboardFilterVisualScope = (typeof DashboardFilterVisualScope)[keyof typeof DashboardFilterVisualScope];

export const DashboardFontDecoration = {
    Underline: "UNDERLINE",
    None: "NONE",
} as const;

export type DashboardFontDecoration = (typeof DashboardFontDecoration)[keyof typeof DashboardFontDecoration];

export const DashboardFontStyle = {
    Normal: "NORMAL",
    Italic: "ITALIC",
} as const;

export type DashboardFontStyle = (typeof DashboardFontStyle)[keyof typeof DashboardFontStyle];

export const DashboardFontWeightName = {
    Normal: "NORMAL",
    Bold: "BOLD",
} as const;

export type DashboardFontWeightName = (typeof DashboardFontWeightName)[keyof typeof DashboardFontWeightName];

export const DashboardForecastComputationSeasonality = {
    Automatic: "AUTOMATIC",
    Custom: "CUSTOM",
} as const;

export type DashboardForecastComputationSeasonality = (typeof DashboardForecastComputationSeasonality)[keyof typeof DashboardForecastComputationSeasonality];

export const DashboardFunnelChartMeasureDataLabelStyle = {
    ValueOnly: "VALUE_ONLY",
    PercentageByFirstStage: "PERCENTAGE_BY_FIRST_STAGE",
    PercentageByPreviousStage: "PERCENTAGE_BY_PREVIOUS_STAGE",
    ValueAndPercentageByFirstStage: "VALUE_AND_PERCENTAGE_BY_FIRST_STAGE",
    ValueAndPercentageByPreviousStage: "VALUE_AND_PERCENTAGE_BY_PREVIOUS_STAGE",
} as const;

export type DashboardFunnelChartMeasureDataLabelStyle = (typeof DashboardFunnelChartMeasureDataLabelStyle)[keyof typeof DashboardFunnelChartMeasureDataLabelStyle];

export const DashboardGeospatialSelectedPointStyle = {
    Point: "POINT",
    Cluster: "CLUSTER",
    Heatmap: "HEATMAP",
} as const;

export type DashboardGeospatialSelectedPointStyle = (typeof DashboardGeospatialSelectedPointStyle)[keyof typeof DashboardGeospatialSelectedPointStyle];

export const DashboardHistogramBinType = {
    BinCount: "BIN_COUNT",
    BinWidth: "BIN_WIDTH",
} as const;

export type DashboardHistogramBinType = (typeof DashboardHistogramBinType)[keyof typeof DashboardHistogramBinType];

export const DashboardHorizontalTextAlignment = {
    Left: "LEFT",
    Center: "CENTER",
    Right: "RIGHT",
    Auto: "AUTO",
} as const;

export type DashboardHorizontalTextAlignment = (typeof DashboardHorizontalTextAlignment)[keyof typeof DashboardHorizontalTextAlignment];

export const DashboardIcon = {
    CaretUp: "CARET_UP",
    CaretDown: "CARET_DOWN",
    Plus: "PLUS",
    Minus: "MINUS",
    ArrowUp: "ARROW_UP",
    ArrowDown: "ARROW_DOWN",
    ArrowLeft: "ARROW_LEFT",
    ArrowUpLeft: "ARROW_UP_LEFT",
    ArrowDownLeft: "ARROW_DOWN_LEFT",
    ArrowRight: "ARROW_RIGHT",
    ArrowUpRight: "ARROW_UP_RIGHT",
    ArrowDownRight: "ARROW_DOWN_RIGHT",
    FaceUp: "FACE_UP",
    FaceDown: "FACE_DOWN",
    FaceFlat: "FACE_FLAT",
    OneBar: "ONE_BAR",
    TwoBar: "TWO_BAR",
    ThreeBar: "THREE_BAR",
    Circle: "CIRCLE",
    Triangle: "TRIANGLE",
    Square: "SQUARE",
    Flag: "FLAG",
    ThumbsUp: "THUMBS_UP",
    ThumbsDown: "THUMBS_DOWN",
    Checkmark: "CHECKMARK",
    X: "X",
} as const;

export type DashboardIcon = (typeof DashboardIcon)[keyof typeof DashboardIcon];

export const DashboardKpiSparklineType = {
    Line: "LINE",
    Area: "AREA",
} as const;

export type DashboardKpiSparklineType = (typeof DashboardKpiSparklineType)[keyof typeof DashboardKpiSparklineType];

export const DashboardKpiVisualStandardLayoutType = {
    Classic: "CLASSIC",
    Vertical: "VERTICAL",
} as const;

export type DashboardKpiVisualStandardLayoutType = (typeof DashboardKpiVisualStandardLayoutType)[keyof typeof DashboardKpiVisualStandardLayoutType];

export const DashboardLayoutElementType = {
    Visual: "VISUAL",
    FilterControl: "FILTER_CONTROL",
    ParameterControl: "PARAMETER_CONTROL",
    TextBox: "TEXT_BOX",
} as const;

export type DashboardLayoutElementType = (typeof DashboardLayoutElementType)[keyof typeof DashboardLayoutElementType];

export const DashboardLegendPosition = {
    Auto: "AUTO",
    Right: "RIGHT",
    Bottom: "BOTTOM",
    Top: "TOP",
} as const;

export type DashboardLegendPosition = (typeof DashboardLegendPosition)[keyof typeof DashboardLegendPosition];

export const DashboardLineChartLineStyle = {
    Solid: "SOLID",
    Dotted: "DOTTED",
    Dashed: "DASHED",
} as const;

export type DashboardLineChartLineStyle = (typeof DashboardLineChartLineStyle)[keyof typeof DashboardLineChartLineStyle];

export const DashboardLineChartMarkerShape = {
    Circle: "CIRCLE",
    Triangle: "TRIANGLE",
    Square: "SQUARE",
    Diamond: "DIAMOND",
    RoundedSquare: "ROUNDED_SQUARE",
} as const;

export type DashboardLineChartMarkerShape = (typeof DashboardLineChartMarkerShape)[keyof typeof DashboardLineChartMarkerShape];

export const DashboardLineChartType = {
    Line: "LINE",
    Area: "AREA",
    StackedArea: "STACKED_AREA",
} as const;

export type DashboardLineChartType = (typeof DashboardLineChartType)[keyof typeof DashboardLineChartType];

export const DashboardLineInterpolation = {
    Linear: "LINEAR",
    Smooth: "SMOOTH",
    Stepped: "STEPPED",
} as const;

export type DashboardLineInterpolation = (typeof DashboardLineInterpolation)[keyof typeof DashboardLineInterpolation];

export const DashboardMapZoomMode = {
    Auto: "AUTO",
    Manual: "MANUAL",
} as const;

export type DashboardMapZoomMode = (typeof DashboardMapZoomMode)[keyof typeof DashboardMapZoomMode];

export const DashboardMaximumMinimumComputationType = {
    Maximum: "MAXIMUM",
    Minimum: "MINIMUM",
} as const;

export type DashboardMaximumMinimumComputationType = (typeof DashboardMaximumMinimumComputationType)[keyof typeof DashboardMaximumMinimumComputationType];

export const DashboardMissingDataTreatmentOption = {
    Interpolate: "INTERPOLATE",
    ShowAsZero: "SHOW_AS_ZERO",
    ShowAsBlank: "SHOW_AS_BLANK",
} as const;

export type DashboardMissingDataTreatmentOption = (typeof DashboardMissingDataTreatmentOption)[keyof typeof DashboardMissingDataTreatmentOption];

export const DashboardNegativeValueDisplayMode = {
    Positive: "POSITIVE",
    Negative: "NEGATIVE",
} as const;

export type DashboardNegativeValueDisplayMode = (typeof DashboardNegativeValueDisplayMode)[keyof typeof DashboardNegativeValueDisplayMode];

export const DashboardNumberScale = {
    None: "NONE",
    Auto: "AUTO",
    Thousands: "THOUSANDS",
    Millions: "MILLIONS",
    Billions: "BILLIONS",
    Trillions: "TRILLIONS",
} as const;

export type DashboardNumberScale = (typeof DashboardNumberScale)[keyof typeof DashboardNumberScale];

export const DashboardNumericEqualityMatchOperator = {
    Equals: "EQUALS",
    DoesNotEqual: "DOES_NOT_EQUAL",
} as const;

export type DashboardNumericEqualityMatchOperator = (typeof DashboardNumericEqualityMatchOperator)[keyof typeof DashboardNumericEqualityMatchOperator];

export const DashboardNumericFilterSelectAllOptions = {
    FilterAllValues: "FILTER_ALL_VALUES",
} as const;

export type DashboardNumericFilterSelectAllOptions = (typeof DashboardNumericFilterSelectAllOptions)[keyof typeof DashboardNumericFilterSelectAllOptions];

export const DashboardNumericSeparatorSymbol = {
    Comma: "COMMA",
    Dot: "DOT",
    Space: "SPACE",
} as const;

export type DashboardNumericSeparatorSymbol = (typeof DashboardNumericSeparatorSymbol)[keyof typeof DashboardNumericSeparatorSymbol];

export const DashboardOtherCategories = {
    Include: "INCLUDE",
    Exclude: "EXCLUDE",
} as const;

export type DashboardOtherCategories = (typeof DashboardOtherCategories)[keyof typeof DashboardOtherCategories];

export const DashboardPanelBorderStyle = {
    Solid: "SOLID",
    Dashed: "DASHED",
    Dotted: "DOTTED",
} as const;

export type DashboardPanelBorderStyle = (typeof DashboardPanelBorderStyle)[keyof typeof DashboardPanelBorderStyle];

export const DashboardPaperOrientation = {
    Portrait: "PORTRAIT",
    Landscape: "LANDSCAPE",
} as const;

export type DashboardPaperOrientation = (typeof DashboardPaperOrientation)[keyof typeof DashboardPaperOrientation];

export const DashboardPaperSize = {
    UsLetter: "US_LETTER",
    UsLegal: "US_LEGAL",
    UsTabloidLedger: "US_TABLOID_LEDGER",
    A0: "A0",
    A1: "A1",
    A2: "A2",
    A3: "A3",
    A4: "A4",
    A5: "A5",
    JisB4: "JIS_B4",
    JisB5: "JIS_B5",
} as const;

export type DashboardPaperSize = (typeof DashboardPaperSize)[keyof typeof DashboardPaperSize];

export const DashboardParameterValueType = {
    MultiValued: "MULTI_VALUED",
    SingleValued: "SINGLE_VALUED",
} as const;

export type DashboardParameterValueType = (typeof DashboardParameterValueType)[keyof typeof DashboardParameterValueType];

export const DashboardPivotTableConditionalFormattingScopeRole = {
    Field: "FIELD",
    FieldTotal: "FIELD_TOTAL",
    GrandTotal: "GRAND_TOTAL",
} as const;

export type DashboardPivotTableConditionalFormattingScopeRole = (typeof DashboardPivotTableConditionalFormattingScopeRole)[keyof typeof DashboardPivotTableConditionalFormattingScopeRole];

export const DashboardPivotTableDataPathType = {
    HierarchyRowsLayoutColumn: "HIERARCHY_ROWS_LAYOUT_COLUMN",
    MultipleRowMetricsColumn: "MULTIPLE_ROW_METRICS_COLUMN",
    EmptyColumnHeader: "EMPTY_COLUMN_HEADER",
    CountMetricColumn: "COUNT_METRIC_COLUMN",
} as const;

export type DashboardPivotTableDataPathType = (typeof DashboardPivotTableDataPathType)[keyof typeof DashboardPivotTableDataPathType];

export const DashboardPivotTableFieldCollapseState = {
    Collapsed: "COLLAPSED",
    Expanded: "EXPANDED",
} as const;

export type DashboardPivotTableFieldCollapseState = (typeof DashboardPivotTableFieldCollapseState)[keyof typeof DashboardPivotTableFieldCollapseState];

export const DashboardPivotTableMetricPlacement = {
    Row: "ROW",
    Column: "COLUMN",
} as const;

export type DashboardPivotTableMetricPlacement = (typeof DashboardPivotTableMetricPlacement)[keyof typeof DashboardPivotTableMetricPlacement];

export const DashboardPivotTableRowsLayout = {
    Tabular: "TABULAR",
    Hierarchy: "HIERARCHY",
} as const;

export type DashboardPivotTableRowsLayout = (typeof DashboardPivotTableRowsLayout)[keyof typeof DashboardPivotTableRowsLayout];

export const DashboardPivotTableSubtotalLevel = {
    All: "ALL",
    Custom: "CUSTOM",
    Last: "LAST",
} as const;

export type DashboardPivotTableSubtotalLevel = (typeof DashboardPivotTableSubtotalLevel)[keyof typeof DashboardPivotTableSubtotalLevel];

export const DashboardPrimaryValueDisplayType = {
    Hidden: "HIDDEN",
    Comparison: "COMPARISON",
    Actual: "ACTUAL",
} as const;

export type DashboardPrimaryValueDisplayType = (typeof DashboardPrimaryValueDisplayType)[keyof typeof DashboardPrimaryValueDisplayType];

export const DashboardRadarChartAxesRangeScale = {
    Auto: "AUTO",
    Independent: "INDEPENDENT",
    Shared: "SHARED",
} as const;

export type DashboardRadarChartAxesRangeScale = (typeof DashboardRadarChartAxesRangeScale)[keyof typeof DashboardRadarChartAxesRangeScale];

export const DashboardRadarChartShape = {
    Circle: "CIRCLE",
    Polygon: "POLYGON",
} as const;

export type DashboardRadarChartShape = (typeof DashboardRadarChartShape)[keyof typeof DashboardRadarChartShape];

export const DashboardReferenceLineLabelHorizontalPosition = {
    Left: "LEFT",
    Center: "CENTER",
    Right: "RIGHT",
} as const;

export type DashboardReferenceLineLabelHorizontalPosition = (typeof DashboardReferenceLineLabelHorizontalPosition)[keyof typeof DashboardReferenceLineLabelHorizontalPosition];

export const DashboardReferenceLineLabelVerticalPosition = {
    Above: "ABOVE",
    Below: "BELOW",
} as const;

export type DashboardReferenceLineLabelVerticalPosition = (typeof DashboardReferenceLineLabelVerticalPosition)[keyof typeof DashboardReferenceLineLabelVerticalPosition];

export const DashboardReferenceLinePatternType = {
    Solid: "SOLID",
    Dashed: "DASHED",
    Dotted: "DOTTED",
} as const;

export type DashboardReferenceLinePatternType = (typeof DashboardReferenceLinePatternType)[keyof typeof DashboardReferenceLinePatternType];

export const DashboardReferenceLineSeriesType = {
    Bar: "BAR",
    Line: "LINE",
} as const;

export type DashboardReferenceLineSeriesType = (typeof DashboardReferenceLineSeriesType)[keyof typeof DashboardReferenceLineSeriesType];

export const DashboardReferenceLineValueLabelRelativePosition = {
    BeforeCustomLabel: "BEFORE_CUSTOM_LABEL",
    AfterCustomLabel: "AFTER_CUSTOM_LABEL",
} as const;

export type DashboardReferenceLineValueLabelRelativePosition = (typeof DashboardReferenceLineValueLabelRelativePosition)[keyof typeof DashboardReferenceLineValueLabelRelativePosition];

export const DashboardRelativeDateType = {
    Previous: "PREVIOUS",
    This: "THIS",
    Last: "LAST",
    Now: "NOW",
    Next: "NEXT",
} as const;

export type DashboardRelativeDateType = (typeof DashboardRelativeDateType)[keyof typeof DashboardRelativeDateType];

export const DashboardRelativeFontSize = {
    ExtraSmall: "EXTRA_SMALL",
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
    ExtraLarge: "EXTRA_LARGE",
} as const;

export type DashboardRelativeFontSize = (typeof DashboardRelativeFontSize)[keyof typeof DashboardRelativeFontSize];

export const DashboardResizeOption = {
    Fixed: "FIXED",
    Responsive: "RESPONSIVE",
} as const;

export type DashboardResizeOption = (typeof DashboardResizeOption)[keyof typeof DashboardResizeOption];

export const DashboardResourceStatus = {
    CreationInProgress: "CREATION_IN_PROGRESS",
    CreationSuccessful: "CREATION_SUCCESSFUL",
    CreationFailed: "CREATION_FAILED",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    UpdateSuccessful: "UPDATE_SUCCESSFUL",
    UpdateFailed: "UPDATE_FAILED",
    Deleted: "DELETED",
} as const;

export type DashboardResourceStatus = (typeof DashboardResourceStatus)[keyof typeof DashboardResourceStatus];

export const DashboardSectionPageBreakStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type DashboardSectionPageBreakStatus = (typeof DashboardSectionPageBreakStatus)[keyof typeof DashboardSectionPageBreakStatus];

export const DashboardSelectAllValueOptions = {
    AllValues: "ALL_VALUES",
} as const;

export type DashboardSelectAllValueOptions = (typeof DashboardSelectAllValueOptions)[keyof typeof DashboardSelectAllValueOptions];

export const DashboardSelectedFieldOptions = {
    AllFields: "ALL_FIELDS",
} as const;

export type DashboardSelectedFieldOptions = (typeof DashboardSelectedFieldOptions)[keyof typeof DashboardSelectedFieldOptions];

export const DashboardSelectedTooltipType = {
    Basic: "BASIC",
    Detailed: "DETAILED",
} as const;

export type DashboardSelectedTooltipType = (typeof DashboardSelectedTooltipType)[keyof typeof DashboardSelectedTooltipType];

export const DashboardSheetContentType = {
    Paginated: "PAGINATED",
    Interactive: "INTERACTIVE",
} as const;

export type DashboardSheetContentType = (typeof DashboardSheetContentType)[keyof typeof DashboardSheetContentType];

export const DashboardSheetControlDateTimePickerType = {
    SingleValued: "SINGLE_VALUED",
    DateRange: "DATE_RANGE",
} as const;

export type DashboardSheetControlDateTimePickerType = (typeof DashboardSheetControlDateTimePickerType)[keyof typeof DashboardSheetControlDateTimePickerType];

export const DashboardSheetControlListType = {
    MultiSelect: "MULTI_SELECT",
    SingleSelect: "SINGLE_SELECT",
} as const;

export type DashboardSheetControlListType = (typeof DashboardSheetControlListType)[keyof typeof DashboardSheetControlListType];

export const DashboardSheetControlSliderType = {
    SinglePoint: "SINGLE_POINT",
    Range: "RANGE",
} as const;

export type DashboardSheetControlSliderType = (typeof DashboardSheetControlSliderType)[keyof typeof DashboardSheetControlSliderType];

export const DashboardSimpleAttributeAggregationFunction = {
    UniqueValue: "UNIQUE_VALUE",
} as const;

export type DashboardSimpleAttributeAggregationFunction = (typeof DashboardSimpleAttributeAggregationFunction)[keyof typeof DashboardSimpleAttributeAggregationFunction];

export const DashboardSimpleNumericalAggregationFunction = {
    Sum: "SUM",
    Average: "AVERAGE",
    Min: "MIN",
    Max: "MAX",
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
    Var: "VAR",
    Varp: "VARP",
    Stdev: "STDEV",
    Stdevp: "STDEVP",
    Median: "MEDIAN",
} as const;

export type DashboardSimpleNumericalAggregationFunction = (typeof DashboardSimpleNumericalAggregationFunction)[keyof typeof DashboardSimpleNumericalAggregationFunction];

export const DashboardSimpleTotalAggregationFunction = {
    Default: "DEFAULT",
    Sum: "SUM",
    Average: "AVERAGE",
    Min: "MIN",
    Max: "MAX",
    None: "NONE",
} as const;

export type DashboardSimpleTotalAggregationFunction = (typeof DashboardSimpleTotalAggregationFunction)[keyof typeof DashboardSimpleTotalAggregationFunction];

export const DashboardSmallMultiplesAxisPlacement = {
    Outside: "OUTSIDE",
    Inside: "INSIDE",
} as const;

export type DashboardSmallMultiplesAxisPlacement = (typeof DashboardSmallMultiplesAxisPlacement)[keyof typeof DashboardSmallMultiplesAxisPlacement];

export const DashboardSmallMultiplesAxisScale = {
    Shared: "SHARED",
    Independent: "INDEPENDENT",
} as const;

export type DashboardSmallMultiplesAxisScale = (typeof DashboardSmallMultiplesAxisScale)[keyof typeof DashboardSmallMultiplesAxisScale];

export const DashboardSortDirection = {
    Asc: "ASC",
    Desc: "DESC",
} as const;

export type DashboardSortDirection = (typeof DashboardSortDirection)[keyof typeof DashboardSortDirection];

export const DashboardSpecialValue = {
    Empty: "EMPTY",
    Null: "NULL",
    Other: "OTHER",
} as const;

export type DashboardSpecialValue = (typeof DashboardSpecialValue)[keyof typeof DashboardSpecialValue];

export const DashboardStyledCellType = {
    Total: "TOTAL",
    MetricHeader: "METRIC_HEADER",
    Value: "VALUE",
} as const;

export type DashboardStyledCellType = (typeof DashboardStyledCellType)[keyof typeof DashboardStyledCellType];

export const DashboardTableBorderStyle = {
    None: "NONE",
    Solid: "SOLID",
} as const;

export type DashboardTableBorderStyle = (typeof DashboardTableBorderStyle)[keyof typeof DashboardTableBorderStyle];

export const DashboardTableCellImageScalingConfiguration = {
    FitToCellHeight: "FIT_TO_CELL_HEIGHT",
    FitToCellWidth: "FIT_TO_CELL_WIDTH",
    DoNotScale: "DO_NOT_SCALE",
} as const;

export type DashboardTableCellImageScalingConfiguration = (typeof DashboardTableCellImageScalingConfiguration)[keyof typeof DashboardTableCellImageScalingConfiguration];

export const DashboardTableFieldIconSetType = {
    Link: "LINK",
} as const;

export type DashboardTableFieldIconSetType = (typeof DashboardTableFieldIconSetType)[keyof typeof DashboardTableFieldIconSetType];

export const DashboardTableOrientation = {
    Vertical: "VERTICAL",
    Horizontal: "HORIZONTAL",
} as const;

export type DashboardTableOrientation = (typeof DashboardTableOrientation)[keyof typeof DashboardTableOrientation];

export const DashboardTableTotalsPlacement = {
    Start: "START",
    End: "END",
    Auto: "AUTO",
} as const;

export type DashboardTableTotalsPlacement = (typeof DashboardTableTotalsPlacement)[keyof typeof DashboardTableTotalsPlacement];

export const DashboardTableTotalsScrollStatus = {
    Pinned: "PINNED",
    Scrolled: "SCROLLED",
} as const;

export type DashboardTableTotalsScrollStatus = (typeof DashboardTableTotalsScrollStatus)[keyof typeof DashboardTableTotalsScrollStatus];

export const DashboardTargetVisualOptions = {
    AllVisuals: "ALL_VISUALS",
} as const;

export type DashboardTargetVisualOptions = (typeof DashboardTargetVisualOptions)[keyof typeof DashboardTargetVisualOptions];

export const DashboardTextWrap = {
    None: "NONE",
    Wrap: "WRAP",
} as const;

export type DashboardTextWrap = (typeof DashboardTextWrap)[keyof typeof DashboardTextWrap];

export const DashboardTimeGranularity = {
    Year: "YEAR",
    Quarter: "QUARTER",
    Month: "MONTH",
    Week: "WEEK",
    Day: "DAY",
    Hour: "HOUR",
    Minute: "MINUTE",
    Second: "SECOND",
    Millisecond: "MILLISECOND",
} as const;

export type DashboardTimeGranularity = (typeof DashboardTimeGranularity)[keyof typeof DashboardTimeGranularity];

export const DashboardTooltipTitleType = {
    None: "NONE",
    PrimaryValue: "PRIMARY_VALUE",
} as const;

export type DashboardTooltipTitleType = (typeof DashboardTooltipTitleType)[keyof typeof DashboardTooltipTitleType];

export const DashboardTopBottomComputationType = {
    Top: "TOP",
    Bottom: "BOTTOM",
} as const;

export type DashboardTopBottomComputationType = (typeof DashboardTopBottomComputationType)[keyof typeof DashboardTopBottomComputationType];

export const DashboardTopBottomSortOrder = {
    PercentDifference: "PERCENT_DIFFERENCE",
    AbsoluteDifference: "ABSOLUTE_DIFFERENCE",
} as const;

export type DashboardTopBottomSortOrder = (typeof DashboardTopBottomSortOrder)[keyof typeof DashboardTopBottomSortOrder];

export const DashboardUiState = {
    Expanded: "EXPANDED",
    Collapsed: "COLLAPSED",
} as const;

export type DashboardUiState = (typeof DashboardUiState)[keyof typeof DashboardUiState];

export const DashboardUrlTargetConfiguration = {
    NewTab: "NEW_TAB",
    NewWindow: "NEW_WINDOW",
    SameTab: "SAME_TAB",
} as const;

export type DashboardUrlTargetConfiguration = (typeof DashboardUrlTargetConfiguration)[keyof typeof DashboardUrlTargetConfiguration];

export const DashboardValidationStrategyMode = {
    Strict: "STRICT",
    Lenient: "LENIENT",
} as const;

export type DashboardValidationStrategyMode = (typeof DashboardValidationStrategyMode)[keyof typeof DashboardValidationStrategyMode];

export const DashboardValueWhenUnsetOption = {
    RecommendedValue: "RECOMMENDED_VALUE",
    Null: "NULL",
} as const;

export type DashboardValueWhenUnsetOption = (typeof DashboardValueWhenUnsetOption)[keyof typeof DashboardValueWhenUnsetOption];

export const DashboardVerticalTextAlignment = {
    Top: "TOP",
    Middle: "MIDDLE",
    Bottom: "BOTTOM",
    Auto: "AUTO",
} as const;

export type DashboardVerticalTextAlignment = (typeof DashboardVerticalTextAlignment)[keyof typeof DashboardVerticalTextAlignment];

export const DashboardVisibility = {
    Hidden: "HIDDEN",
    Visible: "VISIBLE",
} as const;

export type DashboardVisibility = (typeof DashboardVisibility)[keyof typeof DashboardVisibility];

export const DashboardVisualCustomActionTrigger = {
    DataPointClick: "DATA_POINT_CLICK",
    DataPointMenu: "DATA_POINT_MENU",
} as const;

export type DashboardVisualCustomActionTrigger = (typeof DashboardVisualCustomActionTrigger)[keyof typeof DashboardVisualCustomActionTrigger];

export const DashboardWidgetStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type DashboardWidgetStatus = (typeof DashboardWidgetStatus)[keyof typeof DashboardWidgetStatus];

export const DashboardWordCloudCloudLayout = {
    Fluid: "FLUID",
    Normal: "NORMAL",
} as const;

export type DashboardWordCloudCloudLayout = (typeof DashboardWordCloudCloudLayout)[keyof typeof DashboardWordCloudCloudLayout];

export const DashboardWordCloudWordCasing = {
    LowerCase: "LOWER_CASE",
    ExistingCase: "EXISTING_CASE",
} as const;

export type DashboardWordCloudWordCasing = (typeof DashboardWordCloudWordCasing)[keyof typeof DashboardWordCloudWordCasing];

export const DashboardWordCloudWordOrientation = {
    Horizontal: "HORIZONTAL",
    HorizontalAndVertical: "HORIZONTAL_AND_VERTICAL",
} as const;

export type DashboardWordCloudWordOrientation = (typeof DashboardWordCloudWordOrientation)[keyof typeof DashboardWordCloudWordOrientation];

export const DashboardWordCloudWordPadding = {
    None: "NONE",
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
} as const;

export type DashboardWordCloudWordPadding = (typeof DashboardWordCloudWordPadding)[keyof typeof DashboardWordCloudWordPadding];

export const DashboardWordCloudWordScaling = {
    Emphasize: "EMPHASIZE",
    Normal: "NORMAL",
} as const;

export type DashboardWordCloudWordScaling = (typeof DashboardWordCloudWordScaling)[keyof typeof DashboardWordCloudWordScaling];

export const DataSetColumnDataType = {
    String: "STRING",
    Integer: "INTEGER",
    Decimal: "DECIMAL",
    Datetime: "DATETIME",
} as const;

export type DataSetColumnDataType = (typeof DataSetColumnDataType)[keyof typeof DataSetColumnDataType];

export const DataSetColumnSubDataType = {
    Fixed: "FIXED",
    Float: "FLOAT",
} as const;

export type DataSetColumnSubDataType = (typeof DataSetColumnSubDataType)[keyof typeof DataSetColumnSubDataType];

export const DataSetDatasetParameterValueType = {
    MultiValued: "MULTI_VALUED",
    SingleValued: "SINGLE_VALUED",
} as const;

/**
 * <p>Every parameter value could be either a single value or multi value which helps to validate before evaluation.</p>
 */
export type DataSetDatasetParameterValueType = (typeof DataSetDatasetParameterValueType)[keyof typeof DataSetDatasetParameterValueType];

export const DataSetFileFormat = {
    Csv: "CSV",
    Tsv: "TSV",
    Clf: "CLF",
    Elf: "ELF",
    Xlsx: "XLSX",
    Json: "JSON",
} as const;

export type DataSetFileFormat = (typeof DataSetFileFormat)[keyof typeof DataSetFileFormat];

export const DataSetGeoSpatialCountryCode = {
    Us: "US",
} as const;

export type DataSetGeoSpatialCountryCode = (typeof DataSetGeoSpatialCountryCode)[keyof typeof DataSetGeoSpatialCountryCode];

export const DataSetGeoSpatialDataRole = {
    Country: "COUNTRY",
    State: "STATE",
    County: "COUNTY",
    City: "CITY",
    Postcode: "POSTCODE",
    Longitude: "LONGITUDE",
    Latitude: "LATITUDE",
    Political1: "POLITICAL1",
} as const;

export type DataSetGeoSpatialDataRole = (typeof DataSetGeoSpatialDataRole)[keyof typeof DataSetGeoSpatialDataRole];

export const DataSetImportMode = {
    Spice: "SPICE",
    DirectQuery: "DIRECT_QUERY",
} as const;

export type DataSetImportMode = (typeof DataSetImportMode)[keyof typeof DataSetImportMode];

export const DataSetInputColumnDataType = {
    String: "STRING",
    Integer: "INTEGER",
    Decimal: "DECIMAL",
    Datetime: "DATETIME",
    Bit: "BIT",
    Boolean: "BOOLEAN",
    Json: "JSON",
} as const;

export type DataSetInputColumnDataType = (typeof DataSetInputColumnDataType)[keyof typeof DataSetInputColumnDataType];

export const DataSetJoinType = {
    Inner: "INNER",
    Outer: "OUTER",
    Left: "LEFT",
    Right: "RIGHT",
} as const;

export type DataSetJoinType = (typeof DataSetJoinType)[keyof typeof DataSetJoinType];

export const DataSetRowLevelPermissionFormatVersion = {
    Version1: "VERSION_1",
    Version2: "VERSION_2",
} as const;

export type DataSetRowLevelPermissionFormatVersion = (typeof DataSetRowLevelPermissionFormatVersion)[keyof typeof DataSetRowLevelPermissionFormatVersion];

export const DataSetRowLevelPermissionPolicy = {
    GrantAccess: "GRANT_ACCESS",
    DenyAccess: "DENY_ACCESS",
} as const;

export type DataSetRowLevelPermissionPolicy = (typeof DataSetRowLevelPermissionPolicy)[keyof typeof DataSetRowLevelPermissionPolicy];

export const DataSetSizeUnit = {
    Hour: "HOUR",
    Day: "DAY",
    Week: "WEEK",
} as const;

export type DataSetSizeUnit = (typeof DataSetSizeUnit)[keyof typeof DataSetSizeUnit];

export const DataSetStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type DataSetStatus = (typeof DataSetStatus)[keyof typeof DataSetStatus];

export const DataSetTextQualifier = {
    DoubleQuote: "DOUBLE_QUOTE",
    SingleQuote: "SINGLE_QUOTE",
} as const;

export type DataSetTextQualifier = (typeof DataSetTextQualifier)[keyof typeof DataSetTextQualifier];

export const DataSetTimeGranularity = {
    Year: "YEAR",
    Quarter: "QUARTER",
    Month: "MONTH",
    Week: "WEEK",
    Day: "DAY",
    Hour: "HOUR",
    Minute: "MINUTE",
    Second: "SECOND",
    Millisecond: "MILLISECOND",
} as const;

export type DataSetTimeGranularity = (typeof DataSetTimeGranularity)[keyof typeof DataSetTimeGranularity];

export const DataSourceErrorInfoType = {
    AccessDenied: "ACCESS_DENIED",
    CopySourceNotFound: "COPY_SOURCE_NOT_FOUND",
    Timeout: "TIMEOUT",
    EngineVersionNotSupported: "ENGINE_VERSION_NOT_SUPPORTED",
    UnknownHost: "UNKNOWN_HOST",
    GenericSqlFailure: "GENERIC_SQL_FAILURE",
    Conflict: "CONFLICT",
    Unknown: "UNKNOWN",
} as const;

export type DataSourceErrorInfoType = (typeof DataSourceErrorInfoType)[keyof typeof DataSourceErrorInfoType];

export const DataSourceResourceStatus = {
    CreationInProgress: "CREATION_IN_PROGRESS",
    CreationSuccessful: "CREATION_SUCCESSFUL",
    CreationFailed: "CREATION_FAILED",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    UpdateSuccessful: "UPDATE_SUCCESSFUL",
    UpdateFailed: "UPDATE_FAILED",
    Deleted: "DELETED",
} as const;

export type DataSourceResourceStatus = (typeof DataSourceResourceStatus)[keyof typeof DataSourceResourceStatus];

export const DataSourceStarburstProductType = {
    Galaxy: "GALAXY",
    Enterprise: "ENTERPRISE",
} as const;

export type DataSourceStarburstProductType = (typeof DataSourceStarburstProductType)[keyof typeof DataSourceStarburstProductType];

export const DataSourceType = {
    AdobeAnalytics: "ADOBE_ANALYTICS",
    AmazonElasticsearch: "AMAZON_ELASTICSEARCH",
    AmazonOpensearch: "AMAZON_OPENSEARCH",
    Athena: "ATHENA",
    Aurora: "AURORA",
    AuroraPostgresql: "AURORA_POSTGRESQL",
    AwsIotAnalytics: "AWS_IOT_ANALYTICS",
    Databricks: "DATABRICKS",
    Github: "GITHUB",
    Jira: "JIRA",
    Mariadb: "MARIADB",
    Mysql: "MYSQL",
    Oracle: "ORACLE",
    Postgresql: "POSTGRESQL",
    Presto: "PRESTO",
    Redshift: "REDSHIFT",
    S3: "S3",
    Salesforce: "SALESFORCE",
    Servicenow: "SERVICENOW",
    Snowflake: "SNOWFLAKE",
    Spark: "SPARK",
    Sqlserver: "SQLSERVER",
    Teradata: "TERADATA",
    Twitter: "TWITTER",
    Timestream: "TIMESTREAM",
    Starburst: "STARBURST",
    Trino: "TRINO",
} as const;

export type DataSourceType = (typeof DataSourceType)[keyof typeof DataSourceType];

export const RefreshScheduleMapRefreshType = {
    FullRefresh: "FULL_REFRESH",
    IncrementalRefresh: "INCREMENTAL_REFRESH",
} as const;

export type RefreshScheduleMapRefreshType = (typeof RefreshScheduleMapRefreshType)[keyof typeof RefreshScheduleMapRefreshType];

export const RefreshScheduleMapScheduleFrequencyPropertiesInterval = {
    Minute15: "MINUTE15",
    Minute30: "MINUTE30",
    Hourly: "HOURLY",
    Daily: "DAILY",
    Weekly: "WEEKLY",
    Monthly: "MONTHLY",
} as const;

export type RefreshScheduleMapScheduleFrequencyPropertiesInterval = (typeof RefreshScheduleMapScheduleFrequencyPropertiesInterval)[keyof typeof RefreshScheduleMapScheduleFrequencyPropertiesInterval];

export const RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek = {
    Sunday: "SUNDAY",
    Monday: "MONDAY",
    Tuesday: "TUESDAY",
    Wednesday: "WEDNESDAY",
    Thursday: "THURSDAY",
    Friday: "FRIDAY",
    Saturday: "SATURDAY",
} as const;

export type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek = (typeof RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek)[keyof typeof RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek];

export const TemplateAnchorOption = {
    Now: "NOW",
} as const;

export type TemplateAnchorOption = (typeof TemplateAnchorOption)[keyof typeof TemplateAnchorOption];

export const TemplateArcThickness = {
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
    Whole: "WHOLE",
} as const;

export type TemplateArcThickness = (typeof TemplateArcThickness)[keyof typeof TemplateArcThickness];

export const TemplateArcThicknessOptions = {
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
} as const;

export type TemplateArcThicknessOptions = (typeof TemplateArcThicknessOptions)[keyof typeof TemplateArcThicknessOptions];

export const TemplateAxisBinding = {
    PrimaryYaxis: "PRIMARY_YAXIS",
    SecondaryYaxis: "SECONDARY_YAXIS",
} as const;

export type TemplateAxisBinding = (typeof TemplateAxisBinding)[keyof typeof TemplateAxisBinding];

export const TemplateBarChartOrientation = {
    Horizontal: "HORIZONTAL",
    Vertical: "VERTICAL",
} as const;

export type TemplateBarChartOrientation = (typeof TemplateBarChartOrientation)[keyof typeof TemplateBarChartOrientation];

export const TemplateBarsArrangement = {
    Clustered: "CLUSTERED",
    Stacked: "STACKED",
    StackedPercent: "STACKED_PERCENT",
} as const;

export type TemplateBarsArrangement = (typeof TemplateBarsArrangement)[keyof typeof TemplateBarsArrangement];

export const TemplateBaseMapStyleType = {
    LightGray: "LIGHT_GRAY",
    DarkGray: "DARK_GRAY",
    Street: "STREET",
    Imagery: "IMAGERY",
} as const;

export type TemplateBaseMapStyleType = (typeof TemplateBaseMapStyleType)[keyof typeof TemplateBaseMapStyleType];

export const TemplateBoxPlotFillStyle = {
    Solid: "SOLID",
    Transparent: "TRANSPARENT",
} as const;

export type TemplateBoxPlotFillStyle = (typeof TemplateBoxPlotFillStyle)[keyof typeof TemplateBoxPlotFillStyle];

export const TemplateCategoricalAggregationFunction = {
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
} as const;

export type TemplateCategoricalAggregationFunction = (typeof TemplateCategoricalAggregationFunction)[keyof typeof TemplateCategoricalAggregationFunction];

export const TemplateCategoryFilterMatchOperator = {
    Equals: "EQUALS",
    DoesNotEqual: "DOES_NOT_EQUAL",
    Contains: "CONTAINS",
    DoesNotContain: "DOES_NOT_CONTAIN",
    StartsWith: "STARTS_WITH",
    EndsWith: "ENDS_WITH",
} as const;

export type TemplateCategoryFilterMatchOperator = (typeof TemplateCategoryFilterMatchOperator)[keyof typeof TemplateCategoryFilterMatchOperator];

export const TemplateCategoryFilterSelectAllOptions = {
    FilterAllValues: "FILTER_ALL_VALUES",
} as const;

export type TemplateCategoryFilterSelectAllOptions = (typeof TemplateCategoryFilterSelectAllOptions)[keyof typeof TemplateCategoryFilterSelectAllOptions];

export const TemplateColorFillType = {
    Discrete: "DISCRETE",
    Gradient: "GRADIENT",
} as const;

export type TemplateColorFillType = (typeof TemplateColorFillType)[keyof typeof TemplateColorFillType];

export const TemplateColumnRole = {
    Dimension: "DIMENSION",
    Measure: "MEASURE",
} as const;

export type TemplateColumnRole = (typeof TemplateColumnRole)[keyof typeof TemplateColumnRole];

export const TemplateComparisonMethod = {
    Difference: "DIFFERENCE",
    PercentDifference: "PERCENT_DIFFERENCE",
    Percent: "PERCENT",
} as const;

export type TemplateComparisonMethod = (typeof TemplateComparisonMethod)[keyof typeof TemplateComparisonMethod];

export const TemplateConditionalFormattingIconDisplayOption = {
    IconOnly: "ICON_ONLY",
} as const;

export type TemplateConditionalFormattingIconDisplayOption = (typeof TemplateConditionalFormattingIconDisplayOption)[keyof typeof TemplateConditionalFormattingIconDisplayOption];

export const TemplateConditionalFormattingIconSetType = {
    PlusMinus: "PLUS_MINUS",
    CheckX: "CHECK_X",
    ThreeColorArrow: "THREE_COLOR_ARROW",
    ThreeGrayArrow: "THREE_GRAY_ARROW",
    CaretUpMinusDown: "CARET_UP_MINUS_DOWN",
    ThreeShape: "THREE_SHAPE",
    ThreeCircle: "THREE_CIRCLE",
    Flags: "FLAGS",
    Bars: "BARS",
    FourColorArrow: "FOUR_COLOR_ARROW",
    FourGrayArrow: "FOUR_GRAY_ARROW",
} as const;

export type TemplateConditionalFormattingIconSetType = (typeof TemplateConditionalFormattingIconSetType)[keyof typeof TemplateConditionalFormattingIconSetType];

export const TemplateCrossDatasetTypes = {
    AllDatasets: "ALL_DATASETS",
    SingleDataset: "SINGLE_DATASET",
} as const;

export type TemplateCrossDatasetTypes = (typeof TemplateCrossDatasetTypes)[keyof typeof TemplateCrossDatasetTypes];

export const TemplateCustomContentImageScalingConfiguration = {
    FitToHeight: "FIT_TO_HEIGHT",
    FitToWidth: "FIT_TO_WIDTH",
    DoNotScale: "DO_NOT_SCALE",
    ScaleToVisual: "SCALE_TO_VISUAL",
} as const;

export type TemplateCustomContentImageScalingConfiguration = (typeof TemplateCustomContentImageScalingConfiguration)[keyof typeof TemplateCustomContentImageScalingConfiguration];

export const TemplateCustomContentType = {
    Image: "IMAGE",
    OtherEmbeddedContent: "OTHER_EMBEDDED_CONTENT",
} as const;

export type TemplateCustomContentType = (typeof TemplateCustomContentType)[keyof typeof TemplateCustomContentType];

export const TemplateDataLabelContent = {
    Value: "VALUE",
    Percent: "PERCENT",
    ValueAndPercent: "VALUE_AND_PERCENT",
} as const;

export type TemplateDataLabelContent = (typeof TemplateDataLabelContent)[keyof typeof TemplateDataLabelContent];

export const TemplateDataLabelOverlap = {
    DisableOverlap: "DISABLE_OVERLAP",
    EnableOverlap: "ENABLE_OVERLAP",
} as const;

export type TemplateDataLabelOverlap = (typeof TemplateDataLabelOverlap)[keyof typeof TemplateDataLabelOverlap];

export const TemplateDataLabelPosition = {
    Inside: "INSIDE",
    Outside: "OUTSIDE",
    Left: "LEFT",
    Top: "TOP",
    Bottom: "BOTTOM",
    Right: "RIGHT",
} as const;

export type TemplateDataLabelPosition = (typeof TemplateDataLabelPosition)[keyof typeof TemplateDataLabelPosition];

export const TemplateDateAggregationFunction = {
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
    Min: "MIN",
    Max: "MAX",
} as const;

export type TemplateDateAggregationFunction = (typeof TemplateDateAggregationFunction)[keyof typeof TemplateDateAggregationFunction];

export const TemplateDayOfTheWeek = {
    Sunday: "SUNDAY",
    Monday: "MONDAY",
    Tuesday: "TUESDAY",
    Wednesday: "WEDNESDAY",
    Thursday: "THURSDAY",
    Friday: "FRIDAY",
    Saturday: "SATURDAY",
} as const;

export type TemplateDayOfTheWeek = (typeof TemplateDayOfTheWeek)[keyof typeof TemplateDayOfTheWeek];

export const TemplateErrorType = {
    SourceNotFound: "SOURCE_NOT_FOUND",
    DataSetNotFound: "DATA_SET_NOT_FOUND",
    InternalFailure: "INTERNAL_FAILURE",
    AccessDenied: "ACCESS_DENIED",
} as const;

export type TemplateErrorType = (typeof TemplateErrorType)[keyof typeof TemplateErrorType];

export const TemplateFilterNullOption = {
    AllValues: "ALL_VALUES",
    NullsOnly: "NULLS_ONLY",
    NonNullsOnly: "NON_NULLS_ONLY",
} as const;

export type TemplateFilterNullOption = (typeof TemplateFilterNullOption)[keyof typeof TemplateFilterNullOption];

export const TemplateFilterVisualScope = {
    AllVisuals: "ALL_VISUALS",
    SelectedVisuals: "SELECTED_VISUALS",
} as const;

export type TemplateFilterVisualScope = (typeof TemplateFilterVisualScope)[keyof typeof TemplateFilterVisualScope];

export const TemplateFontDecoration = {
    Underline: "UNDERLINE",
    None: "NONE",
} as const;

export type TemplateFontDecoration = (typeof TemplateFontDecoration)[keyof typeof TemplateFontDecoration];

export const TemplateFontStyle = {
    Normal: "NORMAL",
    Italic: "ITALIC",
} as const;

export type TemplateFontStyle = (typeof TemplateFontStyle)[keyof typeof TemplateFontStyle];

export const TemplateFontWeightName = {
    Normal: "NORMAL",
    Bold: "BOLD",
} as const;

export type TemplateFontWeightName = (typeof TemplateFontWeightName)[keyof typeof TemplateFontWeightName];

export const TemplateForecastComputationSeasonality = {
    Automatic: "AUTOMATIC",
    Custom: "CUSTOM",
} as const;

export type TemplateForecastComputationSeasonality = (typeof TemplateForecastComputationSeasonality)[keyof typeof TemplateForecastComputationSeasonality];

export const TemplateFunnelChartMeasureDataLabelStyle = {
    ValueOnly: "VALUE_ONLY",
    PercentageByFirstStage: "PERCENTAGE_BY_FIRST_STAGE",
    PercentageByPreviousStage: "PERCENTAGE_BY_PREVIOUS_STAGE",
    ValueAndPercentageByFirstStage: "VALUE_AND_PERCENTAGE_BY_FIRST_STAGE",
    ValueAndPercentageByPreviousStage: "VALUE_AND_PERCENTAGE_BY_PREVIOUS_STAGE",
} as const;

export type TemplateFunnelChartMeasureDataLabelStyle = (typeof TemplateFunnelChartMeasureDataLabelStyle)[keyof typeof TemplateFunnelChartMeasureDataLabelStyle];

export const TemplateGeospatialSelectedPointStyle = {
    Point: "POINT",
    Cluster: "CLUSTER",
    Heatmap: "HEATMAP",
} as const;

export type TemplateGeospatialSelectedPointStyle = (typeof TemplateGeospatialSelectedPointStyle)[keyof typeof TemplateGeospatialSelectedPointStyle];

export const TemplateHistogramBinType = {
    BinCount: "BIN_COUNT",
    BinWidth: "BIN_WIDTH",
} as const;

export type TemplateHistogramBinType = (typeof TemplateHistogramBinType)[keyof typeof TemplateHistogramBinType];

export const TemplateHorizontalTextAlignment = {
    Left: "LEFT",
    Center: "CENTER",
    Right: "RIGHT",
    Auto: "AUTO",
} as const;

export type TemplateHorizontalTextAlignment = (typeof TemplateHorizontalTextAlignment)[keyof typeof TemplateHorizontalTextAlignment];

export const TemplateIcon = {
    CaretUp: "CARET_UP",
    CaretDown: "CARET_DOWN",
    Plus: "PLUS",
    Minus: "MINUS",
    ArrowUp: "ARROW_UP",
    ArrowDown: "ARROW_DOWN",
    ArrowLeft: "ARROW_LEFT",
    ArrowUpLeft: "ARROW_UP_LEFT",
    ArrowDownLeft: "ARROW_DOWN_LEFT",
    ArrowRight: "ARROW_RIGHT",
    ArrowUpRight: "ARROW_UP_RIGHT",
    ArrowDownRight: "ARROW_DOWN_RIGHT",
    FaceUp: "FACE_UP",
    FaceDown: "FACE_DOWN",
    FaceFlat: "FACE_FLAT",
    OneBar: "ONE_BAR",
    TwoBar: "TWO_BAR",
    ThreeBar: "THREE_BAR",
    Circle: "CIRCLE",
    Triangle: "TRIANGLE",
    Square: "SQUARE",
    Flag: "FLAG",
    ThumbsUp: "THUMBS_UP",
    ThumbsDown: "THUMBS_DOWN",
    Checkmark: "CHECKMARK",
    X: "X",
} as const;

export type TemplateIcon = (typeof TemplateIcon)[keyof typeof TemplateIcon];

export const TemplateKpiSparklineType = {
    Line: "LINE",
    Area: "AREA",
} as const;

export type TemplateKpiSparklineType = (typeof TemplateKpiSparklineType)[keyof typeof TemplateKpiSparklineType];

export const TemplateKpiVisualStandardLayoutType = {
    Classic: "CLASSIC",
    Vertical: "VERTICAL",
} as const;

export type TemplateKpiVisualStandardLayoutType = (typeof TemplateKpiVisualStandardLayoutType)[keyof typeof TemplateKpiVisualStandardLayoutType];

export const TemplateLayoutElementType = {
    Visual: "VISUAL",
    FilterControl: "FILTER_CONTROL",
    ParameterControl: "PARAMETER_CONTROL",
    TextBox: "TEXT_BOX",
} as const;

export type TemplateLayoutElementType = (typeof TemplateLayoutElementType)[keyof typeof TemplateLayoutElementType];

export const TemplateLegendPosition = {
    Auto: "AUTO",
    Right: "RIGHT",
    Bottom: "BOTTOM",
    Top: "TOP",
} as const;

export type TemplateLegendPosition = (typeof TemplateLegendPosition)[keyof typeof TemplateLegendPosition];

export const TemplateLineChartLineStyle = {
    Solid: "SOLID",
    Dotted: "DOTTED",
    Dashed: "DASHED",
} as const;

export type TemplateLineChartLineStyle = (typeof TemplateLineChartLineStyle)[keyof typeof TemplateLineChartLineStyle];

export const TemplateLineChartMarkerShape = {
    Circle: "CIRCLE",
    Triangle: "TRIANGLE",
    Square: "SQUARE",
    Diamond: "DIAMOND",
    RoundedSquare: "ROUNDED_SQUARE",
} as const;

export type TemplateLineChartMarkerShape = (typeof TemplateLineChartMarkerShape)[keyof typeof TemplateLineChartMarkerShape];

export const TemplateLineChartType = {
    Line: "LINE",
    Area: "AREA",
    StackedArea: "STACKED_AREA",
} as const;

export type TemplateLineChartType = (typeof TemplateLineChartType)[keyof typeof TemplateLineChartType];

export const TemplateLineInterpolation = {
    Linear: "LINEAR",
    Smooth: "SMOOTH",
    Stepped: "STEPPED",
} as const;

export type TemplateLineInterpolation = (typeof TemplateLineInterpolation)[keyof typeof TemplateLineInterpolation];

export const TemplateMapZoomMode = {
    Auto: "AUTO",
    Manual: "MANUAL",
} as const;

export type TemplateMapZoomMode = (typeof TemplateMapZoomMode)[keyof typeof TemplateMapZoomMode];

export const TemplateMaximumMinimumComputationType = {
    Maximum: "MAXIMUM",
    Minimum: "MINIMUM",
} as const;

export type TemplateMaximumMinimumComputationType = (typeof TemplateMaximumMinimumComputationType)[keyof typeof TemplateMaximumMinimumComputationType];

export const TemplateMissingDataTreatmentOption = {
    Interpolate: "INTERPOLATE",
    ShowAsZero: "SHOW_AS_ZERO",
    ShowAsBlank: "SHOW_AS_BLANK",
} as const;

export type TemplateMissingDataTreatmentOption = (typeof TemplateMissingDataTreatmentOption)[keyof typeof TemplateMissingDataTreatmentOption];

export const TemplateNegativeValueDisplayMode = {
    Positive: "POSITIVE",
    Negative: "NEGATIVE",
} as const;

export type TemplateNegativeValueDisplayMode = (typeof TemplateNegativeValueDisplayMode)[keyof typeof TemplateNegativeValueDisplayMode];

export const TemplateNumberScale = {
    None: "NONE",
    Auto: "AUTO",
    Thousands: "THOUSANDS",
    Millions: "MILLIONS",
    Billions: "BILLIONS",
    Trillions: "TRILLIONS",
} as const;

export type TemplateNumberScale = (typeof TemplateNumberScale)[keyof typeof TemplateNumberScale];

export const TemplateNumericEqualityMatchOperator = {
    Equals: "EQUALS",
    DoesNotEqual: "DOES_NOT_EQUAL",
} as const;

export type TemplateNumericEqualityMatchOperator = (typeof TemplateNumericEqualityMatchOperator)[keyof typeof TemplateNumericEqualityMatchOperator];

export const TemplateNumericFilterSelectAllOptions = {
    FilterAllValues: "FILTER_ALL_VALUES",
} as const;

export type TemplateNumericFilterSelectAllOptions = (typeof TemplateNumericFilterSelectAllOptions)[keyof typeof TemplateNumericFilterSelectAllOptions];

export const TemplateNumericSeparatorSymbol = {
    Comma: "COMMA",
    Dot: "DOT",
    Space: "SPACE",
} as const;

export type TemplateNumericSeparatorSymbol = (typeof TemplateNumericSeparatorSymbol)[keyof typeof TemplateNumericSeparatorSymbol];

export const TemplateOtherCategories = {
    Include: "INCLUDE",
    Exclude: "EXCLUDE",
} as const;

export type TemplateOtherCategories = (typeof TemplateOtherCategories)[keyof typeof TemplateOtherCategories];

export const TemplatePanelBorderStyle = {
    Solid: "SOLID",
    Dashed: "DASHED",
    Dotted: "DOTTED",
} as const;

export type TemplatePanelBorderStyle = (typeof TemplatePanelBorderStyle)[keyof typeof TemplatePanelBorderStyle];

export const TemplatePaperOrientation = {
    Portrait: "PORTRAIT",
    Landscape: "LANDSCAPE",
} as const;

export type TemplatePaperOrientation = (typeof TemplatePaperOrientation)[keyof typeof TemplatePaperOrientation];

export const TemplatePaperSize = {
    UsLetter: "US_LETTER",
    UsLegal: "US_LEGAL",
    UsTabloidLedger: "US_TABLOID_LEDGER",
    A0: "A0",
    A1: "A1",
    A2: "A2",
    A3: "A3",
    A4: "A4",
    A5: "A5",
    JisB4: "JIS_B4",
    JisB5: "JIS_B5",
} as const;

export type TemplatePaperSize = (typeof TemplatePaperSize)[keyof typeof TemplatePaperSize];

export const TemplateParameterValueType = {
    MultiValued: "MULTI_VALUED",
    SingleValued: "SINGLE_VALUED",
} as const;

export type TemplateParameterValueType = (typeof TemplateParameterValueType)[keyof typeof TemplateParameterValueType];

export const TemplatePivotTableConditionalFormattingScopeRole = {
    Field: "FIELD",
    FieldTotal: "FIELD_TOTAL",
    GrandTotal: "GRAND_TOTAL",
} as const;

export type TemplatePivotTableConditionalFormattingScopeRole = (typeof TemplatePivotTableConditionalFormattingScopeRole)[keyof typeof TemplatePivotTableConditionalFormattingScopeRole];

export const TemplatePivotTableDataPathType = {
    HierarchyRowsLayoutColumn: "HIERARCHY_ROWS_LAYOUT_COLUMN",
    MultipleRowMetricsColumn: "MULTIPLE_ROW_METRICS_COLUMN",
    EmptyColumnHeader: "EMPTY_COLUMN_HEADER",
    CountMetricColumn: "COUNT_METRIC_COLUMN",
} as const;

export type TemplatePivotTableDataPathType = (typeof TemplatePivotTableDataPathType)[keyof typeof TemplatePivotTableDataPathType];

export const TemplatePivotTableFieldCollapseState = {
    Collapsed: "COLLAPSED",
    Expanded: "EXPANDED",
} as const;

export type TemplatePivotTableFieldCollapseState = (typeof TemplatePivotTableFieldCollapseState)[keyof typeof TemplatePivotTableFieldCollapseState];

export const TemplatePivotTableMetricPlacement = {
    Row: "ROW",
    Column: "COLUMN",
} as const;

export type TemplatePivotTableMetricPlacement = (typeof TemplatePivotTableMetricPlacement)[keyof typeof TemplatePivotTableMetricPlacement];

export const TemplatePivotTableRowsLayout = {
    Tabular: "TABULAR",
    Hierarchy: "HIERARCHY",
} as const;

export type TemplatePivotTableRowsLayout = (typeof TemplatePivotTableRowsLayout)[keyof typeof TemplatePivotTableRowsLayout];

export const TemplatePivotTableSubtotalLevel = {
    All: "ALL",
    Custom: "CUSTOM",
    Last: "LAST",
} as const;

export type TemplatePivotTableSubtotalLevel = (typeof TemplatePivotTableSubtotalLevel)[keyof typeof TemplatePivotTableSubtotalLevel];

export const TemplatePrimaryValueDisplayType = {
    Hidden: "HIDDEN",
    Comparison: "COMPARISON",
    Actual: "ACTUAL",
} as const;

export type TemplatePrimaryValueDisplayType = (typeof TemplatePrimaryValueDisplayType)[keyof typeof TemplatePrimaryValueDisplayType];

export const TemplateRadarChartAxesRangeScale = {
    Auto: "AUTO",
    Independent: "INDEPENDENT",
    Shared: "SHARED",
} as const;

export type TemplateRadarChartAxesRangeScale = (typeof TemplateRadarChartAxesRangeScale)[keyof typeof TemplateRadarChartAxesRangeScale];

export const TemplateRadarChartShape = {
    Circle: "CIRCLE",
    Polygon: "POLYGON",
} as const;

export type TemplateRadarChartShape = (typeof TemplateRadarChartShape)[keyof typeof TemplateRadarChartShape];

export const TemplateReferenceLineLabelHorizontalPosition = {
    Left: "LEFT",
    Center: "CENTER",
    Right: "RIGHT",
} as const;

export type TemplateReferenceLineLabelHorizontalPosition = (typeof TemplateReferenceLineLabelHorizontalPosition)[keyof typeof TemplateReferenceLineLabelHorizontalPosition];

export const TemplateReferenceLineLabelVerticalPosition = {
    Above: "ABOVE",
    Below: "BELOW",
} as const;

export type TemplateReferenceLineLabelVerticalPosition = (typeof TemplateReferenceLineLabelVerticalPosition)[keyof typeof TemplateReferenceLineLabelVerticalPosition];

export const TemplateReferenceLinePatternType = {
    Solid: "SOLID",
    Dashed: "DASHED",
    Dotted: "DOTTED",
} as const;

export type TemplateReferenceLinePatternType = (typeof TemplateReferenceLinePatternType)[keyof typeof TemplateReferenceLinePatternType];

export const TemplateReferenceLineSeriesType = {
    Bar: "BAR",
    Line: "LINE",
} as const;

export type TemplateReferenceLineSeriesType = (typeof TemplateReferenceLineSeriesType)[keyof typeof TemplateReferenceLineSeriesType];

export const TemplateReferenceLineValueLabelRelativePosition = {
    BeforeCustomLabel: "BEFORE_CUSTOM_LABEL",
    AfterCustomLabel: "AFTER_CUSTOM_LABEL",
} as const;

export type TemplateReferenceLineValueLabelRelativePosition = (typeof TemplateReferenceLineValueLabelRelativePosition)[keyof typeof TemplateReferenceLineValueLabelRelativePosition];

export const TemplateRelativeDateType = {
    Previous: "PREVIOUS",
    This: "THIS",
    Last: "LAST",
    Now: "NOW",
    Next: "NEXT",
} as const;

export type TemplateRelativeDateType = (typeof TemplateRelativeDateType)[keyof typeof TemplateRelativeDateType];

export const TemplateRelativeFontSize = {
    ExtraSmall: "EXTRA_SMALL",
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
    ExtraLarge: "EXTRA_LARGE",
} as const;

export type TemplateRelativeFontSize = (typeof TemplateRelativeFontSize)[keyof typeof TemplateRelativeFontSize];

export const TemplateResizeOption = {
    Fixed: "FIXED",
    Responsive: "RESPONSIVE",
} as const;

export type TemplateResizeOption = (typeof TemplateResizeOption)[keyof typeof TemplateResizeOption];

export const TemplateResourceStatus = {
    CreationInProgress: "CREATION_IN_PROGRESS",
    CreationSuccessful: "CREATION_SUCCESSFUL",
    CreationFailed: "CREATION_FAILED",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    UpdateSuccessful: "UPDATE_SUCCESSFUL",
    UpdateFailed: "UPDATE_FAILED",
    Deleted: "DELETED",
} as const;

export type TemplateResourceStatus = (typeof TemplateResourceStatus)[keyof typeof TemplateResourceStatus];

export const TemplateSectionPageBreakStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type TemplateSectionPageBreakStatus = (typeof TemplateSectionPageBreakStatus)[keyof typeof TemplateSectionPageBreakStatus];

export const TemplateSelectAllValueOptions = {
    AllValues: "ALL_VALUES",
} as const;

export type TemplateSelectAllValueOptions = (typeof TemplateSelectAllValueOptions)[keyof typeof TemplateSelectAllValueOptions];

export const TemplateSelectedFieldOptions = {
    AllFields: "ALL_FIELDS",
} as const;

export type TemplateSelectedFieldOptions = (typeof TemplateSelectedFieldOptions)[keyof typeof TemplateSelectedFieldOptions];

export const TemplateSelectedTooltipType = {
    Basic: "BASIC",
    Detailed: "DETAILED",
} as const;

export type TemplateSelectedTooltipType = (typeof TemplateSelectedTooltipType)[keyof typeof TemplateSelectedTooltipType];

export const TemplateSheetContentType = {
    Paginated: "PAGINATED",
    Interactive: "INTERACTIVE",
} as const;

export type TemplateSheetContentType = (typeof TemplateSheetContentType)[keyof typeof TemplateSheetContentType];

export const TemplateSheetControlDateTimePickerType = {
    SingleValued: "SINGLE_VALUED",
    DateRange: "DATE_RANGE",
} as const;

export type TemplateSheetControlDateTimePickerType = (typeof TemplateSheetControlDateTimePickerType)[keyof typeof TemplateSheetControlDateTimePickerType];

export const TemplateSheetControlListType = {
    MultiSelect: "MULTI_SELECT",
    SingleSelect: "SINGLE_SELECT",
} as const;

export type TemplateSheetControlListType = (typeof TemplateSheetControlListType)[keyof typeof TemplateSheetControlListType];

export const TemplateSheetControlSliderType = {
    SinglePoint: "SINGLE_POINT",
    Range: "RANGE",
} as const;

export type TemplateSheetControlSliderType = (typeof TemplateSheetControlSliderType)[keyof typeof TemplateSheetControlSliderType];

export const TemplateSimpleAttributeAggregationFunction = {
    UniqueValue: "UNIQUE_VALUE",
} as const;

export type TemplateSimpleAttributeAggregationFunction = (typeof TemplateSimpleAttributeAggregationFunction)[keyof typeof TemplateSimpleAttributeAggregationFunction];

export const TemplateSimpleNumericalAggregationFunction = {
    Sum: "SUM",
    Average: "AVERAGE",
    Min: "MIN",
    Max: "MAX",
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
    Var: "VAR",
    Varp: "VARP",
    Stdev: "STDEV",
    Stdevp: "STDEVP",
    Median: "MEDIAN",
} as const;

export type TemplateSimpleNumericalAggregationFunction = (typeof TemplateSimpleNumericalAggregationFunction)[keyof typeof TemplateSimpleNumericalAggregationFunction];

export const TemplateSimpleTotalAggregationFunction = {
    Default: "DEFAULT",
    Sum: "SUM",
    Average: "AVERAGE",
    Min: "MIN",
    Max: "MAX",
    None: "NONE",
} as const;

export type TemplateSimpleTotalAggregationFunction = (typeof TemplateSimpleTotalAggregationFunction)[keyof typeof TemplateSimpleTotalAggregationFunction];

export const TemplateSmallMultiplesAxisPlacement = {
    Outside: "OUTSIDE",
    Inside: "INSIDE",
} as const;

export type TemplateSmallMultiplesAxisPlacement = (typeof TemplateSmallMultiplesAxisPlacement)[keyof typeof TemplateSmallMultiplesAxisPlacement];

export const TemplateSmallMultiplesAxisScale = {
    Shared: "SHARED",
    Independent: "INDEPENDENT",
} as const;

export type TemplateSmallMultiplesAxisScale = (typeof TemplateSmallMultiplesAxisScale)[keyof typeof TemplateSmallMultiplesAxisScale];

export const TemplateSortDirection = {
    Asc: "ASC",
    Desc: "DESC",
} as const;

export type TemplateSortDirection = (typeof TemplateSortDirection)[keyof typeof TemplateSortDirection];

export const TemplateSpecialValue = {
    Empty: "EMPTY",
    Null: "NULL",
    Other: "OTHER",
} as const;

export type TemplateSpecialValue = (typeof TemplateSpecialValue)[keyof typeof TemplateSpecialValue];

export const TemplateStyledCellType = {
    Total: "TOTAL",
    MetricHeader: "METRIC_HEADER",
    Value: "VALUE",
} as const;

export type TemplateStyledCellType = (typeof TemplateStyledCellType)[keyof typeof TemplateStyledCellType];

export const TemplateTableBorderStyle = {
    None: "NONE",
    Solid: "SOLID",
} as const;

export type TemplateTableBorderStyle = (typeof TemplateTableBorderStyle)[keyof typeof TemplateTableBorderStyle];

export const TemplateTableCellImageScalingConfiguration = {
    FitToCellHeight: "FIT_TO_CELL_HEIGHT",
    FitToCellWidth: "FIT_TO_CELL_WIDTH",
    DoNotScale: "DO_NOT_SCALE",
} as const;

export type TemplateTableCellImageScalingConfiguration = (typeof TemplateTableCellImageScalingConfiguration)[keyof typeof TemplateTableCellImageScalingConfiguration];

export const TemplateTableFieldIconSetType = {
    Link: "LINK",
} as const;

export type TemplateTableFieldIconSetType = (typeof TemplateTableFieldIconSetType)[keyof typeof TemplateTableFieldIconSetType];

export const TemplateTableOrientation = {
    Vertical: "VERTICAL",
    Horizontal: "HORIZONTAL",
} as const;

export type TemplateTableOrientation = (typeof TemplateTableOrientation)[keyof typeof TemplateTableOrientation];

export const TemplateTableTotalsPlacement = {
    Start: "START",
    End: "END",
    Auto: "AUTO",
} as const;

export type TemplateTableTotalsPlacement = (typeof TemplateTableTotalsPlacement)[keyof typeof TemplateTableTotalsPlacement];

export const TemplateTableTotalsScrollStatus = {
    Pinned: "PINNED",
    Scrolled: "SCROLLED",
} as const;

export type TemplateTableTotalsScrollStatus = (typeof TemplateTableTotalsScrollStatus)[keyof typeof TemplateTableTotalsScrollStatus];

export const TemplateTargetVisualOptions = {
    AllVisuals: "ALL_VISUALS",
} as const;

export type TemplateTargetVisualOptions = (typeof TemplateTargetVisualOptions)[keyof typeof TemplateTargetVisualOptions];

export const TemplateTextWrap = {
    None: "NONE",
    Wrap: "WRAP",
} as const;

export type TemplateTextWrap = (typeof TemplateTextWrap)[keyof typeof TemplateTextWrap];

export const TemplateTimeGranularity = {
    Year: "YEAR",
    Quarter: "QUARTER",
    Month: "MONTH",
    Week: "WEEK",
    Day: "DAY",
    Hour: "HOUR",
    Minute: "MINUTE",
    Second: "SECOND",
    Millisecond: "MILLISECOND",
} as const;

export type TemplateTimeGranularity = (typeof TemplateTimeGranularity)[keyof typeof TemplateTimeGranularity];

export const TemplateTooltipTitleType = {
    None: "NONE",
    PrimaryValue: "PRIMARY_VALUE",
} as const;

export type TemplateTooltipTitleType = (typeof TemplateTooltipTitleType)[keyof typeof TemplateTooltipTitleType];

export const TemplateTopBottomComputationType = {
    Top: "TOP",
    Bottom: "BOTTOM",
} as const;

export type TemplateTopBottomComputationType = (typeof TemplateTopBottomComputationType)[keyof typeof TemplateTopBottomComputationType];

export const TemplateTopBottomSortOrder = {
    PercentDifference: "PERCENT_DIFFERENCE",
    AbsoluteDifference: "ABSOLUTE_DIFFERENCE",
} as const;

export type TemplateTopBottomSortOrder = (typeof TemplateTopBottomSortOrder)[keyof typeof TemplateTopBottomSortOrder];

export const TemplateUrlTargetConfiguration = {
    NewTab: "NEW_TAB",
    NewWindow: "NEW_WINDOW",
    SameTab: "SAME_TAB",
} as const;

export type TemplateUrlTargetConfiguration = (typeof TemplateUrlTargetConfiguration)[keyof typeof TemplateUrlTargetConfiguration];

export const TemplateValidationStrategyMode = {
    Strict: "STRICT",
    Lenient: "LENIENT",
} as const;

export type TemplateValidationStrategyMode = (typeof TemplateValidationStrategyMode)[keyof typeof TemplateValidationStrategyMode];

export const TemplateValueWhenUnsetOption = {
    RecommendedValue: "RECOMMENDED_VALUE",
    Null: "NULL",
} as const;

export type TemplateValueWhenUnsetOption = (typeof TemplateValueWhenUnsetOption)[keyof typeof TemplateValueWhenUnsetOption];

export const TemplateVerticalTextAlignment = {
    Top: "TOP",
    Middle: "MIDDLE",
    Bottom: "BOTTOM",
    Auto: "AUTO",
} as const;

export type TemplateVerticalTextAlignment = (typeof TemplateVerticalTextAlignment)[keyof typeof TemplateVerticalTextAlignment];

export const TemplateVisibility = {
    Hidden: "HIDDEN",
    Visible: "VISIBLE",
} as const;

export type TemplateVisibility = (typeof TemplateVisibility)[keyof typeof TemplateVisibility];

export const TemplateVisualCustomActionTrigger = {
    DataPointClick: "DATA_POINT_CLICK",
    DataPointMenu: "DATA_POINT_MENU",
} as const;

export type TemplateVisualCustomActionTrigger = (typeof TemplateVisualCustomActionTrigger)[keyof typeof TemplateVisualCustomActionTrigger];

export const TemplateWidgetStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type TemplateWidgetStatus = (typeof TemplateWidgetStatus)[keyof typeof TemplateWidgetStatus];

export const TemplateWordCloudCloudLayout = {
    Fluid: "FLUID",
    Normal: "NORMAL",
} as const;

export type TemplateWordCloudCloudLayout = (typeof TemplateWordCloudCloudLayout)[keyof typeof TemplateWordCloudCloudLayout];

export const TemplateWordCloudWordCasing = {
    LowerCase: "LOWER_CASE",
    ExistingCase: "EXISTING_CASE",
} as const;

export type TemplateWordCloudWordCasing = (typeof TemplateWordCloudWordCasing)[keyof typeof TemplateWordCloudWordCasing];

export const TemplateWordCloudWordOrientation = {
    Horizontal: "HORIZONTAL",
    HorizontalAndVertical: "HORIZONTAL_AND_VERTICAL",
} as const;

export type TemplateWordCloudWordOrientation = (typeof TemplateWordCloudWordOrientation)[keyof typeof TemplateWordCloudWordOrientation];

export const TemplateWordCloudWordPadding = {
    None: "NONE",
    Small: "SMALL",
    Medium: "MEDIUM",
    Large: "LARGE",
} as const;

export type TemplateWordCloudWordPadding = (typeof TemplateWordCloudWordPadding)[keyof typeof TemplateWordCloudWordPadding];

export const TemplateWordCloudWordScaling = {
    Emphasize: "EMPHASIZE",
    Normal: "NORMAL",
} as const;

export type TemplateWordCloudWordScaling = (typeof TemplateWordCloudWordScaling)[keyof typeof TemplateWordCloudWordScaling];

export const ThemeErrorType = {
    InternalFailure: "INTERNAL_FAILURE",
} as const;

export type ThemeErrorType = (typeof ThemeErrorType)[keyof typeof ThemeErrorType];

export const ThemeResourceStatus = {
    CreationInProgress: "CREATION_IN_PROGRESS",
    CreationSuccessful: "CREATION_SUCCESSFUL",
    CreationFailed: "CREATION_FAILED",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    UpdateSuccessful: "UPDATE_SUCCESSFUL",
    UpdateFailed: "UPDATE_FAILED",
    Deleted: "DELETED",
} as const;

export type ThemeResourceStatus = (typeof ThemeResourceStatus)[keyof typeof ThemeResourceStatus];

export const ThemeType = {
    Quicksight: "QUICKSIGHT",
    Custom: "CUSTOM",
    All: "ALL",
} as const;

export type ThemeType = (typeof ThemeType)[keyof typeof ThemeType];

export const TopicAuthorSpecifiedAggregation = {
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
    Min: "MIN",
    Max: "MAX",
    Median: "MEDIAN",
    Sum: "SUM",
    Average: "AVERAGE",
    Stdev: "STDEV",
    Stdevp: "STDEVP",
    Var: "VAR",
    Varp: "VARP",
    Percentile: "PERCENTILE",
} as const;

export type TopicAuthorSpecifiedAggregation = (typeof TopicAuthorSpecifiedAggregation)[keyof typeof TopicAuthorSpecifiedAggregation];

export const TopicCategoryFilterFunction = {
    Exact: "EXACT",
    Contains: "CONTAINS",
} as const;

export type TopicCategoryFilterFunction = (typeof TopicCategoryFilterFunction)[keyof typeof TopicCategoryFilterFunction];

export const TopicCategoryFilterType = {
    CustomFilter: "CUSTOM_FILTER",
    CustomFilterList: "CUSTOM_FILTER_LIST",
    FilterList: "FILTER_LIST",
} as const;

export type TopicCategoryFilterType = (typeof TopicCategoryFilterType)[keyof typeof TopicCategoryFilterType];

export const TopicColumnDataRole = {
    Dimension: "DIMENSION",
    Measure: "MEASURE",
} as const;

export type TopicColumnDataRole = (typeof TopicColumnDataRole)[keyof typeof TopicColumnDataRole];

export const TopicColumnOrderingType = {
    GreaterIsBetter: "GREATER_IS_BETTER",
    LesserIsBetter: "LESSER_IS_BETTER",
    Specified: "SPECIFIED",
} as const;

export type TopicColumnOrderingType = (typeof TopicColumnOrderingType)[keyof typeof TopicColumnOrderingType];

export const TopicConstantType = {
    Singular: "SINGULAR",
    Range: "RANGE",
    Collective: "COLLECTIVE",
} as const;

export type TopicConstantType = (typeof TopicConstantType)[keyof typeof TopicConstantType];

export const TopicDefaultAggregation = {
    Sum: "SUM",
    Max: "MAX",
    Min: "MIN",
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
    Average: "AVERAGE",
    Median: "MEDIAN",
    Stdev: "STDEV",
    Stdevp: "STDEVP",
    Var: "VAR",
    Varp: "VARP",
} as const;

export type TopicDefaultAggregation = (typeof TopicDefaultAggregation)[keyof typeof TopicDefaultAggregation];

export const TopicDisplayFormat = {
    Auto: "AUTO",
    Percent: "PERCENT",
    Currency: "CURRENCY",
    Number: "NUMBER",
    Date: "DATE",
    String: "STRING",
} as const;

export type TopicDisplayFormat = (typeof TopicDisplayFormat)[keyof typeof TopicDisplayFormat];

export const TopicFilterClass = {
    EnforcedValueFilter: "ENFORCED_VALUE_FILTER",
    ConditionalValueFilter: "CONDITIONAL_VALUE_FILTER",
    NamedValueFilter: "NAMED_VALUE_FILTER",
} as const;

export type TopicFilterClass = (typeof TopicFilterClass)[keyof typeof TopicFilterClass];

export const TopicNamedEntityAggType = {
    Sum: "SUM",
    Min: "MIN",
    Max: "MAX",
    Count: "COUNT",
    Average: "AVERAGE",
    DistinctCount: "DISTINCT_COUNT",
    Stdev: "STDEV",
    Stdevp: "STDEVP",
    Var: "VAR",
    Varp: "VARP",
    Percentile: "PERCENTILE",
    Median: "MEDIAN",
    Custom: "CUSTOM",
} as const;

export type TopicNamedEntityAggType = (typeof TopicNamedEntityAggType)[keyof typeof TopicNamedEntityAggType];

export const TopicNamedFilterAggType = {
    NoAggregation: "NO_AGGREGATION",
    Sum: "SUM",
    Average: "AVERAGE",
    Count: "COUNT",
    DistinctCount: "DISTINCT_COUNT",
    Max: "MAX",
    Median: "MEDIAN",
    Min: "MIN",
    Stdev: "STDEV",
    Stdevp: "STDEVP",
    Var: "VAR",
    Varp: "VARP",
} as const;

export type TopicNamedFilterAggType = (typeof TopicNamedFilterAggType)[keyof typeof TopicNamedFilterAggType];

export const TopicNamedFilterType = {
    CategoryFilter: "CATEGORY_FILTER",
    NumericEqualityFilter: "NUMERIC_EQUALITY_FILTER",
    NumericRangeFilter: "NUMERIC_RANGE_FILTER",
    DateRangeFilter: "DATE_RANGE_FILTER",
    RelativeDateFilter: "RELATIVE_DATE_FILTER",
} as const;

export type TopicNamedFilterType = (typeof TopicNamedFilterType)[keyof typeof TopicNamedFilterType];

export const TopicNumberScale = {
    None: "NONE",
    Auto: "AUTO",
    Thousands: "THOUSANDS",
    Millions: "MILLIONS",
    Billions: "BILLIONS",
    Trillions: "TRILLIONS",
} as const;

export type TopicNumberScale = (typeof TopicNumberScale)[keyof typeof TopicNumberScale];

export const TopicNumericSeparatorSymbol = {
    Comma: "COMMA",
    Dot: "DOT",
} as const;

export type TopicNumericSeparatorSymbol = (typeof TopicNumericSeparatorSymbol)[keyof typeof TopicNumericSeparatorSymbol];

export const TopicPropertyRole = {
    Primary: "PRIMARY",
    Id: "ID",
} as const;

export type TopicPropertyRole = (typeof TopicPropertyRole)[keyof typeof TopicPropertyRole];

export const TopicPropertyUsage = {
    Inherit: "INHERIT",
    Dimension: "DIMENSION",
    Measure: "MEASURE",
} as const;

export type TopicPropertyUsage = (typeof TopicPropertyUsage)[keyof typeof TopicPropertyUsage];

export const TopicRelativeDateFilterFunction = {
    Previous: "PREVIOUS",
    This: "THIS",
    Last: "LAST",
    Next: "NEXT",
    Now: "NOW",
} as const;

export type TopicRelativeDateFilterFunction = (typeof TopicRelativeDateFilterFunction)[keyof typeof TopicRelativeDateFilterFunction];

export const TopicTimeGranularity = {
    Second: "SECOND",
    Minute: "MINUTE",
    Hour: "HOUR",
    Day: "DAY",
    Week: "WEEK",
    Month: "MONTH",
    Quarter: "QUARTER",
    Year: "YEAR",
} as const;

export type TopicTimeGranularity = (typeof TopicTimeGranularity)[keyof typeof TopicTimeGranularity];

export const TopicUndefinedSpecifiedValueType = {
    Least: "LEAST",
    Most: "MOST",
} as const;

export type TopicUndefinedSpecifiedValueType = (typeof TopicUndefinedSpecifiedValueType)[keyof typeof TopicUndefinedSpecifiedValueType];

export const TopicUserExperienceVersion = {
    Legacy: "LEGACY",
    NewReaderExperience: "NEW_READER_EXPERIENCE",
} as const;

export type TopicUserExperienceVersion = (typeof TopicUserExperienceVersion)[keyof typeof TopicUserExperienceVersion];

export const VpcConnectionNetworkInterfaceStatus = {
    Creating: "CREATING",
    Available: "AVAILABLE",
    CreationFailed: "CREATION_FAILED",
    Updating: "UPDATING",
    UpdateFailed: "UPDATE_FAILED",
    Deleting: "DELETING",
    Deleted: "DELETED",
    DeletionFailed: "DELETION_FAILED",
    DeletionScheduled: "DELETION_SCHEDULED",
    AttachmentFailedRollbackFailed: "ATTACHMENT_FAILED_ROLLBACK_FAILED",
} as const;

export type VpcConnectionNetworkInterfaceStatus = (typeof VpcConnectionNetworkInterfaceStatus)[keyof typeof VpcConnectionNetworkInterfaceStatus];

export const VpcConnectionVpcConnectionAvailabilityStatus = {
    Available: "AVAILABLE",
    Unavailable: "UNAVAILABLE",
    PartiallyAvailable: "PARTIALLY_AVAILABLE",
} as const;

export type VpcConnectionVpcConnectionAvailabilityStatus = (typeof VpcConnectionVpcConnectionAvailabilityStatus)[keyof typeof VpcConnectionVpcConnectionAvailabilityStatus];

export const VpcConnectionVpcConnectionResourceStatus = {
    CreationInProgress: "CREATION_IN_PROGRESS",
    CreationSuccessful: "CREATION_SUCCESSFUL",
    CreationFailed: "CREATION_FAILED",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    UpdateSuccessful: "UPDATE_SUCCESSFUL",
    UpdateFailed: "UPDATE_FAILED",
    DeletionInProgress: "DELETION_IN_PROGRESS",
    DeletionFailed: "DELETION_FAILED",
    Deleted: "DELETED",
} as const;

export type VpcConnectionVpcConnectionResourceStatus = (typeof VpcConnectionVpcConnectionResourceStatus)[keyof typeof VpcConnectionVpcConnectionResourceStatus];
