// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AccessPolicyType = {
    Data: "data",
} as const;

/**
 * The possible types for the access policy
 */
export type AccessPolicyType = (typeof AccessPolicyType)[keyof typeof AccessPolicyType];

export const CollectionStandbyReplicas = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

/**
 * The possible standby replicas for the collection
 */
export type CollectionStandbyReplicas = (typeof CollectionStandbyReplicas)[keyof typeof CollectionStandbyReplicas];

export const CollectionType = {
    Search: "SEARCH",
    Timeseries: "TIMESERIES",
    Vectorsearch: "VECTORSEARCH",
} as const;

/**
 * The possible types for the collection
 */
export type CollectionType = (typeof CollectionType)[keyof typeof CollectionType];

export const IndexPropertyMappingMethodPropertiesEngine = {
    Nmslib: "nmslib",
    Faiss: "faiss",
    Lucene: "lucene",
} as const;

/**
 * The k-NN search engine to use
 */
export type IndexPropertyMappingMethodPropertiesEngine = (typeof IndexPropertyMappingMethodPropertiesEngine)[keyof typeof IndexPropertyMappingMethodPropertiesEngine];

export const IndexPropertyMappingMethodPropertiesName = {
    Hnsw: "hnsw",
    Ivf: "ivf",
} as const;

/**
 * The algorithm name for k-NN search
 */
export type IndexPropertyMappingMethodPropertiesName = (typeof IndexPropertyMappingMethodPropertiesName)[keyof typeof IndexPropertyMappingMethodPropertiesName];

export const IndexPropertyMappingMethodPropertiesSpaceType = {
    L2: "l2",
    L1: "l1",
    Linf: "linf",
    Cosinesimil: "cosinesimil",
    Innerproduct: "innerproduct",
    Hamming: "hamming",
} as const;

/**
 * The distance function used for k-NN search
 */
export type IndexPropertyMappingMethodPropertiesSpaceType = (typeof IndexPropertyMappingMethodPropertiesSpaceType)[keyof typeof IndexPropertyMappingMethodPropertiesSpaceType];

export const IndexPropertyMappingType = {
    Text: "text",
    KnnVector: "knn_vector",
} as const;

/**
 * The field data type. Must be a valid OpenSearch field type.
 */
export type IndexPropertyMappingType = (typeof IndexPropertyMappingType)[keyof typeof IndexPropertyMappingType];

export const LifecyclePolicyType = {
    Retention: "retention",
} as const;

/**
 * The type of lifecycle policy
 */
export type LifecyclePolicyType = (typeof LifecyclePolicyType)[keyof typeof LifecyclePolicyType];

export const SecurityConfigType = {
    Saml: "saml",
    Iamidentitycenter: "iamidentitycenter",
    Iamfederation: "iamfederation",
} as const;

/**
 * Config type for security config
 */
export type SecurityConfigType = (typeof SecurityConfigType)[keyof typeof SecurityConfigType];

export const SecurityPolicyType = {
    Encryption: "encryption",
    Network: "network",
} as const;

/**
 * The possible types for the network policy
 */
export type SecurityPolicyType = (typeof SecurityPolicyType)[keyof typeof SecurityPolicyType];
