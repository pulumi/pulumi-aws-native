// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const DocumentClassifierAugmentedManifestsListItemSplit = {
    Train: "TRAIN",
    Test: "TEST",
} as const;

/**
 * The purpose of the data you've provided in the augmented manifest. You can either train or test this data. If you don't specify, the default is train.
 *
 * TRAIN - all of the documents in the manifest will be used for training. If no test documents are provided, Amazon Comprehend will automatically reserve a portion of the training documents for testing.
 *
 * TEST - all of the documents in the manifest will be used for testing.
 */
export type DocumentClassifierAugmentedManifestsListItemSplit = (typeof DocumentClassifierAugmentedManifestsListItemSplit)[keyof typeof DocumentClassifierAugmentedManifestsListItemSplit];

export const DocumentClassifierDocumentReaderConfigDocumentReadAction = {
    TextractDetectDocumentText: "TEXTRACT_DETECT_DOCUMENT_TEXT",
    TextractAnalyzeDocument: "TEXTRACT_ANALYZE_DOCUMENT",
} as const;

/**
 * This field defines the Amazon Textract API operation that Amazon Comprehend uses to extract text from PDF files and image files. Enter one of the following values:
 *
 * - `TEXTRACT_DETECT_DOCUMENT_TEXT` - The Amazon Comprehend service uses the `DetectDocumentText` API operation.
 * - `TEXTRACT_ANALYZE_DOCUMENT` - The Amazon Comprehend service uses the `AnalyzeDocument` API operation.
 */
export type DocumentClassifierDocumentReaderConfigDocumentReadAction = (typeof DocumentClassifierDocumentReaderConfigDocumentReadAction)[keyof typeof DocumentClassifierDocumentReaderConfigDocumentReadAction];

export const DocumentClassifierDocumentReaderConfigDocumentReadMode = {
    ServiceDefault: "SERVICE_DEFAULT",
    ForceDocumentReadAction: "FORCE_DOCUMENT_READ_ACTION",
} as const;

/**
 * Determines the text extraction actions for PDF files. Enter one of the following values:
 *
 * - `SERVICE_DEFAULT` - use the Amazon Comprehend service defaults for PDF files.
 * - `FORCE_DOCUMENT_READ_ACTION` - Amazon Comprehend uses the Textract API specified by DocumentReadAction for all PDF files, including digital PDF files.
 */
export type DocumentClassifierDocumentReaderConfigDocumentReadMode = (typeof DocumentClassifierDocumentReaderConfigDocumentReadMode)[keyof typeof DocumentClassifierDocumentReaderConfigDocumentReadMode];

export const DocumentClassifierDocumentReaderConfigFeatureTypesItem = {
    Tables: "TABLES",
    Forms: "FORMS",
} as const;

export type DocumentClassifierDocumentReaderConfigFeatureTypesItem = (typeof DocumentClassifierDocumentReaderConfigFeatureTypesItem)[keyof typeof DocumentClassifierDocumentReaderConfigFeatureTypesItem];

export const DocumentClassifierInputDataConfigDataFormat = {
    ComprehendCsv: "COMPREHEND_CSV",
    AugmentedManifest: "AUGMENTED_MANIFEST",
} as const;

/**
 * The format of your training data:
 *
 * - `COMPREHEND_CSV` : A two-column CSV file, where labels are provided in the first column, and documents are provided in the second. If you use this value, you must provide the `S3Uri` parameter in your request.
 * - `AUGMENTED_MANIFEST` : A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its associated labels.
 *
 * If you use this value, you must provide the `AugmentedManifests` parameter in your request.
 *
 * If you don't specify a value, Amazon Comprehend uses `COMPREHEND_CSV` as the default.
 */
export type DocumentClassifierInputDataConfigDataFormat = (typeof DocumentClassifierInputDataConfigDataFormat)[keyof typeof DocumentClassifierInputDataConfigDataFormat];

export const DocumentClassifierInputDataConfigDocumentType = {
    PlainTextDocument: "PLAIN_TEXT_DOCUMENT",
    SemiStructuredDocument: "SEMI_STRUCTURED_DOCUMENT",
} as const;

/**
 * The type of input documents for training the model. Provide plain-text documents to create a plain-text model, and provide semi-structured documents to create a native document model.
 */
export type DocumentClassifierInputDataConfigDocumentType = (typeof DocumentClassifierInputDataConfigDocumentType)[keyof typeof DocumentClassifierInputDataConfigDocumentType];

export const DocumentClassifierLanguageCode = {
    En: "en",
    Es: "es",
    Fr: "fr",
    It: "it",
    De: "de",
    Pt: "pt",
} as const;

/**
 * The language of the input documents. You can specify any of the languages supported by Amazon Comprehend. All documents must be in the same language.
 */
export type DocumentClassifierLanguageCode = (typeof DocumentClassifierLanguageCode)[keyof typeof DocumentClassifierLanguageCode];

export const DocumentClassifierMode = {
    MultiClass: "MULTI_CLASS",
    MultiLabel: "MULTI_LABEL",
} as const;

/**
 * Indicates the mode in which the classifier will be trained. The classifier can be trained in multi-class (single-label) mode or multi-label mode. Multi-class mode identifies a single class label for each document and multi-label mode identifies one or more class labels for each document. Multiple labels for an individual document are separated by a delimiter. The default delimiter between labels is a pipe (|).
 */
export type DocumentClassifierMode = (typeof DocumentClassifierMode)[keyof typeof DocumentClassifierMode];

export const FlywheelDocumentClassificationConfigMode = {
    MultiClass: "MULTI_CLASS",
    MultiLabel: "MULTI_LABEL",
} as const;

/**
 * Classification mode indicates whether the documents are `MULTI_CLASS` or `MULTI_LABEL` .
 */
export type FlywheelDocumentClassificationConfigMode = (typeof FlywheelDocumentClassificationConfigMode)[keyof typeof FlywheelDocumentClassificationConfigMode];

export const FlywheelModelType = {
    DocumentClassifier: "DOCUMENT_CLASSIFIER",
    EntityRecognizer: "ENTITY_RECOGNIZER",
} as const;

/**
 * Model type of the flywheel's model.
 */
export type FlywheelModelType = (typeof FlywheelModelType)[keyof typeof FlywheelModelType];

export const FlywheelTaskConfigLanguageCode = {
    En: "en",
    Es: "es",
    Fr: "fr",
    It: "it",
    De: "de",
    Pt: "pt",
} as const;

/**
 * Language code for the language that the model supports.
 */
export type FlywheelTaskConfigLanguageCode = (typeof FlywheelTaskConfigLanguageCode)[keyof typeof FlywheelTaskConfigLanguageCode];
