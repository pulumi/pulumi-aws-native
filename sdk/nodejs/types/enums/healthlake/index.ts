// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const FhirDatastoreDatastoreStatus = {
    Creating: "CREATING",
    Active: "ACTIVE",
    Deleting: "DELETING",
    Deleted: "DELETED",
} as const;

/**
 * The status of the Data Store. Possible statuses are 'CREATING', 'ACTIVE', 'DELETING', or 'DELETED'.
 */
export type FhirDatastoreDatastoreStatus = (typeof FhirDatastoreDatastoreStatus)[keyof typeof FhirDatastoreDatastoreStatus];

export const FhirDatastoreDatastoreTypeVersion = {
    R4: "R4",
} as const;

/**
 * The FHIR version. Only R4 version data is supported.
 */
export type FhirDatastoreDatastoreTypeVersion = (typeof FhirDatastoreDatastoreTypeVersion)[keyof typeof FhirDatastoreDatastoreTypeVersion];

export const FhirDatastoreIdentityProviderConfigurationAuthorizationStrategy = {
    SmartOnFhirV1: "SMART_ON_FHIR_V1",
    AwsAuth: "AWS_AUTH",
} as const;

/**
 * Type of Authorization Strategy. The two types of supported Authorization strategies are SMART_ON_FHIR_V1 and AWS_AUTH.
 */
export type FhirDatastoreIdentityProviderConfigurationAuthorizationStrategy = (typeof FhirDatastoreIdentityProviderConfigurationAuthorizationStrategy)[keyof typeof FhirDatastoreIdentityProviderConfigurationAuthorizationStrategy];

export const FhirDatastoreKmsEncryptionConfigCmkType = {
    CustomerManagedKmsKey: "CUSTOMER_MANAGED_KMS_KEY",
    AwsOwnedKmsKey: "AWS_OWNED_KMS_KEY",
} as const;

/**
 * The type of customer-managed-key (CMK) used for encryption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.
 */
export type FhirDatastoreKmsEncryptionConfigCmkType = (typeof FhirDatastoreKmsEncryptionConfigCmkType)[keyof typeof FhirDatastoreKmsEncryptionConfigCmkType];

export const FhirDatastorePreloadDataConfigPreloadDataType = {
    Synthea: "SYNTHEA",
} as const;

/**
 * The type of preloaded data. Only Synthea preloaded data is supported.
 */
export type FhirDatastorePreloadDataConfigPreloadDataType = (typeof FhirDatastorePreloadDataConfigPreloadDataType)[keyof typeof FhirDatastorePreloadDataConfigPreloadDataType];
