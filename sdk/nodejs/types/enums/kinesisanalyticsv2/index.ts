// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ApplicationCheckpointConfigurationConfigurationType = {
    Default: "DEFAULT",
    Custom: "CUSTOM",
} as const;

/**
 * Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. You must set this property to `CUSTOM` in order to set the `CheckpointingEnabled`, `CheckpointInterval`, or `MinPauseBetweenCheckpoints` parameters.
 */
export type ApplicationCheckpointConfigurationConfigurationType = (typeof ApplicationCheckpointConfigurationConfigurationType)[keyof typeof ApplicationCheckpointConfigurationConfigurationType];

export const ApplicationCodeConfigurationCodeContentType = {
    Plaintext: "PLAINTEXT",
    Zipfile: "ZIPFILE",
} as const;

/**
 * Specifies whether the code content is in text or zip format.
 */
export type ApplicationCodeConfigurationCodeContentType = (typeof ApplicationCodeConfigurationCodeContentType)[keyof typeof ApplicationCodeConfigurationCodeContentType];

export const ApplicationCustomArtifactConfigurationArtifactType = {
    DependencyJar: "DEPENDENCY_JAR",
    Udf: "UDF",
} as const;

/**
 * Set this to either `UDF` or `DEPENDENCY_JAR`. `UDF` stands for user-defined functions. This type of artifact must be in an S3 bucket. A `DEPENDENCY_JAR` can be in either Maven or an S3 bucket.
 */
export type ApplicationCustomArtifactConfigurationArtifactType = (typeof ApplicationCustomArtifactConfigurationArtifactType)[keyof typeof ApplicationCustomArtifactConfigurationArtifactType];

export const ApplicationInputSchemaRecordEncoding = {
    Utf8: "UTF-8",
} as const;

/**
 * Specifies the encoding of the records in the streaming source. For example, UTF-8.
 */
export type ApplicationInputSchemaRecordEncoding = (typeof ApplicationInputSchemaRecordEncoding)[keyof typeof ApplicationInputSchemaRecordEncoding];

export const ApplicationMode = {
    Interactive: "INTERACTIVE",
    Streaming: "STREAMING",
} as const;

/**
 * To create a Kinesis Data Analytics Studio notebook, you must set the mode to `INTERACTIVE`. However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.
 */
export type ApplicationMode = (typeof ApplicationMode)[keyof typeof ApplicationMode];

export const ApplicationMonitoringConfigurationConfigurationType = {
    Default: "DEFAULT",
    Custom: "CUSTOM",
} as const;

/**
 * Describes whether to use the default CloudWatch logging configuration for an application. You must set this property to CUSTOM in order to set the LogLevel or MetricsLevel parameters.
 */
export type ApplicationMonitoringConfigurationConfigurationType = (typeof ApplicationMonitoringConfigurationConfigurationType)[keyof typeof ApplicationMonitoringConfigurationConfigurationType];

export const ApplicationMonitoringConfigurationLogLevel = {
    Debug: "DEBUG",
    Info: "INFO",
    Warn: "WARN",
    Error: "ERROR",
} as const;

/**
 * Describes the verbosity of the CloudWatch Logs for an application.
 */
export type ApplicationMonitoringConfigurationLogLevel = (typeof ApplicationMonitoringConfigurationLogLevel)[keyof typeof ApplicationMonitoringConfigurationLogLevel];

export const ApplicationMonitoringConfigurationMetricsLevel = {
    Application: "APPLICATION",
    Operator: "OPERATOR",
    Parallelism: "PARALLELISM",
    Task: "TASK",
} as const;

/**
 * Describes the granularity of the CloudWatch Logs for an application. The Parallelism level is not recommended for applications with a Parallelism over 64 due to excessive costs.
 */
export type ApplicationMonitoringConfigurationMetricsLevel = (typeof ApplicationMonitoringConfigurationMetricsLevel)[keyof typeof ApplicationMonitoringConfigurationMetricsLevel];

export const ApplicationParallelismConfigurationConfigurationType = {
    Custom: "CUSTOM",
    Default: "DEFAULT",
} as const;

/**
 * Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. You must set this property to `CUSTOM` in order to change your application's `AutoScalingEnabled`, `Parallelism`, or `ParallelismPerKPU` properties.
 */
export type ApplicationParallelismConfigurationConfigurationType = (typeof ApplicationParallelismConfigurationConfigurationType)[keyof typeof ApplicationParallelismConfigurationConfigurationType];

export const ApplicationRecordFormatRecordFormatType = {
    Csv: "CSV",
    Json: "JSON",
} as const;

/**
 * The type of record format.
 */
export type ApplicationRecordFormatRecordFormatType = (typeof ApplicationRecordFormatRecordFormatType)[keyof typeof ApplicationRecordFormatRecordFormatType];

export const ApplicationZeppelinMonitoringConfigurationLogLevel = {
    Debug: "DEBUG",
    Info: "INFO",
    Warn: "WARN",
    Error: "ERROR",
} as const;

/**
 * The verbosity of the CloudWatch Logs for an application. You can set it to `INFO`, `WARN`, `ERROR`, or `DEBUG`.
 */
export type ApplicationZeppelinMonitoringConfigurationLogLevel = (typeof ApplicationZeppelinMonitoringConfigurationLogLevel)[keyof typeof ApplicationZeppelinMonitoringConfigurationLogLevel];
