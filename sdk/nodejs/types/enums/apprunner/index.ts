// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ObservabilityConfigurationTraceConfigurationVendor = {
    Awsxray: "AWSXRAY",
} as const;

/**
 * The implementation provider chosen for tracing App Runner services.
 */
export type ObservabilityConfigurationTraceConfigurationVendor = (typeof ObservabilityConfigurationTraceConfigurationVendor)[keyof typeof ObservabilityConfigurationTraceConfigurationVendor];

export const ServiceCodeConfigurationConfigurationSource = {
    Repository: "REPOSITORY",
    Api: "API",
} as const;

/**
 * Configuration Source
 */
export type ServiceCodeConfigurationConfigurationSource = (typeof ServiceCodeConfigurationConfigurationSource)[keyof typeof ServiceCodeConfigurationConfigurationSource];

export const ServiceCodeConfigurationValuesRuntime = {
    Python3: "PYTHON_3",
    Nodejs12: "NODEJS_12",
    Nodejs14: "NODEJS_14",
    Corretto8: "CORRETTO_8",
    Corretto11: "CORRETTO_11",
    Nodejs16: "NODEJS_16",
    Go1: "GO_1",
    Dotnet6: "DOTNET_6",
    Php81: "PHP_81",
    Ruby31: "RUBY_31",
    Python311: "PYTHON_311",
    Nodejs18: "NODEJS_18",
} as const;

/**
 * Runtime
 */
export type ServiceCodeConfigurationValuesRuntime = (typeof ServiceCodeConfigurationValuesRuntime)[keyof typeof ServiceCodeConfigurationValuesRuntime];

export const ServiceEgressConfigurationEgressType = {
    Default: "DEFAULT",
    Vpc: "VPC",
} as const;

/**
 * Network egress type.
 */
export type ServiceEgressConfigurationEgressType = (typeof ServiceEgressConfigurationEgressType)[keyof typeof ServiceEgressConfigurationEgressType];

export const ServiceHealthCheckConfigurationProtocol = {
    Tcp: "TCP",
    Http: "HTTP",
} as const;

/**
 * Health Check Protocol
 */
export type ServiceHealthCheckConfigurationProtocol = (typeof ServiceHealthCheckConfigurationProtocol)[keyof typeof ServiceHealthCheckConfigurationProtocol];

export const ServiceImageRepositoryImageRepositoryType = {
    Ecr: "ECR",
    EcrPublic: "ECR_PUBLIC",
} as const;

/**
 * Image Repository Type
 */
export type ServiceImageRepositoryImageRepositoryType = (typeof ServiceImageRepositoryImageRepositoryType)[keyof typeof ServiceImageRepositoryImageRepositoryType];

export const ServiceNetworkConfigurationIpAddressType = {
    Ipv4: "IPV4",
    DualStack: "DUAL_STACK",
} as const;

/**
 * App Runner service endpoint IP address type
 */
export type ServiceNetworkConfigurationIpAddressType = (typeof ServiceNetworkConfigurationIpAddressType)[keyof typeof ServiceNetworkConfigurationIpAddressType];

export const ServiceSourceCodeVersionType = {
    Branch: "BRANCH",
} as const;

/**
 * Source Code Version Type
 */
export type ServiceSourceCodeVersionType = (typeof ServiceSourceCodeVersionType)[keyof typeof ServiceSourceCodeVersionType];

export const VpcIngressConnectionStatus = {
    Available: "AVAILABLE",
    PendingCreation: "PENDING_CREATION",
    PendingUpdate: "PENDING_UPDATE",
    PendingDeletion: "PENDING_DELETION",
    FailedCreation: "FAILED_CREATION",
    FailedUpdate: "FAILED_UPDATE",
    FailedDeletion: "FAILED_DELETION",
    Deleted: "DELETED",
} as const;

/**
 * The current status of the VpcIngressConnection.
 */
export type VpcIngressConnectionStatus = (typeof VpcIngressConnectionStatus)[keyof typeof VpcIngressConnectionStatus];
