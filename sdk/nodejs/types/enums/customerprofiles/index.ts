// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const IntegrationConnectorType = {
    Salesforce: "Salesforce",
    Marketo: "Marketo",
    ServiceNow: "ServiceNow",
    Zendesk: "Zendesk",
    S3: "S3",
} as const;

export type IntegrationConnectorType = (typeof IntegrationConnectorType)[keyof typeof IntegrationConnectorType];

export const IntegrationMarketoConnectorOperator = {
    Projection: "PROJECTION",
    LessThan: "LESS_THAN",
    GreaterThan: "GREATER_THAN",
    Between: "BETWEEN",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
} as const;

export type IntegrationMarketoConnectorOperator = (typeof IntegrationMarketoConnectorOperator)[keyof typeof IntegrationMarketoConnectorOperator];

export const IntegrationOperatorPropertiesKeys = {
    Value: "VALUE",
    Values: "VALUES",
    DataType: "DATA_TYPE",
    UpperBound: "UPPER_BOUND",
    LowerBound: "LOWER_BOUND",
    SourceDataType: "SOURCE_DATA_TYPE",
    DestinationDataType: "DESTINATION_DATA_TYPE",
    ValidationAction: "VALIDATION_ACTION",
    MaskValue: "MASK_VALUE",
    MaskLength: "MASK_LENGTH",
    TruncateLength: "TRUNCATE_LENGTH",
    MathOperationFieldsOrder: "MATH_OPERATION_FIELDS_ORDER",
    ConcatFormat: "CONCAT_FORMAT",
    SubfieldCategoryMap: "SUBFIELD_CATEGORY_MAP",
} as const;

export type IntegrationOperatorPropertiesKeys = (typeof IntegrationOperatorPropertiesKeys)[keyof typeof IntegrationOperatorPropertiesKeys];

export const IntegrationS3ConnectorOperator = {
    Projection: "PROJECTION",
    LessThan: "LESS_THAN",
    GreaterThan: "GREATER_THAN",
    Between: "BETWEEN",
    LessThanOrEqualTo: "LESS_THAN_OR_EQUAL_TO",
    GreaterThanOrEqualTo: "GREATER_THAN_OR_EQUAL_TO",
    EqualTo: "EQUAL_TO",
    NotEqualTo: "NOT_EQUAL_TO",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
} as const;

export type IntegrationS3ConnectorOperator = (typeof IntegrationS3ConnectorOperator)[keyof typeof IntegrationS3ConnectorOperator];

export const IntegrationSalesforceConnectorOperator = {
    Projection: "PROJECTION",
    LessThan: "LESS_THAN",
    GreaterThan: "GREATER_THAN",
    Contains: "CONTAINS",
    Between: "BETWEEN",
    LessThanOrEqualTo: "LESS_THAN_OR_EQUAL_TO",
    GreaterThanOrEqualTo: "GREATER_THAN_OR_EQUAL_TO",
    EqualTo: "EQUAL_TO",
    NotEqualTo: "NOT_EQUAL_TO",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
} as const;

export type IntegrationSalesforceConnectorOperator = (typeof IntegrationSalesforceConnectorOperator)[keyof typeof IntegrationSalesforceConnectorOperator];

export const IntegrationScheduledTriggerPropertiesDataPullMode = {
    Incremental: "Incremental",
    Complete: "Complete",
} as const;

export type IntegrationScheduledTriggerPropertiesDataPullMode = (typeof IntegrationScheduledTriggerPropertiesDataPullMode)[keyof typeof IntegrationScheduledTriggerPropertiesDataPullMode];

export const IntegrationServiceNowConnectorOperator = {
    Projection: "PROJECTION",
    LessThan: "LESS_THAN",
    GreaterThan: "GREATER_THAN",
    Contains: "CONTAINS",
    Between: "BETWEEN",
    LessThanOrEqualTo: "LESS_THAN_OR_EQUAL_TO",
    GreaterThanOrEqualTo: "GREATER_THAN_OR_EQUAL_TO",
    EqualTo: "EQUAL_TO",
    NotEqualTo: "NOT_EQUAL_TO",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
} as const;

export type IntegrationServiceNowConnectorOperator = (typeof IntegrationServiceNowConnectorOperator)[keyof typeof IntegrationServiceNowConnectorOperator];

export const IntegrationTaskType = {
    Arithmetic: "Arithmetic",
    Filter: "Filter",
    Map: "Map",
    Mask: "Mask",
    Merge: "Merge",
    Truncate: "Truncate",
    Validate: "Validate",
} as const;

export type IntegrationTaskType = (typeof IntegrationTaskType)[keyof typeof IntegrationTaskType];

export const IntegrationTriggerType = {
    Scheduled: "Scheduled",
    Event: "Event",
    OnDemand: "OnDemand",
} as const;

export type IntegrationTriggerType = (typeof IntegrationTriggerType)[keyof typeof IntegrationTriggerType];

export const IntegrationZendeskConnectorOperator = {
    Projection: "PROJECTION",
    GreaterThan: "GREATER_THAN",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
} as const;

export type IntegrationZendeskConnectorOperator = (typeof IntegrationZendeskConnectorOperator)[keyof typeof IntegrationZendeskConnectorOperator];

export const ObjectTypeObjectTypeFieldContentType = {
    String: "STRING",
    Number: "NUMBER",
    PhoneNumber: "PHONE_NUMBER",
    EmailAddress: "EMAIL_ADDRESS",
    Name: "NAME",
} as const;

/**
 * The content type of the field. Used for determining equality when searching.
 */
export type ObjectTypeObjectTypeFieldContentType = (typeof ObjectTypeObjectTypeFieldContentType)[keyof typeof ObjectTypeObjectTypeFieldContentType];

export const ObjectTypeObjectTypeKeyStandardIdentifiersItem = {
    Profile: "PROFILE",
    Unique: "UNIQUE",
    Secondary: "SECONDARY",
    LookupOnly: "LOOKUP_ONLY",
    NewOnly: "NEW_ONLY",
} as const;

export type ObjectTypeObjectTypeKeyStandardIdentifiersItem = (typeof ObjectTypeObjectTypeKeyStandardIdentifiersItem)[keyof typeof ObjectTypeObjectTypeKeyStandardIdentifiersItem];
