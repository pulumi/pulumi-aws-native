// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ApiDestinationHttpMethod = {
    Get: "GET",
    Head: "HEAD",
    Post: "POST",
    Options: "OPTIONS",
    Put: "PUT",
    Delete: "DELETE",
    Patch: "PATCH",
} as const;

/**
 * The method to use for the request to the HTTP invocation endpoint.
 */
export type ApiDestinationHttpMethod = (typeof ApiDestinationHttpMethod)[keyof typeof ApiDestinationHttpMethod];

export const ConnectionAuthorizationType = {
    ApiKey: "API_KEY",
    Basic: "BASIC",
    OauthClientCredentials: "OAUTH_CLIENT_CREDENTIALS",
} as const;

/**
 * The type of authorization to use for the connection.
 *
 * > OAUTH tokens are refreshed when a 401 or 407 response is returned.
 */
export type ConnectionAuthorizationType = (typeof ConnectionAuthorizationType)[keyof typeof ConnectionAuthorizationType];

export const ConnectionOAuthParametersHttpMethod = {
    Get: "GET",
    Post: "POST",
    Put: "PUT",
} as const;

/**
 * The method to use for the authorization request.
 */
export type ConnectionOAuthParametersHttpMethod = (typeof ConnectionOAuthParametersHttpMethod)[keyof typeof ConnectionOAuthParametersHttpMethod];

export const EndpointReplicationState = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type EndpointReplicationState = (typeof EndpointReplicationState)[keyof typeof EndpointReplicationState];

export const EndpointState = {
    Active: "ACTIVE",
    Creating: "CREATING",
    Updating: "UPDATING",
    Deleting: "DELETING",
    CreateFailed: "CREATE_FAILED",
    UpdateFailed: "UPDATE_FAILED",
} as const;

/**
 * The main Region of the endpoint.
 */
export type EndpointState = (typeof EndpointState)[keyof typeof EndpointState];

export const EventBusLogConfigPropertiesIncludeDetail = {
    Full: "FULL",
    None: "NONE",
} as const;

/**
 * Configures whether or not to include event detail, input transformer details, target properties, and target input in the applicable log messages.
 */
export type EventBusLogConfigPropertiesIncludeDetail = (typeof EventBusLogConfigPropertiesIncludeDetail)[keyof typeof EventBusLogConfigPropertiesIncludeDetail];

export const EventBusLogConfigPropertiesLevel = {
    Info: "INFO",
    Error: "ERROR",
    Trace: "TRACE",
    Off: "OFF",
} as const;

/**
 * Configures the log level of the EventBus and determines which log messages are sent to Ingestion Hub for delivery.
 */
export type EventBusLogConfigPropertiesLevel = (typeof EventBusLogConfigPropertiesLevel)[keyof typeof EventBusLogConfigPropertiesLevel];

export const RuleState = {
    Disabled: "DISABLED",
    Enabled: "ENABLED",
    EnabledWithAllCloudtrailManagementEvents: "ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS",
} as const;

/**
 * The state of the rule.
 */
export type RuleState = (typeof RuleState)[keyof typeof RuleState];
