// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AccessPointNetworkOrigin = {
    Internet: "Internet",
    Vpc: "VPC",
} as const;

/**
 * Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise, NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and bucket access policies.
 */
export type AccessPointNetworkOrigin = (typeof AccessPointNetworkOrigin)[keyof typeof AccessPointNetworkOrigin];

export const AccessPointScopePermissionsItem = {
    GetObject: "GetObject",
    GetObjectAttributes: "GetObjectAttributes",
    ListMultipartUploadParts: "ListMultipartUploadParts",
    ListBucket: "ListBucket",
    ListBucketMultipartUploads: "ListBucketMultipartUploads",
    PutObject: "PutObject",
    DeleteObject: "DeleteObject",
    AbortMultipartUpload: "AbortMultipartUpload",
} as const;

export type AccessPointScopePermissionsItem = (typeof AccessPointScopePermissionsItem)[keyof typeof AccessPointScopePermissionsItem];

export const DirectoryBucketDataRedundancy = {
    SingleAvailabilityZone: "SingleAvailabilityZone",
    SingleLocalZone: "SingleLocalZone",
} as const;

/**
 * Specifies the number of Availability Zone or Local Zone that's used for redundancy for the bucket.
 */
export type DirectoryBucketDataRedundancy = (typeof DirectoryBucketDataRedundancy)[keyof typeof DirectoryBucketDataRedundancy];

export const DirectoryBucketRuleStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

/**
 * If `Enabled` , the rule is currently being applied. If `Disabled` , the rule is not currently being applied.
 */
export type DirectoryBucketRuleStatus = (typeof DirectoryBucketRuleStatus)[keyof typeof DirectoryBucketRuleStatus];

export const DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm = {
    Awskms: "aws:kms",
    Aes256: "AES256",
} as const;

/**
 * Server-side encryption algorithm to use for the default encryption.
 *
 * > For directory buckets, there are only two supported values for server-side encryption: `AES256` and `aws:kms` .
 */
export type DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm = (typeof DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm)[keyof typeof DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm];
