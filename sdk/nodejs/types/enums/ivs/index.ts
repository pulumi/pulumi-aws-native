// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ChannelLatencyMode = {
    Normal: "NORMAL",
    Low: "LOW",
} as const;

/**
 * Channel latency mode.
 */
export type ChannelLatencyMode = (typeof ChannelLatencyMode)[keyof typeof ChannelLatencyMode];

export const ChannelPreset = {
    HigherBandwidthDelivery: "HIGHER_BANDWIDTH_DELIVERY",
    ConstrainedBandwidthDelivery: "CONSTRAINED_BANDWIDTH_DELIVERY",
} as const;

/**
 * Optional transcode preset for the channel. This is selectable only for ADVANCED_HD and ADVANCED_SD channel types. For those channel types, the default preset is HIGHER_BANDWIDTH_DELIVERY. For other channel types (BASIC and STANDARD), preset is the empty string ("").
 */
export type ChannelPreset = (typeof ChannelPreset)[keyof typeof ChannelPreset];

export const ChannelType = {
    Standard: "STANDARD",
    Basic: "BASIC",
    AdvancedSd: "ADVANCED_SD",
    AdvancedHd: "ADVANCED_HD",
} as const;

/**
 * Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.
 */
export type ChannelType = (typeof ChannelType)[keyof typeof ChannelType];

export const RecordingConfigurationState = {
    Creating: "CREATING",
    CreateFailed: "CREATE_FAILED",
    Active: "ACTIVE",
} as const;

/**
 * Recording Configuration State.
 */
export type RecordingConfigurationState = (typeof RecordingConfigurationState)[keyof typeof RecordingConfigurationState];

export const RecordingConfigurationThumbnailConfigurationRecordingMode = {
    Interval: "INTERVAL",
    Disabled: "DISABLED",
} as const;

/**
 * Thumbnail Recording Mode, which determines whether thumbnails are recorded at an interval or are disabled.
 */
export type RecordingConfigurationThumbnailConfigurationRecordingMode = (typeof RecordingConfigurationThumbnailConfigurationRecordingMode)[keyof typeof RecordingConfigurationThumbnailConfigurationRecordingMode];
