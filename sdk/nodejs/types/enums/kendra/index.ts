// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const DataSourceConfluenceAttachmentFieldName = {
    Author: "AUTHOR",
    ContentType: "CONTENT_TYPE",
    CreatedDate: "CREATED_DATE",
    DisplayUrl: "DISPLAY_URL",
    FileSize: "FILE_SIZE",
    ItemType: "ITEM_TYPE",
    ParentId: "PARENT_ID",
    SpaceKey: "SPACE_KEY",
    SpaceName: "SPACE_NAME",
    Url: "URL",
    Version: "VERSION",
} as const;

export type DataSourceConfluenceAttachmentFieldName = (typeof DataSourceConfluenceAttachmentFieldName)[keyof typeof DataSourceConfluenceAttachmentFieldName];

export const DataSourceConfluenceBlogFieldName = {
    Author: "AUTHOR",
    DisplayUrl: "DISPLAY_URL",
    ItemType: "ITEM_TYPE",
    Labels: "LABELS",
    PublishDate: "PUBLISH_DATE",
    SpaceKey: "SPACE_KEY",
    SpaceName: "SPACE_NAME",
    Url: "URL",
    Version: "VERSION",
} as const;

export type DataSourceConfluenceBlogFieldName = (typeof DataSourceConfluenceBlogFieldName)[keyof typeof DataSourceConfluenceBlogFieldName];

export const DataSourceConfluencePageFieldName = {
    Author: "AUTHOR",
    ContentStatus: "CONTENT_STATUS",
    CreatedDate: "CREATED_DATE",
    DisplayUrl: "DISPLAY_URL",
    ItemType: "ITEM_TYPE",
    Labels: "LABELS",
    ModifiedDate: "MODIFIED_DATE",
    ParentId: "PARENT_ID",
    SpaceKey: "SPACE_KEY",
    SpaceName: "SPACE_NAME",
    Url: "URL",
    Version: "VERSION",
} as const;

export type DataSourceConfluencePageFieldName = (typeof DataSourceConfluencePageFieldName)[keyof typeof DataSourceConfluencePageFieldName];

export const DataSourceConfluenceSpaceFieldName = {
    DisplayUrl: "DISPLAY_URL",
    ItemType: "ITEM_TYPE",
    SpaceKey: "SPACE_KEY",
    Url: "URL",
} as const;

export type DataSourceConfluenceSpaceFieldName = (typeof DataSourceConfluenceSpaceFieldName)[keyof typeof DataSourceConfluenceSpaceFieldName];

export const DataSourceConfluenceVersion = {
    Cloud: "CLOUD",
    Server: "SERVER",
} as const;

export type DataSourceConfluenceVersion = (typeof DataSourceConfluenceVersion)[keyof typeof DataSourceConfluenceVersion];

export const DataSourceDatabaseEngineType = {
    RdsAuroraMysql: "RDS_AURORA_MYSQL",
    RdsAuroraPostgresql: "RDS_AURORA_POSTGRESQL",
    RdsMysql: "RDS_MYSQL",
    RdsPostgresql: "RDS_POSTGRESQL",
} as const;

export type DataSourceDatabaseEngineType = (typeof DataSourceDatabaseEngineType)[keyof typeof DataSourceDatabaseEngineType];

export const DataSourceQueryIdentifiersEnclosingOption = {
    DoubleQuotes: "DOUBLE_QUOTES",
    None: "NONE",
} as const;

export type DataSourceQueryIdentifiersEnclosingOption = (typeof DataSourceQueryIdentifiersEnclosingOption)[keyof typeof DataSourceQueryIdentifiersEnclosingOption];

export const DataSourceSalesforceChatterFeedIncludeFilterType = {
    ActiveUser: "ACTIVE_USER",
    StandardUser: "STANDARD_USER",
} as const;

export type DataSourceSalesforceChatterFeedIncludeFilterType = (typeof DataSourceSalesforceChatterFeedIncludeFilterType)[keyof typeof DataSourceSalesforceChatterFeedIncludeFilterType];

export const DataSourceSalesforceKnowledgeArticleState = {
    Draft: "DRAFT",
    Published: "PUBLISHED",
    Archived: "ARCHIVED",
} as const;

export type DataSourceSalesforceKnowledgeArticleState = (typeof DataSourceSalesforceKnowledgeArticleState)[keyof typeof DataSourceSalesforceKnowledgeArticleState];

export const DataSourceSalesforceStandardObjectName = {
    Account: "ACCOUNT",
    Campaign: "CAMPAIGN",
    Case: "CASE",
    Contact: "CONTACT",
    Contract: "CONTRACT",
    Document: "DOCUMENT",
    Group: "GROUP",
    Idea: "IDEA",
    Lead: "LEAD",
    Opportunity: "OPPORTUNITY",
    Partner: "PARTNER",
    Pricebook: "PRICEBOOK",
    Product: "PRODUCT",
    Profile: "PROFILE",
    Solution: "SOLUTION",
    Task: "TASK",
    User: "USER",
} as const;

export type DataSourceSalesforceStandardObjectName = (typeof DataSourceSalesforceStandardObjectName)[keyof typeof DataSourceSalesforceStandardObjectName];

export const DataSourceServiceNowBuildVersionType = {
    London: "LONDON",
    Others: "OTHERS",
} as const;

export type DataSourceServiceNowBuildVersionType = (typeof DataSourceServiceNowBuildVersionType)[keyof typeof DataSourceServiceNowBuildVersionType];

export const DataSourceSharePointConfigurationSharePointVersion = {
    SharepointOnline: "SHAREPOINT_ONLINE",
} as const;

export type DataSourceSharePointConfigurationSharePointVersion = (typeof DataSourceSharePointConfigurationSharePointVersion)[keyof typeof DataSourceSharePointConfigurationSharePointVersion];

export const DataSourceType = {
    S3: "S3",
    Sharepoint: "SHAREPOINT",
    Salesforce: "SALESFORCE",
    Onedrive: "ONEDRIVE",
    Servicenow: "SERVICENOW",
    Database: "DATABASE",
    Custom: "CUSTOM",
    Confluence: "CONFLUENCE",
    Googledrive: "GOOGLEDRIVE",
} as const;

/**
 * Data source type
 */
export type DataSourceType = (typeof DataSourceType)[keyof typeof DataSourceType];

export const FaqFileFormat = {
    Csv: "CSV",
    CsvWithHeader: "CSV_WITH_HEADER",
    Json: "JSON",
} as const;

/**
 * Format of the input file
 */
export type FaqFileFormat = (typeof FaqFileFormat)[keyof typeof FaqFileFormat];

export const IndexDocumentAttributeValueType = {
    StringValue: "STRING_VALUE",
    StringListValue: "STRING_LIST_VALUE",
    LongValue: "LONG_VALUE",
    DateValue: "DATE_VALUE",
} as const;

export type IndexDocumentAttributeValueType = (typeof IndexDocumentAttributeValueType)[keyof typeof IndexDocumentAttributeValueType];

export const IndexEdition = {
    DeveloperEdition: "DEVELOPER_EDITION",
    EnterpriseEdition: "ENTERPRISE_EDITION",
} as const;

/**
 * Edition of index
 */
export type IndexEdition = (typeof IndexEdition)[keyof typeof IndexEdition];

export const IndexKeyLocation = {
    Url: "URL",
    SecretManager: "SECRET_MANAGER",
} as const;

export type IndexKeyLocation = (typeof IndexKeyLocation)[keyof typeof IndexKeyLocation];

export const IndexOrder = {
    Ascending: "ASCENDING",
    Descending: "DESCENDING",
} as const;

export type IndexOrder = (typeof IndexOrder)[keyof typeof IndexOrder];

export const IndexUserContextPolicy = {
    AttributeFilter: "ATTRIBUTE_FILTER",
    UserToken: "USER_TOKEN",
} as const;

export type IndexUserContextPolicy = (typeof IndexUserContextPolicy)[keyof typeof IndexUserContextPolicy];
