// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ComponentPlatform = {
    Windows: "Windows",
    Linux: "Linux",
} as const;

/**
 * The platform of the component.
 */
export type ComponentPlatform = (typeof ComponentPlatform)[keyof typeof ComponentPlatform];

export const ComponentType = {
    Build: "BUILD",
    Test: "TEST",
} as const;

/**
 * The type of the component denotes whether the component is used to build the image or only to test it. 
 */
export type ComponentType = (typeof ComponentType)[keyof typeof ComponentType];

export const ContainerRecipeContainerType = {
    Docker: "DOCKER",
} as const;

/**
 * Specifies the type of container, such as Docker.
 */
export type ContainerRecipeContainerType = (typeof ContainerRecipeContainerType)[keyof typeof ContainerRecipeContainerType];

export const ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType = {
    Standard: "standard",
    Io1: "io1",
    Io2: "io2",
    Gp2: "gp2",
    Gp3: "gp3",
    Sc1: "sc1",
    St1: "st1",
} as const;

/**
 * Use to override the device's volume type.
 */
export type ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType = (typeof ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType)[keyof typeof ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType];

export const ContainerRecipePlatformOverride = {
    Windows: "Windows",
    Linux: "Linux",
} as const;

/**
 * Specifies the operating system platform when you use a custom source image.
 */
export type ContainerRecipePlatformOverride = (typeof ContainerRecipePlatformOverride)[keyof typeof ContainerRecipePlatformOverride];

export const ContainerRecipeTargetContainerRepositoryService = {
    Ecr: "ECR",
} as const;

/**
 * Specifies the service in which this image was registered.
 */
export type ContainerRecipeTargetContainerRepositoryService = (typeof ContainerRecipeTargetContainerRepositoryService)[keyof typeof ContainerRecipeTargetContainerRepositoryService];

export const ImagePipelineSchedulePipelineExecutionStartCondition = {
    ExpressionMatchOnly: "EXPRESSION_MATCH_ONLY",
    ExpressionMatchAndDependencyUpdatesAvailable: "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE",
} as const;

/**
 * The condition configures when the pipeline should trigger a new image build.
 */
export type ImagePipelineSchedulePipelineExecutionStartCondition = (typeof ImagePipelineSchedulePipelineExecutionStartCondition)[keyof typeof ImagePipelineSchedulePipelineExecutionStartCondition];

export const ImagePipelineStatus = {
    Disabled: "DISABLED",
    Enabled: "ENABLED",
} as const;

/**
 * The status of the image pipeline.
 */
export type ImagePipelineStatus = (typeof ImagePipelineStatus)[keyof typeof ImagePipelineStatus];

export const ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType = {
    Standard: "standard",
    Io1: "io1",
    Io2: "io2",
    Gp2: "gp2",
    Gp3: "gp3",
    Sc1: "sc1",
    St1: "st1",
} as const;

/**
 * Use to override the device's volume type.
 */
export type ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType = (typeof ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType)[keyof typeof ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType];
