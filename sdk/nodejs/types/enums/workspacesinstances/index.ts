// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const VolumeAssociationDisassociateMode = {
    Force: "FORCE",
    NoForce: "NO_FORCE",
} as const;

/**
 * Mode to use when disassociating the volume
 */
export type VolumeAssociationDisassociateMode = (typeof VolumeAssociationDisassociateMode)[keyof typeof VolumeAssociationDisassociateMode];

export const VolumeTagSpecificationResourceType = {
    Instance: "instance",
    Volume: "volume",
    SpotInstancesRequest: "spot-instances-request",
    NetworkInterface: "network-interface",
} as const;

export type VolumeTagSpecificationResourceType = (typeof VolumeTagSpecificationResourceType)[keyof typeof VolumeTagSpecificationResourceType];

export const VolumeType = {
    Standard: "standard",
    Io1: "io1",
    Io2: "io2",
    Gp2: "gp2",
    Sc1: "sc1",
    St1: "st1",
    Gp3: "gp3",
} as const;

/**
 * The volume type
 */
export type VolumeType = (typeof VolumeType)[keyof typeof VolumeType];

export const WorkspaceInstanceCapacityReservationSpecificationCapacityReservationPreference = {
    CapacityReservationsOnly: "capacity-reservations-only",
    Open: "open",
    None: "none",
} as const;

export type WorkspaceInstanceCapacityReservationSpecificationCapacityReservationPreference = (typeof WorkspaceInstanceCapacityReservationSpecificationCapacityReservationPreference)[keyof typeof WorkspaceInstanceCapacityReservationSpecificationCapacityReservationPreference];

export const WorkspaceInstanceCreditSpecificationRequestCpuCredits = {
    Standard: "standard",
    Unlimited: "unlimited",
} as const;

export type WorkspaceInstanceCreditSpecificationRequestCpuCredits = (typeof WorkspaceInstanceCreditSpecificationRequestCpuCredits)[keyof typeof WorkspaceInstanceCreditSpecificationRequestCpuCredits];

export const WorkspaceInstanceEbsBlockDeviceVolumeType = {
    Standard: "standard",
    Io1: "io1",
    Io2: "io2",
    Gp2: "gp2",
    Sc1: "sc1",
    St1: "st1",
    Gp3: "gp3",
} as const;

export type WorkspaceInstanceEbsBlockDeviceVolumeType = (typeof WorkspaceInstanceEbsBlockDeviceVolumeType)[keyof typeof WorkspaceInstanceEbsBlockDeviceVolumeType];

export const WorkspaceInstanceInstanceMaintenanceOptionsRequestAutoRecovery = {
    Disabled: "disabled",
    Default: "default",
} as const;

export type WorkspaceInstanceInstanceMaintenanceOptionsRequestAutoRecovery = (typeof WorkspaceInstanceInstanceMaintenanceOptionsRequestAutoRecovery)[keyof typeof WorkspaceInstanceInstanceMaintenanceOptionsRequestAutoRecovery];

export const WorkspaceInstanceInstanceMarketOptionsRequestMarketType = {
    Spot: "spot",
    CapacityBlock: "capacity-block",
} as const;

export type WorkspaceInstanceInstanceMarketOptionsRequestMarketType = (typeof WorkspaceInstanceInstanceMarketOptionsRequestMarketType)[keyof typeof WorkspaceInstanceInstanceMarketOptionsRequestMarketType];

export const WorkspaceInstanceInstanceMetadataOptionsRequestHttpEndpoint = {
    Enabled: "enabled",
    Disabled: "disabled",
} as const;

export type WorkspaceInstanceInstanceMetadataOptionsRequestHttpEndpoint = (typeof WorkspaceInstanceInstanceMetadataOptionsRequestHttpEndpoint)[keyof typeof WorkspaceInstanceInstanceMetadataOptionsRequestHttpEndpoint];

export const WorkspaceInstanceInstanceMetadataOptionsRequestHttpProtocolIpv6 = {
    Enabled: "enabled",
    Disabled: "disabled",
} as const;

export type WorkspaceInstanceInstanceMetadataOptionsRequestHttpProtocolIpv6 = (typeof WorkspaceInstanceInstanceMetadataOptionsRequestHttpProtocolIpv6)[keyof typeof WorkspaceInstanceInstanceMetadataOptionsRequestHttpProtocolIpv6];

export const WorkspaceInstanceInstanceMetadataOptionsRequestHttpTokens = {
    Optional: "optional",
    Required: "required",
} as const;

export type WorkspaceInstanceInstanceMetadataOptionsRequestHttpTokens = (typeof WorkspaceInstanceInstanceMetadataOptionsRequestHttpTokens)[keyof typeof WorkspaceInstanceInstanceMetadataOptionsRequestHttpTokens];

export const WorkspaceInstanceInstanceMetadataOptionsRequestInstanceMetadataTags = {
    Enabled: "enabled",
    Disabled: "disabled",
} as const;

export type WorkspaceInstanceInstanceMetadataOptionsRequestInstanceMetadataTags = (typeof WorkspaceInstanceInstanceMetadataOptionsRequestInstanceMetadataTags)[keyof typeof WorkspaceInstanceInstanceMetadataOptionsRequestInstanceMetadataTags];

export const WorkspaceInstanceInstanceNetworkPerformanceOptionsRequestBandwidthWeighting = {
    Default: "default",
    Vpc1: "vpc-1",
    Ebs1: "ebs-1",
} as const;

export type WorkspaceInstanceInstanceNetworkPerformanceOptionsRequestBandwidthWeighting = (typeof WorkspaceInstanceInstanceNetworkPerformanceOptionsRequestBandwidthWeighting)[keyof typeof WorkspaceInstanceInstanceNetworkPerformanceOptionsRequestBandwidthWeighting];

export const WorkspaceInstancePlacementTenancy = {
    Default: "default",
    Dedicated: "dedicated",
    Host: "host",
} as const;

export type WorkspaceInstancePlacementTenancy = (typeof WorkspaceInstancePlacementTenancy)[keyof typeof WorkspaceInstancePlacementTenancy];

export const WorkspaceInstancePrivateDnsNameOptionsRequestHostnameType = {
    IpName: "ip-name",
    ResourceName: "resource-name",
} as const;

export type WorkspaceInstancePrivateDnsNameOptionsRequestHostnameType = (typeof WorkspaceInstancePrivateDnsNameOptionsRequestHostnameType)[keyof typeof WorkspaceInstancePrivateDnsNameOptionsRequestHostnameType];

export const WorkspaceInstanceProvisionState = {
    Allocating: "ALLOCATING",
    Allocated: "ALLOCATED",
    Deallocating: "DEALLOCATING",
    Deallocated: "DEALLOCATED",
    ErrorAllocating: "ERROR_ALLOCATING",
    ErrorDeallocating: "ERROR_DEALLOCATING",
} as const;

/**
 * The current state of the workspace instance
 */
export type WorkspaceInstanceProvisionState = (typeof WorkspaceInstanceProvisionState)[keyof typeof WorkspaceInstanceProvisionState];

export const WorkspaceInstanceSpotMarketOptionsInstanceInterruptionBehavior = {
    Hibernate: "hibernate",
    Stop: "stop",
} as const;

export type WorkspaceInstanceSpotMarketOptionsInstanceInterruptionBehavior = (typeof WorkspaceInstanceSpotMarketOptionsInstanceInterruptionBehavior)[keyof typeof WorkspaceInstanceSpotMarketOptionsInstanceInterruptionBehavior];

export const WorkspaceInstanceSpotMarketOptionsSpotInstanceType = {
    OneTime: "one-time",
    Persistent: "persistent",
} as const;

export type WorkspaceInstanceSpotMarketOptionsSpotInstanceType = (typeof WorkspaceInstanceSpotMarketOptionsSpotInstanceType)[keyof typeof WorkspaceInstanceSpotMarketOptionsSpotInstanceType];

export const WorkspaceInstanceTagSpecificationResourceType = {
    Instance: "instance",
    Volume: "volume",
    SpotInstancesRequest: "spot-instances-request",
    NetworkInterface: "network-interface",
} as const;

export type WorkspaceInstanceTagSpecificationResourceType = (typeof WorkspaceInstanceTagSpecificationResourceType)[keyof typeof WorkspaceInstanceTagSpecificationResourceType];
