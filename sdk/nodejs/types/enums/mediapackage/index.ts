// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const OriginEndpointAdsOnDeliveryRestrictions = {
    None: "NONE",
    Restricted: "RESTRICTED",
    Unrestricted: "UNRESTRICTED",
    Both: "BOTH",
} as const;

/**
 * This setting allows the delivery restriction flags on SCTE-35 segmentation descriptors to determine whether a message signals an ad.  Choosing "NONE" means no SCTE-35 messages become ads.  Choosing "RESTRICTED" means SCTE-35 messages of the types specified in AdTriggers that contain delivery restrictions will be treated as ads.  Choosing "UNRESTRICTED" means SCTE-35 messages of the types specified in AdTriggers that do not contain delivery restrictions will be treated as ads.  Choosing "BOTH" means all SCTE-35 messages of the types specified in AdTriggers will be treated as ads.  Note that Splice Insert messages do not have these flags and are always treated as ads if specified in AdTriggers.
 */
export type OriginEndpointAdsOnDeliveryRestrictions = (typeof OriginEndpointAdsOnDeliveryRestrictions)[keyof typeof OriginEndpointAdsOnDeliveryRestrictions];

export const OriginEndpointDashPackageAdTriggersItem = {
    SpliceInsert: "SPLICE_INSERT",
    Break: "BREAK",
    ProviderAdvertisement: "PROVIDER_ADVERTISEMENT",
    DistributorAdvertisement: "DISTRIBUTOR_ADVERTISEMENT",
    ProviderPlacementOpportunity: "PROVIDER_PLACEMENT_OPPORTUNITY",
    DistributorPlacementOpportunity: "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
    ProviderOverlayPlacementOpportunity: "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
    DistributorOverlayPlacementOpportunity: "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY",
} as const;

export type OriginEndpointDashPackageAdTriggersItem = (typeof OriginEndpointDashPackageAdTriggersItem)[keyof typeof OriginEndpointDashPackageAdTriggersItem];

export const OriginEndpointDashPackageManifestLayout = {
    Full: "FULL",
    Compact: "COMPACT",
} as const;

/**
 * Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
 */
export type OriginEndpointDashPackageManifestLayout = (typeof OriginEndpointDashPackageManifestLayout)[keyof typeof OriginEndpointDashPackageManifestLayout];

export const OriginEndpointDashPackagePeriodTriggersItem = {
    Ads: "ADS",
} as const;

export type OriginEndpointDashPackagePeriodTriggersItem = (typeof OriginEndpointDashPackagePeriodTriggersItem)[keyof typeof OriginEndpointDashPackagePeriodTriggersItem];

export const OriginEndpointDashPackageProfile = {
    None: "NONE",
    Hbbtv15: "HBBTV_1_5",
} as const;

/**
 * The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
 */
export type OriginEndpointDashPackageProfile = (typeof OriginEndpointDashPackageProfile)[keyof typeof OriginEndpointDashPackageProfile];

export const OriginEndpointDashPackageSegmentTemplateFormat = {
    NumberWithTimeline: "NUMBER_WITH_TIMELINE",
    TimeWithTimeline: "TIME_WITH_TIMELINE",
    NumberWithDuration: "NUMBER_WITH_DURATION",
} as const;

/**
 * Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
 */
export type OriginEndpointDashPackageSegmentTemplateFormat = (typeof OriginEndpointDashPackageSegmentTemplateFormat)[keyof typeof OriginEndpointDashPackageSegmentTemplateFormat];

export const OriginEndpointDashPackageUtcTiming = {
    HttpIso: "HTTP-ISO",
    HttpHead: "HTTP-HEAD",
    None: "NONE",
} as const;

/**
 * Determines the type of UTCTiming included in the Media Presentation Description (MPD)
 */
export type OriginEndpointDashPackageUtcTiming = (typeof OriginEndpointDashPackageUtcTiming)[keyof typeof OriginEndpointDashPackageUtcTiming];

export const OriginEndpointHlsEncryptionEncryptionMethod = {
    Aes128: "AES_128",
    SampleAes: "SAMPLE_AES",
} as const;

/**
 * The encryption method to use.
 */
export type OriginEndpointHlsEncryptionEncryptionMethod = (typeof OriginEndpointHlsEncryptionEncryptionMethod)[keyof typeof OriginEndpointHlsEncryptionEncryptionMethod];

export const OriginEndpointHlsManifestAdMarkers = {
    None: "NONE",
    Scte35Enhanced: "SCTE35_ENHANCED",
    Passthrough: "PASSTHROUGH",
    Daterange: "DATERANGE",
} as const;

/**
 * This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
 */
export type OriginEndpointHlsManifestAdMarkers = (typeof OriginEndpointHlsManifestAdMarkers)[keyof typeof OriginEndpointHlsManifestAdMarkers];

export const OriginEndpointHlsManifestAdTriggersItem = {
    SpliceInsert: "SPLICE_INSERT",
    Break: "BREAK",
    ProviderAdvertisement: "PROVIDER_ADVERTISEMENT",
    DistributorAdvertisement: "DISTRIBUTOR_ADVERTISEMENT",
    ProviderPlacementOpportunity: "PROVIDER_PLACEMENT_OPPORTUNITY",
    DistributorPlacementOpportunity: "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
    ProviderOverlayPlacementOpportunity: "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
    DistributorOverlayPlacementOpportunity: "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY",
} as const;

export type OriginEndpointHlsManifestAdTriggersItem = (typeof OriginEndpointHlsManifestAdTriggersItem)[keyof typeof OriginEndpointHlsManifestAdTriggersItem];

export const OriginEndpointHlsManifestPlaylistType = {
    None: "NONE",
    Event: "EVENT",
    Vod: "VOD",
} as const;

/**
 * The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
 */
export type OriginEndpointHlsManifestPlaylistType = (typeof OriginEndpointHlsManifestPlaylistType)[keyof typeof OriginEndpointHlsManifestPlaylistType];

export const OriginEndpointHlsPackageAdMarkers = {
    None: "NONE",
    Scte35Enhanced: "SCTE35_ENHANCED",
    Passthrough: "PASSTHROUGH",
    Daterange: "DATERANGE",
} as const;

/**
 * This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
 */
export type OriginEndpointHlsPackageAdMarkers = (typeof OriginEndpointHlsPackageAdMarkers)[keyof typeof OriginEndpointHlsPackageAdMarkers];

export const OriginEndpointHlsPackageAdTriggersItem = {
    SpliceInsert: "SPLICE_INSERT",
    Break: "BREAK",
    ProviderAdvertisement: "PROVIDER_ADVERTISEMENT",
    DistributorAdvertisement: "DISTRIBUTOR_ADVERTISEMENT",
    ProviderPlacementOpportunity: "PROVIDER_PLACEMENT_OPPORTUNITY",
    DistributorPlacementOpportunity: "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
    ProviderOverlayPlacementOpportunity: "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
    DistributorOverlayPlacementOpportunity: "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY",
} as const;

export type OriginEndpointHlsPackageAdTriggersItem = (typeof OriginEndpointHlsPackageAdTriggersItem)[keyof typeof OriginEndpointHlsPackageAdTriggersItem];

export const OriginEndpointHlsPackagePlaylistType = {
    None: "NONE",
    Event: "EVENT",
    Vod: "VOD",
} as const;

/**
 * The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
 */
export type OriginEndpointHlsPackagePlaylistType = (typeof OriginEndpointHlsPackagePlaylistType)[keyof typeof OriginEndpointHlsPackagePlaylistType];

export const OriginEndpointOrigination = {
    Allow: "ALLOW",
    Deny: "DENY",
} as const;

/**
 * Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
 */
export type OriginEndpointOrigination = (typeof OriginEndpointOrigination)[keyof typeof OriginEndpointOrigination];

export const OriginEndpointStreamSelectionStreamOrder = {
    Original: "ORIGINAL",
    VideoBitrateAscending: "VIDEO_BITRATE_ASCENDING",
    VideoBitrateDescending: "VIDEO_BITRATE_DESCENDING",
} as const;

/**
 * A directive that determines the order of streams in the output.
 */
export type OriginEndpointStreamSelectionStreamOrder = (typeof OriginEndpointStreamSelectionStreamOrder)[keyof typeof OriginEndpointStreamSelectionStreamOrder];

export const PackagingConfigurationDashManifestManifestLayout = {
    Full: "FULL",
    Compact: "COMPACT",
} as const;

/**
 * Determines the position of some tags in the Media Presentation Description (MPD). When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation. When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
 */
export type PackagingConfigurationDashManifestManifestLayout = (typeof PackagingConfigurationDashManifestManifestLayout)[keyof typeof PackagingConfigurationDashManifestManifestLayout];

export const PackagingConfigurationDashManifestProfile = {
    None: "NONE",
    Hbbtv15: "HBBTV_1_5",
} as const;

/**
 * The Dynamic Adaptive Streaming over HTTP (DASH) profile type. When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
 */
export type PackagingConfigurationDashManifestProfile = (typeof PackagingConfigurationDashManifestProfile)[keyof typeof PackagingConfigurationDashManifestProfile];

export const PackagingConfigurationDashPackagePeriodTriggersItem = {
    Ads: "ADS",
} as const;

export type PackagingConfigurationDashPackagePeriodTriggersItem = (typeof PackagingConfigurationDashPackagePeriodTriggersItem)[keyof typeof PackagingConfigurationDashPackagePeriodTriggersItem];

export const PackagingConfigurationDashPackageSegmentTemplateFormat = {
    NumberWithTimeline: "NUMBER_WITH_TIMELINE",
    TimeWithTimeline: "TIME_WITH_TIMELINE",
    NumberWithDuration: "NUMBER_WITH_DURATION",
} as const;

/**
 * Determines the type of SegmentTemplate included in the Media Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs. When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
 */
export type PackagingConfigurationDashPackageSegmentTemplateFormat = (typeof PackagingConfigurationDashPackageSegmentTemplateFormat)[keyof typeof PackagingConfigurationDashPackageSegmentTemplateFormat];

export const PackagingConfigurationHlsEncryptionEncryptionMethod = {
    Aes128: "AES_128",
    SampleAes: "SAMPLE_AES",
} as const;

/**
 * The encryption method to use.
 */
export type PackagingConfigurationHlsEncryptionEncryptionMethod = (typeof PackagingConfigurationHlsEncryptionEncryptionMethod)[keyof typeof PackagingConfigurationHlsEncryptionEncryptionMethod];

export const PackagingConfigurationHlsManifestAdMarkers = {
    None: "NONE",
    Scte35Enhanced: "SCTE35_ENHANCED",
    Passthrough: "PASSTHROUGH",
} as const;

/**
 * This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source.
 */
export type PackagingConfigurationHlsManifestAdMarkers = (typeof PackagingConfigurationHlsManifestAdMarkers)[keyof typeof PackagingConfigurationHlsManifestAdMarkers];

export const PackagingConfigurationStreamSelectionStreamOrder = {
    Original: "ORIGINAL",
    VideoBitrateAscending: "VIDEO_BITRATE_ASCENDING",
    VideoBitrateDescending: "VIDEO_BITRATE_DESCENDING",
} as const;

/**
 * A directive that determines the order of streams in the output.
 */
export type PackagingConfigurationStreamSelectionStreamOrder = (typeof PackagingConfigurationStreamSelectionStreamOrder)[keyof typeof PackagingConfigurationStreamSelectionStreamOrder];
