// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AnalysisTemplateAnalysisParameterType = {
    Smallint: "SMALLINT",
    Integer: "INTEGER",
    Bigint: "BIGINT",
    Decimal: "DECIMAL",
    Real: "REAL",
    DoublePrecision: "DOUBLE_PRECISION",
    Boolean: "BOOLEAN",
    Char: "CHAR",
    Varchar: "VARCHAR",
    Date: "DATE",
    Timestamp: "TIMESTAMP",
    Timestamptz: "TIMESTAMPTZ",
    Time: "TIME",
    Timetz: "TIMETZ",
    Varbyte: "VARBYTE",
} as const;

/**
 * The type of parameter.
 */
export type AnalysisTemplateAnalysisParameterType = (typeof AnalysisTemplateAnalysisParameterType)[keyof typeof AnalysisTemplateAnalysisParameterType];

export const AnalysisTemplateFormat = {
    Sql: "SQL",
} as const;

/**
 * The format of the analysis template.
 */
export type AnalysisTemplateFormat = (typeof AnalysisTemplateFormat)[keyof typeof AnalysisTemplateFormat];

export const CollaborationMemberAbility = {
    CanQuery: "CAN_QUERY",
    CanReceiveResults: "CAN_RECEIVE_RESULTS",
} as const;

export type CollaborationMemberAbility = (typeof CollaborationMemberAbility)[keyof typeof CollaborationMemberAbility];

export const CollaborationQueryLogStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type CollaborationQueryLogStatus = (typeof CollaborationQueryLogStatus)[keyof typeof CollaborationQueryLogStatus];

export const ConfiguredTableAdditionalAnalyses = {
    Allowed: "ALLOWED",
    Required: "REQUIRED",
    NotAllowed: "NOT_ALLOWED",
} as const;

export type ConfiguredTableAdditionalAnalyses = (typeof ConfiguredTableAdditionalAnalyses)[keyof typeof ConfiguredTableAdditionalAnalyses];

export const ConfiguredTableAggregateFunctionName = {
    Sum: "SUM",
    SumDistinct: "SUM_DISTINCT",
    Count: "COUNT",
    CountDistinct: "COUNT_DISTINCT",
    Avg: "AVG",
} as const;

export type ConfiguredTableAggregateFunctionName = (typeof ConfiguredTableAggregateFunctionName)[keyof typeof ConfiguredTableAggregateFunctionName];

export const ConfiguredTableAggregationType = {
    CountDistinct: "COUNT_DISTINCT",
} as const;

export type ConfiguredTableAggregationType = (typeof ConfiguredTableAggregationType)[keyof typeof ConfiguredTableAggregationType];

export const ConfiguredTableAnalysisMethod = {
    DirectQuery: "DIRECT_QUERY",
} as const;

export type ConfiguredTableAnalysisMethod = (typeof ConfiguredTableAnalysisMethod)[keyof typeof ConfiguredTableAnalysisMethod];

export const ConfiguredTableAnalysisRuleType = {
    Aggregation: "AGGREGATION",
    List: "LIST",
    Custom: "CUSTOM",
} as const;

export type ConfiguredTableAnalysisRuleType = (typeof ConfiguredTableAnalysisRuleType)[keyof typeof ConfiguredTableAnalysisRuleType];

export const ConfiguredTableAssociationAnalysisRuleType = {
    Aggregation: "AGGREGATION",
    List: "LIST",
    Custom: "CUSTOM",
} as const;

export type ConfiguredTableAssociationAnalysisRuleType = (typeof ConfiguredTableAssociationAnalysisRuleType)[keyof typeof ConfiguredTableAssociationAnalysisRuleType];

export const ConfiguredTableJoinOperator = {
    Or: "OR",
    And: "AND",
} as const;

export type ConfiguredTableJoinOperator = (typeof ConfiguredTableJoinOperator)[keyof typeof ConfiguredTableJoinOperator];

export const ConfiguredTableJoinRequiredOption = {
    QueryRunner: "QUERY_RUNNER",
} as const;

export type ConfiguredTableJoinRequiredOption = (typeof ConfiguredTableJoinRequiredOption)[keyof typeof ConfiguredTableJoinRequiredOption];

export const ConfiguredTableScalarFunctions = {
    Trunc: "TRUNC",
    Abs: "ABS",
    Ceiling: "CEILING",
    Floor: "FLOOR",
    Ln: "LN",
    Log: "LOG",
    Round: "ROUND",
    Sqrt: "SQRT",
    Cast: "CAST",
    Lower: "LOWER",
    Rtrim: "RTRIM",
    Upper: "UPPER",
    Coalesce: "COALESCE",
    Convert: "CONVERT",
    CurrentDate: "CURRENT_DATE",
    Dateadd: "DATEADD",
    Extract: "EXTRACT",
    Getdate: "GETDATE",
    Substring: "SUBSTRING",
    ToChar: "TO_CHAR",
    ToDate: "TO_DATE",
    ToNumber: "TO_NUMBER",
    ToTimestamp: "TO_TIMESTAMP",
    Trim: "TRIM",
} as const;

export type ConfiguredTableScalarFunctions = (typeof ConfiguredTableScalarFunctions)[keyof typeof ConfiguredTableScalarFunctions];

export const MembershipQueryLogStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
} as const;

export type MembershipQueryLogStatus = (typeof MembershipQueryLogStatus)[keyof typeof MembershipQueryLogStatus];

export const MembershipResultFormat = {
    Csv: "CSV",
    Parquet: "PARQUET",
} as const;

export type MembershipResultFormat = (typeof MembershipResultFormat)[keyof typeof MembershipResultFormat];

export const PrivacyBudgetTemplateAutoRefresh = {
    CalendarMonth: "CALENDAR_MONTH",
    None: "NONE",
} as const;

/**
 * How often the privacy budget refreshes.
 *
 * > If you plan to regularly bring new data into the collaboration, use `CALENDAR_MONTH` to automatically get a new privacy budget for the collaboration every calendar month. Choosing this option allows arbitrary amounts of information to be revealed about rows of the data when repeatedly queried across refreshes. Avoid choosing this if the same rows will be repeatedly queried between privacy budget refreshes.
 */
export type PrivacyBudgetTemplateAutoRefresh = (typeof PrivacyBudgetTemplateAutoRefresh)[keyof typeof PrivacyBudgetTemplateAutoRefresh];

export const PrivacyBudgetTemplatePrivacyBudgetType = {
    DifferentialPrivacy: "DIFFERENTIAL_PRIVACY",
} as const;

/**
 * Specifies the type of the privacy budget template.
 */
export type PrivacyBudgetTemplatePrivacyBudgetType = (typeof PrivacyBudgetTemplatePrivacyBudgetType)[keyof typeof PrivacyBudgetTemplatePrivacyBudgetType];
