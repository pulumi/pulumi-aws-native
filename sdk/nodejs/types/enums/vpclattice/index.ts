// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AuthPolicyState = {
    Active: "ACTIVE",
    Inactive: "INACTIVE",
} as const;

export type AuthPolicyState = (typeof AuthPolicyState)[keyof typeof AuthPolicyState];

export const ListenerProtocol = {
    Http: "HTTP",
    Https: "HTTPS",
} as const;

export type ListenerProtocol = (typeof ListenerProtocol)[keyof typeof ListenerProtocol];

export const RuleHttpMatchMethod = {
    Connect: "CONNECT",
    Delete: "DELETE",
    Get: "GET",
    Head: "HEAD",
    Options: "OPTIONS",
    Post: "POST",
    Put: "PUT",
    Trace: "TRACE",
} as const;

export type RuleHttpMatchMethod = (typeof RuleHttpMatchMethod)[keyof typeof RuleHttpMatchMethod];

export const ServiceAuthType = {
    None: "NONE",
    AwsIam: "AWS_IAM",
} as const;

export type ServiceAuthType = (typeof ServiceAuthType)[keyof typeof ServiceAuthType];

export const ServiceNetworkAuthType = {
    None: "NONE",
    AwsIam: "AWS_IAM",
} as const;

export type ServiceNetworkAuthType = (typeof ServiceNetworkAuthType)[keyof typeof ServiceNetworkAuthType];

export const ServiceNetworkServiceAssociationStatus = {
    CreateInProgress: "CREATE_IN_PROGRESS",
    Active: "ACTIVE",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    DeleteFailed: "DELETE_FAILED",
} as const;

export type ServiceNetworkServiceAssociationStatus = (typeof ServiceNetworkServiceAssociationStatus)[keyof typeof ServiceNetworkServiceAssociationStatus];

export const ServiceNetworkVpcAssociationStatus = {
    CreateInProgress: "CREATE_IN_PROGRESS",
    Active: "ACTIVE",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    DeleteFailed: "DELETE_FAILED",
} as const;

export type ServiceNetworkVpcAssociationStatus = (typeof ServiceNetworkVpcAssociationStatus)[keyof typeof ServiceNetworkVpcAssociationStatus];

export const ServiceStatus = {
    Active: "ACTIVE",
    CreateInProgress: "CREATE_IN_PROGRESS",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    DeleteFailed: "DELETE_FAILED",
} as const;

export type ServiceStatus = (typeof ServiceStatus)[keyof typeof ServiceStatus];

export const TargetGroupConfigIpAddressType = {
    Ipv4: "IPV4",
    Ipv6: "IPV6",
} as const;

export type TargetGroupConfigIpAddressType = (typeof TargetGroupConfigIpAddressType)[keyof typeof TargetGroupConfigIpAddressType];

export const TargetGroupConfigProtocol = {
    Http: "HTTP",
    Https: "HTTPS",
} as const;

export type TargetGroupConfigProtocol = (typeof TargetGroupConfigProtocol)[keyof typeof TargetGroupConfigProtocol];

export const TargetGroupConfigProtocolVersion = {
    Http1: "HTTP1",
    Http2: "HTTP2",
    Grpc: "GRPC",
} as const;

export type TargetGroupConfigProtocolVersion = (typeof TargetGroupConfigProtocolVersion)[keyof typeof TargetGroupConfigProtocolVersion];

export const TargetGroupHealthCheckConfigProtocol = {
    Http: "HTTP",
    Https: "HTTPS",
} as const;

export type TargetGroupHealthCheckConfigProtocol = (typeof TargetGroupHealthCheckConfigProtocol)[keyof typeof TargetGroupHealthCheckConfigProtocol];

export const TargetGroupHealthCheckConfigProtocolVersion = {
    Http1: "HTTP1",
    Http2: "HTTP2",
} as const;

export type TargetGroupHealthCheckConfigProtocolVersion = (typeof TargetGroupHealthCheckConfigProtocolVersion)[keyof typeof TargetGroupHealthCheckConfigProtocolVersion];

export const TargetGroupStatus = {
    CreateInProgress: "CREATE_IN_PROGRESS",
    Active: "ACTIVE",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    DeleteFailed: "DELETE_FAILED",
} as const;

export type TargetGroupStatus = (typeof TargetGroupStatus)[keyof typeof TargetGroupStatus];

export const TargetGroupType = {
    Ip: "IP",
    Lambda: "LAMBDA",
    Instance: "INSTANCE",
    Alb: "ALB",
} as const;

export type TargetGroupType = (typeof TargetGroupType)[keyof typeof TargetGroupType];
