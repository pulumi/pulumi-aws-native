// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";

/**
 * The configuration for a Provider to assume a role.
 */
export interface ProviderAssumeRoleArgs {
    /**
     * Number of seconds to restrict the assume role session duration.
     */
    durationSeconds?: pulumi.Input<number>;
    /**
     * External identifier to use when assuming the role.
     */
    externalId?: pulumi.Input<string>;
    /**
     * IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     */
    policy?: pulumi.Input<string>;
    /**
     * Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
     */
    policyArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Amazon Resource Name (ARN) of the IAM Role to assume.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Session name to use when assuming the role.
     */
    sessionName?: pulumi.Input<string>;
    /**
     * Map of assume role session tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
     */
    transitiveTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The configuration with resource tag settings to apply across all resources handled by this provider. This is designed to replace redundant per-resource `tags` configurations. Provider tags can be overridden with new values, but not excluded from specific resources. To override provider tag values, use the `tags` argument within a resource to configure new tag values for matching keys.
 */
export interface ProviderDefaultTagsArgs {
    /**
     * A group of tags to set across all resources.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The configuration for for customizing service endpoints.
 */
export interface ProviderEndpointArgs {
    /**
     * Override the default endpoint for AWS Access Analyzer
     */
    accessanalyzer?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Certificate Manager
     */
    acm?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Certificate Manager Private Certificate Authority
     */
    acmpca?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Amplify Console
     */
    amplify?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS AppConfig
     */
    appconfig?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Application Auto Scaling
     */
    applicationautoscaling?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CloudWatch Application Insights
     */
    applicationinsights?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS App Mesh
     */
    appmesh?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS App Runner
     */
    apprunner?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS AppStream 2.0
     */
    appstream?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS AppSync
     */
    appsync?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Athena
     */
    athena?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Audit Manager
     */
    auditmanager?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Auto Scaling
     */
    autoscaling?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Backup
     */
    backup?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Batch
     */
    batch?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Budgets
     */
    budgets?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Chime
     */
    chime?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Cloud9
     */
    cloud9?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CloudFormation
     */
    cloudformation?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CloudFront
     */
    cloudfront?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CloudHSM
     */
    cloudhsm?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CloudSearch
     */
    cloudsearch?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CloudTrail
     */
    cloudtrail?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CloudWatch
     */
    cloudwatch?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CloudWatch Events
     */
    cloudwatchevents?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CloudWatch Logs
     */
    cloudwatchlogs?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CodeArtifact
     */
    codeartifact?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CodeBuild
     */
    codebuild?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CodeCommit
     */
    codecommit?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CodeDeploy
     */
    codedeploy?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CodePipeline
     */
    codepipeline?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS CodeStart Connections
     */
    codestarconnections?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Cognito
     */
    cognitoidentity?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Config
     */
    configservice?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Connect
     */
    connect?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Cost and Usage Reports
     */
    cur?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Data Exchange
     */
    dataexchange?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Data Pipeline
     */
    datapipeline?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS DataSync
     */
    datasync?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS DynamoDB Accelerator
     */
    dax?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Detective
     */
    detective?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Device Farm
     */
    devicefarm?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Direct Connect
     */
    directconnect?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Data Lifecycle Manager
     */
    dlm?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Database Migration Service
     */
    dms?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS DocumentDB
     */
    docdb?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Directory Service
     */
    ds?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS DynamoDB
     */
    dynamodb?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic Compute Cloud (EC2)
     */
    ec2?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR)
     */
    ecr?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR) Public
     */
    ecrpublic?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic Container Service (ECS)
     */
    ecs?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic File System (EFS)
     */
    efs?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic Kubernetes Service (EKS)
     */
    eks?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS ElastiCache
     */
    elasticache?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic Beanstalk
     */
    elasticbeanstalk?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic Transcoder
     */
    elastictranscoder?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic Load Balancing
     */
    elb?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elastic Load Balancing V2
     */
    elbv2?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS EMR
     */
    emr?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS EMR on EKS
     */
    emrcontainers?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS OpenSearch Service (formerly Elasticsearch)
     */
    es?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Kinesis Data Firehose
     */
    firehose?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Firewall Manager
     */
    fms?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Forecast
     */
    forecast?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS FSx
     */
    fsx?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS GameLift
     */
    gamelift?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon S3 Glacier
     */
    glacier?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Global Accelerator
     */
    globalaccelerator?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Glue
     */
    glue?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS IoT Greengrass
     */
    greengrass?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS GuardDuty
     */
    guardduty?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Identity and Access Management
     */
    iam?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Single Sign-On (SSO) Identity Store
     */
    identitystore?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Image Builder
     */
    imagebuilder?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Inspector
     */
    inspector?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS IoT
     */
    iot?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS IoT Analytics
     */
    iotanalytics?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS IoT Events
     */
    iotevents?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Managed Streaming for Apache Kafka (MSK)
     */
    kafka?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Kinesis
     */
    kinesis?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics
     */
    kinesisanalytics?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics V2
     */
    kinesisanalyticsv2?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Kinesis Video Streams
     */
    kinesisvideo?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Key Management Service
     */
    kms?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Lake Formation
     */
    lakeformation?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Lambda
     */
    lambda?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Lex
     */
    lexmodels?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS License Manager
     */
    licensemanager?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Lightsail
     */
    lightsail?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Location
     */
    location?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Macie
     */
    macie?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Macie V2
     */
    macie2?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Managed Blockchain
     */
    managedblockchain?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Marketplace Catalog
     */
    marketplacecatalog?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS MediaConnect
     */
    mediaconnect?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS MediaConvert
     */
    mediaconvert?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS MediaLive
     */
    medialive?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS MediaPackage
     */
    mediapackage?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elemental MediaStore container
     */
    mediastore?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Elemental MediaStore asset
     */
    mediastoredata?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS MemoryDB for Redis
     */
    memorydb?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon MQ
     */
    mq?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Managed Workflows for Apache Airflow
     */
    mwaa?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Neptune
     */
    neptune?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Network Firewall
     */
    networkfirewall?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Network Manager
     */
    networkmanager?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS OpsWorks
     */
    opsworks?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Organizations
     */
    organizations?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Outposts
     */
    outposts?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Personalize
     */
    personalize?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Pinpoint
     */
    pinpoint?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Web Services Price List Service
     */
    pricing?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon QLDB
     */
    qldb?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon QuickSight
     */
    quicksight?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Resource Access Manager
     */
    ram?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Relational Database Service
     */
    rds?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Redshift
     */
    redshift?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Resource Groups
     */
    resourcegroups?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Resource Groups Tagging API
     */
    resourcegroupstaggingapi?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Route 53
     */
    route53?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Route 53 Domains
     */
    route53domains?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Route 53 Recovery Control
     */
    route53recoverycontrolconfig?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Route 53 Recovery Readiness
     */
    route53recoveryreadiness?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Route 53 Resolver
     */
    route53resolver?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3)
     */
    s3?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3) Control
     */
    s3control?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon S3 on Outposts
     */
    s3outposts?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS SageMaker
     */
    sagemaker?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon EventBridge Schema Registry
     */
    schemas?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon SimpleDB
     */
    sdb?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Secrets Manager
     */
    secretsmanager?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Security Hub
     */
    securityhub?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Serverless Application Repository
     */
    serverlessrepo?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Service Catalog
     */
    servicecatalog?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Cloud Map
     */
    servicediscovery?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Service Quotas
     */
    servicequotas?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Simple Email Service (SES)
     */
    ses?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Shield Advanced API
     */
    shield?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Signer
     */
    signer?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Simple Notification Service (SNS)
     */
    sns?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Simple Queue Service (SQS)
     */
    sqs?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Systems Manager
     */
    ssm?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Single Sign On (SSO)
     */
    ssoadmin?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Step Functions
     */
    stepfunctions?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Storage Gateway
     */
    storagegateway?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Security Token Service (STS)
     */
    sts?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Simple Workflow Service (SWF)
     */
    swf?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon CloudWatch Synthetics
     */
    synthetics?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon Timestream
     */
    timestreamwrite?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS Transfer Family
     */
    transfer?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS WAF Classic
     */
    waf?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS WAF Regional Classic
     */
    wafregional?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS WAF V2
     */
    wafv2?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon WorkLink
     */
    worklink?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon WorkMail
     */
    workmail?: pulumi.Input<string>;
    /**
     * Override the default endpoint for Amazon WorkSpaces
     */
    workspaces?: pulumi.Input<string>;
    /**
     * Override the default endpoint for AWS X-Ray
     */
    xray?: pulumi.Input<string>;
}

/**
 * The configuration with resource tag settings to ignore across all resources handled by this provider (except any individual service tag resources such as `ec2.Tag`) for situations where external systems are managing certain resource tags.
 */
export interface ProviderIgnoreTagsArgs {
    /**
     * List of exact resource tag keys to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning the tag in any `tags` attributes and displaying any configuration difference for the tag value. If any resource configuration still has this tag key configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
     */
    keyPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of resource tag key prefixes to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning any tag key matching the prefixes in any `tags` attributes and displaying any configuration difference for those tag values. If any resource configuration still has a tag matching one of the prefixes configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
     */
    keys?: pulumi.Input<pulumi.Input<string>[]>;
}
export namespace accessanalyzer {
    /**
     * An Access Analyzer archive rule. Archive rules automatically archive new findings that meet the criteria you define when you create the rule.
     */
    export interface AnalyzerArchiveRuleArgs {
        filter: pulumi.Input<pulumi.Input<inputs.accessanalyzer.AnalyzerFilterArgs>[]>;
        /**
         * The archive rule name
         */
        ruleName: pulumi.Input<string>;
    }

    export interface AnalyzerFilterArgs {
        contains?: pulumi.Input<pulumi.Input<string>[]>;
        eq?: pulumi.Input<pulumi.Input<string>[]>;
        exists?: pulumi.Input<boolean>;
        neq?: pulumi.Input<pulumi.Input<string>[]>;
        property: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface AnalyzerTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace acmpca {
    /**
     * Structure that specifies fields to be overridden in a certificate at the time of issuance. These requires an API Passthrough template be used or they will be ignored.
     */
    export interface CertificateApiPassthroughArgs {
        extensions?: pulumi.Input<inputs.acmpca.CertificateExtensionsArgs>;
        subject?: pulumi.Input<inputs.acmpca.CertificateSubjectArgs>;
    }

    /**
     * Structure that contains X.509 AccessDescription information.
     */
    export interface CertificateAuthorityAccessDescriptionArgs {
        accessLocation: pulumi.Input<inputs.acmpca.CertificateAuthorityGeneralNameArgs>;
        accessMethod: pulumi.Input<inputs.acmpca.CertificateAuthorityAccessMethodArgs>;
    }

    /**
     * Structure that contains X.509 AccessMethod information. Assign one and ONLY one field.
     */
    export interface CertificateAuthorityAccessMethodArgs {
        accessMethodType?: pulumi.Input<string>;
        customObjectIdentifier?: pulumi.Input<string>;
    }

    /**
     * Your certificate authority can create and maintain a certificate revocation list (CRL). A CRL contains information about certificates that have been revoked.
     */
    export interface CertificateAuthorityCrlConfigurationArgs {
        customCname?: pulumi.Input<string>;
        enabled?: pulumi.Input<boolean>;
        expirationInDays?: pulumi.Input<number>;
        s3BucketName?: pulumi.Input<string>;
        s3ObjectAcl?: pulumi.Input<string>;
    }

    /**
     * Structure that contains CSR pass though extensions information.
     */
    export interface CertificateAuthorityCsrExtensionsArgs {
        keyUsage?: pulumi.Input<inputs.acmpca.CertificateAuthorityKeyUsageArgs>;
        subjectInformationAccess?: pulumi.Input<pulumi.Input<inputs.acmpca.CertificateAuthorityAccessDescriptionArgs>[]>;
    }

    /**
     * Structure that contains X.509 EdiPartyName information.
     */
    export interface CertificateAuthorityEdiPartyNameArgs {
        nameAssigner: pulumi.Input<string>;
        partyName: pulumi.Input<string>;
    }

    /**
     * Structure that contains X.509 GeneralName information. Assign one and ONLY one field.
     */
    export interface CertificateAuthorityGeneralNameArgs {
        directoryName?: pulumi.Input<inputs.acmpca.CertificateAuthoritySubjectArgs>;
        dnsName?: pulumi.Input<string>;
        ediPartyName?: pulumi.Input<inputs.acmpca.CertificateAuthorityEdiPartyNameArgs>;
        ipAddress?: pulumi.Input<string>;
        otherName?: pulumi.Input<inputs.acmpca.CertificateAuthorityOtherNameArgs>;
        registeredId?: pulumi.Input<string>;
        rfc822Name?: pulumi.Input<string>;
        uniformResourceIdentifier?: pulumi.Input<string>;
    }

    /**
     * Structure that contains X.509 KeyUsage information.
     */
    export interface CertificateAuthorityKeyUsageArgs {
        cRLSign?: pulumi.Input<boolean>;
        dataEncipherment?: pulumi.Input<boolean>;
        decipherOnly?: pulumi.Input<boolean>;
        digitalSignature?: pulumi.Input<boolean>;
        encipherOnly?: pulumi.Input<boolean>;
        keyAgreement?: pulumi.Input<boolean>;
        keyCertSign?: pulumi.Input<boolean>;
        keyEncipherment?: pulumi.Input<boolean>;
        nonRepudiation?: pulumi.Input<boolean>;
    }

    /**
     * Helps to configure online certificate status protocol (OCSP) responder for your certificate authority
     */
    export interface CertificateAuthorityOcspConfigurationArgs {
        enabled?: pulumi.Input<boolean>;
        ocspCustomCname?: pulumi.Input<string>;
    }

    /**
     * Structure that contains X.509 OtherName information.
     */
    export interface CertificateAuthorityOtherNameArgs {
        typeId: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Certificate Authority revocation information.
     */
    export interface CertificateAuthorityRevocationConfigurationArgs {
        crlConfiguration?: pulumi.Input<inputs.acmpca.CertificateAuthorityCrlConfigurationArgs>;
        ocspConfiguration?: pulumi.Input<inputs.acmpca.CertificateAuthorityOcspConfigurationArgs>;
    }

    /**
     * Structure that contains X.500 distinguished name information for your CA.
     */
    export interface CertificateAuthoritySubjectArgs {
        commonName?: pulumi.Input<string>;
        country?: pulumi.Input<string>;
        distinguishedNameQualifier?: pulumi.Input<string>;
        generationQualifier?: pulumi.Input<string>;
        givenName?: pulumi.Input<string>;
        initials?: pulumi.Input<string>;
        locality?: pulumi.Input<string>;
        organization?: pulumi.Input<string>;
        organizationalUnit?: pulumi.Input<string>;
        pseudonym?: pulumi.Input<string>;
        serialNumber?: pulumi.Input<string>;
        state?: pulumi.Input<string>;
        surname?: pulumi.Input<string>;
        title?: pulumi.Input<string>;
    }

    export interface CertificateAuthorityTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * Structure that contains X.509 EdiPartyName information.
     */
    export interface CertificateEdiPartyNameArgs {
        nameAssigner: pulumi.Input<string>;
        partyName: pulumi.Input<string>;
    }

    /**
     * Structure that contains X.509 ExtendedKeyUsage information.
     */
    export interface CertificateExtendedKeyUsageArgs {
        extendedKeyUsageObjectIdentifier?: pulumi.Input<string>;
        extendedKeyUsageType?: pulumi.Input<string>;
    }

    /**
     * Structure that contains X.500 extensions for a Certificate.
     */
    export interface CertificateExtensionsArgs {
        certificatePolicies?: pulumi.Input<pulumi.Input<inputs.acmpca.CertificatePolicyInformationArgs>[]>;
        extendedKeyUsage?: pulumi.Input<pulumi.Input<inputs.acmpca.CertificateExtendedKeyUsageArgs>[]>;
        keyUsage?: pulumi.Input<inputs.acmpca.CertificateKeyUsageArgs>;
        subjectAlternativeNames?: pulumi.Input<pulumi.Input<inputs.acmpca.CertificateGeneralNameArgs>[]>;
    }

    /**
     * Structure that contains X.509 GeneralName information. Assign one and ONLY one field.
     */
    export interface CertificateGeneralNameArgs {
        directoryName?: pulumi.Input<inputs.acmpca.CertificateSubjectArgs>;
        dnsName?: pulumi.Input<string>;
        ediPartyName?: pulumi.Input<inputs.acmpca.CertificateEdiPartyNameArgs>;
        ipAddress?: pulumi.Input<string>;
        otherName?: pulumi.Input<inputs.acmpca.CertificateOtherNameArgs>;
        registeredId?: pulumi.Input<string>;
        rfc822Name?: pulumi.Input<string>;
        uniformResourceIdentifier?: pulumi.Input<string>;
    }

    /**
     * Structure that contains X.509 KeyUsage information.
     */
    export interface CertificateKeyUsageArgs {
        cRLSign?: pulumi.Input<boolean>;
        dataEncipherment?: pulumi.Input<boolean>;
        decipherOnly?: pulumi.Input<boolean>;
        digitalSignature?: pulumi.Input<boolean>;
        encipherOnly?: pulumi.Input<boolean>;
        keyAgreement?: pulumi.Input<boolean>;
        keyCertSign?: pulumi.Input<boolean>;
        keyEncipherment?: pulumi.Input<boolean>;
        nonRepudiation?: pulumi.Input<boolean>;
    }

    /**
     * Structure that contains X.509 OtherName information.
     */
    export interface CertificateOtherNameArgs {
        typeId: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Structure that contains X.509 Policy information.
     */
    export interface CertificatePolicyInformationArgs {
        certPolicyId: pulumi.Input<string>;
        policyQualifiers?: pulumi.Input<pulumi.Input<inputs.acmpca.CertificatePolicyQualifierInfoArgs>[]>;
    }

    /**
     * Structure that contains X.509 Policy qualifier information.
     */
    export interface CertificatePolicyQualifierInfoArgs {
        policyQualifierId: pulumi.Input<string>;
        qualifier: pulumi.Input<inputs.acmpca.CertificateQualifierArgs>;
    }

    /**
     * Structure that contains a X.509 policy qualifier.
     */
    export interface CertificateQualifierArgs {
        cpsUri: pulumi.Input<string>;
    }

    /**
     * Structure that contains X.500 distinguished name information.
     */
    export interface CertificateSubjectArgs {
        commonName?: pulumi.Input<string>;
        country?: pulumi.Input<string>;
        distinguishedNameQualifier?: pulumi.Input<string>;
        generationQualifier?: pulumi.Input<string>;
        givenName?: pulumi.Input<string>;
        initials?: pulumi.Input<string>;
        locality?: pulumi.Input<string>;
        organization?: pulumi.Input<string>;
        organizationalUnit?: pulumi.Input<string>;
        pseudonym?: pulumi.Input<string>;
        serialNumber?: pulumi.Input<string>;
        state?: pulumi.Input<string>;
        surname?: pulumi.Input<string>;
        title?: pulumi.Input<string>;
    }

    /**
     * Validity for a certificate.
     */
    export interface CertificateValidityArgs {
        type: pulumi.Input<string>;
        value: pulumi.Input<number>;
    }
}

export namespace amazonmq {
    export interface BrokerConfigurationIdArgs {
        id: pulumi.Input<string>;
        revision: pulumi.Input<number>;
    }

    export interface BrokerEncryptionOptionsArgs {
        kmsKeyId?: pulumi.Input<string>;
        useAwsOwnedKey: pulumi.Input<boolean>;
    }

    export interface BrokerLdapServerMetadataArgs {
        hosts: pulumi.Input<pulumi.Input<string>[]>;
        roleBase: pulumi.Input<string>;
        roleName?: pulumi.Input<string>;
        roleSearchMatching: pulumi.Input<string>;
        roleSearchSubtree?: pulumi.Input<boolean>;
        serviceAccountPassword: pulumi.Input<string>;
        serviceAccountUsername: pulumi.Input<string>;
        userBase: pulumi.Input<string>;
        userRoleName?: pulumi.Input<string>;
        userSearchMatching: pulumi.Input<string>;
        userSearchSubtree?: pulumi.Input<boolean>;
    }

    export interface BrokerLogListArgs {
        audit?: pulumi.Input<boolean>;
        general?: pulumi.Input<boolean>;
    }

    export interface BrokerMaintenanceWindowArgs {
        dayOfWeek: pulumi.Input<string>;
        timeOfDay: pulumi.Input<string>;
        timeZone: pulumi.Input<string>;
    }

    export interface BrokerTagsEntryArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface BrokerUserArgs {
        consoleAccess?: pulumi.Input<boolean>;
        groups?: pulumi.Input<pulumi.Input<string>[]>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface ConfigurationAssociationConfigurationIdArgs {
        id: pulumi.Input<string>;
        revision: pulumi.Input<number>;
    }

    export interface ConfigurationTagsEntryArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace amplify {
    export interface AppAutoBranchCreationConfigArgs {
        autoBranchCreationPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        basicAuthConfig?: pulumi.Input<inputs.amplify.AppBasicAuthConfigArgs>;
        buildSpec?: pulumi.Input<string>;
        enableAutoBranchCreation?: pulumi.Input<boolean>;
        enableAutoBuild?: pulumi.Input<boolean>;
        enablePerformanceMode?: pulumi.Input<boolean>;
        enablePullRequestPreview?: pulumi.Input<boolean>;
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.amplify.AppEnvironmentVariableArgs>[]>;
        pullRequestEnvironmentName?: pulumi.Input<string>;
        stage?: pulumi.Input<enums.amplify.AppAutoBranchCreationConfigStage>;
    }

    export interface AppBasicAuthConfigArgs {
        enableBasicAuth?: pulumi.Input<boolean>;
        password?: pulumi.Input<string>;
        username?: pulumi.Input<string>;
    }

    export interface AppCustomRuleArgs {
        condition?: pulumi.Input<string>;
        source: pulumi.Input<string>;
        status?: pulumi.Input<string>;
        target: pulumi.Input<string>;
    }

    export interface AppEnvironmentVariableArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface AppTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface BranchBasicAuthConfigArgs {
        enableBasicAuth?: pulumi.Input<boolean>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface BranchEnvironmentVariableArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface BranchTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DomainSubDomainSettingArgs {
        branchName: pulumi.Input<string>;
        prefix: pulumi.Input<string>;
    }
}

export namespace amplifyuibuilder {
    export interface ComponentBindingPropertiesArgs {
    }

    export interface ComponentChildArgs {
        children?: pulumi.Input<pulumi.Input<inputs.amplifyuibuilder.ComponentChildArgs>[]>;
        componentType: pulumi.Input<string>;
        name: pulumi.Input<string>;
        properties: pulumi.Input<inputs.amplifyuibuilder.ComponentPropertiesArgs>;
    }

    export interface ComponentCollectionPropertiesArgs {
    }

    export interface ComponentOverridesArgs {
    }

    export interface ComponentPropertiesArgs {
    }

    export interface ComponentTagsArgs {
    }

    export interface ComponentVariantArgs {
        overrides?: pulumi.Input<inputs.amplifyuibuilder.ComponentOverridesArgs>;
        variantValues?: pulumi.Input<inputs.amplifyuibuilder.ComponentVariantValuesArgs>;
    }

    export interface ComponentVariantValuesArgs {
    }

    export interface ThemeTagsArgs {
    }

    export interface ThemeValueArgs {
        children?: pulumi.Input<pulumi.Input<inputs.amplifyuibuilder.ThemeValuesArgs>[]>;
        value?: pulumi.Input<string>;
    }

    export interface ThemeValuesArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<inputs.amplifyuibuilder.ThemeValueArgs>;
    }
}

export namespace apigateway {
    export interface ApiKeyStageKeyArgs {
        /**
         * The ID of a RestApi resource that includes the stage with which you want to associate the API key.
         */
        restApiId?: pulumi.Input<string>;
        /**
         * The name of the stage with which to associate the API key. The stage must be included in the RestApi resource that you specified in the RestApiId property. 
         */
        stageName?: pulumi.Input<string>;
    }

    export interface ApiKeyTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    export interface ClientCertificateTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DeploymentAccessLogSettingArgs {
        /**
         * The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. 
         */
        destinationArn?: pulumi.Input<string>;
        /**
         * A single line format of the access logs of data, as specified by selected $context variables. The format must include at least $context.requestId. 
         */
        format?: pulumi.Input<string>;
    }

    export interface DeploymentCanarySettingArgs {
        /**
         * The percent (0-100) of traffic diverted to a canary deployment.
         */
        percentTraffic?: pulumi.Input<number>;
        /**
         * Stage variables overridden for a canary release deployment, including new stage variables introduced in the canary. These stage variables are represented as a string-to-string map between stage variable names and their values. 
         */
        stageVariableOverrides?: any;
        /**
         * Whether the canary deployment uses the stage cache or not.
         */
        useStageCache?: pulumi.Input<boolean>;
    }

    export interface DeploymentCanarySettingsArgs {
        /**
         * The percentage (0-100) of traffic diverted to a canary deployment.
         */
        percentTraffic?: pulumi.Input<number>;
        /**
         * Stage variables overridden for a canary release deployment, including new stage variables introduced in the canary. These stage variables are represented as a string-to-string map between stage variable names and their values. Duplicates are not allowed.
         */
        stageVariableOverrides?: any;
        /**
         * Whether the canary deployment uses the stage cache.
         */
        useStageCache?: pulumi.Input<boolean>;
    }

    export interface DeploymentMethodSettingArgs {
        /**
         * Indicates whether the cached responses are encrypted
         */
        cacheDataEncrypted?: pulumi.Input<boolean>;
        /**
         * The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses. 
         */
        cacheTtlInSeconds?: pulumi.Input<number>;
        /**
         * Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
         */
        cachingEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs. 
         */
        dataTraceEnabled?: pulumi.Input<boolean>;
        /**
         * The HTTP method.
         */
        httpMethod?: pulumi.Input<string>;
        /**
         * The logging level for this method. For valid values, see the loggingLevel property of the Stage resource in the Amazon API Gateway API Reference. 
         */
        loggingLevel?: pulumi.Input<string>;
        /**
         * Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
         */
        metricsEnabled?: pulumi.Input<boolean>;
        /**
         * The resource path for this method. Forward slashes (/) are encoded as ~1 and the initial slash must include a forward slash. 
         */
        resourcePath?: pulumi.Input<string>;
        /**
         * The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         */
        throttlingBurstLimit?: pulumi.Input<number>;
        /**
         * The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         */
        throttlingRateLimit?: pulumi.Input<number>;
    }

    export interface DeploymentStageDescriptionArgs {
        /**
         * Specifies settings for logging access in this stage.
         */
        accessLogSetting?: pulumi.Input<inputs.apigateway.DeploymentAccessLogSettingArgs>;
        /**
         * Indicates whether cache clustering is enabled for the stage.
         */
        cacheClusterEnabled?: pulumi.Input<boolean>;
        /**
         * The size of the stage's cache cluster.
         */
        cacheClusterSize?: pulumi.Input<string>;
        /**
         * The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses. 
         */
        cacheDataEncrypted?: pulumi.Input<boolean>;
        /**
         * The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses. 
         */
        cacheTtlInSeconds?: pulumi.Input<number>;
        /**
         * Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
         */
        cachingEnabled?: pulumi.Input<boolean>;
        /**
         * Specifies settings for the canary deployment in this stage.
         */
        canarySetting?: pulumi.Input<inputs.apigateway.DeploymentCanarySettingArgs>;
        /**
         * The identifier of the client certificate that API Gateway uses to call your integration endpoints in the stage. 
         */
        clientCertificateId?: pulumi.Input<string>;
        /**
         * Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs. 
         */
        dataTraceEnabled?: pulumi.Input<boolean>;
        /**
         * A description of the purpose of the stage.
         */
        description?: pulumi.Input<string>;
        /**
         * The version identifier of the API documentation snapshot.
         */
        documentationVersion?: pulumi.Input<string>;
        /**
         * The logging level for this method. For valid values, see the loggingLevel property of the Stage resource in the Amazon API Gateway API Reference. 
         */
        loggingLevel?: pulumi.Input<string>;
        /**
         * Configures settings for all of the stage's methods.
         */
        methodSettings?: pulumi.Input<pulumi.Input<inputs.apigateway.DeploymentMethodSettingArgs>[]>;
        /**
         * Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
         */
        metricsEnabled?: pulumi.Input<boolean>;
        /**
         * An array of arbitrary tags (key-value pairs) to associate with the stage.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.apigateway.DeploymentTagArgs>[]>;
        /**
         * The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         */
        throttlingBurstLimit?: pulumi.Input<number>;
        /**
         * The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         */
        throttlingRateLimit?: pulumi.Input<number>;
        /**
         * Specifies whether active tracing with X-ray is enabled for this stage.
         */
        tracingEnabled?: pulumi.Input<boolean>;
        /**
         * A map that defines the stage variables. Variable names must consist of alphanumeric characters, and the values must match the following regular expression: [A-Za-z0-9-._~:/?#&=,]+. 
         */
        variables?: any;
    }

    export interface DeploymentTagArgs {
        /**
         * The key name of the tag
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag
         */
        value: pulumi.Input<string>;
    }

    export interface DocumentationPartLocationArgs {
        method?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        path?: pulumi.Input<string>;
        statusCode?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface DomainNameEndpointConfigurationArgs {
        types?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DomainNameMutualTlsAuthenticationArgs {
        truststoreUri?: pulumi.Input<string>;
        truststoreVersion?: pulumi.Input<string>;
    }

    export interface DomainNameTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface MethodIntegrationArgs {
        /**
         * A list of request parameters whose values API Gateway caches.
         */
        cacheKeyParameters?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An API-specific tag group of related cached parameters.
         */
        cacheNamespace?: pulumi.Input<string>;
        /**
         * The ID of the VpcLink used for the integration when connectionType=VPC_LINK, otherwise undefined.
         */
        connectionId?: pulumi.Input<string>;
        /**
         * The type of the network connection to the integration endpoint.
         */
        connectionType?: pulumi.Input<enums.apigateway.MethodIntegrationConnectionType>;
        /**
         * Specifies how to handle request payload content type conversions.
         */
        contentHandling?: pulumi.Input<enums.apigateway.MethodIntegrationContentHandling>;
        /**
         * The credentials that are required for the integration.
         */
        credentials?: pulumi.Input<string>;
        /**
         * The integration's HTTP method type.
         */
        integrationHttpMethod?: pulumi.Input<string>;
        /**
         * The response that API Gateway provides after a method's backend completes processing a request.
         */
        integrationResponses?: pulumi.Input<pulumi.Input<inputs.apigateway.MethodIntegrationResponseArgs>[]>;
        /**
         * Indicates when API Gateway passes requests to the targeted backend.
         */
        passthroughBehavior?: pulumi.Input<enums.apigateway.MethodIntegrationPassthroughBehavior>;
        /**
         * The request parameters that API Gateway sends with the backend request.
         */
        requestParameters?: any;
        /**
         * A map of Apache Velocity templates that are applied on the request payload.
         */
        requestTemplates?: any;
        /**
         * Custom timeout between 50 and 29,000 milliseconds.
         */
        timeoutInMillis?: pulumi.Input<number>;
        /**
         * The type of backend that your method is running.
         */
        type: pulumi.Input<enums.apigateway.MethodIntegrationType>;
        /**
         * The Uniform Resource Identifier (URI) for the integration.
         */
        uri?: pulumi.Input<string>;
    }

    export interface MethodIntegrationResponseArgs {
        /**
         * Specifies how to handle request payload content type conversions.
         */
        contentHandling?: pulumi.Input<enums.apigateway.MethodIntegrationResponseContentHandling>;
        /**
         * The response parameters from the backend response that API Gateway sends to the method response.
         */
        responseParameters?: any;
        /**
         * The templates that are used to transform the integration response body. Specify templates as key-value pairs (string-to-string mappings), with a content type as the key and a template as the value.
         */
        responseTemplates?: any;
        /**
         * A regular expression that specifies which error strings or status codes from the backend map to the integration response.
         */
        selectionPattern?: pulumi.Input<string>;
        /**
         * The status code that API Gateway uses to map the integration response to a MethodResponse status code.
         */
        statusCode: pulumi.Input<string>;
    }

    export interface MethodResponseArgs {
        /**
         * The resources used for the response's content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
         */
        responseModels?: any;
        /**
         * Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
         */
        responseParameters?: any;
        /**
         * The method response's status code, which you map to an IntegrationResponse.
         */
        statusCode: pulumi.Input<string>;
    }

    export interface RestApiEndpointConfigurationArgs {
        types?: pulumi.Input<pulumi.Input<string>[]>;
        vpcEndpointIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RestApiS3LocationArgs {
        bucket?: pulumi.Input<string>;
        eTag?: pulumi.Input<string>;
        key?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface RestApiTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Specifies settings for logging access in this stage.
     */
    export interface StageAccessLogSettingArgs {
        /**
         * The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. This parameter is required to enable access logging.
         */
        destinationArn?: pulumi.Input<string>;
        /**
         * A single line format of the access logs of data, as specified by selected $context variables (https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference). The format must include at least $context.requestId. This parameter is required to enable access logging.
         */
        format?: pulumi.Input<string>;
    }

    /**
     * Specifies settings for the canary deployment in this stage.
     */
    export interface StageCanarySettingArgs {
        /**
         * The identifier of the deployment that the stage points to.
         */
        deploymentId?: pulumi.Input<string>;
        /**
         * The percentage (0-100) of traffic diverted to a canary deployment.
         */
        percentTraffic?: pulumi.Input<number>;
        /**
         * Stage variables overridden for a canary release deployment, including new stage variables introduced in the canary. These stage variables are represented as a string-to-string map between stage variable names and their values.
         */
        stageVariableOverrides?: any;
        /**
         * Whether the canary deployment uses the stage cache or not.
         */
        useStageCache?: pulumi.Input<boolean>;
    }

    /**
     * Configures settings for all methods in a stage.
     */
    export interface StageMethodSettingArgs {
        /**
         * Indicates whether the cached responses are encrypted.
         */
        cacheDataEncrypted?: pulumi.Input<boolean>;
        /**
         * The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
         */
        cacheTtlInSeconds?: pulumi.Input<number>;
        /**
         * Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
         */
        cachingEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
         */
        dataTraceEnabled?: pulumi.Input<boolean>;
        /**
         * The HTTP method. You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.
         */
        httpMethod?: pulumi.Input<string>;
        /**
         * The logging level for this method. For valid values, see the loggingLevel property of the Stage (https://docs.aws.amazon.com/apigateway/api-reference/resource/stage/#loggingLevel) resource in the Amazon API Gateway API Reference.
         */
        loggingLevel?: pulumi.Input<string>;
        /**
         * Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
         */
        metricsEnabled?: pulumi.Input<boolean>;
        /**
         * The resource path for this method. Forward slashes (/) are encoded as ~1 and the initial slash must include a forward slash. For example, the path value /resource/subresource must be encoded as /~1resource~1subresource. To specify the root path, use only a slash (/). You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.
         */
        resourcePath?: pulumi.Input<string>;
        /**
         * The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         */
        throttlingBurstLimit?: pulumi.Input<number>;
        /**
         * The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         */
        throttlingRateLimit?: pulumi.Input<number>;
    }

    /**
     * Identify and categorize resources.
     */
    export interface StageTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:.
         */
        value: pulumi.Input<string>;
    }

    export interface UsagePlanApiStageArgs {
        /**
         * The ID of an API that is in the specified Stage property that you want to associate with the usage plan.
         */
        apiId?: pulumi.Input<string>;
        /**
         * The name of the stage to associate with the usage plan.
         */
        stage?: pulumi.Input<string>;
        /**
         * Map containing method-level throttling information for an API stage in a usage plan. The key for the map is the path and method for which to configure custom throttling, for example, '/pets/GET'. Duplicates are not allowed.
         */
        throttle?: any;
    }

    export interface UsagePlanQuotaSettingsArgs {
        /**
         * The maximum number of requests that users can make within the specified time period.
         */
        limit?: pulumi.Input<number>;
        /**
         * For the initial time period, the number of requests to subtract from the specified limit. When you first implement a usage plan, the plan might start in the middle of the week or month. With this property, you can decrease the limit for this initial time period.
         */
        offset?: pulumi.Input<number>;
        /**
         * The time period for which the maximum limit of requests applies, such as DAY or WEEK. For valid values, see the period property for the UsagePlan resource in the Amazon API Gateway REST API Reference.
         */
        period?: pulumi.Input<string>;
    }

    export interface UsagePlanTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    export interface UsagePlanThrottleSettingsArgs {
        /**
         * The maximum API request rate limit over a time ranging from one to a few seconds. The maximum API request rate limit depends on whether the underlying token bucket is at its full capacity.
         */
        burstLimit?: pulumi.Input<number>;
        /**
         * The API request steady-state rate limit (average requests per second over an extended period of time).
         */
        rateLimit?: pulumi.Input<number>;
    }

    export interface VpcLinkTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

}

export namespace apigatewayv2 {
    export interface ApiBodyS3LocationArgs {
        bucket?: pulumi.Input<string>;
        etag?: pulumi.Input<string>;
        key?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface ApiCorsArgs {
        allowCredentials?: pulumi.Input<boolean>;
        allowHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        allowMethods?: pulumi.Input<pulumi.Input<string>[]>;
        allowOrigins?: pulumi.Input<pulumi.Input<string>[]>;
        exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        maxAge?: pulumi.Input<number>;
    }

    export interface ApiGatewayManagedOverridesAccessLogSettingsArgs {
        destinationArn?: pulumi.Input<string>;
        format?: pulumi.Input<string>;
    }

    export interface ApiGatewayManagedOverridesIntegrationOverridesArgs {
        description?: pulumi.Input<string>;
        integrationMethod?: pulumi.Input<string>;
        payloadFormatVersion?: pulumi.Input<string>;
        timeoutInMillis?: pulumi.Input<number>;
    }

    export interface ApiGatewayManagedOverridesRouteOverridesArgs {
        authorizationScopes?: pulumi.Input<pulumi.Input<string>[]>;
        authorizationType?: pulumi.Input<string>;
        authorizerId?: pulumi.Input<string>;
        operationName?: pulumi.Input<string>;
        target?: pulumi.Input<string>;
    }

    export interface ApiGatewayManagedOverridesRouteSettingsArgs {
        dataTraceEnabled?: pulumi.Input<boolean>;
        detailedMetricsEnabled?: pulumi.Input<boolean>;
        loggingLevel?: pulumi.Input<string>;
        throttlingBurstLimit?: pulumi.Input<number>;
        throttlingRateLimit?: pulumi.Input<number>;
    }

    export interface ApiGatewayManagedOverridesStageOverridesArgs {
        accessLogSettings?: pulumi.Input<inputs.apigatewayv2.ApiGatewayManagedOverridesAccessLogSettingsArgs>;
        autoDeploy?: pulumi.Input<boolean>;
        defaultRouteSettings?: pulumi.Input<inputs.apigatewayv2.ApiGatewayManagedOverridesRouteSettingsArgs>;
        description?: pulumi.Input<string>;
        routeSettings?: any;
        stageVariables?: any;
    }

    export interface AuthorizerJWTConfigurationArgs {
        audience?: pulumi.Input<pulumi.Input<string>[]>;
        issuer?: pulumi.Input<string>;
    }

    export interface DomainNameConfigurationArgs {
        certificateArn?: pulumi.Input<string>;
        certificateName?: pulumi.Input<string>;
        endpointType?: pulumi.Input<string>;
        ownershipVerificationCertificateArn?: pulumi.Input<string>;
        securityPolicy?: pulumi.Input<string>;
    }

    export interface DomainNameMutualTlsAuthenticationArgs {
        truststoreUri?: pulumi.Input<string>;
        truststoreVersion?: pulumi.Input<string>;
    }

    export interface IntegrationTlsConfigArgs {
        serverNameToVerify?: pulumi.Input<string>;
    }

    export interface StageAccessLogSettingsArgs {
        destinationArn?: pulumi.Input<string>;
        format?: pulumi.Input<string>;
    }

    export interface StageRouteSettingsArgs {
        dataTraceEnabled?: pulumi.Input<boolean>;
        detailedMetricsEnabled?: pulumi.Input<boolean>;
        loggingLevel?: pulumi.Input<string>;
        throttlingBurstLimit?: pulumi.Input<number>;
        throttlingRateLimit?: pulumi.Input<number>;
    }
}

export namespace appconfig {
    export interface ApplicationTagsArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ConfigurationProfileTagsArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ConfigurationProfileValidatorsArgs {
        content?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface DeploymentStrategyTagsArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface DeploymentTagsArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface EnvironmentMonitorsArgs {
        alarmArn?: pulumi.Input<string>;
        alarmRoleArn?: pulumi.Input<string>;
    }

    export interface EnvironmentTagsArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace appflow {
    export interface ConnectorProfileAmplitudeConnectorProfileCredentialsArgs {
        /**
         * A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
         */
        apiKey: pulumi.Input<string>;
        secretKey: pulumi.Input<string>;
    }

    /**
     * Connector specific configurations needed to create connector profile
     */
    export interface ConnectorProfileConfigArgs {
        connectorProfileCredentials: pulumi.Input<inputs.appflow.ConnectorProfileCredentialsArgs>;
        connectorProfileProperties?: pulumi.Input<inputs.appflow.ConnectorProfilePropertiesArgs>;
    }

    export interface ConnectorProfileConnectorOAuthRequestArgs {
        /**
         * The code provided by the connector when it has been authenticated via the connected app.
         */
        authCode?: pulumi.Input<string>;
        /**
         * The URL to which the authentication server redirects the browser after authorization has been
         * granted.
         */
        redirectUri?: pulumi.Input<string>;
    }

    /**
     * Connector specific configuration needed to create connector profile based on Authentication mechanism
     */
    export interface ConnectorProfileCredentialsArgs {
        amplitude?: pulumi.Input<inputs.appflow.ConnectorProfileAmplitudeConnectorProfileCredentialsArgs>;
        datadog?: pulumi.Input<inputs.appflow.ConnectorProfileDatadogConnectorProfileCredentialsArgs>;
        dynatrace?: pulumi.Input<inputs.appflow.ConnectorProfileDynatraceConnectorProfileCredentialsArgs>;
        googleAnalytics?: pulumi.Input<inputs.appflow.ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs>;
        inforNexus?: pulumi.Input<inputs.appflow.ConnectorProfileInforNexusConnectorProfileCredentialsArgs>;
        marketo?: pulumi.Input<inputs.appflow.ConnectorProfileMarketoConnectorProfileCredentialsArgs>;
        redshift?: pulumi.Input<inputs.appflow.ConnectorProfileRedshiftConnectorProfileCredentialsArgs>;
        sAPOData?: pulumi.Input<inputs.appflow.ConnectorProfileSAPODataConnectorProfileCredentialsArgs>;
        salesforce?: pulumi.Input<inputs.appflow.ConnectorProfileSalesforceConnectorProfileCredentialsArgs>;
        serviceNow?: pulumi.Input<inputs.appflow.ConnectorProfileServiceNowConnectorProfileCredentialsArgs>;
        singular?: pulumi.Input<inputs.appflow.ConnectorProfileSingularConnectorProfileCredentialsArgs>;
        slack?: pulumi.Input<inputs.appflow.ConnectorProfileSlackConnectorProfileCredentialsArgs>;
        snowflake?: pulumi.Input<inputs.appflow.ConnectorProfileSnowflakeConnectorProfileCredentialsArgs>;
        trendmicro?: pulumi.Input<inputs.appflow.ConnectorProfileTrendmicroConnectorProfileCredentialsArgs>;
        veeva?: pulumi.Input<inputs.appflow.ConnectorProfileVeevaConnectorProfileCredentialsArgs>;
        zendesk?: pulumi.Input<inputs.appflow.ConnectorProfileZendeskConnectorProfileCredentialsArgs>;
    }

    export interface ConnectorProfileDatadogConnectorProfileCredentialsArgs {
        /**
         * A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
         */
        apiKey: pulumi.Input<string>;
        /**
         * Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
         */
        applicationKey: pulumi.Input<string>;
    }

    export interface ConnectorProfileDatadogConnectorProfilePropertiesArgs {
        /**
         * The location of the Datadog resource
         */
        instanceUrl: pulumi.Input<string>;
    }

    export interface ConnectorProfileDynatraceConnectorProfileCredentialsArgs {
        /**
         * The API tokens used by Dynatrace API to authenticate various API calls.
         */
        apiToken: pulumi.Input<string>;
    }

    export interface ConnectorProfileDynatraceConnectorProfilePropertiesArgs {
        /**
         * The location of the Dynatrace resource
         */
        instanceUrl: pulumi.Input<string>;
    }

    export interface ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs {
        /**
         * The credentials used to access protected resources.
         */
        accessToken?: pulumi.Input<string>;
        /**
         * The identiﬁer for the desired client.
         */
        clientId: pulumi.Input<string>;
        /**
         * The client secret used by the oauth client to authenticate to the authorization server.
         */
        clientSecret: pulumi.Input<string>;
        /**
         * The oauth needed to request security tokens from the connector endpoint.
         */
        connectorOAuthRequest?: pulumi.Input<inputs.appflow.ConnectorProfileConnectorOAuthRequestArgs>;
        /**
         * The credentials used to acquire new access tokens.
         */
        refreshToken?: pulumi.Input<string>;
    }

    export interface ConnectorProfileInforNexusConnectorProfileCredentialsArgs {
        /**
         * The Access Key portion of the credentials.
         */
        accessKeyId: pulumi.Input<string>;
        /**
         * The encryption keys used to encrypt data.
         */
        datakey: pulumi.Input<string>;
        /**
         * The secret key used to sign requests.
         */
        secretAccessKey: pulumi.Input<string>;
        /**
         * The identiﬁer for the user.
         */
        userId: pulumi.Input<string>;
    }

    export interface ConnectorProfileInforNexusConnectorProfilePropertiesArgs {
        /**
         * The location of the InforNexus resource
         */
        instanceUrl: pulumi.Input<string>;
    }

    export interface ConnectorProfileMarketoConnectorProfileCredentialsArgs {
        /**
         * The credentials used to access protected resources.
         */
        accessToken?: pulumi.Input<string>;
        /**
         * The identiﬁer for the desired client.
         */
        clientId: pulumi.Input<string>;
        /**
         * The client secret used by the oauth client to authenticate to the authorization server.
         */
        clientSecret: pulumi.Input<string>;
        /**
         * The oauth needed to request security tokens from the connector endpoint.
         */
        connectorOAuthRequest?: pulumi.Input<inputs.appflow.ConnectorProfileConnectorOAuthRequestArgs>;
    }

    export interface ConnectorProfileMarketoConnectorProfilePropertiesArgs {
        /**
         * The location of the Marketo resource
         */
        instanceUrl: pulumi.Input<string>;
    }

    export interface ConnectorProfileOAuthPropertiesArgs {
        authCodeUrl?: pulumi.Input<string>;
        oAuthScopes?: pulumi.Input<pulumi.Input<string>[]>;
        tokenUrl?: pulumi.Input<string>;
    }

    /**
     * Connector specific properties needed to create connector profile - currently not needed for Amplitude, Trendmicro, Googleanalytics and Singular
     */
    export interface ConnectorProfilePropertiesArgs {
        datadog?: pulumi.Input<inputs.appflow.ConnectorProfileDatadogConnectorProfilePropertiesArgs>;
        dynatrace?: pulumi.Input<inputs.appflow.ConnectorProfileDynatraceConnectorProfilePropertiesArgs>;
        inforNexus?: pulumi.Input<inputs.appflow.ConnectorProfileInforNexusConnectorProfilePropertiesArgs>;
        marketo?: pulumi.Input<inputs.appflow.ConnectorProfileMarketoConnectorProfilePropertiesArgs>;
        redshift?: pulumi.Input<inputs.appflow.ConnectorProfileRedshiftConnectorProfilePropertiesArgs>;
        sAPOData?: pulumi.Input<inputs.appflow.ConnectorProfileSAPODataConnectorProfilePropertiesArgs>;
        salesforce?: pulumi.Input<inputs.appflow.ConnectorProfileSalesforceConnectorProfilePropertiesArgs>;
        serviceNow?: pulumi.Input<inputs.appflow.ConnectorProfileServiceNowConnectorProfilePropertiesArgs>;
        slack?: pulumi.Input<inputs.appflow.ConnectorProfileSlackConnectorProfilePropertiesArgs>;
        snowflake?: pulumi.Input<inputs.appflow.ConnectorProfileSnowflakeConnectorProfilePropertiesArgs>;
        veeva?: pulumi.Input<inputs.appflow.ConnectorProfileVeevaConnectorProfilePropertiesArgs>;
        zendesk?: pulumi.Input<inputs.appflow.ConnectorProfileZendeskConnectorProfilePropertiesArgs>;
    }

    export interface ConnectorProfileRedshiftConnectorProfileCredentialsArgs {
        /**
         * The password that corresponds to the username.
         */
        password: pulumi.Input<string>;
        /**
         * The name of the user.
         */
        username: pulumi.Input<string>;
    }

    export interface ConnectorProfileRedshiftConnectorProfilePropertiesArgs {
        /**
         * The name of the Amazon S3 bucket associated with Redshift.
         */
        bucketName: pulumi.Input<string>;
        /**
         * The object key for the destination bucket in which Amazon AppFlow will place the ﬁles.
         */
        bucketPrefix?: pulumi.Input<string>;
        /**
         * The JDBC URL of the Amazon Redshift cluster.
         */
        databaseUrl: pulumi.Input<string>;
        /**
         * The Amazon Resource Name (ARN) of the IAM role.
         */
        roleArn: pulumi.Input<string>;
    }

    export interface ConnectorProfileSAPODataConnectorProfileCredentialsArgs {
        basicAuthCredentials?: pulumi.Input<inputs.appflow.ConnectorProfileSAPODataConnectorProfileCredentialsBasicAuthCredentialsPropertiesArgs>;
        oAuthCredentials?: pulumi.Input<inputs.appflow.ConnectorProfileSAPODataConnectorProfileCredentialsOAuthCredentialsPropertiesArgs>;
    }

    export interface ConnectorProfileSAPODataConnectorProfileCredentialsBasicAuthCredentialsPropertiesArgs {
        /**
         * The password that corresponds to the username.
         */
        password?: pulumi.Input<string>;
        /**
         * The name of the user.
         */
        username?: pulumi.Input<string>;
    }

    export interface ConnectorProfileSAPODataConnectorProfileCredentialsOAuthCredentialsPropertiesArgs {
        accessToken?: pulumi.Input<string>;
        clientId?: pulumi.Input<string>;
        clientSecret?: pulumi.Input<string>;
        connectorOAuthRequest?: pulumi.Input<inputs.appflow.ConnectorProfileConnectorOAuthRequestArgs>;
        refreshToken?: pulumi.Input<string>;
    }

    export interface ConnectorProfileSAPODataConnectorProfilePropertiesArgs {
        applicationHostUrl?: pulumi.Input<string>;
        applicationServicePath?: pulumi.Input<string>;
        clientNumber?: pulumi.Input<string>;
        logonLanguage?: pulumi.Input<string>;
        oAuthProperties?: pulumi.Input<inputs.appflow.ConnectorProfileOAuthPropertiesArgs>;
        portNumber?: pulumi.Input<number>;
        privateLinkServiceName?: pulumi.Input<string>;
    }

    export interface ConnectorProfileSalesforceConnectorProfileCredentialsArgs {
        /**
         * The credentials used to access protected resources.
         */
        accessToken?: pulumi.Input<string>;
        /**
         * The client credentials to fetch access token and refresh token.
         */
        clientCredentialsArn?: pulumi.Input<string>;
        /**
         * The oauth needed to request security tokens from the connector endpoint.
         */
        connectorOAuthRequest?: pulumi.Input<inputs.appflow.ConnectorProfileConnectorOAuthRequestArgs>;
        /**
         * The credentials used to acquire new access tokens.
         */
        refreshToken?: pulumi.Input<string>;
    }

    export interface ConnectorProfileSalesforceConnectorProfilePropertiesArgs {
        /**
         * The location of the Salesforce resource
         */
        instanceUrl?: pulumi.Input<string>;
        isSandboxEnvironment?: pulumi.Input<boolean>;
    }

    export interface ConnectorProfileServiceNowConnectorProfileCredentialsArgs {
        /**
         * The password that corresponds to the username.
         */
        password: pulumi.Input<string>;
        /**
         * The name of the user.
         */
        username: pulumi.Input<string>;
    }

    export interface ConnectorProfileServiceNowConnectorProfilePropertiesArgs {
        /**
         * The location of the ServiceNow resource
         */
        instanceUrl: pulumi.Input<string>;
    }

    export interface ConnectorProfileSingularConnectorProfileCredentialsArgs {
        /**
         * A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
         */
        apiKey: pulumi.Input<string>;
    }

    export interface ConnectorProfileSlackConnectorProfileCredentialsArgs {
        /**
         * The credentials used to access protected resources.
         */
        accessToken?: pulumi.Input<string>;
        /**
         * The identiﬁer for the desired client.
         */
        clientId: pulumi.Input<string>;
        /**
         * The client secret used by the oauth client to authenticate to the authorization server.
         */
        clientSecret: pulumi.Input<string>;
        /**
         * The oauth needed to request security tokens from the connector endpoint.
         */
        connectorOAuthRequest?: pulumi.Input<inputs.appflow.ConnectorProfileConnectorOAuthRequestArgs>;
    }

    export interface ConnectorProfileSlackConnectorProfilePropertiesArgs {
        /**
         * The location of the Slack resource
         */
        instanceUrl: pulumi.Input<string>;
    }

    export interface ConnectorProfileSnowflakeConnectorProfileCredentialsArgs {
        /**
         * The password that corresponds to the username.
         */
        password: pulumi.Input<string>;
        /**
         * The name of the user.
         */
        username: pulumi.Input<string>;
    }

    export interface ConnectorProfileSnowflakeConnectorProfilePropertiesArgs {
        /**
         * The name of the account.
         */
        accountName?: pulumi.Input<string>;
        /**
         * The name of the Amazon S3 bucket associated with Snowﬂake.
         */
        bucketName: pulumi.Input<string>;
        /**
         * The bucket prefix that refers to the Amazon S3 bucket associated with Snowﬂake.
         */
        bucketPrefix?: pulumi.Input<string>;
        /**
         * The Snowﬂake Private Link service name to be used for private data transfers.
         */
        privateLinkServiceName?: pulumi.Input<string>;
        /**
         * The region of the Snowﬂake account.
         */
        region?: pulumi.Input<string>;
        /**
         * The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the
         * Snowﬂake account. This is written in the following format: < Database>< Schema><Stage Name>.
         */
        stage: pulumi.Input<string>;
        /**
         * The name of the Snowﬂake warehouse.
         */
        warehouse: pulumi.Input<string>;
    }

    export interface ConnectorProfileTrendmicroConnectorProfileCredentialsArgs {
        /**
         * The Secret Access Key portion of the credentials.
         */
        apiSecretKey: pulumi.Input<string>;
    }

    export interface ConnectorProfileVeevaConnectorProfileCredentialsArgs {
        /**
         * The password that corresponds to the username.
         */
        password: pulumi.Input<string>;
        /**
         * The name of the user.
         */
        username: pulumi.Input<string>;
    }

    export interface ConnectorProfileVeevaConnectorProfilePropertiesArgs {
        /**
         * The location of the Veeva resource
         */
        instanceUrl: pulumi.Input<string>;
    }

    export interface ConnectorProfileZendeskConnectorProfileCredentialsArgs {
        /**
         * The credentials used to access protected resources.
         */
        accessToken?: pulumi.Input<string>;
        /**
         * The identiﬁer for the desired client.
         */
        clientId: pulumi.Input<string>;
        /**
         * The client secret used by the oauth client to authenticate to the authorization server.
         */
        clientSecret: pulumi.Input<string>;
        /**
         * The oauth needed to request security tokens from the connector endpoint.
         */
        connectorOAuthRequest?: pulumi.Input<inputs.appflow.ConnectorProfileConnectorOAuthRequestArgs>;
    }

    export interface ConnectorProfileZendeskConnectorProfilePropertiesArgs {
        /**
         * The location of the Zendesk resource
         */
        instanceUrl: pulumi.Input<string>;
    }

    export interface FlowAggregationConfigArgs {
        aggregationType?: pulumi.Input<enums.appflow.FlowAggregationType>;
    }

    export interface FlowAmplitudeSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    /**
     * Operation to be performed on provided source fields
     */
    export interface FlowConnectorOperatorArgs {
        amplitude?: pulumi.Input<enums.appflow.FlowAmplitudeConnectorOperator>;
        datadog?: pulumi.Input<enums.appflow.FlowDatadogConnectorOperator>;
        dynatrace?: pulumi.Input<enums.appflow.FlowDynatraceConnectorOperator>;
        googleAnalytics?: pulumi.Input<enums.appflow.FlowGoogleAnalyticsConnectorOperator>;
        inforNexus?: pulumi.Input<enums.appflow.FlowInforNexusConnectorOperator>;
        marketo?: pulumi.Input<enums.appflow.FlowMarketoConnectorOperator>;
        s3?: pulumi.Input<enums.appflow.FlowS3ConnectorOperator>;
        sAPOData?: pulumi.Input<enums.appflow.FlowSAPODataConnectorOperator>;
        salesforce?: pulumi.Input<enums.appflow.FlowSalesforceConnectorOperator>;
        serviceNow?: pulumi.Input<enums.appflow.FlowServiceNowConnectorOperator>;
        singular?: pulumi.Input<enums.appflow.FlowSingularConnectorOperator>;
        slack?: pulumi.Input<enums.appflow.FlowSlackConnectorOperator>;
        trendmicro?: pulumi.Input<enums.appflow.FlowTrendmicroConnectorOperator>;
        veeva?: pulumi.Input<enums.appflow.FlowVeevaConnectorOperator>;
        zendesk?: pulumi.Input<enums.appflow.FlowZendeskConnectorOperator>;
    }

    export interface FlowDatadogSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    /**
     * Destination connector details
     */
    export interface FlowDestinationConnectorPropertiesArgs {
        eventBridge?: pulumi.Input<inputs.appflow.FlowEventBridgeDestinationPropertiesArgs>;
        lookoutMetrics?: pulumi.Input<inputs.appflow.FlowLookoutMetricsDestinationPropertiesArgs>;
        redshift?: pulumi.Input<inputs.appflow.FlowRedshiftDestinationPropertiesArgs>;
        s3?: pulumi.Input<inputs.appflow.FlowS3DestinationPropertiesArgs>;
        salesforce?: pulumi.Input<inputs.appflow.FlowSalesforceDestinationPropertiesArgs>;
        snowflake?: pulumi.Input<inputs.appflow.FlowSnowflakeDestinationPropertiesArgs>;
        upsolver?: pulumi.Input<inputs.appflow.FlowUpsolverDestinationPropertiesArgs>;
        zendesk?: pulumi.Input<inputs.appflow.FlowZendeskDestinationPropertiesArgs>;
    }

    /**
     * Configurations of destination connector.
     */
    export interface FlowDestinationFlowConfigArgs {
        /**
         * Name of destination connector profile
         */
        connectorProfileName?: pulumi.Input<string>;
        /**
         * Destination connector type
         */
        connectorType: pulumi.Input<enums.appflow.FlowConnectorType>;
        /**
         * Destination connector details
         */
        destinationConnectorProperties: pulumi.Input<inputs.appflow.FlowDestinationConnectorPropertiesArgs>;
    }

    export interface FlowDynatraceSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    export interface FlowErrorHandlingConfigArgs {
        bucketName?: pulumi.Input<string>;
        bucketPrefix?: pulumi.Input<string>;
        failOnFirstError?: pulumi.Input<boolean>;
    }

    export interface FlowEventBridgeDestinationPropertiesArgs {
        errorHandlingConfig?: pulumi.Input<inputs.appflow.FlowErrorHandlingConfigArgs>;
        object: pulumi.Input<string>;
    }

    export interface FlowGoogleAnalyticsSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    /**
     * Configuration for scheduled incremental data pull
     */
    export interface FlowIncrementalPullConfigArgs {
        datetimeTypeFieldName?: pulumi.Input<string>;
    }

    export interface FlowInforNexusSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    export interface FlowLookoutMetricsDestinationPropertiesArgs {
        object?: pulumi.Input<string>;
    }

    export interface FlowMarketoSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    export interface FlowPrefixConfigArgs {
        prefixFormat?: pulumi.Input<enums.appflow.FlowPrefixFormat>;
        prefixType?: pulumi.Input<enums.appflow.FlowPrefixType>;
    }

    export interface FlowRedshiftDestinationPropertiesArgs {
        bucketPrefix?: pulumi.Input<string>;
        errorHandlingConfig?: pulumi.Input<inputs.appflow.FlowErrorHandlingConfigArgs>;
        intermediateBucketName: pulumi.Input<string>;
        object: pulumi.Input<string>;
    }

    export interface FlowS3DestinationPropertiesArgs {
        bucketName: pulumi.Input<string>;
        bucketPrefix?: pulumi.Input<string>;
        s3OutputFormatConfig?: pulumi.Input<inputs.appflow.FlowS3OutputFormatConfigArgs>;
    }

    export interface FlowS3InputFormatConfigArgs {
        s3InputFileType?: pulumi.Input<enums.appflow.FlowS3InputFormatConfigS3InputFileType>;
    }

    export interface FlowS3OutputFormatConfigArgs {
        aggregationConfig?: pulumi.Input<inputs.appflow.FlowAggregationConfigArgs>;
        fileType?: pulumi.Input<enums.appflow.FlowFileType>;
        prefixConfig?: pulumi.Input<inputs.appflow.FlowPrefixConfigArgs>;
    }

    export interface FlowS3SourcePropertiesArgs {
        bucketName: pulumi.Input<string>;
        bucketPrefix: pulumi.Input<string>;
        s3InputFormatConfig?: pulumi.Input<inputs.appflow.FlowS3InputFormatConfigArgs>;
    }

    export interface FlowSAPODataSourcePropertiesArgs {
        objectPath: pulumi.Input<string>;
    }

    export interface FlowSalesforceDestinationPropertiesArgs {
        errorHandlingConfig?: pulumi.Input<inputs.appflow.FlowErrorHandlingConfigArgs>;
        /**
         * List of fields used as ID when performing a write operation.
         */
        idFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
        object: pulumi.Input<string>;
        writeOperationType?: pulumi.Input<enums.appflow.FlowWriteOperationType>;
    }

    export interface FlowSalesforceSourcePropertiesArgs {
        enableDynamicFieldUpdate?: pulumi.Input<boolean>;
        includeDeletedRecords?: pulumi.Input<boolean>;
        object: pulumi.Input<string>;
    }

    /**
     * Details required for scheduled trigger type
     */
    export interface FlowScheduledTriggerPropertiesArgs {
        dataPullMode?: pulumi.Input<enums.appflow.FlowScheduledTriggerPropertiesDataPullMode>;
        scheduleEndTime?: pulumi.Input<number>;
        scheduleExpression: pulumi.Input<string>;
        scheduleOffset?: pulumi.Input<number>;
        scheduleStartTime?: pulumi.Input<number>;
        timeZone?: pulumi.Input<string>;
    }

    export interface FlowServiceNowSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    export interface FlowSingularSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    export interface FlowSlackSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    export interface FlowSnowflakeDestinationPropertiesArgs {
        bucketPrefix?: pulumi.Input<string>;
        errorHandlingConfig?: pulumi.Input<inputs.appflow.FlowErrorHandlingConfigArgs>;
        intermediateBucketName: pulumi.Input<string>;
        object: pulumi.Input<string>;
    }

    /**
     * Source connector details required to query a connector
     */
    export interface FlowSourceConnectorPropertiesArgs {
        amplitude?: pulumi.Input<inputs.appflow.FlowAmplitudeSourcePropertiesArgs>;
        datadog?: pulumi.Input<inputs.appflow.FlowDatadogSourcePropertiesArgs>;
        dynatrace?: pulumi.Input<inputs.appflow.FlowDynatraceSourcePropertiesArgs>;
        googleAnalytics?: pulumi.Input<inputs.appflow.FlowGoogleAnalyticsSourcePropertiesArgs>;
        inforNexus?: pulumi.Input<inputs.appflow.FlowInforNexusSourcePropertiesArgs>;
        marketo?: pulumi.Input<inputs.appflow.FlowMarketoSourcePropertiesArgs>;
        s3?: pulumi.Input<inputs.appflow.FlowS3SourcePropertiesArgs>;
        sAPOData?: pulumi.Input<inputs.appflow.FlowSAPODataSourcePropertiesArgs>;
        salesforce?: pulumi.Input<inputs.appflow.FlowSalesforceSourcePropertiesArgs>;
        serviceNow?: pulumi.Input<inputs.appflow.FlowServiceNowSourcePropertiesArgs>;
        singular?: pulumi.Input<inputs.appflow.FlowSingularSourcePropertiesArgs>;
        slack?: pulumi.Input<inputs.appflow.FlowSlackSourcePropertiesArgs>;
        trendmicro?: pulumi.Input<inputs.appflow.FlowTrendmicroSourcePropertiesArgs>;
        veeva?: pulumi.Input<inputs.appflow.FlowVeevaSourcePropertiesArgs>;
        zendesk?: pulumi.Input<inputs.appflow.FlowZendeskSourcePropertiesArgs>;
    }

    /**
     * Configurations of Source connector of the flow.
     */
    export interface FlowSourceFlowConfigArgs {
        /**
         * Name of source connector profile
         */
        connectorProfileName?: pulumi.Input<string>;
        /**
         * Type of source connector
         */
        connectorType: pulumi.Input<enums.appflow.FlowConnectorType>;
        /**
         * Configuration for scheduled incremental data pull
         */
        incrementalPullConfig?: pulumi.Input<inputs.appflow.FlowIncrementalPullConfigArgs>;
        /**
         * Source connector details required to query a connector
         */
        sourceConnectorProperties: pulumi.Input<inputs.appflow.FlowSourceConnectorPropertiesArgs>;
    }

    /**
     * A label for tagging AppFlow resources
     */
    export interface FlowTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    export interface FlowTaskArgs {
        /**
         * Operation to be performed on provided source fields
         */
        connectorOperator?: pulumi.Input<inputs.appflow.FlowConnectorOperatorArgs>;
        /**
         * A field value on which source field should be validated
         */
        destinationField?: pulumi.Input<string>;
        /**
         * Source fields on which particular task will be applied
         */
        sourceFields: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A Map used to store task related info
         */
        taskProperties?: pulumi.Input<pulumi.Input<inputs.appflow.FlowTaskPropertiesObjectArgs>[]>;
        /**
         * Type of task
         */
        taskType: pulumi.Input<enums.appflow.FlowTaskType>;
    }

    /**
     * An object used to store task related info
     */
    export interface FlowTaskPropertiesObjectArgs {
        key: pulumi.Input<enums.appflow.FlowOperatorPropertiesKeys>;
        value: pulumi.Input<string>;
    }

    export interface FlowTrendmicroSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    /**
     * Trigger settings of the flow.
     */
    export interface FlowTriggerConfigArgs {
        /**
         * Details required based on the type of trigger
         */
        triggerProperties?: pulumi.Input<inputs.appflow.FlowScheduledTriggerPropertiesArgs>;
        /**
         * Trigger type of the flow
         */
        triggerType: pulumi.Input<enums.appflow.FlowTriggerType>;
    }

    export interface FlowUpsolverDestinationPropertiesArgs {
        bucketName: pulumi.Input<string>;
        bucketPrefix?: pulumi.Input<string>;
        s3OutputFormatConfig: pulumi.Input<inputs.appflow.FlowUpsolverS3OutputFormatConfigArgs>;
    }

    export interface FlowUpsolverS3OutputFormatConfigArgs {
        aggregationConfig?: pulumi.Input<inputs.appflow.FlowAggregationConfigArgs>;
        fileType?: pulumi.Input<enums.appflow.FlowFileType>;
        prefixConfig: pulumi.Input<inputs.appflow.FlowPrefixConfigArgs>;
    }

    export interface FlowVeevaSourcePropertiesArgs {
        documentType?: pulumi.Input<string>;
        includeAllVersions?: pulumi.Input<boolean>;
        includeRenditions?: pulumi.Input<boolean>;
        includeSourceFiles?: pulumi.Input<boolean>;
        object: pulumi.Input<string>;
    }

    export interface FlowZendeskDestinationPropertiesArgs {
        errorHandlingConfig?: pulumi.Input<inputs.appflow.FlowErrorHandlingConfigArgs>;
        /**
         * List of fields used as ID when performing a write operation.
         */
        idFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
        object: pulumi.Input<string>;
        writeOperationType?: pulumi.Input<enums.appflow.FlowWriteOperationType>;
    }

    export interface FlowZendeskSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

}

export namespace appintegrations {
    export interface EventIntegrationEventFilterArgs {
        /**
         * The source of the events.
         */
        source: pulumi.Input<string>;
    }

    export interface EventIntegrationTagArgs {
        /**
         * A key to identify the tag.
         */
        key: pulumi.Input<string>;
        /**
         * Corresponding tag value for the key.
         */
        value: pulumi.Input<string>;
    }
}

export namespace applicationautoscaling {
    export interface ScalableTargetActionArgs {
        maxCapacity?: pulumi.Input<number>;
        minCapacity?: pulumi.Input<number>;
    }

    export interface ScalableTargetScheduledActionArgs {
        endTime?: pulumi.Input<string>;
        scalableTargetAction?: pulumi.Input<inputs.applicationautoscaling.ScalableTargetActionArgs>;
        schedule: pulumi.Input<string>;
        scheduledActionName: pulumi.Input<string>;
        startTime?: pulumi.Input<string>;
        timezone?: pulumi.Input<string>;
    }

    export interface ScalableTargetSuspendedStateArgs {
        dynamicScalingInSuspended?: pulumi.Input<boolean>;
        dynamicScalingOutSuspended?: pulumi.Input<boolean>;
        scheduledScalingSuspended?: pulumi.Input<boolean>;
    }

    export interface ScalingPolicyCustomizedMetricSpecificationArgs {
        dimensions?: pulumi.Input<pulumi.Input<inputs.applicationautoscaling.ScalingPolicyMetricDimensionArgs>[]>;
        metricName: pulumi.Input<string>;
        namespace: pulumi.Input<string>;
        statistic: pulumi.Input<string>;
        unit?: pulumi.Input<string>;
    }

    export interface ScalingPolicyMetricDimensionArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ScalingPolicyPredefinedMetricSpecificationArgs {
        predefinedMetricType: pulumi.Input<string>;
        resourceLabel?: pulumi.Input<string>;
    }

    export interface ScalingPolicyStepAdjustmentArgs {
        metricIntervalLowerBound?: pulumi.Input<number>;
        metricIntervalUpperBound?: pulumi.Input<number>;
        scalingAdjustment: pulumi.Input<number>;
    }

    export interface ScalingPolicyStepScalingPolicyConfigurationArgs {
        adjustmentType?: pulumi.Input<string>;
        cooldown?: pulumi.Input<number>;
        metricAggregationType?: pulumi.Input<string>;
        minAdjustmentMagnitude?: pulumi.Input<number>;
        stepAdjustments?: pulumi.Input<pulumi.Input<inputs.applicationautoscaling.ScalingPolicyStepAdjustmentArgs>[]>;
    }

    export interface ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs {
        customizedMetricSpecification?: pulumi.Input<inputs.applicationautoscaling.ScalingPolicyCustomizedMetricSpecificationArgs>;
        disableScaleIn?: pulumi.Input<boolean>;
        predefinedMetricSpecification?: pulumi.Input<inputs.applicationautoscaling.ScalingPolicyPredefinedMetricSpecificationArgs>;
        scaleInCooldown?: pulumi.Input<number>;
        scaleOutCooldown?: pulumi.Input<number>;
        targetValue: pulumi.Input<number>;
    }
}

export namespace applicationinsights {
    /**
     * A CloudWatch alarm to be monitored for the component.
     */
    export interface ApplicationAlarmArgs {
        /**
         * The name of the CloudWatch alarm to be monitored for the component.
         */
        alarmName: pulumi.Input<string>;
        /**
         * Indicates the degree of outage when the alarm goes off.
         */
        severity?: pulumi.Input<enums.applicationinsights.ApplicationAlarmSeverity>;
    }

    /**
     * A metric to be monitored for the component.
     */
    export interface ApplicationAlarmMetricArgs {
        /**
         * The name of the metric to be monitored for the component.
         */
        alarmMetricName: pulumi.Input<string>;
    }

    /**
     * The configuration settings of the component.
     */
    export interface ApplicationComponentConfigurationArgs {
        /**
         * The configuration settings
         */
        configurationDetails?: pulumi.Input<inputs.applicationinsights.ApplicationConfigurationDetailsArgs>;
        /**
         * Sub component configurations of the component.
         */
        subComponentTypeConfigurations?: pulumi.Input<pulumi.Input<inputs.applicationinsights.ApplicationSubComponentTypeConfigurationArgs>[]>;
    }

    /**
     * The monitoring setting of the component.
     */
    export interface ApplicationComponentMonitoringSettingArgs {
        /**
         * The ARN of the compnonent.
         */
        componentARN?: pulumi.Input<string>;
        /**
         * The component monitoring configuration mode.
         */
        componentConfigurationMode: pulumi.Input<enums.applicationinsights.ApplicationComponentMonitoringSettingComponentConfigurationMode>;
        /**
         * The name of the component.
         */
        componentName?: pulumi.Input<string>;
        /**
         * The monitoring configuration of the component.
         */
        customComponentConfiguration?: pulumi.Input<inputs.applicationinsights.ApplicationComponentConfigurationArgs>;
        /**
         * The overwritten settings on default component monitoring configuration.
         */
        defaultOverwriteComponentConfiguration?: pulumi.Input<inputs.applicationinsights.ApplicationComponentConfigurationArgs>;
        /**
         * The tier of the application component.
         */
        tier: pulumi.Input<string>;
    }

    /**
     * The configuration settings.
     */
    export interface ApplicationConfigurationDetailsArgs {
        /**
         * A list of metrics to monitor for the component.
         */
        alarmMetrics?: pulumi.Input<pulumi.Input<inputs.applicationinsights.ApplicationAlarmMetricArgs>[]>;
        /**
         * A list of alarms to monitor for the component.
         */
        alarms?: pulumi.Input<pulumi.Input<inputs.applicationinsights.ApplicationAlarmArgs>[]>;
        /**
         * The JMX Prometheus Exporter settings.
         */
        jMXPrometheusExporter?: pulumi.Input<inputs.applicationinsights.ApplicationJMXPrometheusExporterArgs>;
        /**
         * A list of logs to monitor for the component.
         */
        logs?: pulumi.Input<pulumi.Input<inputs.applicationinsights.ApplicationLogArgs>[]>;
        /**
         * A list of Windows Events to log.
         */
        windowsEvents?: pulumi.Input<pulumi.Input<inputs.applicationinsights.ApplicationWindowsEventArgs>[]>;
    }

    /**
     * The custom grouped component.
     */
    export interface ApplicationCustomComponentArgs {
        /**
         * The name of the component.
         */
        componentName: pulumi.Input<string>;
        /**
         * The list of resource ARNs that belong to the component.
         */
        resourceList: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The JMX Prometheus Exporter settings.
     */
    export interface ApplicationJMXPrometheusExporterArgs {
        /**
         * Java agent host port
         */
        hostPort?: pulumi.Input<string>;
        /**
         * JMX service URL.
         */
        jMXURL?: pulumi.Input<string>;
        /**
         * Prometheus exporter port
         */
        prometheusPort?: pulumi.Input<string>;
    }

    /**
     * A log to be monitored for the component.
     */
    export interface ApplicationLogArgs {
        /**
         * The type of encoding of the logs to be monitored.
         */
        encoding?: pulumi.Input<enums.applicationinsights.ApplicationLogEncoding>;
        /**
         * The CloudWatch log group name to be associated to the monitored log.
         */
        logGroupName?: pulumi.Input<string>;
        /**
         * The path of the logs to be monitored.
         */
        logPath?: pulumi.Input<string>;
        /**
         * The log type decides the log patterns against which Application Insights analyzes the log.
         */
        logType: pulumi.Input<string>;
        /**
         * The name of the log pattern set.
         */
        patternSet?: pulumi.Input<string>;
    }

    /**
     * The log pattern.
     */
    export interface ApplicationLogPatternArgs {
        /**
         * The log pattern.
         */
        pattern: pulumi.Input<string>;
        /**
         * The name of the log pattern.
         */
        patternName: pulumi.Input<string>;
        /**
         * Rank of the log pattern.
         */
        rank: pulumi.Input<number>;
    }

    /**
     * The log pattern set.
     */
    export interface ApplicationLogPatternSetArgs {
        /**
         * The log patterns of a set.
         */
        logPatterns: pulumi.Input<pulumi.Input<inputs.applicationinsights.ApplicationLogPatternArgs>[]>;
        /**
         * The name of the log pattern set.
         */
        patternSetName: pulumi.Input<string>;
    }

    /**
     * The configuration settings of sub components.
     */
    export interface ApplicationSubComponentConfigurationDetailsArgs {
        /**
         * A list of metrics to monitor for the component.
         */
        alarmMetrics?: pulumi.Input<pulumi.Input<inputs.applicationinsights.ApplicationAlarmMetricArgs>[]>;
        /**
         * A list of logs to monitor for the component.
         */
        logs?: pulumi.Input<pulumi.Input<inputs.applicationinsights.ApplicationLogArgs>[]>;
        /**
         * A list of Windows Events to log.
         */
        windowsEvents?: pulumi.Input<pulumi.Input<inputs.applicationinsights.ApplicationWindowsEventArgs>[]>;
    }

    /**
     * One type sub component configurations for the component.
     */
    export interface ApplicationSubComponentTypeConfigurationArgs {
        /**
         * The configuration settings of sub components.
         */
        subComponentConfigurationDetails: pulumi.Input<inputs.applicationinsights.ApplicationSubComponentConfigurationDetailsArgs>;
        /**
         * The sub component type.
         */
        subComponentType: pulumi.Input<enums.applicationinsights.ApplicationSubComponentTypeConfigurationSubComponentType>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ApplicationTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * A Windows Event to be monitored for the component.
     */
    export interface ApplicationWindowsEventArgs {
        /**
         * The levels of event to log. 
         */
        eventLevels: pulumi.Input<pulumi.Input<enums.applicationinsights.ApplicationEventLevel>[]>;
        /**
         * The type of Windows Events to log.
         */
        eventName: pulumi.Input<string>;
        /**
         * The CloudWatch log group name to be associated to the monitored log.
         */
        logGroupName: pulumi.Input<string>;
        /**
         * The name of the log pattern set.
         */
        patternSet?: pulumi.Input<string>;
    }
}

export namespace appmesh {
    export interface GatewayRouteGrpcGatewayRouteArgs {
        action: pulumi.Input<inputs.appmesh.GatewayRouteGrpcGatewayRouteActionArgs>;
        match: pulumi.Input<inputs.appmesh.GatewayRouteGrpcGatewayRouteMatchArgs>;
    }

    export interface GatewayRouteGrpcGatewayRouteActionArgs {
        rewrite?: pulumi.Input<inputs.appmesh.GatewayRouteGrpcGatewayRouteRewriteArgs>;
        target: pulumi.Input<inputs.appmesh.GatewayRouteTargetArgs>;
    }

    export interface GatewayRouteGrpcGatewayRouteMatchArgs {
        hostname?: pulumi.Input<inputs.appmesh.GatewayRouteHostnameMatchArgs>;
        metadata?: pulumi.Input<pulumi.Input<inputs.appmesh.GatewayRouteGrpcGatewayRouteMetadataArgs>[]>;
        serviceName?: pulumi.Input<string>;
    }

    export interface GatewayRouteGrpcGatewayRouteMetadataArgs {
        invert?: pulumi.Input<boolean>;
        match?: pulumi.Input<inputs.appmesh.GatewayRouteMetadataMatchArgs>;
        name: pulumi.Input<string>;
    }

    export interface GatewayRouteGrpcGatewayRouteRewriteArgs {
        hostname?: pulumi.Input<inputs.appmesh.GatewayRouteHostnameRewriteArgs>;
    }

    export interface GatewayRouteHostnameMatchArgs {
        exact?: pulumi.Input<string>;
        suffix?: pulumi.Input<string>;
    }

    export interface GatewayRouteHostnameRewriteArgs {
        defaultTargetHostname?: pulumi.Input<string>;
    }

    export interface GatewayRouteHttpGatewayRouteArgs {
        action: pulumi.Input<inputs.appmesh.GatewayRouteHttpGatewayRouteActionArgs>;
        match: pulumi.Input<inputs.appmesh.GatewayRouteHttpGatewayRouteMatchArgs>;
    }

    export interface GatewayRouteHttpGatewayRouteActionArgs {
        rewrite?: pulumi.Input<inputs.appmesh.GatewayRouteHttpGatewayRouteRewriteArgs>;
        target: pulumi.Input<inputs.appmesh.GatewayRouteTargetArgs>;
    }

    export interface GatewayRouteHttpGatewayRouteHeaderArgs {
        invert?: pulumi.Input<boolean>;
        match?: pulumi.Input<inputs.appmesh.GatewayRouteHttpGatewayRouteHeaderMatchArgs>;
        name: pulumi.Input<string>;
    }

    export interface GatewayRouteHttpGatewayRouteHeaderMatchArgs {
        exact?: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
        range?: pulumi.Input<inputs.appmesh.GatewayRouteRangeMatchArgs>;
        regex?: pulumi.Input<string>;
        suffix?: pulumi.Input<string>;
    }

    export interface GatewayRouteHttpGatewayRouteMatchArgs {
        headers?: pulumi.Input<pulumi.Input<inputs.appmesh.GatewayRouteHttpGatewayRouteHeaderArgs>[]>;
        hostname?: pulumi.Input<inputs.appmesh.GatewayRouteHostnameMatchArgs>;
        method?: pulumi.Input<string>;
        path?: pulumi.Input<inputs.appmesh.GatewayRouteHttpPathMatchArgs>;
        prefix?: pulumi.Input<string>;
        queryParameters?: pulumi.Input<pulumi.Input<inputs.appmesh.GatewayRouteQueryParameterArgs>[]>;
    }

    export interface GatewayRouteHttpGatewayRoutePathRewriteArgs {
        exact?: pulumi.Input<string>;
    }

    export interface GatewayRouteHttpGatewayRoutePrefixRewriteArgs {
        defaultPrefix?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GatewayRouteHttpGatewayRouteRewriteArgs {
        hostname?: pulumi.Input<inputs.appmesh.GatewayRouteHostnameRewriteArgs>;
        path?: pulumi.Input<inputs.appmesh.GatewayRouteHttpGatewayRoutePathRewriteArgs>;
        prefix?: pulumi.Input<inputs.appmesh.GatewayRouteHttpGatewayRoutePrefixRewriteArgs>;
    }

    export interface GatewayRouteHttpPathMatchArgs {
        exact?: pulumi.Input<string>;
        regex?: pulumi.Input<string>;
    }

    export interface GatewayRouteHttpQueryParameterMatchArgs {
        exact?: pulumi.Input<string>;
    }

    export interface GatewayRouteMetadataMatchArgs {
        exact?: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
        range?: pulumi.Input<inputs.appmesh.GatewayRouteRangeMatchArgs>;
        regex?: pulumi.Input<string>;
        suffix?: pulumi.Input<string>;
    }

    export interface GatewayRouteQueryParameterArgs {
        match?: pulumi.Input<inputs.appmesh.GatewayRouteHttpQueryParameterMatchArgs>;
        name: pulumi.Input<string>;
    }

    export interface GatewayRouteRangeMatchArgs {
        end: pulumi.Input<number>;
        start: pulumi.Input<number>;
    }

    export interface GatewayRouteSpecArgs {
        grpcRoute?: pulumi.Input<inputs.appmesh.GatewayRouteGrpcGatewayRouteArgs>;
        http2Route?: pulumi.Input<inputs.appmesh.GatewayRouteHttpGatewayRouteArgs>;
        httpRoute?: pulumi.Input<inputs.appmesh.GatewayRouteHttpGatewayRouteArgs>;
        priority?: pulumi.Input<number>;
    }

    export interface GatewayRouteTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface GatewayRouteTargetArgs {
        virtualService: pulumi.Input<inputs.appmesh.GatewayRouteVirtualServiceArgs>;
    }

    export interface GatewayRouteVirtualServiceArgs {
        virtualServiceName: pulumi.Input<string>;
    }

    export interface MeshEgressFilterArgs {
        type: pulumi.Input<string>;
    }

    export interface MeshSpecArgs {
        egressFilter?: pulumi.Input<inputs.appmesh.MeshEgressFilterArgs>;
    }

    export interface MeshTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RouteDurationArgs {
        unit: pulumi.Input<string>;
        value: pulumi.Input<number>;
    }

    export interface RouteGrpcRetryPolicyArgs {
        grpcRetryEvents?: pulumi.Input<pulumi.Input<string>[]>;
        httpRetryEvents?: pulumi.Input<pulumi.Input<string>[]>;
        maxRetries: pulumi.Input<number>;
        perRetryTimeout: pulumi.Input<inputs.appmesh.RouteDurationArgs>;
        tcpRetryEvents?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RouteGrpcRouteArgs {
        action: pulumi.Input<inputs.appmesh.RouteGrpcRouteActionArgs>;
        match: pulumi.Input<inputs.appmesh.RouteGrpcRouteMatchArgs>;
        retryPolicy?: pulumi.Input<inputs.appmesh.RouteGrpcRetryPolicyArgs>;
        timeout?: pulumi.Input<inputs.appmesh.RouteGrpcTimeoutArgs>;
    }

    export interface RouteGrpcRouteActionArgs {
        weightedTargets: pulumi.Input<pulumi.Input<inputs.appmesh.RouteWeightedTargetArgs>[]>;
    }

    export interface RouteGrpcRouteMatchArgs {
        metadata?: pulumi.Input<pulumi.Input<inputs.appmesh.RouteGrpcRouteMetadataArgs>[]>;
        methodName?: pulumi.Input<string>;
        serviceName?: pulumi.Input<string>;
    }

    export interface RouteGrpcRouteMetadataArgs {
        invert?: pulumi.Input<boolean>;
        match?: pulumi.Input<inputs.appmesh.RouteGrpcRouteMetadataMatchMethodArgs>;
        name: pulumi.Input<string>;
    }

    export interface RouteGrpcRouteMetadataMatchMethodArgs {
        exact?: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
        range?: pulumi.Input<inputs.appmesh.RouteMatchRangeArgs>;
        regex?: pulumi.Input<string>;
        suffix?: pulumi.Input<string>;
    }

    export interface RouteGrpcTimeoutArgs {
        idle?: pulumi.Input<inputs.appmesh.RouteDurationArgs>;
        perRequest?: pulumi.Input<inputs.appmesh.RouteDurationArgs>;
    }

    export interface RouteHeaderMatchMethodArgs {
        exact?: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
        range?: pulumi.Input<inputs.appmesh.RouteMatchRangeArgs>;
        regex?: pulumi.Input<string>;
        suffix?: pulumi.Input<string>;
    }

    export interface RouteHttpPathMatchArgs {
        exact?: pulumi.Input<string>;
        regex?: pulumi.Input<string>;
    }

    export interface RouteHttpQueryParameterMatchArgs {
        exact?: pulumi.Input<string>;
    }

    export interface RouteHttpRetryPolicyArgs {
        httpRetryEvents?: pulumi.Input<pulumi.Input<string>[]>;
        maxRetries: pulumi.Input<number>;
        perRetryTimeout: pulumi.Input<inputs.appmesh.RouteDurationArgs>;
        tcpRetryEvents?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RouteHttpRouteArgs {
        action: pulumi.Input<inputs.appmesh.RouteHttpRouteActionArgs>;
        match: pulumi.Input<inputs.appmesh.RouteHttpRouteMatchArgs>;
        retryPolicy?: pulumi.Input<inputs.appmesh.RouteHttpRetryPolicyArgs>;
        timeout?: pulumi.Input<inputs.appmesh.RouteHttpTimeoutArgs>;
    }

    export interface RouteHttpRouteActionArgs {
        weightedTargets: pulumi.Input<pulumi.Input<inputs.appmesh.RouteWeightedTargetArgs>[]>;
    }

    export interface RouteHttpRouteHeaderArgs {
        invert?: pulumi.Input<boolean>;
        match?: pulumi.Input<inputs.appmesh.RouteHeaderMatchMethodArgs>;
        name: pulumi.Input<string>;
    }

    export interface RouteHttpRouteMatchArgs {
        headers?: pulumi.Input<pulumi.Input<inputs.appmesh.RouteHttpRouteHeaderArgs>[]>;
        method?: pulumi.Input<string>;
        path?: pulumi.Input<inputs.appmesh.RouteHttpPathMatchArgs>;
        prefix?: pulumi.Input<string>;
        queryParameters?: pulumi.Input<pulumi.Input<inputs.appmesh.RouteQueryParameterArgs>[]>;
        scheme?: pulumi.Input<string>;
    }

    export interface RouteHttpTimeoutArgs {
        idle?: pulumi.Input<inputs.appmesh.RouteDurationArgs>;
        perRequest?: pulumi.Input<inputs.appmesh.RouteDurationArgs>;
    }

    export interface RouteMatchRangeArgs {
        end: pulumi.Input<number>;
        start: pulumi.Input<number>;
    }

    export interface RouteQueryParameterArgs {
        match?: pulumi.Input<inputs.appmesh.RouteHttpQueryParameterMatchArgs>;
        name: pulumi.Input<string>;
    }

    export interface RouteSpecArgs {
        grpcRoute?: pulumi.Input<inputs.appmesh.RouteGrpcRouteArgs>;
        http2Route?: pulumi.Input<inputs.appmesh.RouteHttpRouteArgs>;
        httpRoute?: pulumi.Input<inputs.appmesh.RouteHttpRouteArgs>;
        priority?: pulumi.Input<number>;
        tcpRoute?: pulumi.Input<inputs.appmesh.RouteTcpRouteArgs>;
    }

    export interface RouteTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RouteTcpRouteArgs {
        action: pulumi.Input<inputs.appmesh.RouteTcpRouteActionArgs>;
        timeout?: pulumi.Input<inputs.appmesh.RouteTcpTimeoutArgs>;
    }

    export interface RouteTcpRouteActionArgs {
        weightedTargets: pulumi.Input<pulumi.Input<inputs.appmesh.RouteWeightedTargetArgs>[]>;
    }

    export interface RouteTcpTimeoutArgs {
        idle?: pulumi.Input<inputs.appmesh.RouteDurationArgs>;
    }

    export interface RouteWeightedTargetArgs {
        virtualNode: pulumi.Input<string>;
        weight: pulumi.Input<number>;
    }

    export interface VirtualGatewayAccessLogArgs {
        file?: pulumi.Input<inputs.appmesh.VirtualGatewayFileAccessLogArgs>;
    }

    export interface VirtualGatewayBackendDefaultsArgs {
        clientPolicy?: pulumi.Input<inputs.appmesh.VirtualGatewayClientPolicyArgs>;
    }

    export interface VirtualGatewayClientPolicyArgs {
        tLS?: pulumi.Input<inputs.appmesh.VirtualGatewayClientPolicyTlsArgs>;
    }

    export interface VirtualGatewayClientPolicyTlsArgs {
        certificate?: pulumi.Input<inputs.appmesh.VirtualGatewayClientTlsCertificateArgs>;
        enforce?: pulumi.Input<boolean>;
        ports?: pulumi.Input<pulumi.Input<number>[]>;
        validation: pulumi.Input<inputs.appmesh.VirtualGatewayTlsValidationContextArgs>;
    }

    export interface VirtualGatewayClientTlsCertificateArgs {
        file?: pulumi.Input<inputs.appmesh.VirtualGatewayListenerTlsFileCertificateArgs>;
        sDS?: pulumi.Input<inputs.appmesh.VirtualGatewayListenerTlsSdsCertificateArgs>;
    }

    export interface VirtualGatewayConnectionPoolArgs {
        gRPC?: pulumi.Input<inputs.appmesh.VirtualGatewayGrpcConnectionPoolArgs>;
        hTTP?: pulumi.Input<inputs.appmesh.VirtualGatewayHttpConnectionPoolArgs>;
        hTTP2?: pulumi.Input<inputs.appmesh.VirtualGatewayHttp2ConnectionPoolArgs>;
    }

    export interface VirtualGatewayFileAccessLogArgs {
        path: pulumi.Input<string>;
    }

    export interface VirtualGatewayGrpcConnectionPoolArgs {
        maxRequests: pulumi.Input<number>;
    }

    export interface VirtualGatewayHealthCheckPolicyArgs {
        healthyThreshold: pulumi.Input<number>;
        intervalMillis: pulumi.Input<number>;
        path?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
        timeoutMillis: pulumi.Input<number>;
        unhealthyThreshold: pulumi.Input<number>;
    }

    export interface VirtualGatewayHttp2ConnectionPoolArgs {
        maxRequests: pulumi.Input<number>;
    }

    export interface VirtualGatewayHttpConnectionPoolArgs {
        maxConnections: pulumi.Input<number>;
        maxPendingRequests?: pulumi.Input<number>;
    }

    export interface VirtualGatewayListenerArgs {
        connectionPool?: pulumi.Input<inputs.appmesh.VirtualGatewayConnectionPoolArgs>;
        healthCheck?: pulumi.Input<inputs.appmesh.VirtualGatewayHealthCheckPolicyArgs>;
        portMapping: pulumi.Input<inputs.appmesh.VirtualGatewayPortMappingArgs>;
        tLS?: pulumi.Input<inputs.appmesh.VirtualGatewayListenerTlsArgs>;
    }

    export interface VirtualGatewayListenerTlsArgs {
        certificate: pulumi.Input<inputs.appmesh.VirtualGatewayListenerTlsCertificateArgs>;
        mode: pulumi.Input<string>;
        validation?: pulumi.Input<inputs.appmesh.VirtualGatewayListenerTlsValidationContextArgs>;
    }

    export interface VirtualGatewayListenerTlsAcmCertificateArgs {
        certificateArn: pulumi.Input<string>;
    }

    export interface VirtualGatewayListenerTlsCertificateArgs {
        aCM?: pulumi.Input<inputs.appmesh.VirtualGatewayListenerTlsAcmCertificateArgs>;
        file?: pulumi.Input<inputs.appmesh.VirtualGatewayListenerTlsFileCertificateArgs>;
        sDS?: pulumi.Input<inputs.appmesh.VirtualGatewayListenerTlsSdsCertificateArgs>;
    }

    export interface VirtualGatewayListenerTlsFileCertificateArgs {
        certificateChain: pulumi.Input<string>;
        privateKey: pulumi.Input<string>;
    }

    export interface VirtualGatewayListenerTlsSdsCertificateArgs {
        secretName: pulumi.Input<string>;
    }

    export interface VirtualGatewayListenerTlsValidationContextArgs {
        subjectAlternativeNames?: pulumi.Input<inputs.appmesh.VirtualGatewaySubjectAlternativeNamesArgs>;
        trust: pulumi.Input<inputs.appmesh.VirtualGatewayListenerTlsValidationContextTrustArgs>;
    }

    export interface VirtualGatewayListenerTlsValidationContextTrustArgs {
        file?: pulumi.Input<inputs.appmesh.VirtualGatewayTlsValidationContextFileTrustArgs>;
        sDS?: pulumi.Input<inputs.appmesh.VirtualGatewayTlsValidationContextSdsTrustArgs>;
    }

    export interface VirtualGatewayLoggingArgs {
        accessLog?: pulumi.Input<inputs.appmesh.VirtualGatewayAccessLogArgs>;
    }

    export interface VirtualGatewayPortMappingArgs {
        port: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
    }

    export interface VirtualGatewaySpecArgs {
        backendDefaults?: pulumi.Input<inputs.appmesh.VirtualGatewayBackendDefaultsArgs>;
        listeners: pulumi.Input<pulumi.Input<inputs.appmesh.VirtualGatewayListenerArgs>[]>;
        logging?: pulumi.Input<inputs.appmesh.VirtualGatewayLoggingArgs>;
    }

    export interface VirtualGatewaySubjectAlternativeNameMatchersArgs {
        exact?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VirtualGatewaySubjectAlternativeNamesArgs {
        match: pulumi.Input<inputs.appmesh.VirtualGatewaySubjectAlternativeNameMatchersArgs>;
    }

    export interface VirtualGatewayTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VirtualGatewayTlsValidationContextArgs {
        subjectAlternativeNames?: pulumi.Input<inputs.appmesh.VirtualGatewaySubjectAlternativeNamesArgs>;
        trust: pulumi.Input<inputs.appmesh.VirtualGatewayTlsValidationContextTrustArgs>;
    }

    export interface VirtualGatewayTlsValidationContextAcmTrustArgs {
        certificateAuthorityArns: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VirtualGatewayTlsValidationContextFileTrustArgs {
        certificateChain: pulumi.Input<string>;
    }

    export interface VirtualGatewayTlsValidationContextSdsTrustArgs {
        secretName: pulumi.Input<string>;
    }

    export interface VirtualGatewayTlsValidationContextTrustArgs {
        aCM?: pulumi.Input<inputs.appmesh.VirtualGatewayTlsValidationContextAcmTrustArgs>;
        file?: pulumi.Input<inputs.appmesh.VirtualGatewayTlsValidationContextFileTrustArgs>;
        sDS?: pulumi.Input<inputs.appmesh.VirtualGatewayTlsValidationContextSdsTrustArgs>;
    }

    export interface VirtualNodeAccessLogArgs {
        file?: pulumi.Input<inputs.appmesh.VirtualNodeFileAccessLogArgs>;
    }

    export interface VirtualNodeAwsCloudMapInstanceAttributeArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VirtualNodeAwsCloudMapServiceDiscoveryArgs {
        attributes?: pulumi.Input<pulumi.Input<inputs.appmesh.VirtualNodeAwsCloudMapInstanceAttributeArgs>[]>;
        namespaceName: pulumi.Input<string>;
        serviceName: pulumi.Input<string>;
    }

    export interface VirtualNodeBackendArgs {
        virtualService?: pulumi.Input<inputs.appmesh.VirtualNodeVirtualServiceBackendArgs>;
    }

    export interface VirtualNodeBackendDefaultsArgs {
        clientPolicy?: pulumi.Input<inputs.appmesh.VirtualNodeClientPolicyArgs>;
    }

    export interface VirtualNodeClientPolicyArgs {
        tLS?: pulumi.Input<inputs.appmesh.VirtualNodeClientPolicyTlsArgs>;
    }

    export interface VirtualNodeClientPolicyTlsArgs {
        certificate?: pulumi.Input<inputs.appmesh.VirtualNodeClientTlsCertificateArgs>;
        enforce?: pulumi.Input<boolean>;
        ports?: pulumi.Input<pulumi.Input<number>[]>;
        validation: pulumi.Input<inputs.appmesh.VirtualNodeTlsValidationContextArgs>;
    }

    export interface VirtualNodeClientTlsCertificateArgs {
        file?: pulumi.Input<inputs.appmesh.VirtualNodeListenerTlsFileCertificateArgs>;
        sDS?: pulumi.Input<inputs.appmesh.VirtualNodeListenerTlsSdsCertificateArgs>;
    }

    export interface VirtualNodeConnectionPoolArgs {
        gRPC?: pulumi.Input<inputs.appmesh.VirtualNodeGrpcConnectionPoolArgs>;
        hTTP?: pulumi.Input<inputs.appmesh.VirtualNodeHttpConnectionPoolArgs>;
        hTTP2?: pulumi.Input<inputs.appmesh.VirtualNodeHttp2ConnectionPoolArgs>;
        tCP?: pulumi.Input<inputs.appmesh.VirtualNodeTcpConnectionPoolArgs>;
    }

    export interface VirtualNodeDnsServiceDiscoveryArgs {
        hostname: pulumi.Input<string>;
        responseType?: pulumi.Input<string>;
    }

    export interface VirtualNodeDurationArgs {
        unit: pulumi.Input<string>;
        value: pulumi.Input<number>;
    }

    export interface VirtualNodeFileAccessLogArgs {
        path: pulumi.Input<string>;
    }

    export interface VirtualNodeGrpcConnectionPoolArgs {
        maxRequests: pulumi.Input<number>;
    }

    export interface VirtualNodeGrpcTimeoutArgs {
        idle?: pulumi.Input<inputs.appmesh.VirtualNodeDurationArgs>;
        perRequest?: pulumi.Input<inputs.appmesh.VirtualNodeDurationArgs>;
    }

    export interface VirtualNodeHealthCheckArgs {
        healthyThreshold: pulumi.Input<number>;
        intervalMillis: pulumi.Input<number>;
        path?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
        timeoutMillis: pulumi.Input<number>;
        unhealthyThreshold: pulumi.Input<number>;
    }

    export interface VirtualNodeHttp2ConnectionPoolArgs {
        maxRequests: pulumi.Input<number>;
    }

    export interface VirtualNodeHttpConnectionPoolArgs {
        maxConnections: pulumi.Input<number>;
        maxPendingRequests?: pulumi.Input<number>;
    }

    export interface VirtualNodeHttpTimeoutArgs {
        idle?: pulumi.Input<inputs.appmesh.VirtualNodeDurationArgs>;
        perRequest?: pulumi.Input<inputs.appmesh.VirtualNodeDurationArgs>;
    }

    export interface VirtualNodeListenerArgs {
        connectionPool?: pulumi.Input<inputs.appmesh.VirtualNodeConnectionPoolArgs>;
        healthCheck?: pulumi.Input<inputs.appmesh.VirtualNodeHealthCheckArgs>;
        outlierDetection?: pulumi.Input<inputs.appmesh.VirtualNodeOutlierDetectionArgs>;
        portMapping: pulumi.Input<inputs.appmesh.VirtualNodePortMappingArgs>;
        tLS?: pulumi.Input<inputs.appmesh.VirtualNodeListenerTlsArgs>;
        timeout?: pulumi.Input<inputs.appmesh.VirtualNodeListenerTimeoutArgs>;
    }

    export interface VirtualNodeListenerTimeoutArgs {
        gRPC?: pulumi.Input<inputs.appmesh.VirtualNodeGrpcTimeoutArgs>;
        hTTP?: pulumi.Input<inputs.appmesh.VirtualNodeHttpTimeoutArgs>;
        hTTP2?: pulumi.Input<inputs.appmesh.VirtualNodeHttpTimeoutArgs>;
        tCP?: pulumi.Input<inputs.appmesh.VirtualNodeTcpTimeoutArgs>;
    }

    export interface VirtualNodeListenerTlsArgs {
        certificate: pulumi.Input<inputs.appmesh.VirtualNodeListenerTlsCertificateArgs>;
        mode: pulumi.Input<string>;
        validation?: pulumi.Input<inputs.appmesh.VirtualNodeListenerTlsValidationContextArgs>;
    }

    export interface VirtualNodeListenerTlsAcmCertificateArgs {
        certificateArn: pulumi.Input<string>;
    }

    export interface VirtualNodeListenerTlsCertificateArgs {
        aCM?: pulumi.Input<inputs.appmesh.VirtualNodeListenerTlsAcmCertificateArgs>;
        file?: pulumi.Input<inputs.appmesh.VirtualNodeListenerTlsFileCertificateArgs>;
        sDS?: pulumi.Input<inputs.appmesh.VirtualNodeListenerTlsSdsCertificateArgs>;
    }

    export interface VirtualNodeListenerTlsFileCertificateArgs {
        certificateChain: pulumi.Input<string>;
        privateKey: pulumi.Input<string>;
    }

    export interface VirtualNodeListenerTlsSdsCertificateArgs {
        secretName: pulumi.Input<string>;
    }

    export interface VirtualNodeListenerTlsValidationContextArgs {
        subjectAlternativeNames?: pulumi.Input<inputs.appmesh.VirtualNodeSubjectAlternativeNamesArgs>;
        trust: pulumi.Input<inputs.appmesh.VirtualNodeListenerTlsValidationContextTrustArgs>;
    }

    export interface VirtualNodeListenerTlsValidationContextTrustArgs {
        file?: pulumi.Input<inputs.appmesh.VirtualNodeTlsValidationContextFileTrustArgs>;
        sDS?: pulumi.Input<inputs.appmesh.VirtualNodeTlsValidationContextSdsTrustArgs>;
    }

    export interface VirtualNodeLoggingArgs {
        accessLog?: pulumi.Input<inputs.appmesh.VirtualNodeAccessLogArgs>;
    }

    export interface VirtualNodeOutlierDetectionArgs {
        baseEjectionDuration: pulumi.Input<inputs.appmesh.VirtualNodeDurationArgs>;
        interval: pulumi.Input<inputs.appmesh.VirtualNodeDurationArgs>;
        maxEjectionPercent: pulumi.Input<number>;
        maxServerErrors: pulumi.Input<number>;
    }

    export interface VirtualNodePortMappingArgs {
        port: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
    }

    export interface VirtualNodeServiceDiscoveryArgs {
        aWSCloudMap?: pulumi.Input<inputs.appmesh.VirtualNodeAwsCloudMapServiceDiscoveryArgs>;
        dNS?: pulumi.Input<inputs.appmesh.VirtualNodeDnsServiceDiscoveryArgs>;
    }

    export interface VirtualNodeSpecArgs {
        backendDefaults?: pulumi.Input<inputs.appmesh.VirtualNodeBackendDefaultsArgs>;
        backends?: pulumi.Input<pulumi.Input<inputs.appmesh.VirtualNodeBackendArgs>[]>;
        listeners?: pulumi.Input<pulumi.Input<inputs.appmesh.VirtualNodeListenerArgs>[]>;
        logging?: pulumi.Input<inputs.appmesh.VirtualNodeLoggingArgs>;
        serviceDiscovery?: pulumi.Input<inputs.appmesh.VirtualNodeServiceDiscoveryArgs>;
    }

    export interface VirtualNodeSubjectAlternativeNameMatchersArgs {
        exact?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VirtualNodeSubjectAlternativeNamesArgs {
        match: pulumi.Input<inputs.appmesh.VirtualNodeSubjectAlternativeNameMatchersArgs>;
    }

    export interface VirtualNodeTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VirtualNodeTcpConnectionPoolArgs {
        maxConnections: pulumi.Input<number>;
    }

    export interface VirtualNodeTcpTimeoutArgs {
        idle?: pulumi.Input<inputs.appmesh.VirtualNodeDurationArgs>;
    }

    export interface VirtualNodeTlsValidationContextArgs {
        subjectAlternativeNames?: pulumi.Input<inputs.appmesh.VirtualNodeSubjectAlternativeNamesArgs>;
        trust: pulumi.Input<inputs.appmesh.VirtualNodeTlsValidationContextTrustArgs>;
    }

    export interface VirtualNodeTlsValidationContextAcmTrustArgs {
        certificateAuthorityArns: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VirtualNodeTlsValidationContextFileTrustArgs {
        certificateChain: pulumi.Input<string>;
    }

    export interface VirtualNodeTlsValidationContextSdsTrustArgs {
        secretName: pulumi.Input<string>;
    }

    export interface VirtualNodeTlsValidationContextTrustArgs {
        aCM?: pulumi.Input<inputs.appmesh.VirtualNodeTlsValidationContextAcmTrustArgs>;
        file?: pulumi.Input<inputs.appmesh.VirtualNodeTlsValidationContextFileTrustArgs>;
        sDS?: pulumi.Input<inputs.appmesh.VirtualNodeTlsValidationContextSdsTrustArgs>;
    }

    export interface VirtualNodeVirtualServiceBackendArgs {
        clientPolicy?: pulumi.Input<inputs.appmesh.VirtualNodeClientPolicyArgs>;
        virtualServiceName: pulumi.Input<string>;
    }

    export interface VirtualRouterListenerArgs {
        portMapping: pulumi.Input<inputs.appmesh.VirtualRouterPortMappingArgs>;
    }

    export interface VirtualRouterPortMappingArgs {
        port: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
    }

    export interface VirtualRouterSpecArgs {
        listeners: pulumi.Input<pulumi.Input<inputs.appmesh.VirtualRouterListenerArgs>[]>;
    }

    export interface VirtualRouterTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VirtualServiceProviderArgs {
        virtualNode?: pulumi.Input<inputs.appmesh.VirtualServiceVirtualNodeServiceProviderArgs>;
        virtualRouter?: pulumi.Input<inputs.appmesh.VirtualServiceVirtualRouterServiceProviderArgs>;
    }

    export interface VirtualServiceSpecArgs {
        provider?: pulumi.Input<inputs.appmesh.VirtualServiceProviderArgs>;
    }

    export interface VirtualServiceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VirtualServiceVirtualNodeServiceProviderArgs {
        virtualNodeName: pulumi.Input<string>;
    }

    export interface VirtualServiceVirtualRouterServiceProviderArgs {
        virtualRouterName: pulumi.Input<string>;
    }
}

export namespace apprunner {
    /**
     * Authentication Configuration
     */
    export interface ServiceAuthenticationConfigurationArgs {
        /**
         * Access Role Arn
         */
        accessRoleArn?: pulumi.Input<string>;
        /**
         * Connection Arn
         */
        connectionArn?: pulumi.Input<string>;
    }

    /**
     * Code Configuration
     */
    export interface ServiceCodeConfigurationArgs {
        codeConfigurationValues?: pulumi.Input<inputs.apprunner.ServiceCodeConfigurationValuesArgs>;
        /**
         * Configuration Source
         */
        configurationSource: pulumi.Input<enums.apprunner.ServiceCodeConfigurationConfigurationSource>;
    }

    /**
     * Code Configuration Values
     */
    export interface ServiceCodeConfigurationValuesArgs {
        /**
         * Build Command
         */
        buildCommand?: pulumi.Input<string>;
        /**
         * Port
         */
        port?: pulumi.Input<string>;
        /**
         * Runtime
         */
        runtime: pulumi.Input<enums.apprunner.ServiceCodeConfigurationValuesRuntime>;
        runtimeEnvironmentVariables?: pulumi.Input<pulumi.Input<inputs.apprunner.ServiceKeyValuePairArgs>[]>;
        /**
         * Start Command
         */
        startCommand?: pulumi.Input<string>;
    }

    /**
     * Source Code Repository
     */
    export interface ServiceCodeRepositoryArgs {
        codeConfiguration?: pulumi.Input<inputs.apprunner.ServiceCodeConfigurationArgs>;
        /**
         * Repository Url
         */
        repositoryUrl: pulumi.Input<string>;
        sourceCodeVersion: pulumi.Input<inputs.apprunner.ServiceSourceCodeVersionArgs>;
    }

    /**
     * Encryption configuration (KMS key)
     */
    export interface ServiceEncryptionConfigurationArgs {
        /**
         * The KMS Key
         */
        kmsKey: pulumi.Input<string>;
    }

    /**
     * Health check configuration
     */
    export interface ServiceHealthCheckConfigurationArgs {
        /**
         * Health check Healthy Threshold
         */
        healthyThreshold?: pulumi.Input<number>;
        /**
         * Health check Interval
         */
        interval?: pulumi.Input<number>;
        /**
         * Health check Path
         */
        path?: pulumi.Input<string>;
        /**
         * Health Check Protocol
         */
        protocol?: pulumi.Input<enums.apprunner.ServiceHealthCheckConfigurationProtocol>;
        /**
         * Health check Timeout
         */
        timeout?: pulumi.Input<number>;
        /**
         * Health check Unhealthy Threshold
         */
        unhealthyThreshold?: pulumi.Input<number>;
    }

    /**
     * Image Configuration
     */
    export interface ServiceImageConfigurationArgs {
        /**
         * Port
         */
        port?: pulumi.Input<string>;
        runtimeEnvironmentVariables?: pulumi.Input<pulumi.Input<inputs.apprunner.ServiceKeyValuePairArgs>[]>;
        /**
         * Start Command
         */
        startCommand?: pulumi.Input<string>;
    }

    /**
     * Image Repository
     */
    export interface ServiceImageRepositoryArgs {
        imageConfiguration?: pulumi.Input<inputs.apprunner.ServiceImageConfigurationArgs>;
        /**
         * Image Identifier
         */
        imageIdentifier: pulumi.Input<string>;
        /**
         * Image Repository Type
         */
        imageRepositoryType: pulumi.Input<enums.apprunner.ServiceImageRepositoryImageRepositoryType>;
    }

    /**
     * Instance Configuration
     */
    export interface ServiceInstanceConfigurationArgs {
        /**
         * CPU
         */
        cpu?: pulumi.Input<string>;
        /**
         * Instance Role Arn
         */
        instanceRoleArn?: pulumi.Input<string>;
        /**
         * Memory
         */
        memory?: pulumi.Input<string>;
    }

    export interface ServiceKeyValuePairArgs {
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * Source Code Version
     */
    export interface ServiceSourceCodeVersionArgs {
        /**
         * Source Code Version Type
         */
        type: pulumi.Input<enums.apprunner.ServiceSourceCodeVersionType>;
        /**
         * Source Code Version Value
         */
        value: pulumi.Input<string>;
    }

    /**
     * Source Code configuration
     */
    export interface ServiceSourceConfigurationArgs {
        authenticationConfiguration?: pulumi.Input<inputs.apprunner.ServiceAuthenticationConfigurationArgs>;
        /**
         * Auto Deployment enabled
         */
        autoDeploymentsEnabled?: pulumi.Input<boolean>;
        codeRepository?: pulumi.Input<inputs.apprunner.ServiceCodeRepositoryArgs>;
        imageRepository?: pulumi.Input<inputs.apprunner.ServiceImageRepositoryArgs>;
    }

    export interface ServiceTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace appstream {
    export interface AppBlockS3LocationArgs {
        s3Bucket: pulumi.Input<string>;
        s3Key: pulumi.Input<string>;
    }

    export interface AppBlockScriptDetailsArgs {
        executableParameters?: pulumi.Input<string>;
        executablePath: pulumi.Input<string>;
        scriptS3Location: pulumi.Input<inputs.appstream.AppBlockS3LocationArgs>;
        timeoutInSeconds: pulumi.Input<number>;
    }

    export interface AppBlockTagArgs {
        tagKey: pulumi.Input<string>;
        tagValue: pulumi.Input<string>;
    }

    export interface ApplicationS3LocationArgs {
        s3Bucket: pulumi.Input<string>;
        s3Key: pulumi.Input<string>;
    }

    export interface ApplicationTagArgs {
        tagKey: pulumi.Input<string>;
        tagValue: pulumi.Input<string>;
    }

    export interface DirectoryConfigServiceAccountCredentialsArgs {
        accountName: pulumi.Input<string>;
        accountPassword: pulumi.Input<string>;
    }

    export interface FleetComputeCapacityArgs {
        desiredInstances: pulumi.Input<number>;
    }

    export interface FleetDomainJoinInfoArgs {
        directoryName?: pulumi.Input<string>;
        organizationalUnitDistinguishedName?: pulumi.Input<string>;
    }

    export interface FleetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface FleetVpcConfigArgs {
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ImageBuilderAccessEndpointArgs {
        endpointType: pulumi.Input<string>;
        vpceId: pulumi.Input<string>;
    }

    export interface ImageBuilderDomainJoinInfoArgs {
        directoryName?: pulumi.Input<string>;
        organizationalUnitDistinguishedName?: pulumi.Input<string>;
    }

    export interface ImageBuilderTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ImageBuilderVpcConfigArgs {
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface StackAccessEndpointArgs {
        endpointType: pulumi.Input<string>;
        vpceId: pulumi.Input<string>;
    }

    export interface StackApplicationSettingsArgs {
        enabled: pulumi.Input<boolean>;
        settingsGroup?: pulumi.Input<string>;
    }

    export interface StackStorageConnectorArgs {
        connectorType: pulumi.Input<string>;
        domains?: pulumi.Input<pulumi.Input<string>[]>;
        resourceIdentifier?: pulumi.Input<string>;
    }

    export interface StackTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface StackUserSettingArgs {
        action: pulumi.Input<string>;
        permission: pulumi.Input<string>;
    }
}

export namespace appsync {
    export interface DataSourceAuthorizationConfigArgs {
        authorizationType: pulumi.Input<string>;
        awsIamConfig?: pulumi.Input<inputs.appsync.DataSourceAwsIamConfigArgs>;
    }

    export interface DataSourceAwsIamConfigArgs {
        signingRegion?: pulumi.Input<string>;
        signingServiceName?: pulumi.Input<string>;
    }

    export interface DataSourceDeltaSyncConfigArgs {
        baseTableTTL: pulumi.Input<string>;
        deltaSyncTableName: pulumi.Input<string>;
        deltaSyncTableTTL: pulumi.Input<string>;
    }

    export interface DataSourceDynamoDBConfigArgs {
        awsRegion: pulumi.Input<string>;
        deltaSyncConfig?: pulumi.Input<inputs.appsync.DataSourceDeltaSyncConfigArgs>;
        tableName: pulumi.Input<string>;
        useCallerCredentials?: pulumi.Input<boolean>;
        versioned?: pulumi.Input<boolean>;
    }

    export interface DataSourceElasticsearchConfigArgs {
        awsRegion: pulumi.Input<string>;
        endpoint: pulumi.Input<string>;
    }

    export interface DataSourceHttpConfigArgs {
        authorizationConfig?: pulumi.Input<inputs.appsync.DataSourceAuthorizationConfigArgs>;
        endpoint: pulumi.Input<string>;
    }

    export interface DataSourceLambdaConfigArgs {
        lambdaFunctionArn: pulumi.Input<string>;
    }

    export interface DataSourceOpenSearchServiceConfigArgs {
        awsRegion: pulumi.Input<string>;
        endpoint: pulumi.Input<string>;
    }

    export interface DataSourceRdsHttpEndpointConfigArgs {
        awsRegion: pulumi.Input<string>;
        awsSecretStoreArn: pulumi.Input<string>;
        databaseName?: pulumi.Input<string>;
        dbClusterIdentifier: pulumi.Input<string>;
        schema?: pulumi.Input<string>;
    }

    export interface DataSourceRelationalDatabaseConfigArgs {
        rdsHttpEndpointConfig?: pulumi.Input<inputs.appsync.DataSourceRdsHttpEndpointConfigArgs>;
        relationalDatabaseSourceType: pulumi.Input<string>;
    }

    export interface FunctionConfigurationLambdaConflictHandlerConfigArgs {
        lambdaConflictHandlerArn?: pulumi.Input<string>;
    }

    export interface FunctionConfigurationSyncConfigArgs {
        conflictDetection: pulumi.Input<string>;
        conflictHandler?: pulumi.Input<string>;
        lambdaConflictHandlerConfig?: pulumi.Input<inputs.appsync.FunctionConfigurationLambdaConflictHandlerConfigArgs>;
    }

    export interface GraphQLApiAdditionalAuthenticationProvidersArgs {
    }

    export interface GraphQLApiLambdaAuthorizerConfigArgs {
        authorizerResultTtlInSeconds?: pulumi.Input<number>;
        authorizerUri?: pulumi.Input<string>;
        identityValidationExpression?: pulumi.Input<string>;
    }

    export interface GraphQLApiLogConfigArgs {
        cloudWatchLogsRoleArn?: pulumi.Input<string>;
        excludeVerboseContent?: pulumi.Input<boolean>;
        fieldLogLevel?: pulumi.Input<string>;
    }

    export interface GraphQLApiOpenIDConnectConfigArgs {
        authTTL?: pulumi.Input<number>;
        clientId?: pulumi.Input<string>;
        iatTTL?: pulumi.Input<number>;
        issuer?: pulumi.Input<string>;
    }

    export interface GraphQLApiTagsArgs {
    }

    export interface GraphQLApiUserPoolConfigArgs {
        appIdClientRegex?: pulumi.Input<string>;
        awsRegion?: pulumi.Input<string>;
        defaultAction?: pulumi.Input<string>;
        userPoolId?: pulumi.Input<string>;
    }

    export interface ResolverCachingConfigArgs {
        cachingKeys?: pulumi.Input<pulumi.Input<string>[]>;
        ttl?: pulumi.Input<number>;
    }

    export interface ResolverLambdaConflictHandlerConfigArgs {
        lambdaConflictHandlerArn?: pulumi.Input<string>;
    }

    export interface ResolverPipelineConfigArgs {
        functions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ResolverSyncConfigArgs {
        conflictDetection: pulumi.Input<string>;
        conflictHandler?: pulumi.Input<string>;
        lambdaConflictHandlerConfig?: pulumi.Input<inputs.appsync.ResolverLambdaConflictHandlerConfigArgs>;
    }

}

export namespace aps {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface RuleGroupsNamespaceTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface WorkspaceTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace ask {
    export interface SkillAuthenticationConfigurationArgs {
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
        refreshToken: pulumi.Input<string>;
    }

    export interface SkillOverridesArgs {
        manifest?: any;
    }

    export interface SkillPackageArgs {
        overrides?: pulumi.Input<inputs.ask.SkillOverridesArgs>;
        s3Bucket: pulumi.Input<string>;
        s3BucketRole?: pulumi.Input<string>;
        s3Key: pulumi.Input<string>;
        s3ObjectVersion?: pulumi.Input<string>;
    }
}

export namespace athena {
    export interface DataCatalogTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface WorkGroupConfigurationArgs {
        bytesScannedCutoffPerQuery?: pulumi.Input<number>;
        enforceWorkGroupConfiguration?: pulumi.Input<boolean>;
        engineVersion?: pulumi.Input<inputs.athena.WorkGroupEngineVersionArgs>;
        publishCloudWatchMetricsEnabled?: pulumi.Input<boolean>;
        requesterPaysEnabled?: pulumi.Input<boolean>;
        resultConfiguration?: pulumi.Input<inputs.athena.WorkGroupResultConfigurationArgs>;
    }

    /**
     * The configuration information that will be updated for this workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, whether the workgroup settings override the client-side settings, and the data usage limit for the amount of bytes scanned per query, if it is specified. 
     */
    export interface WorkGroupConfigurationUpdatesArgs {
        bytesScannedCutoffPerQuery?: pulumi.Input<number>;
        enforceWorkGroupConfiguration?: pulumi.Input<boolean>;
        engineVersion?: pulumi.Input<inputs.athena.WorkGroupEngineVersionArgs>;
        publishCloudWatchMetricsEnabled?: pulumi.Input<boolean>;
        removeBytesScannedCutoffPerQuery?: pulumi.Input<boolean>;
        requesterPaysEnabled?: pulumi.Input<boolean>;
        resultConfigurationUpdates?: pulumi.Input<inputs.athena.WorkGroupResultConfigurationUpdatesArgs>;
    }

    /**
     * If query results are encrypted in Amazon S3, indicates the encryption option used (for example, SSE-KMS or CSE-KMS) and key information.
     */
    export interface WorkGroupEncryptionConfigurationArgs {
        encryptionOption: pulumi.Input<enums.athena.WorkGroupEncryptionOption>;
        kmsKey?: pulumi.Input<string>;
    }

    /**
     * The Athena engine version for running queries.
     */
    export interface WorkGroupEngineVersionArgs {
        effectiveEngineVersion?: pulumi.Input<string>;
        selectedEngineVersion?: pulumi.Input<string>;
    }

    /**
     * The location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.
     */
    export interface WorkGroupResultConfigurationArgs {
        encryptionConfiguration?: pulumi.Input<inputs.athena.WorkGroupEncryptionConfigurationArgs>;
        outputLocation?: pulumi.Input<string>;
    }

    /**
     * The result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results. 
     */
    export interface WorkGroupResultConfigurationUpdatesArgs {
        encryptionConfiguration?: pulumi.Input<inputs.athena.WorkGroupEncryptionConfigurationArgs>;
        outputLocation?: pulumi.Input<string>;
        removeEncryptionConfiguration?: pulumi.Input<boolean>;
        removeOutputLocation?: pulumi.Input<boolean>;
    }

    export interface WorkGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace auditmanager {
    /**
     * The AWS account associated with the assessment.
     */
    export interface AssessmentAWSAccountArgs {
        emailAddress?: pulumi.Input<string>;
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    /**
     * An AWS service such as Amazon S3, AWS CloudTrail, and so on.
     */
    export interface AssessmentAWSServiceArgs {
        serviceName?: pulumi.Input<string>;
    }

    /**
     * The destination in which evidence reports are stored for the specified assessment.
     */
    export interface AssessmentReportsDestinationArgs {
        destination?: pulumi.Input<string>;
        destinationType?: pulumi.Input<enums.auditmanager.AssessmentReportDestinationType>;
    }

    /**
     * The wrapper that contains AWS Audit Manager role information, such as the role type and IAM ARN.
     */
    export interface AssessmentRoleArgs {
        roleArn?: pulumi.Input<string>;
        roleType?: pulumi.Input<enums.auditmanager.AssessmentRoleType>;
    }

    /**
     * The wrapper that contains the AWS accounts and AWS services in scope for the assessment.
     */
    export interface AssessmentScopeArgs {
        /**
         * The AWS accounts included in scope.
         */
        awsAccounts?: pulumi.Input<pulumi.Input<inputs.auditmanager.AssessmentAWSAccountArgs>[]>;
        /**
         * The AWS services included in scope.
         */
        awsServices?: pulumi.Input<pulumi.Input<inputs.auditmanager.AssessmentAWSServiceArgs>[]>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface AssessmentTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace autoscaling {
    export interface AutoScalingGroupAcceleratorCountRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface AutoScalingGroupAcceleratorTotalMemoryMiBRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface AutoScalingGroupBaselineEbsBandwidthMbpsRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface AutoScalingGroupInstanceRequirementsArgs {
        acceleratorCount?: pulumi.Input<inputs.autoscaling.AutoScalingGroupAcceleratorCountRequestArgs>;
        acceleratorManufacturers?: pulumi.Input<pulumi.Input<string>[]>;
        acceleratorNames?: pulumi.Input<pulumi.Input<string>[]>;
        acceleratorTotalMemoryMiB?: pulumi.Input<inputs.autoscaling.AutoScalingGroupAcceleratorTotalMemoryMiBRequestArgs>;
        acceleratorTypes?: pulumi.Input<pulumi.Input<string>[]>;
        bareMetal?: pulumi.Input<string>;
        baselineEbsBandwidthMbps?: pulumi.Input<inputs.autoscaling.AutoScalingGroupBaselineEbsBandwidthMbpsRequestArgs>;
        burstablePerformance?: pulumi.Input<string>;
        cpuManufacturers?: pulumi.Input<pulumi.Input<string>[]>;
        excludedInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
        instanceGenerations?: pulumi.Input<pulumi.Input<string>[]>;
        localStorage?: pulumi.Input<string>;
        localStorageTypes?: pulumi.Input<pulumi.Input<string>[]>;
        memoryGiBPerVCpu?: pulumi.Input<inputs.autoscaling.AutoScalingGroupMemoryGiBPerVCpuRequestArgs>;
        memoryMiB?: pulumi.Input<inputs.autoscaling.AutoScalingGroupMemoryMiBRequestArgs>;
        networkInterfaceCount?: pulumi.Input<inputs.autoscaling.AutoScalingGroupNetworkInterfaceCountRequestArgs>;
        onDemandMaxPricePercentageOverLowestPrice?: pulumi.Input<number>;
        requireHibernateSupport?: pulumi.Input<boolean>;
        spotMaxPricePercentageOverLowestPrice?: pulumi.Input<number>;
        totalLocalStorageGB?: pulumi.Input<inputs.autoscaling.AutoScalingGroupTotalLocalStorageGBRequestArgs>;
        vCpuCount?: pulumi.Input<inputs.autoscaling.AutoScalingGroupVCpuCountRequestArgs>;
    }

    export interface AutoScalingGroupInstancesDistributionArgs {
        onDemandAllocationStrategy?: pulumi.Input<string>;
        onDemandBaseCapacity?: pulumi.Input<number>;
        onDemandPercentageAboveBaseCapacity?: pulumi.Input<number>;
        spotAllocationStrategy?: pulumi.Input<string>;
        spotInstancePools?: pulumi.Input<number>;
        spotMaxPrice?: pulumi.Input<string>;
    }

    export interface AutoScalingGroupLaunchTemplateArgs {
        launchTemplateSpecification: pulumi.Input<inputs.autoscaling.AutoScalingGroupLaunchTemplateSpecificationArgs>;
        overrides?: pulumi.Input<pulumi.Input<inputs.autoscaling.AutoScalingGroupLaunchTemplateOverridesArgs>[]>;
    }

    export interface AutoScalingGroupLaunchTemplateOverridesArgs {
        instanceRequirements?: pulumi.Input<inputs.autoscaling.AutoScalingGroupInstanceRequirementsArgs>;
        instanceType?: pulumi.Input<string>;
        launchTemplateSpecification?: pulumi.Input<inputs.autoscaling.AutoScalingGroupLaunchTemplateSpecificationArgs>;
        weightedCapacity?: pulumi.Input<string>;
    }

    export interface AutoScalingGroupLaunchTemplateSpecificationArgs {
        launchTemplateId?: pulumi.Input<string>;
        launchTemplateName?: pulumi.Input<string>;
        version: pulumi.Input<string>;
    }

    export interface AutoScalingGroupLifecycleHookSpecificationArgs {
        defaultResult?: pulumi.Input<string>;
        heartbeatTimeout?: pulumi.Input<number>;
        lifecycleHookName: pulumi.Input<string>;
        lifecycleTransition: pulumi.Input<string>;
        notificationMetadata?: pulumi.Input<string>;
        notificationTargetARN?: pulumi.Input<string>;
        roleARN?: pulumi.Input<string>;
    }

    export interface AutoScalingGroupMemoryGiBPerVCpuRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface AutoScalingGroupMemoryMiBRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface AutoScalingGroupMetricsCollectionArgs {
        granularity: pulumi.Input<string>;
        metrics?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AutoScalingGroupMixedInstancesPolicyArgs {
        instancesDistribution?: pulumi.Input<inputs.autoscaling.AutoScalingGroupInstancesDistributionArgs>;
        launchTemplate: pulumi.Input<inputs.autoscaling.AutoScalingGroupLaunchTemplateArgs>;
    }

    export interface AutoScalingGroupNetworkInterfaceCountRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface AutoScalingGroupNotificationConfigurationArgs {
        notificationTypes?: pulumi.Input<pulumi.Input<string>[]>;
        topicARN: pulumi.Input<string>;
    }

    export interface AutoScalingGroupTagPropertyArgs {
        key: pulumi.Input<string>;
        propagateAtLaunch: pulumi.Input<boolean>;
        value: pulumi.Input<string>;
    }

    export interface AutoScalingGroupTotalLocalStorageGBRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface AutoScalingGroupVCpuCountRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface LaunchConfigurationBlockDeviceArgs {
        deleteOnTermination?: pulumi.Input<boolean>;
        encrypted?: pulumi.Input<boolean>;
        iops?: pulumi.Input<number>;
        snapshotId?: pulumi.Input<string>;
        throughput?: pulumi.Input<number>;
        volumeSize?: pulumi.Input<number>;
        volumeType?: pulumi.Input<string>;
    }

    export interface LaunchConfigurationBlockDeviceMappingArgs {
        deviceName: pulumi.Input<string>;
        ebs?: pulumi.Input<inputs.autoscaling.LaunchConfigurationBlockDeviceArgs>;
        noDevice?: pulumi.Input<boolean>;
        virtualName?: pulumi.Input<string>;
    }

    export interface LaunchConfigurationMetadataOptionsArgs {
        httpEndpoint?: pulumi.Input<string>;
        httpPutResponseHopLimit?: pulumi.Input<number>;
        httpTokens?: pulumi.Input<string>;
    }

    export interface ScalingPolicyCustomizedMetricSpecificationArgs {
        dimensions?: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingPolicyMetricDimensionArgs>[]>;
        metricName: pulumi.Input<string>;
        namespace: pulumi.Input<string>;
        statistic: pulumi.Input<string>;
        unit?: pulumi.Input<string>;
    }

    export interface ScalingPolicyMetricDimensionArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ScalingPolicyPredefinedMetricSpecificationArgs {
        predefinedMetricType: pulumi.Input<string>;
        resourceLabel?: pulumi.Input<string>;
    }

    export interface ScalingPolicyPredictiveScalingConfigurationArgs {
        maxCapacityBreachBehavior?: pulumi.Input<string>;
        maxCapacityBuffer?: pulumi.Input<number>;
        metricSpecifications: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingPolicyPredictiveScalingMetricSpecificationArgs>[]>;
        mode?: pulumi.Input<string>;
        schedulingBufferTime?: pulumi.Input<number>;
    }

    export interface ScalingPolicyPredictiveScalingMetricSpecificationArgs {
        predefinedLoadMetricSpecification?: pulumi.Input<inputs.autoscaling.ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs>;
        predefinedMetricPairSpecification?: pulumi.Input<inputs.autoscaling.ScalingPolicyPredictiveScalingPredefinedMetricPairArgs>;
        predefinedScalingMetricSpecification?: pulumi.Input<inputs.autoscaling.ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs>;
        targetValue: pulumi.Input<number>;
    }

    export interface ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs {
        predefinedMetricType: pulumi.Input<string>;
        resourceLabel?: pulumi.Input<string>;
    }

    export interface ScalingPolicyPredictiveScalingPredefinedMetricPairArgs {
        predefinedMetricType: pulumi.Input<string>;
        resourceLabel?: pulumi.Input<string>;
    }

    export interface ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs {
        predefinedMetricType: pulumi.Input<string>;
        resourceLabel?: pulumi.Input<string>;
    }

    export interface ScalingPolicyStepAdjustmentArgs {
        metricIntervalLowerBound?: pulumi.Input<number>;
        metricIntervalUpperBound?: pulumi.Input<number>;
        scalingAdjustment: pulumi.Input<number>;
    }

    export interface ScalingPolicyTargetTrackingConfigurationArgs {
        customizedMetricSpecification?: pulumi.Input<inputs.autoscaling.ScalingPolicyCustomizedMetricSpecificationArgs>;
        disableScaleIn?: pulumi.Input<boolean>;
        predefinedMetricSpecification?: pulumi.Input<inputs.autoscaling.ScalingPolicyPredefinedMetricSpecificationArgs>;
        targetValue: pulumi.Input<number>;
    }
}

export namespace autoscalingplans {
    export interface ScalingPlanApplicationSourceArgs {
        cloudFormationStackARN?: pulumi.Input<string>;
        tagFilters?: pulumi.Input<pulumi.Input<inputs.autoscalingplans.ScalingPlanTagFilterArgs>[]>;
    }

    export interface ScalingPlanCustomizedLoadMetricSpecificationArgs {
        dimensions?: pulumi.Input<pulumi.Input<inputs.autoscalingplans.ScalingPlanMetricDimensionArgs>[]>;
        metricName: pulumi.Input<string>;
        namespace: pulumi.Input<string>;
        statistic: pulumi.Input<string>;
        unit?: pulumi.Input<string>;
    }

    export interface ScalingPlanCustomizedScalingMetricSpecificationArgs {
        dimensions?: pulumi.Input<pulumi.Input<inputs.autoscalingplans.ScalingPlanMetricDimensionArgs>[]>;
        metricName: pulumi.Input<string>;
        namespace: pulumi.Input<string>;
        statistic: pulumi.Input<string>;
        unit?: pulumi.Input<string>;
    }

    export interface ScalingPlanMetricDimensionArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ScalingPlanPredefinedLoadMetricSpecificationArgs {
        predefinedLoadMetricType: pulumi.Input<string>;
        resourceLabel?: pulumi.Input<string>;
    }

    export interface ScalingPlanPredefinedScalingMetricSpecificationArgs {
        predefinedScalingMetricType: pulumi.Input<string>;
        resourceLabel?: pulumi.Input<string>;
    }

    export interface ScalingPlanScalingInstructionArgs {
        customizedLoadMetricSpecification?: pulumi.Input<inputs.autoscalingplans.ScalingPlanCustomizedLoadMetricSpecificationArgs>;
        disableDynamicScaling?: pulumi.Input<boolean>;
        maxCapacity: pulumi.Input<number>;
        minCapacity: pulumi.Input<number>;
        predefinedLoadMetricSpecification?: pulumi.Input<inputs.autoscalingplans.ScalingPlanPredefinedLoadMetricSpecificationArgs>;
        predictiveScalingMaxCapacityBehavior?: pulumi.Input<string>;
        predictiveScalingMaxCapacityBuffer?: pulumi.Input<number>;
        predictiveScalingMode?: pulumi.Input<string>;
        resourceId: pulumi.Input<string>;
        scalableDimension: pulumi.Input<string>;
        scalingPolicyUpdateBehavior?: pulumi.Input<string>;
        scheduledActionBufferTime?: pulumi.Input<number>;
        serviceNamespace: pulumi.Input<string>;
        targetTrackingConfigurations: pulumi.Input<pulumi.Input<inputs.autoscalingplans.ScalingPlanTargetTrackingConfigurationArgs>[]>;
    }

    export interface ScalingPlanTagFilterArgs {
        key: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ScalingPlanTargetTrackingConfigurationArgs {
        customizedScalingMetricSpecification?: pulumi.Input<inputs.autoscalingplans.ScalingPlanCustomizedScalingMetricSpecificationArgs>;
        disableScaleIn?: pulumi.Input<boolean>;
        estimatedInstanceWarmup?: pulumi.Input<number>;
        predefinedScalingMetricSpecification?: pulumi.Input<inputs.autoscalingplans.ScalingPlanPredefinedScalingMetricSpecificationArgs>;
        scaleInCooldown?: pulumi.Input<number>;
        scaleOutCooldown?: pulumi.Input<number>;
        targetValue: pulumi.Input<number>;
    }
}

export namespace backup {
    export interface BackupPlanAdvancedBackupSettingResourceTypeArgs {
        backupOptions: any;
        resourceType: pulumi.Input<string>;
    }

    export interface BackupPlanBackupRuleResourceTypeArgs {
        completionWindowMinutes?: pulumi.Input<number>;
        copyActions?: pulumi.Input<pulumi.Input<inputs.backup.BackupPlanCopyActionResourceTypeArgs>[]>;
        enableContinuousBackup?: pulumi.Input<boolean>;
        lifecycle?: pulumi.Input<inputs.backup.BackupPlanLifecycleResourceTypeArgs>;
        recoveryPointTags?: any;
        ruleName: pulumi.Input<string>;
        scheduleExpression?: pulumi.Input<string>;
        startWindowMinutes?: pulumi.Input<number>;
        targetBackupVault: pulumi.Input<string>;
    }

    export interface BackupPlanCopyActionResourceTypeArgs {
        destinationBackupVaultArn: pulumi.Input<string>;
        lifecycle?: pulumi.Input<inputs.backup.BackupPlanLifecycleResourceTypeArgs>;
    }

    export interface BackupPlanLifecycleResourceTypeArgs {
        deleteAfterDays?: pulumi.Input<number>;
        moveToColdStorageAfterDays?: pulumi.Input<number>;
    }

    export interface BackupPlanResourceTypeArgs {
        advancedBackupSettings?: pulumi.Input<pulumi.Input<inputs.backup.BackupPlanAdvancedBackupSettingResourceTypeArgs>[]>;
        backupPlanName: pulumi.Input<string>;
        backupPlanRule: pulumi.Input<pulumi.Input<inputs.backup.BackupPlanBackupRuleResourceTypeArgs>[]>;
    }

    export interface BackupSelectionConditionParameterArgs {
        conditionKey?: pulumi.Input<string>;
        conditionValue?: pulumi.Input<string>;
    }

    export interface BackupSelectionConditionResourceTypeArgs {
        conditionKey: pulumi.Input<string>;
        conditionType: pulumi.Input<string>;
        conditionValue: pulumi.Input<string>;
    }

    export interface BackupSelectionResourceTypeArgs {
        conditions?: pulumi.Input<inputs.backup.BackupSelectionResourceTypeConditionsPropertiesArgs>;
        iamRoleArn: pulumi.Input<string>;
        listOfTags?: pulumi.Input<pulumi.Input<inputs.backup.BackupSelectionConditionResourceTypeArgs>[]>;
        notResources?: pulumi.Input<pulumi.Input<string>[]>;
        resources?: pulumi.Input<pulumi.Input<string>[]>;
        selectionName: pulumi.Input<string>;
    }

    export interface BackupSelectionResourceTypeConditionsPropertiesArgs {
        stringEquals?: pulumi.Input<pulumi.Input<inputs.backup.BackupSelectionConditionParameterArgs>[]>;
        stringLike?: pulumi.Input<pulumi.Input<inputs.backup.BackupSelectionConditionParameterArgs>[]>;
        stringNotEquals?: pulumi.Input<pulumi.Input<inputs.backup.BackupSelectionConditionParameterArgs>[]>;
        stringNotLike?: pulumi.Input<pulumi.Input<inputs.backup.BackupSelectionConditionParameterArgs>[]>;
    }

    export interface BackupVaultLockConfigurationTypeArgs {
        changeableForDays?: pulumi.Input<number>;
        maxRetentionDays?: pulumi.Input<number>;
        minRetentionDays: pulumi.Input<number>;
    }

    export interface BackupVaultNotificationObjectTypeArgs {
        backupVaultEvents: pulumi.Input<pulumi.Input<string>[]>;
        sNSTopicArn: pulumi.Input<string>;
    }

    export interface FrameworkControlArgs {
        /**
         * A list of ParameterName and ParameterValue pairs.
         */
        controlInputParameters?: pulumi.Input<pulumi.Input<inputs.backup.FrameworkControlInputParameterArgs>[]>;
        /**
         * The name of a control. This name is between 1 and 256 characters.
         */
        controlName: pulumi.Input<string>;
        /**
         * The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.
         */
        controlScope?: pulumi.Input<inputs.backup.FrameworkControlControlScopePropertiesArgs>;
    }

    /**
     * The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.
     */
    export interface FrameworkControlControlScopePropertiesArgs {
        /**
         * The ID of the only AWS resource that you want your control scope to contain.
         */
        complianceResourceIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
         */
        complianceResourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.backup.FrameworkTagArgs>[]>;
    }

    export interface FrameworkControlInputParameterArgs {
        parameterName: pulumi.Input<string>;
        parameterValue: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface FrameworkTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A structure that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.
     */
    export interface ReportDeliveryChannelPropertiesArgs {
        /**
         * A list of the format of your reports: CSV, JSON, or both. If not specified, the default format is CSV.
         */
        formats?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The unique name of the S3 bucket that receives your reports.
         */
        s3BucketName: pulumi.Input<string>;
        /**
         * The prefix for where AWS Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/prefix/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.
         */
        s3KeyPrefix?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ReportPlanTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key?: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Identifies the report template for the report. Reports are built using a report template.
     */
    export interface ReportSettingPropertiesArgs {
        /**
         * The Amazon Resource Names (ARNs) of the frameworks a report covers.
         */
        frameworkArns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Identifies the report template for the report. Reports are built using a report template. The report templates are: `BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT`
         */
        reportTemplate: pulumi.Input<string>;
    }
}

export namespace batch {
    export interface ComputeEnvironmentComputeResourcesArgs {
        allocationStrategy?: pulumi.Input<string>;
        bidPercentage?: pulumi.Input<number>;
        desiredvCpus?: pulumi.Input<number>;
        ec2Configuration?: pulumi.Input<pulumi.Input<inputs.batch.ComputeEnvironmentEc2ConfigurationObjectArgs>[]>;
        ec2KeyPair?: pulumi.Input<string>;
        imageId?: pulumi.Input<string>;
        instanceRole?: pulumi.Input<string>;
        instanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
        launchTemplate?: pulumi.Input<inputs.batch.ComputeEnvironmentLaunchTemplateSpecificationArgs>;
        maxvCpus: pulumi.Input<number>;
        minvCpus?: pulumi.Input<number>;
        placementGroup?: pulumi.Input<string>;
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        spotIamFleetRole?: pulumi.Input<string>;
        subnets: pulumi.Input<pulumi.Input<string>[]>;
        tags?: any;
        type: pulumi.Input<string>;
    }

    export interface ComputeEnvironmentEc2ConfigurationObjectArgs {
        imageIdOverride?: pulumi.Input<string>;
        imageType: pulumi.Input<string>;
    }

    export interface ComputeEnvironmentLaunchTemplateSpecificationArgs {
        launchTemplateId?: pulumi.Input<string>;
        launchTemplateName?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface JobDefinitionAuthorizationConfigArgs {
        accessPointId?: pulumi.Input<string>;
        iam?: pulumi.Input<string>;
    }

    export interface JobDefinitionContainerPropertiesArgs {
        command?: pulumi.Input<pulumi.Input<string>[]>;
        environment?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionEnvironmentArgs>[]>;
        executionRoleArn?: pulumi.Input<string>;
        fargatePlatformConfiguration?: pulumi.Input<inputs.batch.JobDefinitionFargatePlatformConfigurationArgs>;
        image: pulumi.Input<string>;
        instanceType?: pulumi.Input<string>;
        jobRoleArn?: pulumi.Input<string>;
        linuxParameters?: pulumi.Input<inputs.batch.JobDefinitionLinuxParametersArgs>;
        logConfiguration?: pulumi.Input<inputs.batch.JobDefinitionLogConfigurationArgs>;
        memory?: pulumi.Input<number>;
        mountPoints?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionMountPointsArgs>[]>;
        networkConfiguration?: pulumi.Input<inputs.batch.JobDefinitionNetworkConfigurationArgs>;
        privileged?: pulumi.Input<boolean>;
        readonlyRootFilesystem?: pulumi.Input<boolean>;
        resourceRequirements?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionResourceRequirementArgs>[]>;
        secrets?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionSecretArgs>[]>;
        ulimits?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionUlimitArgs>[]>;
        user?: pulumi.Input<string>;
        vcpus?: pulumi.Input<number>;
        volumes?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionVolumesArgs>[]>;
    }

    export interface JobDefinitionDeviceArgs {
        containerPath?: pulumi.Input<string>;
        hostPath?: pulumi.Input<string>;
        permissions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobDefinitionEfsVolumeConfigurationArgs {
        authorizationConfig?: pulumi.Input<inputs.batch.JobDefinitionAuthorizationConfigArgs>;
        fileSystemId: pulumi.Input<string>;
        rootDirectory?: pulumi.Input<string>;
        transitEncryption?: pulumi.Input<string>;
        transitEncryptionPort?: pulumi.Input<number>;
    }

    export interface JobDefinitionEnvironmentArgs {
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface JobDefinitionEvaluateOnExitArgs {
        action: pulumi.Input<string>;
        onExitCode?: pulumi.Input<string>;
        onReason?: pulumi.Input<string>;
        onStatusReason?: pulumi.Input<string>;
    }

    export interface JobDefinitionFargatePlatformConfigurationArgs {
        platformVersion?: pulumi.Input<string>;
    }

    export interface JobDefinitionLinuxParametersArgs {
        devices?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionDeviceArgs>[]>;
        initProcessEnabled?: pulumi.Input<boolean>;
        maxSwap?: pulumi.Input<number>;
        sharedMemorySize?: pulumi.Input<number>;
        swappiness?: pulumi.Input<number>;
        tmpfs?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionTmpfsArgs>[]>;
    }

    export interface JobDefinitionLogConfigurationArgs {
        logDriver: pulumi.Input<string>;
        options?: any;
        secretOptions?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionSecretArgs>[]>;
    }

    export interface JobDefinitionMountPointsArgs {
        containerPath?: pulumi.Input<string>;
        readOnly?: pulumi.Input<boolean>;
        sourceVolume?: pulumi.Input<string>;
    }

    export interface JobDefinitionNetworkConfigurationArgs {
        assignPublicIp?: pulumi.Input<string>;
    }

    export interface JobDefinitionNodePropertiesArgs {
        mainNode: pulumi.Input<number>;
        nodeRangeProperties: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionNodeRangePropertyArgs>[]>;
        numNodes: pulumi.Input<number>;
    }

    export interface JobDefinitionNodeRangePropertyArgs {
        container?: pulumi.Input<inputs.batch.JobDefinitionContainerPropertiesArgs>;
        targetNodes: pulumi.Input<string>;
    }

    export interface JobDefinitionResourceRequirementArgs {
        type?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface JobDefinitionRetryStrategyArgs {
        attempts?: pulumi.Input<number>;
        evaluateOnExit?: pulumi.Input<pulumi.Input<inputs.batch.JobDefinitionEvaluateOnExitArgs>[]>;
    }

    export interface JobDefinitionSecretArgs {
        name: pulumi.Input<string>;
        valueFrom: pulumi.Input<string>;
    }

    export interface JobDefinitionTimeoutArgs {
        attemptDurationSeconds?: pulumi.Input<number>;
    }

    export interface JobDefinitionTmpfsArgs {
        containerPath: pulumi.Input<string>;
        mountOptions?: pulumi.Input<pulumi.Input<string>[]>;
        size: pulumi.Input<number>;
    }

    export interface JobDefinitionUlimitArgs {
        hardLimit: pulumi.Input<number>;
        name: pulumi.Input<string>;
        softLimit: pulumi.Input<number>;
    }

    export interface JobDefinitionVolumesArgs {
        efsVolumeConfiguration?: pulumi.Input<inputs.batch.JobDefinitionEfsVolumeConfigurationArgs>;
        host?: pulumi.Input<inputs.batch.JobDefinitionVolumesHostArgs>;
        name?: pulumi.Input<string>;
    }

    export interface JobDefinitionVolumesHostArgs {
        sourcePath?: pulumi.Input<string>;
    }

    export interface JobQueueComputeEnvironmentOrderArgs {
        computeEnvironment: pulumi.Input<string>;
        order: pulumi.Input<number>;
    }

    /**
     * Fair Share Policy for the Job Queue.
     */
    export interface SchedulingPolicyFairsharePolicyArgs {
        computeReservation?: pulumi.Input<number>;
        shareDecaySeconds?: pulumi.Input<number>;
        /**
         * List of Share Attributes
         */
        shareDistribution?: pulumi.Input<pulumi.Input<inputs.batch.SchedulingPolicyShareAttributesArgs>[]>;
    }

    export interface SchedulingPolicyShareAttributesArgs {
        shareIdentifier?: pulumi.Input<string>;
        weightFactor?: pulumi.Input<number>;
    }
}

export namespace budgets {
    export interface BudgetCostTypesArgs {
        includeCredit?: pulumi.Input<boolean>;
        includeDiscount?: pulumi.Input<boolean>;
        includeOtherSubscription?: pulumi.Input<boolean>;
        includeRecurring?: pulumi.Input<boolean>;
        includeRefund?: pulumi.Input<boolean>;
        includeSubscription?: pulumi.Input<boolean>;
        includeSupport?: pulumi.Input<boolean>;
        includeTax?: pulumi.Input<boolean>;
        includeUpfront?: pulumi.Input<boolean>;
        useAmortized?: pulumi.Input<boolean>;
        useBlended?: pulumi.Input<boolean>;
    }

    export interface BudgetDataArgs {
        budgetLimit?: pulumi.Input<inputs.budgets.BudgetSpendArgs>;
        budgetName?: pulumi.Input<string>;
        budgetType: pulumi.Input<string>;
        costFilters?: any;
        costTypes?: pulumi.Input<inputs.budgets.BudgetCostTypesArgs>;
        plannedBudgetLimits?: any;
        timePeriod?: pulumi.Input<inputs.budgets.BudgetTimePeriodArgs>;
        timeUnit: pulumi.Input<string>;
    }

    export interface BudgetNotificationArgs {
        comparisonOperator: pulumi.Input<string>;
        notificationType: pulumi.Input<string>;
        threshold: pulumi.Input<number>;
        thresholdType?: pulumi.Input<string>;
    }

    export interface BudgetNotificationWithSubscribersArgs {
        notification: pulumi.Input<inputs.budgets.BudgetNotificationArgs>;
        subscribers: pulumi.Input<pulumi.Input<inputs.budgets.BudgetSubscriberArgs>[]>;
    }

    export interface BudgetSpendArgs {
        amount: pulumi.Input<number>;
        unit: pulumi.Input<string>;
    }

    export interface BudgetSubscriberArgs {
        address: pulumi.Input<string>;
        subscriptionType: pulumi.Input<string>;
    }

    export interface BudgetTimePeriodArgs {
        end?: pulumi.Input<string>;
        start?: pulumi.Input<string>;
    }

    export interface BudgetsActionActionThresholdArgs {
        type: pulumi.Input<enums.budgets.BudgetsActionActionThresholdType>;
        value: pulumi.Input<number>;
    }

    export interface BudgetsActionDefinitionArgs {
        iamActionDefinition?: pulumi.Input<inputs.budgets.BudgetsActionIamActionDefinitionArgs>;
        scpActionDefinition?: pulumi.Input<inputs.budgets.BudgetsActionScpActionDefinitionArgs>;
        ssmActionDefinition?: pulumi.Input<inputs.budgets.BudgetsActionSsmActionDefinitionArgs>;
    }

    export interface BudgetsActionIamActionDefinitionArgs {
        groups?: pulumi.Input<pulumi.Input<string>[]>;
        policyArn: pulumi.Input<string>;
        roles?: pulumi.Input<pulumi.Input<string>[]>;
        users?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BudgetsActionScpActionDefinitionArgs {
        policyId: pulumi.Input<string>;
        targetIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BudgetsActionSsmActionDefinitionArgs {
        instanceIds: pulumi.Input<pulumi.Input<string>[]>;
        region: pulumi.Input<string>;
        subtype: pulumi.Input<enums.budgets.BudgetsActionSsmActionDefinitionSubtype>;
    }

    export interface BudgetsActionSubscriberArgs {
        address: pulumi.Input<string>;
        type: pulumi.Input<enums.budgets.BudgetsActionSubscriberType>;
    }
}

export namespace cassandra {
    export interface KeyspaceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TableBillingModeArgs {
        mode: pulumi.Input<enums.cassandra.TableMode>;
        provisionedThroughput?: pulumi.Input<inputs.cassandra.TableProvisionedThroughputArgs>;
    }

    export interface TableClusteringKeyColumnArgs {
        column: pulumi.Input<inputs.cassandra.TableColumnArgs>;
        orderBy?: pulumi.Input<enums.cassandra.TableClusteringKeyColumnOrderBy>;
    }

    export interface TableColumnArgs {
        columnName: pulumi.Input<string>;
        columnType: pulumi.Input<string>;
    }

    /**
     * Represents the settings used to enable server-side encryption
     */
    export interface TableEncryptionSpecificationArgs {
        encryptionType: pulumi.Input<enums.cassandra.TableEncryptionType>;
        kmsKeyIdentifier?: pulumi.Input<string>;
    }

    /**
     * Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits
     */
    export interface TableProvisionedThroughputArgs {
        readCapacityUnits: pulumi.Input<number>;
        writeCapacityUnits: pulumi.Input<number>;
    }

    /**
     * A key-value pair to apply to the resource
     */
    export interface TableTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace ce {
    export interface AnomalySubscriptionSubscriberArgs {
        address: pulumi.Input<string>;
        status?: pulumi.Input<enums.ce.AnomalySubscriptionSubscriberStatus>;
        type: pulumi.Input<enums.ce.AnomalySubscriptionSubscriberType>;
    }
}

export namespace certificatemanager {
    export interface AccountExpiryEventsConfigurationArgs {
        daysBeforeExpiry?: pulumi.Input<number>;
    }

    export interface CertificateDomainValidationOptionArgs {
        domainName: pulumi.Input<string>;
        hostedZoneId?: pulumi.Input<string>;
        validationDomain?: pulumi.Input<string>;
    }

    export interface CertificateTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace cloud9 {
    export interface EnvironmentEC2RepositoryArgs {
        pathComponent: pulumi.Input<string>;
        repositoryUrl: pulumi.Input<string>;
    }

    export interface EnvironmentEC2TagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace cloudformation {
    /**
     * Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
     */
    export interface ManagedExecutionPropertiesArgs {
        active?: pulumi.Input<boolean>;
    }

    export interface ResourceVersionLoggingConfigArgs {
        /**
         * The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
         */
        logGroupName?: pulumi.Input<string>;
        /**
         * The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
         */
        logRoleArn?: pulumi.Input<string>;
    }

    export interface StackSetAutoDeploymentArgs {
        /**
         * If set to true, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * If set to true, stack resources are retained when an account is removed from a target organization or OU. If set to false, stack resources are deleted. Specify only if Enabled is set to True.
         */
        retainStacksOnAccountRemoval?: pulumi.Input<boolean>;
    }

    /**
     *  The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
     */
    export interface StackSetDeploymentTargetsArgs {
        /**
         * AWS accounts that you want to create stack instances in the specified Region(s) for.
         */
        accounts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
         */
        organizationalUnitIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The user-specified preferences for how AWS CloudFormation performs a stack set operation.
     */
    export interface StackSetOperationPreferencesArgs {
        failureToleranceCount?: pulumi.Input<number>;
        failureTolerancePercentage?: pulumi.Input<number>;
        maxConcurrentCount?: pulumi.Input<number>;
        maxConcurrentPercentage?: pulumi.Input<number>;
        regionConcurrencyType?: pulumi.Input<enums.cloudformation.StackSetRegionConcurrencyType>;
        regionOrder?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface StackSetParameterArgs {
        /**
         * The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
         */
        parameterKey: pulumi.Input<string>;
        /**
         * The input value associated with the parameter.
         */
        parameterValue: pulumi.Input<string>;
    }

    /**
     * Stack instances in some specific accounts and Regions.
     */
    export interface StackSetStackInstancesArgs {
        deploymentTargets: pulumi.Input<inputs.cloudformation.StackSetDeploymentTargetsArgs>;
        /**
         * A list of stack set parameters whose values you want to override in the selected stack instances.
         */
        parameterOverrides?: pulumi.Input<pulumi.Input<inputs.cloudformation.StackSetParameterArgs>[]>;
        /**
         * The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
         */
        regions: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Tag type enables you to specify a key-value pair that can be used to store information about an AWS CloudFormation StackSet.
     */
    export interface StackSetTagArgs {
        /**
         * A string used to identify this tag. You can specify a maximum of 127 characters for a tag key.
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.
         */
        value: pulumi.Input<string>;
    }

    export interface StackTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TypeActivationLoggingConfigArgs {
        /**
         * The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
         */
        logGroupName?: pulumi.Input<string>;
        /**
         * The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
         */
        logRoleArn?: pulumi.Input<string>;
    }
}

export namespace cloudfront {
    export interface CachePolicyConfigArgs {
        comment?: pulumi.Input<string>;
        defaultTTL: pulumi.Input<number>;
        maxTTL: pulumi.Input<number>;
        minTTL: pulumi.Input<number>;
        name: pulumi.Input<string>;
        parametersInCacheKeyAndForwardedToOrigin: pulumi.Input<inputs.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginArgs>;
    }

    export interface CachePolicyCookiesConfigArgs {
        cookieBehavior: pulumi.Input<string>;
        cookies?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CachePolicyHeadersConfigArgs {
        headerBehavior: pulumi.Input<string>;
        headers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CachePolicyParametersInCacheKeyAndForwardedToOriginArgs {
        cookiesConfig: pulumi.Input<inputs.cloudfront.CachePolicyCookiesConfigArgs>;
        enableAcceptEncodingBrotli?: pulumi.Input<boolean>;
        enableAcceptEncodingGzip: pulumi.Input<boolean>;
        headersConfig: pulumi.Input<inputs.cloudfront.CachePolicyHeadersConfigArgs>;
        queryStringsConfig: pulumi.Input<inputs.cloudfront.CachePolicyQueryStringsConfigArgs>;
    }

    export interface CachePolicyQueryStringsConfigArgs {
        queryStringBehavior: pulumi.Input<string>;
        queryStrings?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CloudFrontOriginAccessIdentityConfigArgs {
        comment: pulumi.Input<string>;
    }

    export interface DistributionCacheBehaviorArgs {
        allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
        cachePolicyId?: pulumi.Input<string>;
        cachedMethods?: pulumi.Input<pulumi.Input<string>[]>;
        compress?: pulumi.Input<boolean>;
        defaultTTL?: pulumi.Input<number>;
        fieldLevelEncryptionId?: pulumi.Input<string>;
        forwardedValues?: pulumi.Input<inputs.cloudfront.DistributionForwardedValuesArgs>;
        functionAssociations?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionFunctionAssociationArgs>[]>;
        lambdaFunctionAssociations?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionLambdaFunctionAssociationArgs>[]>;
        maxTTL?: pulumi.Input<number>;
        minTTL?: pulumi.Input<number>;
        originRequestPolicyId?: pulumi.Input<string>;
        pathPattern: pulumi.Input<string>;
        realtimeLogConfigArn?: pulumi.Input<string>;
        responseHeadersPolicyId?: pulumi.Input<string>;
        smoothStreaming?: pulumi.Input<boolean>;
        targetOriginId: pulumi.Input<string>;
        trustedKeyGroups?: pulumi.Input<pulumi.Input<string>[]>;
        trustedSigners?: pulumi.Input<pulumi.Input<string>[]>;
        viewerProtocolPolicy: pulumi.Input<string>;
    }

    export interface DistributionConfigArgs {
        aliases?: pulumi.Input<pulumi.Input<string>[]>;
        cNAMEs?: pulumi.Input<pulumi.Input<string>[]>;
        cacheBehaviors?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionCacheBehaviorArgs>[]>;
        comment?: pulumi.Input<string>;
        customErrorResponses?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionCustomErrorResponseArgs>[]>;
        customOrigin?: pulumi.Input<inputs.cloudfront.DistributionLegacyCustomOriginArgs>;
        defaultCacheBehavior?: pulumi.Input<inputs.cloudfront.DistributionDefaultCacheBehaviorArgs>;
        defaultRootObject?: pulumi.Input<string>;
        enabled: pulumi.Input<boolean>;
        httpVersion?: pulumi.Input<string>;
        iPV6Enabled?: pulumi.Input<boolean>;
        logging?: pulumi.Input<inputs.cloudfront.DistributionLoggingArgs>;
        originGroups?: pulumi.Input<inputs.cloudfront.DistributionOriginGroupsArgs>;
        origins?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOriginArgs>[]>;
        priceClass?: pulumi.Input<string>;
        restrictions?: pulumi.Input<inputs.cloudfront.DistributionRestrictionsArgs>;
        s3Origin?: pulumi.Input<inputs.cloudfront.DistributionLegacyS3OriginArgs>;
        viewerCertificate?: pulumi.Input<inputs.cloudfront.DistributionViewerCertificateArgs>;
        webACLId?: pulumi.Input<string>;
    }

    export interface DistributionCookiesArgs {
        forward: pulumi.Input<string>;
        whitelistedNames?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DistributionCustomErrorResponseArgs {
        errorCachingMinTTL?: pulumi.Input<number>;
        errorCode: pulumi.Input<number>;
        responseCode?: pulumi.Input<number>;
        responsePagePath?: pulumi.Input<string>;
    }

    export interface DistributionCustomOriginConfigArgs {
        hTTPPort?: pulumi.Input<number>;
        hTTPSPort?: pulumi.Input<number>;
        originKeepaliveTimeout?: pulumi.Input<number>;
        originProtocolPolicy: pulumi.Input<string>;
        originReadTimeout?: pulumi.Input<number>;
        originSSLProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DistributionDefaultCacheBehaviorArgs {
        allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
        cachePolicyId?: pulumi.Input<string>;
        cachedMethods?: pulumi.Input<pulumi.Input<string>[]>;
        compress?: pulumi.Input<boolean>;
        defaultTTL?: pulumi.Input<number>;
        fieldLevelEncryptionId?: pulumi.Input<string>;
        forwardedValues?: pulumi.Input<inputs.cloudfront.DistributionForwardedValuesArgs>;
        functionAssociations?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionFunctionAssociationArgs>[]>;
        lambdaFunctionAssociations?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionLambdaFunctionAssociationArgs>[]>;
        maxTTL?: pulumi.Input<number>;
        minTTL?: pulumi.Input<number>;
        originRequestPolicyId?: pulumi.Input<string>;
        realtimeLogConfigArn?: pulumi.Input<string>;
        responseHeadersPolicyId?: pulumi.Input<string>;
        smoothStreaming?: pulumi.Input<boolean>;
        targetOriginId: pulumi.Input<string>;
        trustedKeyGroups?: pulumi.Input<pulumi.Input<string>[]>;
        trustedSigners?: pulumi.Input<pulumi.Input<string>[]>;
        viewerProtocolPolicy: pulumi.Input<string>;
    }

    export interface DistributionForwardedValuesArgs {
        cookies?: pulumi.Input<inputs.cloudfront.DistributionCookiesArgs>;
        headers?: pulumi.Input<pulumi.Input<string>[]>;
        queryString: pulumi.Input<boolean>;
        queryStringCacheKeys?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DistributionFunctionAssociationArgs {
        eventType?: pulumi.Input<string>;
        functionARN?: pulumi.Input<string>;
    }

    export interface DistributionGeoRestrictionArgs {
        locations?: pulumi.Input<pulumi.Input<string>[]>;
        restrictionType: pulumi.Input<string>;
    }

    export interface DistributionLambdaFunctionAssociationArgs {
        eventType?: pulumi.Input<string>;
        includeBody?: pulumi.Input<boolean>;
        lambdaFunctionARN?: pulumi.Input<string>;
    }

    export interface DistributionLegacyCustomOriginArgs {
        dNSName: pulumi.Input<string>;
        hTTPPort?: pulumi.Input<number>;
        hTTPSPort?: pulumi.Input<number>;
        originProtocolPolicy: pulumi.Input<string>;
        originSSLProtocols: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DistributionLegacyS3OriginArgs {
        dNSName: pulumi.Input<string>;
        originAccessIdentity?: pulumi.Input<string>;
    }

    export interface DistributionLoggingArgs {
        bucket: pulumi.Input<string>;
        includeCookies?: pulumi.Input<boolean>;
        prefix?: pulumi.Input<string>;
    }

    export interface DistributionOriginArgs {
        connectionAttempts?: pulumi.Input<number>;
        connectionTimeout?: pulumi.Input<number>;
        customOriginConfig?: pulumi.Input<inputs.cloudfront.DistributionCustomOriginConfigArgs>;
        domainName: pulumi.Input<string>;
        id: pulumi.Input<string>;
        originCustomHeaders?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOriginCustomHeaderArgs>[]>;
        originPath?: pulumi.Input<string>;
        originShield?: pulumi.Input<inputs.cloudfront.DistributionOriginShieldArgs>;
        s3OriginConfig?: pulumi.Input<inputs.cloudfront.DistributionS3OriginConfigArgs>;
    }

    export interface DistributionOriginCustomHeaderArgs {
        headerName: pulumi.Input<string>;
        headerValue: pulumi.Input<string>;
    }

    export interface DistributionOriginGroupArgs {
        failoverCriteria: pulumi.Input<inputs.cloudfront.DistributionOriginGroupFailoverCriteriaArgs>;
        id: pulumi.Input<string>;
        members: pulumi.Input<inputs.cloudfront.DistributionOriginGroupMembersArgs>;
    }

    export interface DistributionOriginGroupFailoverCriteriaArgs {
        statusCodes: pulumi.Input<inputs.cloudfront.DistributionStatusCodesArgs>;
    }

    export interface DistributionOriginGroupMemberArgs {
        originId: pulumi.Input<string>;
    }

    export interface DistributionOriginGroupMembersArgs {
        items: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOriginGroupMemberArgs>[]>;
        quantity: pulumi.Input<number>;
    }

    export interface DistributionOriginGroupsArgs {
        items?: pulumi.Input<pulumi.Input<inputs.cloudfront.DistributionOriginGroupArgs>[]>;
        quantity: pulumi.Input<number>;
    }

    export interface DistributionOriginShieldArgs {
        enabled?: pulumi.Input<boolean>;
        originShieldRegion?: pulumi.Input<string>;
    }

    export interface DistributionRestrictionsArgs {
        geoRestriction: pulumi.Input<inputs.cloudfront.DistributionGeoRestrictionArgs>;
    }

    export interface DistributionS3OriginConfigArgs {
        originAccessIdentity?: pulumi.Input<string>;
    }

    export interface DistributionStatusCodesArgs {
        items: pulumi.Input<pulumi.Input<number>[]>;
        quantity: pulumi.Input<number>;
    }

    export interface DistributionTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DistributionViewerCertificateArgs {
        acmCertificateArn?: pulumi.Input<string>;
        cloudFrontDefaultCertificate?: pulumi.Input<boolean>;
        iamCertificateId?: pulumi.Input<string>;
        minimumProtocolVersion?: pulumi.Input<string>;
        sslSupportMethod?: pulumi.Input<string>;
    }

    export interface FunctionConfigArgs {
        comment: pulumi.Input<string>;
        runtime: pulumi.Input<string>;
    }

    export interface FunctionMetadataArgs {
        functionARN?: pulumi.Input<string>;
    }

    export interface KeyGroupConfigArgs {
        comment?: pulumi.Input<string>;
        items: pulumi.Input<pulumi.Input<string>[]>;
        name: pulumi.Input<string>;
    }

    export interface OriginRequestPolicyConfigArgs {
        comment?: pulumi.Input<string>;
        cookiesConfig: pulumi.Input<inputs.cloudfront.OriginRequestPolicyCookiesConfigArgs>;
        headersConfig: pulumi.Input<inputs.cloudfront.OriginRequestPolicyHeadersConfigArgs>;
        name: pulumi.Input<string>;
        queryStringsConfig: pulumi.Input<inputs.cloudfront.OriginRequestPolicyQueryStringsConfigArgs>;
    }

    export interface OriginRequestPolicyCookiesConfigArgs {
        cookieBehavior: pulumi.Input<string>;
        cookies?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface OriginRequestPolicyHeadersConfigArgs {
        headerBehavior: pulumi.Input<string>;
        headers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface OriginRequestPolicyQueryStringsConfigArgs {
        queryStringBehavior: pulumi.Input<string>;
        queryStrings?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PublicKeyConfigArgs {
        callerReference: pulumi.Input<string>;
        comment?: pulumi.Input<string>;
        encodedKey: pulumi.Input<string>;
        name: pulumi.Input<string>;
    }

    export interface RealtimeLogConfigEndPointArgs {
        kinesisStreamConfig: pulumi.Input<inputs.cloudfront.RealtimeLogConfigKinesisStreamConfigArgs>;
        streamType: pulumi.Input<string>;
    }

    export interface RealtimeLogConfigKinesisStreamConfigArgs {
        roleArn: pulumi.Input<string>;
        streamArn: pulumi.Input<string>;
    }

    export interface ResponseHeadersPolicyAccessControlAllowHeadersArgs {
        items: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ResponseHeadersPolicyAccessControlAllowMethodsArgs {
        items: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ResponseHeadersPolicyAccessControlAllowOriginsArgs {
        items: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ResponseHeadersPolicyAccessControlExposeHeadersArgs {
        items: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ResponseHeadersPolicyConfigArgs {
        comment?: pulumi.Input<string>;
        corsConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyCorsConfigArgs>;
        customHeadersConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyCustomHeadersConfigArgs>;
        name: pulumi.Input<string>;
        securityHeadersConfig?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicySecurityHeadersConfigArgs>;
    }

    export interface ResponseHeadersPolicyContentSecurityPolicyArgs {
        contentSecurityPolicy: pulumi.Input<string>;
        override: pulumi.Input<boolean>;
    }

    export interface ResponseHeadersPolicyContentTypeOptionsArgs {
        override: pulumi.Input<boolean>;
    }

    export interface ResponseHeadersPolicyCorsConfigArgs {
        accessControlAllowCredentials: pulumi.Input<boolean>;
        accessControlAllowHeaders: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyAccessControlAllowHeadersArgs>;
        accessControlAllowMethods: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyAccessControlAllowMethodsArgs>;
        accessControlAllowOrigins: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyAccessControlAllowOriginsArgs>;
        accessControlExposeHeaders?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyAccessControlExposeHeadersArgs>;
        accessControlMaxAgeSec?: pulumi.Input<number>;
        originOverride: pulumi.Input<boolean>;
    }

    export interface ResponseHeadersPolicyCustomHeaderArgs {
        header: pulumi.Input<string>;
        override: pulumi.Input<boolean>;
        value: pulumi.Input<string>;
    }

    export interface ResponseHeadersPolicyCustomHeadersConfigArgs {
        items: pulumi.Input<pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyCustomHeaderArgs>[]>;
    }

    export interface ResponseHeadersPolicyFrameOptionsArgs {
        frameOption: pulumi.Input<string>;
        override: pulumi.Input<boolean>;
    }

    export interface ResponseHeadersPolicyReferrerPolicyArgs {
        override: pulumi.Input<boolean>;
        referrerPolicy: pulumi.Input<string>;
    }

    export interface ResponseHeadersPolicySecurityHeadersConfigArgs {
        contentSecurityPolicy?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyContentSecurityPolicyArgs>;
        contentTypeOptions?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyContentTypeOptionsArgs>;
        frameOptions?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyFrameOptionsArgs>;
        referrerPolicy?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyReferrerPolicyArgs>;
        strictTransportSecurity?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyStrictTransportSecurityArgs>;
        xSSProtection?: pulumi.Input<inputs.cloudfront.ResponseHeadersPolicyXSSProtectionArgs>;
    }

    export interface ResponseHeadersPolicyStrictTransportSecurityArgs {
        accessControlMaxAgeSec: pulumi.Input<number>;
        includeSubdomains?: pulumi.Input<boolean>;
        override: pulumi.Input<boolean>;
        preload?: pulumi.Input<boolean>;
    }

    export interface ResponseHeadersPolicyXSSProtectionArgs {
        modeBlock?: pulumi.Input<boolean>;
        override: pulumi.Input<boolean>;
        protection: pulumi.Input<boolean>;
        reportUri?: pulumi.Input<string>;
    }

    export interface StreamingDistributionConfigArgs {
        aliases?: pulumi.Input<pulumi.Input<string>[]>;
        comment: pulumi.Input<string>;
        enabled: pulumi.Input<boolean>;
        logging?: pulumi.Input<inputs.cloudfront.StreamingDistributionLoggingArgs>;
        priceClass?: pulumi.Input<string>;
        s3Origin: pulumi.Input<inputs.cloudfront.StreamingDistributionS3OriginArgs>;
        trustedSigners: pulumi.Input<inputs.cloudfront.StreamingDistributionTrustedSignersArgs>;
    }

    export interface StreamingDistributionLoggingArgs {
        bucket: pulumi.Input<string>;
        enabled: pulumi.Input<boolean>;
        prefix: pulumi.Input<string>;
    }

    export interface StreamingDistributionS3OriginArgs {
        domainName: pulumi.Input<string>;
        originAccessIdentity: pulumi.Input<string>;
    }

    export interface StreamingDistributionTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface StreamingDistributionTrustedSignersArgs {
        awsAccountNumbers?: pulumi.Input<pulumi.Input<string>[]>;
        enabled: pulumi.Input<boolean>;
    }
}

export namespace cloudtrail {
    /**
     * CloudTrail supports data event logging for Amazon S3 objects and AWS Lambda functions. You can specify up to 250 resources for an individual event selector, but the total number of data resources cannot exceed 250 across all event selectors in a trail. This limit does not apply if you configure resource logging for all data events.
     */
    export interface TrailDataResourceArgs {
        /**
         * The resource type in which you want to log data events. You can specify AWS::S3::Object or AWS::Lambda::Function resources.
         */
        type: pulumi.Input<string>;
        /**
         * An array of Amazon Resource Name (ARN) strings or partial ARN strings for the specified objects.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The type of email sending events to publish to the event destination.
     */
    export interface TrailEventSelectorArgs {
        dataResources?: pulumi.Input<pulumi.Input<inputs.cloudtrail.TrailDataResourceArgs>[]>;
        /**
         * An optional list of service event sources from which you do not want management events to be logged on your trail. In this release, the list can be empty (disables the filter), or it can filter out AWS Key Management Service events by containing "kms.amazonaws.com". By default, ExcludeManagementEventSources is empty, and AWS KMS events are included in events that are logged to your trail.
         */
        excludeManagementEventSources?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specify if you want your event selector to include management events for your trail.
         */
        includeManagementEvents?: pulumi.Input<boolean>;
        /**
         * Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput is a read-only API operation and RunInstances is a write-only API operation.
         */
        readWriteType?: pulumi.Input<enums.cloudtrail.TrailEventSelectorReadWriteType>;
    }

    /**
     * A string that contains insight types that are logged on a trail.
     */
    export interface TrailInsightSelectorArgs {
        /**
         * The type of insight to log on a trail.
         */
        insightType?: pulumi.Input<string>;
    }

    /**
     * An arbitrary set of tags (key-value pairs) for this trail.
     */
    export interface TrailTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace cloudwatch {
    export interface AlarmDimensionArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface AlarmMetricArgs {
        dimensions?: pulumi.Input<pulumi.Input<inputs.cloudwatch.AlarmDimensionArgs>[]>;
        metricName?: pulumi.Input<string>;
        namespace?: pulumi.Input<string>;
    }

    export interface AlarmMetricDataQueryArgs {
        accountId?: pulumi.Input<string>;
        expression?: pulumi.Input<string>;
        id: pulumi.Input<string>;
        label?: pulumi.Input<string>;
        metricStat?: pulumi.Input<inputs.cloudwatch.AlarmMetricStatArgs>;
        period?: pulumi.Input<number>;
        returnData?: pulumi.Input<boolean>;
    }

    export interface AlarmMetricStatArgs {
        metric: pulumi.Input<inputs.cloudwatch.AlarmMetricArgs>;
        period: pulumi.Input<number>;
        stat: pulumi.Input<string>;
        unit?: pulumi.Input<string>;
    }

    export interface AnomalyDetectorConfigurationArgs {
        excludedTimeRanges?: pulumi.Input<pulumi.Input<inputs.cloudwatch.AnomalyDetectorRangeArgs>[]>;
        metricTimeZone?: pulumi.Input<string>;
    }

    export interface AnomalyDetectorDimensionArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface AnomalyDetectorMetricArgs {
        dimensions?: pulumi.Input<pulumi.Input<inputs.cloudwatch.AnomalyDetectorDimensionArgs>[]>;
        metricName: pulumi.Input<string>;
        namespace: pulumi.Input<string>;
    }

    export interface AnomalyDetectorMetricDataQueryArgs {
        accountId?: pulumi.Input<string>;
        expression?: pulumi.Input<string>;
        id: pulumi.Input<string>;
        label?: pulumi.Input<string>;
        metricStat?: pulumi.Input<inputs.cloudwatch.AnomalyDetectorMetricStatArgs>;
        period?: pulumi.Input<number>;
        returnData?: pulumi.Input<boolean>;
    }

    export interface AnomalyDetectorMetricMathAnomalyDetectorArgs {
        metricDataQueries?: pulumi.Input<pulumi.Input<inputs.cloudwatch.AnomalyDetectorMetricDataQueryArgs>[]>;
    }

    export interface AnomalyDetectorMetricStatArgs {
        metric: pulumi.Input<inputs.cloudwatch.AnomalyDetectorMetricArgs>;
        period: pulumi.Input<number>;
        stat: pulumi.Input<string>;
        unit?: pulumi.Input<string>;
    }

    export interface AnomalyDetectorRangeArgs {
        endTime: pulumi.Input<string>;
        startTime: pulumi.Input<string>;
    }

    export interface AnomalyDetectorSingleMetricAnomalyDetectorArgs {
        dimensions?: pulumi.Input<pulumi.Input<inputs.cloudwatch.AnomalyDetectorDimensionArgs>[]>;
        metricName?: pulumi.Input<string>;
        namespace?: pulumi.Input<string>;
        stat?: pulumi.Input<string>;
    }

    export interface InsightRuleTagsArgs {
    }

    /**
     * This structure defines the metrics that will be streamed.
     */
    export interface MetricStreamFilterArgs {
        /**
         * Only metrics with Namespace matching this value will be streamed.
         */
        namespace: pulumi.Input<string>;
    }

    /**
     * Metadata that you can assign to a Metric Stream, consisting of a key-value pair.
     */
    export interface MetricStreamTagArgs {
        /**
         * A unique identifier for the tag.
         */
        key: pulumi.Input<string>;
        /**
         * An optional string, which you can use to describe or define the tag.
         */
        value?: pulumi.Input<string>;
    }
}

export namespace codeartifact {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface DomainTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface RepositoryTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace codebuild {
    export interface ProjectArtifactsArgs {
        artifactIdentifier?: pulumi.Input<string>;
        encryptionDisabled?: pulumi.Input<boolean>;
        location?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        namespaceType?: pulumi.Input<string>;
        overrideArtifactName?: pulumi.Input<boolean>;
        packaging?: pulumi.Input<string>;
        path?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface ProjectBatchRestrictionsArgs {
        computeTypesAllowed?: pulumi.Input<pulumi.Input<string>[]>;
        maximumBuildsAllowed?: pulumi.Input<number>;
    }

    export interface ProjectBuildBatchConfigArgs {
        batchReportMode?: pulumi.Input<string>;
        combineArtifacts?: pulumi.Input<boolean>;
        restrictions?: pulumi.Input<inputs.codebuild.ProjectBatchRestrictionsArgs>;
        serviceRole?: pulumi.Input<string>;
        timeoutInMins?: pulumi.Input<number>;
    }

    export interface ProjectBuildStatusConfigArgs {
        context?: pulumi.Input<string>;
        targetUrl?: pulumi.Input<string>;
    }

    export interface ProjectCacheArgs {
        location?: pulumi.Input<string>;
        modes?: pulumi.Input<pulumi.Input<string>[]>;
        type: pulumi.Input<string>;
    }

    export interface ProjectCloudWatchLogsConfigArgs {
        groupName?: pulumi.Input<string>;
        status: pulumi.Input<string>;
        streamName?: pulumi.Input<string>;
    }

    export interface ProjectEnvironmentArgs {
        certificate?: pulumi.Input<string>;
        computeType: pulumi.Input<string>;
        environmentVariables?: pulumi.Input<pulumi.Input<inputs.codebuild.ProjectEnvironmentVariableArgs>[]>;
        image: pulumi.Input<string>;
        imagePullCredentialsType?: pulumi.Input<string>;
        privilegedMode?: pulumi.Input<boolean>;
        registryCredential?: pulumi.Input<inputs.codebuild.ProjectRegistryCredentialArgs>;
        type: pulumi.Input<string>;
    }

    export interface ProjectEnvironmentVariableArgs {
        name: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ProjectFileSystemLocationArgs {
        identifier: pulumi.Input<string>;
        location: pulumi.Input<string>;
        mountOptions?: pulumi.Input<string>;
        mountPoint: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface ProjectFilterGroupArgs {
    }

    export interface ProjectGitSubmodulesConfigArgs {
        fetchSubmodules: pulumi.Input<boolean>;
    }

    export interface ProjectLogsConfigArgs {
        cloudWatchLogs?: pulumi.Input<inputs.codebuild.ProjectCloudWatchLogsConfigArgs>;
        s3Logs?: pulumi.Input<inputs.codebuild.ProjectS3LogsConfigArgs>;
    }

    export interface ProjectRegistryCredentialArgs {
        credential: pulumi.Input<string>;
        credentialProvider: pulumi.Input<string>;
    }

    export interface ProjectS3LogsConfigArgs {
        encryptionDisabled?: pulumi.Input<boolean>;
        location?: pulumi.Input<string>;
        status: pulumi.Input<string>;
    }

    export interface ProjectSourceArgs {
        auth?: pulumi.Input<inputs.codebuild.ProjectSourceAuthArgs>;
        buildSpec?: pulumi.Input<string>;
        buildStatusConfig?: pulumi.Input<inputs.codebuild.ProjectBuildStatusConfigArgs>;
        gitCloneDepth?: pulumi.Input<number>;
        gitSubmodulesConfig?: pulumi.Input<inputs.codebuild.ProjectGitSubmodulesConfigArgs>;
        insecureSsl?: pulumi.Input<boolean>;
        location?: pulumi.Input<string>;
        reportBuildStatus?: pulumi.Input<boolean>;
        sourceIdentifier?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface ProjectSourceAuthArgs {
        resource?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface ProjectSourceVersionArgs {
        sourceIdentifier: pulumi.Input<string>;
        sourceVersion?: pulumi.Input<string>;
    }

    export interface ProjectTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ProjectTriggersArgs {
        buildType?: pulumi.Input<string>;
        filterGroups?: pulumi.Input<pulumi.Input<inputs.codebuild.ProjectFilterGroupArgs>[]>;
        webhook?: pulumi.Input<boolean>;
    }

    export interface ProjectVpcConfigArgs {
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        subnets?: pulumi.Input<pulumi.Input<string>[]>;
        vpcId?: pulumi.Input<string>;
    }

    export interface ReportGroupReportExportConfigArgs {
        exportConfigType: pulumi.Input<string>;
        s3Destination?: pulumi.Input<inputs.codebuild.ReportGroupS3ReportExportConfigArgs>;
    }

    export interface ReportGroupS3ReportExportConfigArgs {
        bucket: pulumi.Input<string>;
        bucketOwner?: pulumi.Input<string>;
        encryptionDisabled?: pulumi.Input<boolean>;
        encryptionKey?: pulumi.Input<string>;
        packaging?: pulumi.Input<string>;
        path?: pulumi.Input<string>;
    }

    export interface ReportGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace codecommit {
    export interface RepositoryCodeArgs {
        branchName?: pulumi.Input<string>;
        s3: pulumi.Input<inputs.codecommit.RepositoryS3Args>;
    }

    export interface RepositoryS3Args {
        bucket: pulumi.Input<string>;
        key: pulumi.Input<string>;
        objectVersion?: pulumi.Input<string>;
    }

    export interface RepositoryTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RepositoryTriggerArgs {
        branches?: pulumi.Input<pulumi.Input<string>[]>;
        customData?: pulumi.Input<string>;
        destinationArn: pulumi.Input<string>;
        events: pulumi.Input<pulumi.Input<string>[]>;
        name: pulumi.Input<string>;
    }
}

export namespace codedeploy {
    export interface ApplicationTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DeploymentConfigMinimumHealthyHostsArgs {
        type: pulumi.Input<string>;
        value: pulumi.Input<number>;
    }

    export interface DeploymentConfigTimeBasedCanaryArgs {
        canaryInterval: pulumi.Input<number>;
        canaryPercentage: pulumi.Input<number>;
    }

    export interface DeploymentConfigTimeBasedLinearArgs {
        linearInterval: pulumi.Input<number>;
        linearPercentage: pulumi.Input<number>;
    }

    export interface DeploymentConfigTrafficRoutingConfigArgs {
        timeBasedCanary?: pulumi.Input<inputs.codedeploy.DeploymentConfigTimeBasedCanaryArgs>;
        timeBasedLinear?: pulumi.Input<inputs.codedeploy.DeploymentConfigTimeBasedLinearArgs>;
        type: pulumi.Input<string>;
    }

    export interface DeploymentGroupAlarmArgs {
        name?: pulumi.Input<string>;
    }

    export interface DeploymentGroupAlarmConfigurationArgs {
        alarms?: pulumi.Input<pulumi.Input<inputs.codedeploy.DeploymentGroupAlarmArgs>[]>;
        enabled?: pulumi.Input<boolean>;
        ignorePollAlarmFailure?: pulumi.Input<boolean>;
    }

    export interface DeploymentGroupAutoRollbackConfigurationArgs {
        enabled?: pulumi.Input<boolean>;
        events?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DeploymentGroupBlueGreenDeploymentConfigurationArgs {
        deploymentReadyOption?: pulumi.Input<inputs.codedeploy.DeploymentGroupDeploymentReadyOptionArgs>;
        greenFleetProvisioningOption?: pulumi.Input<inputs.codedeploy.DeploymentGroupGreenFleetProvisioningOptionArgs>;
        terminateBlueInstancesOnDeploymentSuccess?: pulumi.Input<inputs.codedeploy.DeploymentGroupBlueInstanceTerminationOptionArgs>;
    }

    export interface DeploymentGroupBlueInstanceTerminationOptionArgs {
        action?: pulumi.Input<string>;
        terminationWaitTimeInMinutes?: pulumi.Input<number>;
    }

    export interface DeploymentGroupDeploymentArgs {
        description?: pulumi.Input<string>;
        ignoreApplicationStopFailures?: pulumi.Input<boolean>;
        revision: pulumi.Input<inputs.codedeploy.DeploymentGroupRevisionLocationArgs>;
    }

    export interface DeploymentGroupDeploymentReadyOptionArgs {
        actionOnTimeout?: pulumi.Input<string>;
        waitTimeInMinutes?: pulumi.Input<number>;
    }

    export interface DeploymentGroupDeploymentStyleArgs {
        deploymentOption?: pulumi.Input<string>;
        deploymentType?: pulumi.Input<string>;
    }

    export interface DeploymentGroupEC2TagFilterArgs {
        key?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface DeploymentGroupEC2TagSetArgs {
        ec2TagSetList?: pulumi.Input<pulumi.Input<inputs.codedeploy.DeploymentGroupEC2TagSetListObjectArgs>[]>;
    }

    export interface DeploymentGroupEC2TagSetListObjectArgs {
        ec2TagGroup?: pulumi.Input<pulumi.Input<inputs.codedeploy.DeploymentGroupEC2TagFilterArgs>[]>;
    }

    export interface DeploymentGroupECSServiceArgs {
        clusterName: pulumi.Input<string>;
        serviceName: pulumi.Input<string>;
    }

    export interface DeploymentGroupELBInfoArgs {
        name?: pulumi.Input<string>;
    }

    export interface DeploymentGroupGitHubLocationArgs {
        commitId: pulumi.Input<string>;
        repository: pulumi.Input<string>;
    }

    export interface DeploymentGroupGreenFleetProvisioningOptionArgs {
        action?: pulumi.Input<string>;
    }

    export interface DeploymentGroupLoadBalancerInfoArgs {
        elbInfoList?: pulumi.Input<pulumi.Input<inputs.codedeploy.DeploymentGroupELBInfoArgs>[]>;
        targetGroupInfoList?: pulumi.Input<pulumi.Input<inputs.codedeploy.DeploymentGroupTargetGroupInfoArgs>[]>;
    }

    export interface DeploymentGroupOnPremisesTagSetArgs {
        onPremisesTagSetList?: pulumi.Input<pulumi.Input<inputs.codedeploy.DeploymentGroupOnPremisesTagSetListObjectArgs>[]>;
    }

    export interface DeploymentGroupOnPremisesTagSetListObjectArgs {
        onPremisesTagGroup?: pulumi.Input<pulumi.Input<inputs.codedeploy.DeploymentGroupTagFilterArgs>[]>;
    }

    export interface DeploymentGroupRevisionLocationArgs {
        gitHubLocation?: pulumi.Input<inputs.codedeploy.DeploymentGroupGitHubLocationArgs>;
        revisionType?: pulumi.Input<string>;
        s3Location?: pulumi.Input<inputs.codedeploy.DeploymentGroupS3LocationArgs>;
    }

    export interface DeploymentGroupS3LocationArgs {
        bucket: pulumi.Input<string>;
        bundleType?: pulumi.Input<string>;
        eTag?: pulumi.Input<string>;
        key: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface DeploymentGroupTagFilterArgs {
        key?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface DeploymentGroupTargetGroupInfoArgs {
        name?: pulumi.Input<string>;
    }

    export interface DeploymentGroupTriggerConfigArgs {
        triggerEvents?: pulumi.Input<pulumi.Input<string>[]>;
        triggerName?: pulumi.Input<string>;
        triggerTargetArn?: pulumi.Input<string>;
    }

}

export namespace codeguruprofiler {
    /**
     * The agent permissions attached to this profiling group.
     */
    export interface AgentPermissionsPropertiesArgs {
        /**
         * The principals for the agent permissions.
         */
        principals: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Notification medium for users to get alerted for events that occur in application profile. We support SNS topic as a notification channel.
     */
    export interface ProfilingGroupChannelArgs {
        channelId?: pulumi.Input<string>;
        channelUri: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ProfilingGroupTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
         */
        value: pulumi.Input<string>;
    }
}

export namespace codegurureviewer {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface RepositoryAssociationTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
         */
        value: pulumi.Input<string>;
    }
}

export namespace codepipeline {
    export interface CustomActionTypeArtifactDetailsArgs {
        maximumCount: pulumi.Input<number>;
        minimumCount: pulumi.Input<number>;
    }

    export interface CustomActionTypeConfigurationPropertiesArgs {
        description?: pulumi.Input<string>;
        key: pulumi.Input<boolean>;
        name: pulumi.Input<string>;
        queryable?: pulumi.Input<boolean>;
        required: pulumi.Input<boolean>;
        secret: pulumi.Input<boolean>;
        type?: pulumi.Input<string>;
    }

    export interface CustomActionTypeSettingsArgs {
        entityUrlTemplate?: pulumi.Input<string>;
        executionUrlTemplate?: pulumi.Input<string>;
        revisionUrlTemplate?: pulumi.Input<string>;
        thirdPartyConfigurationUrl?: pulumi.Input<string>;
    }

    export interface CustomActionTypeTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface PipelineActionDeclarationArgs {
        actionTypeId: pulumi.Input<inputs.codepipeline.PipelineActionTypeIdArgs>;
        configuration?: any;
        inputArtifacts?: pulumi.Input<pulumi.Input<inputs.codepipeline.PipelineInputArtifactArgs>[]>;
        name: pulumi.Input<string>;
        namespace?: pulumi.Input<string>;
        outputArtifacts?: pulumi.Input<pulumi.Input<inputs.codepipeline.PipelineOutputArtifactArgs>[]>;
        region?: pulumi.Input<string>;
        roleArn?: pulumi.Input<string>;
        runOrder?: pulumi.Input<number>;
    }

    export interface PipelineActionTypeIdArgs {
        category: pulumi.Input<string>;
        owner: pulumi.Input<string>;
        provider: pulumi.Input<string>;
        version: pulumi.Input<string>;
    }

    export interface PipelineArtifactStoreArgs {
        encryptionKey?: pulumi.Input<inputs.codepipeline.PipelineEncryptionKeyArgs>;
        location: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface PipelineArtifactStoreMapArgs {
        artifactStore: pulumi.Input<inputs.codepipeline.PipelineArtifactStoreArgs>;
        region: pulumi.Input<string>;
    }

    export interface PipelineBlockerDeclarationArgs {
        name: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface PipelineEncryptionKeyArgs {
        id: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface PipelineInputArtifactArgs {
        name: pulumi.Input<string>;
    }

    export interface PipelineOutputArtifactArgs {
        name: pulumi.Input<string>;
    }

    export interface PipelineStageDeclarationArgs {
        actions: pulumi.Input<pulumi.Input<inputs.codepipeline.PipelineActionDeclarationArgs>[]>;
        blockers?: pulumi.Input<pulumi.Input<inputs.codepipeline.PipelineBlockerDeclarationArgs>[]>;
        name: pulumi.Input<string>;
    }

    export interface PipelineStageTransitionArgs {
        reason: pulumi.Input<string>;
        stageName: pulumi.Input<string>;
    }

    export interface PipelineTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface WebhookAuthConfigurationArgs {
        allowedIPRange?: pulumi.Input<string>;
        secretToken?: pulumi.Input<string>;
    }

    export interface WebhookFilterRuleArgs {
        jsonPath: pulumi.Input<string>;
        matchEquals?: pulumi.Input<string>;
    }
}

export namespace codestar {
    export interface GitHubRepositoryCodeArgs {
        s3: pulumi.Input<inputs.codestar.GitHubRepositoryS3Args>;
    }

    export interface GitHubRepositoryS3Args {
        bucket: pulumi.Input<string>;
        key: pulumi.Input<string>;
        objectVersion?: pulumi.Input<string>;
    }
}

export namespace codestarconnections {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface ConnectionTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace codestarnotifications {
    export interface NotificationRuleTargetArgs {
        targetAddress: pulumi.Input<string>;
        targetType: pulumi.Input<string>;
    }
}

export namespace cognito {
    export interface IdentityPoolCognitoIdentityProviderArgs {
        clientId?: pulumi.Input<string>;
        providerName?: pulumi.Input<string>;
        serverSideTokenCheck?: pulumi.Input<boolean>;
    }

    export interface IdentityPoolCognitoStreamsArgs {
        roleArn?: pulumi.Input<string>;
        streamName?: pulumi.Input<string>;
        streamingStatus?: pulumi.Input<string>;
    }

    export interface IdentityPoolPushSyncArgs {
        applicationArns?: pulumi.Input<pulumi.Input<string>[]>;
        roleArn?: pulumi.Input<string>;
    }

    export interface UserPoolAccountRecoverySettingArgs {
        recoveryMechanisms?: pulumi.Input<pulumi.Input<inputs.cognito.UserPoolRecoveryOptionArgs>[]>;
    }

    export interface UserPoolAddOnsArgs {
        advancedSecurityMode?: pulumi.Input<string>;
    }

    export interface UserPoolAdminCreateUserConfigArgs {
        allowAdminCreateUserOnly?: pulumi.Input<boolean>;
        inviteMessageTemplate?: pulumi.Input<inputs.cognito.UserPoolInviteMessageTemplateArgs>;
        unusedAccountValidityDays?: pulumi.Input<number>;
    }

    export interface UserPoolClientAnalyticsConfigurationArgs {
        applicationArn?: pulumi.Input<string>;
        applicationId?: pulumi.Input<string>;
        externalId?: pulumi.Input<string>;
        roleArn?: pulumi.Input<string>;
        userDataShared?: pulumi.Input<boolean>;
    }

    export interface UserPoolClientTokenValidityUnitsArgs {
        accessToken?: pulumi.Input<string>;
        idToken?: pulumi.Input<string>;
        refreshToken?: pulumi.Input<string>;
    }

    export interface UserPoolCustomEmailSenderArgs {
        lambdaArn?: pulumi.Input<string>;
        lambdaVersion?: pulumi.Input<string>;
    }

    export interface UserPoolCustomSMSSenderArgs {
        lambdaArn?: pulumi.Input<string>;
        lambdaVersion?: pulumi.Input<string>;
    }

    export interface UserPoolDeviceConfigurationArgs {
        challengeRequiredOnNewDevice?: pulumi.Input<boolean>;
        deviceOnlyRememberedOnUserPrompt?: pulumi.Input<boolean>;
    }

    export interface UserPoolDomainCustomDomainConfigTypeArgs {
        certificateArn?: pulumi.Input<string>;
    }

    export interface UserPoolEmailConfigurationArgs {
        configurationSet?: pulumi.Input<string>;
        emailSendingAccount?: pulumi.Input<string>;
        from?: pulumi.Input<string>;
        replyToEmailAddress?: pulumi.Input<string>;
        sourceArn?: pulumi.Input<string>;
    }

    export interface UserPoolInviteMessageTemplateArgs {
        emailMessage?: pulumi.Input<string>;
        emailSubject?: pulumi.Input<string>;
        sMSMessage?: pulumi.Input<string>;
    }

    export interface UserPoolLambdaConfigArgs {
        createAuthChallenge?: pulumi.Input<string>;
        customEmailSender?: pulumi.Input<inputs.cognito.UserPoolCustomEmailSenderArgs>;
        customMessage?: pulumi.Input<string>;
        customSMSSender?: pulumi.Input<inputs.cognito.UserPoolCustomSMSSenderArgs>;
        defineAuthChallenge?: pulumi.Input<string>;
        kMSKeyID?: pulumi.Input<string>;
        postAuthentication?: pulumi.Input<string>;
        postConfirmation?: pulumi.Input<string>;
        preAuthentication?: pulumi.Input<string>;
        preSignUp?: pulumi.Input<string>;
        preTokenGeneration?: pulumi.Input<string>;
        userMigration?: pulumi.Input<string>;
        verifyAuthChallengeResponse?: pulumi.Input<string>;
    }

    export interface UserPoolNumberAttributeConstraintsArgs {
        maxValue?: pulumi.Input<string>;
        minValue?: pulumi.Input<string>;
    }

    export interface UserPoolPasswordPolicyArgs {
        minimumLength?: pulumi.Input<number>;
        requireLowercase?: pulumi.Input<boolean>;
        requireNumbers?: pulumi.Input<boolean>;
        requireSymbols?: pulumi.Input<boolean>;
        requireUppercase?: pulumi.Input<boolean>;
        temporaryPasswordValidityDays?: pulumi.Input<number>;
    }

    export interface UserPoolPoliciesArgs {
        passwordPolicy?: pulumi.Input<inputs.cognito.UserPoolPasswordPolicyArgs>;
    }

    export interface UserPoolRecoveryOptionArgs {
        name?: pulumi.Input<string>;
        priority?: pulumi.Input<number>;
    }

    export interface UserPoolResourceServerResourceServerScopeTypeArgs {
        scopeDescription: pulumi.Input<string>;
        scopeName: pulumi.Input<string>;
    }

    export interface UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs {
        eventAction: pulumi.Input<string>;
        notify: pulumi.Input<boolean>;
    }

    export interface UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs {
        highAction?: pulumi.Input<inputs.cognito.UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs>;
        lowAction?: pulumi.Input<inputs.cognito.UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs>;
        mediumAction?: pulumi.Input<inputs.cognito.UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs>;
    }

    export interface UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs {
        actions: pulumi.Input<inputs.cognito.UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs>;
        notifyConfiguration?: pulumi.Input<inputs.cognito.UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs>;
    }

    export interface UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs {
        eventAction: pulumi.Input<string>;
    }

    export interface UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs {
        actions: pulumi.Input<inputs.cognito.UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs>;
        eventFilter?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs {
        blockEmail?: pulumi.Input<inputs.cognito.UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs>;
        from?: pulumi.Input<string>;
        mfaEmail?: pulumi.Input<inputs.cognito.UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs>;
        noActionEmail?: pulumi.Input<inputs.cognito.UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs>;
        replyTo?: pulumi.Input<string>;
        sourceArn: pulumi.Input<string>;
    }

    export interface UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs {
        htmlBody?: pulumi.Input<string>;
        subject: pulumi.Input<string>;
        textBody?: pulumi.Input<string>;
    }

    export interface UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs {
        blockedIPRangeList?: pulumi.Input<pulumi.Input<string>[]>;
        skippedIPRangeList?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface UserPoolSchemaAttributeArgs {
        attributeDataType?: pulumi.Input<string>;
        developerOnlyAttribute?: pulumi.Input<boolean>;
        mutable?: pulumi.Input<boolean>;
        name?: pulumi.Input<string>;
        numberAttributeConstraints?: pulumi.Input<inputs.cognito.UserPoolNumberAttributeConstraintsArgs>;
        required?: pulumi.Input<boolean>;
        stringAttributeConstraints?: pulumi.Input<inputs.cognito.UserPoolStringAttributeConstraintsArgs>;
    }

    export interface UserPoolSmsConfigurationArgs {
        externalId?: pulumi.Input<string>;
        snsCallerArn?: pulumi.Input<string>;
    }

    export interface UserPoolStringAttributeConstraintsArgs {
        maxLength?: pulumi.Input<string>;
        minLength?: pulumi.Input<string>;
    }

    export interface UserPoolUserAttributeTypeArgs {
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface UserPoolUsernameConfigurationArgs {
        caseSensitive?: pulumi.Input<boolean>;
    }

    export interface UserPoolVerificationMessageTemplateArgs {
        defaultEmailOption?: pulumi.Input<string>;
        emailMessage?: pulumi.Input<string>;
        emailMessageByLink?: pulumi.Input<string>;
        emailSubject?: pulumi.Input<string>;
        emailSubjectByLink?: pulumi.Input<string>;
        smsMessage?: pulumi.Input<string>;
    }
}

export namespace config {
}

export namespace configuration {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface AggregationAuthorizationTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    export interface ConfigRuleScopeArgs {
        complianceResourceId?: pulumi.Input<string>;
        complianceResourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
        tagKey?: pulumi.Input<string>;
        tagValue?: pulumi.Input<string>;
    }

    export interface ConfigRuleSourceArgs {
        owner: pulumi.Input<string>;
        sourceDetails?: pulumi.Input<pulumi.Input<inputs.configuration.ConfigRuleSourceDetailArgs>[]>;
        sourceIdentifier: pulumi.Input<string>;
    }

    export interface ConfigRuleSourceDetailArgs {
        eventSource: pulumi.Input<string>;
        maximumExecutionFrequency?: pulumi.Input<string>;
        messageType: pulumi.Input<string>;
    }

    export interface ConfigurationAggregatorAccountAggregationSourceArgs {
        accountIds: pulumi.Input<pulumi.Input<string>[]>;
        allAwsRegions?: pulumi.Input<boolean>;
        awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ConfigurationAggregatorOrganizationAggregationSourceArgs {
        allAwsRegions?: pulumi.Input<boolean>;
        awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
        roleArn: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ConfigurationAggregatorTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    export interface ConfigurationRecorderRecordingGroupArgs {
        allSupported?: pulumi.Input<boolean>;
        includeGlobalResourceTypes?: pulumi.Input<boolean>;
        resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Input parameters in the form of key-value pairs for the conformance pack.
     */
    export interface ConformancePackInputParameterArgs {
        parameterName: pulumi.Input<string>;
        parameterValue: pulumi.Input<string>;
    }

    export interface DeliveryChannelConfigSnapshotDeliveryPropertiesArgs {
        deliveryFrequency?: pulumi.Input<string>;
    }

    export interface OrganizationConfigRuleOrganizationCustomRuleMetadataArgs {
        description?: pulumi.Input<string>;
        inputParameters?: pulumi.Input<string>;
        lambdaFunctionArn: pulumi.Input<string>;
        maximumExecutionFrequency?: pulumi.Input<string>;
        organizationConfigRuleTriggerTypes: pulumi.Input<pulumi.Input<string>[]>;
        resourceIdScope?: pulumi.Input<string>;
        resourceTypesScope?: pulumi.Input<pulumi.Input<string>[]>;
        tagKeyScope?: pulumi.Input<string>;
        tagValueScope?: pulumi.Input<string>;
    }

    export interface OrganizationConfigRuleOrganizationManagedRuleMetadataArgs {
        description?: pulumi.Input<string>;
        inputParameters?: pulumi.Input<string>;
        maximumExecutionFrequency?: pulumi.Input<string>;
        resourceIdScope?: pulumi.Input<string>;
        resourceTypesScope?: pulumi.Input<pulumi.Input<string>[]>;
        ruleIdentifier: pulumi.Input<string>;
        tagKeyScope?: pulumi.Input<string>;
        tagValueScope?: pulumi.Input<string>;
    }

    /**
     * Input parameters in the form of key-value pairs for the conformance pack.
     */
    export interface OrganizationConformancePackConformancePackInputParameterArgs {
        parameterName: pulumi.Input<string>;
        parameterValue: pulumi.Input<string>;
    }

    export interface RemediationConfigurationExecutionControlsArgs {
        ssmControls?: pulumi.Input<inputs.configuration.RemediationConfigurationSsmControlsArgs>;
    }

    export interface RemediationConfigurationSsmControlsArgs {
        concurrentExecutionRatePercentage?: pulumi.Input<number>;
        errorPercentage?: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface StoredQueryTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace connect {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface ContactFlowModuleTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ContactFlowTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. . You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Contains information about the hours of operation.
     */
    export interface HoursOfOperationConfigArgs {
        /**
         * The day that the hours of operation applies to.
         */
        day: pulumi.Input<enums.connect.HoursOfOperationConfigDay>;
        /**
         * The end time that your contact center closes.
         */
        endTime: pulumi.Input<inputs.connect.HoursOfOperationTimeSliceArgs>;
        /**
         * The start time that your contact center opens.
         */
        startTime: pulumi.Input<inputs.connect.HoursOfOperationTimeSliceArgs>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface HoursOfOperationTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * The start time or end time for an hours of operation.
     */
    export interface HoursOfOperationTimeSliceArgs {
        /**
         * The hours.
         */
        hours: pulumi.Input<number>;
        /**
         * The minutes.
         */
        minutes: pulumi.Input<number>;
    }

    /**
     * Configuration settings for the quick connect.
     */
    export interface QuickConnectConfigArgs {
        phoneConfig?: pulumi.Input<inputs.connect.QuickConnectPhoneNumberQuickConnectConfigArgs>;
        queueConfig?: pulumi.Input<inputs.connect.QuickConnectQueueQuickConnectConfigArgs>;
        quickConnectType: pulumi.Input<enums.connect.QuickConnectType>;
        userConfig?: pulumi.Input<inputs.connect.QuickConnectUserQuickConnectConfigArgs>;
    }

    /**
     * The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
     */
    export interface QuickConnectPhoneNumberQuickConnectConfigArgs {
        phoneNumber: pulumi.Input<string>;
    }

    /**
     * The queue configuration. This is required only if QuickConnectType is QUEUE.
     */
    export interface QuickConnectQueueQuickConnectConfigArgs {
        contactFlowArn: pulumi.Input<string>;
        queueArn: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface QuickConnectTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * The user configuration. This is required only if QuickConnectType is USER.
     */
    export interface QuickConnectUserQuickConnectConfigArgs {
        contactFlowArn: pulumi.Input<string>;
        userArn: pulumi.Input<string>;
    }

    /**
     * Contains information about the identity of a user.
     */
    export interface UserIdentityInfoArgs {
        email?: pulumi.Input<string>;
        firstName?: pulumi.Input<string>;
        lastName?: pulumi.Input<string>;
    }

    /**
     * Contains information about the phone configuration settings for a user.
     */
    export interface UserPhoneConfigArgs {
        afterContactWorkTimeLimit?: pulumi.Input<number>;
        autoAccept?: pulumi.Input<boolean>;
        deskPhoneNumber?: pulumi.Input<string>;
        phoneType: pulumi.Input<enums.connect.UserPhoneType>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface UserTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace customerprofiles {
    export interface DomainTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface IntegrationConnectorOperatorArgs {
        marketo?: pulumi.Input<enums.customerprofiles.IntegrationMarketoConnectorOperator>;
        s3?: pulumi.Input<enums.customerprofiles.IntegrationS3ConnectorOperator>;
        salesforce?: pulumi.Input<enums.customerprofiles.IntegrationSalesforceConnectorOperator>;
        serviceNow?: pulumi.Input<enums.customerprofiles.IntegrationServiceNowConnectorOperator>;
        zendesk?: pulumi.Input<enums.customerprofiles.IntegrationZendeskConnectorOperator>;
    }

    export interface IntegrationFlowDefinitionArgs {
        description?: pulumi.Input<string>;
        flowName: pulumi.Input<string>;
        kmsArn: pulumi.Input<string>;
        sourceFlowConfig: pulumi.Input<inputs.customerprofiles.IntegrationSourceFlowConfigArgs>;
        tasks: pulumi.Input<pulumi.Input<inputs.customerprofiles.IntegrationTaskArgs>[]>;
        triggerConfig: pulumi.Input<inputs.customerprofiles.IntegrationTriggerConfigArgs>;
    }

    export interface IntegrationIncrementalPullConfigArgs {
        datetimeTypeFieldName?: pulumi.Input<string>;
    }

    export interface IntegrationMarketoSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    export interface IntegrationS3SourcePropertiesArgs {
        bucketName: pulumi.Input<string>;
        bucketPrefix?: pulumi.Input<string>;
    }

    export interface IntegrationSalesforceSourcePropertiesArgs {
        enableDynamicFieldUpdate?: pulumi.Input<boolean>;
        includeDeletedRecords?: pulumi.Input<boolean>;
        object: pulumi.Input<string>;
    }

    export interface IntegrationScheduledTriggerPropertiesArgs {
        dataPullMode?: pulumi.Input<enums.customerprofiles.IntegrationScheduledTriggerPropertiesDataPullMode>;
        firstExecutionFrom?: pulumi.Input<number>;
        scheduleEndTime?: pulumi.Input<number>;
        scheduleExpression: pulumi.Input<string>;
        scheduleOffset?: pulumi.Input<number>;
        scheduleStartTime?: pulumi.Input<number>;
        timezone?: pulumi.Input<string>;
    }

    export interface IntegrationServiceNowSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    export interface IntegrationSourceConnectorPropertiesArgs {
        marketo?: pulumi.Input<inputs.customerprofiles.IntegrationMarketoSourcePropertiesArgs>;
        s3?: pulumi.Input<inputs.customerprofiles.IntegrationS3SourcePropertiesArgs>;
        salesforce?: pulumi.Input<inputs.customerprofiles.IntegrationSalesforceSourcePropertiesArgs>;
        serviceNow?: pulumi.Input<inputs.customerprofiles.IntegrationServiceNowSourcePropertiesArgs>;
        zendesk?: pulumi.Input<inputs.customerprofiles.IntegrationZendeskSourcePropertiesArgs>;
    }

    export interface IntegrationSourceFlowConfigArgs {
        connectorProfileName?: pulumi.Input<string>;
        connectorType: pulumi.Input<enums.customerprofiles.IntegrationConnectorType>;
        incrementalPullConfig?: pulumi.Input<inputs.customerprofiles.IntegrationIncrementalPullConfigArgs>;
        sourceConnectorProperties: pulumi.Input<inputs.customerprofiles.IntegrationSourceConnectorPropertiesArgs>;
    }

    export interface IntegrationTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface IntegrationTaskArgs {
        connectorOperator?: pulumi.Input<inputs.customerprofiles.IntegrationConnectorOperatorArgs>;
        destinationField?: pulumi.Input<string>;
        sourceFields: pulumi.Input<pulumi.Input<string>[]>;
        taskProperties?: pulumi.Input<pulumi.Input<inputs.customerprofiles.IntegrationTaskPropertiesMapArgs>[]>;
        taskType: pulumi.Input<enums.customerprofiles.IntegrationTaskType>;
    }

    export interface IntegrationTaskPropertiesMapArgs {
        operatorPropertyKey: pulumi.Input<enums.customerprofiles.IntegrationOperatorPropertiesKeys>;
        property: pulumi.Input<string>;
    }

    export interface IntegrationTriggerConfigArgs {
        triggerProperties?: pulumi.Input<inputs.customerprofiles.IntegrationTriggerPropertiesArgs>;
        triggerType: pulumi.Input<enums.customerprofiles.IntegrationTriggerType>;
    }

    export interface IntegrationTriggerPropertiesArgs {
        scheduled?: pulumi.Input<inputs.customerprofiles.IntegrationScheduledTriggerPropertiesArgs>;
    }

    export interface IntegrationZendeskSourcePropertiesArgs {
        object: pulumi.Input<string>;
    }

    /**
     * Represents a field in a ProfileObjectType.
     */
    export interface ObjectTypeFieldArgs {
        /**
         * The content type of the field. Used for determining equality when searching.
         */
        contentType?: pulumi.Input<enums.customerprofiles.ObjectTypeFieldContentType>;
        /**
         * A field of a ProfileObject. For example: _source.FirstName, where "_source" is a ProfileObjectType of a Zendesk user and "FirstName" is a field in that ObjectType.
         */
        source?: pulumi.Input<string>;
        /**
         * The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.
         */
        target?: pulumi.Input<string>;
    }

    export interface ObjectTypeFieldMapArgs {
        name?: pulumi.Input<string>;
        objectTypeField?: pulumi.Input<inputs.customerprofiles.ObjectTypeFieldArgs>;
    }

    /**
     * An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.
     */
    export interface ObjectTypeKeyArgs {
        /**
         * The reference for the key name of the fields map. 
         */
        fieldNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.
         */
        standardIdentifiers?: pulumi.Input<pulumi.Input<enums.customerprofiles.ObjectTypeKeyStandardIdentifiersItem>[]>;
    }

    export interface ObjectTypeKeyMapArgs {
        name?: pulumi.Input<string>;
        objectTypeKeyList?: pulumi.Input<pulumi.Input<inputs.customerprofiles.ObjectTypeKeyArgs>[]>;
    }

    export interface ObjectTypeTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

}

export namespace databrew {
    /**
     * Csv options
     */
    export interface DatasetCsvOptionsArgs {
        delimiter?: pulumi.Input<string>;
        headerRow?: pulumi.Input<boolean>;
    }

    export interface DatasetDataCatalogInputDefinitionArgs {
        /**
         * Catalog id
         */
        catalogId?: pulumi.Input<string>;
        /**
         * Database name
         */
        databaseName?: pulumi.Input<string>;
        /**
         * Table name
         */
        tableName?: pulumi.Input<string>;
        tempDirectory?: pulumi.Input<inputs.databrew.DatasetS3LocationArgs>;
    }

    export interface DatasetDatabaseInputDefinitionArgs {
        /**
         * Database table name
         */
        databaseTableName?: pulumi.Input<string>;
        /**
         * Glue connection name
         */
        glueConnectionName: pulumi.Input<string>;
        /**
         * Custom SQL to run against the provided AWS Glue connection. This SQL will be used as the input for DataBrew projects and jobs.
         */
        queryString?: pulumi.Input<string>;
        tempDirectory?: pulumi.Input<inputs.databrew.DatasetS3LocationArgs>;
    }

    export interface DatasetDatetimeOptionsArgs {
        /**
         * Date/time format of a date parameter
         */
        format: pulumi.Input<string>;
        /**
         * Locale code for a date parameter
         */
        localeCode?: pulumi.Input<string>;
        /**
         * Timezone offset
         */
        timezoneOffset?: pulumi.Input<string>;
    }

    export interface DatasetExcelOptionsArgs {
        headerRow?: pulumi.Input<boolean>;
        sheetIndexes?: pulumi.Input<pulumi.Input<number>[]>;
        sheetNames?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DatasetFilesLimitArgs {
        /**
         * Maximum number of files
         */
        maxFiles: pulumi.Input<number>;
        /**
         * Order
         */
        order?: pulumi.Input<enums.databrew.DatasetFilesLimitOrder>;
        /**
         * Ordered by
         */
        orderedBy?: pulumi.Input<enums.databrew.DatasetFilesLimitOrderedBy>;
    }

    export interface DatasetFilterExpressionArgs {
        /**
         * Filtering expression for a parameter
         */
        expression: pulumi.Input<string>;
        valuesMap: pulumi.Input<pulumi.Input<inputs.databrew.DatasetFilterValueArgs>[]>;
    }

    /**
     * A key-value pair to associate expression variable names with their values
     */
    export interface DatasetFilterValueArgs {
        value: pulumi.Input<string>;
        /**
         * Variable name
         */
        valueReference: pulumi.Input<string>;
    }

    /**
     * Format options for dataset
     */
    export interface DatasetFormatOptionsArgs {
        csv?: pulumi.Input<inputs.databrew.DatasetCsvOptionsArgs>;
        excel?: pulumi.Input<inputs.databrew.DatasetExcelOptionsArgs>;
        json?: pulumi.Input<inputs.databrew.DatasetJsonOptionsArgs>;
    }

    /**
     * Input
     */
    export interface DatasetInputArgs {
        dataCatalogInputDefinition?: pulumi.Input<inputs.databrew.DatasetDataCatalogInputDefinitionArgs>;
        databaseInputDefinition?: pulumi.Input<inputs.databrew.DatasetDatabaseInputDefinitionArgs>;
        metadata?: pulumi.Input<inputs.databrew.DatasetMetadataArgs>;
        s3InputDefinition?: pulumi.Input<inputs.databrew.DatasetS3LocationArgs>;
    }

    /**
     * Json options
     */
    export interface DatasetJsonOptionsArgs {
        multiLine?: pulumi.Input<boolean>;
    }

    export interface DatasetMetadataArgs {
        /**
         * Arn of the source of the dataset. For e.g.: AppFlow Flow ARN.
         */
        sourceArn?: pulumi.Input<string>;
    }

    export interface DatasetParameterArgs {
        /**
         * Add the value of this parameter as a column in a dataset.
         */
        createColumn?: pulumi.Input<boolean>;
        datetimeOptions?: pulumi.Input<inputs.databrew.DatasetDatetimeOptionsArgs>;
        filter?: pulumi.Input<inputs.databrew.DatasetFilterExpressionArgs>;
        name: pulumi.Input<string>;
        /**
         * Parameter type
         */
        type: pulumi.Input<enums.databrew.DatasetParameterType>;
    }

    /**
     * Path options for dataset
     */
    export interface DatasetPathOptionsArgs {
        filesLimit?: pulumi.Input<inputs.databrew.DatasetFilesLimitArgs>;
        lastModifiedDateCondition?: pulumi.Input<inputs.databrew.DatasetFilterExpressionArgs>;
        parameters?: pulumi.Input<pulumi.Input<inputs.databrew.DatasetPathParameterArgs>[]>;
    }

    /**
     * A key-value pair to associate dataset parameter name with its definition.
     */
    export interface DatasetPathParameterArgs {
        datasetParameter: pulumi.Input<inputs.databrew.DatasetParameterArgs>;
        pathParameterName: pulumi.Input<string>;
    }

    /**
     * Input location
     */
    export interface DatasetS3LocationArgs {
        bucket: pulumi.Input<string>;
        key?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface DatasetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface JobAllowedStatisticsArgs {
        statistics: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobColumnSelectorArgs {
        name?: pulumi.Input<string>;
        regex?: pulumi.Input<string>;
    }

    export interface JobColumnStatisticsConfigurationArgs {
        selectors?: pulumi.Input<pulumi.Input<inputs.databrew.JobColumnSelectorArgs>[]>;
        statistics: pulumi.Input<inputs.databrew.JobStatisticsConfigurationArgs>;
    }

    /**
     * Output Csv options
     */
    export interface JobCsvOutputOptionsArgs {
        delimiter?: pulumi.Input<string>;
    }

    export interface JobDataCatalogOutputArgs {
        catalogId?: pulumi.Input<string>;
        databaseName: pulumi.Input<string>;
        databaseOptions?: pulumi.Input<inputs.databrew.JobDatabaseTableOutputOptionsArgs>;
        overwrite?: pulumi.Input<boolean>;
        s3Options?: pulumi.Input<inputs.databrew.JobS3TableOutputOptionsArgs>;
        tableName: pulumi.Input<string>;
    }

    export interface JobDatabaseOutputArgs {
        databaseOptions: pulumi.Input<inputs.databrew.JobDatabaseTableOutputOptionsArgs>;
        /**
         * Database table name
         */
        databaseOutputMode?: pulumi.Input<enums.databrew.JobDatabaseOutputDatabaseOutputMode>;
        /**
         * Glue connection name
         */
        glueConnectionName: pulumi.Input<string>;
    }

    export interface JobDatabaseTableOutputOptionsArgs {
        tableName: pulumi.Input<string>;
        tempDirectory?: pulumi.Input<inputs.databrew.JobS3LocationArgs>;
    }

    export interface JobEntityDetectorConfigurationArgs {
        allowedStatistics?: pulumi.Input<inputs.databrew.JobAllowedStatisticsArgs>;
        entityTypes: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobOutputArgs {
        compressionFormat?: pulumi.Input<enums.databrew.JobOutputCompressionFormat>;
        format?: pulumi.Input<enums.databrew.JobOutputFormat>;
        formatOptions?: pulumi.Input<inputs.databrew.JobOutputFormatOptionsArgs>;
        location: pulumi.Input<inputs.databrew.JobS3LocationArgs>;
        overwrite?: pulumi.Input<boolean>;
        partitionColumns?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Format options for job Output
     */
    export interface JobOutputFormatOptionsArgs {
        csv?: pulumi.Input<inputs.databrew.JobCsvOutputOptionsArgs>;
    }

    /**
     * Output location
     */
    export interface JobOutputLocationArgs {
        bucket: pulumi.Input<string>;
        key?: pulumi.Input<string>;
    }

    export interface JobParameterMapArgs {
    }

    export interface JobProfileConfigurationArgs {
        columnStatisticsConfigurations?: pulumi.Input<pulumi.Input<inputs.databrew.JobColumnStatisticsConfigurationArgs>[]>;
        datasetStatisticsConfiguration?: pulumi.Input<inputs.databrew.JobStatisticsConfigurationArgs>;
        entityDetectorConfiguration?: pulumi.Input<inputs.databrew.JobEntityDetectorConfigurationArgs>;
        profileColumns?: pulumi.Input<pulumi.Input<inputs.databrew.JobColumnSelectorArgs>[]>;
    }

    export interface JobRecipeArgs {
        /**
         * Recipe name
         */
        name: pulumi.Input<string>;
        /**
         * Recipe version
         */
        version?: pulumi.Input<string>;
    }

    /**
     * S3 Output location
     */
    export interface JobS3LocationArgs {
        bucket: pulumi.Input<string>;
        key?: pulumi.Input<string>;
    }

    export interface JobS3TableOutputOptionsArgs {
        location: pulumi.Input<inputs.databrew.JobS3LocationArgs>;
    }

    /**
     * Job Sample
     */
    export interface JobSampleArgs {
        mode?: pulumi.Input<enums.databrew.JobSampleMode>;
        size?: pulumi.Input<number>;
    }

    export interface JobStatisticOverrideArgs {
        parameters: pulumi.Input<inputs.databrew.JobParameterMapArgs>;
        statistic: pulumi.Input<string>;
    }

    export interface JobStatisticsConfigurationArgs {
        includedStatistics?: pulumi.Input<pulumi.Input<string>[]>;
        overrides?: pulumi.Input<pulumi.Input<inputs.databrew.JobStatisticOverrideArgs>[]>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface JobTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Configuration to attach Rulesets to the job
     */
    export interface JobValidationConfigurationArgs {
        /**
         * Arn of the Ruleset
         */
        rulesetArn: pulumi.Input<string>;
        validationMode?: pulumi.Input<enums.databrew.JobValidationMode>;
    }

    export interface ProjectSampleArgs {
        /**
         * Sample size
         */
        size?: pulumi.Input<number>;
        /**
         * Sample type
         */
        type: pulumi.Input<enums.databrew.ProjectSampleType>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ProjectTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RecipeActionArgs {
        /**
         * Step action operation
         */
        operation: pulumi.Input<string>;
        parameters?: pulumi.Input<inputs.databrew.RecipeParametersArgs | inputs.databrew.RecipeParameterMapArgs>;
    }

    /**
     * Condition expressions applied to the step action
     */
    export interface RecipeConditionExpressionArgs {
        /**
         * Input condition to be applied to the target column
         */
        condition: pulumi.Input<string>;
        /**
         * Name of the target column
         */
        targetColumn: pulumi.Input<string>;
        /**
         * Value of the condition
         */
        value?: pulumi.Input<string>;
    }

    export interface RecipeDataCatalogInputDefinitionArgs {
        /**
         * Catalog id
         */
        catalogId?: pulumi.Input<string>;
        /**
         * Database name
         */
        databaseName?: pulumi.Input<string>;
        /**
         * Table name
         */
        tableName?: pulumi.Input<string>;
        tempDirectory?: pulumi.Input<inputs.databrew.RecipeS3LocationArgs>;
    }

    export interface RecipeParameterMapArgs {
    }

    export interface RecipeParametersArgs {
        aggregateFunction?: pulumi.Input<string>;
        base?: pulumi.Input<string>;
        caseStatement?: pulumi.Input<string>;
        categoryMap?: pulumi.Input<string>;
        charsToRemove?: pulumi.Input<string>;
        collapseConsecutiveWhitespace?: pulumi.Input<string>;
        columnDataType?: pulumi.Input<string>;
        columnRange?: pulumi.Input<string>;
        count?: pulumi.Input<string>;
        customCharacters?: pulumi.Input<string>;
        customStopWords?: pulumi.Input<string>;
        customValue?: pulumi.Input<string>;
        datasetsColumns?: pulumi.Input<string>;
        dateAddValue?: pulumi.Input<string>;
        dateTimeFormat?: pulumi.Input<string>;
        dateTimeParameters?: pulumi.Input<string>;
        deleteOtherRows?: pulumi.Input<string>;
        delimiter?: pulumi.Input<string>;
        endPattern?: pulumi.Input<string>;
        endPosition?: pulumi.Input<string>;
        endValue?: pulumi.Input<string>;
        expandContractions?: pulumi.Input<string>;
        exponent?: pulumi.Input<string>;
        falseString?: pulumi.Input<string>;
        groupByAggFunctionOptions?: pulumi.Input<string>;
        groupByColumns?: pulumi.Input<string>;
        hiddenColumns?: pulumi.Input<string>;
        ignoreCase?: pulumi.Input<string>;
        includeInSplit?: pulumi.Input<string>;
        /**
         * Input
         */
        input?: pulumi.Input<inputs.databrew.RecipeParametersInputPropertiesArgs>;
        interval?: pulumi.Input<string>;
        isText?: pulumi.Input<string>;
        joinKeys?: pulumi.Input<string>;
        joinType?: pulumi.Input<string>;
        leftColumns?: pulumi.Input<string>;
        limit?: pulumi.Input<string>;
        lowerBound?: pulumi.Input<string>;
        mapType?: pulumi.Input<string>;
        modeType?: pulumi.Input<string>;
        multiLine?: pulumi.Input<boolean>;
        numRows?: pulumi.Input<string>;
        numRowsAfter?: pulumi.Input<string>;
        numRowsBefore?: pulumi.Input<string>;
        orderByColumn?: pulumi.Input<string>;
        orderByColumns?: pulumi.Input<string>;
        other?: pulumi.Input<string>;
        pattern?: pulumi.Input<string>;
        patternOption1?: pulumi.Input<string>;
        patternOption2?: pulumi.Input<string>;
        patternOptions?: pulumi.Input<string>;
        period?: pulumi.Input<string>;
        position?: pulumi.Input<string>;
        removeAllPunctuation?: pulumi.Input<string>;
        removeAllQuotes?: pulumi.Input<string>;
        removeAllWhitespace?: pulumi.Input<string>;
        removeCustomCharacters?: pulumi.Input<string>;
        removeCustomValue?: pulumi.Input<string>;
        removeLeadingAndTrailingPunctuation?: pulumi.Input<string>;
        removeLeadingAndTrailingQuotes?: pulumi.Input<string>;
        removeLeadingAndTrailingWhitespace?: pulumi.Input<string>;
        removeLetters?: pulumi.Input<string>;
        removeNumbers?: pulumi.Input<string>;
        removeSourceColumn?: pulumi.Input<string>;
        removeSpecialCharacters?: pulumi.Input<string>;
        rightColumns?: pulumi.Input<string>;
        sampleSize?: pulumi.Input<string>;
        sampleType?: pulumi.Input<string>;
        secondInput?: pulumi.Input<string>;
        secondaryInputs?: pulumi.Input<pulumi.Input<inputs.databrew.RecipeSecondaryInputArgs>[]>;
        sheetIndexes?: pulumi.Input<pulumi.Input<number>[]>;
        sheetNames?: pulumi.Input<pulumi.Input<string>[]>;
        sourceColumn?: pulumi.Input<string>;
        sourceColumn1?: pulumi.Input<string>;
        sourceColumn2?: pulumi.Input<string>;
        sourceColumns?: pulumi.Input<string>;
        startColumnIndex?: pulumi.Input<string>;
        startPattern?: pulumi.Input<string>;
        startPosition?: pulumi.Input<string>;
        startValue?: pulumi.Input<string>;
        stemmingMode?: pulumi.Input<string>;
        stepCount?: pulumi.Input<string>;
        stepIndex?: pulumi.Input<string>;
        stopWordsMode?: pulumi.Input<string>;
        strategy?: pulumi.Input<string>;
        targetColumn?: pulumi.Input<string>;
        targetColumnNames?: pulumi.Input<string>;
        targetDateFormat?: pulumi.Input<string>;
        targetIndex?: pulumi.Input<string>;
        timeZone?: pulumi.Input<string>;
        tokenizerPattern?: pulumi.Input<string>;
        trueString?: pulumi.Input<string>;
        udfLang?: pulumi.Input<string>;
        units?: pulumi.Input<string>;
        unpivotColumn?: pulumi.Input<string>;
        upperBound?: pulumi.Input<string>;
        useNewDataFrame?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
        value1?: pulumi.Input<string>;
        value2?: pulumi.Input<string>;
        valueColumn?: pulumi.Input<string>;
        viewFrame?: pulumi.Input<string>;
    }

    /**
     * Input
     */
    export interface RecipeParametersInputPropertiesArgs {
        dataCatalogInputDefinition?: pulumi.Input<inputs.databrew.RecipeDataCatalogInputDefinitionArgs>;
        s3InputDefinition?: pulumi.Input<inputs.databrew.RecipeS3LocationArgs>;
    }

    /**
     * Input location
     */
    export interface RecipeS3LocationArgs {
        bucket: pulumi.Input<string>;
        key?: pulumi.Input<string>;
    }

    /**
     * Secondary input
     */
    export interface RecipeSecondaryInputArgs {
        dataCatalogInputDefinition?: pulumi.Input<inputs.databrew.RecipeDataCatalogInputDefinitionArgs>;
        s3InputDefinition?: pulumi.Input<inputs.databrew.RecipeS3LocationArgs>;
    }

    export interface RecipeStepArgs {
        action: pulumi.Input<inputs.databrew.RecipeActionArgs>;
        /**
         * Condition expressions applied to the step action
         */
        conditionExpressions?: pulumi.Input<pulumi.Input<inputs.databrew.RecipeConditionExpressionArgs>[]>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface RecipeTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Selector of a column from a dataset for profile job configuration. One selector includes either a column name or a regular expression
     */
    export interface RulesetColumnSelectorArgs {
        /**
         * The name of a column from a dataset
         */
        name?: pulumi.Input<string>;
        /**
         * A regular expression for selecting a column from a dataset
         */
        regex?: pulumi.Input<string>;
    }

    /**
     * Data quality rule for a target resource (dataset)
     */
    export interface RulesetRuleArgs {
        checkExpression: pulumi.Input<string>;
        columnSelectors?: pulumi.Input<pulumi.Input<inputs.databrew.RulesetColumnSelectorArgs>[]>;
        disabled?: pulumi.Input<boolean>;
        /**
         * Name of the rule
         */
        name: pulumi.Input<string>;
        substitutionMap?: pulumi.Input<pulumi.Input<inputs.databrew.RulesetSubstitutionValueArgs>[]>;
        threshold?: pulumi.Input<inputs.databrew.RulesetThresholdArgs>;
    }

    /**
     * A key-value pair to associate expression's substitution variable names with their values
     */
    export interface RulesetSubstitutionValueArgs {
        /**
         * Value or column name
         */
        value: pulumi.Input<string>;
        /**
         * Variable name
         */
        valueReference: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource
     */
    export interface RulesetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RulesetThresholdArgs {
        type?: pulumi.Input<enums.databrew.RulesetThresholdType>;
        unit?: pulumi.Input<enums.databrew.RulesetThresholdUnit>;
        value: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ScheduleTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace datapipeline {
    export interface PipelineFieldArgs {
        key: pulumi.Input<string>;
        refValue?: pulumi.Input<string>;
        stringValue?: pulumi.Input<string>;
    }

    export interface PipelineObjectArgs {
        fields: pulumi.Input<pulumi.Input<inputs.datapipeline.PipelineFieldArgs>[]>;
        id: pulumi.Input<string>;
        name: pulumi.Input<string>;
    }

    export interface PipelineParameterAttributeArgs {
        key: pulumi.Input<string>;
        stringValue: pulumi.Input<string>;
    }

    export interface PipelineParameterObjectArgs {
        attributes: pulumi.Input<pulumi.Input<inputs.datapipeline.PipelineParameterAttributeArgs>[]>;
        id: pulumi.Input<string>;
    }

    export interface PipelineParameterValueArgs {
        id: pulumi.Input<string>;
        stringValue: pulumi.Input<string>;
    }

    export interface PipelineTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace datasync {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface AgentTagArgs {
        /**
         * The key for an AWS resource tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for an AWS resource tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The subnet and security group that DataSync uses to access target EFS file system.
     */
    export interface LocationEFSEc2ConfigArgs {
        /**
         * The Amazon Resource Names (ARNs) of the security groups that are configured for the Amazon EC2 resource.
         */
        securityGroupArns: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ARN of the subnet that DataSync uses to access the target EFS file system.
         */
        subnetArn: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface LocationEFSTagArgs {
        /**
         * The key for an AWS resource tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for an AWS resource tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface LocationFSxWindowsTagArgs {
        /**
         * The key for an AWS resource tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for an AWS resource tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * HDFS Name Node IP and port information.
     */
    export interface LocationHDFSNameNodeArgs {
        /**
         * The DNS name or IP address of the Name Node in the customer's on premises HDFS cluster.
         */
        hostname: pulumi.Input<string>;
        /**
         * The port on which the Name Node is listening on for client requests.
         */
        port: pulumi.Input<number>;
    }

    /**
     * Configuration information for RPC Protection and Data Transfer Protection. These parameters can be set to AUTHENTICATION, INTEGRITY, or PRIVACY. The default value is PRIVACY.
     */
    export interface LocationHDFSQopConfigurationArgs {
        /**
         * Configuration for Data Transfer Protection.
         */
        dataTransferProtection?: pulumi.Input<enums.datasync.LocationHDFSQopConfigurationDataTransferProtection>;
        /**
         * Configuration for RPC Protection.
         */
        rpcProtection?: pulumi.Input<enums.datasync.LocationHDFSQopConfigurationRpcProtection>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface LocationHDFSTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The NFS mount options that DataSync can use to mount your NFS share.
     */
    export interface LocationNFSMountOptionsArgs {
        /**
         * The specific NFS version that you want DataSync to use to mount your NFS share.
         */
        version?: pulumi.Input<enums.datasync.LocationNFSMountOptionsVersion>;
    }

    /**
     * Contains a list of Amazon Resource Names (ARNs) of agents that are used to connect an NFS server.
     */
    export interface LocationNFSOnPremConfigArgs {
        /**
         * ARN(s) of the agent(s) to use for an NFS location.
         */
        agentArns: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface LocationNFSTagArgs {
        /**
         * The key for an AWS resource tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for an AWS resource tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface LocationObjectStorageTagArgs {
        /**
         * The key for an AWS resource tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for an AWS resource tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The Amazon Resource Name (ARN) of the AWS IAM role that is used to access an Amazon S3 bucket.
     */
    export interface LocationS3S3ConfigArgs {
        /**
         * The ARN of the IAM role of the Amazon S3 bucket.
         */
        bucketAccessRoleArn: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface LocationS3TagArgs {
        /**
         * The key for an AWS resource tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for an AWS resource tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The mount options used by DataSync to access the SMB server.
     */
    export interface LocationSMBMountOptionsArgs {
        /**
         * The specific SMB version that you want DataSync to use to mount your SMB share.
         */
        version?: pulumi.Input<enums.datasync.LocationSMBMountOptionsVersion>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface LocationSMBTagArgs {
        /**
         * The key for an AWS resource tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for an AWS resource tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Specifies which files folders and objects to include or exclude when transferring files from source to destination.
     */
    export interface TaskFilterRuleArgs {
        /**
         * The type of filter rule to apply. AWS DataSync only supports the SIMPLE_PATTERN rule type.
         */
        filterType?: pulumi.Input<enums.datasync.TaskFilterRuleFilterType>;
        /**
         * A single filter string that consists of the patterns to include or exclude. The patterns are delimited by "|".
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Represents the options that are available to control the behavior of a StartTaskExecution operation.
     */
    export interface TaskOptionsArgs {
        /**
         * A file metadata value that shows the last time a file was accessed (that is, when the file was read or written to).
         */
        atime?: pulumi.Input<enums.datasync.TaskOptionsAtime>;
        /**
         * A value that limits the bandwidth used by AWS DataSync.
         */
        bytesPerSecond?: pulumi.Input<number>;
        /**
         * The group ID (GID) of the file's owners.
         */
        gid?: pulumi.Input<enums.datasync.TaskOptionsGid>;
        /**
         * A value that determines the types of logs that DataSync publishes to a log stream in the Amazon CloudWatch log group that you provide.
         */
        logLevel?: pulumi.Input<enums.datasync.TaskOptionsLogLevel>;
        /**
         * A value that indicates the last time that a file was modified (that is, a file was written to) before the PREPARING phase.
         */
        mtime?: pulumi.Input<enums.datasync.TaskOptionsMtime>;
        /**
         * A value that determines whether files at the destination should be overwritten or preserved when copying files.
         */
        overwriteMode?: pulumi.Input<enums.datasync.TaskOptionsOverwriteMode>;
        /**
         * A value that determines which users or groups can access a file for a specific purpose such as reading, writing, or execution of the file.
         */
        posixPermissions?: pulumi.Input<enums.datasync.TaskOptionsPosixPermissions>;
        /**
         * A value that specifies whether files in the destination that don't exist in the source file system should be preserved.
         */
        preserveDeletedFiles?: pulumi.Input<enums.datasync.TaskOptionsPreserveDeletedFiles>;
        /**
         * A value that determines whether AWS DataSync should preserve the metadata of block and character devices in the source file system, and recreate the files with that device name and metadata on the destination.
         */
        preserveDevices?: pulumi.Input<enums.datasync.TaskOptionsPreserveDevices>;
        /**
         * A value that determines which components of the SMB security descriptor are copied during transfer.
         */
        securityDescriptorCopyFlags?: pulumi.Input<enums.datasync.TaskOptionsSecurityDescriptorCopyFlags>;
        /**
         * A value that determines whether tasks should be queued before executing the tasks.
         */
        taskQueueing?: pulumi.Input<enums.datasync.TaskOptionsTaskQueueing>;
        /**
         * A value that determines whether DataSync transfers only the data and metadata that differ between the source and the destination location, or whether DataSync transfers all the content from the source, without comparing to the destination location.
         */
        transferMode?: pulumi.Input<enums.datasync.TaskOptionsTransferMode>;
        /**
         * The user ID (UID) of the file's owner.
         */
        uid?: pulumi.Input<enums.datasync.TaskOptionsUid>;
        /**
         * A value that determines whether a data integrity verification should be performed at the end of a task execution after all data and metadata have been transferred.
         */
        verifyMode?: pulumi.Input<enums.datasync.TaskOptionsVerifyMode>;
    }

    /**
     * Specifies the schedule you want your task to use for repeated executions.
     */
    export interface TaskScheduleArgs {
        /**
         * A cron expression that specifies when AWS DataSync initiates a scheduled transfer from a source to a destination location
         */
        scheduleExpression: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface TaskTagArgs {
        /**
         * The key for an AWS resource tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for an AWS resource tag.
         */
        value: pulumi.Input<string>;
    }
}

export namespace dax {
    export interface ClusterSSESpecificationArgs {
        sSEEnabled?: pulumi.Input<boolean>;
    }
}

export namespace detective {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface GraphTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. Valid characters are Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @ 
         */
        key?: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. Valid characters are Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @ 
         */
        value?: pulumi.Input<string>;
    }
}

export namespace devicefarm {
    /**
     * Represents a condition for a device pool.
     */
    export interface DevicePoolRuleArgs {
        /**
         * The rule's stringified attribute.
         */
        attribute?: pulumi.Input<enums.devicefarm.DevicePoolRuleAttribute>;
        /**
         * Specifies how Device Farm compares the rule's attribute to the value.
         */
        operator?: pulumi.Input<enums.devicefarm.DevicePoolRuleOperator>;
        /**
         * The rule's value.
         */
        value?: pulumi.Input<string>;
    }

    export interface DevicePoolTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface InstanceProfileTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface NetworkProfileTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ProjectTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TestGridProjectTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * The VPC security groups and subnets that are attached to a TestGrid project.
     */
    export interface TestGridProjectVpcConfigArgs {
        /**
         * A list of VPC security group IDs in your Amazon VPC.
         */
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of VPC subnet IDs in your Amazon VPC.
         */
        subnetIds: pulumi.Input<pulumi.Input<string>[]>;
        vpcId: pulumi.Input<string>;
    }

    export interface VPCEConfigurationTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace devopsguru {
    /**
     * Information about notification channels you have configured with DevOps Guru.
     */
    export interface NotificationChannelConfigArgs {
        sns?: pulumi.Input<inputs.devopsguru.NotificationChannelSnsChannelConfigArgs>;
    }

    /**
     * Information about a notification channel configured in DevOps Guru to send notifications when insights are created.
     */
    export interface NotificationChannelSnsChannelConfigArgs {
        topicArn?: pulumi.Input<string>;
    }

    /**
     * CloudFormation resource for DevOps Guru to monitor
     */
    export interface ResourceCollectionCloudFormationCollectionFilterArgs {
        /**
         * An array of CloudFormation stack names.
         */
        stackNames?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Information about a filter used to specify which AWS resources are analyzed for anomalous behavior by DevOps Guru.
     */
    export interface ResourceCollectionFilterArgs {
        cloudFormation?: pulumi.Input<inputs.devopsguru.ResourceCollectionCloudFormationCollectionFilterArgs>;
    }
}

export namespace directoryservice {
    export interface MicrosoftADVpcSettingsArgs {
        subnetIds: pulumi.Input<pulumi.Input<string>[]>;
        vpcId: pulumi.Input<string>;
    }

    export interface SimpleADVpcSettingsArgs {
        subnetIds: pulumi.Input<pulumi.Input<string>[]>;
        vpcId: pulumi.Input<string>;
    }
}

export namespace dlm {
    export interface LifecyclePolicyActionArgs {
        crossRegionCopy: pulumi.Input<pulumi.Input<inputs.dlm.LifecyclePolicyCrossRegionCopyActionArgs>[]>;
        name: pulumi.Input<string>;
    }

    export interface LifecyclePolicyCreateRuleArgs {
        cronExpression?: pulumi.Input<string>;
        interval?: pulumi.Input<number>;
        intervalUnit?: pulumi.Input<string>;
        location?: pulumi.Input<string>;
        times?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LifecyclePolicyCrossRegionCopyActionArgs {
        encryptionConfiguration: pulumi.Input<inputs.dlm.LifecyclePolicyEncryptionConfigurationArgs>;
        retainRule?: pulumi.Input<inputs.dlm.LifecyclePolicyCrossRegionCopyRetainRuleArgs>;
        target: pulumi.Input<string>;
    }

    export interface LifecyclePolicyCrossRegionCopyDeprecateRuleArgs {
        interval: pulumi.Input<number>;
        intervalUnit: pulumi.Input<string>;
    }

    export interface LifecyclePolicyCrossRegionCopyRetainRuleArgs {
        interval: pulumi.Input<number>;
        intervalUnit: pulumi.Input<string>;
    }

    export interface LifecyclePolicyCrossRegionCopyRuleArgs {
        cmkArn?: pulumi.Input<string>;
        copyTags?: pulumi.Input<boolean>;
        deprecateRule?: pulumi.Input<inputs.dlm.LifecyclePolicyCrossRegionCopyDeprecateRuleArgs>;
        encrypted: pulumi.Input<boolean>;
        retainRule?: pulumi.Input<inputs.dlm.LifecyclePolicyCrossRegionCopyRetainRuleArgs>;
        target?: pulumi.Input<string>;
        targetRegion?: pulumi.Input<string>;
    }

    export interface LifecyclePolicyDeprecateRuleArgs {
        count?: pulumi.Input<number>;
        interval?: pulumi.Input<number>;
        intervalUnit?: pulumi.Input<string>;
    }

    export interface LifecyclePolicyEncryptionConfigurationArgs {
        cmkArn?: pulumi.Input<string>;
        encrypted: pulumi.Input<boolean>;
    }

    export interface LifecyclePolicyEventParametersArgs {
        descriptionRegex?: pulumi.Input<string>;
        eventType: pulumi.Input<string>;
        snapshotOwner: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LifecyclePolicyEventSourceArgs {
        parameters?: pulumi.Input<inputs.dlm.LifecyclePolicyEventParametersArgs>;
        type: pulumi.Input<string>;
    }

    export interface LifecyclePolicyFastRestoreRuleArgs {
        availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
        count?: pulumi.Input<number>;
        interval?: pulumi.Input<number>;
        intervalUnit?: pulumi.Input<string>;
    }

    export interface LifecyclePolicyParametersArgs {
        excludeBootVolume?: pulumi.Input<boolean>;
        noReboot?: pulumi.Input<boolean>;
    }

    export interface LifecyclePolicyPolicyDetailsArgs {
        actions?: pulumi.Input<pulumi.Input<inputs.dlm.LifecyclePolicyActionArgs>[]>;
        eventSource?: pulumi.Input<inputs.dlm.LifecyclePolicyEventSourceArgs>;
        parameters?: pulumi.Input<inputs.dlm.LifecyclePolicyParametersArgs>;
        policyType?: pulumi.Input<string>;
        resourceLocations?: pulumi.Input<pulumi.Input<string>[]>;
        resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
        schedules?: pulumi.Input<pulumi.Input<inputs.dlm.LifecyclePolicyScheduleArgs>[]>;
        targetTags?: pulumi.Input<pulumi.Input<inputs.dlm.LifecyclePolicyTagArgs>[]>;
    }

    export interface LifecyclePolicyRetainRuleArgs {
        count?: pulumi.Input<number>;
        interval?: pulumi.Input<number>;
        intervalUnit?: pulumi.Input<string>;
    }

    export interface LifecyclePolicyScheduleArgs {
        copyTags?: pulumi.Input<boolean>;
        createRule?: pulumi.Input<inputs.dlm.LifecyclePolicyCreateRuleArgs>;
        crossRegionCopyRules?: pulumi.Input<pulumi.Input<inputs.dlm.LifecyclePolicyCrossRegionCopyRuleArgs>[]>;
        deprecateRule?: pulumi.Input<inputs.dlm.LifecyclePolicyDeprecateRuleArgs>;
        fastRestoreRule?: pulumi.Input<inputs.dlm.LifecyclePolicyFastRestoreRuleArgs>;
        name?: pulumi.Input<string>;
        retainRule?: pulumi.Input<inputs.dlm.LifecyclePolicyRetainRuleArgs>;
        shareRules?: pulumi.Input<pulumi.Input<inputs.dlm.LifecyclePolicyShareRuleArgs>[]>;
        tagsToAdd?: pulumi.Input<pulumi.Input<inputs.dlm.LifecyclePolicyTagArgs>[]>;
        variableTags?: pulumi.Input<pulumi.Input<inputs.dlm.LifecyclePolicyTagArgs>[]>;
    }

    export interface LifecyclePolicyShareRuleArgs {
        targetAccounts?: pulumi.Input<pulumi.Input<string>[]>;
        unshareInterval?: pulumi.Input<number>;
        unshareIntervalUnit?: pulumi.Input<string>;
    }

    export interface LifecyclePolicyTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace dms {
    export interface EndpointDocDbSettingsArgs {
        secretsManagerAccessRoleArn?: pulumi.Input<string>;
        secretsManagerSecretId?: pulumi.Input<string>;
    }

    export interface EndpointDynamoDbSettingsArgs {
        serviceAccessRoleArn?: pulumi.Input<string>;
    }

    export interface EndpointElasticsearchSettingsArgs {
        endpointUri?: pulumi.Input<string>;
        errorRetryDuration?: pulumi.Input<number>;
        fullLoadErrorPercentage?: pulumi.Input<number>;
        serviceAccessRoleArn?: pulumi.Input<string>;
    }

    export interface EndpointIbmDb2SettingsArgs {
        secretsManagerAccessRoleArn?: pulumi.Input<string>;
        secretsManagerSecretId?: pulumi.Input<string>;
    }

    export interface EndpointKafkaSettingsArgs {
        broker?: pulumi.Input<string>;
        includeControlDetails?: pulumi.Input<boolean>;
        includeNullAndEmpty?: pulumi.Input<boolean>;
        includeTableAlterOperations?: pulumi.Input<boolean>;
        includeTransactionDetails?: pulumi.Input<boolean>;
        noHexPrefix?: pulumi.Input<boolean>;
        partitionIncludeSchemaTable?: pulumi.Input<boolean>;
        saslPassword?: pulumi.Input<string>;
        saslUserName?: pulumi.Input<string>;
        securityProtocol?: pulumi.Input<string>;
        sslCaCertificateArn?: pulumi.Input<string>;
        sslClientCertificateArn?: pulumi.Input<string>;
        sslClientKeyArn?: pulumi.Input<string>;
        sslClientKeyPassword?: pulumi.Input<string>;
        topic?: pulumi.Input<string>;
    }

    export interface EndpointKinesisSettingsArgs {
        includeControlDetails?: pulumi.Input<boolean>;
        includeNullAndEmpty?: pulumi.Input<boolean>;
        includeTableAlterOperations?: pulumi.Input<boolean>;
        includeTransactionDetails?: pulumi.Input<boolean>;
        messageFormat?: pulumi.Input<string>;
        noHexPrefix?: pulumi.Input<boolean>;
        partitionIncludeSchemaTable?: pulumi.Input<boolean>;
        serviceAccessRoleArn?: pulumi.Input<string>;
        streamArn?: pulumi.Input<string>;
    }

    export interface EndpointMicrosoftSqlServerSettingsArgs {
        secretsManagerAccessRoleArn?: pulumi.Input<string>;
        secretsManagerSecretId?: pulumi.Input<string>;
    }

    export interface EndpointMongoDbSettingsArgs {
        authMechanism?: pulumi.Input<string>;
        authSource?: pulumi.Input<string>;
        authType?: pulumi.Input<string>;
        databaseName?: pulumi.Input<string>;
        docsToInvestigate?: pulumi.Input<string>;
        extractDocId?: pulumi.Input<string>;
        nestingLevel?: pulumi.Input<string>;
        password?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        secretsManagerAccessRoleArn?: pulumi.Input<string>;
        secretsManagerSecretId?: pulumi.Input<string>;
        serverName?: pulumi.Input<string>;
        username?: pulumi.Input<string>;
    }

    export interface EndpointMySqlSettingsArgs {
        secretsManagerAccessRoleArn?: pulumi.Input<string>;
        secretsManagerSecretId?: pulumi.Input<string>;
    }

    export interface EndpointNeptuneSettingsArgs {
        errorRetryDuration?: pulumi.Input<number>;
        iamAuthEnabled?: pulumi.Input<boolean>;
        maxFileSize?: pulumi.Input<number>;
        maxRetryCount?: pulumi.Input<number>;
        s3BucketFolder?: pulumi.Input<string>;
        s3BucketName?: pulumi.Input<string>;
        serviceAccessRoleArn?: pulumi.Input<string>;
    }

    export interface EndpointOracleSettingsArgs {
        secretsManagerAccessRoleArn?: pulumi.Input<string>;
        secretsManagerOracleAsmAccessRoleArn?: pulumi.Input<string>;
        secretsManagerOracleAsmSecretId?: pulumi.Input<string>;
        secretsManagerSecretId?: pulumi.Input<string>;
    }

    export interface EndpointPostgreSqlSettingsArgs {
        secretsManagerAccessRoleArn?: pulumi.Input<string>;
        secretsManagerSecretId?: pulumi.Input<string>;
    }

    export interface EndpointRedisSettingsArgs {
        authPassword?: pulumi.Input<string>;
        authType?: pulumi.Input<string>;
        authUserName?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        serverName?: pulumi.Input<string>;
        sslCaCertificateArn?: pulumi.Input<string>;
        sslSecurityProtocol?: pulumi.Input<string>;
    }

    export interface EndpointRedshiftSettingsArgs {
        secretsManagerAccessRoleArn?: pulumi.Input<string>;
        secretsManagerSecretId?: pulumi.Input<string>;
    }

    export interface EndpointS3SettingsArgs {
        bucketFolder?: pulumi.Input<string>;
        bucketName?: pulumi.Input<string>;
        compressionType?: pulumi.Input<string>;
        csvDelimiter?: pulumi.Input<string>;
        csvRowDelimiter?: pulumi.Input<string>;
        externalTableDefinition?: pulumi.Input<string>;
        serviceAccessRoleArn?: pulumi.Input<string>;
    }

    export interface EndpointSybaseSettingsArgs {
        secretsManagerAccessRoleArn?: pulumi.Input<string>;
        secretsManagerSecretId?: pulumi.Input<string>;
    }

    export interface EndpointTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EventSubscriptionTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ReplicationInstanceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ReplicationSubnetGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ReplicationTaskTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

}

export namespace docdb {
    export interface DBClusterParameterGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBClusterTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBInstanceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBSubnetGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace dynamodb {
    export interface GlobalTableAttributeDefinitionArgs {
        attributeName: pulumi.Input<string>;
        attributeType: pulumi.Input<string>;
    }

    export interface GlobalTableCapacityAutoScalingSettingsArgs {
        maxCapacity: pulumi.Input<number>;
        minCapacity: pulumi.Input<number>;
        seedCapacity?: pulumi.Input<number>;
        targetTrackingScalingPolicyConfiguration: pulumi.Input<inputs.dynamodb.GlobalTableTargetTrackingScalingPolicyConfigurationArgs>;
    }

    export interface GlobalTableContributorInsightsSpecificationArgs {
        enabled: pulumi.Input<boolean>;
    }

    export interface GlobalTableGlobalSecondaryIndexArgs {
        indexName: pulumi.Input<string>;
        keySchema: pulumi.Input<pulumi.Input<inputs.dynamodb.GlobalTableKeySchemaArgs>[]>;
        projection: pulumi.Input<inputs.dynamodb.GlobalTableProjectionArgs>;
        writeProvisionedThroughputSettings?: pulumi.Input<inputs.dynamodb.GlobalTableWriteProvisionedThroughputSettingsArgs>;
    }

    export interface GlobalTableKeySchemaArgs {
        attributeName: pulumi.Input<string>;
        keyType: pulumi.Input<string>;
    }

    export interface GlobalTableLocalSecondaryIndexArgs {
        indexName: pulumi.Input<string>;
        keySchema: pulumi.Input<pulumi.Input<inputs.dynamodb.GlobalTableKeySchemaArgs>[]>;
        projection: pulumi.Input<inputs.dynamodb.GlobalTableProjectionArgs>;
    }

    export interface GlobalTablePointInTimeRecoverySpecificationArgs {
        pointInTimeRecoveryEnabled?: pulumi.Input<boolean>;
    }

    export interface GlobalTableProjectionArgs {
        nonKeyAttributes?: pulumi.Input<pulumi.Input<string>[]>;
        projectionType?: pulumi.Input<string>;
    }

    export interface GlobalTableReadProvisionedThroughputSettingsArgs {
        readCapacityAutoScalingSettings?: pulumi.Input<inputs.dynamodb.GlobalTableCapacityAutoScalingSettingsArgs>;
        readCapacityUnits?: pulumi.Input<number>;
    }

    export interface GlobalTableReplicaGlobalSecondaryIndexSpecificationArgs {
        contributorInsightsSpecification?: pulumi.Input<inputs.dynamodb.GlobalTableContributorInsightsSpecificationArgs>;
        indexName: pulumi.Input<string>;
        readProvisionedThroughputSettings?: pulumi.Input<inputs.dynamodb.GlobalTableReadProvisionedThroughputSettingsArgs>;
    }

    export interface GlobalTableReplicaSSESpecificationArgs {
        kMSMasterKeyId: pulumi.Input<string>;
    }

    export interface GlobalTableReplicaSpecificationArgs {
        contributorInsightsSpecification?: pulumi.Input<inputs.dynamodb.GlobalTableContributorInsightsSpecificationArgs>;
        globalSecondaryIndexes?: pulumi.Input<pulumi.Input<inputs.dynamodb.GlobalTableReplicaGlobalSecondaryIndexSpecificationArgs>[]>;
        pointInTimeRecoverySpecification?: pulumi.Input<inputs.dynamodb.GlobalTablePointInTimeRecoverySpecificationArgs>;
        readProvisionedThroughputSettings?: pulumi.Input<inputs.dynamodb.GlobalTableReadProvisionedThroughputSettingsArgs>;
        region: pulumi.Input<string>;
        sSESpecification?: pulumi.Input<inputs.dynamodb.GlobalTableReplicaSSESpecificationArgs>;
        tags?: pulumi.Input<pulumi.Input<inputs.dynamodb.GlobalTableTagArgs>[]>;
    }

    export interface GlobalTableSSESpecificationArgs {
        sSEEnabled: pulumi.Input<boolean>;
        sSEType?: pulumi.Input<string>;
    }

    export interface GlobalTableStreamSpecificationArgs {
        streamViewType: pulumi.Input<string>;
    }

    export interface GlobalTableTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface GlobalTableTargetTrackingScalingPolicyConfigurationArgs {
        disableScaleIn?: pulumi.Input<boolean>;
        scaleInCooldown?: pulumi.Input<number>;
        scaleOutCooldown?: pulumi.Input<number>;
        targetValue: pulumi.Input<number>;
    }

    export interface GlobalTableTimeToLiveSpecificationArgs {
        attributeName?: pulumi.Input<string>;
        enabled: pulumi.Input<boolean>;
    }

    export interface GlobalTableWriteProvisionedThroughputSettingsArgs {
        writeCapacityAutoScalingSettings?: pulumi.Input<inputs.dynamodb.GlobalTableCapacityAutoScalingSettingsArgs>;
    }

    export interface TableAttributeDefinitionArgs {
        attributeName: pulumi.Input<string>;
        attributeType: pulumi.Input<string>;
    }

    export interface TableContributorInsightsSpecificationArgs {
        enabled: pulumi.Input<boolean>;
    }

    export interface TableGlobalSecondaryIndexArgs {
        contributorInsightsSpecification?: pulumi.Input<inputs.dynamodb.TableContributorInsightsSpecificationArgs>;
        indexName: pulumi.Input<string>;
        keySchema: pulumi.Input<pulumi.Input<inputs.dynamodb.TableKeySchemaArgs>[]>;
        projection: pulumi.Input<inputs.dynamodb.TableProjectionArgs>;
        provisionedThroughput?: pulumi.Input<inputs.dynamodb.TableProvisionedThroughputArgs>;
    }

    export interface TableKeySchemaArgs {
        attributeName: pulumi.Input<string>;
        keyType: pulumi.Input<string>;
    }

    export interface TableKinesisStreamSpecificationArgs {
        streamArn: pulumi.Input<string>;
    }

    export interface TableLocalSecondaryIndexArgs {
        indexName: pulumi.Input<string>;
        keySchema: pulumi.Input<pulumi.Input<inputs.dynamodb.TableKeySchemaArgs>[]>;
        projection: pulumi.Input<inputs.dynamodb.TableProjectionArgs>;
    }

    export interface TablePointInTimeRecoverySpecificationArgs {
        pointInTimeRecoveryEnabled?: pulumi.Input<boolean>;
    }

    export interface TableProjectionArgs {
        nonKeyAttributes?: pulumi.Input<pulumi.Input<string>[]>;
        projectionType?: pulumi.Input<string>;
    }

    export interface TableProvisionedThroughputArgs {
        readCapacityUnits: pulumi.Input<number>;
        writeCapacityUnits: pulumi.Input<number>;
    }

    export interface TableSSESpecificationArgs {
        kMSMasterKeyId?: pulumi.Input<string>;
        sSEEnabled: pulumi.Input<boolean>;
        sSEType?: pulumi.Input<string>;
    }

    export interface TableStreamSpecificationArgs {
        streamViewType: pulumi.Input<string>;
    }

    export interface TableTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TableTimeToLiveSpecificationArgs {
        attributeName: pulumi.Input<string>;
        enabled: pulumi.Input<boolean>;
    }
}

export namespace ec2 {
    export interface CapacityReservationFleetInstanceTypeSpecificationArgs {
        availabilityZone?: pulumi.Input<string>;
        availabilityZoneId?: pulumi.Input<string>;
        ebsOptimized?: pulumi.Input<boolean>;
        instancePlatform?: pulumi.Input<string>;
        instanceType?: pulumi.Input<string>;
        priority?: pulumi.Input<number>;
        weight?: pulumi.Input<number>;
    }

    export interface CapacityReservationFleetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface CapacityReservationFleetTagSpecificationArgs {
        resourceType?: pulumi.Input<string>;
        tags?: pulumi.Input<pulumi.Input<inputs.ec2.CapacityReservationFleetTagArgs>[]>;
    }

    export interface CapacityReservationTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface CapacityReservationTagSpecificationArgs {
        resourceType?: pulumi.Input<string>;
        tags?: pulumi.Input<pulumi.Input<inputs.ec2.CapacityReservationTagArgs>[]>;
    }

    export interface CarrierGatewayTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ClientVpnEndpointCertificateAuthenticationRequestArgs {
        clientRootCertificateChainArn: pulumi.Input<string>;
    }

    export interface ClientVpnEndpointClientAuthenticationRequestArgs {
        activeDirectory?: pulumi.Input<inputs.ec2.ClientVpnEndpointDirectoryServiceAuthenticationRequestArgs>;
        federatedAuthentication?: pulumi.Input<inputs.ec2.ClientVpnEndpointFederatedAuthenticationRequestArgs>;
        mutualAuthentication?: pulumi.Input<inputs.ec2.ClientVpnEndpointCertificateAuthenticationRequestArgs>;
        type: pulumi.Input<string>;
    }

    export interface ClientVpnEndpointClientConnectOptionsArgs {
        enabled: pulumi.Input<boolean>;
        lambdaFunctionArn?: pulumi.Input<string>;
    }

    export interface ClientVpnEndpointConnectionLogOptionsArgs {
        cloudwatchLogGroup?: pulumi.Input<string>;
        cloudwatchLogStream?: pulumi.Input<string>;
        enabled: pulumi.Input<boolean>;
    }

    export interface ClientVpnEndpointDirectoryServiceAuthenticationRequestArgs {
        directoryId: pulumi.Input<string>;
    }

    export interface ClientVpnEndpointFederatedAuthenticationRequestArgs {
        sAMLProviderArn: pulumi.Input<string>;
        selfServiceSAMLProviderArn?: pulumi.Input<string>;
    }

    export interface ClientVpnEndpointTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ClientVpnEndpointTagSpecificationArgs {
        resourceType: pulumi.Input<string>;
        tags: pulumi.Input<pulumi.Input<inputs.ec2.ClientVpnEndpointTagArgs>[]>;
    }

    export interface CustomerGatewayTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DHCPOptionsTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EC2FleetAcceleratorCountRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface EC2FleetAcceleratorTotalMemoryMiBRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface EC2FleetBaselineEbsBandwidthMbpsRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface EC2FleetCapacityRebalanceArgs {
        replacementStrategy?: pulumi.Input<enums.ec2.EC2FleetCapacityRebalanceReplacementStrategy>;
        terminationDelay?: pulumi.Input<number>;
    }

    export interface EC2FleetCapacityReservationOptionsRequestArgs {
        usageStrategy?: pulumi.Input<enums.ec2.EC2FleetCapacityReservationOptionsRequestUsageStrategy>;
    }

    export interface EC2FleetFleetLaunchTemplateConfigRequestArgs {
        launchTemplateSpecification?: pulumi.Input<inputs.ec2.EC2FleetFleetLaunchTemplateSpecificationRequestArgs>;
        overrides?: pulumi.Input<pulumi.Input<inputs.ec2.EC2FleetFleetLaunchTemplateOverridesRequestArgs>[]>;
    }

    export interface EC2FleetFleetLaunchTemplateOverridesRequestArgs {
        availabilityZone?: pulumi.Input<string>;
        instanceRequirements?: pulumi.Input<inputs.ec2.EC2FleetInstanceRequirementsRequestArgs>;
        instanceType?: pulumi.Input<string>;
        maxPrice?: pulumi.Input<string>;
        placement?: pulumi.Input<inputs.ec2.EC2FleetPlacementArgs>;
        priority?: pulumi.Input<number>;
        subnetId?: pulumi.Input<string>;
        weightedCapacity?: pulumi.Input<number>;
    }

    export interface EC2FleetFleetLaunchTemplateSpecificationRequestArgs {
        launchTemplateId?: pulumi.Input<string>;
        launchTemplateName?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface EC2FleetInstanceRequirementsRequestArgs {
        acceleratorCount?: pulumi.Input<inputs.ec2.EC2FleetAcceleratorCountRequestArgs>;
        acceleratorManufacturers?: pulumi.Input<pulumi.Input<enums.ec2.EC2FleetInstanceRequirementsRequestAcceleratorManufacturersItem>[]>;
        acceleratorNames?: pulumi.Input<pulumi.Input<enums.ec2.EC2FleetInstanceRequirementsRequestAcceleratorNamesItem>[]>;
        acceleratorTotalMemoryMiB?: pulumi.Input<inputs.ec2.EC2FleetAcceleratorTotalMemoryMiBRequestArgs>;
        acceleratorTypes?: pulumi.Input<pulumi.Input<enums.ec2.EC2FleetInstanceRequirementsRequestAcceleratorTypesItem>[]>;
        bareMetal?: pulumi.Input<enums.ec2.EC2FleetInstanceRequirementsRequestBareMetal>;
        baselineEbsBandwidthMbps?: pulumi.Input<inputs.ec2.EC2FleetBaselineEbsBandwidthMbpsRequestArgs>;
        burstablePerformance?: pulumi.Input<enums.ec2.EC2FleetInstanceRequirementsRequestBurstablePerformance>;
        cpuManufacturers?: pulumi.Input<pulumi.Input<enums.ec2.EC2FleetInstanceRequirementsRequestCpuManufacturersItem>[]>;
        excludedInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
        instanceGenerations?: pulumi.Input<pulumi.Input<enums.ec2.EC2FleetInstanceRequirementsRequestInstanceGenerationsItem>[]>;
        localStorage?: pulumi.Input<enums.ec2.EC2FleetInstanceRequirementsRequestLocalStorage>;
        localStorageTypes?: pulumi.Input<pulumi.Input<enums.ec2.EC2FleetInstanceRequirementsRequestLocalStorageTypesItem>[]>;
        memoryGiBPerVCpu?: pulumi.Input<inputs.ec2.EC2FleetMemoryGiBPerVCpuRequestArgs>;
        memoryMiB?: pulumi.Input<inputs.ec2.EC2FleetMemoryMiBRequestArgs>;
        networkInterfaceCount?: pulumi.Input<inputs.ec2.EC2FleetNetworkInterfaceCountRequestArgs>;
        onDemandMaxPricePercentageOverLowestPrice?: pulumi.Input<number>;
        requireHibernateSupport?: pulumi.Input<boolean>;
        spotMaxPricePercentageOverLowestPrice?: pulumi.Input<number>;
        totalLocalStorageGB?: pulumi.Input<inputs.ec2.EC2FleetTotalLocalStorageGBRequestArgs>;
        vCpuCount?: pulumi.Input<inputs.ec2.EC2FleetVCpuCountRangeRequestArgs>;
    }

    export interface EC2FleetMaintenanceStrategiesArgs {
        capacityRebalance?: pulumi.Input<inputs.ec2.EC2FleetCapacityRebalanceArgs>;
    }

    export interface EC2FleetMemoryGiBPerVCpuRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface EC2FleetMemoryMiBRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface EC2FleetNetworkInterfaceCountRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface EC2FleetOnDemandOptionsRequestArgs {
        allocationStrategy?: pulumi.Input<string>;
        capacityReservationOptions?: pulumi.Input<inputs.ec2.EC2FleetCapacityReservationOptionsRequestArgs>;
        maxTotalPrice?: pulumi.Input<string>;
        minTargetCapacity?: pulumi.Input<number>;
        singleAvailabilityZone?: pulumi.Input<boolean>;
        singleInstanceType?: pulumi.Input<boolean>;
    }

    export interface EC2FleetPlacementArgs {
        affinity?: pulumi.Input<string>;
        availabilityZone?: pulumi.Input<string>;
        groupName?: pulumi.Input<string>;
        hostId?: pulumi.Input<string>;
        hostResourceGroupArn?: pulumi.Input<string>;
        partitionNumber?: pulumi.Input<number>;
        spreadDomain?: pulumi.Input<string>;
        tenancy?: pulumi.Input<string>;
    }

    export interface EC2FleetSpotOptionsRequestArgs {
        allocationStrategy?: pulumi.Input<enums.ec2.EC2FleetSpotOptionsRequestAllocationStrategy>;
        instanceInterruptionBehavior?: pulumi.Input<enums.ec2.EC2FleetSpotOptionsRequestInstanceInterruptionBehavior>;
        instancePoolsToUseCount?: pulumi.Input<number>;
        maintenanceStrategies?: pulumi.Input<inputs.ec2.EC2FleetMaintenanceStrategiesArgs>;
        maxTotalPrice?: pulumi.Input<string>;
        minTargetCapacity?: pulumi.Input<number>;
        singleAvailabilityZone?: pulumi.Input<boolean>;
        singleInstanceType?: pulumi.Input<boolean>;
    }

    export interface EC2FleetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EC2FleetTagSpecificationArgs {
        resourceType?: pulumi.Input<enums.ec2.EC2FleetTagSpecificationResourceType>;
        tags?: pulumi.Input<pulumi.Input<inputs.ec2.EC2FleetTagArgs>[]>;
    }

    export interface EC2FleetTargetCapacitySpecificationRequestArgs {
        defaultTargetCapacityType?: pulumi.Input<enums.ec2.EC2FleetTargetCapacitySpecificationRequestDefaultTargetCapacityType>;
        onDemandTargetCapacity?: pulumi.Input<number>;
        spotTargetCapacity?: pulumi.Input<number>;
        targetCapacityUnitType?: pulumi.Input<enums.ec2.EC2FleetTargetCapacitySpecificationRequestTargetCapacityUnitType>;
        totalTargetCapacity: pulumi.Input<number>;
    }

    export interface EC2FleetTotalLocalStorageGBRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface EC2FleetVCpuCountRangeRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface EIPTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface FlowLogTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * The regions IPAM is enabled for. Allows pools to be created in these regions, as well as enabling monitoring
     */
    export interface IPAMIpamOperatingRegionArgs {
        /**
         * The name of the region.
         */
        regionName: pulumi.Input<string>;
    }

    /**
     * An address space to be inserted into this pool. All allocations must be made from this address space.
     */
    export interface IPAMPoolProvisionedCidrArgs {
        cidr: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface IPAMPoolTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface IPAMScopeTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface IPAMTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    export interface InstanceAssociationParameterArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceBlockDeviceMappingArgs {
        deviceName: pulumi.Input<string>;
        ebs?: pulumi.Input<inputs.ec2.InstanceEbsArgs>;
        noDevice?: pulumi.Input<inputs.ec2.InstanceNoDeviceArgs>;
        virtualName?: pulumi.Input<string>;
    }

    export interface InstanceCpuOptionsArgs {
        coreCount?: pulumi.Input<number>;
        threadsPerCore?: pulumi.Input<number>;
    }

    export interface InstanceCreditSpecificationArgs {
        cPUCredits?: pulumi.Input<string>;
    }

    export interface InstanceEbsArgs {
        deleteOnTermination?: pulumi.Input<boolean>;
        encrypted?: pulumi.Input<boolean>;
        iops?: pulumi.Input<number>;
        kmsKeyId?: pulumi.Input<string>;
        snapshotId?: pulumi.Input<string>;
        volumeSize?: pulumi.Input<number>;
        volumeType?: pulumi.Input<string>;
    }

    export interface InstanceElasticGpuSpecificationArgs {
        type: pulumi.Input<string>;
    }

    export interface InstanceElasticInferenceAcceleratorArgs {
        count?: pulumi.Input<number>;
        type: pulumi.Input<string>;
    }

    export interface InstanceEnclaveOptionsArgs {
        enabled?: pulumi.Input<boolean>;
    }

    export interface InstanceHibernationOptionsArgs {
        configured?: pulumi.Input<boolean>;
    }

    export interface InstanceIpv6AddressArgs {
        ipv6Address: pulumi.Input<string>;
    }

    export interface InstanceLaunchTemplateSpecificationArgs {
        launchTemplateId?: pulumi.Input<string>;
        launchTemplateName?: pulumi.Input<string>;
        version: pulumi.Input<string>;
    }

    export interface InstanceLicenseSpecificationArgs {
        licenseConfigurationArn: pulumi.Input<string>;
    }

    export interface InstanceNetworkInterfaceArgs {
        associatePublicIpAddress?: pulumi.Input<boolean>;
        deleteOnTermination?: pulumi.Input<boolean>;
        description?: pulumi.Input<string>;
        deviceIndex: pulumi.Input<string>;
        groupSet?: pulumi.Input<pulumi.Input<string>[]>;
        ipv6AddressCount?: pulumi.Input<number>;
        ipv6Addresses?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceIpv6AddressArgs>[]>;
        networkInterfaceId?: pulumi.Input<string>;
        privateIpAddress?: pulumi.Input<string>;
        privateIpAddresses?: pulumi.Input<pulumi.Input<inputs.ec2.InstancePrivateIpAddressSpecificationArgs>[]>;
        secondaryPrivateIpAddressCount?: pulumi.Input<number>;
        subnetId?: pulumi.Input<string>;
    }

    export interface InstanceNoDeviceArgs {
    }

    export interface InstancePrivateIpAddressSpecificationArgs {
        primary: pulumi.Input<boolean>;
        privateIpAddress: pulumi.Input<string>;
    }

    export interface InstanceSsmAssociationArgs {
        associationParameters?: pulumi.Input<pulumi.Input<inputs.ec2.InstanceAssociationParameterArgs>[]>;
        documentName: pulumi.Input<string>;
    }

    export interface InstanceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface InstanceVolumeArgs {
        device: pulumi.Input<string>;
        volumeId: pulumi.Input<string>;
    }

    export interface InternetGatewayTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface LaunchTemplateBlockDeviceMappingArgs {
        deviceName?: pulumi.Input<string>;
        ebs?: pulumi.Input<inputs.ec2.LaunchTemplateEbsArgs>;
        noDevice?: pulumi.Input<string>;
        virtualName?: pulumi.Input<string>;
    }

    export interface LaunchTemplateCapacityReservationSpecificationArgs {
        capacityReservationPreference?: pulumi.Input<string>;
        capacityReservationTarget?: pulumi.Input<inputs.ec2.LaunchTemplateCapacityReservationTargetArgs>;
    }

    export interface LaunchTemplateCapacityReservationTargetArgs {
        capacityReservationId?: pulumi.Input<string>;
        capacityReservationResourceGroupArn?: pulumi.Input<string>;
    }

    export interface LaunchTemplateCpuOptionsArgs {
        coreCount?: pulumi.Input<number>;
        threadsPerCore?: pulumi.Input<number>;
    }

    export interface LaunchTemplateCreditSpecificationArgs {
        cpuCredits?: pulumi.Input<string>;
    }

    export interface LaunchTemplateDataArgs {
        blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateBlockDeviceMappingArgs>[]>;
        capacityReservationSpecification?: pulumi.Input<inputs.ec2.LaunchTemplateCapacityReservationSpecificationArgs>;
        cpuOptions?: pulumi.Input<inputs.ec2.LaunchTemplateCpuOptionsArgs>;
        creditSpecification?: pulumi.Input<inputs.ec2.LaunchTemplateCreditSpecificationArgs>;
        disableApiTermination?: pulumi.Input<boolean>;
        ebsOptimized?: pulumi.Input<boolean>;
        elasticGpuSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateElasticGpuSpecificationArgs>[]>;
        elasticInferenceAccelerators?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateElasticInferenceAcceleratorArgs>[]>;
        enclaveOptions?: pulumi.Input<inputs.ec2.LaunchTemplateEnclaveOptionsArgs>;
        hibernationOptions?: pulumi.Input<inputs.ec2.LaunchTemplateHibernationOptionsArgs>;
        iamInstanceProfile?: pulumi.Input<inputs.ec2.LaunchTemplateIamInstanceProfileArgs>;
        imageId?: pulumi.Input<string>;
        instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
        instanceMarketOptions?: pulumi.Input<inputs.ec2.LaunchTemplateInstanceMarketOptionsArgs>;
        instanceType?: pulumi.Input<string>;
        kernelId?: pulumi.Input<string>;
        keyName?: pulumi.Input<string>;
        licenseSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateLicenseSpecificationArgs>[]>;
        metadataOptions?: pulumi.Input<inputs.ec2.LaunchTemplateMetadataOptionsArgs>;
        monitoring?: pulumi.Input<inputs.ec2.LaunchTemplateMonitoringArgs>;
        networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateNetworkInterfaceArgs>[]>;
        placement?: pulumi.Input<inputs.ec2.LaunchTemplatePlacementArgs>;
        ramDiskId?: pulumi.Input<string>;
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        tagSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateTagSpecificationArgs>[]>;
        userData?: pulumi.Input<string>;
    }

    export interface LaunchTemplateEbsArgs {
        deleteOnTermination?: pulumi.Input<boolean>;
        encrypted?: pulumi.Input<boolean>;
        iops?: pulumi.Input<number>;
        kmsKeyId?: pulumi.Input<string>;
        snapshotId?: pulumi.Input<string>;
        throughput?: pulumi.Input<number>;
        volumeSize?: pulumi.Input<number>;
        volumeType?: pulumi.Input<string>;
    }

    export interface LaunchTemplateElasticGpuSpecificationArgs {
        type?: pulumi.Input<string>;
    }

    export interface LaunchTemplateElasticInferenceAcceleratorArgs {
        count?: pulumi.Input<number>;
        type?: pulumi.Input<string>;
    }

    export interface LaunchTemplateEnclaveOptionsArgs {
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateHibernationOptionsArgs {
        configured?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateIamInstanceProfileArgs {
        arn?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface LaunchTemplateInstanceMarketOptionsArgs {
        marketType?: pulumi.Input<string>;
        spotOptions?: pulumi.Input<inputs.ec2.LaunchTemplateSpotOptionsArgs>;
    }

    export interface LaunchTemplateIpv6AddArgs {
        ipv6Address?: pulumi.Input<string>;
    }

    export interface LaunchTemplateLicenseSpecificationArgs {
        licenseConfigurationArn?: pulumi.Input<string>;
    }

    export interface LaunchTemplateMetadataOptionsArgs {
        httpEndpoint?: pulumi.Input<string>;
        httpProtocolIpv6?: pulumi.Input<string>;
        httpPutResponseHopLimit?: pulumi.Input<number>;
        httpTokens?: pulumi.Input<string>;
    }

    export interface LaunchTemplateMonitoringArgs {
        enabled?: pulumi.Input<boolean>;
    }

    export interface LaunchTemplateNetworkInterfaceArgs {
        associateCarrierIpAddress?: pulumi.Input<boolean>;
        associatePublicIpAddress?: pulumi.Input<boolean>;
        deleteOnTermination?: pulumi.Input<boolean>;
        description?: pulumi.Input<string>;
        deviceIndex?: pulumi.Input<number>;
        groups?: pulumi.Input<pulumi.Input<string>[]>;
        interfaceType?: pulumi.Input<string>;
        ipv6AddressCount?: pulumi.Input<number>;
        ipv6Addresses?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateIpv6AddArgs>[]>;
        networkCardIndex?: pulumi.Input<number>;
        networkInterfaceId?: pulumi.Input<string>;
        privateIpAddress?: pulumi.Input<string>;
        privateIpAddresses?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplatePrivateIpAddArgs>[]>;
        secondaryPrivateIpAddressCount?: pulumi.Input<number>;
        subnetId?: pulumi.Input<string>;
    }

    export interface LaunchTemplatePlacementArgs {
        affinity?: pulumi.Input<string>;
        availabilityZone?: pulumi.Input<string>;
        groupName?: pulumi.Input<string>;
        hostId?: pulumi.Input<string>;
        hostResourceGroupArn?: pulumi.Input<string>;
        partitionNumber?: pulumi.Input<number>;
        spreadDomain?: pulumi.Input<string>;
        tenancy?: pulumi.Input<string>;
    }

    export interface LaunchTemplatePrivateIpAddArgs {
        primary?: pulumi.Input<boolean>;
        privateIpAddress?: pulumi.Input<string>;
    }

    export interface LaunchTemplateSpotOptionsArgs {
        blockDurationMinutes?: pulumi.Input<number>;
        instanceInterruptionBehavior?: pulumi.Input<string>;
        maxPrice?: pulumi.Input<string>;
        spotInstanceType?: pulumi.Input<string>;
        validUntil?: pulumi.Input<string>;
    }

    export interface LaunchTemplateTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface LaunchTemplateTagSpecificationArgs {
        resourceType?: pulumi.Input<string>;
        tags?: pulumi.Input<pulumi.Input<inputs.ec2.LaunchTemplateTagArgs>[]>;
    }

    export interface LocalGatewayRouteTableVPCAssociationTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface NatGatewayTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface NetworkAclEntryIcmpArgs {
        code?: pulumi.Input<number>;
        type?: pulumi.Input<number>;
    }

    export interface NetworkAclEntryPortRangeArgs {
        from?: pulumi.Input<number>;
        to?: pulumi.Input<number>;
    }

    export interface NetworkAclTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface NetworkInsightsAnalysisTagArgs {
        key: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface NetworkInsightsPathTagArgs {
        key: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface NetworkInterfaceInstanceIpv6AddressArgs {
        ipv6Address: pulumi.Input<string>;
    }

    export interface NetworkInterfacePrivateIpAddressSpecificationArgs {
        primary: pulumi.Input<boolean>;
        privateIpAddress: pulumi.Input<string>;
    }

    export interface NetworkInterfaceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * The options for the transit gateway vpc attachment.
     */
    export interface OptionsPropertiesArgs {
        /**
         * Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable
         */
        applianceModeSupport?: pulumi.Input<string>;
        /**
         * Indicates whether to enable DNS Support for Vpc Attachment. Valid Values: enable | disable
         */
        dnsSupport?: pulumi.Input<string>;
        /**
         * Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable
         */
        ipv6Support?: pulumi.Input<string>;
    }

    export interface PrefixListEntryArgs {
        cidr: pulumi.Input<string>;
        description?: pulumi.Input<string>;
    }

    export interface PrefixListTagArgs {
        key: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface RouteTableTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface SecurityGroupEgressArgs {
        cidrIp?: pulumi.Input<string>;
        cidrIpv6?: pulumi.Input<string>;
        description?: pulumi.Input<string>;
        destinationPrefixListId?: pulumi.Input<string>;
        destinationSecurityGroupId?: pulumi.Input<string>;
        fromPort?: pulumi.Input<number>;
        ipProtocol: pulumi.Input<string>;
        toPort?: pulumi.Input<number>;
    }

    export interface SecurityGroupIngressArgs {
        cidrIp?: pulumi.Input<string>;
        cidrIpv6?: pulumi.Input<string>;
        description?: pulumi.Input<string>;
        fromPort?: pulumi.Input<number>;
        ipProtocol: pulumi.Input<string>;
        sourcePrefixListId?: pulumi.Input<string>;
        sourceSecurityGroupId?: pulumi.Input<string>;
        sourceSecurityGroupName?: pulumi.Input<string>;
        sourceSecurityGroupOwnerId?: pulumi.Input<string>;
        toPort?: pulumi.Input<number>;
    }

    export interface SecurityGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface SpotFleetAcceleratorCountRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface SpotFleetAcceleratorTotalMemoryMiBRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface SpotFleetBaselineEbsBandwidthMbpsRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface SpotFleetBlockDeviceMappingArgs {
        deviceName: pulumi.Input<string>;
        ebs?: pulumi.Input<inputs.ec2.SpotFleetEbsBlockDeviceArgs>;
        noDevice?: pulumi.Input<string>;
        virtualName?: pulumi.Input<string>;
    }

    export interface SpotFleetClassicLoadBalancerArgs {
        name: pulumi.Input<string>;
    }

    export interface SpotFleetClassicLoadBalancersConfigArgs {
        classicLoadBalancers: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetClassicLoadBalancerArgs>[]>;
    }

    export interface SpotFleetEbsBlockDeviceArgs {
        deleteOnTermination?: pulumi.Input<boolean>;
        encrypted?: pulumi.Input<boolean>;
        iops?: pulumi.Input<number>;
        snapshotId?: pulumi.Input<string>;
        volumeSize?: pulumi.Input<number>;
        volumeType?: pulumi.Input<enums.ec2.SpotFleetEbsBlockDeviceVolumeType>;
    }

    export interface SpotFleetFleetLaunchTemplateSpecificationArgs {
        launchTemplateId?: pulumi.Input<string>;
        launchTemplateName?: pulumi.Input<string>;
        version: pulumi.Input<string>;
    }

    export interface SpotFleetGroupIdentifierArgs {
        groupId: pulumi.Input<string>;
    }

    export interface SpotFleetIamInstanceProfileSpecificationArgs {
        arn?: pulumi.Input<string>;
    }

    export interface SpotFleetInstanceIpv6AddressArgs {
        ipv6Address: pulumi.Input<string>;
    }

    export interface SpotFleetInstanceNetworkInterfaceSpecificationArgs {
        associatePublicIpAddress?: pulumi.Input<boolean>;
        deleteOnTermination?: pulumi.Input<boolean>;
        description?: pulumi.Input<string>;
        deviceIndex?: pulumi.Input<number>;
        groups?: pulumi.Input<pulumi.Input<string>[]>;
        ipv6AddressCount?: pulumi.Input<number>;
        ipv6Addresses?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetInstanceIpv6AddressArgs>[]>;
        networkInterfaceId?: pulumi.Input<string>;
        privateIpAddresses?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetPrivateIpAddressSpecificationArgs>[]>;
        secondaryPrivateIpAddressCount?: pulumi.Input<number>;
        subnetId?: pulumi.Input<string>;
    }

    export interface SpotFleetInstanceRequirementsRequestArgs {
        acceleratorCount?: pulumi.Input<inputs.ec2.SpotFleetAcceleratorCountRequestArgs>;
        acceleratorManufacturers?: pulumi.Input<pulumi.Input<enums.ec2.SpotFleetInstanceRequirementsRequestAcceleratorManufacturersItem>[]>;
        acceleratorNames?: pulumi.Input<pulumi.Input<enums.ec2.SpotFleetInstanceRequirementsRequestAcceleratorNamesItem>[]>;
        acceleratorTotalMemoryMiB?: pulumi.Input<inputs.ec2.SpotFleetAcceleratorTotalMemoryMiBRequestArgs>;
        acceleratorTypes?: pulumi.Input<pulumi.Input<enums.ec2.SpotFleetInstanceRequirementsRequestAcceleratorTypesItem>[]>;
        bareMetal?: pulumi.Input<enums.ec2.SpotFleetInstanceRequirementsRequestBareMetal>;
        baselineEbsBandwidthMbps?: pulumi.Input<inputs.ec2.SpotFleetBaselineEbsBandwidthMbpsRequestArgs>;
        burstablePerformance?: pulumi.Input<enums.ec2.SpotFleetInstanceRequirementsRequestBurstablePerformance>;
        cpuManufacturers?: pulumi.Input<pulumi.Input<enums.ec2.SpotFleetInstanceRequirementsRequestCpuManufacturersItem>[]>;
        excludedInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
        instanceGenerations?: pulumi.Input<pulumi.Input<enums.ec2.SpotFleetInstanceRequirementsRequestInstanceGenerationsItem>[]>;
        localStorage?: pulumi.Input<enums.ec2.SpotFleetInstanceRequirementsRequestLocalStorage>;
        localStorageTypes?: pulumi.Input<pulumi.Input<enums.ec2.SpotFleetInstanceRequirementsRequestLocalStorageTypesItem>[]>;
        memoryGiBPerVCpu?: pulumi.Input<inputs.ec2.SpotFleetMemoryGiBPerVCpuRequestArgs>;
        memoryMiB?: pulumi.Input<inputs.ec2.SpotFleetMemoryMiBRequestArgs>;
        networkInterfaceCount?: pulumi.Input<inputs.ec2.SpotFleetNetworkInterfaceCountRequestArgs>;
        onDemandMaxPricePercentageOverLowestPrice?: pulumi.Input<number>;
        requireHibernateSupport?: pulumi.Input<boolean>;
        spotMaxPricePercentageOverLowestPrice?: pulumi.Input<number>;
        totalLocalStorageGB?: pulumi.Input<inputs.ec2.SpotFleetTotalLocalStorageGBRequestArgs>;
        vCpuCount?: pulumi.Input<inputs.ec2.SpotFleetVCpuCountRangeRequestArgs>;
    }

    export interface SpotFleetLaunchSpecificationArgs {
        blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetBlockDeviceMappingArgs>[]>;
        ebsOptimized?: pulumi.Input<boolean>;
        iamInstanceProfile?: pulumi.Input<inputs.ec2.SpotFleetIamInstanceProfileSpecificationArgs>;
        imageId: pulumi.Input<string>;
        instanceRequirements?: pulumi.Input<inputs.ec2.SpotFleetInstanceRequirementsRequestArgs>;
        instanceType?: pulumi.Input<string>;
        kernelId?: pulumi.Input<string>;
        keyName?: pulumi.Input<string>;
        monitoring?: pulumi.Input<inputs.ec2.SpotFleetMonitoringArgs>;
        networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetInstanceNetworkInterfaceSpecificationArgs>[]>;
        placement?: pulumi.Input<inputs.ec2.SpotFleetSpotPlacementArgs>;
        ramdiskId?: pulumi.Input<string>;
        securityGroups?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetGroupIdentifierArgs>[]>;
        spotPrice?: pulumi.Input<string>;
        subnetId?: pulumi.Input<string>;
        tagSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetTagSpecificationArgs>[]>;
        userData?: pulumi.Input<string>;
        weightedCapacity?: pulumi.Input<number>;
    }

    export interface SpotFleetLaunchTemplateConfigArgs {
        launchTemplateSpecification?: pulumi.Input<inputs.ec2.SpotFleetFleetLaunchTemplateSpecificationArgs>;
        overrides?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetLaunchTemplateOverridesArgs>[]>;
    }

    export interface SpotFleetLaunchTemplateOverridesArgs {
        availabilityZone?: pulumi.Input<string>;
        instanceRequirements?: pulumi.Input<inputs.ec2.SpotFleetInstanceRequirementsRequestArgs>;
        instanceType?: pulumi.Input<string>;
        spotPrice?: pulumi.Input<string>;
        subnetId?: pulumi.Input<string>;
        weightedCapacity?: pulumi.Input<number>;
    }

    export interface SpotFleetLoadBalancersConfigArgs {
        classicLoadBalancersConfig?: pulumi.Input<inputs.ec2.SpotFleetClassicLoadBalancersConfigArgs>;
        targetGroupsConfig?: pulumi.Input<inputs.ec2.SpotFleetTargetGroupsConfigArgs>;
    }

    export interface SpotFleetMemoryGiBPerVCpuRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface SpotFleetMemoryMiBRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface SpotFleetMonitoringArgs {
        enabled?: pulumi.Input<boolean>;
    }

    export interface SpotFleetNetworkInterfaceCountRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface SpotFleetPrivateIpAddressSpecificationArgs {
        primary?: pulumi.Input<boolean>;
        privateIpAddress: pulumi.Input<string>;
    }

    export interface SpotFleetRequestConfigDataArgs {
        allocationStrategy?: pulumi.Input<enums.ec2.SpotFleetRequestConfigDataAllocationStrategy>;
        context?: pulumi.Input<string>;
        excessCapacityTerminationPolicy?: pulumi.Input<enums.ec2.SpotFleetRequestConfigDataExcessCapacityTerminationPolicy>;
        iamFleetRole: pulumi.Input<string>;
        instanceInterruptionBehavior?: pulumi.Input<enums.ec2.SpotFleetRequestConfigDataInstanceInterruptionBehavior>;
        instancePoolsToUseCount?: pulumi.Input<number>;
        launchSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetLaunchSpecificationArgs>[]>;
        launchTemplateConfigs?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetLaunchTemplateConfigArgs>[]>;
        loadBalancersConfig?: pulumi.Input<inputs.ec2.SpotFleetLoadBalancersConfigArgs>;
        onDemandAllocationStrategy?: pulumi.Input<string>;
        onDemandMaxTotalPrice?: pulumi.Input<string>;
        onDemandTargetCapacity?: pulumi.Input<number>;
        replaceUnhealthyInstances?: pulumi.Input<boolean>;
        spotMaintenanceStrategies?: pulumi.Input<inputs.ec2.SpotFleetSpotMaintenanceStrategiesArgs>;
        spotMaxTotalPrice?: pulumi.Input<string>;
        spotPrice?: pulumi.Input<string>;
        targetCapacity: pulumi.Input<number>;
        targetCapacityUnitType?: pulumi.Input<enums.ec2.SpotFleetRequestConfigDataTargetCapacityUnitType>;
        terminateInstancesWithExpiration?: pulumi.Input<boolean>;
        type?: pulumi.Input<enums.ec2.SpotFleetRequestConfigDataType>;
        validFrom?: pulumi.Input<string>;
        validUntil?: pulumi.Input<string>;
    }

    export interface SpotFleetSpotCapacityRebalanceArgs {
        replacementStrategy?: pulumi.Input<enums.ec2.SpotFleetSpotCapacityRebalanceReplacementStrategy>;
        terminationDelay?: pulumi.Input<number>;
    }

    export interface SpotFleetSpotMaintenanceStrategiesArgs {
        capacityRebalance?: pulumi.Input<inputs.ec2.SpotFleetSpotCapacityRebalanceArgs>;
    }

    export interface SpotFleetSpotPlacementArgs {
        availabilityZone?: pulumi.Input<string>;
        groupName?: pulumi.Input<string>;
        tenancy?: pulumi.Input<enums.ec2.SpotFleetSpotPlacementTenancy>;
    }

    export interface SpotFleetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface SpotFleetTagSpecificationArgs {
        resourceType?: pulumi.Input<enums.ec2.SpotFleetTagSpecificationResourceType>;
        tags?: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetTagArgs>[]>;
    }

    export interface SpotFleetTargetGroupArgs {
        arn: pulumi.Input<string>;
    }

    export interface SpotFleetTargetGroupsConfigArgs {
        targetGroups: pulumi.Input<pulumi.Input<inputs.ec2.SpotFleetTargetGroupArgs>[]>;
    }

    export interface SpotFleetTotalLocalStorageGBRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface SpotFleetVCpuCountRangeRequestArgs {
        max?: pulumi.Input<number>;
        min?: pulumi.Input<number>;
    }

    export interface SubnetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TrafficMirrorFilterRuleTrafficMirrorPortRangeArgs {
        fromPort: pulumi.Input<number>;
        toPort: pulumi.Input<number>;
    }

    export interface TrafficMirrorFilterTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TrafficMirrorSessionTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TrafficMirrorTargetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TransitGatewayAttachmentTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TransitGatewayConnectOptionsArgs {
        /**
         * The tunnel protocol.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface TransitGatewayConnectTagArgs {
        /**
         * The key of the tag. Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws:.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the tag. Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
         */
        value?: pulumi.Input<string>;
    }

    export interface TransitGatewayMulticastDomainTagArgs {
        /**
         * The key of the tag. Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws:.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the tag. Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
         */
        value?: pulumi.Input<string>;
    }

    export interface TransitGatewayPeeringAttachmentOptionsArgs {
        /**
         * Whether to enable dynamic routing. (enable/disable)
         */
        dynamicRouting?: pulumi.Input<string>;
    }

    export interface TransitGatewayPeeringAttachmentTagArgs {
        /**
         * The key of the tag. Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws:.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the tag. Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
         */
        value?: pulumi.Input<string>;
    }

    export interface TransitGatewayRouteTableTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TransitGatewayTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TransitGatewayVpcAttachmentTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VPCPeeringConnectionTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VPCTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VPNConnectionTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VPNConnectionVpnTunnelOptionsSpecificationArgs {
        preSharedKey?: pulumi.Input<string>;
        tunnelInsideCidr?: pulumi.Input<string>;
    }

    export interface VPNGatewayTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VolumeTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace ecr {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface PublicRepositoryTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * An object representing the replication configuration for a registry.
     */
    export interface ReplicationConfigurationArgs {
        /**
         * An array of objects representing the replication rules for a replication configuration. A replication configuration may contain a maximum of 10 rules.
         */
        rules: pulumi.Input<pulumi.Input<inputs.ecr.ReplicationConfigurationReplicationRuleArgs>[]>;
    }

    /**
     * An array of objects representing the details of a replication destination.
     */
    export interface ReplicationConfigurationReplicationDestinationArgs {
        region: pulumi.Input<string>;
        registryId: pulumi.Input<string>;
    }

    /**
     * An array of objects representing the details of a replication destination.
     */
    export interface ReplicationConfigurationReplicationRuleArgs {
        /**
         * An array of objects representing the details of a replication destination.
         */
        destinations: pulumi.Input<pulumi.Input<inputs.ecr.ReplicationConfigurationReplicationDestinationArgs>[]>;
        /**
         * An array of objects representing the details of a repository filter.
         */
        repositoryFilters?: pulumi.Input<pulumi.Input<inputs.ecr.ReplicationConfigurationRepositoryFilterArgs>[]>;
    }

    /**
     * An array of objects representing the details of a repository filter.
     */
    export interface ReplicationConfigurationRepositoryFilterArgs {
        filter: pulumi.Input<string>;
        filterType: pulumi.Input<enums.ecr.ReplicationConfigurationFilterType>;
    }

    /**
     * The CatalogData property type specifies Catalog data for ECR Public Repository. For information about Catalog Data, see <link>
     */
    export interface RepositoryCatalogDataPropertiesArgs {
        aboutText?: pulumi.Input<string>;
        architectures?: pulumi.Input<pulumi.Input<string>[]>;
        operatingSystems?: pulumi.Input<pulumi.Input<string>[]>;
        repositoryDescription?: pulumi.Input<string>;
        usageText?: pulumi.Input<string>;
    }

    /**
     * The encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.
     *
     * By default, when no encryption configuration is set or the AES256 encryption type is used, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts your data at rest using an AES-256 encryption algorithm. This does not require any action on your part.
     *
     * For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html
     */
    export interface RepositoryEncryptionConfigurationArgs {
        encryptionType: pulumi.Input<enums.ecr.RepositoryEncryptionType>;
        kmsKey?: pulumi.Input<string>;
    }

    /**
     * The image scanning configuration for the repository. This setting determines whether images are scanned for known vulnerabilities after being pushed to the repository.
     */
    export interface RepositoryImageScanningConfigurationArgs {
        scanOnPush?: pulumi.Input<boolean>;
    }

    /**
     * The LifecyclePolicy property type specifies a lifecycle policy. For information about lifecycle policy syntax, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
     */
    export interface RepositoryLifecyclePolicyArgs {
        lifecyclePolicyText?: pulumi.Input<string>;
        registryId?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface RepositoryTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace ecs {
    export interface CapacityProviderAutoScalingGroupProviderArgs {
        autoScalingGroupArn: pulumi.Input<string>;
        managedScaling?: pulumi.Input<inputs.ecs.CapacityProviderManagedScalingArgs>;
        managedTerminationProtection?: pulumi.Input<enums.ecs.CapacityProviderAutoScalingGroupProviderManagedTerminationProtection>;
    }

    /**
     * The managed scaling settings for the Auto Scaling group capacity provider.
     */
    export interface CapacityProviderManagedScalingArgs {
        instanceWarmupPeriod?: pulumi.Input<number>;
        maximumScalingStepSize?: pulumi.Input<number>;
        minimumScalingStepSize?: pulumi.Input<number>;
        status?: pulumi.Input<enums.ecs.CapacityProviderManagedScalingStatus>;
        targetCapacity?: pulumi.Input<number>;
    }

    export interface CapacityProviderTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs {
        base?: pulumi.Input<number>;
        capacityProvider: pulumi.Input<enums.ecs.ClusterCapacityProviderAssociationsCapacityProvider | string>;
        weight?: pulumi.Input<number>;
    }

    /**
     * A capacity provider strategy consists of one or more capacity providers along with the `base` and `weight` to assign to them. A capacity provider must be associated with the cluster to be used in a capacity provider strategy. The PutClusterCapacityProviders API is used to associate a capacity provider with a cluster. Only capacity providers with an `ACTIVE` or `UPDATING` status can be used.
     */
    export interface ClusterCapacityProviderStrategyItemArgs {
        base?: pulumi.Input<number>;
        capacityProvider?: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }

    /**
     * The configurations to be set at cluster level.
     */
    export interface ClusterConfigurationArgs {
        executeCommandConfiguration?: pulumi.Input<inputs.ecs.ClusterExecuteCommandConfigurationArgs>;
    }

    /**
     * The configuration for ExecuteCommand.
     */
    export interface ClusterExecuteCommandConfigurationArgs {
        kmsKeyId?: pulumi.Input<string>;
        logConfiguration?: pulumi.Input<inputs.ecs.ClusterExecuteCommandLogConfigurationArgs>;
        logging?: pulumi.Input<string>;
    }

    /**
     * The session logging configuration for ExecuteCommand.
     */
    export interface ClusterExecuteCommandLogConfigurationArgs {
        cloudWatchEncryptionEnabled?: pulumi.Input<boolean>;
        cloudWatchLogGroupName?: pulumi.Input<string>;
        s3BucketName?: pulumi.Input<string>;
        s3EncryptionEnabled?: pulumi.Input<boolean>;
        s3KeyPrefix?: pulumi.Input<string>;
    }

    /**
     * The setting to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster. If this value is specified, it will override the containerInsights value set with PutAccountSetting or PutAccountSettingDefault.
     */
    export interface ClusterSettingsArgs {
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.
     */
    export interface ClusterTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ServiceAwsVpcConfigurationArgs {
        assignPublicIp?: pulumi.Input<enums.ecs.ServiceAwsVpcConfigurationAssignPublicIp>;
        securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        subnets?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ServiceCapacityProviderStrategyItemArgs {
        base?: pulumi.Input<number>;
        capacityProvider?: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }

    export interface ServiceDeploymentCircuitBreakerArgs {
        enable: pulumi.Input<boolean>;
        rollback: pulumi.Input<boolean>;
    }

    export interface ServiceDeploymentConfigurationArgs {
        deploymentCircuitBreaker?: pulumi.Input<inputs.ecs.ServiceDeploymentCircuitBreakerArgs>;
        maximumPercent?: pulumi.Input<number>;
        minimumHealthyPercent?: pulumi.Input<number>;
    }

    export interface ServiceDeploymentControllerArgs {
        type?: pulumi.Input<enums.ecs.ServiceDeploymentControllerType>;
    }

    export interface ServiceLoadBalancerArgs {
        containerName?: pulumi.Input<string>;
        containerPort?: pulumi.Input<number>;
        loadBalancerName?: pulumi.Input<string>;
        targetGroupArn?: pulumi.Input<string>;
    }

    export interface ServiceNetworkConfigurationArgs {
        awsvpcConfiguration?: pulumi.Input<inputs.ecs.ServiceAwsVpcConfigurationArgs>;
    }

    export interface ServicePlacementConstraintArgs {
        expression?: pulumi.Input<string>;
        type: pulumi.Input<enums.ecs.ServicePlacementConstraintType>;
    }

    export interface ServicePlacementStrategyArgs {
        field?: pulumi.Input<string>;
        type: pulumi.Input<enums.ecs.ServicePlacementStrategyType>;
    }

    export interface ServiceRegistryArgs {
        containerName?: pulumi.Input<string>;
        containerPort?: pulumi.Input<number>;
        port?: pulumi.Input<number>;
        registryArn?: pulumi.Input<string>;
    }

    export interface ServiceTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface TaskDefinitionAuthorizationConfigArgs {
        accessPointId?: pulumi.Input<string>;
        iAM?: pulumi.Input<enums.ecs.TaskDefinitionAuthorizationConfigIAM>;
    }

    /**
     * List of container definitions that are passed to the Docker daemon on a container instance
     */
    export interface TaskDefinitionContainerDefinitionArgs {
        command?: pulumi.Input<pulumi.Input<string>[]>;
        cpu?: pulumi.Input<number>;
        dependsOn?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionContainerDependencyArgs>[]>;
        disableNetworking?: pulumi.Input<boolean>;
        dnsSearchDomains?: pulumi.Input<pulumi.Input<string>[]>;
        dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
        dockerLabels?: any;
        dockerSecurityOptions?: pulumi.Input<pulumi.Input<string>[]>;
        entryPoint?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The environment variables to pass to a container
         */
        environment?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionKeyValuePairArgs>[]>;
        /**
         * The list of one or more files that contain the environment variables to pass to a container
         */
        environmentFiles?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionEnvironmentFileArgs>[]>;
        essential?: pulumi.Input<boolean>;
        extraHosts?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionHostEntryArgs>[]>;
        firelensConfiguration?: pulumi.Input<inputs.ecs.TaskDefinitionFirelensConfigurationArgs>;
        healthCheck?: pulumi.Input<inputs.ecs.TaskDefinitionHealthCheckArgs>;
        hostname?: pulumi.Input<string>;
        /**
         * The image used to start a container. This string is passed directly to the Docker daemon.
         */
        image?: pulumi.Input<string>;
        interactive?: pulumi.Input<boolean>;
        links?: pulumi.Input<pulumi.Input<string>[]>;
        linuxParameters?: pulumi.Input<inputs.ecs.TaskDefinitionLinuxParametersArgs>;
        logConfiguration?: pulumi.Input<inputs.ecs.TaskDefinitionLogConfigurationArgs>;
        /**
         * The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed.
         */
        memory?: pulumi.Input<number>;
        memoryReservation?: pulumi.Input<number>;
        mountPoints?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionMountPointArgs>[]>;
        /**
         * The name of a container. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed
         */
        name?: pulumi.Input<string>;
        /**
         * Port mappings allow containers to access ports on the host container instance to send or receive traffic.
         */
        portMappings?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionPortMappingArgs>[]>;
        privileged?: pulumi.Input<boolean>;
        pseudoTerminal?: pulumi.Input<boolean>;
        readonlyRootFilesystem?: pulumi.Input<boolean>;
        repositoryCredentials?: pulumi.Input<inputs.ecs.TaskDefinitionRepositoryCredentialsArgs>;
        resourceRequirements?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionResourceRequirementArgs>[]>;
        secrets?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionSecretArgs>[]>;
        startTimeout?: pulumi.Input<number>;
        stopTimeout?: pulumi.Input<number>;
        systemControls?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionSystemControlArgs>[]>;
        ulimits?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionUlimitArgs>[]>;
        user?: pulumi.Input<string>;
        volumesFrom?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionVolumeFromArgs>[]>;
        workingDirectory?: pulumi.Input<string>;
    }

    export interface TaskDefinitionContainerDependencyArgs {
        condition?: pulumi.Input<string>;
        containerName?: pulumi.Input<string>;
    }

    export interface TaskDefinitionDeviceArgs {
        containerPath?: pulumi.Input<string>;
        hostPath?: pulumi.Input<string>;
        permissions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface TaskDefinitionDockerVolumeConfigurationArgs {
        autoprovision?: pulumi.Input<boolean>;
        driver?: pulumi.Input<string>;
        driverOpts?: any;
        labels?: any;
        scope?: pulumi.Input<string>;
    }

    export interface TaskDefinitionEFSVolumeConfigurationArgs {
        authorizationConfig?: pulumi.Input<inputs.ecs.TaskDefinitionAuthorizationConfigArgs>;
        filesystemId: pulumi.Input<string>;
        rootDirectory?: pulumi.Input<string>;
        transitEncryption?: pulumi.Input<enums.ecs.TaskDefinitionEFSVolumeConfigurationTransitEncryption>;
        transitEncryptionPort?: pulumi.Input<number>;
    }

    export interface TaskDefinitionEnvironmentFileArgs {
        type?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface TaskDefinitionEphemeralStorageArgs {
        sizeInGiB?: pulumi.Input<number>;
    }

    export interface TaskDefinitionFirelensConfigurationArgs {
        options?: any;
        type?: pulumi.Input<string>;
    }

    /**
     * The health check command and associated configuration parameters for the container.
     */
    export interface TaskDefinitionHealthCheckArgs {
        /**
         * A string array representing the command that the container runs to determine if it is healthy.
         */
        command?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.
         */
        interval?: pulumi.Input<number>;
        /**
         * The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is three retries.
         */
        retries?: pulumi.Input<number>;
        /**
         * The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The startPeriod is disabled by default.
         */
        startPeriod?: pulumi.Input<number>;
        /**
         * The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5 seconds.
         */
        timeout?: pulumi.Input<number>;
    }

    export interface TaskDefinitionHostEntryArgs {
        hostname?: pulumi.Input<string>;
        ipAddress?: pulumi.Input<string>;
    }

    export interface TaskDefinitionHostVolumePropertiesArgs {
        sourcePath?: pulumi.Input<string>;
    }

    export interface TaskDefinitionInferenceAcceleratorArgs {
        deviceName?: pulumi.Input<string>;
        deviceType?: pulumi.Input<string>;
    }

    export interface TaskDefinitionKernelCapabilitiesArgs {
        add?: pulumi.Input<pulumi.Input<string>[]>;
        drop?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface TaskDefinitionKeyValuePairArgs {
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface TaskDefinitionLinuxParametersArgs {
        capabilities?: pulumi.Input<inputs.ecs.TaskDefinitionKernelCapabilitiesArgs>;
        devices?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionDeviceArgs>[]>;
        initProcessEnabled?: pulumi.Input<boolean>;
        maxSwap?: pulumi.Input<number>;
        sharedMemorySize?: pulumi.Input<number>;
        swappiness?: pulumi.Input<number>;
        tmpfs?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionTmpfsArgs>[]>;
    }

    export interface TaskDefinitionLogConfigurationArgs {
        logDriver: pulumi.Input<string>;
        options?: any;
        secretOptions?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionSecretArgs>[]>;
    }

    export interface TaskDefinitionMountPointArgs {
        containerPath?: pulumi.Input<string>;
        readOnly?: pulumi.Input<boolean>;
        sourceVolume?: pulumi.Input<string>;
    }

    export interface TaskDefinitionPlacementConstraintArgs {
        expression?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface TaskDefinitionPortMappingArgs {
        containerPort?: pulumi.Input<number>;
        hostPort?: pulumi.Input<number>;
        protocol?: pulumi.Input<string>;
    }

    export interface TaskDefinitionProxyConfigurationArgs {
        containerName: pulumi.Input<string>;
        proxyConfigurationProperties?: pulumi.Input<pulumi.Input<inputs.ecs.TaskDefinitionKeyValuePairArgs>[]>;
        type?: pulumi.Input<string>;
    }

    export interface TaskDefinitionRepositoryCredentialsArgs {
        credentialsParameter?: pulumi.Input<string>;
    }

    export interface TaskDefinitionResourceRequirementArgs {
        type: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TaskDefinitionRuntimePlatformArgs {
        cpuArchitecture?: pulumi.Input<string>;
        operatingSystemFamily?: pulumi.Input<string>;
    }

    export interface TaskDefinitionSecretArgs {
        name: pulumi.Input<string>;
        valueFrom: pulumi.Input<string>;
    }

    export interface TaskDefinitionSystemControlArgs {
        namespace?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface TaskDefinitionTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface TaskDefinitionTmpfsArgs {
        containerPath?: pulumi.Input<string>;
        mountOptions?: pulumi.Input<pulumi.Input<string>[]>;
        size: pulumi.Input<number>;
    }

    export interface TaskDefinitionUlimitArgs {
        hardLimit: pulumi.Input<number>;
        name: pulumi.Input<string>;
        softLimit: pulumi.Input<number>;
    }

    export interface TaskDefinitionVolumeArgs {
        dockerVolumeConfiguration?: pulumi.Input<inputs.ecs.TaskDefinitionDockerVolumeConfigurationArgs>;
        eFSVolumeConfiguration?: pulumi.Input<inputs.ecs.TaskDefinitionEFSVolumeConfigurationArgs>;
        host?: pulumi.Input<inputs.ecs.TaskDefinitionHostVolumePropertiesArgs>;
        name?: pulumi.Input<string>;
    }

    export interface TaskDefinitionVolumeFromArgs {
        readOnly?: pulumi.Input<boolean>;
        sourceContainer?: pulumi.Input<string>;
    }

    /**
     * The VPC subnets and security groups associated with a task. All specified subnets and security groups must be from the same VPC.
     */
    export interface TaskSetAwsVpcConfigurationArgs {
        /**
         * Whether the task's elastic network interface receives a public IP address. The default value is DISABLED.
         */
        assignPublicIp?: pulumi.Input<enums.ecs.TaskSetAwsVpcConfigurationAssignPublicIp>;
        /**
         * The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used. There is a limit of 5 security groups that can be specified per AwsVpcConfiguration.
         */
        securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The subnets associated with the task or service. There is a limit of 16 subnets that can be specified per AwsVpcConfiguration.
         */
        subnets: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A load balancer object representing the load balancer to use with the task set. The supported load balancer types are either an Application Load Balancer or a Network Load Balancer. 
     */
    export interface TaskSetLoadBalancerArgs {
        /**
         * The name of the container (as it appears in a container definition) to associate with the load balancer.
         */
        containerName?: pulumi.Input<string>;
        /**
         * The port on the container to associate with the load balancer. This port must correspond to a containerPort in the task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they are launched on must allow ingress traffic on the hostPort of the port mapping.
         */
        containerPort?: pulumi.Input<number>;
        /**
         * The name of the load balancer to associate with the Amazon ECS service or task set. A load balancer name is only specified when using a Classic Load Balancer. If you are using an Application Load Balancer or a Network Load Balancer this should be omitted.
         */
        loadBalancerName?: pulumi.Input<string>;
        /**
         * The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or task set. A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. If you are using a Classic Load Balancer this should be omitted. For services using the ECS deployment controller, you can specify one or multiple target groups. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html in the Amazon Elastic Container Service Developer Guide. For services using the CODE_DEPLOY deployment controller, you are required to define two target groups for the load balancer. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html in the Amazon Elastic Container Service Developer Guide. If your service's task definition uses the awsvpc network mode (which is required for the Fargate launch type), you must choose ip as the target type, not instance, when creating your target groups because tasks that use the awsvpc network mode are associated with an elastic network interface, not an Amazon EC2 instance.
         */
        targetGroupArn?: pulumi.Input<string>;
    }

    /**
     * An object representing the network configuration for a task or service.
     */
    export interface TaskSetNetworkConfigurationArgs {
        awsVpcConfiguration?: pulumi.Input<inputs.ecs.TaskSetAwsVpcConfigurationArgs>;
    }

    export interface TaskSetScaleArgs {
        /**
         * The unit of measure for the scale value.
         */
        unit?: pulumi.Input<enums.ecs.TaskSetScaleUnit>;
        /**
         * The value, specified as a percent total of a service's desiredCount, to scale the task set. Accepted values are numbers between 0 and 100.
         */
        value?: pulumi.Input<number>;
    }

    export interface TaskSetServiceRegistryArgs {
        /**
         * The container name value, already specified in the task definition, to be used for your service discovery service. If the task definition that your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition that your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
         */
        containerName?: pulumi.Input<string>;
        /**
         * The port value, already specified in the task definition, to be used for your service discovery service. If the task definition your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
         */
        containerPort?: pulumi.Input<number>;
        /**
         * The port value used if your service discovery service specified an SRV record. This field may be used if both the awsvpc network mode and SRV records are used.
         */
        port?: pulumi.Input<number>;
        /**
         * The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is AWS Cloud Map. For more information, see https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html
         */
        registryArn?: pulumi.Input<string>;
    }

}

export namespace efs {
    export interface AccessPointCreationInfoArgs {
        /**
         * Specifies the POSIX group ID to apply to the RootDirectory. Accepts values from 0 to 2^32 (4294967295).
         */
        ownerGid: pulumi.Input<string>;
        /**
         * Specifies the POSIX user ID to apply to the RootDirectory. Accepts values from 0 to 2^32 (4294967295).
         */
        ownerUid: pulumi.Input<string>;
        /**
         * Specifies the POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
         */
        permissions: pulumi.Input<string>;
    }

    export interface AccessPointPosixUserArgs {
        /**
         * The POSIX group ID used for all file system operations using this access point.
         */
        gid: pulumi.Input<string>;
        /**
         * Secondary POSIX group IDs used for all file system operations using this access point.
         */
        secondaryGids?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The POSIX user ID used for all file system operations using this access point.
         */
        uid: pulumi.Input<string>;
    }

    export interface AccessPointRootDirectoryArgs {
        /**
         * (Optional) Specifies the POSIX IDs and permissions to apply to the access point's RootDirectory. If the RootDirectory>Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo, you must provide values for all properties.   If you do not provide CreationInfo and the specified RootDirectory>Path does not exist, attempts to mount the file system using the access point will fail. 
         */
        creationInfo?: pulumi.Input<inputs.efs.AccessPointCreationInfoArgs>;
        /**
         * Specifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo.
         */
        path?: pulumi.Input<string>;
    }

    export interface AccessPointTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface FileSystemBackupPolicyArgs {
        status: pulumi.Input<string>;
    }

    export interface FileSystemElasticFileSystemTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface FileSystemLifecyclePolicyArgs {
        transitionToIA?: pulumi.Input<string>;
        transitionToPrimaryStorageClass?: pulumi.Input<string>;
    }
}

export namespace eks {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface AddonTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * The encryption configuration for the cluster
     */
    export interface ClusterEncryptionConfigArgs {
        /**
         * The encryption provider for the cluster.
         */
        provider?: pulumi.Input<inputs.eks.ClusterEncryptionConfigProviderPropertiesArgs>;
        /**
         * Specifies the resources to be encrypted. The only supported value is "secrets".
         */
        resources?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The encryption provider for the cluster.
     */
    export interface ClusterEncryptionConfigProviderPropertiesArgs {
        /**
         * Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key.
         */
        keyArn?: pulumi.Input<string>;
    }

    /**
     * The Kubernetes network configuration for the cluster.
     */
    export interface ClusterKubernetesNetworkConfigArgs {
        /**
         * Ipv4 or Ipv6, Ipv6 is only supported on cluster with k8s version 1.21
         */
        ipFamily?: pulumi.Input<enums.eks.ClusterKubernetesNetworkConfigIpFamily>;
        /**
         * The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. 
         */
        serviceIpv4Cidr?: pulumi.Input<string>;
        /**
         * The CIDR block to assign Kubernetes service IP addresses from.
         */
        serviceIpv6Cidr?: pulumi.Input<string>;
    }

    /**
     * Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default, cluster control plane logs aren't exported to CloudWatch Logs.
     */
    export interface ClusterLoggingArgs {
        /**
         * The cluster control plane logging configuration for your cluster. 
         */
        clusterLogging?: pulumi.Input<inputs.eks.ClusterLoggingArgs>;
    }

    /**
     * An object representing the VPC configuration to use for an Amazon EKS cluster.
     */
    export interface ClusterResourcesVpcConfigArgs {
        /**
         * Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods.
         */
        endpointPrivateAccess?: pulumi.Input<boolean>;
        /**
         * Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server.
         */
        endpointPublicAccess?: pulumi.Input<boolean>;
        /**
         * The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
         */
        publicAccessCidrs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.
         */
        subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ClusterTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a pod.
     */
    export interface FargateProfileLabelArgs {
        /**
         * The key name of the label.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the label. 
         */
        value: pulumi.Input<string>;
    }

    export interface FargateProfileSelectorArgs {
        labels?: pulumi.Input<pulumi.Input<inputs.eks.FargateProfileLabelArgs>[]>;
        namespace: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface FargateProfileTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    export interface NodegroupLaunchTemplateSpecificationArgs {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface NodegroupRemoteAccessArgs {
        ec2SshKey: pulumi.Input<string>;
        sourceSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface NodegroupScalingConfigArgs {
        desiredSize?: pulumi.Input<number>;
        maxSize?: pulumi.Input<number>;
        minSize?: pulumi.Input<number>;
    }

    export interface NodegroupTaintArgs {
        effect?: pulumi.Input<string>;
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface NodegroupUpdateConfigArgs {
        maxUnavailable?: pulumi.Input<number>;
        maxUnavailablePercentage?: pulumi.Input<number>;
    }
}

export namespace elasticache {
    export interface CacheClusterCloudWatchLogsDestinationDetailsArgs {
        logGroup: pulumi.Input<string>;
    }

    export interface CacheClusterDestinationDetailsArgs {
        cloudWatchLogsDetails?: pulumi.Input<inputs.elasticache.CacheClusterCloudWatchLogsDestinationDetailsArgs>;
        kinesisFirehoseDetails?: pulumi.Input<inputs.elasticache.CacheClusterKinesisFirehoseDestinationDetailsArgs>;
    }

    export interface CacheClusterKinesisFirehoseDestinationDetailsArgs {
        deliveryStream: pulumi.Input<string>;
    }

    export interface CacheClusterLogDeliveryConfigurationRequestArgs {
        destinationDetails: pulumi.Input<inputs.elasticache.CacheClusterDestinationDetailsArgs>;
        destinationType: pulumi.Input<string>;
        logFormat: pulumi.Input<string>;
        logType: pulumi.Input<string>;
    }

    export interface CacheClusterTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface GlobalReplicationGroupMemberArgs {
        /**
         * Regionally unique identifier for the member i.e. ReplicationGroupId.
         */
        replicationGroupId?: pulumi.Input<string>;
        /**
         * The AWS region of the Global Datastore member.
         */
        replicationGroupRegion?: pulumi.Input<string>;
        /**
         * Indicates the role of the member, primary or secondary.
         */
        role?: pulumi.Input<enums.elasticache.GlobalReplicationGroupMemberRole>;
    }

    export interface GlobalReplicationGroupRegionalConfigurationArgs {
        /**
         * The replication group id of the Global Datastore member.
         */
        replicationGroupId?: pulumi.Input<string>;
        /**
         * The AWS region of the Global Datastore member.
         */
        replicationGroupRegion?: pulumi.Input<string>;
        /**
         * A list of PreferredAvailabilityZones objects that specifies the configuration of a node group in the resharded cluster. 
         */
        reshardingConfigurations?: pulumi.Input<pulumi.Input<inputs.elasticache.GlobalReplicationGroupReshardingConfigurationArgs>[]>;
    }

    export interface GlobalReplicationGroupReshardingConfigurationArgs {
        /**
         * Unique identifier for the Node Group. This is either auto-generated by ElastiCache (4-digit id) or a user supplied id.
         */
        nodeGroupId?: pulumi.Input<string>;
        /**
         * A list of preferred availability zones for the nodes of new node groups.
         */
        preferredAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ParameterGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ReplicationGroupCloudWatchLogsDestinationDetailsArgs {
        logGroup: pulumi.Input<string>;
    }

    export interface ReplicationGroupDestinationDetailsArgs {
        cloudWatchLogsDetails?: pulumi.Input<inputs.elasticache.ReplicationGroupCloudWatchLogsDestinationDetailsArgs>;
        kinesisFirehoseDetails?: pulumi.Input<inputs.elasticache.ReplicationGroupKinesisFirehoseDestinationDetailsArgs>;
    }

    export interface ReplicationGroupKinesisFirehoseDestinationDetailsArgs {
        deliveryStream: pulumi.Input<string>;
    }

    export interface ReplicationGroupLogDeliveryConfigurationRequestArgs {
        destinationDetails: pulumi.Input<inputs.elasticache.ReplicationGroupDestinationDetailsArgs>;
        destinationType: pulumi.Input<string>;
        logFormat: pulumi.Input<string>;
        logType: pulumi.Input<string>;
    }

    export interface ReplicationGroupNodeGroupConfigurationArgs {
        nodeGroupId?: pulumi.Input<string>;
        primaryAvailabilityZone?: pulumi.Input<string>;
        replicaAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
        replicaCount?: pulumi.Input<number>;
        slots?: pulumi.Input<string>;
    }

    export interface ReplicationGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface SecurityGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface SubnetGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace elasticbeanstalk {
    export interface ApplicationMaxAgeRuleArgs {
        deleteSourceFromS3?: pulumi.Input<boolean>;
        enabled?: pulumi.Input<boolean>;
        maxAgeInDays?: pulumi.Input<number>;
    }

    export interface ApplicationMaxCountRuleArgs {
        deleteSourceFromS3?: pulumi.Input<boolean>;
        enabled?: pulumi.Input<boolean>;
        maxCount?: pulumi.Input<number>;
    }

    export interface ApplicationResourceLifecycleConfigArgs {
        serviceRole?: pulumi.Input<string>;
        versionLifecycleConfig?: pulumi.Input<inputs.elasticbeanstalk.ApplicationVersionLifecycleConfigArgs>;
    }

    export interface ApplicationVersionLifecycleConfigArgs {
        maxAgeRule?: pulumi.Input<inputs.elasticbeanstalk.ApplicationMaxAgeRuleArgs>;
        maxCountRule?: pulumi.Input<inputs.elasticbeanstalk.ApplicationMaxCountRuleArgs>;
    }

    export interface ApplicationVersionSourceBundleArgs {
        s3Bucket: pulumi.Input<string>;
        s3Key: pulumi.Input<string>;
    }

    export interface ConfigurationTemplateConfigurationOptionSettingArgs {
        namespace: pulumi.Input<string>;
        optionName: pulumi.Input<string>;
        resourceName?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ConfigurationTemplateSourceConfigurationArgs {
        applicationName: pulumi.Input<string>;
        templateName: pulumi.Input<string>;
    }

    export interface EnvironmentOptionSettingArgs {
        namespace: pulumi.Input<string>;
        optionName: pulumi.Input<string>;
        resourceName?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface EnvironmentTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EnvironmentTierArgs {
        name?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }
}

export namespace elasticloadbalancing {
    export interface LoadBalancerAccessLoggingPolicyArgs {
        emitInterval?: pulumi.Input<number>;
        enabled: pulumi.Input<boolean>;
        s3BucketName: pulumi.Input<string>;
        s3BucketPrefix?: pulumi.Input<string>;
    }

    export interface LoadBalancerAppCookieStickinessPolicyArgs {
        cookieName: pulumi.Input<string>;
        policyName: pulumi.Input<string>;
    }

    export interface LoadBalancerConnectionDrainingPolicyArgs {
        enabled: pulumi.Input<boolean>;
        timeout?: pulumi.Input<number>;
    }

    export interface LoadBalancerConnectionSettingsArgs {
        idleTimeout: pulumi.Input<number>;
    }

    export interface LoadBalancerHealthCheckArgs {
        healthyThreshold: pulumi.Input<string>;
        interval: pulumi.Input<string>;
        target: pulumi.Input<string>;
        timeout: pulumi.Input<string>;
        unhealthyThreshold: pulumi.Input<string>;
    }

    export interface LoadBalancerLBCookieStickinessPolicyArgs {
        cookieExpirationPeriod?: pulumi.Input<string>;
        policyName?: pulumi.Input<string>;
    }

    export interface LoadBalancerListenersArgs {
        instancePort: pulumi.Input<string>;
        instanceProtocol?: pulumi.Input<string>;
        loadBalancerPort: pulumi.Input<string>;
        policyNames?: pulumi.Input<pulumi.Input<string>[]>;
        protocol: pulumi.Input<string>;
        sSLCertificateId?: pulumi.Input<string>;
    }

    export interface LoadBalancerPoliciesArgs {
        attributes: pulumi.Input<any[]>;
        instancePorts?: pulumi.Input<pulumi.Input<string>[]>;
        loadBalancerPorts?: pulumi.Input<pulumi.Input<string>[]>;
        policyName: pulumi.Input<string>;
        policyType: pulumi.Input<string>;
    }

    export interface LoadBalancerTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace elasticloadbalancingv2 {
    export interface ListenerActionArgs {
        authenticateCognitoConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerAuthenticateCognitoConfigArgs>;
        authenticateOidcConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerAuthenticateOidcConfigArgs>;
        fixedResponseConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerFixedResponseConfigArgs>;
        forwardConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerForwardConfigArgs>;
        order?: pulumi.Input<number>;
        redirectConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRedirectConfigArgs>;
        targetGroupArn?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface ListenerAuthenticateCognitoConfigArgs {
        authenticationRequestExtraParams?: any;
        onUnauthenticatedRequest?: pulumi.Input<string>;
        scope?: pulumi.Input<string>;
        sessionCookieName?: pulumi.Input<string>;
        sessionTimeout?: pulumi.Input<string>;
        userPoolArn: pulumi.Input<string>;
        userPoolClientId: pulumi.Input<string>;
        userPoolDomain: pulumi.Input<string>;
    }

    export interface ListenerAuthenticateOidcConfigArgs {
        authenticationRequestExtraParams?: any;
        authorizationEndpoint: pulumi.Input<string>;
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
        issuer: pulumi.Input<string>;
        onUnauthenticatedRequest?: pulumi.Input<string>;
        scope?: pulumi.Input<string>;
        sessionCookieName?: pulumi.Input<string>;
        sessionTimeout?: pulumi.Input<string>;
        tokenEndpoint: pulumi.Input<string>;
        userInfoEndpoint: pulumi.Input<string>;
    }

    export interface ListenerCertificateArgs {
        certificateArn?: pulumi.Input<string>;
    }

    export interface ListenerCertificateCertificateArgs {
        certificateArn?: pulumi.Input<string>;
    }

    export interface ListenerFixedResponseConfigArgs {
        contentType?: pulumi.Input<string>;
        messageBody?: pulumi.Input<string>;
        statusCode: pulumi.Input<string>;
    }

    export interface ListenerForwardConfigArgs {
        targetGroupStickinessConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerTargetGroupStickinessConfigArgs>;
        targetGroups?: pulumi.Input<pulumi.Input<inputs.elasticloadbalancingv2.ListenerTargetGroupTupleArgs>[]>;
    }

    export interface ListenerRedirectConfigArgs {
        host?: pulumi.Input<string>;
        path?: pulumi.Input<string>;
        port?: pulumi.Input<string>;
        protocol?: pulumi.Input<string>;
        query?: pulumi.Input<string>;
        statusCode: pulumi.Input<string>;
    }

    export interface ListenerRuleActionArgs {
        authenticateCognitoConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleAuthenticateCognitoConfigArgs>;
        authenticateOidcConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleAuthenticateOidcConfigArgs>;
        fixedResponseConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleFixedResponseConfigArgs>;
        forwardConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleForwardConfigArgs>;
        order?: pulumi.Input<number>;
        redirectConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleRedirectConfigArgs>;
        targetGroupArn?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface ListenerRuleAuthenticateCognitoConfigArgs {
        authenticationRequestExtraParams?: any;
        onUnauthenticatedRequest?: pulumi.Input<string>;
        scope?: pulumi.Input<string>;
        sessionCookieName?: pulumi.Input<string>;
        sessionTimeout?: pulumi.Input<number>;
        userPoolArn: pulumi.Input<string>;
        userPoolClientId: pulumi.Input<string>;
        userPoolDomain: pulumi.Input<string>;
    }

    export interface ListenerRuleAuthenticateOidcConfigArgs {
        authenticationRequestExtraParams?: any;
        authorizationEndpoint: pulumi.Input<string>;
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
        issuer: pulumi.Input<string>;
        onUnauthenticatedRequest?: pulumi.Input<string>;
        scope?: pulumi.Input<string>;
        sessionCookieName?: pulumi.Input<string>;
        sessionTimeout?: pulumi.Input<number>;
        tokenEndpoint: pulumi.Input<string>;
        useExistingClientSecret?: pulumi.Input<boolean>;
        userInfoEndpoint: pulumi.Input<string>;
    }

    export interface ListenerRuleFixedResponseConfigArgs {
        contentType?: pulumi.Input<string>;
        messageBody?: pulumi.Input<string>;
        statusCode: pulumi.Input<string>;
    }

    export interface ListenerRuleForwardConfigArgs {
        targetGroupStickinessConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleTargetGroupStickinessConfigArgs>;
        targetGroups?: pulumi.Input<pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleTargetGroupTupleArgs>[]>;
    }

    export interface ListenerRuleHostHeaderConfigArgs {
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ListenerRuleHttpHeaderConfigArgs {
        httpHeaderName?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ListenerRuleHttpRequestMethodConfigArgs {
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ListenerRulePathPatternConfigArgs {
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ListenerRuleQueryStringConfigArgs {
        values?: pulumi.Input<pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleQueryStringKeyValueArgs>[]>;
    }

    export interface ListenerRuleQueryStringKeyValueArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ListenerRuleRedirectConfigArgs {
        host?: pulumi.Input<string>;
        path?: pulumi.Input<string>;
        port?: pulumi.Input<string>;
        protocol?: pulumi.Input<string>;
        query?: pulumi.Input<string>;
        statusCode: pulumi.Input<string>;
    }

    export interface ListenerRuleRuleConditionArgs {
        field?: pulumi.Input<string>;
        hostHeaderConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleHostHeaderConfigArgs>;
        httpHeaderConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleHttpHeaderConfigArgs>;
        httpRequestMethodConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleHttpRequestMethodConfigArgs>;
        pathPatternConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRulePathPatternConfigArgs>;
        queryStringConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleQueryStringConfigArgs>;
        sourceIpConfig?: pulumi.Input<inputs.elasticloadbalancingv2.ListenerRuleSourceIpConfigArgs>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ListenerRuleSourceIpConfigArgs {
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ListenerRuleTargetGroupStickinessConfigArgs {
        durationSeconds?: pulumi.Input<number>;
        enabled?: pulumi.Input<boolean>;
    }

    export interface ListenerRuleTargetGroupTupleArgs {
        targetGroupArn?: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }

    export interface ListenerTargetGroupStickinessConfigArgs {
        durationSeconds?: pulumi.Input<number>;
        enabled?: pulumi.Input<boolean>;
    }

    export interface ListenerTargetGroupTupleArgs {
        targetGroupArn?: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }

    export interface LoadBalancerAttributeArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface LoadBalancerSubnetMappingArgs {
        allocationId?: pulumi.Input<string>;
        iPv6Address?: pulumi.Input<string>;
        privateIPv4Address?: pulumi.Input<string>;
        subnetId: pulumi.Input<string>;
    }

    export interface LoadBalancerTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TargetGroupAttributeArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface TargetGroupMatcherArgs {
        grpcCode?: pulumi.Input<string>;
        httpCode?: pulumi.Input<string>;
    }

    export interface TargetGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TargetGroupTargetDescriptionArgs {
        availabilityZone?: pulumi.Input<string>;
        id: pulumi.Input<string>;
        port?: pulumi.Input<number>;
    }
}

export namespace elasticsearch {
    export interface DomainAdvancedSecurityOptionsInputArgs {
        enabled?: pulumi.Input<boolean>;
        internalUserDatabaseEnabled?: pulumi.Input<boolean>;
        masterUserOptions?: pulumi.Input<inputs.elasticsearch.DomainMasterUserOptionsArgs>;
    }

    export interface DomainCognitoOptionsArgs {
        enabled?: pulumi.Input<boolean>;
        identityPoolId?: pulumi.Input<string>;
        roleArn?: pulumi.Input<string>;
        userPoolId?: pulumi.Input<string>;
    }

    export interface DomainColdStorageOptionsArgs {
        enabled?: pulumi.Input<boolean>;
    }

    export interface DomainEBSOptionsArgs {
        eBSEnabled?: pulumi.Input<boolean>;
        iops?: pulumi.Input<number>;
        volumeSize?: pulumi.Input<number>;
        volumeType?: pulumi.Input<string>;
    }

    export interface DomainElasticsearchClusterConfigArgs {
        coldStorageOptions?: pulumi.Input<inputs.elasticsearch.DomainColdStorageOptionsArgs>;
        dedicatedMasterCount?: pulumi.Input<number>;
        dedicatedMasterEnabled?: pulumi.Input<boolean>;
        dedicatedMasterType?: pulumi.Input<string>;
        instanceCount?: pulumi.Input<number>;
        instanceType?: pulumi.Input<string>;
        warmCount?: pulumi.Input<number>;
        warmEnabled?: pulumi.Input<boolean>;
        warmType?: pulumi.Input<string>;
        zoneAwarenessConfig?: pulumi.Input<inputs.elasticsearch.DomainZoneAwarenessConfigArgs>;
        zoneAwarenessEnabled?: pulumi.Input<boolean>;
    }

    export interface DomainEncryptionAtRestOptionsArgs {
        enabled?: pulumi.Input<boolean>;
        kmsKeyId?: pulumi.Input<string>;
    }

    export interface DomainEndpointOptionsArgs {
        customEndpoint?: pulumi.Input<string>;
        customEndpointCertificateArn?: pulumi.Input<string>;
        customEndpointEnabled?: pulumi.Input<boolean>;
        enforceHTTPS?: pulumi.Input<boolean>;
        tLSSecurityPolicy?: pulumi.Input<string>;
    }

    export interface DomainMasterUserOptionsArgs {
        masterUserARN?: pulumi.Input<string>;
        masterUserName?: pulumi.Input<string>;
        masterUserPassword?: pulumi.Input<string>;
    }

    export interface DomainNodeToNodeEncryptionOptionsArgs {
        enabled?: pulumi.Input<boolean>;
    }

    export interface DomainSnapshotOptionsArgs {
        automatedSnapshotStartHour?: pulumi.Input<number>;
    }

    export interface DomainTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DomainVPCOptionsArgs {
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DomainZoneAwarenessConfigArgs {
        availabilityZoneCount?: pulumi.Input<number>;
    }
}

export namespace emr {
    export interface ClusterApplicationArgs {
        additionalInfo?: any;
        args?: pulumi.Input<pulumi.Input<string>[]>;
        name?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface ClusterAutoScalingPolicyArgs {
        constraints: pulumi.Input<inputs.emr.ClusterScalingConstraintsArgs>;
        rules: pulumi.Input<pulumi.Input<inputs.emr.ClusterScalingRuleArgs>[]>;
    }

    export interface ClusterBootstrapActionConfigArgs {
        name: pulumi.Input<string>;
        scriptBootstrapAction: pulumi.Input<inputs.emr.ClusterScriptBootstrapActionConfigArgs>;
    }

    export interface ClusterCloudWatchAlarmDefinitionArgs {
        comparisonOperator: pulumi.Input<string>;
        dimensions?: pulumi.Input<pulumi.Input<inputs.emr.ClusterMetricDimensionArgs>[]>;
        evaluationPeriods?: pulumi.Input<number>;
        metricName: pulumi.Input<string>;
        namespace?: pulumi.Input<string>;
        period: pulumi.Input<number>;
        statistic?: pulumi.Input<string>;
        threshold: pulumi.Input<number>;
        unit?: pulumi.Input<string>;
    }

    export interface ClusterComputeLimitsArgs {
        maximumCapacityUnits: pulumi.Input<number>;
        maximumCoreCapacityUnits?: pulumi.Input<number>;
        maximumOnDemandCapacityUnits?: pulumi.Input<number>;
        minimumCapacityUnits: pulumi.Input<number>;
        unitType: pulumi.Input<string>;
    }

    export interface ClusterConfigurationArgs {
        classification?: pulumi.Input<string>;
        configurationProperties?: any;
        configurations?: pulumi.Input<pulumi.Input<inputs.emr.ClusterConfigurationArgs>[]>;
    }

    export interface ClusterEbsBlockDeviceConfigArgs {
        volumeSpecification: pulumi.Input<inputs.emr.ClusterVolumeSpecificationArgs>;
        volumesPerInstance?: pulumi.Input<number>;
    }

    export interface ClusterEbsConfigurationArgs {
        ebsBlockDeviceConfigs?: pulumi.Input<pulumi.Input<inputs.emr.ClusterEbsBlockDeviceConfigArgs>[]>;
        ebsOptimized?: pulumi.Input<boolean>;
    }

    export interface ClusterHadoopJarStepConfigArgs {
        args?: pulumi.Input<pulumi.Input<string>[]>;
        jar: pulumi.Input<string>;
        mainClass?: pulumi.Input<string>;
        stepProperties?: pulumi.Input<pulumi.Input<inputs.emr.ClusterKeyValueArgs>[]>;
    }

    export interface ClusterInstanceFleetConfigArgs {
        instanceTypeConfigs?: pulumi.Input<pulumi.Input<inputs.emr.ClusterInstanceTypeConfigArgs>[]>;
        launchSpecifications?: pulumi.Input<inputs.emr.ClusterInstanceFleetProvisioningSpecificationsArgs>;
        name?: pulumi.Input<string>;
        targetOnDemandCapacity?: pulumi.Input<number>;
        targetSpotCapacity?: pulumi.Input<number>;
    }

    export interface ClusterInstanceFleetProvisioningSpecificationsArgs {
        onDemandSpecification?: pulumi.Input<inputs.emr.ClusterOnDemandProvisioningSpecificationArgs>;
        spotSpecification?: pulumi.Input<inputs.emr.ClusterSpotProvisioningSpecificationArgs>;
    }

    export interface ClusterInstanceGroupConfigArgs {
        autoScalingPolicy?: pulumi.Input<inputs.emr.ClusterAutoScalingPolicyArgs>;
        bidPrice?: pulumi.Input<string>;
        configurations?: pulumi.Input<pulumi.Input<inputs.emr.ClusterConfigurationArgs>[]>;
        customAmiId?: pulumi.Input<string>;
        ebsConfiguration?: pulumi.Input<inputs.emr.ClusterEbsConfigurationArgs>;
        instanceCount: pulumi.Input<number>;
        instanceType: pulumi.Input<string>;
        market?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface ClusterInstanceTypeConfigArgs {
        bidPrice?: pulumi.Input<string>;
        bidPriceAsPercentageOfOnDemandPrice?: pulumi.Input<number>;
        configurations?: pulumi.Input<pulumi.Input<inputs.emr.ClusterConfigurationArgs>[]>;
        customAmiId?: pulumi.Input<string>;
        ebsConfiguration?: pulumi.Input<inputs.emr.ClusterEbsConfigurationArgs>;
        instanceType: pulumi.Input<string>;
        weightedCapacity?: pulumi.Input<number>;
    }

    export interface ClusterJobFlowInstancesConfigArgs {
        additionalMasterSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        additionalSlaveSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        coreInstanceFleet?: pulumi.Input<inputs.emr.ClusterInstanceFleetConfigArgs>;
        coreInstanceGroup?: pulumi.Input<inputs.emr.ClusterInstanceGroupConfigArgs>;
        ec2KeyName?: pulumi.Input<string>;
        ec2SubnetId?: pulumi.Input<string>;
        ec2SubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
        emrManagedMasterSecurityGroup?: pulumi.Input<string>;
        emrManagedSlaveSecurityGroup?: pulumi.Input<string>;
        hadoopVersion?: pulumi.Input<string>;
        keepJobFlowAliveWhenNoSteps?: pulumi.Input<boolean>;
        masterInstanceFleet?: pulumi.Input<inputs.emr.ClusterInstanceFleetConfigArgs>;
        masterInstanceGroup?: pulumi.Input<inputs.emr.ClusterInstanceGroupConfigArgs>;
        placement?: pulumi.Input<inputs.emr.ClusterPlacementTypeArgs>;
        serviceAccessSecurityGroup?: pulumi.Input<string>;
        terminationProtected?: pulumi.Input<boolean>;
    }

    export interface ClusterKerberosAttributesArgs {
        aDDomainJoinPassword?: pulumi.Input<string>;
        aDDomainJoinUser?: pulumi.Input<string>;
        crossRealmTrustPrincipalPassword?: pulumi.Input<string>;
        kdcAdminPassword: pulumi.Input<string>;
        realm: pulumi.Input<string>;
    }

    export interface ClusterKeyValueArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ClusterManagedScalingPolicyArgs {
        computeLimits?: pulumi.Input<inputs.emr.ClusterComputeLimitsArgs>;
    }

    export interface ClusterMetricDimensionArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ClusterOnDemandProvisioningSpecificationArgs {
        allocationStrategy: pulumi.Input<string>;
    }

    export interface ClusterPlacementTypeArgs {
        availabilityZone: pulumi.Input<string>;
    }

    export interface ClusterScalingActionArgs {
        market?: pulumi.Input<string>;
        simpleScalingPolicyConfiguration: pulumi.Input<inputs.emr.ClusterSimpleScalingPolicyConfigurationArgs>;
    }

    export interface ClusterScalingConstraintsArgs {
        maxCapacity: pulumi.Input<number>;
        minCapacity: pulumi.Input<number>;
    }

    export interface ClusterScalingRuleArgs {
        action: pulumi.Input<inputs.emr.ClusterScalingActionArgs>;
        description?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        trigger: pulumi.Input<inputs.emr.ClusterScalingTriggerArgs>;
    }

    export interface ClusterScalingTriggerArgs {
        cloudWatchAlarmDefinition: pulumi.Input<inputs.emr.ClusterCloudWatchAlarmDefinitionArgs>;
    }

    export interface ClusterScriptBootstrapActionConfigArgs {
        args?: pulumi.Input<pulumi.Input<string>[]>;
        path: pulumi.Input<string>;
    }

    export interface ClusterSimpleScalingPolicyConfigurationArgs {
        adjustmentType?: pulumi.Input<string>;
        coolDown?: pulumi.Input<number>;
        scalingAdjustment: pulumi.Input<number>;
    }

    export interface ClusterSpotProvisioningSpecificationArgs {
        allocationStrategy?: pulumi.Input<string>;
        blockDurationMinutes?: pulumi.Input<number>;
        timeoutAction: pulumi.Input<string>;
        timeoutDurationMinutes: pulumi.Input<number>;
    }

    export interface ClusterStepConfigArgs {
        actionOnFailure?: pulumi.Input<string>;
        hadoopJarStep: pulumi.Input<inputs.emr.ClusterHadoopJarStepConfigArgs>;
        name: pulumi.Input<string>;
    }

    export interface ClusterTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ClusterVolumeSpecificationArgs {
        iops?: pulumi.Input<number>;
        sizeInGB: pulumi.Input<number>;
        volumeType: pulumi.Input<string>;
    }

    export interface InstanceFleetConfigConfigurationArgs {
        classification?: pulumi.Input<string>;
        configurationProperties?: any;
        configurations?: pulumi.Input<pulumi.Input<inputs.emr.InstanceFleetConfigConfigurationArgs>[]>;
    }

    export interface InstanceFleetConfigEbsBlockDeviceConfigArgs {
        volumeSpecification: pulumi.Input<inputs.emr.InstanceFleetConfigVolumeSpecificationArgs>;
        volumesPerInstance?: pulumi.Input<number>;
    }

    export interface InstanceFleetConfigEbsConfigurationArgs {
        ebsBlockDeviceConfigs?: pulumi.Input<pulumi.Input<inputs.emr.InstanceFleetConfigEbsBlockDeviceConfigArgs>[]>;
        ebsOptimized?: pulumi.Input<boolean>;
    }

    export interface InstanceFleetConfigInstanceFleetProvisioningSpecificationsArgs {
        onDemandSpecification?: pulumi.Input<inputs.emr.InstanceFleetConfigOnDemandProvisioningSpecificationArgs>;
        spotSpecification?: pulumi.Input<inputs.emr.InstanceFleetConfigSpotProvisioningSpecificationArgs>;
    }

    export interface InstanceFleetConfigInstanceTypeConfigArgs {
        bidPrice?: pulumi.Input<string>;
        bidPriceAsPercentageOfOnDemandPrice?: pulumi.Input<number>;
        configurations?: pulumi.Input<pulumi.Input<inputs.emr.InstanceFleetConfigConfigurationArgs>[]>;
        customAmiId?: pulumi.Input<string>;
        ebsConfiguration?: pulumi.Input<inputs.emr.InstanceFleetConfigEbsConfigurationArgs>;
        instanceType: pulumi.Input<string>;
        weightedCapacity?: pulumi.Input<number>;
    }

    export interface InstanceFleetConfigOnDemandProvisioningSpecificationArgs {
        allocationStrategy: pulumi.Input<string>;
    }

    export interface InstanceFleetConfigSpotProvisioningSpecificationArgs {
        allocationStrategy?: pulumi.Input<string>;
        blockDurationMinutes?: pulumi.Input<number>;
        timeoutAction: pulumi.Input<string>;
        timeoutDurationMinutes: pulumi.Input<number>;
    }

    export interface InstanceFleetConfigVolumeSpecificationArgs {
        iops?: pulumi.Input<number>;
        sizeInGB: pulumi.Input<number>;
        volumeType: pulumi.Input<string>;
    }

    export interface InstanceGroupConfigAutoScalingPolicyArgs {
        constraints: pulumi.Input<inputs.emr.InstanceGroupConfigScalingConstraintsArgs>;
        rules: pulumi.Input<pulumi.Input<inputs.emr.InstanceGroupConfigScalingRuleArgs>[]>;
    }

    export interface InstanceGroupConfigCloudWatchAlarmDefinitionArgs {
        comparisonOperator: pulumi.Input<string>;
        dimensions?: pulumi.Input<pulumi.Input<inputs.emr.InstanceGroupConfigMetricDimensionArgs>[]>;
        evaluationPeriods?: pulumi.Input<number>;
        metricName: pulumi.Input<string>;
        namespace?: pulumi.Input<string>;
        period: pulumi.Input<number>;
        statistic?: pulumi.Input<string>;
        threshold: pulumi.Input<number>;
        unit?: pulumi.Input<string>;
    }

    export interface InstanceGroupConfigConfigurationArgs {
        classification?: pulumi.Input<string>;
        configurationProperties?: any;
        configurations?: pulumi.Input<pulumi.Input<inputs.emr.InstanceGroupConfigConfigurationArgs>[]>;
    }

    export interface InstanceGroupConfigEbsBlockDeviceConfigArgs {
        volumeSpecification: pulumi.Input<inputs.emr.InstanceGroupConfigVolumeSpecificationArgs>;
        volumesPerInstance?: pulumi.Input<number>;
    }

    export interface InstanceGroupConfigEbsConfigurationArgs {
        ebsBlockDeviceConfigs?: pulumi.Input<pulumi.Input<inputs.emr.InstanceGroupConfigEbsBlockDeviceConfigArgs>[]>;
        ebsOptimized?: pulumi.Input<boolean>;
    }

    export interface InstanceGroupConfigMetricDimensionArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface InstanceGroupConfigScalingActionArgs {
        market?: pulumi.Input<string>;
        simpleScalingPolicyConfiguration: pulumi.Input<inputs.emr.InstanceGroupConfigSimpleScalingPolicyConfigurationArgs>;
    }

    export interface InstanceGroupConfigScalingConstraintsArgs {
        maxCapacity: pulumi.Input<number>;
        minCapacity: pulumi.Input<number>;
    }

    export interface InstanceGroupConfigScalingRuleArgs {
        action: pulumi.Input<inputs.emr.InstanceGroupConfigScalingActionArgs>;
        description?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        trigger: pulumi.Input<inputs.emr.InstanceGroupConfigScalingTriggerArgs>;
    }

    export interface InstanceGroupConfigScalingTriggerArgs {
        cloudWatchAlarmDefinition: pulumi.Input<inputs.emr.InstanceGroupConfigCloudWatchAlarmDefinitionArgs>;
    }

    export interface InstanceGroupConfigSimpleScalingPolicyConfigurationArgs {
        adjustmentType?: pulumi.Input<string>;
        coolDown?: pulumi.Input<number>;
        scalingAdjustment: pulumi.Input<number>;
    }

    export interface InstanceGroupConfigVolumeSpecificationArgs {
        iops?: pulumi.Input<number>;
        sizeInGB: pulumi.Input<number>;
        volumeType: pulumi.Input<string>;
    }

    export interface StepHadoopJarStepConfigArgs {
        args?: pulumi.Input<pulumi.Input<string>[]>;
        jar: pulumi.Input<string>;
        mainClass?: pulumi.Input<string>;
        stepProperties?: pulumi.Input<pulumi.Input<inputs.emr.StepKeyValueArgs>[]>;
    }

    export interface StepKeyValueArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * An arbitrary set of tags (key-value pairs) for this EMR Studio.
     */
    export interface StudioTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace emrcontainers {
    export interface VirtualClusterContainerInfoArgs {
        eksInfo: pulumi.Input<inputs.emrcontainers.VirtualClusterEksInfoArgs>;
    }

    export interface VirtualClusterContainerProviderArgs {
        /**
         * The ID of the container cluster
         */
        id: pulumi.Input<string>;
        info: pulumi.Input<inputs.emrcontainers.VirtualClusterContainerInfoArgs>;
        /**
         * The type of the container provider
         */
        type: pulumi.Input<string>;
    }

    export interface VirtualClusterEksInfoArgs {
        namespace: pulumi.Input<string>;
    }

    /**
     * An arbitrary set of tags (key-value pairs) for this virtual cluster.
     */
    export interface VirtualClusterTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace events {
    export interface AuthParametersPropertiesArgs {
        apiKeyAuthParameters?: pulumi.Input<inputs.events.ConnectionApiKeyAuthParametersArgs>;
        basicAuthParameters?: pulumi.Input<inputs.events.ConnectionBasicAuthParametersArgs>;
        invocationHttpParameters?: pulumi.Input<inputs.events.ConnectionHttpParametersArgs>;
        oAuthParameters?: pulumi.Input<inputs.events.ConnectionOAuthParametersArgs>;
    }

    export interface ConnectionApiKeyAuthParametersArgs {
        apiKeyName: pulumi.Input<string>;
        apiKeyValue: pulumi.Input<string>;
    }

    export interface ConnectionBasicAuthParametersArgs {
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface ConnectionClientParametersArgs {
        clientID: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
    }

    export interface ConnectionHttpParametersArgs {
        bodyParameters?: pulumi.Input<pulumi.Input<inputs.events.ConnectionParameterArgs>[]>;
        headerParameters?: pulumi.Input<pulumi.Input<inputs.events.ConnectionParameterArgs>[]>;
        queryStringParameters?: pulumi.Input<pulumi.Input<inputs.events.ConnectionParameterArgs>[]>;
    }

    export interface ConnectionOAuthParametersArgs {
        authorizationEndpoint: pulumi.Input<string>;
        clientParameters: pulumi.Input<inputs.events.ConnectionClientParametersArgs>;
        httpMethod: pulumi.Input<enums.events.ConnectionOAuthParametersHttpMethod>;
        oAuthHttpParameters?: pulumi.Input<inputs.events.ConnectionHttpParametersArgs>;
    }

    export interface ConnectionParameterArgs {
        isValueSecret?: pulumi.Input<boolean>;
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EventBusPolicyConditionArgs {
        key?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface RuleAwsVpcConfigurationArgs {
        assignPublicIp?: pulumi.Input<string>;
        securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        subnets: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleBatchArrayPropertiesArgs {
        size?: pulumi.Input<number>;
    }

    export interface RuleBatchParametersArgs {
        arrayProperties?: pulumi.Input<inputs.events.RuleBatchArrayPropertiesArgs>;
        jobDefinition: pulumi.Input<string>;
        jobName: pulumi.Input<string>;
        retryStrategy?: pulumi.Input<inputs.events.RuleBatchRetryStrategyArgs>;
    }

    export interface RuleBatchRetryStrategyArgs {
        attempts?: pulumi.Input<number>;
    }

    export interface RuleCapacityProviderStrategyItemArgs {
        base?: pulumi.Input<number>;
        capacityProvider: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }

    export interface RuleDeadLetterConfigArgs {
        arn?: pulumi.Input<string>;
    }

    export interface RuleEcsParametersArgs {
        capacityProviderStrategy?: pulumi.Input<pulumi.Input<inputs.events.RuleCapacityProviderStrategyItemArgs>[]>;
        enableECSManagedTags?: pulumi.Input<boolean>;
        enableExecuteCommand?: pulumi.Input<boolean>;
        group?: pulumi.Input<string>;
        launchType?: pulumi.Input<string>;
        networkConfiguration?: pulumi.Input<inputs.events.RuleNetworkConfigurationArgs>;
        placementConstraints?: pulumi.Input<pulumi.Input<inputs.events.RulePlacementConstraintArgs>[]>;
        placementStrategies?: pulumi.Input<pulumi.Input<inputs.events.RulePlacementStrategyArgs>[]>;
        platformVersion?: pulumi.Input<string>;
        propagateTags?: pulumi.Input<string>;
        referenceId?: pulumi.Input<string>;
        tagList?: pulumi.Input<pulumi.Input<inputs.events.RuleTagArgs>[]>;
        taskCount?: pulumi.Input<number>;
        taskDefinitionArn: pulumi.Input<string>;
    }

    export interface RuleHttpParametersArgs {
        headerParameters?: any;
        pathParameterValues?: pulumi.Input<pulumi.Input<string>[]>;
        queryStringParameters?: any;
    }

    export interface RuleInputTransformerArgs {
        inputPathsMap?: any;
        inputTemplate: pulumi.Input<string>;
    }

    export interface RuleKinesisParametersArgs {
        partitionKeyPath: pulumi.Input<string>;
    }

    export interface RuleNetworkConfigurationArgs {
        awsVpcConfiguration?: pulumi.Input<inputs.events.RuleAwsVpcConfigurationArgs>;
    }

    export interface RulePlacementConstraintArgs {
        expression?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface RulePlacementStrategyArgs {
        field?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface RuleRedshiftDataParametersArgs {
        database: pulumi.Input<string>;
        dbUser?: pulumi.Input<string>;
        secretManagerArn?: pulumi.Input<string>;
        sql: pulumi.Input<string>;
        statementName?: pulumi.Input<string>;
        withEvent?: pulumi.Input<boolean>;
    }

    export interface RuleRetryPolicyArgs {
        maximumEventAgeInSeconds?: pulumi.Input<number>;
        maximumRetryAttempts?: pulumi.Input<number>;
    }

    export interface RuleRunCommandParametersArgs {
        runCommandTargets: pulumi.Input<pulumi.Input<inputs.events.RuleRunCommandTargetArgs>[]>;
    }

    export interface RuleRunCommandTargetArgs {
        key: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleSqsParametersArgs {
        messageGroupId: pulumi.Input<string>;
    }

    export interface RuleTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface RuleTargetArgs {
        arn: pulumi.Input<string>;
        batchParameters?: pulumi.Input<inputs.events.RuleBatchParametersArgs>;
        deadLetterConfig?: pulumi.Input<inputs.events.RuleDeadLetterConfigArgs>;
        ecsParameters?: pulumi.Input<inputs.events.RuleEcsParametersArgs>;
        httpParameters?: pulumi.Input<inputs.events.RuleHttpParametersArgs>;
        id: pulumi.Input<string>;
        input?: pulumi.Input<string>;
        inputPath?: pulumi.Input<string>;
        inputTransformer?: pulumi.Input<inputs.events.RuleInputTransformerArgs>;
        kinesisParameters?: pulumi.Input<inputs.events.RuleKinesisParametersArgs>;
        redshiftDataParameters?: pulumi.Input<inputs.events.RuleRedshiftDataParametersArgs>;
        retryPolicy?: pulumi.Input<inputs.events.RuleRetryPolicyArgs>;
        roleArn?: pulumi.Input<string>;
        runCommandParameters?: pulumi.Input<inputs.events.RuleRunCommandParametersArgs>;
        sqsParameters?: pulumi.Input<inputs.events.RuleSqsParametersArgs>;
    }

}

export namespace eventschemas {
    export interface DiscovererTagsEntryArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RegistryTagsEntryArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface SchemaTagsEntryArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace evidently {
    export interface ExperimentMetricGoalObjectArgs {
        desiredChange: pulumi.Input<enums.evidently.ExperimentMetricGoalObjectDesiredChange>;
        /**
         * The JSON path to reference the entity id in the event.
         */
        entityIdKey: pulumi.Input<string>;
        /**
         * Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn't.
         */
        eventPattern: pulumi.Input<string>;
        metricName: pulumi.Input<string>;
        unitLabel?: pulumi.Input<string>;
        /**
         * The JSON path to reference the numerical metric value in the event.
         */
        valueKey: pulumi.Input<string>;
    }

    export interface ExperimentOnlineAbConfigObjectArgs {
        controlTreatmentName?: pulumi.Input<string>;
        treatmentWeights?: pulumi.Input<pulumi.Input<inputs.evidently.ExperimentTreatmentToWeightArgs>[]>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ExperimentTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    export interface ExperimentTreatmentObjectArgs {
        description?: pulumi.Input<string>;
        feature: pulumi.Input<string>;
        treatmentName: pulumi.Input<string>;
        variation: pulumi.Input<string>;
    }

    export interface ExperimentTreatmentToWeightArgs {
        splitWeight: pulumi.Input<number>;
        treatment: pulumi.Input<string>;
    }

    export interface FeatureEntityOverrideArgs {
        entityId?: pulumi.Input<string>;
        variation?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface FeatureTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    export interface FeatureVariationObjectArgs {
        booleanValue?: pulumi.Input<boolean>;
        doubleValue?: pulumi.Input<number>;
        longValue?: pulumi.Input<number>;
        stringValue?: pulumi.Input<string>;
        variationName?: pulumi.Input<string>;
    }

    export interface LaunchGroupObjectArgs {
        description?: pulumi.Input<string>;
        feature: pulumi.Input<string>;
        groupName: pulumi.Input<string>;
        variation: pulumi.Input<string>;
    }

    export interface LaunchGroupToWeightArgs {
        groupName: pulumi.Input<string>;
        splitWeight: pulumi.Input<number>;
    }

    export interface LaunchMetricDefinitionObjectArgs {
        /**
         * The JSON path to reference the entity id in the event.
         */
        entityIdKey: pulumi.Input<string>;
        /**
         * Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn't.
         */
        eventPattern: pulumi.Input<string>;
        metricName: pulumi.Input<string>;
        unitLabel?: pulumi.Input<string>;
        /**
         * The JSON path to reference the numerical metric value in the event.
         */
        valueKey: pulumi.Input<string>;
    }

    export interface LaunchStepConfigArgs {
        groupWeights: pulumi.Input<pulumi.Input<inputs.evidently.LaunchGroupToWeightArgs>[]>;
        startTime: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface LaunchTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Destinations for data.
     */
    export interface ProjectDataDeliveryObjectArgs {
        logGroup?: pulumi.Input<string>;
        s3?: pulumi.Input<inputs.evidently.ProjectS3DestinationArgs>;
    }

    export interface ProjectS3DestinationArgs {
        bucketName: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ProjectTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace finspace {
    /**
     * Additional parameters to identify Federation mode
     */
    export interface EnvironmentFederationParametersArgs {
        /**
         * SAML metadata URL to link with the Environment
         */
        applicationCallBackURL?: pulumi.Input<string>;
        /**
         * Attribute map for SAML configuration
         */
        attributeMap?: any;
        /**
         * Federation provider name to link with the Environment
         */
        federationProviderName?: pulumi.Input<string>;
        /**
         * SAML metadata URL to link with the Environment
         */
        federationURN?: pulumi.Input<string>;
        /**
         * SAML metadata document to link the federation provider to the Environment
         */
        samlMetadataDocument?: pulumi.Input<string>;
        /**
         * SAML metadata URL to link with the Environment
         */
        samlMetadataURL?: pulumi.Input<string>;
    }

    /**
     * Parameters of the first Superuser for the FinSpace Environment
     */
    export interface EnvironmentSuperuserParametersArgs {
        /**
         * Email address
         */
        emailAddress?: pulumi.Input<string>;
        /**
         * First name
         */
        firstName?: pulumi.Input<string>;
        /**
         * Last name
         */
        lastName?: pulumi.Input<string>;
    }
}

export namespace fis {
    /**
     * The actions for the experiment.
     */
    export interface ExperimentTemplateActionMapArgs {
    }

    export interface ExperimentTemplateStopConditionArgs {
        source: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * The targets for the experiment.
     */
    export interface ExperimentTemplateTargetMapArgs {
    }
}

export namespace fms {
    /**
     * An FMS includeMap or excludeMap.
     */
    export interface PolicyIEMapArgs {
        aCCOUNT?: pulumi.Input<pulumi.Input<string>[]>;
        oRGUNIT?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A resource tag.
     */
    export interface PolicyResourceTagArgs {
        key: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * A policy tag.
     */
    export interface PolicyTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface SecurityServicePolicyDataPropertiesArgs {
        managedServiceData?: pulumi.Input<string>;
        type: pulumi.Input<enums.fms.PolicySecurityServicePolicyDataPropertiesType>;
    }
}

export namespace frauddetector {
    export interface DetectorEntityTypeArgs {
        arn?: pulumi.Input<string>;
        /**
         * The time when the entity type was created.
         */
        createdTime?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        inline?: pulumi.Input<boolean>;
        /**
         * The time when the entity type was last updated.
         */
        lastUpdatedTime?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        /**
         * Tags associated with this entity type.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorTagArgs>[]>;
    }

    export interface DetectorEventTypeArgs {
        /**
         * The ARN of the event type.
         */
        arn?: pulumi.Input<string>;
        /**
         * The time when the event type was created.
         */
        createdTime?: pulumi.Input<string>;
        /**
         * The description of the event type.
         */
        description?: pulumi.Input<string>;
        entityTypes?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorEntityTypeArgs>[]>;
        eventVariables?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorEventVariableArgs>[]>;
        inline?: pulumi.Input<boolean>;
        labels?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorLabelArgs>[]>;
        /**
         * The time when the event type was last updated.
         */
        lastUpdatedTime?: pulumi.Input<string>;
        /**
         * The name for the event type
         */
        name?: pulumi.Input<string>;
        /**
         * Tags associated with this event type.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorTagArgs>[]>;
    }

    export interface DetectorEventVariableArgs {
        arn?: pulumi.Input<string>;
        /**
         * The time when the event variable was created.
         */
        createdTime?: pulumi.Input<string>;
        dataSource?: pulumi.Input<enums.frauddetector.DetectorEventVariableDataSource>;
        dataType?: pulumi.Input<enums.frauddetector.DetectorEventVariableDataType>;
        defaultValue?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        inline?: pulumi.Input<boolean>;
        /**
         * The time when the event variable was last updated.
         */
        lastUpdatedTime?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        /**
         * Tags associated with this event variable.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorTagArgs>[]>;
        variableType?: pulumi.Input<enums.frauddetector.DetectorEventVariableVariableType>;
    }

    export interface DetectorLabelArgs {
        arn?: pulumi.Input<string>;
        /**
         * The time when the label was created.
         */
        createdTime?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        inline?: pulumi.Input<boolean>;
        /**
         * The time when the label was last updated.
         */
        lastUpdatedTime?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        /**
         * Tags associated with this label.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorTagArgs>[]>;
    }

    /**
     * A model to associate with a detector.
     */
    export interface DetectorModelArgs {
        arn?: pulumi.Input<string>;
    }

    export interface DetectorOutcomeArgs {
        arn?: pulumi.Input<string>;
        /**
         * The time when the outcome was created.
         */
        createdTime?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        inline?: pulumi.Input<boolean>;
        /**
         * The time when the outcome was last updated.
         */
        lastUpdatedTime?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        /**
         * Tags associated with this outcome.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorTagArgs>[]>;
    }

    export interface DetectorRuleArgs {
        arn?: pulumi.Input<string>;
        /**
         * The time when the event type was created.
         */
        createdTime?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        detectorId?: pulumi.Input<string>;
        expression?: pulumi.Input<string>;
        language?: pulumi.Input<enums.frauddetector.DetectorRuleLanguage>;
        /**
         * The time when the event type was last updated.
         */
        lastUpdatedTime?: pulumi.Input<string>;
        outcomes?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorOutcomeArgs>[]>;
        ruleId?: pulumi.Input<string>;
        ruleVersion?: pulumi.Input<string>;
        /**
         * Tags associated with this event type.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorTagArgs>[]>;
    }

    export interface DetectorTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EntityTypeTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EventTypeEntityTypeArgs {
        arn?: pulumi.Input<string>;
        /**
         * The time when the event type was created.
         */
        createdTime?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        inline?: pulumi.Input<boolean>;
        /**
         * The time when the event type was last updated.
         */
        lastUpdatedTime?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        /**
         * Tags associated with this event type.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.frauddetector.EventTypeTagArgs>[]>;
    }

    export interface EventTypeEventVariableArgs {
        arn?: pulumi.Input<string>;
        /**
         * The time when the event type was created.
         */
        createdTime?: pulumi.Input<string>;
        dataSource?: pulumi.Input<enums.frauddetector.EventTypeEventVariableDataSource>;
        dataType?: pulumi.Input<enums.frauddetector.EventTypeEventVariableDataType>;
        defaultValue?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        inline?: pulumi.Input<boolean>;
        /**
         * The time when the event type was last updated.
         */
        lastUpdatedTime?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        /**
         * Tags associated with this event type.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.frauddetector.EventTypeTagArgs>[]>;
        variableType?: pulumi.Input<enums.frauddetector.EventTypeEventVariableVariableType>;
    }

    export interface EventTypeLabelArgs {
        arn?: pulumi.Input<string>;
        /**
         * The time when the event type was created.
         */
        createdTime?: pulumi.Input<string>;
        /**
         * The description.
         */
        description?: pulumi.Input<string>;
        inline?: pulumi.Input<boolean>;
        /**
         * The time when the event type was last updated.
         */
        lastUpdatedTime?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        /**
         * Tags associated with this event type.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.frauddetector.EventTypeTagArgs>[]>;
    }

    export interface EventTypeTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface LabelTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface OutcomeTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface VariableTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace fsx {
    export interface FileSystemAuditLogConfigurationArgs {
        auditLogDestination?: pulumi.Input<string>;
        fileAccessAuditLogLevel: pulumi.Input<string>;
        fileShareAccessAuditLogLevel: pulumi.Input<string>;
    }

    export interface FileSystemClientConfigurationsArgs {
        clients?: pulumi.Input<string>;
        options?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface FileSystemDiskIopsConfigurationArgs {
        iops?: pulumi.Input<number>;
        mode?: pulumi.Input<string>;
    }

    export interface FileSystemLustreConfigurationArgs {
        autoImportPolicy?: pulumi.Input<string>;
        automaticBackupRetentionDays?: pulumi.Input<number>;
        copyTagsToBackups?: pulumi.Input<boolean>;
        dailyAutomaticBackupStartTime?: pulumi.Input<string>;
        dataCompressionType?: pulumi.Input<string>;
        deploymentType?: pulumi.Input<string>;
        driveCacheType?: pulumi.Input<string>;
        exportPath?: pulumi.Input<string>;
        importPath?: pulumi.Input<string>;
        importedFileChunkSize?: pulumi.Input<number>;
        perUnitStorageThroughput?: pulumi.Input<number>;
        weeklyMaintenanceStartTime?: pulumi.Input<string>;
    }

    export interface FileSystemNfsExportsArgs {
        clientConfigurations?: pulumi.Input<pulumi.Input<inputs.fsx.FileSystemClientConfigurationsArgs>[]>;
    }

    export interface FileSystemOntapConfigurationArgs {
        automaticBackupRetentionDays?: pulumi.Input<number>;
        dailyAutomaticBackupStartTime?: pulumi.Input<string>;
        deploymentType: pulumi.Input<string>;
        diskIopsConfiguration?: pulumi.Input<inputs.fsx.FileSystemDiskIopsConfigurationArgs>;
        endpointIpAddressRange?: pulumi.Input<string>;
        fsxAdminPassword?: pulumi.Input<string>;
        preferredSubnetId?: pulumi.Input<string>;
        routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
        throughputCapacity?: pulumi.Input<number>;
        weeklyMaintenanceStartTime?: pulumi.Input<string>;
    }

    export interface FileSystemOpenZFSConfigurationArgs {
        automaticBackupRetentionDays?: pulumi.Input<number>;
        copyTagsToBackups?: pulumi.Input<boolean>;
        copyTagsToVolumes?: pulumi.Input<boolean>;
        dailyAutomaticBackupStartTime?: pulumi.Input<string>;
        deploymentType: pulumi.Input<string>;
        diskIopsConfiguration?: pulumi.Input<inputs.fsx.FileSystemDiskIopsConfigurationArgs>;
        rootVolumeConfiguration?: pulumi.Input<inputs.fsx.FileSystemRootVolumeConfigurationArgs>;
        throughputCapacity?: pulumi.Input<number>;
        weeklyMaintenanceStartTime?: pulumi.Input<string>;
    }

    export interface FileSystemRootVolumeConfigurationArgs {
        copyTagsToSnapshots?: pulumi.Input<boolean>;
        dataCompressionType?: pulumi.Input<string>;
        nfsExports?: pulumi.Input<pulumi.Input<inputs.fsx.FileSystemNfsExportsArgs>[]>;
        readOnly?: pulumi.Input<boolean>;
        userAndGroupQuotas?: pulumi.Input<pulumi.Input<inputs.fsx.FileSystemUserAndGroupQuotasArgs>[]>;
    }

    export interface FileSystemSelfManagedActiveDirectoryConfigurationArgs {
        dnsIps?: pulumi.Input<pulumi.Input<string>[]>;
        domainName?: pulumi.Input<string>;
        fileSystemAdministratorsGroup?: pulumi.Input<string>;
        organizationalUnitDistinguishedName?: pulumi.Input<string>;
        password?: pulumi.Input<string>;
        userName?: pulumi.Input<string>;
    }

    export interface FileSystemTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface FileSystemUserAndGroupQuotasArgs {
        id?: pulumi.Input<number>;
        storageCapacityQuotaGiB?: pulumi.Input<number>;
        type?: pulumi.Input<string>;
    }

    export interface FileSystemWindowsConfigurationArgs {
        activeDirectoryId?: pulumi.Input<string>;
        aliases?: pulumi.Input<pulumi.Input<string>[]>;
        auditLogConfiguration?: pulumi.Input<inputs.fsx.FileSystemAuditLogConfigurationArgs>;
        automaticBackupRetentionDays?: pulumi.Input<number>;
        copyTagsToBackups?: pulumi.Input<boolean>;
        dailyAutomaticBackupStartTime?: pulumi.Input<string>;
        deploymentType?: pulumi.Input<string>;
        preferredSubnetId?: pulumi.Input<string>;
        selfManagedActiveDirectoryConfiguration?: pulumi.Input<inputs.fsx.FileSystemSelfManagedActiveDirectoryConfigurationArgs>;
        throughputCapacity: pulumi.Input<number>;
        weeklyMaintenanceStartTime?: pulumi.Input<string>;
    }
}

export namespace gamelift {
    export interface AliasRoutingStrategyArgs {
        /**
         * A unique identifier for a fleet that the alias points to. If you specify SIMPLE for the Type property, you must specify this property.
         */
        fleetId?: pulumi.Input<string>;
        /**
         * The message text to be used with a terminal routing strategy. If you specify TERMINAL for the Type property, you must specify this property.
         */
        message?: pulumi.Input<string>;
        /**
         * Simple routing strategy. The alias resolves to one specific fleet. Use this type when routing to active fleets.
         */
        type: pulumi.Input<enums.gamelift.AliasRoutingStrategyType>;
    }

    export interface BuildS3LocationArgs {
        bucket: pulumi.Input<string>;
        key: pulumi.Input<string>;
        objectVersion?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    /**
     * Information about the use of a TLS/SSL certificate for a fleet. TLS certificate generation is enabled at the fleet level, with one certificate generated for the fleet. When this feature is enabled, the certificate can be retrieved using the GameLift Server SDK call GetInstanceCertificate. All instances in a fleet share the same certificate.
     */
    export interface FleetCertificateConfigurationArgs {
        certificateType: pulumi.Input<enums.gamelift.FleetCertificateConfigurationCertificateType>;
    }

    /**
     * A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift hosting resource. New game sessions that are started on the fleet are assigned an IP address/port number combination, which must fall into the fleet's allowed ranges. For fleets created with a custom game server, the ranges reflect the server's game session assignments. For Realtime Servers fleets, Amazon GameLift automatically opens two port ranges, one for TCP messaging and one for UDP, for use by the Realtime servers.
     */
    export interface FleetIpPermissionArgs {
        /**
         * A starting value for a range of allowed port numbers.
         */
        fromPort: pulumi.Input<number>;
        /**
         * A range of allowed IP addresses. This value must be expressed in CIDR notation. Example: "000.000.000.000/[subnet mask]" or optionally the shortened version "0.0.0.0/[subnet mask]".
         */
        ipRange: pulumi.Input<string>;
        /**
         * The network communication protocol used by the fleet.
         */
        protocol: pulumi.Input<enums.gamelift.FleetIpPermissionProtocol>;
        /**
         * An ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than FromPort.
         */
        toPort: pulumi.Input<number>;
    }

    /**
     * Current resource capacity settings in a specified fleet or location. The location value might refer to a fleet's remote location or its home Region.
     */
    export interface FleetLocationCapacityArgs {
        /**
         * The number of EC2 instances you want to maintain in the specified fleet location. This value must fall between the minimum and maximum size limits.
         */
        desiredEC2Instances: pulumi.Input<number>;
        /**
         * The maximum value that is allowed for the fleet's instance count for a location. When creating a new fleet, GameLift automatically sets this value to "1". Once the fleet is active, you can change this value.
         */
        maxSize: pulumi.Input<number>;
        /**
         * The minimum value allowed for the fleet's instance count for a location. When creating a new fleet, GameLift automatically sets this value to "0". After the fleet is active, you can change this value.
         */
        minSize: pulumi.Input<number>;
    }

    /**
     * A remote location where a multi-location fleet can deploy EC2 instances for game hosting.
     */
    export interface FleetLocationConfigurationArgs {
        location: pulumi.Input<string>;
        locationCapacity?: pulumi.Input<inputs.gamelift.FleetLocationCapacityArgs>;
    }

    /**
     * A policy that limits the number of game sessions a player can create on the same fleet. This optional policy gives game owners control over how players can consume available game server resources. A resource creation policy makes the following statement: "An individual player can create a maximum number of new game sessions within a specified time period".
     *
     * The policy is evaluated when a player tries to create a new game session. For example, assume you have a policy of 10 new game sessions and a time period of 60 minutes. On receiving a CreateGameSession request, Amazon GameLift checks that the player (identified by CreatorId) has created fewer than 10 game sessions in the past 60 minutes.
     */
    export interface FleetResourceCreationLimitPolicyArgs {
        /**
         * The maximum number of game sessions that an individual can create during the policy period.
         */
        newGameSessionsPerCreator?: pulumi.Input<number>;
        /**
         * The time span used in evaluating the resource creation limit policy.
         */
        policyPeriodInMinutes?: pulumi.Input<number>;
    }

    /**
     * A collection of server process configurations that describe the processes to run on each instance in a fleet. All fleets must have a runtime configuration. Each instance in the fleet maintains server processes as specified in the runtime configuration, launching new ones as existing processes end. Each instance regularly checks for an updated runtime configuration makes adjustments as called for.
     *
     * The runtime configuration enables the instances in a fleet to run multiple processes simultaneously. Potential scenarios are as follows: (1) Run multiple processes of a single game server executable to maximize usage of your hosting resources. (2) Run one or more processes of different executables, such as your game server and a metrics tracking program. (3) Run multiple processes of a single game server but with different launch parameters, for example to run one process on each instance in debug mode.
     *
     * An Amazon GameLift instance is limited to 50 processes running simultaneously. A runtime configuration must specify fewer than this limit. To calculate the total number of processes specified in a runtime configuration, add the values of the ConcurrentExecutions parameter for each ServerProcess object in the runtime configuration.
     */
    export interface FleetRuntimeConfigurationArgs {
        /**
         * The maximum amount of time (in seconds) that a game session can remain in status ACTIVATING. If the game session is not active before the timeout, activation is terminated and the game session status is changed to TERMINATED.
         */
        gameSessionActivationTimeoutSeconds?: pulumi.Input<number>;
        /**
         * The maximum number of game sessions with status ACTIVATING to allow on an instance simultaneously. This setting limits the amount of instance resources that can be used for new game activations at any one time.
         */
        maxConcurrentGameSessionActivations?: pulumi.Input<number>;
        /**
         * A collection of server process configurations that describe which server processes to run on each instance in a fleet.
         */
        serverProcesses?: pulumi.Input<pulumi.Input<inputs.gamelift.FleetServerProcessArgs>[]>;
    }

    /**
     * A set of instructions for launching server processes on each instance in a fleet. Each instruction set identifies the location of the server executable, optional launch parameters, and the number of server processes with this configuration to maintain concurrently on the instance. Server process configurations make up a fleet's RuntimeConfiguration.
     */
    export interface FleetServerProcessArgs {
        /**
         * The number of server processes that use this configuration to run concurrently on an instance.
         */
        concurrentExecutions: pulumi.Input<number>;
        /**
         * The location of the server executable in a custom game build or the name of the Realtime script file that contains the Init() function. Game builds and Realtime scripts are installed on instances at the root:
         *
         * Windows (for custom game builds only): C:\game. Example: "C:\game\MyGame\server.exe"
         *
         * Linux: /local/game. Examples: "/local/game/MyGame/server.exe" or "/local/game/MyRealtimeScript.js"
         */
        launchPath: pulumi.Input<string>;
        /**
         * An optional list of parameters to pass to the server executable or Realtime script on launch.
         */
        parameters?: pulumi.Input<string>;
    }

    /**
     * Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
     */
    export interface GameServerGroupAutoScalingPolicyArgs {
        estimatedInstanceWarmup?: pulumi.Input<number>;
        targetTrackingConfiguration: pulumi.Input<inputs.gamelift.GameServerGroupTargetTrackingConfigurationArgs>;
    }

    /**
     * An allowed instance type for your game server group.
     */
    export interface GameServerGroupInstanceDefinitionArgs {
        instanceType: pulumi.Input<string>;
        weightedCapacity?: pulumi.Input<string>;
    }

    /**
     * The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.
     */
    export interface GameServerGroupLaunchTemplateArgs {
        launchTemplateId?: pulumi.Input<string>;
        launchTemplateName?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface GameServerGroupTagArgs {
        /**
         * The key for a developer-defined key:value pair for tagging an AWS resource.
         */
        key?: pulumi.Input<string>;
        /**
         * The value for a developer-defined key:value pair for tagging an AWS resource.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * Settings for a target-based scaling policy applied to Auto Scaling group.
     */
    export interface GameServerGroupTargetTrackingConfigurationArgs {
        targetValue: pulumi.Input<number>;
    }

    export interface GameSessionQueueDestinationArgs {
        destinationArn?: pulumi.Input<string>;
    }

    export interface GameSessionQueueFilterConfigurationArgs {
        allowedLocations?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GameSessionQueuePlayerLatencyPolicyArgs {
        maximumIndividualPlayerLatencyMilliseconds?: pulumi.Input<number>;
        policyDurationSeconds?: pulumi.Input<number>;
    }

    export interface GameSessionQueuePriorityConfigurationArgs {
        locationOrder?: pulumi.Input<pulumi.Input<string>[]>;
        priorityOrder?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface MatchmakingConfigurationGamePropertyArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ScriptS3LocationArgs {
        bucket: pulumi.Input<string>;
        key: pulumi.Input<string>;
        objectVersion?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }
}

export namespace globalaccelerator {
    /**
     * Tag is a key-value pair associated with accelerator.
     */
    export interface AcceleratorTagArgs {
        /**
         * Key of the tag. Value can be 1 to 127 characters.
         */
        key: pulumi.Input<string>;
        /**
         * Value for the tag. Value can be 1 to 255 characters.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The configuration for a given endpoint
     */
    export interface EndpointGroupEndpointConfigurationArgs {
        /**
         * true if client ip should be preserved
         */
        clientIPPreservationEnabled?: pulumi.Input<boolean>;
        /**
         * Id of the endpoint. For Network/Application Load Balancer this value is the ARN.  For EIP, this value is the allocation ID.  For EC2 instances, this is the EC2 instance ID
         */
        endpointId: pulumi.Input<string>;
        /**
         * The weight for the endpoint.
         */
        weight?: pulumi.Input<number>;
    }

    /**
     * listener to endpoint port mapping.
     */
    export interface EndpointGroupPortOverrideArgs {
        endpointPort: pulumi.Input<number>;
        listenerPort: pulumi.Input<number>;
    }

    /**
     * A port range to support for connections from  clients to your accelerator.
     */
    export interface ListenerPortRangeArgs {
        fromPort: pulumi.Input<number>;
        toPort: pulumi.Input<number>;
    }
}

export namespace glue {
    export interface ClassifierCsvClassifierArgs {
        allowSingleColumn?: pulumi.Input<boolean>;
        containsHeader?: pulumi.Input<string>;
        delimiter?: pulumi.Input<string>;
        disableValueTrimming?: pulumi.Input<boolean>;
        header?: pulumi.Input<pulumi.Input<string>[]>;
        name?: pulumi.Input<string>;
        quoteSymbol?: pulumi.Input<string>;
    }

    export interface ClassifierGrokClassifierArgs {
        classification: pulumi.Input<string>;
        customPatterns?: pulumi.Input<string>;
        grokPattern: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface ClassifierJsonClassifierArgs {
        jsonPath: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface ClassifierXMLClassifierArgs {
        classification: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        rowTag: pulumi.Input<string>;
    }

    export interface ConnectionInputArgs {
        connectionProperties?: any;
        connectionType: pulumi.Input<string>;
        description?: pulumi.Input<string>;
        matchCriteria?: pulumi.Input<pulumi.Input<string>[]>;
        name?: pulumi.Input<string>;
        physicalConnectionRequirements?: pulumi.Input<inputs.glue.ConnectionPhysicalConnectionRequirementsArgs>;
    }

    export interface ConnectionPhysicalConnectionRequirementsArgs {
        availabilityZone?: pulumi.Input<string>;
        securityGroupIdList?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
    }

    export interface CrawlerCatalogTargetArgs {
        databaseName?: pulumi.Input<string>;
        tables?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CrawlerDynamoDBTargetArgs {
        path?: pulumi.Input<string>;
    }

    export interface CrawlerJdbcTargetArgs {
        connectionName?: pulumi.Input<string>;
        exclusions?: pulumi.Input<pulumi.Input<string>[]>;
        path?: pulumi.Input<string>;
    }

    export interface CrawlerRecrawlPolicyArgs {
        recrawlBehavior?: pulumi.Input<string>;
    }

    export interface CrawlerS3TargetArgs {
        connectionName?: pulumi.Input<string>;
        exclusions?: pulumi.Input<pulumi.Input<string>[]>;
        path?: pulumi.Input<string>;
    }

    export interface CrawlerScheduleArgs {
        scheduleExpression?: pulumi.Input<string>;
    }

    export interface CrawlerSchemaChangePolicyArgs {
        deleteBehavior?: pulumi.Input<string>;
        updateBehavior?: pulumi.Input<string>;
    }

    export interface CrawlerTargetsArgs {
        catalogTargets?: pulumi.Input<pulumi.Input<inputs.glue.CrawlerCatalogTargetArgs>[]>;
        dynamoDBTargets?: pulumi.Input<pulumi.Input<inputs.glue.CrawlerDynamoDBTargetArgs>[]>;
        jdbcTargets?: pulumi.Input<pulumi.Input<inputs.glue.CrawlerJdbcTargetArgs>[]>;
        s3Targets?: pulumi.Input<pulumi.Input<inputs.glue.CrawlerS3TargetArgs>[]>;
    }

    export interface DataCatalogEncryptionSettingsArgs {
        connectionPasswordEncryption?: pulumi.Input<inputs.glue.DataCatalogEncryptionSettingsConnectionPasswordEncryptionArgs>;
        encryptionAtRest?: pulumi.Input<inputs.glue.DataCatalogEncryptionSettingsEncryptionAtRestArgs>;
    }

    export interface DataCatalogEncryptionSettingsConnectionPasswordEncryptionArgs {
        kmsKeyId?: pulumi.Input<string>;
        returnConnectionPasswordEncrypted?: pulumi.Input<boolean>;
    }

    export interface DataCatalogEncryptionSettingsEncryptionAtRestArgs {
        catalogEncryptionMode?: pulumi.Input<string>;
        sseAwsKmsKeyId?: pulumi.Input<string>;
    }

    export interface DatabaseDataLakePrincipalArgs {
        dataLakePrincipalIdentifier?: pulumi.Input<string>;
    }

    export interface DatabaseIdentifierArgs {
        catalogId?: pulumi.Input<string>;
        databaseName?: pulumi.Input<string>;
    }

    export interface DatabaseInputArgs {
        createTableDefaultPermissions?: pulumi.Input<pulumi.Input<inputs.glue.DatabasePrincipalPrivilegesArgs>[]>;
        description?: pulumi.Input<string>;
        locationUri?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        parameters?: any;
        targetDatabase?: pulumi.Input<inputs.glue.DatabaseIdentifierArgs>;
    }

    export interface DatabasePrincipalPrivilegesArgs {
        permissions?: pulumi.Input<pulumi.Input<string>[]>;
        principal?: pulumi.Input<inputs.glue.DatabaseDataLakePrincipalArgs>;
    }

    export interface JobCommandArgs {
        name?: pulumi.Input<string>;
        pythonVersion?: pulumi.Input<string>;
        scriptLocation?: pulumi.Input<string>;
    }

    export interface JobConnectionsListArgs {
        connections?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobExecutionPropertyArgs {
        maxConcurrentRuns?: pulumi.Input<number>;
    }

    export interface JobNotificationPropertyArgs {
        notifyDelayAfter?: pulumi.Input<number>;
    }

    export interface MLTransformFindMatchesParametersArgs {
        accuracyCostTradeoff?: pulumi.Input<number>;
        enforceProvidedLabels?: pulumi.Input<boolean>;
        precisionRecallTradeoff?: pulumi.Input<number>;
        primaryKeyColumnName: pulumi.Input<string>;
    }

    export interface MLTransformGlueTablesArgs {
        catalogId?: pulumi.Input<string>;
        connectionName?: pulumi.Input<string>;
        databaseName: pulumi.Input<string>;
        tableName: pulumi.Input<string>;
    }

    export interface MLTransformInputRecordTablesArgs {
        glueTables?: pulumi.Input<pulumi.Input<inputs.glue.MLTransformGlueTablesArgs>[]>;
    }

    export interface MLTransformMLUserDataEncryptionArgs {
        kmsKeyId?: pulumi.Input<string>;
        mLUserDataEncryptionMode: pulumi.Input<string>;
    }

    export interface MLTransformTransformEncryptionArgs {
        mLUserDataEncryption?: pulumi.Input<inputs.glue.MLTransformMLUserDataEncryptionArgs>;
        taskRunSecurityConfigurationName?: pulumi.Input<string>;
    }

    export interface MLTransformTransformParametersArgs {
        findMatchesParameters?: pulumi.Input<inputs.glue.MLTransformFindMatchesParametersArgs>;
        transformType: pulumi.Input<string>;
    }

    export interface PartitionColumnArgs {
        comment?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface PartitionInputArgs {
        parameters?: any;
        storageDescriptor?: pulumi.Input<inputs.glue.PartitionStorageDescriptorArgs>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PartitionOrderArgs {
        column: pulumi.Input<string>;
        sortOrder?: pulumi.Input<number>;
    }

    export interface PartitionSchemaIdArgs {
        registryName?: pulumi.Input<string>;
        schemaArn?: pulumi.Input<string>;
        schemaName?: pulumi.Input<string>;
    }

    export interface PartitionSchemaReferenceArgs {
        schemaId?: pulumi.Input<inputs.glue.PartitionSchemaIdArgs>;
        schemaVersionId?: pulumi.Input<string>;
        schemaVersionNumber?: pulumi.Input<number>;
    }

    export interface PartitionSerdeInfoArgs {
        name?: pulumi.Input<string>;
        parameters?: any;
        serializationLibrary?: pulumi.Input<string>;
    }

    export interface PartitionSkewedInfoArgs {
        skewedColumnNames?: pulumi.Input<pulumi.Input<string>[]>;
        skewedColumnValueLocationMaps?: any;
        skewedColumnValues?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PartitionStorageDescriptorArgs {
        bucketColumns?: pulumi.Input<pulumi.Input<string>[]>;
        columns?: pulumi.Input<pulumi.Input<inputs.glue.PartitionColumnArgs>[]>;
        compressed?: pulumi.Input<boolean>;
        inputFormat?: pulumi.Input<string>;
        location?: pulumi.Input<string>;
        numberOfBuckets?: pulumi.Input<number>;
        outputFormat?: pulumi.Input<string>;
        parameters?: any;
        schemaReference?: pulumi.Input<inputs.glue.PartitionSchemaReferenceArgs>;
        serdeInfo?: pulumi.Input<inputs.glue.PartitionSerdeInfoArgs>;
        skewedInfo?: pulumi.Input<inputs.glue.PartitionSkewedInfoArgs>;
        sortColumns?: pulumi.Input<pulumi.Input<inputs.glue.PartitionOrderArgs>[]>;
        storedAsSubDirectories?: pulumi.Input<boolean>;
    }

    export interface RegistryTagArgs {
        /**
         * A key to identify the tag.
         */
        key: pulumi.Input<string>;
        /**
         * Corresponding tag value for the key.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Identifier for the registry which the schema is part of.
     */
    export interface SchemaRegistryArgs {
        /**
         * Amazon Resource Name for the Registry.
         */
        arn?: pulumi.Input<string>;
        /**
         * Name of the registry in which the schema will be created.
         */
        name?: pulumi.Input<string>;
    }

    export interface SchemaTagArgs {
        /**
         * A key to identify the tag.
         */
        key: pulumi.Input<string>;
        /**
         * Corresponding tag value for the key.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Specify checkpoint version for update. This is only required to update the Compatibility.
     */
    export interface SchemaVersionArgs {
        /**
         * Indicates if the latest version needs to be updated.
         */
        isLatest?: pulumi.Input<boolean>;
        /**
         * Indicates the version number in the schema to update.
         */
        versionNumber?: pulumi.Input<number>;
    }

    /**
     * Identifier for the schema where the schema version will be created.
     */
    export interface SchemaVersionSchemaArgs {
        /**
         * Name of the registry to identify where the Schema is located.
         */
        registryName?: pulumi.Input<string>;
        /**
         * Amazon Resource Name for the Schema. This attribute can be used to uniquely represent the Schema.
         */
        schemaArn?: pulumi.Input<string>;
        /**
         * Name of the schema. This parameter requires RegistryName to be provided.
         */
        schemaName?: pulumi.Input<string>;
    }

    export interface SecurityConfigurationCloudWatchEncryptionArgs {
        cloudWatchEncryptionMode?: pulumi.Input<string>;
        kmsKeyArn?: pulumi.Input<string>;
    }

    export interface SecurityConfigurationEncryptionConfigurationArgs {
        cloudWatchEncryption?: pulumi.Input<inputs.glue.SecurityConfigurationCloudWatchEncryptionArgs>;
        jobBookmarksEncryption?: pulumi.Input<inputs.glue.SecurityConfigurationJobBookmarksEncryptionArgs>;
        s3Encryptions?: pulumi.Input<inputs.glue.SecurityConfigurationS3EncryptionsArgs>;
    }

    export interface SecurityConfigurationJobBookmarksEncryptionArgs {
        jobBookmarksEncryptionMode?: pulumi.Input<string>;
        kmsKeyArn?: pulumi.Input<string>;
    }

    export interface SecurityConfigurationS3EncryptionsArgs {
    }

    export interface TableColumnArgs {
        comment?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface TableIdentifierArgs {
        catalogId?: pulumi.Input<string>;
        databaseName?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface TableInputArgs {
        description?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        owner?: pulumi.Input<string>;
        parameters?: any;
        partitionKeys?: pulumi.Input<pulumi.Input<inputs.glue.TableColumnArgs>[]>;
        retention?: pulumi.Input<number>;
        storageDescriptor?: pulumi.Input<inputs.glue.TableStorageDescriptorArgs>;
        tableType?: pulumi.Input<string>;
        targetTable?: pulumi.Input<inputs.glue.TableIdentifierArgs>;
        viewExpandedText?: pulumi.Input<string>;
        viewOriginalText?: pulumi.Input<string>;
    }

    export interface TableOrderArgs {
        column: pulumi.Input<string>;
        sortOrder: pulumi.Input<number>;
    }

    export interface TableSchemaIdArgs {
        registryName?: pulumi.Input<string>;
        schemaArn?: pulumi.Input<string>;
        schemaName?: pulumi.Input<string>;
    }

    export interface TableSchemaReferenceArgs {
        schemaId?: pulumi.Input<inputs.glue.TableSchemaIdArgs>;
        schemaVersionId?: pulumi.Input<string>;
        schemaVersionNumber?: pulumi.Input<number>;
    }

    export interface TableSerdeInfoArgs {
        name?: pulumi.Input<string>;
        parameters?: any;
        serializationLibrary?: pulumi.Input<string>;
    }

    export interface TableSkewedInfoArgs {
        skewedColumnNames?: pulumi.Input<pulumi.Input<string>[]>;
        skewedColumnValueLocationMaps?: any;
        skewedColumnValues?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface TableStorageDescriptorArgs {
        bucketColumns?: pulumi.Input<pulumi.Input<string>[]>;
        columns?: pulumi.Input<pulumi.Input<inputs.glue.TableColumnArgs>[]>;
        compressed?: pulumi.Input<boolean>;
        inputFormat?: pulumi.Input<string>;
        location?: pulumi.Input<string>;
        numberOfBuckets?: pulumi.Input<number>;
        outputFormat?: pulumi.Input<string>;
        parameters?: any;
        schemaReference?: pulumi.Input<inputs.glue.TableSchemaReferenceArgs>;
        serdeInfo?: pulumi.Input<inputs.glue.TableSerdeInfoArgs>;
        skewedInfo?: pulumi.Input<inputs.glue.TableSkewedInfoArgs>;
        sortColumns?: pulumi.Input<pulumi.Input<inputs.glue.TableOrderArgs>[]>;
        storedAsSubDirectories?: pulumi.Input<boolean>;
    }

    export interface TriggerActionArgs {
        arguments?: any;
        crawlerName?: pulumi.Input<string>;
        jobName?: pulumi.Input<string>;
        notificationProperty?: pulumi.Input<inputs.glue.TriggerNotificationPropertyArgs>;
        securityConfiguration?: pulumi.Input<string>;
        timeout?: pulumi.Input<number>;
    }

    export interface TriggerConditionArgs {
        crawlState?: pulumi.Input<string>;
        crawlerName?: pulumi.Input<string>;
        jobName?: pulumi.Input<string>;
        logicalOperator?: pulumi.Input<string>;
        state?: pulumi.Input<string>;
    }

    export interface TriggerNotificationPropertyArgs {
        notifyDelayAfter?: pulumi.Input<number>;
    }

    export interface TriggerPredicateArgs {
        conditions?: pulumi.Input<pulumi.Input<inputs.glue.TriggerConditionArgs>[]>;
        logical?: pulumi.Input<string>;
    }
}

export namespace greengrass {
    export interface ConnectorDefinitionConnectorArgs {
        connectorArn: pulumi.Input<string>;
        id: pulumi.Input<string>;
        parameters?: any;
    }

    export interface ConnectorDefinitionVersionArgs {
        connectors: pulumi.Input<pulumi.Input<inputs.greengrass.ConnectorDefinitionConnectorArgs>[]>;
    }

    export interface ConnectorDefinitionVersionConnectorArgs {
        connectorArn: pulumi.Input<string>;
        id: pulumi.Input<string>;
        parameters?: any;
    }

    export interface CoreDefinitionCoreArgs {
        certificateArn: pulumi.Input<string>;
        id: pulumi.Input<string>;
        syncShadow?: pulumi.Input<boolean>;
        thingArn: pulumi.Input<string>;
    }

    export interface CoreDefinitionVersionArgs {
        cores: pulumi.Input<pulumi.Input<inputs.greengrass.CoreDefinitionCoreArgs>[]>;
    }

    export interface CoreDefinitionVersionCoreArgs {
        certificateArn: pulumi.Input<string>;
        id: pulumi.Input<string>;
        syncShadow?: pulumi.Input<boolean>;
        thingArn: pulumi.Input<string>;
    }

    export interface DeviceDefinitionDeviceArgs {
        certificateArn: pulumi.Input<string>;
        id: pulumi.Input<string>;
        syncShadow?: pulumi.Input<boolean>;
        thingArn: pulumi.Input<string>;
    }

    export interface DeviceDefinitionVersionArgs {
        devices: pulumi.Input<pulumi.Input<inputs.greengrass.DeviceDefinitionDeviceArgs>[]>;
    }

    export interface DeviceDefinitionVersionDeviceArgs {
        certificateArn: pulumi.Input<string>;
        id: pulumi.Input<string>;
        syncShadow?: pulumi.Input<boolean>;
        thingArn: pulumi.Input<string>;
    }

    export interface FunctionDefinitionDefaultConfigArgs {
        execution: pulumi.Input<inputs.greengrass.FunctionDefinitionExecutionArgs>;
    }

    export interface FunctionDefinitionEnvironmentArgs {
        accessSysfs?: pulumi.Input<boolean>;
        execution?: pulumi.Input<inputs.greengrass.FunctionDefinitionExecutionArgs>;
        resourceAccessPolicies?: pulumi.Input<pulumi.Input<inputs.greengrass.FunctionDefinitionResourceAccessPolicyArgs>[]>;
        variables?: any;
    }

    export interface FunctionDefinitionExecutionArgs {
        isolationMode?: pulumi.Input<string>;
        runAs?: pulumi.Input<inputs.greengrass.FunctionDefinitionRunAsArgs>;
    }

    export interface FunctionDefinitionFunctionArgs {
        functionArn: pulumi.Input<string>;
        functionConfiguration: pulumi.Input<inputs.greengrass.FunctionDefinitionFunctionConfigurationArgs>;
        id: pulumi.Input<string>;
    }

    export interface FunctionDefinitionFunctionConfigurationArgs {
        encodingType?: pulumi.Input<string>;
        environment?: pulumi.Input<inputs.greengrass.FunctionDefinitionEnvironmentArgs>;
        execArgs?: pulumi.Input<string>;
        executable?: pulumi.Input<string>;
        memorySize?: pulumi.Input<number>;
        pinned?: pulumi.Input<boolean>;
        timeout?: pulumi.Input<number>;
    }

    export interface FunctionDefinitionResourceAccessPolicyArgs {
        permission?: pulumi.Input<string>;
        resourceId: pulumi.Input<string>;
    }

    export interface FunctionDefinitionRunAsArgs {
        gid?: pulumi.Input<number>;
        uid?: pulumi.Input<number>;
    }

    export interface FunctionDefinitionVersionArgs {
        defaultConfig?: pulumi.Input<inputs.greengrass.FunctionDefinitionDefaultConfigArgs>;
        functions: pulumi.Input<pulumi.Input<inputs.greengrass.FunctionDefinitionFunctionArgs>[]>;
    }

    export interface FunctionDefinitionVersionDefaultConfigArgs {
        execution: pulumi.Input<inputs.greengrass.FunctionDefinitionVersionExecutionArgs>;
    }

    export interface FunctionDefinitionVersionEnvironmentArgs {
        accessSysfs?: pulumi.Input<boolean>;
        execution?: pulumi.Input<inputs.greengrass.FunctionDefinitionVersionExecutionArgs>;
        resourceAccessPolicies?: pulumi.Input<pulumi.Input<inputs.greengrass.FunctionDefinitionVersionResourceAccessPolicyArgs>[]>;
        variables?: any;
    }

    export interface FunctionDefinitionVersionExecutionArgs {
        isolationMode?: pulumi.Input<string>;
        runAs?: pulumi.Input<inputs.greengrass.FunctionDefinitionVersionRunAsArgs>;
    }

    export interface FunctionDefinitionVersionFunctionArgs {
        functionArn: pulumi.Input<string>;
        functionConfiguration: pulumi.Input<inputs.greengrass.FunctionDefinitionVersionFunctionConfigurationArgs>;
        id: pulumi.Input<string>;
    }

    export interface FunctionDefinitionVersionFunctionConfigurationArgs {
        encodingType?: pulumi.Input<string>;
        environment?: pulumi.Input<inputs.greengrass.FunctionDefinitionVersionEnvironmentArgs>;
        execArgs?: pulumi.Input<string>;
        executable?: pulumi.Input<string>;
        memorySize?: pulumi.Input<number>;
        pinned?: pulumi.Input<boolean>;
        timeout?: pulumi.Input<number>;
    }

    export interface FunctionDefinitionVersionResourceAccessPolicyArgs {
        permission?: pulumi.Input<string>;
        resourceId: pulumi.Input<string>;
    }

    export interface FunctionDefinitionVersionRunAsArgs {
        gid?: pulumi.Input<number>;
        uid?: pulumi.Input<number>;
    }

    export interface GroupVersionArgs {
        connectorDefinitionVersionArn?: pulumi.Input<string>;
        coreDefinitionVersionArn?: pulumi.Input<string>;
        deviceDefinitionVersionArn?: pulumi.Input<string>;
        functionDefinitionVersionArn?: pulumi.Input<string>;
        loggerDefinitionVersionArn?: pulumi.Input<string>;
        resourceDefinitionVersionArn?: pulumi.Input<string>;
        subscriptionDefinitionVersionArn?: pulumi.Input<string>;
    }

    export interface LoggerDefinitionLoggerArgs {
        component: pulumi.Input<string>;
        id: pulumi.Input<string>;
        level: pulumi.Input<string>;
        space?: pulumi.Input<number>;
        type: pulumi.Input<string>;
    }

    export interface LoggerDefinitionVersionArgs {
        loggers: pulumi.Input<pulumi.Input<inputs.greengrass.LoggerDefinitionLoggerArgs>[]>;
    }

    export interface LoggerDefinitionVersionLoggerArgs {
        component: pulumi.Input<string>;
        id: pulumi.Input<string>;
        level: pulumi.Input<string>;
        space?: pulumi.Input<number>;
        type: pulumi.Input<string>;
    }

    export interface ResourceDefinitionGroupOwnerSettingArgs {
        autoAddGroupOwner: pulumi.Input<boolean>;
        groupOwner?: pulumi.Input<string>;
    }

    export interface ResourceDefinitionLocalDeviceResourceDataArgs {
        groupOwnerSetting?: pulumi.Input<inputs.greengrass.ResourceDefinitionGroupOwnerSettingArgs>;
        sourcePath: pulumi.Input<string>;
    }

    export interface ResourceDefinitionLocalVolumeResourceDataArgs {
        destinationPath: pulumi.Input<string>;
        groupOwnerSetting?: pulumi.Input<inputs.greengrass.ResourceDefinitionGroupOwnerSettingArgs>;
        sourcePath: pulumi.Input<string>;
    }

    export interface ResourceDefinitionResourceDataContainerArgs {
        localDeviceResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionLocalDeviceResourceDataArgs>;
        localVolumeResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionLocalVolumeResourceDataArgs>;
        s3MachineLearningModelResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionS3MachineLearningModelResourceDataArgs>;
        sageMakerMachineLearningModelResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionSageMakerMachineLearningModelResourceDataArgs>;
        secretsManagerSecretResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionSecretsManagerSecretResourceDataArgs>;
    }

    export interface ResourceDefinitionResourceDownloadOwnerSettingArgs {
        groupOwner: pulumi.Input<string>;
        groupPermission: pulumi.Input<string>;
    }

    export interface ResourceDefinitionResourceInstanceArgs {
        id: pulumi.Input<string>;
        name: pulumi.Input<string>;
        resourceDataContainer: pulumi.Input<inputs.greengrass.ResourceDefinitionResourceDataContainerArgs>;
    }

    export interface ResourceDefinitionS3MachineLearningModelResourceDataArgs {
        destinationPath: pulumi.Input<string>;
        ownerSetting?: pulumi.Input<inputs.greengrass.ResourceDefinitionResourceDownloadOwnerSettingArgs>;
        s3Uri: pulumi.Input<string>;
    }

    export interface ResourceDefinitionSageMakerMachineLearningModelResourceDataArgs {
        destinationPath: pulumi.Input<string>;
        ownerSetting?: pulumi.Input<inputs.greengrass.ResourceDefinitionResourceDownloadOwnerSettingArgs>;
        sageMakerJobArn: pulumi.Input<string>;
    }

    export interface ResourceDefinitionSecretsManagerSecretResourceDataArgs {
        aRN: pulumi.Input<string>;
        additionalStagingLabelsToDownload?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ResourceDefinitionVersionArgs {
        resources: pulumi.Input<pulumi.Input<inputs.greengrass.ResourceDefinitionResourceInstanceArgs>[]>;
    }

    export interface ResourceDefinitionVersionGroupOwnerSettingArgs {
        autoAddGroupOwner: pulumi.Input<boolean>;
        groupOwner?: pulumi.Input<string>;
    }

    export interface ResourceDefinitionVersionLocalDeviceResourceDataArgs {
        groupOwnerSetting?: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionGroupOwnerSettingArgs>;
        sourcePath: pulumi.Input<string>;
    }

    export interface ResourceDefinitionVersionLocalVolumeResourceDataArgs {
        destinationPath: pulumi.Input<string>;
        groupOwnerSetting?: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionGroupOwnerSettingArgs>;
        sourcePath: pulumi.Input<string>;
    }

    export interface ResourceDefinitionVersionResourceDataContainerArgs {
        localDeviceResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionLocalDeviceResourceDataArgs>;
        localVolumeResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionLocalVolumeResourceDataArgs>;
        s3MachineLearningModelResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionS3MachineLearningModelResourceDataArgs>;
        sageMakerMachineLearningModelResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionSageMakerMachineLearningModelResourceDataArgs>;
        secretsManagerSecretResourceData?: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionSecretsManagerSecretResourceDataArgs>;
    }

    export interface ResourceDefinitionVersionResourceDownloadOwnerSettingArgs {
        groupOwner: pulumi.Input<string>;
        groupPermission: pulumi.Input<string>;
    }

    export interface ResourceDefinitionVersionResourceInstanceArgs {
        id: pulumi.Input<string>;
        name: pulumi.Input<string>;
        resourceDataContainer: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionResourceDataContainerArgs>;
    }

    export interface ResourceDefinitionVersionS3MachineLearningModelResourceDataArgs {
        destinationPath: pulumi.Input<string>;
        ownerSetting?: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionResourceDownloadOwnerSettingArgs>;
        s3Uri: pulumi.Input<string>;
    }

    export interface ResourceDefinitionVersionSageMakerMachineLearningModelResourceDataArgs {
        destinationPath: pulumi.Input<string>;
        ownerSetting?: pulumi.Input<inputs.greengrass.ResourceDefinitionVersionResourceDownloadOwnerSettingArgs>;
        sageMakerJobArn: pulumi.Input<string>;
    }

    export interface ResourceDefinitionVersionSecretsManagerSecretResourceDataArgs {
        aRN: pulumi.Input<string>;
        additionalStagingLabelsToDownload?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SubscriptionDefinitionSubscriptionArgs {
        id: pulumi.Input<string>;
        source: pulumi.Input<string>;
        subject: pulumi.Input<string>;
        target: pulumi.Input<string>;
    }

    export interface SubscriptionDefinitionVersionArgs {
        subscriptions: pulumi.Input<pulumi.Input<inputs.greengrass.SubscriptionDefinitionSubscriptionArgs>[]>;
    }

    export interface SubscriptionDefinitionVersionSubscriptionArgs {
        id: pulumi.Input<string>;
        source: pulumi.Input<string>;
        subject: pulumi.Input<string>;
        target: pulumi.Input<string>;
    }
}

export namespace greengrassv2 {
    export interface ComponentVersionComponentPlatformArgs {
        attributes?: any;
        name?: pulumi.Input<string>;
    }

    export interface ComponentVersionLambdaContainerParamsArgs {
        devices?: pulumi.Input<pulumi.Input<inputs.greengrassv2.ComponentVersionLambdaDeviceMountArgs>[]>;
        memorySizeInKB?: pulumi.Input<number>;
        mountROSysfs?: pulumi.Input<boolean>;
        volumes?: pulumi.Input<pulumi.Input<inputs.greengrassv2.ComponentVersionLambdaVolumeMountArgs>[]>;
    }

    export interface ComponentVersionLambdaDeviceMountArgs {
        addGroupOwner?: pulumi.Input<boolean>;
        path?: pulumi.Input<string>;
        permission?: pulumi.Input<enums.greengrassv2.ComponentVersionLambdaFilesystemPermission>;
    }

    export interface ComponentVersionLambdaEventSourceArgs {
        topic?: pulumi.Input<string>;
        type?: pulumi.Input<enums.greengrassv2.ComponentVersionLambdaEventSourceType>;
    }

    export interface ComponentVersionLambdaExecutionParametersArgs {
        environmentVariables?: any;
        eventSources?: pulumi.Input<pulumi.Input<inputs.greengrassv2.ComponentVersionLambdaEventSourceArgs>[]>;
        execArgs?: pulumi.Input<pulumi.Input<string>[]>;
        inputPayloadEncodingType?: pulumi.Input<enums.greengrassv2.ComponentVersionLambdaExecutionParametersInputPayloadEncodingType>;
        linuxProcessParams?: pulumi.Input<inputs.greengrassv2.ComponentVersionLambdaLinuxProcessParamsArgs>;
        maxIdleTimeInSeconds?: pulumi.Input<number>;
        maxInstancesCount?: pulumi.Input<number>;
        maxQueueSize?: pulumi.Input<number>;
        pinned?: pulumi.Input<boolean>;
        statusTimeoutInSeconds?: pulumi.Input<number>;
        timeoutInSeconds?: pulumi.Input<number>;
    }

    export interface ComponentVersionLambdaFunctionRecipeSourceArgs {
        componentDependencies?: any;
        componentLambdaParameters?: pulumi.Input<inputs.greengrassv2.ComponentVersionLambdaExecutionParametersArgs>;
        componentName?: pulumi.Input<string>;
        componentPlatforms?: pulumi.Input<pulumi.Input<inputs.greengrassv2.ComponentVersionComponentPlatformArgs>[]>;
        componentVersion?: pulumi.Input<string>;
        lambdaArn?: pulumi.Input<string>;
    }

    export interface ComponentVersionLambdaLinuxProcessParamsArgs {
        containerParams?: pulumi.Input<inputs.greengrassv2.ComponentVersionLambdaContainerParamsArgs>;
        isolationMode?: pulumi.Input<enums.greengrassv2.ComponentVersionLambdaLinuxProcessParamsIsolationMode>;
    }

    export interface ComponentVersionLambdaVolumeMountArgs {
        addGroupOwner?: pulumi.Input<boolean>;
        destinationPath?: pulumi.Input<string>;
        permission?: pulumi.Input<enums.greengrassv2.ComponentVersionLambdaFilesystemPermission>;
        sourcePath?: pulumi.Input<string>;
    }
}

export namespace groundstation {
    export interface ConfigAntennaDownlinkConfigArgs {
        spectrumConfig?: pulumi.Input<inputs.groundstation.ConfigSpectrumConfigArgs>;
    }

    export interface ConfigAntennaDownlinkDemodDecodeConfigArgs {
        decodeConfig?: pulumi.Input<inputs.groundstation.ConfigDecodeConfigArgs>;
        demodulationConfig?: pulumi.Input<inputs.groundstation.ConfigDemodulationConfigArgs>;
        spectrumConfig?: pulumi.Input<inputs.groundstation.ConfigSpectrumConfigArgs>;
    }

    export interface ConfigAntennaUplinkConfigArgs {
        spectrumConfig?: pulumi.Input<inputs.groundstation.ConfigUplinkSpectrumConfigArgs>;
        targetEirp?: pulumi.Input<inputs.groundstation.ConfigEirpArgs>;
        transmitDisabled?: pulumi.Input<boolean>;
    }

    export interface ConfigDataArgs {
        antennaDownlinkConfig?: pulumi.Input<inputs.groundstation.ConfigAntennaDownlinkConfigArgs>;
        antennaDownlinkDemodDecodeConfig?: pulumi.Input<inputs.groundstation.ConfigAntennaDownlinkDemodDecodeConfigArgs>;
        antennaUplinkConfig?: pulumi.Input<inputs.groundstation.ConfigAntennaUplinkConfigArgs>;
        dataflowEndpointConfig?: pulumi.Input<inputs.groundstation.ConfigDataflowEndpointConfigArgs>;
        s3RecordingConfig?: pulumi.Input<inputs.groundstation.ConfigS3RecordingConfigArgs>;
        trackingConfig?: pulumi.Input<inputs.groundstation.ConfigTrackingConfigArgs>;
        uplinkEchoConfig?: pulumi.Input<inputs.groundstation.ConfigUplinkEchoConfigArgs>;
    }

    export interface ConfigDataflowEndpointConfigArgs {
        dataflowEndpointName?: pulumi.Input<string>;
        dataflowEndpointRegion?: pulumi.Input<string>;
    }

    export interface ConfigDecodeConfigArgs {
        unvalidatedJSON?: pulumi.Input<string>;
    }

    export interface ConfigDemodulationConfigArgs {
        unvalidatedJSON?: pulumi.Input<string>;
    }

    export interface ConfigEirpArgs {
        units?: pulumi.Input<enums.groundstation.ConfigEirpUnits>;
        value?: pulumi.Input<number>;
    }

    export interface ConfigFrequencyArgs {
        units?: pulumi.Input<enums.groundstation.ConfigFrequencyUnits>;
        value?: pulumi.Input<number>;
    }

    export interface ConfigFrequencyBandwidthArgs {
        units?: pulumi.Input<enums.groundstation.ConfigBandwidthUnits>;
        value?: pulumi.Input<number>;
    }

    export interface ConfigS3RecordingConfigArgs {
        bucketArn?: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
        roleArn?: pulumi.Input<string>;
    }

    export interface ConfigSpectrumConfigArgs {
        bandwidth?: pulumi.Input<inputs.groundstation.ConfigFrequencyBandwidthArgs>;
        centerFrequency?: pulumi.Input<inputs.groundstation.ConfigFrequencyArgs>;
        polarization?: pulumi.Input<enums.groundstation.ConfigPolarization>;
    }

    export interface ConfigTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ConfigTrackingConfigArgs {
        autotrack?: pulumi.Input<enums.groundstation.ConfigTrackingConfigAutotrack>;
    }

    export interface ConfigUplinkEchoConfigArgs {
        antennaUplinkConfigArn?: pulumi.Input<string>;
        enabled?: pulumi.Input<boolean>;
    }

    export interface ConfigUplinkSpectrumConfigArgs {
        centerFrequency?: pulumi.Input<inputs.groundstation.ConfigFrequencyArgs>;
        polarization?: pulumi.Input<enums.groundstation.ConfigPolarization>;
    }

    export interface DataflowEndpointGroupDataflowEndpointArgs {
        address?: pulumi.Input<inputs.groundstation.DataflowEndpointGroupSocketAddressArgs>;
        mtu?: pulumi.Input<number>;
        name?: pulumi.Input<string>;
    }

    export interface DataflowEndpointGroupEndpointDetailsArgs {
        endpoint?: pulumi.Input<inputs.groundstation.DataflowEndpointGroupDataflowEndpointArgs>;
        securityDetails?: pulumi.Input<inputs.groundstation.DataflowEndpointGroupSecurityDetailsArgs>;
    }

    export interface DataflowEndpointGroupSecurityDetailsArgs {
        roleArn?: pulumi.Input<string>;
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DataflowEndpointGroupSocketAddressArgs {
        name?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
    }

    export interface DataflowEndpointGroupTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface MissionProfileDataflowEdgeArgs {
        destination?: pulumi.Input<string>;
        source?: pulumi.Input<string>;
    }

    export interface MissionProfileTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace guardduty {
    export interface DetectorCFNDataSourceConfigurationsArgs {
        s3Logs?: pulumi.Input<inputs.guardduty.DetectorCFNS3LogsConfigurationArgs>;
    }

    export interface DetectorCFNS3LogsConfigurationArgs {
        enable?: pulumi.Input<boolean>;
    }

    export interface FilterConditionArgs {
        eq?: pulumi.Input<pulumi.Input<string>[]>;
        gte?: pulumi.Input<number>;
        lt?: pulumi.Input<number>;
        lte?: pulumi.Input<number>;
        neq?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface FilterFindingCriteriaArgs {
        criterion?: any;
        itemType?: pulumi.Input<inputs.guardduty.FilterConditionArgs>;
    }
}

export namespace healthlake {
    /**
     * The customer-managed-key (CMK) used when creating a Data Store. If a customer owned key is not specified, an AWS owned key will be used for encryption.
     */
    export interface FHIRDatastoreKmsEncryptionConfigArgs {
        /**
         * The type of customer-managed-key (CMK) used for encryption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.
         */
        cmkType: pulumi.Input<enums.healthlake.FHIRDatastoreKmsEncryptionConfigCmkType>;
        /**
         * The KMS encryption key id/alias used to encrypt the Data Store contents at rest.
         */
        kmsKeyId?: pulumi.Input<string>;
    }

    /**
     * The preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.
     */
    export interface FHIRDatastorePreloadDataConfigArgs {
        /**
         * The type of preloaded data. Only Synthea preloaded data is supported.
         */
        preloadDataType: pulumi.Input<enums.healthlake.FHIRDatastorePreloadDataConfigPreloadDataType>;
    }

    /**
     * The server-side encryption key configuration for a customer provided encryption key.
     */
    export interface FHIRDatastoreSseConfigurationArgs {
        kmsEncryptionConfig: pulumi.Input<inputs.healthlake.FHIRDatastoreKmsEncryptionConfigArgs>;
    }

    /**
     * A key-value pair. A tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.
     */
    export interface FHIRDatastoreTagArgs {
        /**
         * The key of the tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value of the tag.
         */
        value: pulumi.Input<string>;
    }
}

export namespace iam {
    export interface GroupPolicyArgs {
        policyDocument: any;
        policyName: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface OIDCProviderTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The inline policy document that is embedded in the specified IAM role.
     */
    export interface RolePolicyArgs {
        /**
         * The policy document.
         */
        policyDocument: pulumi.Input<string>;
        /**
         * The friendly name (not ARN) identifying the policy.
         */
        policyName: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface RoleTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface SAMLProviderTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ServerCertificateTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    export interface UserLoginProfileArgs {
        password: pulumi.Input<string>;
        passwordResetRequired?: pulumi.Input<boolean>;
    }

    export interface UserPolicyArgs {
        policyDocument: any;
        policyName: pulumi.Input<string>;
    }

    export interface UserTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface VirtualMFADeviceTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace imagebuilder {
    /**
     * Configuration details of the component.
     */
    export interface ContainerRecipeComponentConfigurationArgs {
        /**
         * The Amazon Resource Name (ARN) of the component.
         */
        componentArn?: pulumi.Input<string>;
    }

    /**
     * Amazon EBS-specific block device mapping specifications. 
     */
    export interface ContainerRecipeEbsInstanceBlockDeviceSpecificationArgs {
        /**
         * Use to configure delete on termination of the associated device.
         */
        deleteOnTermination?: pulumi.Input<boolean>;
        /**
         * Use to configure device encryption.
         */
        encrypted?: pulumi.Input<boolean>;
        /**
         * Use to configure device IOPS.
         */
        iops?: pulumi.Input<number>;
        /**
         * Use to configure the KMS key to use when encrypting the device.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The snapshot that defines the device contents.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * For GP3 volumes only – The throughput in MiB/s that the volume supports.
         */
        throughput?: pulumi.Input<number>;
        /**
         * Use to override the device's volume size.
         */
        volumeSize?: pulumi.Input<number>;
        /**
         * Use to override the device's volume type.
         */
        volumeType?: pulumi.Input<enums.imagebuilder.ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType>;
    }

    /**
     * Defines block device mappings for the instance used to configure your image. 
     */
    export interface ContainerRecipeInstanceBlockDeviceMappingArgs {
        /**
         * The device to which these mappings apply.
         */
        deviceName?: pulumi.Input<string>;
        /**
         * Use to manage Amazon EBS-specific configuration for this mapping.
         */
        ebs?: pulumi.Input<inputs.imagebuilder.ContainerRecipeEbsInstanceBlockDeviceSpecificationArgs>;
        /**
         * Use to remove a mapping from the parent image.
         */
        noDevice?: pulumi.Input<string>;
        /**
         * Use to manage instance ephemeral devices.
         */
        virtualName?: pulumi.Input<string>;
    }

    /**
     * A group of options that can be used to configure an instance for building and testing container images.
     */
    export interface ContainerRecipeInstanceConfigurationArgs {
        /**
         * Defines the block devices to attach for building an instance from this Image Builder AMI.
         */
        blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.imagebuilder.ContainerRecipeInstanceBlockDeviceMappingArgs>[]>;
        /**
         * The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
         */
        image?: pulumi.Input<string>;
    }

    /**
     * The container repository where the output container image is stored.
     */
    export interface ContainerRecipeTargetContainerRepositoryArgs {
        /**
         * The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
         */
        repositoryName?: pulumi.Input<string>;
        /**
         * Specifies the service in which this image was registered.
         */
        service?: pulumi.Input<enums.imagebuilder.ContainerRecipeTargetContainerRepositoryService>;
    }

    /**
     * The distributions of the distribution configuration.
     */
    export interface DistributionConfigurationDistributionArgs {
        /**
         * The specific AMI settings (for example, launch permissions, AMI tags).
         */
        amiDistributionConfiguration?: pulumi.Input<inputs.imagebuilder.DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs>;
        /**
         * Container distribution settings for encryption, licensing, and sharing in a specific Region.
         */
        containerDistributionConfiguration?: pulumi.Input<inputs.imagebuilder.DistributionConfigurationDistributionContainerDistributionConfigurationPropertiesArgs>;
        /**
         * A group of launchTemplateConfiguration settings that apply to image distribution.
         */
        launchTemplateConfigurations?: pulumi.Input<pulumi.Input<inputs.imagebuilder.DistributionConfigurationLaunchTemplateConfigurationArgs>[]>;
        /**
         * The License Manager Configuration to associate with the AMI in the specified Region.
         */
        licenseConfigurationArns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * region
         */
        region: pulumi.Input<string>;
    }

    /**
     * The specific AMI settings (for example, launch permissions, AMI tags).
     */
    export interface DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs {
        /**
         * The tags to apply to AMIs distributed to this Region.
         */
        amiTags?: any;
        /**
         * The description of the AMI distribution configuration.
         */
        description?: pulumi.Input<string>;
        /**
         * The KMS key identifier used to encrypt the distributed image.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Launch permissions can be used to configure which AWS accounts can use the AMI to launch instances.
         */
        launchPermissionConfiguration?: pulumi.Input<inputs.imagebuilder.DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs>;
        /**
         * The name of the AMI distribution configuration.
         */
        name?: pulumi.Input<string>;
        /**
         * The ID of accounts to which you want to distribute an image.
         */
        targetAccountIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Launch permissions can be used to configure which AWS accounts can use the AMI to launch instances.
     */
    export interface DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs {
        /**
         * The name of the group.
         */
        userGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The AWS account ID.
         */
        userIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Container distribution settings for encryption, licensing, and sharing in a specific Region.
     */
    export interface DistributionConfigurationDistributionContainerDistributionConfigurationPropertiesArgs {
        /**
         * Tags that are attached to the container distribution configuration.
         */
        containerTags?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The description of the container distribution configuration.
         */
        description?: pulumi.Input<string>;
        /**
         * The destination repository for the container distribution configuration.
         */
        targetRepository?: pulumi.Input<inputs.imagebuilder.DistributionConfigurationTargetContainerRepositoryArgs>;
    }

    /**
     * launchTemplateConfiguration settings that apply to image distribution.
     */
    export interface DistributionConfigurationLaunchTemplateConfigurationArgs {
        /**
         * The account ID that this configuration applies to.
         */
        accountId?: pulumi.Input<string>;
        /**
         * Identifies the EC2 launch template to use.
         */
        launchTemplateId?: pulumi.Input<string>;
        /**
         * Set the specified EC2 launch template as the default launch template for the specified account.
         */
        setDefaultVersion?: pulumi.Input<boolean>;
    }

    /**
     * The destination repository for the container image.
     */
    export interface DistributionConfigurationTargetContainerRepositoryArgs {
        /**
         * The repository name of target container repository.
         */
        repositoryName?: pulumi.Input<string>;
        /**
         * The service of target container repository.
         */
        service?: pulumi.Input<enums.imagebuilder.DistributionConfigurationTargetContainerRepositoryService>;
    }

    /**
     * Image tests configuration.
     */
    export interface ImagePipelineImageTestsConfigurationArgs {
        /**
         * Defines if tests should be executed when building this image.
         */
        imageTestsEnabled?: pulumi.Input<boolean>;
        /**
         * The maximum time in minutes that tests are permitted to run.
         */
        timeoutMinutes?: pulumi.Input<number>;
    }

    /**
     * The schedule of the image pipeline.
     */
    export interface ImagePipelineScheduleArgs {
        /**
         * The condition configures when the pipeline should trigger a new image build.
         */
        pipelineExecutionStartCondition?: pulumi.Input<enums.imagebuilder.ImagePipelineSchedulePipelineExecutionStartCondition>;
        /**
         * The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
         */
        scheduleExpression?: pulumi.Input<string>;
    }

    /**
     * Specify additional settings and launch scripts for your build instances.
     */
    export interface ImageRecipeAdditionalInstanceConfigurationArgs {
        /**
         * Contains settings for the SSM agent on your build instance.
         */
        systemsManagerAgent?: pulumi.Input<inputs.imagebuilder.ImageRecipeSystemsManagerAgentArgs>;
        /**
         * Use this property to provide commands or a command script to run when you launch your build instance.
         */
        userDataOverride?: pulumi.Input<string>;
    }

    /**
     * Configuration details of the component.
     */
    export interface ImageRecipeComponentConfigurationArgs {
        /**
         * The Amazon Resource Name (ARN) of the component.
         */
        componentArn?: pulumi.Input<string>;
        /**
         * A group of parameter settings that are used to configure the component for a specific recipe.
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.imagebuilder.ImageRecipeComponentParameterArgs>[]>;
    }

    /**
     * Contains a key/value pair that sets the named component parameter.
     */
    export interface ImageRecipeComponentParameterArgs {
        /**
         * The name of the component parameter to set.
         */
        name: pulumi.Input<string>;
        /**
         * Sets the value for the named component parameter.
         */
        value: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Amazon EBS-specific block device mapping specifications. 
     */
    export interface ImageRecipeEbsInstanceBlockDeviceSpecificationArgs {
        /**
         * Use to configure delete on termination of the associated device.
         */
        deleteOnTermination?: pulumi.Input<boolean>;
        /**
         * Use to configure device encryption.
         */
        encrypted?: pulumi.Input<boolean>;
        /**
         * Use to configure device IOPS.
         */
        iops?: pulumi.Input<number>;
        /**
         * Use to configure the KMS key to use when encrypting the device.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The snapshot that defines the device contents.
         */
        snapshotId?: pulumi.Input<string>;
        /**
         * For GP3 volumes only – The throughput in MiB/s that the volume supports.
         */
        throughput?: pulumi.Input<number>;
        /**
         * Use to override the device's volume size.
         */
        volumeSize?: pulumi.Input<number>;
        /**
         * Use to override the device's volume type.
         */
        volumeType?: pulumi.Input<enums.imagebuilder.ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType>;
    }

    /**
     * Defines block device mappings for the instance used to configure your image. 
     */
    export interface ImageRecipeInstanceBlockDeviceMappingArgs {
        /**
         * The device to which these mappings apply.
         */
        deviceName?: pulumi.Input<string>;
        /**
         * Use to manage Amazon EBS-specific configuration for this mapping.
         */
        ebs?: pulumi.Input<inputs.imagebuilder.ImageRecipeEbsInstanceBlockDeviceSpecificationArgs>;
        /**
         * Use to remove a mapping from the parent image.
         */
        noDevice?: pulumi.Input<string>;
        /**
         * Use to manage instance ephemeral devices.
         */
        virtualName?: pulumi.Input<string>;
    }

    /**
     * Contains settings for the SSM agent on your build instance.
     */
    export interface ImageRecipeSystemsManagerAgentArgs {
        /**
         * Controls whether the SSM agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it's set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.
         */
        uninstallAfterBuild?: pulumi.Input<boolean>;
    }

    /**
     * The image tests configuration used when creating this image.
     */
    export interface ImageTestsConfigurationArgs {
        /**
         * ImageTestsEnabled
         */
        imageTestsEnabled?: pulumi.Input<boolean>;
        /**
         * TimeoutMinutes
         */
        timeoutMinutes?: pulumi.Input<number>;
    }

    /**
     * The instance metadata option settings for the infrastructure configuration.
     */
    export interface InfrastructureConfigurationInstanceMetadataOptionsArgs {
        /**
         * Limit the number of hops that an instance metadata request can traverse to reach its destination.
         */
        httpPutResponseHopLimit?: pulumi.Input<number>;
        /**
         * Indicates whether a signed token header is required for instance metadata retrieval requests. The values affect the response as follows: 
         */
        httpTokens?: pulumi.Input<enums.imagebuilder.InfrastructureConfigurationInstanceMetadataOptionsHttpTokens>;
    }

    /**
     * The logging configuration of the infrastructure configuration.
     */
    export interface InfrastructureConfigurationLoggingArgs {
        s3Logs?: pulumi.Input<inputs.imagebuilder.InfrastructureConfigurationS3LogsArgs>;
    }

    /**
     * The S3 path in which to store the logs.
     */
    export interface InfrastructureConfigurationS3LogsArgs {
        /**
         * S3BucketName
         */
        s3BucketName?: pulumi.Input<string>;
        /**
         * S3KeyPrefix
         */
        s3KeyPrefix?: pulumi.Input<string>;
    }
}

export namespace inspector {
    export interface AssessmentTemplateTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ResourceGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace iot {
    /**
     * The criteria that determine when and how a job abort takes place.
     */
    export interface AbortConfigPropertiesArgs {
        criteriaList: pulumi.Input<pulumi.Input<inputs.iot.JobTemplateAbortCriteriaArgs>[]>;
    }

    /**
     * The configuration for a specific audit check.
     */
    export interface AccountAuditConfigurationAuditCheckConfigurationArgs {
        /**
         * True if the check is enabled.
         */
        enabled?: pulumi.Input<boolean>;
    }

    /**
     * Specifies which audit checks are enabled and disabled for this account.
     */
    export interface AccountAuditConfigurationAuditCheckConfigurationsArgs {
        authenticatedCognitoRoleOverlyPermissiveCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        caCertificateExpiringCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        caCertificateKeyQualityCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        conflictingClientIdsCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        deviceCertificateExpiringCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        deviceCertificateKeyQualityCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        deviceCertificateSharedCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        iotPolicyOverlyPermissiveCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        iotRoleAliasAllowsAccessToUnusedServicesCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        iotRoleAliasOverlyPermissiveCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        loggingDisabledCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        revokedCaCertificateStillActiveCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        revokedDeviceCertificateStillActiveCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
        unauthenticatedCognitoRoleOverlyPermissiveCheck?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditCheckConfigurationArgs>;
    }

    export interface AccountAuditConfigurationAuditNotificationTargetArgs {
        /**
         * True if notifications to the target are enabled.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The ARN of the role that grants permission to send notifications to the target.
         */
        roleArn?: pulumi.Input<string>;
        /**
         * The ARN of the target (SNS topic) to which audit notifications are sent.
         */
        targetArn?: pulumi.Input<string>;
    }

    /**
     * Information about the targets to which audit notifications are sent.
     */
    export interface AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs {
        sns?: pulumi.Input<inputs.iot.AccountAuditConfigurationAuditNotificationTargetArgs>;
    }

    export interface AuthorizerTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface CustomMetricTagArgs {
        /**
         * The tag's key.
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface DimensionTagArgs {
        /**
         * The tag's key.
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value.
         */
        value: pulumi.Input<string>;
    }

    export interface DomainConfigurationAuthorizerConfigArgs {
        allowAuthorizerOverride?: pulumi.Input<boolean>;
        defaultAuthorizerName?: pulumi.Input<string>;
    }

    export interface DomainConfigurationTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Aggregation types supported by Fleet Indexing
     */
    export interface FleetMetricAggregationTypeArgs {
        /**
         * Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality
         */
        name: pulumi.Input<string>;
        /**
         * Fleet Indexing aggregation type values
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A key-value pair to associate with a resource
     */
    export interface FleetMetricTagArgs {
        /**
         * The tag's key
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value
         */
        value: pulumi.Input<string>;
    }

    /**
     * Allows you to create a staged rollout of a job.
     */
    export interface JobExecutionsRolloutConfigPropertiesArgs {
        /**
         * The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
         */
        exponentialRolloutRate?: pulumi.Input<inputs.iot.JobTemplateExponentialRolloutRateArgs>;
        /**
         * The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.
         */
        maximumPerMinute?: pulumi.Input<number>;
    }

    /**
     * The criteria that determine when and how a job abort takes place.
     */
    export interface JobTemplateAbortCriteriaArgs {
        /**
         * The type of job action to take to initiate the job abort.
         */
        action: pulumi.Input<enums.iot.JobTemplateAction>;
        /**
         * The type of job execution failures that can initiate a job abort.
         */
        failureType: pulumi.Input<enums.iot.JobTemplateFailureType>;
        /**
         * The minimum number of things which must receive job execution notifications before the job can be aborted.
         */
        minNumberOfExecutedThings: pulumi.Input<number>;
        /**
         * The minimum percentage of job execution failures that must occur to initiate the job abort.
         */
        thresholdPercentage: pulumi.Input<number>;
    }

    /**
     * Allows you to create an exponential rate of rollout for a job.
     */
    export interface JobTemplateExponentialRolloutRateArgs {
        /**
         * The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.
         */
        baseRatePerMinute: pulumi.Input<number>;
        /**
         * The exponential factor to increase the rate of rollout for a job.
         */
        incrementFactor: pulumi.Input<number>;
        /**
         * The criteria to initiate the increase in rate of rollout for a job.
         */
        rateIncreaseCriteria: pulumi.Input<inputs.iot.JobTemplateRateIncreaseCriteriaArgs>;
    }

    export interface JobTemplateRateIncreaseCriteriaArgs {
        numberOfNotifiedThings?: pulumi.Input<number>;
        numberOfSucceededThings?: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface JobTemplateTagArgs {
        /**
         * The tag's key.
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
     */
    export interface MitigationActionActionParamsArgs {
        addThingsToThingGroupParams?: pulumi.Input<inputs.iot.MitigationActionAddThingsToThingGroupParamsArgs>;
        enableIoTLoggingParams?: pulumi.Input<inputs.iot.MitigationActionEnableIoTLoggingParamsArgs>;
        publishFindingToSnsParams?: pulumi.Input<inputs.iot.MitigationActionPublishFindingToSnsParamsArgs>;
        replaceDefaultPolicyVersionParams?: pulumi.Input<inputs.iot.MitigationActionReplaceDefaultPolicyVersionParamsArgs>;
        updateCACertificateParams?: pulumi.Input<inputs.iot.MitigationActionUpdateCACertificateParamsArgs>;
        updateDeviceCertificateParams?: pulumi.Input<inputs.iot.MitigationActionUpdateDeviceCertificateParamsArgs>;
    }

    /**
     * Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.
     */
    export interface MitigationActionAddThingsToThingGroupParamsArgs {
        /**
         * Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
         */
        overrideDynamicGroups?: pulumi.Input<boolean>;
        /**
         * The list of groups to which you want to add the things that triggered the mitigation action.
         */
        thingGroupNames: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
     */
    export interface MitigationActionEnableIoTLoggingParamsArgs {
        /**
         *  Specifies which types of information are logged.
         */
        logLevel: pulumi.Input<enums.iot.MitigationActionEnableIoTLoggingParamsLogLevel>;
        /**
         *  The ARN of the IAM role used for logging.
         */
        roleArnForLogging: pulumi.Input<string>;
    }

    /**
     * Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
     */
    export interface MitigationActionPublishFindingToSnsParamsArgs {
        /**
         * The ARN of the topic to which you want to publish the findings.
         */
        topicArn: pulumi.Input<string>;
    }

    /**
     * Parameters to define a mitigation action that adds a blank policy to restrict permissions.
     */
    export interface MitigationActionReplaceDefaultPolicyVersionParamsArgs {
        templateName: pulumi.Input<enums.iot.MitigationActionReplaceDefaultPolicyVersionParamsTemplateName>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface MitigationActionTagArgs {
        /**
         * The tag's key.
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
     */
    export interface MitigationActionUpdateCACertificateParamsArgs {
        action: pulumi.Input<enums.iot.MitigationActionUpdateCACertificateParamsAction>;
    }

    /**
     * Parameters to define a mitigation action that changes the state of the device certificate to inactive.
     */
    export interface MitigationActionUpdateDeviceCertificateParamsArgs {
        action: pulumi.Input<enums.iot.MitigationActionUpdateDeviceCertificateParamsAction>;
    }

    /**
     * Configuration for pre-signed S3 URLs.
     */
    export interface PresignedUrlConfigPropertiesArgs {
        expiresInSec?: pulumi.Input<number>;
        roleArn: pulumi.Input<string>;
    }

    export interface ProvisioningTemplateProvisioningHookArgs {
        payloadVersion?: pulumi.Input<string>;
        targetArn?: pulumi.Input<string>;
    }

    export interface ProvisioningTemplateTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ScheduledAuditTagArgs {
        /**
         * The tag's key.
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A security profile behavior.
     */
    export interface SecurityProfileBehaviorArgs {
        criteria?: pulumi.Input<inputs.iot.SecurityProfileBehaviorCriteriaArgs>;
        /**
         * What is measured by the behavior.
         */
        metric?: pulumi.Input<string>;
        metricDimension?: pulumi.Input<inputs.iot.SecurityProfileMetricDimensionArgs>;
        /**
         * The name for the behavior.
         */
        name: pulumi.Input<string>;
        /**
         * Manage Detect alarm SNS notifications by setting behavior notification to on or suppressed. Detect will continue to performing device behavior evaluations. However, suppressed alarms wouldn't be forwarded for SNS notification.
         */
        suppressAlerts?: pulumi.Input<boolean>;
    }

    /**
     * The criteria by which the behavior is determined to be normal.
     */
    export interface SecurityProfileBehaviorCriteriaArgs {
        /**
         * The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
         */
        comparisonOperator?: pulumi.Input<enums.iot.SecurityProfileBehaviorCriteriaComparisonOperator>;
        /**
         * If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
         */
        consecutiveDatapointsToAlarm?: pulumi.Input<number>;
        /**
         * If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
         */
        consecutiveDatapointsToClear?: pulumi.Input<number>;
        /**
         * Use this to specify the time duration over which the behavior is evaluated.
         */
        durationSeconds?: pulumi.Input<number>;
        mlDetectionConfig?: pulumi.Input<inputs.iot.SecurityProfileMachineLearningDetectionConfigArgs>;
        statisticalThreshold?: pulumi.Input<inputs.iot.SecurityProfileStatisticalThresholdArgs>;
        value?: pulumi.Input<inputs.iot.SecurityProfileMetricValueArgs>;
    }

    /**
     * The configuration of an ML Detect Security Profile.
     */
    export interface SecurityProfileMachineLearningDetectionConfigArgs {
        /**
         * The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High.
         */
        confidenceLevel?: pulumi.Input<enums.iot.SecurityProfileMachineLearningDetectionConfigConfidenceLevel>;
    }

    /**
     * The dimension of a metric.
     */
    export interface SecurityProfileMetricDimensionArgs {
        /**
         * A unique identifier for the dimension.
         */
        dimensionName: pulumi.Input<string>;
        /**
         * Defines how the dimensionValues of a dimension are interpreted.
         */
        operator?: pulumi.Input<enums.iot.SecurityProfileMetricDimensionOperator>;
    }

    /**
     * The metric you want to retain. Dimensions are optional.
     */
    export interface SecurityProfileMetricToRetainArgs {
        /**
         * What is measured by the behavior.
         */
        metric: pulumi.Input<string>;
        metricDimension?: pulumi.Input<inputs.iot.SecurityProfileMetricDimensionArgs>;
    }

    /**
     * The value to be compared with the metric.
     */
    export interface SecurityProfileMetricValueArgs {
        /**
         * If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
         */
        cidrs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
         */
        count?: pulumi.Input<string>;
        /**
         * The numeral value of a metric.
         */
        number?: pulumi.Input<number>;
        /**
         * The numeral values of a metric.
         */
        numbers?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
         */
        ports?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * The string values of a metric.
         */
        strings?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
     */
    export interface SecurityProfileStatisticalThresholdArgs {
        /**
         * The percentile which resolves to a threshold value by which compliance with a behavior is determined
         */
        statistic?: pulumi.Input<enums.iot.SecurityProfileStatisticalThresholdStatistic>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface SecurityProfileTagArgs {
        /**
         * The tag's key.
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value.
         */
        value: pulumi.Input<string>;
    }

    export interface ThingAttributePayloadArgs {
        attributes?: any;
    }

    /**
     * Specifies the amount of time each device has to finish its execution of the job.
     */
    export interface TimeoutConfigPropertiesArgs {
        inProgressTimeoutInMinutes: pulumi.Input<number>;
    }

    export interface TopicRuleActionArgs {
        cloudwatchAlarm?: pulumi.Input<inputs.iot.TopicRuleCloudwatchAlarmActionArgs>;
        cloudwatchLogs?: pulumi.Input<inputs.iot.TopicRuleCloudwatchLogsActionArgs>;
        cloudwatchMetric?: pulumi.Input<inputs.iot.TopicRuleCloudwatchMetricActionArgs>;
        dynamoDB?: pulumi.Input<inputs.iot.TopicRuleDynamoDBActionArgs>;
        dynamoDBv2?: pulumi.Input<inputs.iot.TopicRuleDynamoDBv2ActionArgs>;
        elasticsearch?: pulumi.Input<inputs.iot.TopicRuleElasticsearchActionArgs>;
        firehose?: pulumi.Input<inputs.iot.TopicRuleFirehoseActionArgs>;
        http?: pulumi.Input<inputs.iot.TopicRuleHttpActionArgs>;
        iotAnalytics?: pulumi.Input<inputs.iot.TopicRuleIotAnalyticsActionArgs>;
        iotEvents?: pulumi.Input<inputs.iot.TopicRuleIotEventsActionArgs>;
        iotSiteWise?: pulumi.Input<inputs.iot.TopicRuleIotSiteWiseActionArgs>;
        kafka?: pulumi.Input<inputs.iot.TopicRuleKafkaActionArgs>;
        kinesis?: pulumi.Input<inputs.iot.TopicRuleKinesisActionArgs>;
        lambda?: pulumi.Input<inputs.iot.TopicRuleLambdaActionArgs>;
        openSearch?: pulumi.Input<inputs.iot.TopicRuleOpenSearchActionArgs>;
        republish?: pulumi.Input<inputs.iot.TopicRuleRepublishActionArgs>;
        s3?: pulumi.Input<inputs.iot.TopicRuleS3ActionArgs>;
        sns?: pulumi.Input<inputs.iot.TopicRuleSnsActionArgs>;
        sqs?: pulumi.Input<inputs.iot.TopicRuleSqsActionArgs>;
        stepFunctions?: pulumi.Input<inputs.iot.TopicRuleStepFunctionsActionArgs>;
        timestream?: pulumi.Input<inputs.iot.TopicRuleTimestreamActionArgs>;
    }

    export interface TopicRuleAssetPropertyTimestampArgs {
        offsetInNanos?: pulumi.Input<string>;
        timeInSeconds: pulumi.Input<string>;
    }

    export interface TopicRuleAssetPropertyValueArgs {
        quality?: pulumi.Input<string>;
        timestamp: pulumi.Input<inputs.iot.TopicRuleAssetPropertyTimestampArgs>;
        value: pulumi.Input<inputs.iot.TopicRuleAssetPropertyVariantArgs>;
    }

    export interface TopicRuleAssetPropertyVariantArgs {
        booleanValue?: pulumi.Input<string>;
        doubleValue?: pulumi.Input<string>;
        integerValue?: pulumi.Input<string>;
        stringValue?: pulumi.Input<string>;
    }

    export interface TopicRuleCloudwatchAlarmActionArgs {
        alarmName: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
        stateReason: pulumi.Input<string>;
        stateValue: pulumi.Input<string>;
    }

    export interface TopicRuleCloudwatchLogsActionArgs {
        logGroupName: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface TopicRuleCloudwatchMetricActionArgs {
        metricName: pulumi.Input<string>;
        metricNamespace: pulumi.Input<string>;
        metricTimestamp?: pulumi.Input<string>;
        metricUnit: pulumi.Input<string>;
        metricValue: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface TopicRuleDestinationHttpUrlDestinationSummaryArgs {
        confirmationUrl?: pulumi.Input<string>;
    }

    export interface TopicRuleDestinationVpcDestinationPropertiesArgs {
        roleArn?: pulumi.Input<string>;
        securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
        vpcId?: pulumi.Input<string>;
    }

    export interface TopicRuleDynamoDBActionArgs {
        hashKeyField: pulumi.Input<string>;
        hashKeyType?: pulumi.Input<string>;
        hashKeyValue: pulumi.Input<string>;
        payloadField?: pulumi.Input<string>;
        rangeKeyField?: pulumi.Input<string>;
        rangeKeyType?: pulumi.Input<string>;
        rangeKeyValue?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
        tableName: pulumi.Input<string>;
    }

    export interface TopicRuleDynamoDBv2ActionArgs {
        putItem?: pulumi.Input<inputs.iot.TopicRulePutItemInputArgs>;
        roleArn?: pulumi.Input<string>;
    }

    export interface TopicRuleElasticsearchActionArgs {
        endpoint: pulumi.Input<string>;
        id: pulumi.Input<string>;
        index: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface TopicRuleFirehoseActionArgs {
        batchMode?: pulumi.Input<boolean>;
        deliveryStreamName: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
        separator?: pulumi.Input<string>;
    }

    export interface TopicRuleHttpActionArgs {
        auth?: pulumi.Input<inputs.iot.TopicRuleHttpAuthorizationArgs>;
        confirmationUrl?: pulumi.Input<string>;
        headers?: pulumi.Input<pulumi.Input<inputs.iot.TopicRuleHttpActionHeaderArgs>[]>;
        url: pulumi.Input<string>;
    }

    export interface TopicRuleHttpActionHeaderArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TopicRuleHttpAuthorizationArgs {
        sigv4?: pulumi.Input<inputs.iot.TopicRuleSigV4AuthorizationArgs>;
    }

    export interface TopicRuleIotAnalyticsActionArgs {
        batchMode?: pulumi.Input<boolean>;
        channelName: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface TopicRuleIotEventsActionArgs {
        batchMode?: pulumi.Input<boolean>;
        inputName: pulumi.Input<string>;
        messageId?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface TopicRuleIotSiteWiseActionArgs {
        putAssetPropertyValueEntries: pulumi.Input<pulumi.Input<inputs.iot.TopicRulePutAssetPropertyValueEntryArgs>[]>;
        roleArn: pulumi.Input<string>;
    }

    export interface TopicRuleKafkaActionArgs {
        clientProperties: any;
        destinationArn: pulumi.Input<string>;
        key?: pulumi.Input<string>;
        partition?: pulumi.Input<string>;
        topic: pulumi.Input<string>;
    }

    export interface TopicRuleKinesisActionArgs {
        partitionKey?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
        streamName: pulumi.Input<string>;
    }

    export interface TopicRuleLambdaActionArgs {
        functionArn?: pulumi.Input<string>;
    }

    export interface TopicRuleOpenSearchActionArgs {
        endpoint: pulumi.Input<string>;
        id: pulumi.Input<string>;
        index: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface TopicRulePayloadArgs {
        actions: pulumi.Input<pulumi.Input<inputs.iot.TopicRuleActionArgs>[]>;
        awsIotSqlVersion?: pulumi.Input<string>;
        description?: pulumi.Input<string>;
        errorAction?: pulumi.Input<inputs.iot.TopicRuleActionArgs>;
        ruleDisabled?: pulumi.Input<boolean>;
        sql: pulumi.Input<string>;
    }

    export interface TopicRulePutAssetPropertyValueEntryArgs {
        assetId?: pulumi.Input<string>;
        entryId?: pulumi.Input<string>;
        propertyAlias?: pulumi.Input<string>;
        propertyId?: pulumi.Input<string>;
        propertyValues: pulumi.Input<pulumi.Input<inputs.iot.TopicRuleAssetPropertyValueArgs>[]>;
    }

    export interface TopicRulePutItemInputArgs {
        tableName: pulumi.Input<string>;
    }

    export interface TopicRuleRepublishActionArgs {
        qos?: pulumi.Input<number>;
        roleArn: pulumi.Input<string>;
        topic: pulumi.Input<string>;
    }

    export interface TopicRuleS3ActionArgs {
        bucketName: pulumi.Input<string>;
        cannedAcl?: pulumi.Input<enums.iot.TopicRuleCannedAccessControlList>;
        key: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface TopicRuleSigV4AuthorizationArgs {
        roleArn: pulumi.Input<string>;
        serviceName: pulumi.Input<string>;
        signingRegion: pulumi.Input<string>;
    }

    export interface TopicRuleSnsActionArgs {
        messageFormat?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
        targetArn: pulumi.Input<string>;
    }

    export interface TopicRuleSqsActionArgs {
        queueUrl: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
        useBase64?: pulumi.Input<boolean>;
    }

    export interface TopicRuleStepFunctionsActionArgs {
        executionNamePrefix?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
        stateMachineName: pulumi.Input<string>;
    }

    export interface TopicRuleTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TopicRuleTimestreamActionArgs {
        batchMode?: pulumi.Input<boolean>;
        databaseName: pulumi.Input<string>;
        dimensions: pulumi.Input<pulumi.Input<inputs.iot.TopicRuleTimestreamDimensionArgs>[]>;
        roleArn: pulumi.Input<string>;
        tableName: pulumi.Input<string>;
        timestamp?: pulumi.Input<inputs.iot.TopicRuleTimestreamTimestampArgs>;
    }

    export interface TopicRuleTimestreamDimensionArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TopicRuleTimestreamTimestampArgs {
        unit: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

}

export namespace iot1click {
    export interface ProjectPlacementTemplateArgs {
        defaultAttributes?: any;
        deviceTemplates?: any;
    }
}

export namespace iotanalytics {
    export interface ChannelCustomerManagedS3Args {
        bucket: pulumi.Input<string>;
        keyPrefix?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface ChannelRetentionPeriodArgs {
        numberOfDays?: pulumi.Input<number>;
        unlimited?: pulumi.Input<boolean>;
    }

    export interface ChannelServiceManagedS3Args {
    }

    export interface ChannelStorageArgs {
        customerManagedS3?: pulumi.Input<inputs.iotanalytics.ChannelCustomerManagedS3Args>;
        serviceManagedS3?: pulumi.Input<inputs.iotanalytics.ChannelServiceManagedS3Args>;
    }

    export interface ChannelTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DatasetActionArgs {
        actionName: pulumi.Input<string>;
        containerAction?: pulumi.Input<inputs.iotanalytics.DatasetContainerActionArgs>;
        queryAction?: pulumi.Input<inputs.iotanalytics.DatasetQueryActionArgs>;
    }

    export interface DatasetContainerActionArgs {
        executionRoleArn: pulumi.Input<string>;
        image: pulumi.Input<string>;
        resourceConfiguration: pulumi.Input<inputs.iotanalytics.DatasetResourceConfigurationArgs>;
        variables?: pulumi.Input<pulumi.Input<inputs.iotanalytics.DatasetVariableArgs>[]>;
    }

    export interface DatasetContentDeliveryRuleArgs {
        destination: pulumi.Input<inputs.iotanalytics.DatasetContentDeliveryRuleDestinationArgs>;
        entryName?: pulumi.Input<string>;
    }

    export interface DatasetContentDeliveryRuleDestinationArgs {
        iotEventsDestinationConfiguration?: pulumi.Input<inputs.iotanalytics.DatasetIotEventsDestinationConfigurationArgs>;
        s3DestinationConfiguration?: pulumi.Input<inputs.iotanalytics.DatasetS3DestinationConfigurationArgs>;
    }

    export interface DatasetContentVersionValueArgs {
        datasetName?: pulumi.Input<string>;
    }

    export interface DatasetDeltaTimeArgs {
        offsetSeconds: pulumi.Input<number>;
        timeExpression: pulumi.Input<string>;
    }

    export interface DatasetDeltaTimeSessionWindowConfigurationArgs {
        timeoutInMinutes: pulumi.Input<number>;
    }

    export interface DatasetFilterArgs {
        deltaTime?: pulumi.Input<inputs.iotanalytics.DatasetDeltaTimeArgs>;
    }

    export interface DatasetGlueConfigurationArgs {
        databaseName: pulumi.Input<string>;
        tableName: pulumi.Input<string>;
    }

    export interface DatasetIotEventsDestinationConfigurationArgs {
        inputName: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface DatasetLateDataRuleArgs {
        ruleConfiguration: pulumi.Input<inputs.iotanalytics.DatasetLateDataRuleConfigurationArgs>;
        ruleName?: pulumi.Input<string>;
    }

    export interface DatasetLateDataRuleConfigurationArgs {
        deltaTimeSessionWindowConfiguration?: pulumi.Input<inputs.iotanalytics.DatasetDeltaTimeSessionWindowConfigurationArgs>;
    }

    export interface DatasetOutputFileUriValueArgs {
        fileName?: pulumi.Input<string>;
    }

    export interface DatasetQueryActionArgs {
        filters?: pulumi.Input<pulumi.Input<inputs.iotanalytics.DatasetFilterArgs>[]>;
        sqlQuery: pulumi.Input<string>;
    }

    export interface DatasetResourceConfigurationArgs {
        computeType: pulumi.Input<string>;
        volumeSizeInGB: pulumi.Input<number>;
    }

    export interface DatasetRetentionPeriodArgs {
        numberOfDays: pulumi.Input<number>;
        unlimited: pulumi.Input<boolean>;
    }

    export interface DatasetS3DestinationConfigurationArgs {
        bucket: pulumi.Input<string>;
        glueConfiguration?: pulumi.Input<inputs.iotanalytics.DatasetGlueConfigurationArgs>;
        key: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface DatasetScheduleArgs {
        scheduleExpression: pulumi.Input<string>;
    }

    export interface DatasetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DatasetTriggerArgs {
        schedule?: pulumi.Input<inputs.iotanalytics.DatasetScheduleArgs>;
        triggeringDataset?: pulumi.Input<inputs.iotanalytics.DatasetTriggeringDatasetArgs>;
    }

    export interface DatasetTriggeringDatasetArgs {
        datasetName: pulumi.Input<string>;
    }

    export interface DatasetVariableArgs {
        datasetContentVersionValue?: pulumi.Input<inputs.iotanalytics.DatasetContentVersionValueArgs>;
        doubleValue?: pulumi.Input<number>;
        outputFileUriValue?: pulumi.Input<inputs.iotanalytics.DatasetOutputFileUriValueArgs>;
        stringValue?: pulumi.Input<string>;
        variableName: pulumi.Input<string>;
    }

    export interface DatasetVersioningConfigurationArgs {
        maxVersions?: pulumi.Input<number>;
        unlimited?: pulumi.Input<boolean>;
    }

    export interface DatastoreColumnArgs {
        name: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface DatastoreCustomerManagedS3Args {
        bucket: pulumi.Input<string>;
        keyPrefix?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface DatastoreCustomerManagedS3StorageArgs {
        bucket: pulumi.Input<string>;
        keyPrefix?: pulumi.Input<string>;
    }

    export interface DatastoreFileFormatConfigurationArgs {
        jsonConfiguration?: pulumi.Input<inputs.iotanalytics.DatastoreJsonConfigurationArgs>;
        parquetConfiguration?: pulumi.Input<inputs.iotanalytics.DatastoreParquetConfigurationArgs>;
    }

    export interface DatastoreIotSiteWiseMultiLayerStorageArgs {
        customerManagedS3Storage: pulumi.Input<inputs.iotanalytics.DatastoreCustomerManagedS3StorageArgs>;
    }

    export interface DatastoreJsonConfigurationArgs {
    }

    export interface DatastoreParquetConfigurationArgs {
        schemaDefinition?: pulumi.Input<inputs.iotanalytics.DatastoreSchemaDefinitionArgs>;
    }

    export interface DatastorePartitionArgs {
        partition?: pulumi.Input<inputs.iotanalytics.DatastorePartitionArgs>;
        timestampPartition?: pulumi.Input<inputs.iotanalytics.DatastoreTimestampPartitionArgs>;
    }

    export interface DatastorePartitionsArgs {
        partitions?: pulumi.Input<pulumi.Input<inputs.iotanalytics.DatastorePartitionArgs>[]>;
    }

    export interface DatastoreRetentionPeriodArgs {
        numberOfDays?: pulumi.Input<number>;
        unlimited?: pulumi.Input<boolean>;
    }

    export interface DatastoreSchemaDefinitionArgs {
        columns?: pulumi.Input<pulumi.Input<inputs.iotanalytics.DatastoreColumnArgs>[]>;
    }

    export interface DatastoreServiceManagedS3Args {
    }

    export interface DatastoreStorageArgs {
        customerManagedS3?: pulumi.Input<inputs.iotanalytics.DatastoreCustomerManagedS3Args>;
        iotSiteWiseMultiLayerStorage?: pulumi.Input<inputs.iotanalytics.DatastoreIotSiteWiseMultiLayerStorageArgs>;
        serviceManagedS3?: pulumi.Input<inputs.iotanalytics.DatastoreServiceManagedS3Args>;
    }

    export interface DatastoreTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DatastoreTimestampPartitionArgs {
        attributeName: pulumi.Input<string>;
        timestampFormat?: pulumi.Input<string>;
    }

    export interface PipelineActivityArgs {
        addAttributes?: pulumi.Input<inputs.iotanalytics.PipelineAddAttributesArgs>;
        channel?: pulumi.Input<inputs.iotanalytics.PipelineChannelArgs>;
        datastore?: pulumi.Input<inputs.iotanalytics.PipelineDatastoreArgs>;
        deviceRegistryEnrich?: pulumi.Input<inputs.iotanalytics.PipelineDeviceRegistryEnrichArgs>;
        deviceShadowEnrich?: pulumi.Input<inputs.iotanalytics.PipelineDeviceShadowEnrichArgs>;
        filter?: pulumi.Input<inputs.iotanalytics.PipelineFilterArgs>;
        lambda?: pulumi.Input<inputs.iotanalytics.PipelineLambdaArgs>;
        math?: pulumi.Input<inputs.iotanalytics.PipelineMathArgs>;
        removeAttributes?: pulumi.Input<inputs.iotanalytics.PipelineRemoveAttributesArgs>;
        selectAttributes?: pulumi.Input<inputs.iotanalytics.PipelineSelectAttributesArgs>;
    }

    export interface PipelineAddAttributesArgs {
        attributes?: any;
        name?: pulumi.Input<string>;
        next?: pulumi.Input<string>;
    }

    export interface PipelineChannelArgs {
        channelName?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        next?: pulumi.Input<string>;
    }

    export interface PipelineDatastoreArgs {
        datastoreName?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface PipelineDeviceRegistryEnrichArgs {
        attribute?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        next?: pulumi.Input<string>;
        roleArn?: pulumi.Input<string>;
        thingName?: pulumi.Input<string>;
    }

    export interface PipelineDeviceShadowEnrichArgs {
        attribute?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        next?: pulumi.Input<string>;
        roleArn?: pulumi.Input<string>;
        thingName?: pulumi.Input<string>;
    }

    export interface PipelineFilterArgs {
        filter?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        next?: pulumi.Input<string>;
    }

    export interface PipelineLambdaArgs {
        batchSize?: pulumi.Input<number>;
        lambdaName?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        next?: pulumi.Input<string>;
    }

    export interface PipelineMathArgs {
        attribute?: pulumi.Input<string>;
        math?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        next?: pulumi.Input<string>;
    }

    export interface PipelineRemoveAttributesArgs {
        attributes?: pulumi.Input<pulumi.Input<string>[]>;
        name?: pulumi.Input<string>;
        next?: pulumi.Input<string>;
    }

    export interface PipelineSelectAttributesArgs {
        attributes?: pulumi.Input<pulumi.Input<string>[]>;
        name?: pulumi.Input<string>;
        next?: pulumi.Input<string>;
    }

    export interface PipelineTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace iotcoredeviceadvisor {
    export interface SuiteDefinitionConfigurationPropertiesArgs {
        devicePermissionRoleArn: pulumi.Input<string>;
        devices?: pulumi.Input<pulumi.Input<inputs.iotcoredeviceadvisor.SuiteDefinitionDeviceUnderTestArgs>[]>;
        intendedForQualification?: pulumi.Input<boolean>;
        rootGroup: pulumi.Input<string>;
        suiteDefinitionName?: pulumi.Input<string>;
    }

    export interface SuiteDefinitionDeviceUnderTestArgs {
        certificateArn?: pulumi.Input<string>;
        thingArn?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface SuiteDefinitionTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace iotevents {
    /**
     * The actions to be performed.
     */
    export interface DetectorModelActionArgs {
        clearTimer?: pulumi.Input<inputs.iotevents.DetectorModelClearTimerArgs>;
        dynamoDB?: pulumi.Input<inputs.iotevents.DetectorModelDynamoDBArgs>;
        dynamoDBv2?: pulumi.Input<inputs.iotevents.DetectorModelDynamoDBv2Args>;
        firehose?: pulumi.Input<inputs.iotevents.DetectorModelFirehoseArgs>;
        iotEvents?: pulumi.Input<inputs.iotevents.DetectorModelIotEventsArgs>;
        iotSiteWise?: pulumi.Input<inputs.iotevents.DetectorModelIotSiteWiseArgs>;
        iotTopicPublish?: pulumi.Input<inputs.iotevents.DetectorModelIotTopicPublishArgs>;
        lambda?: pulumi.Input<inputs.iotevents.DetectorModelLambdaArgs>;
        resetTimer?: pulumi.Input<inputs.iotevents.DetectorModelResetTimerArgs>;
        setTimer?: pulumi.Input<inputs.iotevents.DetectorModelSetTimerArgs>;
        setVariable?: pulumi.Input<inputs.iotevents.DetectorModelSetVariableArgs>;
        sns?: pulumi.Input<inputs.iotevents.DetectorModelSnsArgs>;
        sqs?: pulumi.Input<inputs.iotevents.DetectorModelSqsArgs>;
    }

    /**
     * A structure that contains timestamp information. For more information, see [TimeInNanos](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html) in the *AWS IoT SiteWise API Reference*.
     */
    export interface DetectorModelAssetPropertyTimestampArgs {
        /**
         * The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.
         */
        offsetInNanos?: pulumi.Input<string>;
        /**
         * The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.
         */
        timeInSeconds: pulumi.Input<string>;
    }

    /**
     * A structure that contains value information. For more information, see [AssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html) in the *AWS IoT SiteWise API Reference*.
     */
    export interface DetectorModelAssetPropertyValueArgs {
        /**
         * The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.
         */
        quality?: pulumi.Input<string>;
        timestamp?: pulumi.Input<inputs.iotevents.DetectorModelAssetPropertyTimestampArgs>;
        value: pulumi.Input<inputs.iotevents.DetectorModelAssetPropertyVariantArgs>;
    }

    /**
     * A structure that contains an asset property value. For more information, see [Variant](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html) in the *AWS IoT SiteWise API Reference*.
     */
    export interface DetectorModelAssetPropertyVariantArgs {
        /**
         * The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.
         */
        booleanValue?: pulumi.Input<string>;
        /**
         * The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.
         */
        doubleValue?: pulumi.Input<string>;
        /**
         * The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.
         */
        integerValue?: pulumi.Input<string>;
        /**
         * The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.
         */
        stringValue?: pulumi.Input<string>;
    }

    /**
     * Information needed to clear the timer.
     */
    export interface DetectorModelClearTimerArgs {
        timerName: pulumi.Input<string>;
    }

    /**
     * Information that defines how a detector operates.
     */
    export interface DetectorModelDefinitionArgs {
        /**
         * The state that is entered at the creation of each detector (instance).
         */
        initialStateName: pulumi.Input<string>;
        /**
         * Information about the states of the detector.
         */
        states: pulumi.Input<pulumi.Input<inputs.iotevents.DetectorModelStateArgs>[]>;
    }

    /**
     * Writes to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see [Actions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html) in *AWS IoT Events Developer Guide*.
     */
    export interface DetectorModelDynamoDBArgs {
        /**
         * The name of the hash key (also called the partition key).
         */
        hashKeyField: pulumi.Input<string>;
        /**
         * The data type for the hash key (also called the partition key). You can specify the following values:
         *
         * * `STRING` - The hash key is a string.
         *
         * * `NUMBER` - The hash key is a number.
         *
         * If you don't specify `hashKeyType`, the default value is `STRING`.
         */
        hashKeyType?: pulumi.Input<string>;
        /**
         * The value of the hash key (also called the partition key).
         */
        hashKeyValue: pulumi.Input<string>;
        /**
         * The type of operation to perform. You can specify the following values:
         *
         * * `INSERT` - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.
         *
         * * `UPDATE` - Update an existing item of the DynamoDB table with new data. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
         *
         * * `DELETE` - Delete an existing item of the DynamoDB table. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
         *
         * If you don't specify this parameter, AWS IoT Events triggers the `INSERT` operation.
         */
        operation?: pulumi.Input<string>;
        payload?: pulumi.Input<inputs.iotevents.DetectorModelPayloadArgs>;
        /**
         * The name of the DynamoDB column that receives the action payload.
         *
         * If you don't specify this parameter, the name of the DynamoDB column is `payload`.
         */
        payloadField?: pulumi.Input<string>;
        /**
         * The name of the range key (also called the sort key).
         */
        rangeKeyField?: pulumi.Input<string>;
        /**
         * The data type for the range key (also called the sort key), You can specify the following values:
         *
         * * `STRING` - The range key is a string.
         *
         * * `NUMBER` - The range key is number.
         *
         * If you don't specify `rangeKeyField`, the default value is `STRING`.
         */
        rangeKeyType?: pulumi.Input<string>;
        /**
         * The value of the range key (also called the sort key).
         */
        rangeKeyValue?: pulumi.Input<string>;
        /**
         * The name of the DynamoDB table.
         */
        tableName: pulumi.Input<string>;
    }

    /**
     * Defines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.
     *
     * You can use expressions for parameters that are strings. For more information, see [Expressions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html) in the *AWS IoT Events Developer Guide*.
     */
    export interface DetectorModelDynamoDBv2Args {
        payload?: pulumi.Input<inputs.iotevents.DetectorModelPayloadArgs>;
        /**
         * The name of the DynamoDB table.
         */
        tableName: pulumi.Input<string>;
    }

    /**
     * Specifies the `actions` to be performed when the `condition` evaluates to `TRUE`.
     */
    export interface DetectorModelEventArgs {
        /**
         * The actions to be performed.
         */
        actions?: pulumi.Input<pulumi.Input<inputs.iotevents.DetectorModelActionArgs>[]>;
        /**
         * The Boolean expression that, when `TRUE`, causes the `actions` to be performed. If not present, the `actions` are performed (=`TRUE`). If the expression result is not a `Boolean` value, the `actions` are not performed (=`FALSE`).
         */
        condition?: pulumi.Input<string>;
        /**
         * The name of the event.
         */
        eventName: pulumi.Input<string>;
    }

    /**
     * Sends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.
     */
    export interface DetectorModelFirehoseArgs {
        /**
         * The name of the Kinesis Data Firehose delivery stream where the data is written.
         */
        deliveryStreamName: pulumi.Input<string>;
        payload?: pulumi.Input<inputs.iotevents.DetectorModelPayloadArgs>;
        /**
         * A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
         */
        separator?: pulumi.Input<string>;
    }

    /**
     * Sends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.
     */
    export interface DetectorModelIotEventsArgs {
        /**
         * The name of the AWS IoT Events input where the data is sent.
         */
        inputName: pulumi.Input<string>;
        payload?: pulumi.Input<inputs.iotevents.DetectorModelPayloadArgs>;
    }

    /**
     * Sends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.
     */
    export interface DetectorModelIotSiteWiseArgs {
        /**
         * The ID of the asset that has the specified property. You can specify an expression.
         */
        assetId?: pulumi.Input<string>;
        /**
         * A unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier. You can also specify an expression.
         */
        entryId?: pulumi.Input<string>;
        /**
         * The alias of the asset property. You can also specify an expression.
         */
        propertyAlias?: pulumi.Input<string>;
        /**
         * The ID of the asset property. You can specify an expression.
         */
        propertyId?: pulumi.Input<string>;
        propertyValue: pulumi.Input<inputs.iotevents.DetectorModelAssetPropertyValueArgs>;
    }

    /**
     * Information required to publish the MQTT message through the AWS IoT message broker.
     */
    export interface DetectorModelIotTopicPublishArgs {
        /**
         * The MQTT topic of the message. You can use a string expression that includes variables (`$variable.<variable-name>`) and input values (`$input.<input-name>.<path-to-datum>`) as the topic string.
         */
        mqttTopic: pulumi.Input<string>;
        payload?: pulumi.Input<inputs.iotevents.DetectorModelPayloadArgs>;
    }

    export interface DetectorModelLambdaArgs {
        /**
         * The ARN of the Lambda function that is executed.
         */
        functionArn: pulumi.Input<string>;
        payload?: pulumi.Input<inputs.iotevents.DetectorModelPayloadArgs>;
    }

    /**
     * When entering this state, perform these `actions` if the `condition` is `TRUE`.
     */
    export interface DetectorModelOnEnterArgs {
        /**
         * Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.
         */
        events?: pulumi.Input<pulumi.Input<inputs.iotevents.DetectorModelEventArgs>[]>;
    }

    /**
     * When exiting this state, perform these `actions` if the specified `condition` is `TRUE`.
     */
    export interface DetectorModelOnExitArgs {
        /**
         * Specifies the `actions` that are performed when the state is exited and the `condition` is `TRUE`.
         */
        events?: pulumi.Input<pulumi.Input<inputs.iotevents.DetectorModelEventArgs>[]>;
    }

    /**
     * When an input is received and the `condition` is `TRUE`, perform the specified `actions`.
     */
    export interface DetectorModelOnInputArgs {
        /**
         * Specifies the `actions` performed when the `condition` evaluates to `TRUE`.
         */
        events?: pulumi.Input<pulumi.Input<inputs.iotevents.DetectorModelEventArgs>[]>;
        /**
         * Specifies the `actions` performed, and the next `state` entered, when a `condition` evaluates to `TRUE`.
         */
        transitionEvents?: pulumi.Input<pulumi.Input<inputs.iotevents.DetectorModelTransitionEventArgs>[]>;
    }

    /**
     * Information needed to configure the payload.
     *
     * By default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use `contentExpression`.
     */
    export interface DetectorModelPayloadArgs {
        /**
         * The content of the payload. You can use a string expression that includes quoted strings (`'<string>'`), variables (`$variable.<variable-name>`), input values (`$input.<input-name>.<path-to-datum>`), string concatenations, and quoted strings that contain `${}` as the content. The recommended maximum size of a content expression is 1 KB.
         */
        contentExpression: pulumi.Input<string>;
        /**
         * The value of the payload type can be either `STRING` or `JSON`.
         */
        type: pulumi.Input<string>;
    }

    /**
     * Information required to reset the timer. The timer is reset to the previously evaluated result of the duration. The duration expression isn't reevaluated when you reset the timer.
     */
    export interface DetectorModelResetTimerArgs {
        /**
         * The name of the timer to reset.
         */
        timerName: pulumi.Input<string>;
    }

    /**
     * Information needed to set the timer.
     */
    export interface DetectorModelSetTimerArgs {
        /**
         * The duration of the timer, in seconds. You can use a string expression that includes numbers, variables (`$variable.<variable-name>`), and input values (`$input.<input-name>.<path-to-datum>`) as the duration. The range of the duration is `1-31622400` seconds. To ensure accuracy, the minimum duration is `60` seconds. The evaluated result of the duration is rounded down to the nearest whole number.
         */
        durationExpression?: pulumi.Input<string>;
        /**
         * The number of seconds until the timer expires. The minimum value is `60` seconds to ensure accuracy. The maximum value is `31622400` seconds.
         */
        seconds?: pulumi.Input<number>;
        /**
         * The name of the timer.
         */
        timerName: pulumi.Input<string>;
    }

    /**
     * Information about the variable and its new value.
     */
    export interface DetectorModelSetVariableArgs {
        /**
         * The new value of the variable.
         */
        value: pulumi.Input<string>;
        /**
         * The name of the variable.
         */
        variableName: pulumi.Input<string>;
    }

    /**
     * Information required to publish the Amazon SNS message.
     */
    export interface DetectorModelSnsArgs {
        payload?: pulumi.Input<inputs.iotevents.DetectorModelPayloadArgs>;
        /**
         * The ARN of the Amazon SNS target where the message is sent.
         */
        targetArn: pulumi.Input<string>;
    }

    export interface DetectorModelSqsArgs {
        payload?: pulumi.Input<inputs.iotevents.DetectorModelPayloadArgs>;
        /**
         * The URL of the SQS queue where the data is written.
         */
        queueUrl: pulumi.Input<string>;
        /**
         * Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`.
         */
        useBase64?: pulumi.Input<boolean>;
    }

    /**
     * Information that defines a state of a detector.
     */
    export interface DetectorModelStateArgs {
        onEnter?: pulumi.Input<inputs.iotevents.DetectorModelOnEnterArgs>;
        onExit?: pulumi.Input<inputs.iotevents.DetectorModelOnExitArgs>;
        onInput?: pulumi.Input<inputs.iotevents.DetectorModelOnInputArgs>;
        /**
         * The name of the state.
         */
        stateName: pulumi.Input<string>;
    }

    /**
     * Tags to be applied to Input.
     */
    export interface DetectorModelTagArgs {
        /**
         * Key of the Tag.
         */
        key: pulumi.Input<string>;
        /**
         * Value of the Tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Specifies the `actions `performed and the next `state` entered when a `condition` evaluates to `TRUE`.
     */
    export interface DetectorModelTransitionEventArgs {
        /**
         * The actions to be performed.
         */
        actions?: pulumi.Input<pulumi.Input<inputs.iotevents.DetectorModelActionArgs>[]>;
        /**
         * A Boolean expression that when `TRUE` causes the `actions` to be performed and the `nextState` to be entered.
         */
        condition: pulumi.Input<string>;
        /**
         * The name of the event.
         */
        eventName: pulumi.Input<string>;
        /**
         * The next state to enter.
         */
        nextState: pulumi.Input<string>;
    }

    /**
     * The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
     */
    export interface InputAttributeArgs {
        /**
         * An expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (`BatchPutMessage`). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the `condition` expressions used by detectors.
         *
         * _Syntax_: `<field-name>.<field-name>...`
         */
        jsonPath: pulumi.Input<string>;
    }

    /**
     * The definition of the input.
     */
    export interface InputDefinitionArgs {
        /**
         * The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
         */
        attributes: pulumi.Input<pulumi.Input<inputs.iotevents.InputAttributeArgs>[]>;
    }

    /**
     * Tags to be applied to Input.
     */
    export interface InputTagArgs {
        /**
         * Key of the Tag.
         */
        key: pulumi.Input<string>;
        /**
         * Value of the Tag.
         */
        value: pulumi.Input<string>;
    }

}

export namespace iotfleethub {
    /**
     * To add or update tag, provide both key and value. To delete tag, provide only tag key to be deleted.
     */
    export interface ApplicationTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace iotsitewise {
    /**
     * Contains information for an IAM role identity in an access policy.
     */
    export interface AccessPolicyIamRoleArgs {
        /**
         * The ARN of the IAM role.
         */
        arn?: pulumi.Input<string>;
    }

    /**
     * Contains information for an IAM user identity in an access policy.
     */
    export interface AccessPolicyIamUserArgs {
        /**
         * The ARN of the IAM user.
         */
        arn?: pulumi.Input<string>;
    }

    /**
     * The identity for this access policy. Choose either an SSO user or group or an IAM user or role.
     */
    export interface AccessPolicyIdentityArgs {
        iamRole?: pulumi.Input<inputs.iotsitewise.AccessPolicyIamRoleArgs>;
        iamUser?: pulumi.Input<inputs.iotsitewise.AccessPolicyIamUserArgs>;
        user?: pulumi.Input<inputs.iotsitewise.AccessPolicyUserArgs>;
    }

    /**
     * A portal resource.
     */
    export interface AccessPolicyPortalArgs {
        /**
         * The ID of the portal.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * A project resource.
     */
    export interface AccessPolicyProjectArgs {
        /**
         * The ID of the project.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both.
     */
    export interface AccessPolicyResourceArgs {
        portal?: pulumi.Input<inputs.iotsitewise.AccessPolicyPortalArgs>;
        project?: pulumi.Input<inputs.iotsitewise.AccessPolicyProjectArgs>;
    }

    /**
     * Contains information for a user identity in an access policy.
     */
    export interface AccessPolicyUserArgs {
        /**
         * The AWS SSO ID of the user.
         */
        id?: pulumi.Input<string>;
    }

    /**
     * Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range.
     */
    export interface AlarmsPropertiesArgs {
        /**
         * The ARN of the IAM role that allows the alarm to perform actions and access AWS resources and services, such as AWS IoT Events.
         */
        alarmRoleArn?: pulumi.Input<string>;
        /**
         * The ARN of the AWS Lambda function that manages alarm notifications. For more information, see Managing alarm notifications in the AWS IoT Events Developer Guide.
         */
        notificationLambdaArn?: pulumi.Input<string>;
    }

    /**
     * A hierarchy specifies allowed parent/child asset relationships.
     */
    export interface AssetHierarchyArgs {
        /**
         * The ID of the child asset to be associated.
         */
        childAssetId: pulumi.Input<string>;
        /**
         * The LogicalID of a hierarchy in the parent asset's model.
         */
        logicalId: pulumi.Input<string>;
    }

    export interface AssetModelAttributeArgs {
        defaultValue?: pulumi.Input<string>;
    }

    /**
     * Contains a composite model definition in an asset model. This composite model definition is applied to all assets created from the asset model.
     */
    export interface AssetModelCompositeModelArgs {
        /**
         * The property definitions of the asset model. You can specify up to 200 properties per asset model.
         */
        compositeModelProperties?: pulumi.Input<pulumi.Input<inputs.iotsitewise.AssetModelPropertyArgs>[]>;
        /**
         * A description for the asset composite model.
         */
        description?: pulumi.Input<string>;
        /**
         * A unique, friendly name for the asset composite model.
         */
        name: pulumi.Input<string>;
        /**
         * The type of the composite model. For alarm composite models, this type is AWS/ALARM
         */
        type: pulumi.Input<string>;
    }

    export interface AssetModelExpressionVariableArgs {
        /**
         * The friendly name of the variable to be used in the expression.
         */
        name: pulumi.Input<string>;
        /**
         * The variable that identifies an asset property from which to use values.
         */
        value: pulumi.Input<inputs.iotsitewise.AssetModelVariableValueArgs>;
    }

    /**
     * Contains information about an asset model hierarchy.
     */
    export interface AssetModelHierarchyArgs {
        /**
         * The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model.
         */
        childAssetModelId: pulumi.Input<string>;
        /**
         * Customer provided ID for hierarchy.
         */
        logicalId: pulumi.Input<string>;
        /**
         * The name of the asset model hierarchy.
         */
        name: pulumi.Input<string>;
    }

    export interface AssetModelMetricArgs {
        /**
         * The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.
         */
        expression: pulumi.Input<string>;
        /**
         * The list of variables used in the expression.
         */
        variables: pulumi.Input<pulumi.Input<inputs.iotsitewise.AssetModelExpressionVariableArgs>[]>;
        /**
         * The window (time interval) over which AWS IoT SiteWise computes the metric's aggregation expression
         */
        window: pulumi.Input<inputs.iotsitewise.AssetModelMetricWindowArgs>;
    }

    /**
     * Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).
     */
    export interface AssetModelMetricWindowArgs {
        tumbling?: pulumi.Input<inputs.iotsitewise.AssetModelTumblingWindowArgs>;
    }

    /**
     * Contains information about an asset model property.
     */
    export interface AssetModelPropertyArgs {
        /**
         * The data type of the asset model property.
         */
        dataType: pulumi.Input<enums.iotsitewise.AssetModelDataType>;
        /**
         * The data type of the structure for this property.
         */
        dataTypeSpec?: pulumi.Input<enums.iotsitewise.AssetModelDataTypeSpec>;
        /**
         * Customer provided ID for property.
         */
        logicalId: pulumi.Input<string>;
        /**
         * The name of the asset model property.
         */
        name: pulumi.Input<string>;
        /**
         * The property type
         */
        type: pulumi.Input<inputs.iotsitewise.AssetModelPropertyTypeArgs>;
        /**
         * The unit of the asset model property, such as Newtons or RPM.
         */
        unit?: pulumi.Input<string>;
    }

    /**
     * Contains a property type, which can be one of attribute, measurement, metric, or transform.
     */
    export interface AssetModelPropertyTypeArgs {
        attribute?: pulumi.Input<inputs.iotsitewise.AssetModelAttributeArgs>;
        metric?: pulumi.Input<inputs.iotsitewise.AssetModelMetricArgs>;
        transform?: pulumi.Input<inputs.iotsitewise.AssetModelTransformArgs>;
        typeName: pulumi.Input<enums.iotsitewise.AssetModelTypeName>;
    }

    export interface AssetModelTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface AssetModelTransformArgs {
        /**
         * The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.
         */
        expression: pulumi.Input<string>;
        /**
         * The list of variables used in the expression.
         */
        variables: pulumi.Input<pulumi.Input<inputs.iotsitewise.AssetModelExpressionVariableArgs>[]>;
    }

    /**
     * Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.
     */
    export interface AssetModelTumblingWindowArgs {
        interval: pulumi.Input<string>;
        offset?: pulumi.Input<string>;
    }

    export interface AssetModelVariableValueArgs {
        hierarchyLogicalId?: pulumi.Input<string>;
        propertyLogicalId: pulumi.Input<string>;
    }

    /**
     * The asset property's definition, alias, and notification state.
     */
    export interface AssetPropertyArgs {
        /**
         * The property alias that identifies the property.
         */
        alias?: pulumi.Input<string>;
        /**
         * Customer provided ID for property.
         */
        logicalId: pulumi.Input<string>;
        /**
         * The MQTT notification state (ENABLED or DISABLED) for this asset property.
         */
        notificationState?: pulumi.Input<enums.iotsitewise.AssetPropertyNotificationState>;
    }

    export interface AssetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * To add or update tag, provide both key and value. To delete tag, provide only tag key to be deleted
     */
    export interface DashboardTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Contains a summary of a gateway capability configuration.
     */
    export interface GatewayCapabilitySummaryArgs {
        capabilityConfiguration?: pulumi.Input<string>;
        capabilityNamespace: pulumi.Input<string>;
    }

    /**
     * Contains the ARN of AWS IoT Greengrass Group that the gateway runs on.
     */
    export interface GatewayGreengrassArgs {
        /**
         * The ARN of the Greengrass group.
         */
        groupArn: pulumi.Input<string>;
    }

    /**
     * Contains a gateway's platform information.
     */
    export interface GatewayPlatformArgs {
        /**
         * A gateway that runs on AWS IoT Greengrass.
         */
        greengrass: pulumi.Input<inputs.iotsitewise.GatewayGreengrassArgs>;
    }

    /**
     * To add or update tag, provide both key and value. To delete tag, provide only tag key to be deleted
     */
    export interface GatewayTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * To add or update tag, provide both key and value. To delete tag, provide only tag key to be deleted.
     */
    export interface PortalTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * To add or update tag, provide both key and value. To delete tag, provide only tag key to be deleted
     */
    export interface ProjectTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

}

export namespace iotthingsgraph {
    export interface FlowTemplateDefinitionDocumentArgs {
        language: pulumi.Input<string>;
        text: pulumi.Input<string>;
    }
}

export namespace iotwireless {
    export interface DestinationTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface DeviceProfileLoRaWANDeviceProfileArgs {
        classBTimeout?: pulumi.Input<number>;
        classCTimeout?: pulumi.Input<number>;
        macVersion?: pulumi.Input<string>;
        maxDutyCycle?: pulumi.Input<number>;
        maxEirp?: pulumi.Input<number>;
        pingSlotDr?: pulumi.Input<number>;
        pingSlotFreq?: pulumi.Input<number>;
        pingSlotPeriod?: pulumi.Input<number>;
        regParamsRevision?: pulumi.Input<string>;
        rfRegion?: pulumi.Input<string>;
        supports32BitFCnt?: pulumi.Input<boolean>;
        supportsClassB?: pulumi.Input<boolean>;
        supportsClassC?: pulumi.Input<boolean>;
        supportsJoin?: pulumi.Input<boolean>;
    }

    export interface DeviceProfileTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface FuotaTaskLoRaWANArgs {
        /**
         * FUOTA task LoRaWAN RF region
         */
        rfRegion: pulumi.Input<string>;
        /**
         * FUOTA task LoRaWAN start time
         */
        startTime?: pulumi.Input<string>;
    }

    export interface FuotaTaskTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface MulticastGroupLoRaWANArgs {
        /**
         * Multicast group LoRaWAN DL Class
         */
        dlClass: pulumi.Input<string>;
        /**
         * Multicast group number of devices in group. Returned after successful read.
         */
        numberOfDevicesInGroup?: pulumi.Input<number>;
        /**
         * Multicast group number of devices requested. Returned after successful read.
         */
        numberOfDevicesRequested?: pulumi.Input<number>;
        /**
         * Multicast group LoRaWAN RF region
         */
        rfRegion: pulumi.Input<string>;
    }

    export interface MulticastGroupTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface PartnerAccountSidewalkAccountInfoArgs {
        appServerPrivateKey: pulumi.Input<string>;
    }

    export interface PartnerAccountSidewalkUpdateAccountArgs {
        appServerPrivateKey?: pulumi.Input<string>;
    }

    export interface PartnerAccountTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ServiceProfileLoRaWANServiceProfileArgs {
        addGwMetadata?: pulumi.Input<boolean>;
        channelMask?: pulumi.Input<string>;
        devStatusReqFreq?: pulumi.Input<number>;
        dlBucketSize?: pulumi.Input<number>;
        dlRate?: pulumi.Input<number>;
        dlRatePolicy?: pulumi.Input<string>;
        drMax?: pulumi.Input<number>;
        drMin?: pulumi.Input<number>;
        hrAllowed?: pulumi.Input<boolean>;
        minGwDiversity?: pulumi.Input<number>;
        nwkGeoLoc?: pulumi.Input<boolean>;
        prAllowed?: pulumi.Input<boolean>;
        raAllowed?: pulumi.Input<boolean>;
        reportDevStatusBattery?: pulumi.Input<boolean>;
        reportDevStatusMargin?: pulumi.Input<boolean>;
        targetPer?: pulumi.Input<number>;
        ulBucketSize?: pulumi.Input<number>;
        ulRate?: pulumi.Input<number>;
        ulRatePolicy?: pulumi.Input<string>;
    }

    export interface ServiceProfileTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface TaskDefinitionLoRaWANGatewayVersionArgs {
        model?: pulumi.Input<string>;
        packageVersion?: pulumi.Input<string>;
        station?: pulumi.Input<string>;
    }

    export interface TaskDefinitionLoRaWANUpdateGatewayTaskCreateArgs {
        currentVersion?: pulumi.Input<inputs.iotwireless.TaskDefinitionLoRaWANGatewayVersionArgs>;
        sigKeyCrc?: pulumi.Input<number>;
        updateSignature?: pulumi.Input<string>;
        updateVersion?: pulumi.Input<inputs.iotwireless.TaskDefinitionLoRaWANGatewayVersionArgs>;
    }

    export interface TaskDefinitionLoRaWANUpdateGatewayTaskEntryArgs {
        currentVersion?: pulumi.Input<inputs.iotwireless.TaskDefinitionLoRaWANGatewayVersionArgs>;
        updateVersion?: pulumi.Input<inputs.iotwireless.TaskDefinitionLoRaWANGatewayVersionArgs>;
    }

    export interface TaskDefinitionTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface TaskDefinitionUpdateWirelessGatewayTaskCreateArgs {
        loRaWAN?: pulumi.Input<inputs.iotwireless.TaskDefinitionLoRaWANUpdateGatewayTaskCreateArgs>;
        updateDataRole?: pulumi.Input<string>;
        updateDataSource?: pulumi.Input<string>;
    }

    export interface WirelessDeviceAbpV10xArgs {
        devAddr: pulumi.Input<string>;
        sessionKeys: pulumi.Input<inputs.iotwireless.WirelessDeviceSessionKeysAbpV10xArgs>;
    }

    export interface WirelessDeviceAbpV11Args {
        devAddr: pulumi.Input<string>;
        sessionKeys: pulumi.Input<inputs.iotwireless.WirelessDeviceSessionKeysAbpV11Args>;
    }

    export interface WirelessDeviceLoRaWANDeviceArgs {
        abpV10x?: pulumi.Input<inputs.iotwireless.WirelessDeviceAbpV10xArgs>;
        abpV11?: pulumi.Input<inputs.iotwireless.WirelessDeviceAbpV11Args>;
        devEui?: pulumi.Input<string>;
        deviceProfileId?: pulumi.Input<string>;
        otaaV10x?: pulumi.Input<inputs.iotwireless.WirelessDeviceOtaaV10xArgs>;
        otaaV11?: pulumi.Input<inputs.iotwireless.WirelessDeviceOtaaV11Args>;
        serviceProfileId?: pulumi.Input<string>;
    }

    export interface WirelessDeviceOtaaV10xArgs {
        appEui: pulumi.Input<string>;
        appKey: pulumi.Input<string>;
    }

    export interface WirelessDeviceOtaaV11Args {
        appKey: pulumi.Input<string>;
        joinEui: pulumi.Input<string>;
        nwkKey: pulumi.Input<string>;
    }

    export interface WirelessDeviceSessionKeysAbpV10xArgs {
        appSKey: pulumi.Input<string>;
        nwkSKey: pulumi.Input<string>;
    }

    export interface WirelessDeviceSessionKeysAbpV11Args {
        appSKey: pulumi.Input<string>;
        fNwkSIntKey: pulumi.Input<string>;
        nwkSEncKey: pulumi.Input<string>;
        sNwkSIntKey: pulumi.Input<string>;
    }

    export interface WirelessDeviceTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface WirelessGatewayLoRaWANGatewayArgs {
        gatewayEui: pulumi.Input<string>;
        rfRegion: pulumi.Input<string>;
    }

    export interface WirelessGatewayTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

}

export namespace ivs {
    export interface ChannelTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface PlaybackKeyPairTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Recording Destination Configuration.
     */
    export interface RecordingConfigurationDestinationConfigurationArgs {
        s3: pulumi.Input<inputs.ivs.RecordingConfigurationS3DestinationConfigurationArgs>;
    }

    /**
     * Recording S3 Destination Configuration.
     */
    export interface RecordingConfigurationS3DestinationConfigurationArgs {
        bucketName: pulumi.Input<string>;
    }

    export interface RecordingConfigurationTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface StreamKeyTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace kendra {
    export interface DataSourceAccessControlListConfigurationArgs {
        keyPath?: pulumi.Input<string>;
    }

    export interface DataSourceAclConfigurationArgs {
        allowedGroupsColumnName: pulumi.Input<string>;
    }

    export interface DataSourceColumnConfigurationArgs {
        changeDetectingColumns: pulumi.Input<pulumi.Input<string>[]>;
        documentDataColumnName: pulumi.Input<string>;
        documentIdColumnName: pulumi.Input<string>;
        documentTitleColumnName?: pulumi.Input<string>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
    }

    export interface DataSourceConfigurationArgs {
        confluenceConfiguration?: pulumi.Input<inputs.kendra.DataSourceConfluenceConfigurationArgs>;
        databaseConfiguration?: pulumi.Input<inputs.kendra.DataSourceDatabaseConfigurationArgs>;
        googleDriveConfiguration?: pulumi.Input<inputs.kendra.DataSourceGoogleDriveConfigurationArgs>;
        oneDriveConfiguration?: pulumi.Input<inputs.kendra.DataSourceOneDriveConfigurationArgs>;
        s3Configuration?: pulumi.Input<inputs.kendra.DataSourceS3DataSourceConfigurationArgs>;
        salesforceConfiguration?: pulumi.Input<inputs.kendra.DataSourceSalesforceConfigurationArgs>;
        serviceNowConfiguration?: pulumi.Input<inputs.kendra.DataSourceServiceNowConfigurationArgs>;
        sharePointConfiguration?: pulumi.Input<inputs.kendra.DataSourceSharePointConfigurationArgs>;
        webCrawlerConfiguration?: pulumi.Input<inputs.kendra.DataSourceWebCrawlerConfigurationArgs>;
        workDocsConfiguration?: pulumi.Input<inputs.kendra.DataSourceWorkDocsConfigurationArgs>;
    }

    export interface DataSourceConfluenceAttachmentConfigurationArgs {
        attachmentFieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceConfluenceAttachmentToIndexFieldMappingArgs>[]>;
        crawlAttachments?: pulumi.Input<boolean>;
    }

    export interface DataSourceConfluenceAttachmentToIndexFieldMappingArgs {
        dataSourceFieldName: pulumi.Input<enums.kendra.DataSourceConfluenceAttachmentFieldName>;
        dateFieldFormat?: pulumi.Input<string>;
        indexFieldName: pulumi.Input<string>;
    }

    export interface DataSourceConfluenceBlogConfigurationArgs {
        blogFieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceConfluenceBlogToIndexFieldMappingArgs>[]>;
    }

    export interface DataSourceConfluenceBlogToIndexFieldMappingArgs {
        dataSourceFieldName: pulumi.Input<enums.kendra.DataSourceConfluenceBlogFieldName>;
        dateFieldFormat?: pulumi.Input<string>;
        indexFieldName: pulumi.Input<string>;
    }

    export interface DataSourceConfluenceConfigurationArgs {
        attachmentConfiguration?: pulumi.Input<inputs.kendra.DataSourceConfluenceAttachmentConfigurationArgs>;
        blogConfiguration?: pulumi.Input<inputs.kendra.DataSourceConfluenceBlogConfigurationArgs>;
        exclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        inclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        pageConfiguration?: pulumi.Input<inputs.kendra.DataSourceConfluencePageConfigurationArgs>;
        secretArn: pulumi.Input<string>;
        serverUrl: pulumi.Input<string>;
        spaceConfiguration?: pulumi.Input<inputs.kendra.DataSourceConfluenceSpaceConfigurationArgs>;
        version: pulumi.Input<enums.kendra.DataSourceConfluenceVersion>;
        vpcConfiguration?: pulumi.Input<inputs.kendra.DataSourceVpcConfigurationArgs>;
    }

    export interface DataSourceConfluencePageConfigurationArgs {
        pageFieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceConfluencePageToIndexFieldMappingArgs>[]>;
    }

    export interface DataSourceConfluencePageToIndexFieldMappingArgs {
        dataSourceFieldName: pulumi.Input<enums.kendra.DataSourceConfluencePageFieldName>;
        dateFieldFormat?: pulumi.Input<string>;
        indexFieldName: pulumi.Input<string>;
    }

    export interface DataSourceConfluenceSpaceConfigurationArgs {
        crawlArchivedSpaces?: pulumi.Input<boolean>;
        crawlPersonalSpaces?: pulumi.Input<boolean>;
        excludeSpaces?: pulumi.Input<pulumi.Input<string>[]>;
        includeSpaces?: pulumi.Input<pulumi.Input<string>[]>;
        spaceFieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceConfluenceSpaceToIndexFieldMappingArgs>[]>;
    }

    export interface DataSourceConfluenceSpaceToIndexFieldMappingArgs {
        dataSourceFieldName: pulumi.Input<enums.kendra.DataSourceConfluenceSpaceFieldName>;
        dateFieldFormat?: pulumi.Input<string>;
        indexFieldName: pulumi.Input<string>;
    }

    export interface DataSourceConnectionConfigurationArgs {
        databaseHost: pulumi.Input<string>;
        databaseName: pulumi.Input<string>;
        databasePort: pulumi.Input<number>;
        secretArn: pulumi.Input<string>;
        tableName: pulumi.Input<string>;
    }

    export interface DataSourceDatabaseConfigurationArgs {
        aclConfiguration?: pulumi.Input<inputs.kendra.DataSourceAclConfigurationArgs>;
        columnConfiguration: pulumi.Input<inputs.kendra.DataSourceColumnConfigurationArgs>;
        connectionConfiguration: pulumi.Input<inputs.kendra.DataSourceConnectionConfigurationArgs>;
        databaseEngineType: pulumi.Input<enums.kendra.DataSourceDatabaseEngineType>;
        sqlConfiguration?: pulumi.Input<inputs.kendra.DataSourceSqlConfigurationArgs>;
        vpcConfiguration?: pulumi.Input<inputs.kendra.DataSourceVpcConfigurationArgs>;
    }

    export interface DataSourceDocumentsMetadataConfigurationArgs {
        s3Prefix?: pulumi.Input<string>;
    }

    export interface DataSourceGoogleDriveConfigurationArgs {
        excludeMimeTypes?: pulumi.Input<pulumi.Input<string>[]>;
        excludeSharedDrives?: pulumi.Input<pulumi.Input<string>[]>;
        excludeUserAccounts?: pulumi.Input<pulumi.Input<string>[]>;
        exclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
        inclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        secretArn: pulumi.Input<string>;
    }

    export interface DataSourceOneDriveConfigurationArgs {
        disableLocalGroups?: pulumi.Input<boolean>;
        exclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
        inclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        oneDriveUsers: pulumi.Input<inputs.kendra.DataSourceOneDriveUsersArgs>;
        secretArn: pulumi.Input<string>;
        tenantDomain: pulumi.Input<string>;
    }

    export interface DataSourceOneDriveUsersArgs {
        oneDriveUserList?: pulumi.Input<pulumi.Input<string>[]>;
        oneDriveUserS3Path?: pulumi.Input<inputs.kendra.DataSourceS3PathArgs>;
    }

    export interface DataSourceProxyConfigurationArgs {
        credentials?: pulumi.Input<string>;
        host: pulumi.Input<string>;
        port: pulumi.Input<number>;
    }

    /**
     * S3 data source configuration
     */
    export interface DataSourceS3DataSourceConfigurationArgs {
        accessControlListConfiguration?: pulumi.Input<inputs.kendra.DataSourceAccessControlListConfigurationArgs>;
        bucketName: pulumi.Input<string>;
        documentsMetadataConfiguration?: pulumi.Input<inputs.kendra.DataSourceDocumentsMetadataConfigurationArgs>;
        exclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        inclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        inclusionPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DataSourceS3PathArgs {
        bucket: pulumi.Input<string>;
        key: pulumi.Input<string>;
    }

    export interface DataSourceSalesforceChatterFeedConfigurationArgs {
        documentDataFieldName: pulumi.Input<string>;
        documentTitleFieldName?: pulumi.Input<string>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
        includeFilterTypes?: pulumi.Input<pulumi.Input<enums.kendra.DataSourceSalesforceChatterFeedIncludeFilterType>[]>;
    }

    export interface DataSourceSalesforceConfigurationArgs {
        chatterFeedConfiguration?: pulumi.Input<inputs.kendra.DataSourceSalesforceChatterFeedConfigurationArgs>;
        crawlAttachments?: pulumi.Input<boolean>;
        excludeAttachmentFilePatterns?: pulumi.Input<pulumi.Input<string>[]>;
        includeAttachmentFilePatterns?: pulumi.Input<pulumi.Input<string>[]>;
        knowledgeArticleConfiguration?: pulumi.Input<inputs.kendra.DataSourceSalesforceKnowledgeArticleConfigurationArgs>;
        secretArn: pulumi.Input<string>;
        serverUrl: pulumi.Input<string>;
        standardObjectAttachmentConfiguration?: pulumi.Input<inputs.kendra.DataSourceSalesforceStandardObjectAttachmentConfigurationArgs>;
        standardObjectConfigurations?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceSalesforceStandardObjectConfigurationArgs>[]>;
    }

    export interface DataSourceSalesforceCustomKnowledgeArticleTypeConfigurationArgs {
        documentDataFieldName: pulumi.Input<string>;
        documentTitleFieldName?: pulumi.Input<string>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
        name: pulumi.Input<string>;
    }

    export interface DataSourceSalesforceKnowledgeArticleConfigurationArgs {
        customKnowledgeArticleTypeConfigurations?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceSalesforceCustomKnowledgeArticleTypeConfigurationArgs>[]>;
        includedStates: pulumi.Input<pulumi.Input<enums.kendra.DataSourceSalesforceKnowledgeArticleState>[]>;
        standardKnowledgeArticleTypeConfiguration?: pulumi.Input<inputs.kendra.DataSourceSalesforceStandardKnowledgeArticleTypeConfigurationArgs>;
    }

    export interface DataSourceSalesforceStandardKnowledgeArticleTypeConfigurationArgs {
        documentDataFieldName: pulumi.Input<string>;
        documentTitleFieldName?: pulumi.Input<string>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
    }

    export interface DataSourceSalesforceStandardObjectAttachmentConfigurationArgs {
        documentTitleFieldName?: pulumi.Input<string>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
    }

    export interface DataSourceSalesforceStandardObjectConfigurationArgs {
        documentDataFieldName: pulumi.Input<string>;
        documentTitleFieldName?: pulumi.Input<string>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
        name: pulumi.Input<enums.kendra.DataSourceSalesforceStandardObjectName>;
    }

    export interface DataSourceServiceNowConfigurationArgs {
        authenticationType?: pulumi.Input<enums.kendra.DataSourceServiceNowAuthenticationType>;
        hostUrl: pulumi.Input<string>;
        knowledgeArticleConfiguration?: pulumi.Input<inputs.kendra.DataSourceServiceNowKnowledgeArticleConfigurationArgs>;
        secretArn: pulumi.Input<string>;
        serviceCatalogConfiguration?: pulumi.Input<inputs.kendra.DataSourceServiceNowServiceCatalogConfigurationArgs>;
        serviceNowBuildVersion: pulumi.Input<enums.kendra.DataSourceServiceNowBuildVersionType>;
    }

    export interface DataSourceServiceNowKnowledgeArticleConfigurationArgs {
        crawlAttachments?: pulumi.Input<boolean>;
        documentDataFieldName: pulumi.Input<string>;
        documentTitleFieldName?: pulumi.Input<string>;
        excludeAttachmentFilePatterns?: pulumi.Input<pulumi.Input<string>[]>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
        filterQuery?: pulumi.Input<string>;
        includeAttachmentFilePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DataSourceServiceNowServiceCatalogConfigurationArgs {
        crawlAttachments?: pulumi.Input<boolean>;
        documentDataFieldName: pulumi.Input<string>;
        documentTitleFieldName?: pulumi.Input<string>;
        excludeAttachmentFilePatterns?: pulumi.Input<pulumi.Input<string>[]>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
        includeAttachmentFilePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * SharePoint configuration
     */
    export interface DataSourceSharePointConfigurationArgs {
        crawlAttachments?: pulumi.Input<boolean>;
        disableLocalGroups?: pulumi.Input<boolean>;
        documentTitleFieldName?: pulumi.Input<string>;
        exclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
        inclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        secretArn: pulumi.Input<string>;
        sharePointVersion: pulumi.Input<enums.kendra.DataSourceSharePointConfigurationSharePointVersion>;
        sslCertificateS3Path?: pulumi.Input<inputs.kendra.DataSourceS3PathArgs>;
        urls: pulumi.Input<pulumi.Input<string>[]>;
        useChangeLog?: pulumi.Input<boolean>;
        vpcConfiguration?: pulumi.Input<inputs.kendra.DataSourceVpcConfigurationArgs>;
    }

    export interface DataSourceSqlConfigurationArgs {
        queryIdentifiersEnclosingOption?: pulumi.Input<enums.kendra.DataSourceQueryIdentifiersEnclosingOption>;
    }

    /**
     * A label for tagging Kendra resources
     */
    export interface DataSourceTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    export interface DataSourceToIndexFieldMappingArgs {
        dataSourceFieldName: pulumi.Input<string>;
        dateFieldFormat?: pulumi.Input<string>;
        indexFieldName: pulumi.Input<string>;
    }

    export interface DataSourceVpcConfigurationArgs {
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DataSourceWebCrawlerAuthenticationConfigurationArgs {
        basicAuthentication?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceWebCrawlerBasicAuthenticationArgs>[]>;
    }

    export interface DataSourceWebCrawlerBasicAuthenticationArgs {
        credentials: pulumi.Input<string>;
        host: pulumi.Input<string>;
        port: pulumi.Input<number>;
    }

    export interface DataSourceWebCrawlerConfigurationArgs {
        authenticationConfiguration?: pulumi.Input<inputs.kendra.DataSourceWebCrawlerAuthenticationConfigurationArgs>;
        crawlDepth?: pulumi.Input<number>;
        maxContentSizePerPageInMegaBytes?: pulumi.Input<number>;
        maxLinksPerPage?: pulumi.Input<number>;
        maxUrlsPerMinuteCrawlRate?: pulumi.Input<number>;
        proxyConfiguration?: pulumi.Input<inputs.kendra.DataSourceProxyConfigurationArgs>;
        urlExclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        urlInclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        urls: pulumi.Input<inputs.kendra.DataSourceWebCrawlerUrlsArgs>;
    }

    export interface DataSourceWebCrawlerSeedUrlConfigurationArgs {
        seedUrls: pulumi.Input<pulumi.Input<string>[]>;
        webCrawlerMode?: pulumi.Input<enums.kendra.DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode>;
    }

    export interface DataSourceWebCrawlerSiteMapsConfigurationArgs {
        siteMaps: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DataSourceWebCrawlerUrlsArgs {
        seedUrlConfiguration?: pulumi.Input<inputs.kendra.DataSourceWebCrawlerSeedUrlConfigurationArgs>;
        siteMapsConfiguration?: pulumi.Input<inputs.kendra.DataSourceWebCrawlerSiteMapsConfigurationArgs>;
    }

    export interface DataSourceWorkDocsConfigurationArgs {
        crawlComments?: pulumi.Input<boolean>;
        exclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        fieldMappings?: pulumi.Input<pulumi.Input<inputs.kendra.DataSourceToIndexFieldMappingArgs>[]>;
        inclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
        organizationId: pulumi.Input<string>;
        useChangeLog?: pulumi.Input<boolean>;
    }

    export interface FaqS3PathArgs {
        bucket: pulumi.Input<string>;
        key: pulumi.Input<string>;
    }

    /**
     * A label for tagging Kendra resources
     */
    export interface FaqTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    export interface IndexCapacityUnitsConfigurationArgs {
        queryCapacityUnits: pulumi.Input<number>;
        storageCapacityUnits: pulumi.Input<number>;
    }

    export interface IndexDocumentMetadataConfigurationArgs {
        name: pulumi.Input<string>;
        relevance?: pulumi.Input<inputs.kendra.IndexRelevanceArgs>;
        search?: pulumi.Input<inputs.kendra.IndexSearchArgs>;
        type: pulumi.Input<enums.kendra.IndexDocumentAttributeValueType>;
    }

    export interface IndexJsonTokenTypeConfigurationArgs {
        groupAttributeField: pulumi.Input<string>;
        userNameAttributeField: pulumi.Input<string>;
    }

    export interface IndexJwtTokenTypeConfigurationArgs {
        claimRegex?: pulumi.Input<string>;
        groupAttributeField?: pulumi.Input<string>;
        issuer?: pulumi.Input<string>;
        keyLocation: pulumi.Input<enums.kendra.IndexKeyLocation>;
        secretManagerArn?: pulumi.Input<string>;
        uRL?: pulumi.Input<string>;
        userNameAttributeField?: pulumi.Input<string>;
    }

    export interface IndexRelevanceArgs {
        duration?: pulumi.Input<string>;
        freshness?: pulumi.Input<boolean>;
        importance?: pulumi.Input<number>;
        rankOrder?: pulumi.Input<enums.kendra.IndexOrder>;
        valueImportanceItems?: pulumi.Input<pulumi.Input<inputs.kendra.IndexValueImportanceItemArgs>[]>;
    }

    export interface IndexSearchArgs {
        displayable?: pulumi.Input<boolean>;
        facetable?: pulumi.Input<boolean>;
        searchable?: pulumi.Input<boolean>;
        sortable?: pulumi.Input<boolean>;
    }

    export interface IndexServerSideEncryptionConfigurationArgs {
        kmsKeyId?: pulumi.Input<string>;
    }

    /**
     * A label for tagging Kendra resources
     */
    export interface IndexTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    export interface IndexUserTokenConfigurationArgs {
        jsonTokenTypeConfiguration?: pulumi.Input<inputs.kendra.IndexJsonTokenTypeConfigurationArgs>;
        jwtTokenTypeConfiguration?: pulumi.Input<inputs.kendra.IndexJwtTokenTypeConfigurationArgs>;
    }

    export interface IndexValueImportanceItemArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<number>;
    }
}

export namespace kinesis {
    /**
     * When specified, enables or updates server-side encryption using an AWS KMS key for a specified stream. Removing this property from your stack template and updating your stack disables encryption.
     */
    export interface StreamEncryptionArgs {
        /**
         * The encryption type to use. The only valid value is KMS. 
         */
        encryptionType: pulumi.Input<enums.kinesis.StreamEncryptionEncryptionType>;
        /**
         * The GUID for the customer-managed AWS KMS key to use for encryption. This value can be a globally unique identifier, a fully specified Amazon Resource Name (ARN) to either an alias or a key, or an alias name prefixed by "alias/".You can also use a master key owned by Kinesis Data Streams by specifying the alias aws/kinesis.
         */
        keyId: pulumi.Input<string>;
    }

    /**
     * When specified, enables or updates the mode of stream. Default is PROVISIONED.
     */
    export interface StreamModeDetailsArgs {
        /**
         * The mode of the stream
         */
        streamMode: pulumi.Input<enums.kinesis.StreamModeDetailsStreamMode>;
    }

    /**
     * An arbitrary set of tags (key-value pairs) to associate with the Kinesis stream.
     */
    export interface StreamTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace kinesisanalytics {
    export interface ApplicationCSVMappingParametersArgs {
        recordColumnDelimiter: pulumi.Input<string>;
        recordRowDelimiter: pulumi.Input<string>;
    }

    export interface ApplicationInputArgs {
        inputParallelism?: pulumi.Input<inputs.kinesisanalytics.ApplicationInputParallelismArgs>;
        inputProcessingConfiguration?: pulumi.Input<inputs.kinesisanalytics.ApplicationInputProcessingConfigurationArgs>;
        inputSchema: pulumi.Input<inputs.kinesisanalytics.ApplicationInputSchemaArgs>;
        kinesisFirehoseInput?: pulumi.Input<inputs.kinesisanalytics.ApplicationKinesisFirehoseInputArgs>;
        kinesisStreamsInput?: pulumi.Input<inputs.kinesisanalytics.ApplicationKinesisStreamsInputArgs>;
        namePrefix: pulumi.Input<string>;
    }

    export interface ApplicationInputLambdaProcessorArgs {
        resourceARN: pulumi.Input<string>;
        roleARN: pulumi.Input<string>;
    }

    export interface ApplicationInputParallelismArgs {
        count?: pulumi.Input<number>;
    }

    export interface ApplicationInputProcessingConfigurationArgs {
        inputLambdaProcessor?: pulumi.Input<inputs.kinesisanalytics.ApplicationInputLambdaProcessorArgs>;
    }

    export interface ApplicationInputSchemaArgs {
        recordColumns: pulumi.Input<pulumi.Input<inputs.kinesisanalytics.ApplicationRecordColumnArgs>[]>;
        recordEncoding?: pulumi.Input<string>;
        recordFormat: pulumi.Input<inputs.kinesisanalytics.ApplicationRecordFormatArgs>;
    }

    export interface ApplicationJSONMappingParametersArgs {
        recordRowPath: pulumi.Input<string>;
    }

    export interface ApplicationKinesisFirehoseInputArgs {
        resourceARN: pulumi.Input<string>;
        roleARN: pulumi.Input<string>;
    }

    export interface ApplicationKinesisStreamsInputArgs {
        resourceARN: pulumi.Input<string>;
        roleARN: pulumi.Input<string>;
    }

    export interface ApplicationMappingParametersArgs {
        cSVMappingParameters?: pulumi.Input<inputs.kinesisanalytics.ApplicationCSVMappingParametersArgs>;
        jSONMappingParameters?: pulumi.Input<inputs.kinesisanalytics.ApplicationJSONMappingParametersArgs>;
    }

    export interface ApplicationOutputResourceDestinationSchemaArgs {
        recordFormatType?: pulumi.Input<string>;
    }

    export interface ApplicationOutputResourceKinesisFirehoseOutputArgs {
        resourceARN: pulumi.Input<string>;
        roleARN: pulumi.Input<string>;
    }

    export interface ApplicationOutputResourceKinesisStreamsOutputArgs {
        resourceARN: pulumi.Input<string>;
        roleARN: pulumi.Input<string>;
    }

    export interface ApplicationOutputResourceLambdaOutputArgs {
        resourceARN: pulumi.Input<string>;
        roleARN: pulumi.Input<string>;
    }

    export interface ApplicationOutputResourceOutputArgs {
        destinationSchema: pulumi.Input<inputs.kinesisanalytics.ApplicationOutputResourceDestinationSchemaArgs>;
        kinesisFirehoseOutput?: pulumi.Input<inputs.kinesisanalytics.ApplicationOutputResourceKinesisFirehoseOutputArgs>;
        kinesisStreamsOutput?: pulumi.Input<inputs.kinesisanalytics.ApplicationOutputResourceKinesisStreamsOutputArgs>;
        lambdaOutput?: pulumi.Input<inputs.kinesisanalytics.ApplicationOutputResourceLambdaOutputArgs>;
        name?: pulumi.Input<string>;
    }

    export interface ApplicationRecordColumnArgs {
        mapping?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        sqlType: pulumi.Input<string>;
    }

    export interface ApplicationRecordFormatArgs {
        mappingParameters?: pulumi.Input<inputs.kinesisanalytics.ApplicationMappingParametersArgs>;
        recordFormatType: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceCSVMappingParametersArgs {
        recordColumnDelimiter: pulumi.Input<string>;
        recordRowDelimiter: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceJSONMappingParametersArgs {
        recordRowPath: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceMappingParametersArgs {
        cSVMappingParameters?: pulumi.Input<inputs.kinesisanalytics.ApplicationReferenceDataSourceCSVMappingParametersArgs>;
        jSONMappingParameters?: pulumi.Input<inputs.kinesisanalytics.ApplicationReferenceDataSourceJSONMappingParametersArgs>;
    }

    export interface ApplicationReferenceDataSourceRecordColumnArgs {
        mapping?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        sqlType: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceRecordFormatArgs {
        mappingParameters?: pulumi.Input<inputs.kinesisanalytics.ApplicationReferenceDataSourceMappingParametersArgs>;
        recordFormatType: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceReferenceDataSourceArgs {
        referenceSchema: pulumi.Input<inputs.kinesisanalytics.ApplicationReferenceDataSourceReferenceSchemaArgs>;
        s3ReferenceDataSource?: pulumi.Input<inputs.kinesisanalytics.ApplicationReferenceDataSourceS3ReferenceDataSourceArgs>;
        tableName?: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceReferenceSchemaArgs {
        recordColumns: pulumi.Input<pulumi.Input<inputs.kinesisanalytics.ApplicationReferenceDataSourceRecordColumnArgs>[]>;
        recordEncoding?: pulumi.Input<string>;
        recordFormat: pulumi.Input<inputs.kinesisanalytics.ApplicationReferenceDataSourceRecordFormatArgs>;
    }

    export interface ApplicationReferenceDataSourceS3ReferenceDataSourceArgs {
        bucketARN: pulumi.Input<string>;
        fileKey: pulumi.Input<string>;
        referenceRoleARN: pulumi.Input<string>;
    }
}

export namespace kinesisanalyticsv2 {
    export interface ApplicationCSVMappingParametersArgs {
        recordColumnDelimiter: pulumi.Input<string>;
        recordRowDelimiter: pulumi.Input<string>;
    }

    export interface ApplicationCatalogConfigurationArgs {
        glueDataCatalogConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationGlueDataCatalogConfigurationArgs>;
    }

    export interface ApplicationCheckpointConfigurationArgs {
        checkpointInterval?: pulumi.Input<number>;
        checkpointingEnabled?: pulumi.Input<boolean>;
        configurationType: pulumi.Input<string>;
        minPauseBetweenCheckpoints?: pulumi.Input<number>;
    }

    export interface ApplicationCloudWatchLoggingOptionCloudWatchLoggingOptionArgs {
        logStreamARN: pulumi.Input<string>;
    }

    export interface ApplicationCodeConfigurationArgs {
        codeContent: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationCodeContentArgs>;
        codeContentType: pulumi.Input<string>;
    }

    export interface ApplicationCodeContentArgs {
        s3ContentLocation?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationS3ContentLocationArgs>;
        textContent?: pulumi.Input<string>;
        zipFileContent?: pulumi.Input<string>;
    }

    export interface ApplicationConfigurationArgs {
        applicationCodeConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationCodeConfigurationArgs>;
        applicationSnapshotConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationSnapshotConfigurationArgs>;
        environmentProperties?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationEnvironmentPropertiesArgs>;
        flinkApplicationConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationFlinkApplicationConfigurationArgs>;
        sqlApplicationConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationSqlApplicationConfigurationArgs>;
        zeppelinApplicationConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationZeppelinApplicationConfigurationArgs>;
    }

    export interface ApplicationCustomArtifactsConfigurationArgs {
    }

    export interface ApplicationDeployAsApplicationConfigurationArgs {
        s3ContentLocation: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationS3ContentBaseLocationArgs>;
    }

    export interface ApplicationEnvironmentPropertiesArgs {
        propertyGroups?: pulumi.Input<pulumi.Input<inputs.kinesisanalyticsv2.ApplicationPropertyGroupArgs>[]>;
    }

    export interface ApplicationFlinkApplicationConfigurationArgs {
        checkpointConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationCheckpointConfigurationArgs>;
        monitoringConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationMonitoringConfigurationArgs>;
        parallelismConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationParallelismConfigurationArgs>;
    }

    export interface ApplicationGlueDataCatalogConfigurationArgs {
        databaseARN?: pulumi.Input<string>;
    }

    export interface ApplicationInputArgs {
        inputParallelism?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationInputParallelismArgs>;
        inputProcessingConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationInputProcessingConfigurationArgs>;
        inputSchema: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationInputSchemaArgs>;
        kinesisFirehoseInput?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationKinesisFirehoseInputArgs>;
        kinesisStreamsInput?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationKinesisStreamsInputArgs>;
        namePrefix: pulumi.Input<string>;
    }

    export interface ApplicationInputLambdaProcessorArgs {
        resourceARN: pulumi.Input<string>;
    }

    export interface ApplicationInputParallelismArgs {
        count?: pulumi.Input<number>;
    }

    export interface ApplicationInputProcessingConfigurationArgs {
        inputLambdaProcessor?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationInputLambdaProcessorArgs>;
    }

    export interface ApplicationInputSchemaArgs {
        recordColumns: pulumi.Input<pulumi.Input<inputs.kinesisanalyticsv2.ApplicationRecordColumnArgs>[]>;
        recordEncoding?: pulumi.Input<string>;
        recordFormat: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationRecordFormatArgs>;
    }

    export interface ApplicationJSONMappingParametersArgs {
        recordRowPath: pulumi.Input<string>;
    }

    export interface ApplicationKinesisFirehoseInputArgs {
        resourceARN: pulumi.Input<string>;
    }

    export interface ApplicationKinesisStreamsInputArgs {
        resourceARN: pulumi.Input<string>;
    }

    export interface ApplicationMappingParametersArgs {
        cSVMappingParameters?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationCSVMappingParametersArgs>;
        jSONMappingParameters?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationJSONMappingParametersArgs>;
    }

    export interface ApplicationMonitoringConfigurationArgs {
        configurationType: pulumi.Input<string>;
        logLevel?: pulumi.Input<string>;
        metricsLevel?: pulumi.Input<string>;
    }

    export interface ApplicationOutputResourceDestinationSchemaArgs {
        recordFormatType?: pulumi.Input<string>;
    }

    export interface ApplicationOutputResourceKinesisFirehoseOutputArgs {
        resourceARN: pulumi.Input<string>;
    }

    export interface ApplicationOutputResourceKinesisStreamsOutputArgs {
        resourceARN: pulumi.Input<string>;
    }

    export interface ApplicationOutputResourceLambdaOutputArgs {
        resourceARN: pulumi.Input<string>;
    }

    export interface ApplicationOutputResourceOutputArgs {
        destinationSchema: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationOutputResourceDestinationSchemaArgs>;
        kinesisFirehoseOutput?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationOutputResourceKinesisFirehoseOutputArgs>;
        kinesisStreamsOutput?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationOutputResourceKinesisStreamsOutputArgs>;
        lambdaOutput?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationOutputResourceLambdaOutputArgs>;
        name?: pulumi.Input<string>;
    }

    export interface ApplicationParallelismConfigurationArgs {
        autoScalingEnabled?: pulumi.Input<boolean>;
        configurationType: pulumi.Input<string>;
        parallelism?: pulumi.Input<number>;
        parallelismPerKPU?: pulumi.Input<number>;
    }

    export interface ApplicationPropertyGroupArgs {
        propertyGroupId?: pulumi.Input<string>;
        propertyMap?: any;
    }

    export interface ApplicationRecordColumnArgs {
        mapping?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        sqlType: pulumi.Input<string>;
    }

    export interface ApplicationRecordFormatArgs {
        mappingParameters?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationMappingParametersArgs>;
        recordFormatType: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceCSVMappingParametersArgs {
        recordColumnDelimiter: pulumi.Input<string>;
        recordRowDelimiter: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceJSONMappingParametersArgs {
        recordRowPath: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceMappingParametersArgs {
        cSVMappingParameters?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationReferenceDataSourceCSVMappingParametersArgs>;
        jSONMappingParameters?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationReferenceDataSourceJSONMappingParametersArgs>;
    }

    export interface ApplicationReferenceDataSourceRecordColumnArgs {
        mapping?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        sqlType: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceRecordFormatArgs {
        mappingParameters?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationReferenceDataSourceMappingParametersArgs>;
        recordFormatType: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceReferenceDataSourceArgs {
        referenceSchema: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationReferenceDataSourceReferenceSchemaArgs>;
        s3ReferenceDataSource?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationReferenceDataSourceS3ReferenceDataSourceArgs>;
        tableName?: pulumi.Input<string>;
    }

    export interface ApplicationReferenceDataSourceReferenceSchemaArgs {
        recordColumns: pulumi.Input<pulumi.Input<inputs.kinesisanalyticsv2.ApplicationReferenceDataSourceRecordColumnArgs>[]>;
        recordEncoding?: pulumi.Input<string>;
        recordFormat: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationReferenceDataSourceRecordFormatArgs>;
    }

    export interface ApplicationReferenceDataSourceS3ReferenceDataSourceArgs {
        bucketARN: pulumi.Input<string>;
        fileKey: pulumi.Input<string>;
    }

    export interface ApplicationS3ContentBaseLocationArgs {
        basePath: pulumi.Input<string>;
        bucketARN: pulumi.Input<string>;
    }

    export interface ApplicationS3ContentLocationArgs {
        bucketARN?: pulumi.Input<string>;
        fileKey?: pulumi.Input<string>;
        objectVersion?: pulumi.Input<string>;
    }

    export interface ApplicationSnapshotConfigurationArgs {
        snapshotsEnabled: pulumi.Input<boolean>;
    }

    export interface ApplicationSqlApplicationConfigurationArgs {
        inputs?: pulumi.Input<pulumi.Input<inputs.kinesisanalyticsv2.ApplicationInputArgs>[]>;
    }

    export interface ApplicationTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ApplicationZeppelinApplicationConfigurationArgs {
        catalogConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationCatalogConfigurationArgs>;
        customArtifactsConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationCustomArtifactsConfigurationArgs>;
        deployAsApplicationConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationDeployAsApplicationConfigurationArgs>;
        monitoringConfiguration?: pulumi.Input<inputs.kinesisanalyticsv2.ApplicationZeppelinMonitoringConfigurationArgs>;
    }

    export interface ApplicationZeppelinMonitoringConfigurationArgs {
        logLevel?: pulumi.Input<string>;
    }

}

export namespace kinesisfirehose {
    export interface DeliveryStreamAmazonopensearchserviceBufferingHintsArgs {
        intervalInSeconds?: pulumi.Input<number>;
        sizeInMBs?: pulumi.Input<number>;
    }

    export interface DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs {
        bufferingHints?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamAmazonopensearchserviceBufferingHintsArgs>;
        cloudWatchLoggingOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamCloudWatchLoggingOptionsArgs>;
        clusterEndpoint?: pulumi.Input<string>;
        domainARN?: pulumi.Input<string>;
        indexName: pulumi.Input<string>;
        indexRotationPeriod?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriod>;
        processingConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamProcessingConfigurationArgs>;
        retryOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamAmazonopensearchserviceRetryOptionsArgs>;
        roleARN: pulumi.Input<string>;
        s3BackupMode?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupMode>;
        s3Configuration: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamS3DestinationConfigurationArgs>;
        typeName?: pulumi.Input<string>;
        vpcConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamVpcConfigurationArgs>;
    }

    export interface DeliveryStreamAmazonopensearchserviceRetryOptionsArgs {
        durationInSeconds?: pulumi.Input<number>;
    }

    export interface DeliveryStreamBufferingHintsArgs {
        intervalInSeconds?: pulumi.Input<number>;
        sizeInMBs?: pulumi.Input<number>;
    }

    export interface DeliveryStreamCloudWatchLoggingOptionsArgs {
        enabled?: pulumi.Input<boolean>;
        logGroupName?: pulumi.Input<string>;
        logStreamName?: pulumi.Input<string>;
    }

    export interface DeliveryStreamCopyCommandArgs {
        copyOptions?: pulumi.Input<string>;
        dataTableColumns?: pulumi.Input<string>;
        dataTableName: pulumi.Input<string>;
    }

    export interface DeliveryStreamDataFormatConversionConfigurationArgs {
        enabled?: pulumi.Input<boolean>;
        inputFormatConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamInputFormatConfigurationArgs>;
        outputFormatConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamOutputFormatConfigurationArgs>;
        schemaConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamSchemaConfigurationArgs>;
    }

    export interface DeliveryStreamDeserializerArgs {
        hiveJsonSerDe?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamHiveJsonSerDeArgs>;
        openXJsonSerDe?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamOpenXJsonSerDeArgs>;
    }

    export interface DeliveryStreamDynamicPartitioningConfigurationArgs {
        enabled?: pulumi.Input<boolean>;
        retryOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamRetryOptionsArgs>;
    }

    export interface DeliveryStreamElasticsearchBufferingHintsArgs {
        intervalInSeconds?: pulumi.Input<number>;
        sizeInMBs?: pulumi.Input<number>;
    }

    export interface DeliveryStreamElasticsearchDestinationConfigurationArgs {
        bufferingHints?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamElasticsearchBufferingHintsArgs>;
        cloudWatchLoggingOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamCloudWatchLoggingOptionsArgs>;
        clusterEndpoint?: pulumi.Input<string>;
        domainARN?: pulumi.Input<string>;
        indexName: pulumi.Input<string>;
        indexRotationPeriod?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod>;
        processingConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamProcessingConfigurationArgs>;
        retryOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamElasticsearchRetryOptionsArgs>;
        roleARN: pulumi.Input<string>;
        s3BackupMode?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode>;
        s3Configuration: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamS3DestinationConfigurationArgs>;
        typeName?: pulumi.Input<string>;
        vpcConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamVpcConfigurationArgs>;
    }

    export interface DeliveryStreamElasticsearchRetryOptionsArgs {
        durationInSeconds?: pulumi.Input<number>;
    }

    export interface DeliveryStreamEncryptionConfigurationArgs {
        kMSEncryptionConfig?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamKMSEncryptionConfigArgs>;
        noEncryptionConfig?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamEncryptionConfigurationNoEncryptionConfig>;
    }

    export interface DeliveryStreamEncryptionConfigurationInputArgs {
        keyARN?: pulumi.Input<string>;
        keyType: pulumi.Input<enums.kinesisfirehose.DeliveryStreamEncryptionConfigurationInputKeyType>;
    }

    export interface DeliveryStreamExtendedS3DestinationConfigurationArgs {
        bucketARN: pulumi.Input<string>;
        bufferingHints?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamBufferingHintsArgs>;
        cloudWatchLoggingOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamCloudWatchLoggingOptionsArgs>;
        compressionFormat?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat>;
        dataFormatConversionConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamDataFormatConversionConfigurationArgs>;
        dynamicPartitioningConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamDynamicPartitioningConfigurationArgs>;
        encryptionConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamEncryptionConfigurationArgs>;
        errorOutputPrefix?: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
        processingConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamProcessingConfigurationArgs>;
        roleARN: pulumi.Input<string>;
        s3BackupConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamS3DestinationConfigurationArgs>;
        s3BackupMode?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode>;
    }

    export interface DeliveryStreamHiveJsonSerDeArgs {
        timestampFormats?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DeliveryStreamHttpEndpointCommonAttributeArgs {
        attributeName: pulumi.Input<string>;
        attributeValue: pulumi.Input<string>;
    }

    export interface DeliveryStreamHttpEndpointConfigurationArgs {
        accessKey?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        url: pulumi.Input<string>;
    }

    export interface DeliveryStreamHttpEndpointDestinationConfigurationArgs {
        bufferingHints?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamBufferingHintsArgs>;
        cloudWatchLoggingOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamCloudWatchLoggingOptionsArgs>;
        endpointConfiguration: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamHttpEndpointConfigurationArgs>;
        processingConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamProcessingConfigurationArgs>;
        requestConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamHttpEndpointRequestConfigurationArgs>;
        retryOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamRetryOptionsArgs>;
        roleARN?: pulumi.Input<string>;
        s3BackupMode?: pulumi.Input<string>;
        s3Configuration: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamS3DestinationConfigurationArgs>;
    }

    export interface DeliveryStreamHttpEndpointRequestConfigurationArgs {
        commonAttributes?: pulumi.Input<pulumi.Input<inputs.kinesisfirehose.DeliveryStreamHttpEndpointCommonAttributeArgs>[]>;
        contentEncoding?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamHttpEndpointRequestConfigurationContentEncoding>;
    }

    export interface DeliveryStreamInputFormatConfigurationArgs {
        deserializer?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamDeserializerArgs>;
    }

    export interface DeliveryStreamKMSEncryptionConfigArgs {
        aWSKMSKeyARN: pulumi.Input<string>;
    }

    export interface DeliveryStreamKinesisStreamSourceConfigurationArgs {
        kinesisStreamARN: pulumi.Input<string>;
        roleARN: pulumi.Input<string>;
    }

    export interface DeliveryStreamOpenXJsonSerDeArgs {
        caseInsensitive?: pulumi.Input<boolean>;
        columnToJsonKeyMappings?: any;
        convertDotsInJsonKeysToUnderscores?: pulumi.Input<boolean>;
    }

    export interface DeliveryStreamOrcSerDeArgs {
        blockSizeBytes?: pulumi.Input<number>;
        bloomFilterColumns?: pulumi.Input<pulumi.Input<string>[]>;
        bloomFilterFalsePositiveProbability?: pulumi.Input<number>;
        compression?: pulumi.Input<string>;
        dictionaryKeyThreshold?: pulumi.Input<number>;
        enablePadding?: pulumi.Input<boolean>;
        formatVersion?: pulumi.Input<string>;
        paddingTolerance?: pulumi.Input<number>;
        rowIndexStride?: pulumi.Input<number>;
        stripeSizeBytes?: pulumi.Input<number>;
    }

    export interface DeliveryStreamOutputFormatConfigurationArgs {
        serializer?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamSerializerArgs>;
    }

    export interface DeliveryStreamParquetSerDeArgs {
        blockSizeBytes?: pulumi.Input<number>;
        compression?: pulumi.Input<string>;
        enableDictionaryCompression?: pulumi.Input<boolean>;
        maxPaddingBytes?: pulumi.Input<number>;
        pageSizeBytes?: pulumi.Input<number>;
        writerVersion?: pulumi.Input<string>;
    }

    export interface DeliveryStreamProcessingConfigurationArgs {
        enabled?: pulumi.Input<boolean>;
        processors?: pulumi.Input<pulumi.Input<inputs.kinesisfirehose.DeliveryStreamProcessorArgs>[]>;
    }

    export interface DeliveryStreamProcessorArgs {
        parameters?: pulumi.Input<pulumi.Input<inputs.kinesisfirehose.DeliveryStreamProcessorParameterArgs>[]>;
        type: pulumi.Input<enums.kinesisfirehose.DeliveryStreamProcessorType>;
    }

    export interface DeliveryStreamProcessorParameterArgs {
        parameterName: pulumi.Input<string>;
        parameterValue: pulumi.Input<string>;
    }

    export interface DeliveryStreamRedshiftDestinationConfigurationArgs {
        cloudWatchLoggingOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamCloudWatchLoggingOptionsArgs>;
        clusterJDBCURL: pulumi.Input<string>;
        copyCommand: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamCopyCommandArgs>;
        password: pulumi.Input<string>;
        processingConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamProcessingConfigurationArgs>;
        retryOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamRedshiftRetryOptionsArgs>;
        roleARN: pulumi.Input<string>;
        s3BackupConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamS3DestinationConfigurationArgs>;
        s3BackupMode?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamRedshiftDestinationConfigurationS3BackupMode>;
        s3Configuration: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamS3DestinationConfigurationArgs>;
        username: pulumi.Input<string>;
    }

    export interface DeliveryStreamRedshiftRetryOptionsArgs {
        durationInSeconds?: pulumi.Input<number>;
    }

    export interface DeliveryStreamRetryOptionsArgs {
        durationInSeconds?: pulumi.Input<number>;
    }

    export interface DeliveryStreamS3DestinationConfigurationArgs {
        bucketARN: pulumi.Input<string>;
        bufferingHints?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamBufferingHintsArgs>;
        cloudWatchLoggingOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamCloudWatchLoggingOptionsArgs>;
        compressionFormat?: pulumi.Input<enums.kinesisfirehose.DeliveryStreamS3DestinationConfigurationCompressionFormat>;
        encryptionConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamEncryptionConfigurationArgs>;
        errorOutputPrefix?: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
        roleARN: pulumi.Input<string>;
    }

    export interface DeliveryStreamSchemaConfigurationArgs {
        catalogId?: pulumi.Input<string>;
        databaseName?: pulumi.Input<string>;
        region?: pulumi.Input<string>;
        roleARN?: pulumi.Input<string>;
        tableName?: pulumi.Input<string>;
        versionId?: pulumi.Input<string>;
    }

    export interface DeliveryStreamSerializerArgs {
        orcSerDe?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamOrcSerDeArgs>;
        parquetSerDe?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamParquetSerDeArgs>;
    }

    export interface DeliveryStreamSplunkDestinationConfigurationArgs {
        cloudWatchLoggingOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamCloudWatchLoggingOptionsArgs>;
        hECAcknowledgmentTimeoutInSeconds?: pulumi.Input<number>;
        hECEndpoint: pulumi.Input<string>;
        hECEndpointType: pulumi.Input<enums.kinesisfirehose.DeliveryStreamSplunkDestinationConfigurationHECEndpointType>;
        hECToken: pulumi.Input<string>;
        processingConfiguration?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamProcessingConfigurationArgs>;
        retryOptions?: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamSplunkRetryOptionsArgs>;
        s3BackupMode?: pulumi.Input<string>;
        s3Configuration: pulumi.Input<inputs.kinesisfirehose.DeliveryStreamS3DestinationConfigurationArgs>;
    }

    export interface DeliveryStreamSplunkRetryOptionsArgs {
        durationInSeconds?: pulumi.Input<number>;
    }

    export interface DeliveryStreamTagArgs {
        key: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface DeliveryStreamVpcConfigurationArgs {
        roleARN: pulumi.Input<string>;
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace kms {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface KeyTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ReplicaKeyTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace lakeformation {
    export interface DataLakeSettingsAdminsArgs {
    }

    export interface PermissionsColumnWildcardArgs {
        excludedColumnNames?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PermissionsDataLakePrincipalArgs {
        dataLakePrincipalIdentifier?: pulumi.Input<string>;
    }

    export interface PermissionsDataLocationResourceArgs {
        catalogId?: pulumi.Input<string>;
        s3Resource?: pulumi.Input<string>;
    }

    export interface PermissionsDatabaseResourceArgs {
        catalogId?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface PermissionsResourceArgs {
        dataLocationResource?: pulumi.Input<inputs.lakeformation.PermissionsDataLocationResourceArgs>;
        databaseResource?: pulumi.Input<inputs.lakeformation.PermissionsDatabaseResourceArgs>;
        tableResource?: pulumi.Input<inputs.lakeformation.PermissionsTableResourceArgs>;
        tableWithColumnsResource?: pulumi.Input<inputs.lakeformation.PermissionsTableWithColumnsResourceArgs>;
    }

    export interface PermissionsTableResourceArgs {
        catalogId?: pulumi.Input<string>;
        databaseName?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        tableWildcard?: pulumi.Input<inputs.lakeformation.PermissionsTableWildcardArgs>;
    }

    export interface PermissionsTableWildcardArgs {
    }

    export interface PermissionsTableWithColumnsResourceArgs {
        catalogId?: pulumi.Input<string>;
        columnNames?: pulumi.Input<pulumi.Input<string>[]>;
        columnWildcard?: pulumi.Input<inputs.lakeformation.PermissionsColumnWildcardArgs>;
        databaseName?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }
}

export namespace lambda {
    export interface AliasProvisionedConcurrencyConfigurationArgs {
        provisionedConcurrentExecutions: pulumi.Input<number>;
    }

    export interface AliasRoutingConfigurationArgs {
        additionalVersionWeights: pulumi.Input<pulumi.Input<inputs.lambda.AliasVersionWeightArgs>[]>;
    }

    export interface AliasVersionWeightArgs {
        functionVersion: pulumi.Input<string>;
        functionWeight: pulumi.Input<number>;
    }

    /**
     * When the CodeSigningConfig is later on attached to a function, the function code will be expected to be signed by profiles from this list
     */
    export interface CodeSigningConfigAllowedPublishersArgs {
        /**
         * List of Signing profile version Arns
         */
        signingProfileVersionArns: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Policies to control how to act if a signature is invalid
     */
    export interface CodeSigningConfigCodeSigningPoliciesArgs {
        /**
         * Indicates how Lambda operations involve updating the code artifact will operate. Default to Warn if not provided
         */
        untrustedArtifactOnDeployment: pulumi.Input<enums.lambda.CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment>;
    }

    export interface EventInvokeConfigDestinationConfigArgs {
        onFailure?: pulumi.Input<inputs.lambda.EventInvokeConfigOnFailureArgs>;
        onSuccess?: pulumi.Input<inputs.lambda.EventInvokeConfigOnSuccessArgs>;
    }

    export interface EventInvokeConfigOnFailureArgs {
        destination: pulumi.Input<string>;
    }

    export interface EventInvokeConfigOnSuccessArgs {
        destination: pulumi.Input<string>;
    }

    /**
     * (Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.
     */
    export interface EventSourceMappingDestinationConfigArgs {
        /**
         * The destination configuration for failed invocations.
         */
        onFailure?: pulumi.Input<inputs.lambda.EventSourceMappingOnFailureArgs>;
    }

    /**
     * The endpoints used by AWS Lambda to access a self-managed event source.
     */
    export interface EventSourceMappingEndpointsArgs {
        /**
         * A list of Kafka server endpoints.
         */
        kafkaBootstrapServers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The filter object that defines parameters for ESM filtering.
     */
    export interface EventSourceMappingFilterArgs {
        /**
         * The filter pattern that defines which events should be passed for invocations.
         */
        pattern?: pulumi.Input<string>;
    }

    /**
     * A destination for events that failed processing.
     */
    export interface EventSourceMappingOnFailureArgs {
        /**
         * The Amazon Resource Name (ARN) of the destination resource.
         */
        destination?: pulumi.Input<string>;
    }

    /**
     * The configuration used by AWS Lambda to access a self-managed event source.
     */
    export interface EventSourceMappingSelfManagedEventSourceArgs {
        /**
         * The endpoints for a self-managed event source.
         */
        endpoints?: pulumi.Input<inputs.lambda.EventSourceMappingEndpointsArgs>;
    }

    /**
     * The configuration used by AWS Lambda to access event source
     */
    export interface EventSourceMappingSourceAccessConfigurationArgs {
        /**
         * The type of source access configuration.
         */
        type?: pulumi.Input<enums.lambda.EventSourceMappingSourceAccessConfigurationType>;
        /**
         * The URI for the source access configuration resource.
         */
        uRI?: pulumi.Input<string>;
    }

    /**
     * The filter criteria to control event filtering.
     */
    export interface FilterCriteriaPropertiesArgs {
        /**
         * List of filters of this FilterCriteria
         */
        filters?: pulumi.Input<pulumi.Input<inputs.lambda.EventSourceMappingFilterArgs>[]>;
    }

    export interface FunctionCodeArgs {
        /**
         * ImageUri.
         */
        imageUri?: pulumi.Input<string>;
        /**
         * An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
         */
        s3Bucket?: pulumi.Input<string>;
        /**
         * The Amazon S3 key of the deployment package.
         */
        s3Key?: pulumi.Input<string>;
        /**
         * For versioned objects, the version of the deployment package object to use.
         */
        s3ObjectVersion?: pulumi.Input<string>;
        /**
         * The source code of your Lambda function. If you include your function source inline with this parameter, AWS CloudFormation places it in a file named index and zips it to create a deployment package..
         */
        zipFile?: pulumi.Input<string>;
    }

    /**
     * The dead-letter queue for failed asynchronous invocations.
     */
    export interface FunctionDeadLetterConfigArgs {
        /**
         * The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.
         */
        targetArn?: pulumi.Input<string>;
    }

    /**
     * A function's environment variable settings.
     */
    export interface FunctionEnvironmentArgs {
        /**
         * Environment variable key-value pairs.
         */
        variables?: any;
    }

    export interface FunctionFileSystemConfigArgs {
        /**
         * The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.
         */
        arn: pulumi.Input<string>;
        /**
         * The path where the function can access the file system, starting with /mnt/.
         */
        localMountPath: pulumi.Input<string>;
    }

    export interface FunctionImageConfigArgs {
        /**
         * Command.
         */
        command?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * EntryPoint.
         */
        entryPoint?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * WorkingDirectory.
         */
        workingDirectory?: pulumi.Input<string>;
    }

    export interface FunctionTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * The function's AWS X-Ray tracing configuration. To sample and record incoming requests, set Mode to Active.
     */
    export interface FunctionTracingConfigArgs {
        /**
         * The tracing mode.
         */
        mode?: pulumi.Input<enums.lambda.FunctionTracingConfigMode>;
    }

    /**
     * The VPC security groups and subnets that are attached to a Lambda function. When you connect a function to a VPC, Lambda creates an elastic network interface for each combination of security group and subnet in the function's VPC configuration. The function can only access resources and the internet through that VPC.
     */
    export interface FunctionVpcConfigArgs {
        /**
         * A list of VPC security groups IDs.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of VPC subnet IDs.
         */
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LayerVersionContentArgs {
        s3Bucket: pulumi.Input<string>;
        s3Key: pulumi.Input<string>;
        s3ObjectVersion?: pulumi.Input<string>;
    }

    export interface UrlCorsArgs {
        /**
         * Specifies whether credentials are included in the CORS request.
         */
        allowCredentials?: pulumi.Input<boolean>;
        /**
         * Represents a collection of allowed headers.
         */
        allowHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Represents a collection of allowed HTTP methods.
         */
        allowMethods?: pulumi.Input<pulumi.Input<enums.lambda.UrlAllowMethodsItem>[]>;
        /**
         * Represents a collection of allowed origins.
         */
        allowOrigins?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Represents a collection of exposed headers.
         */
        exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        maxAge?: pulumi.Input<number>;
    }

    export interface VersionProvisionedConcurrencyConfigurationArgs {
        provisionedConcurrentExecutions: pulumi.Input<number>;
    }
}

export namespace lex {
    /**
     * The location of audio log files collected when conversation logging is enabled for a bot.
     */
    export interface BotAliasAudioLogDestinationArgs {
        s3Bucket?: pulumi.Input<inputs.lex.BotAliasS3BucketLogDestinationArgs>;
    }

    /**
     * Settings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.
     */
    export interface BotAliasAudioLogSettingArgs {
        destination: pulumi.Input<inputs.lex.BotAliasAudioLogDestinationArgs>;
        enabled: pulumi.Input<boolean>;
    }

    export interface BotAliasCloudWatchLogGroupLogDestinationArgs {
        /**
         * A string used to identify this tag
         */
        cloudWatchLogGroupArn: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        logPrefix: pulumi.Input<string>;
    }

    /**
     * Contains information about code hooks that Amazon Lex calls during a conversation.
     */
    export interface BotAliasCodeHookSpecificationArgs {
        lambdaCodeHook: pulumi.Input<inputs.lex.BotAliasLambdaCodeHookArgs>;
    }

    /**
     * Contains information about code hooks that Amazon Lex calls during a conversation.
     */
    export interface BotAliasConversationLogSettingsArgs {
        audioLogSettings?: pulumi.Input<pulumi.Input<inputs.lex.BotAliasAudioLogSettingArgs>[]>;
        textLogSettings?: pulumi.Input<pulumi.Input<inputs.lex.BotAliasTextLogSettingArgs>[]>;
    }

    /**
     * Contains information about code hooks that Amazon Lex calls during a conversation.
     */
    export interface BotAliasLambdaCodeHookArgs {
        /**
         * The version of the request-response that you want Amazon Lex to use to invoke your Lambda function.
         */
        codeHookInterfaceVersion: pulumi.Input<string>;
        /**
         * The Amazon Resource Name (ARN) of the Lambda function.
         */
        lambdaArn: pulumi.Input<string>;
    }

    /**
     * You can use this parameter to specify a specific Lambda function to run different functions in different locales.
     */
    export interface BotAliasLocaleSettingsArgs {
        codeHookSpecification?: pulumi.Input<inputs.lex.BotAliasCodeHookSpecificationArgs>;
        /**
         * Whether the Lambda code hook is enabled
         */
        enabled: pulumi.Input<boolean>;
    }

    /**
     * A locale setting in alias
     */
    export interface BotAliasLocaleSettingsItemArgs {
        botAliasLocaleSetting?: pulumi.Input<inputs.lex.BotAliasLocaleSettingsArgs>;
        /**
         * A string used to identify the locale
         */
        localeId?: pulumi.Input<string>;
    }

    /**
     * Specifies an Amazon S3 bucket for logging audio conversations
     */
    export interface BotAliasS3BucketLogDestinationArgs {
        /**
         * The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket.
         */
        kmsKeyArn?: pulumi.Input<string>;
        /**
         * The Amazon S3 key of the deployment package.
         */
        logPrefix: pulumi.Input<string>;
        /**
         * The Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored.
         */
        s3BucketArn: pulumi.Input<string>;
    }

    /**
     * A label for tagging Lex resources
     */
    export interface BotAliasTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    /**
     * Defines the Amazon CloudWatch Logs destination log group for conversation text logs.
     */
    export interface BotAliasTextLogDestinationArgs {
        cloudWatch?: pulumi.Input<inputs.lex.BotAliasCloudWatchLogGroupLogDestinationArgs>;
    }

    /**
     * Contains information about code hooks that Amazon Lex calls during a conversation.
     */
    export interface BotAliasTextLogSettingArgs {
        destination?: pulumi.Input<inputs.lex.BotAliasTextLogDestinationArgs>;
        enabled?: pulumi.Input<boolean>;
    }

    /**
     * A button to use on a response card used to gather slot values from a user.
     */
    export interface BotButtonArgs {
        /**
         * The text that appears on the button.
         */
        text: pulumi.Input<string>;
        /**
         * The value returned to Amazon Lex when the user chooses this button.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A message in a custom format defined by the client application.
     */
    export interface BotCustomPayloadArgs {
        /**
         * The string that is sent to your application.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Settings that determine the Lambda function that Amazon Lex uses for processing user responses.
     */
    export interface BotDialogCodeHookSettingArgs {
        enabled: pulumi.Input<boolean>;
    }

    /**
     * Provides information about the external source of the slot type's definition.
     */
    export interface BotExternalSourceSettingArgs {
        grammarSlotTypeSetting?: pulumi.Input<inputs.lex.BotGrammarSlotTypeSettingArgs>;
    }

    /**
     * Settings that determine if a Lambda function should be invoked to fulfill a specific intent.
     */
    export interface BotFulfillmentCodeHookSettingArgs {
        enabled: pulumi.Input<boolean>;
        fulfillmentUpdatesSpecification?: pulumi.Input<inputs.lex.BotFulfillmentUpdatesSpecificationArgs>;
        postFulfillmentStatusSpecification?: pulumi.Input<inputs.lex.BotPostFulfillmentStatusSpecificationArgs>;
    }

    /**
     * Provides settings for a message that is sent to the user when a fulfillment Lambda function starts running.
     */
    export interface BotFulfillmentStartResponseSpecificationArgs {
        /**
         * Determines whether the user can interrupt the start message while it is playing.
         */
        allowInterrupt?: pulumi.Input<boolean>;
        /**
         * The delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn't played.
         */
        delayInSeconds: pulumi.Input<number>;
        messageGroups: pulumi.Input<pulumi.Input<inputs.lex.BotMessageGroupArgs>[]>;
    }

    /**
     * Provides settings for a message that is sent periodically to the user while a fulfillment Lambda function is running.
     */
    export interface BotFulfillmentUpdateResponseSpecificationArgs {
        /**
         * Determines whether the user can interrupt an update message while it is playing.
         */
        allowInterrupt?: pulumi.Input<boolean>;
        /**
         * The frequency that a message is sent to the user. When the period ends, Amazon Lex chooses a message from the message groups and plays it to the user. If the fulfillment Lambda returns before the first period ends, an update message is not played to the user.
         */
        frequencyInSeconds: pulumi.Input<number>;
        messageGroups: pulumi.Input<pulumi.Input<inputs.lex.BotMessageGroupArgs>[]>;
    }

    /**
     * Provides information for updating the user on the progress of fulfilling an intent.
     */
    export interface BotFulfillmentUpdatesSpecificationArgs {
        /**
         * Determines whether fulfillment updates are sent to the user. When this field is true, updates are sent.
         */
        active: pulumi.Input<boolean>;
        startResponse?: pulumi.Input<inputs.lex.BotFulfillmentStartResponseSpecificationArgs>;
        /**
         * The length of time that the fulfillment Lambda function should run before it times out.
         */
        timeoutInSeconds?: pulumi.Input<number>;
        updateResponse?: pulumi.Input<inputs.lex.BotFulfillmentUpdateResponseSpecificationArgs>;
    }

    /**
     * Settings required for a slot type based on a grammar that you provide.
     */
    export interface BotGrammarSlotTypeSettingArgs {
        source?: pulumi.Input<inputs.lex.BotGrammarSlotTypeSourceArgs>;
    }

    /**
     * Describes the Amazon S3 bucket name and location for the grammar that is the source for the slot type.
     */
    export interface BotGrammarSlotTypeSourceArgs {
        /**
         * The Amazon KMS key required to decrypt the contents of the grammar, if any.
         */
        kmsKeyArn?: pulumi.Input<string>;
        /**
         * The name of the S3 bucket that contains the grammar source.
         */
        s3BucketName: pulumi.Input<string>;
        /**
         * The path to the grammar in the S3 bucket.
         */
        s3ObjectKey: pulumi.Input<string>;
    }

    /**
     * A message that defines a response card that the client application can show to the user.
     */
    export interface BotImageResponseCardArgs {
        /**
         * A list of buttons that should be displayed on the response card.
         */
        buttons?: pulumi.Input<pulumi.Input<inputs.lex.BotButtonArgs>[]>;
        /**
         * The URL of an image to display on the response card.
         */
        imageUrl?: pulumi.Input<string>;
        /**
         * The subtitle to display on the response card.
         */
        subtitle?: pulumi.Input<string>;
        /**
         * The title to display on the response card.
         */
        title: pulumi.Input<string>;
    }

    /**
     * InputContext specified for the intent.
     */
    export interface BotInputContextArgs {
        /**
         * The name of the context.
         */
        name: pulumi.Input<string>;
    }

    /**
     * An intent represents an action that the user wants to perform. You create a bot to support one or more related intents.
     */
    export interface BotIntentArgs {
        description?: pulumi.Input<string>;
        dialogCodeHook?: pulumi.Input<inputs.lex.BotDialogCodeHookSettingArgs>;
        fulfillmentCodeHook?: pulumi.Input<inputs.lex.BotFulfillmentCodeHookSettingArgs>;
        inputContexts?: pulumi.Input<pulumi.Input<inputs.lex.BotInputContextArgs>[]>;
        intentClosingSetting?: pulumi.Input<inputs.lex.BotIntentClosingSettingArgs>;
        intentConfirmationSetting?: pulumi.Input<inputs.lex.BotIntentConfirmationSettingArgs>;
        kendraConfiguration?: pulumi.Input<inputs.lex.BotKendraConfigurationArgs>;
        name: pulumi.Input<string>;
        outputContexts?: pulumi.Input<pulumi.Input<inputs.lex.BotOutputContextArgs>[]>;
        parentIntentSignature?: pulumi.Input<string>;
        sampleUtterances?: pulumi.Input<pulumi.Input<inputs.lex.BotSampleUtteranceArgs>[]>;
        slotPriorities?: pulumi.Input<pulumi.Input<inputs.lex.BotSlotPriorityArgs>[]>;
        /**
         * List of slots
         */
        slots?: pulumi.Input<pulumi.Input<inputs.lex.BotSlotArgs>[]>;
    }

    /**
     * Response that Amazon Lex sends to the user when the intent is closed.
     */
    export interface BotIntentClosingSettingArgs {
        closingResponse: pulumi.Input<inputs.lex.BotResponseSpecificationArgs>;
        isActive?: pulumi.Input<boolean>;
    }

    /**
     * Prompts that Amazon Lex sends to the user to confirm the completion of an intent.
     */
    export interface BotIntentConfirmationSettingArgs {
        declinationResponse: pulumi.Input<inputs.lex.BotResponseSpecificationArgs>;
        isActive?: pulumi.Input<boolean>;
        promptSpecification: pulumi.Input<inputs.lex.BotPromptSpecificationArgs>;
    }

    /**
     * Configuration for searching a Amazon Kendra index specified for the intent.
     */
    export interface BotKendraConfigurationArgs {
        kendraIndex: pulumi.Input<string>;
        queryFilterString?: pulumi.Input<string>;
        /**
         * Determines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.
         */
        queryFilterStringEnabled?: pulumi.Input<boolean>;
    }

    /**
     * A locale in the bot, which contains the intents and slot types that the bot uses in conversations with users in the specified language and locale.
     */
    export interface BotLocaleArgs {
        description?: pulumi.Input<string>;
        /**
         * List of intents
         */
        intents?: pulumi.Input<pulumi.Input<inputs.lex.BotIntentArgs>[]>;
        localeId: pulumi.Input<string>;
        nluConfidenceThreshold: pulumi.Input<number>;
        /**
         * List of SlotTypes
         */
        slotTypes?: pulumi.Input<pulumi.Input<inputs.lex.BotSlotTypeArgs>[]>;
        voiceSettings?: pulumi.Input<inputs.lex.BotVoiceSettingsArgs>;
    }

    /**
     * The primary message that Amazon Lex should send to the user.
     */
    export interface BotMessageArgs {
        customPayload?: pulumi.Input<inputs.lex.BotCustomPayloadArgs>;
        imageResponseCard?: pulumi.Input<inputs.lex.BotImageResponseCardArgs>;
        plainTextMessage?: pulumi.Input<inputs.lex.BotPlainTextMessageArgs>;
        sSMLMessage?: pulumi.Input<inputs.lex.BotSSMLMessageArgs>;
    }

    /**
     * One or more messages that Amazon Lex can send to the user.
     */
    export interface BotMessageGroupArgs {
        message: pulumi.Input<inputs.lex.BotMessageArgs>;
        /**
         * Message variations to send to the user.
         */
        variations?: pulumi.Input<pulumi.Input<inputs.lex.BotMessageArgs>[]>;
    }

    /**
     * Indicates whether a slot can return multiple values.
     */
    export interface BotMultipleValuesSettingArgs {
        allowMultipleValues?: pulumi.Input<boolean>;
    }

    /**
     * Determines whether Amazon Lex obscures slot values in conversation logs.
     */
    export interface BotObfuscationSettingArgs {
        /**
         * Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.
         */
        obfuscationSettingType: pulumi.Input<enums.lex.BotObfuscationSettingObfuscationSettingType>;
    }

    /**
     * A session context that is activated when an intent is fulfilled.
     */
    export interface BotOutputContextArgs {
        name: pulumi.Input<string>;
        timeToLiveInSeconds: pulumi.Input<number>;
        turnsToLive: pulumi.Input<number>;
    }

    /**
     * A message in plain text format.
     */
    export interface BotPlainTextMessageArgs {
        /**
         * The message to send to the user.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Provides information for updating the user on the progress of fulfilling an intent.
     */
    export interface BotPostFulfillmentStatusSpecificationArgs {
        failureResponse?: pulumi.Input<inputs.lex.BotResponseSpecificationArgs>;
        successResponse?: pulumi.Input<inputs.lex.BotResponseSpecificationArgs>;
        timeoutResponse?: pulumi.Input<inputs.lex.BotResponseSpecificationArgs>;
    }

    /**
     * Prompts the user to confirm the intent.
     */
    export interface BotPromptSpecificationArgs {
        /**
         * Indicates whether the user can interrupt a speech prompt from the bot.
         */
        allowInterrupt?: pulumi.Input<boolean>;
        maxRetries: pulumi.Input<number>;
        messageGroupsList: pulumi.Input<pulumi.Input<inputs.lex.BotMessageGroupArgs>[]>;
    }

    /**
     * A list of message groups that Amazon Lex uses to respond the user input.
     */
    export interface BotResponseSpecificationArgs {
        /**
         * Indicates whether the user can interrupt a speech prompt from the bot.
         */
        allowInterrupt?: pulumi.Input<boolean>;
        messageGroupsList: pulumi.Input<pulumi.Input<inputs.lex.BotMessageGroupArgs>[]>;
    }

    /**
     * S3 location of bot definitions zip file, if it's not defined inline in CloudFormation.
     */
    export interface BotS3LocationArgs {
        /**
         * An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The Amazon S3 key of the deployment package.
         */
        s3ObjectKey: pulumi.Input<string>;
        /**
         * For versioned objects, the version of the deployment package object to use. If not specified, the current object version will be used.
         */
        s3ObjectVersion?: pulumi.Input<string>;
    }

    /**
     * A message in Speech Synthesis Markup Language (SSML).
     */
    export interface BotSSMLMessageArgs {
        /**
         * The SSML text that defines the prompt.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A sample utterance that invokes an intent or respond to a slot elicitation prompt.
     */
    export interface BotSampleUtteranceArgs {
        utterance: pulumi.Input<string>;
    }

    /**
     * Defines one of the values for a slot type.
     */
    export interface BotSampleValueArgs {
        /**
         * The value that can be used for a slot type.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A slot is a variable needed to fulfill an intent, where an intent can require zero or more slots.
     */
    export interface BotSlotArgs {
        description?: pulumi.Input<string>;
        multipleValuesSetting?: pulumi.Input<inputs.lex.BotMultipleValuesSettingArgs>;
        name: pulumi.Input<string>;
        obfuscationSetting?: pulumi.Input<inputs.lex.BotObfuscationSettingArgs>;
        slotTypeName: pulumi.Input<string>;
        valueElicitationSetting: pulumi.Input<inputs.lex.BotSlotValueElicitationSettingArgs>;
    }

    /**
     * The default value to use when a user doesn't provide a value for a slot.
     */
    export interface BotSlotDefaultValueArgs {
        /**
         * The default value to use when a user doesn't provide a value for a slot.
         */
        defaultValue: pulumi.Input<string>;
    }

    /**
     * A list of values that Amazon Lex should use as the default value for a slot.
     */
    export interface BotSlotDefaultValueSpecificationArgs {
        /**
         * A list of slot default values
         */
        defaultValueList: pulumi.Input<pulumi.Input<inputs.lex.BotSlotDefaultValueArgs>[]>;
    }

    /**
     * The priority that Amazon Lex should use when eliciting slot values from a user.
     */
    export interface BotSlotPriorityArgs {
        priority: pulumi.Input<number>;
        /**
         * The name of the slot.
         */
        slotName: pulumi.Input<string>;
    }

    /**
     * A custom, extended built-in or a grammar slot type.
     */
    export interface BotSlotTypeArgs {
        description?: pulumi.Input<string>;
        externalSourceSetting?: pulumi.Input<inputs.lex.BotExternalSourceSettingArgs>;
        name: pulumi.Input<string>;
        parentSlotTypeSignature?: pulumi.Input<string>;
        slotTypeValues?: pulumi.Input<pulumi.Input<inputs.lex.BotSlotTypeValueArgs>[]>;
        valueSelectionSetting?: pulumi.Input<inputs.lex.BotSlotValueSelectionSettingArgs>;
    }

    /**
     * Value that the slot type can take.
     */
    export interface BotSlotTypeValueArgs {
        sampleValue: pulumi.Input<inputs.lex.BotSampleValueArgs>;
        synonyms?: pulumi.Input<pulumi.Input<inputs.lex.BotSampleValueArgs>[]>;
    }

    /**
     * Settings that you can use for eliciting a slot value.
     */
    export interface BotSlotValueElicitationSettingArgs {
        /**
         * A list of default values for a slot.
         */
        defaultValueSpecification?: pulumi.Input<inputs.lex.BotSlotDefaultValueSpecificationArgs>;
        /**
         * The prompt that Amazon Lex uses to elicit the slot value from the user.
         */
        promptSpecification?: pulumi.Input<inputs.lex.BotPromptSpecificationArgs>;
        /**
         * If you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy.
         */
        sampleUtterances?: pulumi.Input<pulumi.Input<inputs.lex.BotSampleUtteranceArgs>[]>;
        /**
         * Specifies whether the slot is required or optional.
         */
        slotConstraint: pulumi.Input<enums.lex.BotSlotConstraint>;
        /**
         * Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input.
         */
        waitAndContinueSpecification?: pulumi.Input<inputs.lex.BotWaitAndContinueSpecificationArgs>;
    }

    /**
     * A regular expression used to validate the value of a slot.
     */
    export interface BotSlotValueRegexFilterArgs {
        /**
         * Regex pattern
         */
        pattern: pulumi.Input<string>;
    }

    /**
     * Contains settings used by Amazon Lex to select a slot value.
     */
    export interface BotSlotValueSelectionSettingArgs {
        regexFilter?: pulumi.Input<inputs.lex.BotSlotValueRegexFilterArgs>;
        resolutionStrategy: pulumi.Input<enums.lex.BotSlotValueResolutionStrategy>;
    }

    /**
     * StillWaitingResponseSpecification.
     */
    export interface BotStillWaitingResponseSpecificationArgs {
        /**
         * Indicates whether the user can interrupt a speech prompt from the bot.
         */
        allowInterrupt?: pulumi.Input<boolean>;
        frequencyInSeconds: pulumi.Input<number>;
        messageGroupsList: pulumi.Input<pulumi.Input<inputs.lex.BotMessageGroupArgs>[]>;
        timeoutInSeconds: pulumi.Input<number>;
    }

    /**
     * A key-value pair for tagging Lex resources
     */
    export interface BotTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The version of a bot used for a bot locale.
     */
    export interface BotVersionLocaleDetailsArgs {
        sourceBotVersion: pulumi.Input<string>;
    }

    export interface BotVersionLocaleSpecificationArgs {
        botVersionLocaleDetails: pulumi.Input<inputs.lex.BotVersionLocaleDetailsArgs>;
        localeId: pulumi.Input<string>;
    }

    /**
     * Settings for using an Amazon Polly voice to communicate with a user.
     */
    export interface BotVoiceSettingsArgs {
        /**
         * The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
         */
        voiceId: pulumi.Input<string>;
    }

    /**
     * The prompts that Amazon Lex uses while a bot is waiting for customer input.
     */
    export interface BotWaitAndContinueSpecificationArgs {
        /**
         * The response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
         */
        continueResponse: pulumi.Input<inputs.lex.BotResponseSpecificationArgs>;
        /**
         * Specifies whether the bot will wait for a user to respond.
         */
        isActive?: pulumi.Input<boolean>;
        /**
         * The response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
         */
        stillWaitingResponse?: pulumi.Input<inputs.lex.BotStillWaitingResponseSpecificationArgs>;
        /**
         * The response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
         */
        waitingResponse: pulumi.Input<inputs.lex.BotResponseSpecificationArgs>;
    }

    /**
     * Data privacy setting of the Bot.
     */
    export interface DataPrivacyPropertiesArgs {
        childDirected: pulumi.Input<boolean>;
    }

    /**
     * A resource policy to add to the resource. The policy is a JSON structure following the IAM syntax that contains one or more statements that define the policy.
     */
    export interface ResourcePolicyPolicyArgs {
    }

    /**
     * Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
     */
    export interface SentimentAnalysisSettingsPropertiesArgs {
        /**
         * Enable to call Amazon Comprehend for Sentiment natively within Lex
         */
        detectSentiment: pulumi.Input<boolean>;
    }

}

export namespace licensemanager {
    export interface LicenseBorrowConfigurationArgs {
        allowEarlyCheckIn: pulumi.Input<boolean>;
        maxTimeToLiveInMinutes: pulumi.Input<number>;
    }

    export interface LicenseConsumptionConfigurationArgs {
        borrowConfiguration?: pulumi.Input<inputs.licensemanager.LicenseBorrowConfigurationArgs>;
        provisionalConfiguration?: pulumi.Input<inputs.licensemanager.LicenseProvisionalConfigurationArgs>;
        renewType?: pulumi.Input<string>;
    }

    export interface LicenseEntitlementArgs {
        allowCheckIn?: pulumi.Input<boolean>;
        maxCount?: pulumi.Input<number>;
        name: pulumi.Input<string>;
        overage?: pulumi.Input<boolean>;
        unit: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface LicenseIssuerDataArgs {
        name: pulumi.Input<string>;
        signKey?: pulumi.Input<string>;
    }

    export interface LicenseMetadataArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface LicenseProvisionalConfigurationArgs {
        maxTimeToLiveInMinutes: pulumi.Input<number>;
    }

    export interface LicenseValidityDateFormatArgs {
        /**
         * Validity begin date for the license.
         */
        begin: pulumi.Input<string>;
        /**
         * Validity begin date for the license.
         */
        end: pulumi.Input<string>;
    }
}

export namespace lightsail {
    /**
     * Describes the parameters of the database.
     */
    export interface DatabaseRelationalDatabaseParameterArgs {
        /**
         * Specifies the valid range of values for the parameter.
         */
        allowedValues?: pulumi.Input<string>;
        /**
         * Indicates when parameter updates are applied. Can be immediate or pending-reboot.
         */
        applyMethod?: pulumi.Input<string>;
        /**
         * Specifies the engine-specific parameter type.
         */
        applyType?: pulumi.Input<string>;
        /**
         * Specifies the valid data type for the parameter.
         */
        dataType?: pulumi.Input<string>;
        /**
         * Provides a description of the parameter.
         */
        description?: pulumi.Input<string>;
        /**
         * A Boolean value indicating whether the parameter can be modified.
         */
        isModifiable?: pulumi.Input<boolean>;
        /**
         * Specifies the name of the parameter.
         */
        parameterName?: pulumi.Input<string>;
        /**
         * Specifies the value of the parameter.
         */
        parameterValue?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface DatabaseTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * A addon associate with a resource.
     */
    export interface DiskAddOnArgs {
        /**
         * The add-on type
         */
        addOnType: pulumi.Input<string>;
        autoSnapshotAddOnRequest?: pulumi.Input<inputs.lightsail.DiskAutoSnapshotAddOnArgs>;
        /**
         * Status of the Addon
         */
        status?: pulumi.Input<enums.lightsail.DiskAddOnStatus>;
    }

    /**
     * An object that represents additional parameters when enabling or modifying the automatic snapshot add-on
     */
    export interface DiskAutoSnapshotAddOnArgs {
        /**
         * The daily time when an automatic snapshot will be created.
         */
        snapshotTimeOfDay?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface DiskTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value?: pulumi.Input<string>;
    }

    /**
     * A addon associate with a resource.
     */
    export interface InstanceAddOnArgs {
        /**
         * The add-on type
         */
        addOnType: pulumi.Input<string>;
        autoSnapshotAddOnRequest?: pulumi.Input<inputs.lightsail.InstanceAutoSnapshotAddOnArgs>;
        /**
         * Status of the Addon
         */
        status?: pulumi.Input<enums.lightsail.InstanceAddOnStatus>;
    }

    /**
     * An object that represents additional parameters when enabling or modifying the automatic snapshot add-on
     */
    export interface InstanceAutoSnapshotAddOnArgs {
        /**
         * The daily time when an automatic snapshot will be created.
         */
        snapshotTimeOfDay?: pulumi.Input<string>;
    }

    /**
     * Disk associated with the Instance.
     */
    export interface InstanceDiskArgs {
        /**
         * Instance attached to the disk.
         */
        attachedTo?: pulumi.Input<string>;
        /**
         * Attachment state of the disk.
         */
        attachmentState?: pulumi.Input<string>;
        /**
         * The names to use for your new Lightsail disk.
         */
        diskName: pulumi.Input<string>;
        /**
         * IOPS of disk.
         */
        iOPS?: pulumi.Input<number>;
        /**
         * Is the Attached disk is the system disk of the Instance.
         */
        isSystemDisk?: pulumi.Input<boolean>;
        /**
         * Path of the disk attached to the instance.
         */
        path: pulumi.Input<string>;
        /**
         * Size of the disk attached to the Instance.
         */
        sizeInGb?: pulumi.Input<string>;
    }

    /**
     * Hardware of the Instance.
     */
    export interface InstanceHardwareArgs {
        /**
         * CPU count of the Instance.
         */
        cpuCount?: pulumi.Input<number>;
        /**
         * Disks attached to the Instance.
         */
        disks?: pulumi.Input<pulumi.Input<inputs.lightsail.InstanceDiskArgs>[]>;
        /**
         * RAM Size of the Instance.
         */
        ramSizeInGb?: pulumi.Input<number>;
    }

    /**
     * Location of a resource.
     */
    export interface InstanceLocationArgs {
        /**
         * The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * The Region Name in which to create your instance.
         */
        regionName?: pulumi.Input<string>;
    }

    /**
     * Monthly Transfer of the Instance.
     */
    export interface InstanceMonthlyTransferArgs {
        /**
         * GbPerMonthAllocated of the Instance.
         */
        gbPerMonthAllocated?: pulumi.Input<string>;
    }

    /**
     * Networking of the Instance.
     */
    export interface InstanceNetworkingArgs {
        monthlyTransfer?: pulumi.Input<inputs.lightsail.InstanceMonthlyTransferArgs>;
        /**
         * Ports to the Instance.
         */
        ports: pulumi.Input<pulumi.Input<inputs.lightsail.InstancePortArgs>[]>;
    }

    /**
     * Port of the Instance.
     */
    export interface InstancePortArgs {
        /**
         * Access Direction for Protocol of the Instance(inbound/outbound).
         */
        accessDirection?: pulumi.Input<string>;
        /**
         * Access From Protocol of the Instance.
         */
        accessFrom?: pulumi.Input<string>;
        /**
         * Access Type Protocol of the Instance.
         */
        accessType?: pulumi.Input<string>;
        cidrListAliases?: pulumi.Input<pulumi.Input<string>[]>;
        cidrs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * CommonName for Protocol of the Instance.
         */
        commonName?: pulumi.Input<string>;
        /**
         * From Port of the Instance.
         */
        fromPort?: pulumi.Input<number>;
        ipv6Cidrs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Port Protocol of the Instance.
         */
        protocol?: pulumi.Input<string>;
        /**
         * To Port of the Instance.
         */
        toPort?: pulumi.Input<number>;
    }

    /**
     * Current State of the Instance.
     */
    export interface InstanceStateArgs {
        /**
         * Status code of the Instance.
         */
        code?: pulumi.Input<number>;
        /**
         * Status code of the Instance.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface InstanceTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value?: pulumi.Input<string>;
    }
}

export namespace location {
    export interface MapConfigurationArgs {
        style: pulumi.Input<string>;
    }

    export interface PlaceIndexDataSourceConfigurationArgs {
        intendedUse?: pulumi.Input<enums.location.PlaceIndexIntendedUse>;
    }
}

export namespace logs {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface LogGroupTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., :, /, =, +, - and @.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., :, /, =, +, - and @.
         */
        value: pulumi.Input<string>;
    }

    export interface MetricFilterMetricTransformationArgs {
        defaultValue?: pulumi.Input<number>;
        metricName: pulumi.Input<string>;
        metricNamespace: pulumi.Input<string>;
        metricValue: pulumi.Input<string>;
    }
}

export namespace lookoutequipment {
    /**
     * Specifies configuration information for the input data for the inference scheduler, including delimiter, format, and dataset location.
     */
    export interface DataInputConfigurationPropertiesArgs {
        inferenceInputNameConfiguration?: pulumi.Input<inputs.lookoutequipment.InferenceSchedulerInputNameConfigurationArgs>;
        /**
         * Indicates the difference between your time zone and Greenwich Mean Time (GMT).
         */
        inputTimeZoneOffset?: pulumi.Input<string>;
        s3InputConfiguration: pulumi.Input<inputs.lookoutequipment.InferenceSchedulerS3InputConfigurationArgs>;
    }

    /**
     * Specifies configuration information for the output results for the inference scheduler, including the S3 location for the output.
     */
    export interface DataOutputConfigurationPropertiesArgs {
        /**
         * The ID number for the AWS KMS key used to encrypt the inference output.
         */
        kmsKeyId?: pulumi.Input<string>;
        s3OutputConfiguration: pulumi.Input<inputs.lookoutequipment.InferenceSchedulerS3OutputConfigurationArgs>;
    }

    /**
     * Specifies configuration information for the input data for the inference, including timestamp format and delimiter.
     */
    export interface InferenceSchedulerInputNameConfigurationArgs {
        /**
         * Indicates the delimiter character used between items in the data.
         */
        componentTimestampDelimiter?: pulumi.Input<string>;
        /**
         * The format of the timestamp, whether Epoch time, or standard, with or without hyphens (-).
         */
        timestampFormat?: pulumi.Input<string>;
    }

    /**
     * Specifies configuration information for the input data for the inference, including input data S3 location.
     */
    export interface InferenceSchedulerS3InputConfigurationArgs {
        bucket: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
    }

    /**
     * Specifies configuration information for the output results from the inference, including output S3 location.
     */
    export interface InferenceSchedulerS3OutputConfigurationArgs {
        bucket: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
    }

    /**
     * A tag is a key-value pair that can be added to a resource as metadata.
     */
    export interface InferenceSchedulerTagArgs {
        /**
         * The key for the specified tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the specified tag.
         */
        value: pulumi.Input<string>;
    }
}

export namespace lookoutmetrics {
    export interface AlertActionArgs {
        lambdaConfiguration?: pulumi.Input<inputs.lookoutmetrics.AlertLambdaConfigurationArgs>;
        sNSConfiguration?: pulumi.Input<inputs.lookoutmetrics.AlertSNSConfigurationArgs>;
    }

    /**
     * Configuration options for a Lambda alert action.
     */
    export interface AlertLambdaConfigurationArgs {
        /**
         * ARN of a Lambda to send alert notifications to.
         */
        lambdaArn: pulumi.Input<string>;
        /**
         * ARN of an IAM role that LookoutMetrics should assume to access the Lambda function.
         */
        roleArn: pulumi.Input<string>;
    }

    /**
     * Configuration options for an SNS alert action.
     */
    export interface AlertSNSConfigurationArgs {
        /**
         * ARN of an IAM role that LookoutMetrics should assume to access the SNS topic.
         */
        roleArn: pulumi.Input<string>;
        /**
         * ARN of an SNS topic to send alert notifications to.
         */
        snsTopicArn: pulumi.Input<string>;
    }

    export interface AnomalyDetectorAppFlowConfigArgs {
        flowName: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface AnomalyDetectorCloudwatchConfigArgs {
        roleArn: pulumi.Input<string>;
    }

    export interface AnomalyDetectorConfigArgs {
        /**
         * Frequency of anomaly detection
         */
        anomalyDetectorFrequency: pulumi.Input<enums.lookoutmetrics.AnomalyDetectorFrequency>;
    }

    export interface AnomalyDetectorCsvFormatDescriptorArgs {
        charset?: pulumi.Input<string>;
        containsHeader?: pulumi.Input<boolean>;
        delimiter?: pulumi.Input<string>;
        fileCompression?: pulumi.Input<enums.lookoutmetrics.AnomalyDetectorCsvFormatDescriptorFileCompression>;
        headerList?: pulumi.Input<pulumi.Input<string>[]>;
        quoteSymbol?: pulumi.Input<string>;
    }

    export interface AnomalyDetectorFileFormatDescriptorArgs {
        csvFormatDescriptor?: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorCsvFormatDescriptorArgs>;
        jsonFormatDescriptor?: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorJsonFormatDescriptorArgs>;
    }

    export interface AnomalyDetectorJsonFormatDescriptorArgs {
        charset?: pulumi.Input<string>;
        fileCompression?: pulumi.Input<enums.lookoutmetrics.AnomalyDetectorJsonFormatDescriptorFileCompression>;
    }

    export interface AnomalyDetectorMetricArgs {
        /**
         * Operator used to aggregate metric values
         */
        aggregationFunction: pulumi.Input<enums.lookoutmetrics.AnomalyDetectorMetricAggregationFunction>;
        metricName: pulumi.Input<string>;
        namespace?: pulumi.Input<string>;
    }

    export interface AnomalyDetectorMetricSetArgs {
        /**
         * Dimensions for this MetricSet.
         */
        dimensionList?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Metrics captured by this MetricSet.
         */
        metricList: pulumi.Input<pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorMetricArgs>[]>;
        /**
         * A description for the MetricSet.
         */
        metricSetDescription?: pulumi.Input<string>;
        /**
         * A frequency period to aggregate the data
         */
        metricSetFrequency?: pulumi.Input<enums.lookoutmetrics.AnomalyDetectorMetricSetMetricSetFrequency>;
        /**
         * The name of the MetricSet.
         */
        metricSetName: pulumi.Input<string>;
        metricSource: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorMetricSourceArgs>;
        /**
         * Offset, in seconds, between the frequency interval and the time at which the metrics are available.
         */
        offset?: pulumi.Input<number>;
        timestampColumn?: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorTimestampColumnArgs>;
        timezone?: pulumi.Input<string>;
    }

    export interface AnomalyDetectorMetricSourceArgs {
        appFlowConfig?: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorAppFlowConfigArgs>;
        cloudwatchConfig?: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorCloudwatchConfigArgs>;
        rDSSourceConfig?: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorRDSSourceConfigArgs>;
        redshiftSourceConfig?: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorRedshiftSourceConfigArgs>;
        s3SourceConfig?: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorS3SourceConfigArgs>;
    }

    export interface AnomalyDetectorRDSSourceConfigArgs {
        dBInstanceIdentifier: pulumi.Input<string>;
        databaseHost: pulumi.Input<string>;
        databaseName: pulumi.Input<string>;
        databasePort: pulumi.Input<number>;
        roleArn: pulumi.Input<string>;
        secretManagerArn: pulumi.Input<string>;
        tableName: pulumi.Input<string>;
        vpcConfiguration: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorVpcConfigurationArgs>;
    }

    export interface AnomalyDetectorRedshiftSourceConfigArgs {
        clusterIdentifier: pulumi.Input<string>;
        databaseHost: pulumi.Input<string>;
        databaseName: pulumi.Input<string>;
        databasePort: pulumi.Input<number>;
        roleArn: pulumi.Input<string>;
        secretManagerArn: pulumi.Input<string>;
        tableName: pulumi.Input<string>;
        vpcConfiguration: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorVpcConfigurationArgs>;
    }

    export interface AnomalyDetectorS3SourceConfigArgs {
        fileFormatDescriptor: pulumi.Input<inputs.lookoutmetrics.AnomalyDetectorFileFormatDescriptorArgs>;
        historicalDataPathList?: pulumi.Input<pulumi.Input<string>[]>;
        roleArn: pulumi.Input<string>;
        templatedPathList?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AnomalyDetectorTimestampColumnArgs {
        /**
         * A timestamp format for the timestamps in the dataset
         */
        columnFormat?: pulumi.Input<string>;
        columnName?: pulumi.Input<string>;
    }

    export interface AnomalyDetectorVpcConfigurationArgs {
        securityGroupIdList: pulumi.Input<pulumi.Input<string>[]>;
        subnetIdList: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace macie {
    /**
     * Map of filter criteria.
     */
    export interface FindingsFilterCriterionArgs {
    }

    export interface FindingsFilterFindingCriteriaArgs {
        criterion?: pulumi.Input<inputs.macie.FindingsFilterCriterionArgs>;
    }

}

export namespace managedblockchain {
    export interface MemberApprovalThresholdPolicyArgs {
        proposalDurationInHours?: pulumi.Input<number>;
        thresholdComparator?: pulumi.Input<string>;
        thresholdPercentage?: pulumi.Input<number>;
    }

    export interface MemberConfigurationArgs {
        description?: pulumi.Input<string>;
        memberFrameworkConfiguration?: pulumi.Input<inputs.managedblockchain.MemberFrameworkConfigurationArgs>;
        name: pulumi.Input<string>;
    }

    export interface MemberFabricConfigurationArgs {
        adminPassword: pulumi.Input<string>;
        adminUsername: pulumi.Input<string>;
    }

    export interface MemberFrameworkConfigurationArgs {
        memberFabricConfiguration?: pulumi.Input<inputs.managedblockchain.MemberFabricConfigurationArgs>;
    }

    export interface MemberNetworkConfigurationArgs {
        description?: pulumi.Input<string>;
        framework: pulumi.Input<string>;
        frameworkVersion: pulumi.Input<string>;
        name: pulumi.Input<string>;
        networkFrameworkConfiguration?: pulumi.Input<inputs.managedblockchain.MemberNetworkFrameworkConfigurationArgs>;
        votingPolicy: pulumi.Input<inputs.managedblockchain.MemberVotingPolicyArgs>;
    }

    export interface MemberNetworkFabricConfigurationArgs {
        edition: pulumi.Input<string>;
    }

    export interface MemberNetworkFrameworkConfigurationArgs {
        networkFabricConfiguration?: pulumi.Input<inputs.managedblockchain.MemberNetworkFabricConfigurationArgs>;
    }

    export interface MemberVotingPolicyArgs {
        approvalThresholdPolicy?: pulumi.Input<inputs.managedblockchain.MemberApprovalThresholdPolicyArgs>;
    }

    export interface NodeConfigurationArgs {
        availabilityZone: pulumi.Input<string>;
        instanceType: pulumi.Input<string>;
    }
}

export namespace mediaconnect {
    /**
     * Information about the encryption of the flow.
     */
    export interface FlowEncryptionArgs {
        /**
         * The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
         */
        algorithm?: pulumi.Input<enums.mediaconnect.FlowEncryptionAlgorithm>;
        /**
         * A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.
         */
        constantInitializationVector?: pulumi.Input<string>;
        /**
         * The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        deviceId?: pulumi.Input<string>;
        /**
         * The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
         */
        keyType?: pulumi.Input<enums.mediaconnect.FlowEncryptionKeyType>;
        /**
         * The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        region?: pulumi.Input<string>;
        /**
         * An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        resourceId?: pulumi.Input<string>;
        /**
         * The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
         */
        roleArn: pulumi.Input<string>;
        /**
         *  The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
         */
        secretArn?: pulumi.Input<string>;
        /**
         * The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        url?: pulumi.Input<string>;
    }

    /**
     * Information about the encryption of the flow.
     */
    export interface FlowEntitlementEncryptionArgs {
        /**
         * The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
         */
        algorithm: pulumi.Input<enums.mediaconnect.FlowEntitlementEncryptionAlgorithm>;
        /**
         * A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.
         */
        constantInitializationVector?: pulumi.Input<string>;
        /**
         * The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        deviceId?: pulumi.Input<string>;
        /**
         * The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
         */
        keyType?: pulumi.Input<enums.mediaconnect.FlowEntitlementEncryptionKeyType>;
        /**
         * The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        region?: pulumi.Input<string>;
        /**
         * An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        resourceId?: pulumi.Input<string>;
        /**
         * The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
         */
        roleArn: pulumi.Input<string>;
        /**
         *  The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
         */
        secretArn?: pulumi.Input<string>;
        /**
         * The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        url?: pulumi.Input<string>;
    }

    /**
     * The settings for source failover
     */
    export interface FlowFailoverConfigArgs {
        /**
         * Search window time to look for dash-7 packets
         */
        recoveryWindow?: pulumi.Input<number>;
        state?: pulumi.Input<enums.mediaconnect.FlowFailoverConfigState>;
    }

    /**
     * Information about the encryption of the flow.
     */
    export interface FlowOutputEncryptionArgs {
        /**
         * The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
         */
        algorithm?: pulumi.Input<enums.mediaconnect.FlowOutputEncryptionAlgorithm>;
        /**
         * The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
         */
        keyType?: pulumi.Input<enums.mediaconnect.FlowOutputEncryptionKeyType>;
        /**
         * The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
         */
        roleArn: pulumi.Input<string>;
        /**
         *  The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
         */
        secretArn: pulumi.Input<string>;
    }

    /**
     * The settings for attaching a VPC interface to an output.
     */
    export interface FlowOutputVpcInterfaceAttachmentArgs {
        /**
         * The name of the VPC interface to use for this output.
         */
        vpcInterfaceName?: pulumi.Input<string>;
    }

    /**
     * The settings for the source of the flow.
     */
    export interface FlowSourceArgs {
        /**
         * The type of decryption that is used on the content ingested from this source.
         */
        decryption?: pulumi.Input<inputs.mediaconnect.FlowEncryptionArgs>;
        /**
         * A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
         */
        description?: pulumi.Input<string>;
        /**
         * The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.
         */
        entitlementArn?: pulumi.Input<string>;
        /**
         * The IP address that the flow will be listening on for incoming content.
         */
        ingestIp?: pulumi.Input<string>;
        /**
         * The port that the flow will be listening on for incoming content.
         */
        ingestPort?: pulumi.Input<number>;
        /**
         * The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
         */
        maxBitrate?: pulumi.Input<number>;
        /**
         * The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
         */
        maxLatency?: pulumi.Input<number>;
        /**
         * The minimum latency in milliseconds.
         */
        minLatency?: pulumi.Input<number>;
        /**
         * The name of the source.
         */
        name?: pulumi.Input<string>;
        /**
         * The protocol that is used by the source or output.
         */
        protocol?: pulumi.Input<enums.mediaconnect.FlowSourceProtocol>;
        /**
         * The ARN of the source.
         */
        sourceArn?: pulumi.Input<string>;
        /**
         * The port that the flow will be listening on for incoming content.(ReadOnly)
         */
        sourceIngestPort?: pulumi.Input<string>;
        /**
         * The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
         */
        streamId?: pulumi.Input<string>;
        /**
         * The name of the VPC Interface this Source is configured with.
         */
        vpcInterfaceName?: pulumi.Input<string>;
        /**
         * The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
         */
        whitelistCidr?: pulumi.Input<string>;
    }

    /**
     * Information about the encryption of the flow.
     */
    export interface FlowSourceEncryptionArgs {
        /**
         * The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
         */
        algorithm: pulumi.Input<enums.mediaconnect.FlowSourceEncryptionAlgorithm>;
        /**
         * A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.
         */
        constantInitializationVector?: pulumi.Input<string>;
        /**
         * The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        deviceId?: pulumi.Input<string>;
        /**
         * The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
         */
        keyType?: pulumi.Input<enums.mediaconnect.FlowSourceEncryptionKeyType>;
        /**
         * The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        region?: pulumi.Input<string>;
        /**
         * An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        resourceId?: pulumi.Input<string>;
        /**
         * The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
         */
        roleArn: pulumi.Input<string>;
        /**
         *  The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
         */
        secretArn?: pulumi.Input<string>;
        /**
         * The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
         */
        url?: pulumi.Input<string>;
    }
}

export namespace mediaconvert {
    export interface JobTemplateAccelerationSettingsArgs {
        mode: pulumi.Input<string>;
    }

    export interface JobTemplateHopDestinationArgs {
        priority?: pulumi.Input<number>;
        queue?: pulumi.Input<string>;
        waitMinutes?: pulumi.Input<number>;
    }
}

export namespace medialive {
    export interface ChannelAacSettingsArgs {
        bitrate?: pulumi.Input<number>;
        codingMode?: pulumi.Input<string>;
        inputType?: pulumi.Input<string>;
        profile?: pulumi.Input<string>;
        rateControlMode?: pulumi.Input<string>;
        rawFormat?: pulumi.Input<string>;
        sampleRate?: pulumi.Input<number>;
        spec?: pulumi.Input<string>;
        vbrQuality?: pulumi.Input<string>;
    }

    export interface ChannelAc3SettingsArgs {
        bitrate?: pulumi.Input<number>;
        bitstreamMode?: pulumi.Input<string>;
        codingMode?: pulumi.Input<string>;
        dialnorm?: pulumi.Input<number>;
        drcProfile?: pulumi.Input<string>;
        lfeFilter?: pulumi.Input<string>;
        metadataControl?: pulumi.Input<string>;
    }

    export interface ChannelAncillarySourceSettingsArgs {
        sourceAncillaryChannelNumber?: pulumi.Input<number>;
    }

    export interface ChannelArchiveCdnSettingsArgs {
        archiveS3Settings?: pulumi.Input<inputs.medialive.ChannelArchiveS3SettingsArgs>;
    }

    export interface ChannelArchiveContainerSettingsArgs {
        m2tsSettings?: pulumi.Input<inputs.medialive.ChannelM2tsSettingsArgs>;
        rawSettings?: pulumi.Input<inputs.medialive.ChannelRawSettingsArgs>;
    }

    export interface ChannelArchiveGroupSettingsArgs {
        archiveCdnSettings?: pulumi.Input<inputs.medialive.ChannelArchiveCdnSettingsArgs>;
        destination?: pulumi.Input<inputs.medialive.ChannelOutputLocationRefArgs>;
        rolloverInterval?: pulumi.Input<number>;
    }

    export interface ChannelArchiveOutputSettingsArgs {
        containerSettings?: pulumi.Input<inputs.medialive.ChannelArchiveContainerSettingsArgs>;
        extension?: pulumi.Input<string>;
        nameModifier?: pulumi.Input<string>;
    }

    export interface ChannelArchiveS3SettingsArgs {
        cannedAcl?: pulumi.Input<string>;
    }

    export interface ChannelAribDestinationSettingsArgs {
    }

    export interface ChannelAribSourceSettingsArgs {
    }

    export interface ChannelAudioChannelMappingArgs {
        inputChannelLevels?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelInputChannelLevelArgs>[]>;
        outputChannel?: pulumi.Input<number>;
    }

    export interface ChannelAudioCodecSettingsArgs {
        aacSettings?: pulumi.Input<inputs.medialive.ChannelAacSettingsArgs>;
        ac3Settings?: pulumi.Input<inputs.medialive.ChannelAc3SettingsArgs>;
        eac3Settings?: pulumi.Input<inputs.medialive.ChannelEac3SettingsArgs>;
        mp2Settings?: pulumi.Input<inputs.medialive.ChannelMp2SettingsArgs>;
        passThroughSettings?: pulumi.Input<inputs.medialive.ChannelPassThroughSettingsArgs>;
        wavSettings?: pulumi.Input<inputs.medialive.ChannelWavSettingsArgs>;
    }

    export interface ChannelAudioDescriptionArgs {
        audioNormalizationSettings?: pulumi.Input<inputs.medialive.ChannelAudioNormalizationSettingsArgs>;
        audioSelectorName?: pulumi.Input<string>;
        audioType?: pulumi.Input<string>;
        audioTypeControl?: pulumi.Input<string>;
        audioWatermarkingSettings?: pulumi.Input<inputs.medialive.ChannelAudioWatermarkSettingsArgs>;
        codecSettings?: pulumi.Input<inputs.medialive.ChannelAudioCodecSettingsArgs>;
        languageCode?: pulumi.Input<string>;
        languageCodeControl?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        remixSettings?: pulumi.Input<inputs.medialive.ChannelRemixSettingsArgs>;
        streamName?: pulumi.Input<string>;
    }

    export interface ChannelAudioHlsRenditionSelectionArgs {
        groupId?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface ChannelAudioLanguageSelectionArgs {
        languageCode?: pulumi.Input<string>;
        languageSelectionPolicy?: pulumi.Input<string>;
    }

    export interface ChannelAudioNormalizationSettingsArgs {
        algorithm?: pulumi.Input<string>;
        algorithmControl?: pulumi.Input<string>;
        targetLkfs?: pulumi.Input<number>;
    }

    export interface ChannelAudioOnlyHlsSettingsArgs {
        audioGroupId?: pulumi.Input<string>;
        audioOnlyImage?: pulumi.Input<inputs.medialive.ChannelInputLocationArgs>;
        audioTrackType?: pulumi.Input<string>;
        segmentType?: pulumi.Input<string>;
    }

    export interface ChannelAudioPidSelectionArgs {
        pid?: pulumi.Input<number>;
    }

    export interface ChannelAudioSelectorArgs {
        name?: pulumi.Input<string>;
        selectorSettings?: pulumi.Input<inputs.medialive.ChannelAudioSelectorSettingsArgs>;
    }

    export interface ChannelAudioSelectorSettingsArgs {
        audioHlsRenditionSelection?: pulumi.Input<inputs.medialive.ChannelAudioHlsRenditionSelectionArgs>;
        audioLanguageSelection?: pulumi.Input<inputs.medialive.ChannelAudioLanguageSelectionArgs>;
        audioPidSelection?: pulumi.Input<inputs.medialive.ChannelAudioPidSelectionArgs>;
        audioTrackSelection?: pulumi.Input<inputs.medialive.ChannelAudioTrackSelectionArgs>;
    }

    export interface ChannelAudioSilenceFailoverSettingsArgs {
        audioSelectorName?: pulumi.Input<string>;
        audioSilenceThresholdMsec?: pulumi.Input<number>;
    }

    export interface ChannelAudioTrackArgs {
        track?: pulumi.Input<number>;
    }

    export interface ChannelAudioTrackSelectionArgs {
        tracks?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelAudioTrackArgs>[]>;
    }

    export interface ChannelAudioWatermarkSettingsArgs {
        nielsenWatermarksSettings?: pulumi.Input<inputs.medialive.ChannelNielsenWatermarksSettingsArgs>;
    }

    export interface ChannelAutomaticInputFailoverSettingsArgs {
        errorClearTimeMsec?: pulumi.Input<number>;
        failoverConditions?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelFailoverConditionArgs>[]>;
        inputPreference?: pulumi.Input<string>;
        secondaryInputId?: pulumi.Input<string>;
    }

    export interface ChannelAvailBlankingArgs {
        availBlankingImage?: pulumi.Input<inputs.medialive.ChannelInputLocationArgs>;
        state?: pulumi.Input<string>;
    }

    export interface ChannelAvailConfigurationArgs {
        availSettings?: pulumi.Input<inputs.medialive.ChannelAvailSettingsArgs>;
    }

    export interface ChannelAvailSettingsArgs {
        scte35SpliceInsert?: pulumi.Input<inputs.medialive.ChannelScte35SpliceInsertArgs>;
        scte35TimeSignalApos?: pulumi.Input<inputs.medialive.ChannelScte35TimeSignalAposArgs>;
    }

    export interface ChannelBlackoutSlateArgs {
        blackoutSlateImage?: pulumi.Input<inputs.medialive.ChannelInputLocationArgs>;
        networkEndBlackout?: pulumi.Input<string>;
        networkEndBlackoutImage?: pulumi.Input<inputs.medialive.ChannelInputLocationArgs>;
        networkId?: pulumi.Input<string>;
        state?: pulumi.Input<string>;
    }

    export interface ChannelBurnInDestinationSettingsArgs {
        alignment?: pulumi.Input<string>;
        backgroundColor?: pulumi.Input<string>;
        backgroundOpacity?: pulumi.Input<number>;
        font?: pulumi.Input<inputs.medialive.ChannelInputLocationArgs>;
        fontColor?: pulumi.Input<string>;
        fontOpacity?: pulumi.Input<number>;
        fontResolution?: pulumi.Input<number>;
        fontSize?: pulumi.Input<string>;
        outlineColor?: pulumi.Input<string>;
        outlineSize?: pulumi.Input<number>;
        shadowColor?: pulumi.Input<string>;
        shadowOpacity?: pulumi.Input<number>;
        shadowXOffset?: pulumi.Input<number>;
        shadowYOffset?: pulumi.Input<number>;
        teletextGridControl?: pulumi.Input<string>;
        xPosition?: pulumi.Input<number>;
        yPosition?: pulumi.Input<number>;
    }

    export interface ChannelCaptionDescriptionArgs {
        captionSelectorName?: pulumi.Input<string>;
        destinationSettings?: pulumi.Input<inputs.medialive.ChannelCaptionDestinationSettingsArgs>;
        languageCode?: pulumi.Input<string>;
        languageDescription?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface ChannelCaptionDestinationSettingsArgs {
        aribDestinationSettings?: pulumi.Input<inputs.medialive.ChannelAribDestinationSettingsArgs>;
        burnInDestinationSettings?: pulumi.Input<inputs.medialive.ChannelBurnInDestinationSettingsArgs>;
        dvbSubDestinationSettings?: pulumi.Input<inputs.medialive.ChannelDvbSubDestinationSettingsArgs>;
        ebuTtDDestinationSettings?: pulumi.Input<inputs.medialive.ChannelEbuTtDDestinationSettingsArgs>;
        embeddedDestinationSettings?: pulumi.Input<inputs.medialive.ChannelEmbeddedDestinationSettingsArgs>;
        embeddedPlusScte20DestinationSettings?: pulumi.Input<inputs.medialive.ChannelEmbeddedPlusScte20DestinationSettingsArgs>;
        rtmpCaptionInfoDestinationSettings?: pulumi.Input<inputs.medialive.ChannelRtmpCaptionInfoDestinationSettingsArgs>;
        scte20PlusEmbeddedDestinationSettings?: pulumi.Input<inputs.medialive.ChannelScte20PlusEmbeddedDestinationSettingsArgs>;
        scte27DestinationSettings?: pulumi.Input<inputs.medialive.ChannelScte27DestinationSettingsArgs>;
        smpteTtDestinationSettings?: pulumi.Input<inputs.medialive.ChannelSmpteTtDestinationSettingsArgs>;
        teletextDestinationSettings?: pulumi.Input<inputs.medialive.ChannelTeletextDestinationSettingsArgs>;
        ttmlDestinationSettings?: pulumi.Input<inputs.medialive.ChannelTtmlDestinationSettingsArgs>;
        webvttDestinationSettings?: pulumi.Input<inputs.medialive.ChannelWebvttDestinationSettingsArgs>;
    }

    export interface ChannelCaptionLanguageMappingArgs {
        captionChannel?: pulumi.Input<number>;
        languageCode?: pulumi.Input<string>;
        languageDescription?: pulumi.Input<string>;
    }

    export interface ChannelCaptionRectangleArgs {
        height?: pulumi.Input<number>;
        leftOffset?: pulumi.Input<number>;
        topOffset?: pulumi.Input<number>;
        width?: pulumi.Input<number>;
    }

    export interface ChannelCaptionSelectorArgs {
        languageCode?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        selectorSettings?: pulumi.Input<inputs.medialive.ChannelCaptionSelectorSettingsArgs>;
    }

    export interface ChannelCaptionSelectorSettingsArgs {
        ancillarySourceSettings?: pulumi.Input<inputs.medialive.ChannelAncillarySourceSettingsArgs>;
        aribSourceSettings?: pulumi.Input<inputs.medialive.ChannelAribSourceSettingsArgs>;
        dvbSubSourceSettings?: pulumi.Input<inputs.medialive.ChannelDvbSubSourceSettingsArgs>;
        embeddedSourceSettings?: pulumi.Input<inputs.medialive.ChannelEmbeddedSourceSettingsArgs>;
        scte20SourceSettings?: pulumi.Input<inputs.medialive.ChannelScte20SourceSettingsArgs>;
        scte27SourceSettings?: pulumi.Input<inputs.medialive.ChannelScte27SourceSettingsArgs>;
        teletextSourceSettings?: pulumi.Input<inputs.medialive.ChannelTeletextSourceSettingsArgs>;
    }

    export interface ChannelCdiInputSpecificationArgs {
        resolution?: pulumi.Input<string>;
    }

    export interface ChannelColorSpacePassthroughSettingsArgs {
    }

    export interface ChannelDvbNitSettingsArgs {
        networkId?: pulumi.Input<number>;
        networkName?: pulumi.Input<string>;
        repInterval?: pulumi.Input<number>;
    }

    export interface ChannelDvbSdtSettingsArgs {
        outputSdt?: pulumi.Input<string>;
        repInterval?: pulumi.Input<number>;
        serviceName?: pulumi.Input<string>;
        serviceProviderName?: pulumi.Input<string>;
    }

    export interface ChannelDvbSubDestinationSettingsArgs {
        alignment?: pulumi.Input<string>;
        backgroundColor?: pulumi.Input<string>;
        backgroundOpacity?: pulumi.Input<number>;
        font?: pulumi.Input<inputs.medialive.ChannelInputLocationArgs>;
        fontColor?: pulumi.Input<string>;
        fontOpacity?: pulumi.Input<number>;
        fontResolution?: pulumi.Input<number>;
        fontSize?: pulumi.Input<string>;
        outlineColor?: pulumi.Input<string>;
        outlineSize?: pulumi.Input<number>;
        shadowColor?: pulumi.Input<string>;
        shadowOpacity?: pulumi.Input<number>;
        shadowXOffset?: pulumi.Input<number>;
        shadowYOffset?: pulumi.Input<number>;
        teletextGridControl?: pulumi.Input<string>;
        xPosition?: pulumi.Input<number>;
        yPosition?: pulumi.Input<number>;
    }

    export interface ChannelDvbSubSourceSettingsArgs {
        ocrLanguage?: pulumi.Input<string>;
        pid?: pulumi.Input<number>;
    }

    export interface ChannelDvbTdtSettingsArgs {
        repInterval?: pulumi.Input<number>;
    }

    export interface ChannelEac3SettingsArgs {
        attenuationControl?: pulumi.Input<string>;
        bitrate?: pulumi.Input<number>;
        bitstreamMode?: pulumi.Input<string>;
        codingMode?: pulumi.Input<string>;
        dcFilter?: pulumi.Input<string>;
        dialnorm?: pulumi.Input<number>;
        drcLine?: pulumi.Input<string>;
        drcRf?: pulumi.Input<string>;
        lfeControl?: pulumi.Input<string>;
        lfeFilter?: pulumi.Input<string>;
        loRoCenterMixLevel?: pulumi.Input<number>;
        loRoSurroundMixLevel?: pulumi.Input<number>;
        ltRtCenterMixLevel?: pulumi.Input<number>;
        ltRtSurroundMixLevel?: pulumi.Input<number>;
        metadataControl?: pulumi.Input<string>;
        passthroughControl?: pulumi.Input<string>;
        phaseControl?: pulumi.Input<string>;
        stereoDownmix?: pulumi.Input<string>;
        surroundExMode?: pulumi.Input<string>;
        surroundMode?: pulumi.Input<string>;
    }

    export interface ChannelEbuTtDDestinationSettingsArgs {
        copyrightHolder?: pulumi.Input<string>;
        fillLineGap?: pulumi.Input<string>;
        fontFamily?: pulumi.Input<string>;
        styleControl?: pulumi.Input<string>;
    }

    export interface ChannelEmbeddedDestinationSettingsArgs {
    }

    export interface ChannelEmbeddedPlusScte20DestinationSettingsArgs {
    }

    export interface ChannelEmbeddedSourceSettingsArgs {
        convert608To708?: pulumi.Input<string>;
        scte20Detection?: pulumi.Input<string>;
        source608ChannelNumber?: pulumi.Input<number>;
        source608TrackNumber?: pulumi.Input<number>;
    }

    export interface ChannelEncoderSettingsArgs {
        audioDescriptions?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelAudioDescriptionArgs>[]>;
        availBlanking?: pulumi.Input<inputs.medialive.ChannelAvailBlankingArgs>;
        availConfiguration?: pulumi.Input<inputs.medialive.ChannelAvailConfigurationArgs>;
        blackoutSlate?: pulumi.Input<inputs.medialive.ChannelBlackoutSlateArgs>;
        captionDescriptions?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelCaptionDescriptionArgs>[]>;
        featureActivations?: pulumi.Input<inputs.medialive.ChannelFeatureActivationsArgs>;
        globalConfiguration?: pulumi.Input<inputs.medialive.ChannelGlobalConfigurationArgs>;
        motionGraphicsConfiguration?: pulumi.Input<inputs.medialive.ChannelMotionGraphicsConfigurationArgs>;
        nielsenConfiguration?: pulumi.Input<inputs.medialive.ChannelNielsenConfigurationArgs>;
        outputGroups?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelOutputGroupArgs>[]>;
        timecodeConfig?: pulumi.Input<inputs.medialive.ChannelTimecodeConfigArgs>;
        videoDescriptions?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelVideoDescriptionArgs>[]>;
    }

    export interface ChannelFailoverConditionArgs {
        failoverConditionSettings?: pulumi.Input<inputs.medialive.ChannelFailoverConditionSettingsArgs>;
    }

    export interface ChannelFailoverConditionSettingsArgs {
        audioSilenceSettings?: pulumi.Input<inputs.medialive.ChannelAudioSilenceFailoverSettingsArgs>;
        inputLossSettings?: pulumi.Input<inputs.medialive.ChannelInputLossFailoverSettingsArgs>;
        videoBlackSettings?: pulumi.Input<inputs.medialive.ChannelVideoBlackFailoverSettingsArgs>;
    }

    export interface ChannelFeatureActivationsArgs {
        inputPrepareScheduleActions?: pulumi.Input<string>;
    }

    export interface ChannelFecOutputSettingsArgs {
        columnDepth?: pulumi.Input<number>;
        includeFec?: pulumi.Input<string>;
        rowLength?: pulumi.Input<number>;
    }

    export interface ChannelFmp4HlsSettingsArgs {
        audioRenditionSets?: pulumi.Input<string>;
        nielsenId3Behavior?: pulumi.Input<string>;
        timedMetadataBehavior?: pulumi.Input<string>;
    }

    export interface ChannelFrameCaptureCdnSettingsArgs {
        frameCaptureS3Settings?: pulumi.Input<inputs.medialive.ChannelFrameCaptureS3SettingsArgs>;
    }

    export interface ChannelFrameCaptureGroupSettingsArgs {
        destination?: pulumi.Input<inputs.medialive.ChannelOutputLocationRefArgs>;
        frameCaptureCdnSettings?: pulumi.Input<inputs.medialive.ChannelFrameCaptureCdnSettingsArgs>;
    }

    export interface ChannelFrameCaptureHlsSettingsArgs {
    }

    export interface ChannelFrameCaptureOutputSettingsArgs {
        nameModifier?: pulumi.Input<string>;
    }

    export interface ChannelFrameCaptureS3SettingsArgs {
        cannedAcl?: pulumi.Input<string>;
    }

    export interface ChannelFrameCaptureSettingsArgs {
        captureInterval?: pulumi.Input<number>;
        captureIntervalUnits?: pulumi.Input<string>;
    }

    export interface ChannelGlobalConfigurationArgs {
        initialAudioGain?: pulumi.Input<number>;
        inputEndAction?: pulumi.Input<string>;
        inputLossBehavior?: pulumi.Input<inputs.medialive.ChannelInputLossBehaviorArgs>;
        outputLockingMode?: pulumi.Input<string>;
        outputTimingSource?: pulumi.Input<string>;
        supportLowFramerateInputs?: pulumi.Input<string>;
    }

    export interface ChannelH264ColorSpaceSettingsArgs {
        colorSpacePassthroughSettings?: pulumi.Input<inputs.medialive.ChannelColorSpacePassthroughSettingsArgs>;
        rec601Settings?: pulumi.Input<inputs.medialive.ChannelRec601SettingsArgs>;
        rec709Settings?: pulumi.Input<inputs.medialive.ChannelRec709SettingsArgs>;
    }

    export interface ChannelH264FilterSettingsArgs {
        temporalFilterSettings?: pulumi.Input<inputs.medialive.ChannelTemporalFilterSettingsArgs>;
    }

    export interface ChannelH264SettingsArgs {
        adaptiveQuantization?: pulumi.Input<string>;
        afdSignaling?: pulumi.Input<string>;
        bitrate?: pulumi.Input<number>;
        bufFillPct?: pulumi.Input<number>;
        bufSize?: pulumi.Input<number>;
        colorMetadata?: pulumi.Input<string>;
        colorSpaceSettings?: pulumi.Input<inputs.medialive.ChannelH264ColorSpaceSettingsArgs>;
        entropyEncoding?: pulumi.Input<string>;
        filterSettings?: pulumi.Input<inputs.medialive.ChannelH264FilterSettingsArgs>;
        fixedAfd?: pulumi.Input<string>;
        flickerAq?: pulumi.Input<string>;
        forceFieldPictures?: pulumi.Input<string>;
        framerateControl?: pulumi.Input<string>;
        framerateDenominator?: pulumi.Input<number>;
        framerateNumerator?: pulumi.Input<number>;
        gopBReference?: pulumi.Input<string>;
        gopClosedCadence?: pulumi.Input<number>;
        gopNumBFrames?: pulumi.Input<number>;
        gopSize?: pulumi.Input<number>;
        gopSizeUnits?: pulumi.Input<string>;
        level?: pulumi.Input<string>;
        lookAheadRateControl?: pulumi.Input<string>;
        maxBitrate?: pulumi.Input<number>;
        minIInterval?: pulumi.Input<number>;
        numRefFrames?: pulumi.Input<number>;
        parControl?: pulumi.Input<string>;
        parDenominator?: pulumi.Input<number>;
        parNumerator?: pulumi.Input<number>;
        profile?: pulumi.Input<string>;
        qualityLevel?: pulumi.Input<string>;
        qvbrQualityLevel?: pulumi.Input<number>;
        rateControlMode?: pulumi.Input<string>;
        scanType?: pulumi.Input<string>;
        sceneChangeDetect?: pulumi.Input<string>;
        slices?: pulumi.Input<number>;
        softness?: pulumi.Input<number>;
        spatialAq?: pulumi.Input<string>;
        subgopLength?: pulumi.Input<string>;
        syntax?: pulumi.Input<string>;
        temporalAq?: pulumi.Input<string>;
        timecodeInsertion?: pulumi.Input<string>;
    }

    export interface ChannelH265ColorSpaceSettingsArgs {
        colorSpacePassthroughSettings?: pulumi.Input<inputs.medialive.ChannelColorSpacePassthroughSettingsArgs>;
        hdr10Settings?: pulumi.Input<inputs.medialive.ChannelHdr10SettingsArgs>;
        rec601Settings?: pulumi.Input<inputs.medialive.ChannelRec601SettingsArgs>;
        rec709Settings?: pulumi.Input<inputs.medialive.ChannelRec709SettingsArgs>;
    }

    export interface ChannelH265FilterSettingsArgs {
        temporalFilterSettings?: pulumi.Input<inputs.medialive.ChannelTemporalFilterSettingsArgs>;
    }

    export interface ChannelH265SettingsArgs {
        adaptiveQuantization?: pulumi.Input<string>;
        afdSignaling?: pulumi.Input<string>;
        alternativeTransferFunction?: pulumi.Input<string>;
        bitrate?: pulumi.Input<number>;
        bufSize?: pulumi.Input<number>;
        colorMetadata?: pulumi.Input<string>;
        colorSpaceSettings?: pulumi.Input<inputs.medialive.ChannelH265ColorSpaceSettingsArgs>;
        filterSettings?: pulumi.Input<inputs.medialive.ChannelH265FilterSettingsArgs>;
        fixedAfd?: pulumi.Input<string>;
        flickerAq?: pulumi.Input<string>;
        framerateDenominator?: pulumi.Input<number>;
        framerateNumerator?: pulumi.Input<number>;
        gopClosedCadence?: pulumi.Input<number>;
        gopSize?: pulumi.Input<number>;
        gopSizeUnits?: pulumi.Input<string>;
        level?: pulumi.Input<string>;
        lookAheadRateControl?: pulumi.Input<string>;
        maxBitrate?: pulumi.Input<number>;
        minIInterval?: pulumi.Input<number>;
        parDenominator?: pulumi.Input<number>;
        parNumerator?: pulumi.Input<number>;
        profile?: pulumi.Input<string>;
        qvbrQualityLevel?: pulumi.Input<number>;
        rateControlMode?: pulumi.Input<string>;
        scanType?: pulumi.Input<string>;
        sceneChangeDetect?: pulumi.Input<string>;
        slices?: pulumi.Input<number>;
        tier?: pulumi.Input<string>;
        timecodeInsertion?: pulumi.Input<string>;
    }

    export interface ChannelHdr10SettingsArgs {
        maxCll?: pulumi.Input<number>;
        maxFall?: pulumi.Input<number>;
    }

    export interface ChannelHlsAkamaiSettingsArgs {
        connectionRetryInterval?: pulumi.Input<number>;
        filecacheDuration?: pulumi.Input<number>;
        httpTransferMode?: pulumi.Input<string>;
        numRetries?: pulumi.Input<number>;
        restartDelay?: pulumi.Input<number>;
        salt?: pulumi.Input<string>;
        token?: pulumi.Input<string>;
    }

    export interface ChannelHlsBasicPutSettingsArgs {
        connectionRetryInterval?: pulumi.Input<number>;
        filecacheDuration?: pulumi.Input<number>;
        numRetries?: pulumi.Input<number>;
        restartDelay?: pulumi.Input<number>;
    }

    export interface ChannelHlsCdnSettingsArgs {
        hlsAkamaiSettings?: pulumi.Input<inputs.medialive.ChannelHlsAkamaiSettingsArgs>;
        hlsBasicPutSettings?: pulumi.Input<inputs.medialive.ChannelHlsBasicPutSettingsArgs>;
        hlsMediaStoreSettings?: pulumi.Input<inputs.medialive.ChannelHlsMediaStoreSettingsArgs>;
        hlsS3Settings?: pulumi.Input<inputs.medialive.ChannelHlsS3SettingsArgs>;
        hlsWebdavSettings?: pulumi.Input<inputs.medialive.ChannelHlsWebdavSettingsArgs>;
    }

    export interface ChannelHlsGroupSettingsArgs {
        adMarkers?: pulumi.Input<pulumi.Input<string>[]>;
        baseUrlContent?: pulumi.Input<string>;
        baseUrlContent1?: pulumi.Input<string>;
        baseUrlManifest?: pulumi.Input<string>;
        baseUrlManifest1?: pulumi.Input<string>;
        captionLanguageMappings?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelCaptionLanguageMappingArgs>[]>;
        captionLanguageSetting?: pulumi.Input<string>;
        clientCache?: pulumi.Input<string>;
        codecSpecification?: pulumi.Input<string>;
        constantIv?: pulumi.Input<string>;
        destination?: pulumi.Input<inputs.medialive.ChannelOutputLocationRefArgs>;
        directoryStructure?: pulumi.Input<string>;
        discontinuityTags?: pulumi.Input<string>;
        encryptionType?: pulumi.Input<string>;
        hlsCdnSettings?: pulumi.Input<inputs.medialive.ChannelHlsCdnSettingsArgs>;
        hlsId3SegmentTagging?: pulumi.Input<string>;
        iFrameOnlyPlaylists?: pulumi.Input<string>;
        incompleteSegmentBehavior?: pulumi.Input<string>;
        indexNSegments?: pulumi.Input<number>;
        inputLossAction?: pulumi.Input<string>;
        ivInManifest?: pulumi.Input<string>;
        ivSource?: pulumi.Input<string>;
        keepSegments?: pulumi.Input<number>;
        keyFormat?: pulumi.Input<string>;
        keyFormatVersions?: pulumi.Input<string>;
        keyProviderSettings?: pulumi.Input<inputs.medialive.ChannelKeyProviderSettingsArgs>;
        manifestCompression?: pulumi.Input<string>;
        manifestDurationFormat?: pulumi.Input<string>;
        minSegmentLength?: pulumi.Input<number>;
        mode?: pulumi.Input<string>;
        outputSelection?: pulumi.Input<string>;
        programDateTime?: pulumi.Input<string>;
        programDateTimePeriod?: pulumi.Input<number>;
        redundantManifest?: pulumi.Input<string>;
        segmentLength?: pulumi.Input<number>;
        segmentationMode?: pulumi.Input<string>;
        segmentsPerSubdirectory?: pulumi.Input<number>;
        streamInfResolution?: pulumi.Input<string>;
        timedMetadataId3Frame?: pulumi.Input<string>;
        timedMetadataId3Period?: pulumi.Input<number>;
        timestampDeltaMilliseconds?: pulumi.Input<number>;
        tsFileMode?: pulumi.Input<string>;
    }

    export interface ChannelHlsInputSettingsArgs {
        bandwidth?: pulumi.Input<number>;
        bufferSegments?: pulumi.Input<number>;
        retries?: pulumi.Input<number>;
        retryInterval?: pulumi.Input<number>;
        scte35Source?: pulumi.Input<string>;
    }

    export interface ChannelHlsMediaStoreSettingsArgs {
        connectionRetryInterval?: pulumi.Input<number>;
        filecacheDuration?: pulumi.Input<number>;
        mediaStoreStorageClass?: pulumi.Input<string>;
        numRetries?: pulumi.Input<number>;
        restartDelay?: pulumi.Input<number>;
    }

    export interface ChannelHlsOutputSettingsArgs {
        h265PackagingType?: pulumi.Input<string>;
        hlsSettings?: pulumi.Input<inputs.medialive.ChannelHlsSettingsArgs>;
        nameModifier?: pulumi.Input<string>;
        segmentModifier?: pulumi.Input<string>;
    }

    export interface ChannelHlsS3SettingsArgs {
        cannedAcl?: pulumi.Input<string>;
    }

    export interface ChannelHlsSettingsArgs {
        audioOnlyHlsSettings?: pulumi.Input<inputs.medialive.ChannelAudioOnlyHlsSettingsArgs>;
        fmp4HlsSettings?: pulumi.Input<inputs.medialive.ChannelFmp4HlsSettingsArgs>;
        frameCaptureHlsSettings?: pulumi.Input<inputs.medialive.ChannelFrameCaptureHlsSettingsArgs>;
        standardHlsSettings?: pulumi.Input<inputs.medialive.ChannelStandardHlsSettingsArgs>;
    }

    export interface ChannelHlsWebdavSettingsArgs {
        connectionRetryInterval?: pulumi.Input<number>;
        filecacheDuration?: pulumi.Input<number>;
        httpTransferMode?: pulumi.Input<string>;
        numRetries?: pulumi.Input<number>;
        restartDelay?: pulumi.Input<number>;
    }

    export interface ChannelHtmlMotionGraphicsSettingsArgs {
    }

    export interface ChannelInputAttachmentArgs {
        automaticInputFailoverSettings?: pulumi.Input<inputs.medialive.ChannelAutomaticInputFailoverSettingsArgs>;
        inputAttachmentName?: pulumi.Input<string>;
        inputId?: pulumi.Input<string>;
        inputSettings?: pulumi.Input<inputs.medialive.ChannelInputSettingsArgs>;
    }

    export interface ChannelInputChannelLevelArgs {
        gain?: pulumi.Input<number>;
        inputChannel?: pulumi.Input<number>;
    }

    export interface ChannelInputLocationArgs {
        passwordParam?: pulumi.Input<string>;
        uri?: pulumi.Input<string>;
        username?: pulumi.Input<string>;
    }

    export interface ChannelInputLossBehaviorArgs {
        blackFrameMsec?: pulumi.Input<number>;
        inputLossImageColor?: pulumi.Input<string>;
        inputLossImageSlate?: pulumi.Input<inputs.medialive.ChannelInputLocationArgs>;
        inputLossImageType?: pulumi.Input<string>;
        repeatFrameMsec?: pulumi.Input<number>;
    }

    export interface ChannelInputLossFailoverSettingsArgs {
        inputLossThresholdMsec?: pulumi.Input<number>;
    }

    export interface ChannelInputSettingsArgs {
        audioSelectors?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelAudioSelectorArgs>[]>;
        captionSelectors?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelCaptionSelectorArgs>[]>;
        deblockFilter?: pulumi.Input<string>;
        denoiseFilter?: pulumi.Input<string>;
        filterStrength?: pulumi.Input<number>;
        inputFilter?: pulumi.Input<string>;
        networkInputSettings?: pulumi.Input<inputs.medialive.ChannelNetworkInputSettingsArgs>;
        smpte2038DataPreference?: pulumi.Input<string>;
        sourceEndBehavior?: pulumi.Input<string>;
        videoSelector?: pulumi.Input<inputs.medialive.ChannelVideoSelectorArgs>;
    }

    export interface ChannelInputSpecificationArgs {
        codec?: pulumi.Input<string>;
        maximumBitrate?: pulumi.Input<string>;
        resolution?: pulumi.Input<string>;
    }

    export interface ChannelKeyProviderSettingsArgs {
        staticKeySettings?: pulumi.Input<inputs.medialive.ChannelStaticKeySettingsArgs>;
    }

    export interface ChannelM2tsSettingsArgs {
        absentInputAudioBehavior?: pulumi.Input<string>;
        arib?: pulumi.Input<string>;
        aribCaptionsPid?: pulumi.Input<string>;
        aribCaptionsPidControl?: pulumi.Input<string>;
        audioBufferModel?: pulumi.Input<string>;
        audioFramesPerPes?: pulumi.Input<number>;
        audioPids?: pulumi.Input<string>;
        audioStreamType?: pulumi.Input<string>;
        bitrate?: pulumi.Input<number>;
        bufferModel?: pulumi.Input<string>;
        ccDescriptor?: pulumi.Input<string>;
        dvbNitSettings?: pulumi.Input<inputs.medialive.ChannelDvbNitSettingsArgs>;
        dvbSdtSettings?: pulumi.Input<inputs.medialive.ChannelDvbSdtSettingsArgs>;
        dvbSubPids?: pulumi.Input<string>;
        dvbTdtSettings?: pulumi.Input<inputs.medialive.ChannelDvbTdtSettingsArgs>;
        dvbTeletextPid?: pulumi.Input<string>;
        ebif?: pulumi.Input<string>;
        ebpAudioInterval?: pulumi.Input<string>;
        ebpLookaheadMs?: pulumi.Input<number>;
        ebpPlacement?: pulumi.Input<string>;
        ecmPid?: pulumi.Input<string>;
        esRateInPes?: pulumi.Input<string>;
        etvPlatformPid?: pulumi.Input<string>;
        etvSignalPid?: pulumi.Input<string>;
        fragmentTime?: pulumi.Input<number>;
        klv?: pulumi.Input<string>;
        klvDataPids?: pulumi.Input<string>;
        nielsenId3Behavior?: pulumi.Input<string>;
        nullPacketBitrate?: pulumi.Input<number>;
        patInterval?: pulumi.Input<number>;
        pcrControl?: pulumi.Input<string>;
        pcrPeriod?: pulumi.Input<number>;
        pcrPid?: pulumi.Input<string>;
        pmtInterval?: pulumi.Input<number>;
        pmtPid?: pulumi.Input<string>;
        programNum?: pulumi.Input<number>;
        rateMode?: pulumi.Input<string>;
        scte27Pids?: pulumi.Input<string>;
        scte35Control?: pulumi.Input<string>;
        scte35Pid?: pulumi.Input<string>;
        segmentationMarkers?: pulumi.Input<string>;
        segmentationStyle?: pulumi.Input<string>;
        segmentationTime?: pulumi.Input<number>;
        timedMetadataBehavior?: pulumi.Input<string>;
        timedMetadataPid?: pulumi.Input<string>;
        transportStreamId?: pulumi.Input<number>;
        videoPid?: pulumi.Input<string>;
    }

    export interface ChannelM3u8SettingsArgs {
        audioFramesPerPes?: pulumi.Input<number>;
        audioPids?: pulumi.Input<string>;
        ecmPid?: pulumi.Input<string>;
        nielsenId3Behavior?: pulumi.Input<string>;
        patInterval?: pulumi.Input<number>;
        pcrControl?: pulumi.Input<string>;
        pcrPeriod?: pulumi.Input<number>;
        pcrPid?: pulumi.Input<string>;
        pmtInterval?: pulumi.Input<number>;
        pmtPid?: pulumi.Input<string>;
        programNum?: pulumi.Input<number>;
        scte35Behavior?: pulumi.Input<string>;
        scte35Pid?: pulumi.Input<string>;
        timedMetadataBehavior?: pulumi.Input<string>;
        timedMetadataPid?: pulumi.Input<string>;
        transportStreamId?: pulumi.Input<number>;
        videoPid?: pulumi.Input<string>;
    }

    export interface ChannelMediaPackageGroupSettingsArgs {
        destination?: pulumi.Input<inputs.medialive.ChannelOutputLocationRefArgs>;
    }

    export interface ChannelMediaPackageOutputDestinationSettingsArgs {
        channelId?: pulumi.Input<string>;
    }

    export interface ChannelMediaPackageOutputSettingsArgs {
    }

    export interface ChannelMotionGraphicsConfigurationArgs {
        motionGraphicsInsertion?: pulumi.Input<string>;
        motionGraphicsSettings?: pulumi.Input<inputs.medialive.ChannelMotionGraphicsSettingsArgs>;
    }

    export interface ChannelMotionGraphicsSettingsArgs {
        htmlMotionGraphicsSettings?: pulumi.Input<inputs.medialive.ChannelHtmlMotionGraphicsSettingsArgs>;
    }

    export interface ChannelMp2SettingsArgs {
        bitrate?: pulumi.Input<number>;
        codingMode?: pulumi.Input<string>;
        sampleRate?: pulumi.Input<number>;
    }

    export interface ChannelMpeg2FilterSettingsArgs {
        temporalFilterSettings?: pulumi.Input<inputs.medialive.ChannelTemporalFilterSettingsArgs>;
    }

    export interface ChannelMpeg2SettingsArgs {
        adaptiveQuantization?: pulumi.Input<string>;
        afdSignaling?: pulumi.Input<string>;
        colorMetadata?: pulumi.Input<string>;
        colorSpace?: pulumi.Input<string>;
        displayAspectRatio?: pulumi.Input<string>;
        filterSettings?: pulumi.Input<inputs.medialive.ChannelMpeg2FilterSettingsArgs>;
        fixedAfd?: pulumi.Input<string>;
        framerateDenominator?: pulumi.Input<number>;
        framerateNumerator?: pulumi.Input<number>;
        gopClosedCadence?: pulumi.Input<number>;
        gopNumBFrames?: pulumi.Input<number>;
        gopSize?: pulumi.Input<number>;
        gopSizeUnits?: pulumi.Input<string>;
        scanType?: pulumi.Input<string>;
        subgopLength?: pulumi.Input<string>;
        timecodeInsertion?: pulumi.Input<string>;
    }

    export interface ChannelMsSmoothGroupSettingsArgs {
        acquisitionPointId?: pulumi.Input<string>;
        audioOnlyTimecodeControl?: pulumi.Input<string>;
        certificateMode?: pulumi.Input<string>;
        connectionRetryInterval?: pulumi.Input<number>;
        destination?: pulumi.Input<inputs.medialive.ChannelOutputLocationRefArgs>;
        eventId?: pulumi.Input<string>;
        eventIdMode?: pulumi.Input<string>;
        eventStopBehavior?: pulumi.Input<string>;
        filecacheDuration?: pulumi.Input<number>;
        fragmentLength?: pulumi.Input<number>;
        inputLossAction?: pulumi.Input<string>;
        numRetries?: pulumi.Input<number>;
        restartDelay?: pulumi.Input<number>;
        segmentationMode?: pulumi.Input<string>;
        sendDelayMs?: pulumi.Input<number>;
        sparseTrackType?: pulumi.Input<string>;
        streamManifestBehavior?: pulumi.Input<string>;
        timestampOffset?: pulumi.Input<string>;
        timestampOffsetMode?: pulumi.Input<string>;
    }

    export interface ChannelMsSmoothOutputSettingsArgs {
        h265PackagingType?: pulumi.Input<string>;
        nameModifier?: pulumi.Input<string>;
    }

    export interface ChannelMultiplexGroupSettingsArgs {
    }

    export interface ChannelMultiplexOutputSettingsArgs {
        destination?: pulumi.Input<inputs.medialive.ChannelOutputLocationRefArgs>;
    }

    export interface ChannelMultiplexProgramChannelDestinationSettingsArgs {
        multiplexId?: pulumi.Input<string>;
        programName?: pulumi.Input<string>;
    }

    export interface ChannelNetworkInputSettingsArgs {
        hlsInputSettings?: pulumi.Input<inputs.medialive.ChannelHlsInputSettingsArgs>;
        serverValidation?: pulumi.Input<string>;
    }

    export interface ChannelNielsenCBETArgs {
        cbetCheckDigitString?: pulumi.Input<string>;
        cbetStepaside?: pulumi.Input<string>;
        csid?: pulumi.Input<string>;
    }

    export interface ChannelNielsenConfigurationArgs {
        distributorId?: pulumi.Input<string>;
        nielsenPcmToId3Tagging?: pulumi.Input<string>;
    }

    export interface ChannelNielsenNaesIiNwArgs {
        checkDigitString?: pulumi.Input<string>;
        sid?: pulumi.Input<number>;
    }

    export interface ChannelNielsenWatermarksSettingsArgs {
        nielsenCbetSettings?: pulumi.Input<inputs.medialive.ChannelNielsenCBETArgs>;
        nielsenDistributionType?: pulumi.Input<string>;
        nielsenNaesIiNwSettings?: pulumi.Input<inputs.medialive.ChannelNielsenNaesIiNwArgs>;
    }

    export interface ChannelOutputArgs {
        audioDescriptionNames?: pulumi.Input<pulumi.Input<string>[]>;
        captionDescriptionNames?: pulumi.Input<pulumi.Input<string>[]>;
        outputName?: pulumi.Input<string>;
        outputSettings?: pulumi.Input<inputs.medialive.ChannelOutputSettingsArgs>;
        videoDescriptionName?: pulumi.Input<string>;
    }

    export interface ChannelOutputDestinationArgs {
        id?: pulumi.Input<string>;
        mediaPackageSettings?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelMediaPackageOutputDestinationSettingsArgs>[]>;
        multiplexSettings?: pulumi.Input<inputs.medialive.ChannelMultiplexProgramChannelDestinationSettingsArgs>;
        settings?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelOutputDestinationSettingsArgs>[]>;
    }

    export interface ChannelOutputDestinationSettingsArgs {
        passwordParam?: pulumi.Input<string>;
        streamName?: pulumi.Input<string>;
        url?: pulumi.Input<string>;
        username?: pulumi.Input<string>;
    }

    export interface ChannelOutputGroupArgs {
        name?: pulumi.Input<string>;
        outputGroupSettings?: pulumi.Input<inputs.medialive.ChannelOutputGroupSettingsArgs>;
        outputs?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelOutputArgs>[]>;
    }

    export interface ChannelOutputGroupSettingsArgs {
        archiveGroupSettings?: pulumi.Input<inputs.medialive.ChannelArchiveGroupSettingsArgs>;
        frameCaptureGroupSettings?: pulumi.Input<inputs.medialive.ChannelFrameCaptureGroupSettingsArgs>;
        hlsGroupSettings?: pulumi.Input<inputs.medialive.ChannelHlsGroupSettingsArgs>;
        mediaPackageGroupSettings?: pulumi.Input<inputs.medialive.ChannelMediaPackageGroupSettingsArgs>;
        msSmoothGroupSettings?: pulumi.Input<inputs.medialive.ChannelMsSmoothGroupSettingsArgs>;
        multiplexGroupSettings?: pulumi.Input<inputs.medialive.ChannelMultiplexGroupSettingsArgs>;
        rtmpGroupSettings?: pulumi.Input<inputs.medialive.ChannelRtmpGroupSettingsArgs>;
        udpGroupSettings?: pulumi.Input<inputs.medialive.ChannelUdpGroupSettingsArgs>;
    }

    export interface ChannelOutputLocationRefArgs {
        destinationRefId?: pulumi.Input<string>;
    }

    export interface ChannelOutputSettingsArgs {
        archiveOutputSettings?: pulumi.Input<inputs.medialive.ChannelArchiveOutputSettingsArgs>;
        frameCaptureOutputSettings?: pulumi.Input<inputs.medialive.ChannelFrameCaptureOutputSettingsArgs>;
        hlsOutputSettings?: pulumi.Input<inputs.medialive.ChannelHlsOutputSettingsArgs>;
        mediaPackageOutputSettings?: pulumi.Input<inputs.medialive.ChannelMediaPackageOutputSettingsArgs>;
        msSmoothOutputSettings?: pulumi.Input<inputs.medialive.ChannelMsSmoothOutputSettingsArgs>;
        multiplexOutputSettings?: pulumi.Input<inputs.medialive.ChannelMultiplexOutputSettingsArgs>;
        rtmpOutputSettings?: pulumi.Input<inputs.medialive.ChannelRtmpOutputSettingsArgs>;
        udpOutputSettings?: pulumi.Input<inputs.medialive.ChannelUdpOutputSettingsArgs>;
    }

    export interface ChannelPassThroughSettingsArgs {
    }

    export interface ChannelRawSettingsArgs {
    }

    export interface ChannelRec601SettingsArgs {
    }

    export interface ChannelRec709SettingsArgs {
    }

    export interface ChannelRemixSettingsArgs {
        channelMappings?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelAudioChannelMappingArgs>[]>;
        channelsIn?: pulumi.Input<number>;
        channelsOut?: pulumi.Input<number>;
    }

    export interface ChannelRtmpCaptionInfoDestinationSettingsArgs {
    }

    export interface ChannelRtmpGroupSettingsArgs {
        adMarkers?: pulumi.Input<pulumi.Input<string>[]>;
        authenticationScheme?: pulumi.Input<string>;
        cacheFullBehavior?: pulumi.Input<string>;
        cacheLength?: pulumi.Input<number>;
        captionData?: pulumi.Input<string>;
        inputLossAction?: pulumi.Input<string>;
        restartDelay?: pulumi.Input<number>;
    }

    export interface ChannelRtmpOutputSettingsArgs {
        certificateMode?: pulumi.Input<string>;
        connectionRetryInterval?: pulumi.Input<number>;
        destination?: pulumi.Input<inputs.medialive.ChannelOutputLocationRefArgs>;
        numRetries?: pulumi.Input<number>;
    }

    export interface ChannelScte20PlusEmbeddedDestinationSettingsArgs {
    }

    export interface ChannelScte20SourceSettingsArgs {
        convert608To708?: pulumi.Input<string>;
        source608ChannelNumber?: pulumi.Input<number>;
    }

    export interface ChannelScte27DestinationSettingsArgs {
    }

    export interface ChannelScte27SourceSettingsArgs {
        ocrLanguage?: pulumi.Input<string>;
        pid?: pulumi.Input<number>;
    }

    export interface ChannelScte35SpliceInsertArgs {
        adAvailOffset?: pulumi.Input<number>;
        noRegionalBlackoutFlag?: pulumi.Input<string>;
        webDeliveryAllowedFlag?: pulumi.Input<string>;
    }

    export interface ChannelScte35TimeSignalAposArgs {
        adAvailOffset?: pulumi.Input<number>;
        noRegionalBlackoutFlag?: pulumi.Input<string>;
        webDeliveryAllowedFlag?: pulumi.Input<string>;
    }

    export interface ChannelSmpteTtDestinationSettingsArgs {
    }

    export interface ChannelStandardHlsSettingsArgs {
        audioRenditionSets?: pulumi.Input<string>;
        m3u8Settings?: pulumi.Input<inputs.medialive.ChannelM3u8SettingsArgs>;
    }

    export interface ChannelStaticKeySettingsArgs {
        keyProviderServer?: pulumi.Input<inputs.medialive.ChannelInputLocationArgs>;
        staticKeyValue?: pulumi.Input<string>;
    }

    export interface ChannelTeletextDestinationSettingsArgs {
    }

    export interface ChannelTeletextSourceSettingsArgs {
        outputRectangle?: pulumi.Input<inputs.medialive.ChannelCaptionRectangleArgs>;
        pageNumber?: pulumi.Input<string>;
    }

    export interface ChannelTemporalFilterSettingsArgs {
        postFilterSharpening?: pulumi.Input<string>;
        strength?: pulumi.Input<string>;
    }

    export interface ChannelTimecodeConfigArgs {
        source?: pulumi.Input<string>;
        syncThreshold?: pulumi.Input<number>;
    }

    export interface ChannelTtmlDestinationSettingsArgs {
        styleControl?: pulumi.Input<string>;
    }

    export interface ChannelUdpContainerSettingsArgs {
        m2tsSettings?: pulumi.Input<inputs.medialive.ChannelM2tsSettingsArgs>;
    }

    export interface ChannelUdpGroupSettingsArgs {
        inputLossAction?: pulumi.Input<string>;
        timedMetadataId3Frame?: pulumi.Input<string>;
        timedMetadataId3Period?: pulumi.Input<number>;
    }

    export interface ChannelUdpOutputSettingsArgs {
        bufferMsec?: pulumi.Input<number>;
        containerSettings?: pulumi.Input<inputs.medialive.ChannelUdpContainerSettingsArgs>;
        destination?: pulumi.Input<inputs.medialive.ChannelOutputLocationRefArgs>;
        fecOutputSettings?: pulumi.Input<inputs.medialive.ChannelFecOutputSettingsArgs>;
    }

    export interface ChannelVideoBlackFailoverSettingsArgs {
        blackDetectThreshold?: pulumi.Input<number>;
        videoBlackThresholdMsec?: pulumi.Input<number>;
    }

    export interface ChannelVideoCodecSettingsArgs {
        frameCaptureSettings?: pulumi.Input<inputs.medialive.ChannelFrameCaptureSettingsArgs>;
        h264Settings?: pulumi.Input<inputs.medialive.ChannelH264SettingsArgs>;
        h265Settings?: pulumi.Input<inputs.medialive.ChannelH265SettingsArgs>;
        mpeg2Settings?: pulumi.Input<inputs.medialive.ChannelMpeg2SettingsArgs>;
    }

    export interface ChannelVideoDescriptionArgs {
        codecSettings?: pulumi.Input<inputs.medialive.ChannelVideoCodecSettingsArgs>;
        height?: pulumi.Input<number>;
        name?: pulumi.Input<string>;
        respondToAfd?: pulumi.Input<string>;
        scalingBehavior?: pulumi.Input<string>;
        sharpness?: pulumi.Input<number>;
        width?: pulumi.Input<number>;
    }

    export interface ChannelVideoSelectorArgs {
        colorSpace?: pulumi.Input<string>;
        colorSpaceSettings?: pulumi.Input<inputs.medialive.ChannelVideoSelectorColorSpaceSettingsArgs>;
        colorSpaceUsage?: pulumi.Input<string>;
        selectorSettings?: pulumi.Input<inputs.medialive.ChannelVideoSelectorSettingsArgs>;
    }

    export interface ChannelVideoSelectorColorSpaceSettingsArgs {
        hdr10Settings?: pulumi.Input<inputs.medialive.ChannelHdr10SettingsArgs>;
    }

    export interface ChannelVideoSelectorPidArgs {
        pid?: pulumi.Input<number>;
    }

    export interface ChannelVideoSelectorProgramIdArgs {
        programId?: pulumi.Input<number>;
    }

    export interface ChannelVideoSelectorSettingsArgs {
        videoSelectorPid?: pulumi.Input<inputs.medialive.ChannelVideoSelectorPidArgs>;
        videoSelectorProgramId?: pulumi.Input<inputs.medialive.ChannelVideoSelectorProgramIdArgs>;
    }

    export interface ChannelVpcOutputSettingsArgs {
        publicAddressAllocationIds?: pulumi.Input<pulumi.Input<string>[]>;
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ChannelWavSettingsArgs {
        bitDepth?: pulumi.Input<number>;
        codingMode?: pulumi.Input<string>;
        sampleRate?: pulumi.Input<number>;
    }

    export interface ChannelWebvttDestinationSettingsArgs {
        styleControl?: pulumi.Input<string>;
    }

    export interface InputDestinationRequestArgs {
        streamName?: pulumi.Input<string>;
    }

    export interface InputDeviceSettingsArgs {
        id?: pulumi.Input<string>;
    }

    export interface InputMediaConnectFlowRequestArgs {
        flowArn?: pulumi.Input<string>;
    }

    export interface InputSecurityGroupInputWhitelistRuleCidrArgs {
        cidr?: pulumi.Input<string>;
    }

    export interface InputSourceRequestArgs {
        passwordParam?: pulumi.Input<string>;
        url?: pulumi.Input<string>;
        username?: pulumi.Input<string>;
    }

    export interface InputVpcRequestArgs {
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace mediapackage {
    export interface AssetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ChannelLogConfigurationArgs {
        /**
         * Sets a custom AWS CloudWatch log group name for access logs. If a log group name isn't specified, the defaults are used: /aws/MediaPackage/EgressAccessLogs for egress access logs and /aws/MediaPackage/IngressAccessLogs for ingress access logs.
         */
        logGroupName?: pulumi.Input<string>;
    }

    export interface ChannelTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * CDN Authorization credentials
     */
    export interface OriginEndpointAuthorizationArgs {
        /**
         * The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
         */
        cdnIdentifierSecret: pulumi.Input<string>;
        /**
         * The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
         */
        secretsRoleArn: pulumi.Input<string>;
    }

    /**
     * A Common Media Application Format (CMAF) encryption configuration.
     */
    export interface OriginEndpointCmafEncryptionArgs {
        /**
         * An optional 128-bit, 16-byte hex value represented by a 32-character string, used in conjunction with the key for encrypting blocks. If you don't specify a value, then MediaPackage creates the constant initialization vector (IV).
         */
        constantInitializationVector?: pulumi.Input<string>;
        /**
         * Time (in seconds) between each encryption key rotation.
         */
        keyRotationIntervalSeconds?: pulumi.Input<number>;
        spekeKeyProvider: pulumi.Input<inputs.mediapackage.OriginEndpointSpekeKeyProviderArgs>;
    }

    /**
     * A Common Media Application Format (CMAF) packaging configuration.
     */
    export interface OriginEndpointCmafPackageArgs {
        encryption?: pulumi.Input<inputs.mediapackage.OriginEndpointCmafEncryptionArgs>;
        /**
         * A list of HLS manifest configurations
         */
        hlsManifests?: pulumi.Input<pulumi.Input<inputs.mediapackage.OriginEndpointHlsManifestArgs>[]>;
        /**
         * Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
         */
        segmentDurationSeconds?: pulumi.Input<number>;
        /**
         * An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.
         */
        segmentPrefix?: pulumi.Input<string>;
        streamSelection?: pulumi.Input<inputs.mediapackage.OriginEndpointStreamSelectionArgs>;
    }

    /**
     * A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
     */
    export interface OriginEndpointDashEncryptionArgs {
        /**
         * Time (in seconds) between each encryption key rotation.
         */
        keyRotationIntervalSeconds?: pulumi.Input<number>;
        spekeKeyProvider: pulumi.Input<inputs.mediapackage.OriginEndpointSpekeKeyProviderArgs>;
    }

    /**
     * A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
     */
    export interface OriginEndpointDashPackageArgs {
        /**
         * A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
         */
        adTriggers?: pulumi.Input<pulumi.Input<enums.mediapackage.OriginEndpointDashPackageAdTriggersItem>[]>;
        adsOnDeliveryRestrictions?: pulumi.Input<enums.mediapackage.OriginEndpointAdsOnDeliveryRestrictions>;
        encryption?: pulumi.Input<inputs.mediapackage.OriginEndpointDashEncryptionArgs>;
        /**
         * Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
         */
        manifestLayout?: pulumi.Input<enums.mediapackage.OriginEndpointDashPackageManifestLayout>;
        /**
         * Time window (in seconds) contained in each manifest.
         */
        manifestWindowSeconds?: pulumi.Input<number>;
        /**
         * Minimum duration (in seconds) that a player will buffer media before starting the presentation.
         */
        minBufferTimeSeconds?: pulumi.Input<number>;
        /**
         * Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
         */
        minUpdatePeriodSeconds?: pulumi.Input<number>;
        /**
         * A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Channel source contains SCTE-35 ad markers.
         */
        periodTriggers?: pulumi.Input<pulumi.Input<enums.mediapackage.OriginEndpointDashPackagePeriodTriggersItem>[]>;
        /**
         * The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
         */
        profile?: pulumi.Input<enums.mediapackage.OriginEndpointDashPackageProfile>;
        /**
         * Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
         */
        segmentDurationSeconds?: pulumi.Input<number>;
        /**
         * Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
         */
        segmentTemplateFormat?: pulumi.Input<enums.mediapackage.OriginEndpointDashPackageSegmentTemplateFormat>;
        streamSelection?: pulumi.Input<inputs.mediapackage.OriginEndpointStreamSelectionArgs>;
        /**
         * Duration (in seconds) to delay live content before presentation.
         */
        suggestedPresentationDelaySeconds?: pulumi.Input<number>;
        /**
         * Determines the type of UTCTiming included in the Media Presentation Description (MPD)
         */
        utcTiming?: pulumi.Input<enums.mediapackage.OriginEndpointDashPackageUtcTiming>;
        /**
         * Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
         */
        utcTimingUri?: pulumi.Input<string>;
    }

    /**
     * An HTTP Live Streaming (HLS) encryption configuration.
     */
    export interface OriginEndpointHlsEncryptionArgs {
        /**
         * A constant initialization vector for encryption (optional). When not specified the initialization vector will be periodically rotated.
         */
        constantInitializationVector?: pulumi.Input<string>;
        /**
         * The encryption method to use.
         */
        encryptionMethod?: pulumi.Input<enums.mediapackage.OriginEndpointHlsEncryptionEncryptionMethod>;
        /**
         * Interval (in seconds) between each encryption key rotation.
         */
        keyRotationIntervalSeconds?: pulumi.Input<number>;
        /**
         * When enabled, the EXT-X-KEY tag will be repeated in output manifests.
         */
        repeatExtXKey?: pulumi.Input<boolean>;
        spekeKeyProvider: pulumi.Input<inputs.mediapackage.OriginEndpointSpekeKeyProviderArgs>;
    }

    /**
     * A HTTP Live Streaming (HLS) manifest configuration.
     */
    export interface OriginEndpointHlsManifestArgs {
        /**
         * This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
         */
        adMarkers?: pulumi.Input<enums.mediapackage.OriginEndpointHlsManifestAdMarkers>;
        /**
         * A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
         */
        adTriggers?: pulumi.Input<pulumi.Input<enums.mediapackage.OriginEndpointHlsManifestAdTriggersItem>[]>;
        adsOnDeliveryRestrictions?: pulumi.Input<enums.mediapackage.OriginEndpointAdsOnDeliveryRestrictions>;
        /**
         * The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.
         */
        id: pulumi.Input<string>;
        /**
         * When enabled, an I-Frame only stream will be included in the output.
         */
        includeIframeOnlyStream?: pulumi.Input<boolean>;
        /**
         * An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.
         */
        manifestName?: pulumi.Input<string>;
        /**
         * The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
         */
        playlistType?: pulumi.Input<enums.mediapackage.OriginEndpointHlsManifestPlaylistType>;
        /**
         * Time window (in seconds) contained in each parent manifest.
         */
        playlistWindowSeconds?: pulumi.Input<number>;
        /**
         * The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
         */
        programDateTimeIntervalSeconds?: pulumi.Input<number>;
        /**
         * The URL of the packaged OriginEndpoint for consumption.
         */
        url?: pulumi.Input<string>;
    }

    /**
     * An HTTP Live Streaming (HLS) packaging configuration.
     */
    export interface OriginEndpointHlsPackageArgs {
        /**
         * This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
         */
        adMarkers?: pulumi.Input<enums.mediapackage.OriginEndpointHlsPackageAdMarkers>;
        /**
         * A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
         */
        adTriggers?: pulumi.Input<pulumi.Input<enums.mediapackage.OriginEndpointHlsPackageAdTriggersItem>[]>;
        adsOnDeliveryRestrictions?: pulumi.Input<enums.mediapackage.OriginEndpointAdsOnDeliveryRestrictions>;
        encryption?: pulumi.Input<inputs.mediapackage.OriginEndpointHlsEncryptionArgs>;
        /**
         * When enabled, an I-Frame only stream will be included in the output.
         */
        includeIframeOnlyStream?: pulumi.Input<boolean>;
        /**
         * The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
         */
        playlistType?: pulumi.Input<enums.mediapackage.OriginEndpointHlsPackagePlaylistType>;
        /**
         * Time window (in seconds) contained in each parent manifest.
         */
        playlistWindowSeconds?: pulumi.Input<number>;
        /**
         * The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
         */
        programDateTimeIntervalSeconds?: pulumi.Input<number>;
        /**
         * Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.
         */
        segmentDurationSeconds?: pulumi.Input<number>;
        streamSelection?: pulumi.Input<inputs.mediapackage.OriginEndpointStreamSelectionArgs>;
        /**
         * When enabled, audio streams will be placed in rendition groups in the output.
         */
        useAudioRenditionGroup?: pulumi.Input<boolean>;
    }

    /**
     * A Microsoft Smooth Streaming (MSS) encryption configuration.
     */
    export interface OriginEndpointMssEncryptionArgs {
        spekeKeyProvider: pulumi.Input<inputs.mediapackage.OriginEndpointSpekeKeyProviderArgs>;
    }

    /**
     * A Microsoft Smooth Streaming (MSS) packaging configuration.
     */
    export interface OriginEndpointMssPackageArgs {
        encryption?: pulumi.Input<inputs.mediapackage.OriginEndpointMssEncryptionArgs>;
        /**
         * The time window (in seconds) contained in each manifest.
         */
        manifestWindowSeconds?: pulumi.Input<number>;
        /**
         * The duration (in seconds) of each segment.
         */
        segmentDurationSeconds?: pulumi.Input<number>;
        streamSelection?: pulumi.Input<inputs.mediapackage.OriginEndpointStreamSelectionArgs>;
    }

    /**
     * A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
     */
    export interface OriginEndpointSpekeKeyProviderArgs {
        /**
         * An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service.
         */
        certificateArn?: pulumi.Input<string>;
        /**
         * The resource ID to include in key requests.
         */
        resourceId: pulumi.Input<string>;
        /**
         * An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service.
         */
        roleArn: pulumi.Input<string>;
        /**
         * The system IDs to include in key requests.
         */
        systemIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The URL of the external key provider service.
         */
        url: pulumi.Input<string>;
    }

    /**
     * A StreamSelection configuration.
     */
    export interface OriginEndpointStreamSelectionArgs {
        /**
         * The maximum video bitrate (bps) to include in output.
         */
        maxVideoBitsPerSecond?: pulumi.Input<number>;
        /**
         * The minimum video bitrate (bps) to include in output.
         */
        minVideoBitsPerSecond?: pulumi.Input<number>;
        /**
         * A directive that determines the order of streams in the output.
         */
        streamOrder?: pulumi.Input<enums.mediapackage.OriginEndpointStreamSelectionStreamOrder>;
    }

    export interface OriginEndpointTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * A CMAF encryption configuration.
     */
    export interface PackagingConfigurationCmafEncryptionArgs {
        spekeKeyProvider: pulumi.Input<inputs.mediapackage.PackagingConfigurationSpekeKeyProviderArgs>;
    }

    /**
     * A CMAF packaging configuration.
     */
    export interface PackagingConfigurationCmafPackageArgs {
        encryption?: pulumi.Input<inputs.mediapackage.PackagingConfigurationCmafEncryptionArgs>;
        /**
         * A list of HLS manifest configurations.
         */
        hlsManifests: pulumi.Input<pulumi.Input<inputs.mediapackage.PackagingConfigurationHlsManifestArgs>[]>;
        /**
         * When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
         */
        includeEncoderConfigurationInSegments?: pulumi.Input<boolean>;
        segmentDurationSeconds?: pulumi.Input<number>;
    }

    /**
     * A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
     */
    export interface PackagingConfigurationDashEncryptionArgs {
        spekeKeyProvider: pulumi.Input<inputs.mediapackage.PackagingConfigurationSpekeKeyProviderArgs>;
    }

    /**
     * A DASH manifest configuration.
     */
    export interface PackagingConfigurationDashManifestArgs {
        /**
         * Determines the position of some tags in the Media Presentation Description (MPD). When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation. When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
         */
        manifestLayout?: pulumi.Input<enums.mediapackage.PackagingConfigurationDashManifestManifestLayout>;
        manifestName?: pulumi.Input<string>;
        /**
         * Minimum duration (in seconds) that a player will buffer media before starting the presentation.
         */
        minBufferTimeSeconds?: pulumi.Input<number>;
        /**
         * The Dynamic Adaptive Streaming over HTTP (DASH) profile type. When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
         */
        profile?: pulumi.Input<enums.mediapackage.PackagingConfigurationDashManifestProfile>;
        streamSelection?: pulumi.Input<inputs.mediapackage.PackagingConfigurationStreamSelectionArgs>;
    }

    /**
     * A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
     */
    export interface PackagingConfigurationDashPackageArgs {
        /**
         * A list of DASH manifest configurations.
         */
        dashManifests: pulumi.Input<pulumi.Input<inputs.mediapackage.PackagingConfigurationDashManifestArgs>[]>;
        encryption?: pulumi.Input<inputs.mediapackage.PackagingConfigurationDashEncryptionArgs>;
        /**
         * When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
         */
        includeEncoderConfigurationInSegments?: pulumi.Input<boolean>;
        /**
         * A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Asset contains SCTE-35 ad markers.
         */
        periodTriggers?: pulumi.Input<pulumi.Input<enums.mediapackage.PackagingConfigurationDashPackagePeriodTriggersItem>[]>;
        segmentDurationSeconds?: pulumi.Input<number>;
        /**
         * Determines the type of SegmentTemplate included in the Media Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs. When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
         */
        segmentTemplateFormat?: pulumi.Input<enums.mediapackage.PackagingConfigurationDashPackageSegmentTemplateFormat>;
    }

    /**
     * An HTTP Live Streaming (HLS) encryption configuration.
     */
    export interface PackagingConfigurationHlsEncryptionArgs {
        /**
         * An HTTP Live Streaming (HLS) encryption configuration.
         */
        constantInitializationVector?: pulumi.Input<string>;
        /**
         * The encryption method to use.
         */
        encryptionMethod?: pulumi.Input<enums.mediapackage.PackagingConfigurationHlsEncryptionEncryptionMethod>;
        spekeKeyProvider: pulumi.Input<inputs.mediapackage.PackagingConfigurationSpekeKeyProviderArgs>;
    }

    /**
     * An HTTP Live Streaming (HLS) manifest configuration.
     */
    export interface PackagingConfigurationHlsManifestArgs {
        /**
         * This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source.
         */
        adMarkers?: pulumi.Input<enums.mediapackage.PackagingConfigurationHlsManifestAdMarkers>;
        /**
         * When enabled, an I-Frame only stream will be included in the output.
         */
        includeIframeOnlyStream?: pulumi.Input<boolean>;
        manifestName?: pulumi.Input<string>;
        /**
         * The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
         */
        programDateTimeIntervalSeconds?: pulumi.Input<number>;
        /**
         * When enabled, the EXT-X-KEY tag will be repeated in output manifests.
         */
        repeatExtXKey?: pulumi.Input<boolean>;
        streamSelection?: pulumi.Input<inputs.mediapackage.PackagingConfigurationStreamSelectionArgs>;
    }

    /**
     * An HTTP Live Streaming (HLS) packaging configuration.
     */
    export interface PackagingConfigurationHlsPackageArgs {
        encryption?: pulumi.Input<inputs.mediapackage.PackagingConfigurationHlsEncryptionArgs>;
        /**
         * A list of HLS manifest configurations.
         */
        hlsManifests: pulumi.Input<pulumi.Input<inputs.mediapackage.PackagingConfigurationHlsManifestArgs>[]>;
        segmentDurationSeconds?: pulumi.Input<number>;
        /**
         * When enabled, audio streams will be placed in rendition groups in the output.
         */
        useAudioRenditionGroup?: pulumi.Input<boolean>;
    }

    /**
     * A CMAF encryption configuration.
     */
    export interface PackagingConfigurationMssEncryptionArgs {
        spekeKeyProvider: pulumi.Input<inputs.mediapackage.PackagingConfigurationSpekeKeyProviderArgs>;
    }

    /**
     * A Microsoft Smooth Streaming (MSS) manifest configuration.
     */
    export interface PackagingConfigurationMssManifestArgs {
        manifestName?: pulumi.Input<string>;
        streamSelection?: pulumi.Input<inputs.mediapackage.PackagingConfigurationStreamSelectionArgs>;
    }

    /**
     * A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
     */
    export interface PackagingConfigurationMssPackageArgs {
        encryption?: pulumi.Input<inputs.mediapackage.PackagingConfigurationMssEncryptionArgs>;
        /**
         * A list of MSS manifest configurations.
         */
        mssManifests: pulumi.Input<pulumi.Input<inputs.mediapackage.PackagingConfigurationMssManifestArgs>[]>;
        segmentDurationSeconds?: pulumi.Input<number>;
    }

    /**
     * A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
     */
    export interface PackagingConfigurationSpekeKeyProviderArgs {
        roleArn: pulumi.Input<string>;
        /**
         * The system IDs to include in key requests.
         */
        systemIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The URL of the external key provider service.
         */
        url: pulumi.Input<string>;
    }

    /**
     * A StreamSelection configuration.
     */
    export interface PackagingConfigurationStreamSelectionArgs {
        /**
         * The maximum video bitrate (bps) to include in output.
         */
        maxVideoBitsPerSecond?: pulumi.Input<number>;
        /**
         * The minimum video bitrate (bps) to include in output.
         */
        minVideoBitsPerSecond?: pulumi.Input<number>;
        /**
         * A directive that determines the order of streams in the output.
         */
        streamOrder?: pulumi.Input<enums.mediapackage.PackagingConfigurationStreamSelectionStreamOrder>;
    }

    export interface PackagingConfigurationTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface PackagingGroupAuthorizationArgs {
        /**
         * The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.
         */
        cdnIdentifierSecret: pulumi.Input<string>;
        /**
         * The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
         */
        secretsRoleArn: pulumi.Input<string>;
    }

    export interface PackagingGroupLogConfigurationArgs {
        /**
         * Sets a custom AWS CloudWatch log group name for egress logs. If a log group name isn't specified, the default name is used: /aws/MediaPackage/VodEgressAccessLogs.
         */
        logGroupName?: pulumi.Input<string>;
    }

    export interface PackagingGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

}

export namespace mediastore {
    export interface ContainerCorsRuleArgs {
        allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
        allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
        exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        maxAgeSeconds?: pulumi.Input<number>;
    }

    export interface ContainerMetricPolicyArgs {
        containerLevelMetrics: pulumi.Input<string>;
        metricPolicyRules?: pulumi.Input<pulumi.Input<inputs.mediastore.ContainerMetricPolicyRuleArgs>[]>;
    }

    export interface ContainerMetricPolicyRuleArgs {
        objectGroup: pulumi.Input<string>;
        objectGroupName: pulumi.Input<string>;
    }

    export interface ContainerTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace memorydb {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface ACLTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws: or memorydb:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws: or memorydb:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    export interface AuthenticationModePropertiesArgs {
        /**
         * Passwords used for this user account. You can create up to two passwords for each user.
         */
        passwords?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Type of authentication strategy for this user.
         */
        type?: pulumi.Input<enums.memorydb.UserAuthenticationModePropertiesType>;
    }

    export interface ClusterEndpointArgs {
        /**
         * The DNS address of the primary read-write node.
         */
        address?: pulumi.Input<string>;
        /**
         * The port number that the engine is listening on. 
         */
        port?: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ClusterTagArgs {
        /**
         * The key for the tag. May not be null.
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value. May be null.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ParameterGroupTagArgs {
        /**
         * The key for the tag. May not be null.
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value. May be null.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface SubnetGroupTagArgs {
        /**
         * The key for the tag. May not be null.
         */
        key: pulumi.Input<string>;
        /**
         * The tag's value. May be null.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface UserTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws: or memorydb:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws: or memorydb:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }
}

export namespace msk {
    export interface ClusterBrokerLogsArgs {
        cloudWatchLogs?: pulumi.Input<inputs.msk.ClusterCloudWatchLogsArgs>;
        firehose?: pulumi.Input<inputs.msk.ClusterFirehoseArgs>;
        s3?: pulumi.Input<inputs.msk.ClusterS3Args>;
    }

    export interface ClusterBrokerNodeGroupInfoArgs {
        brokerAZDistribution?: pulumi.Input<string>;
        clientSubnets: pulumi.Input<pulumi.Input<string>[]>;
        connectivityInfo?: pulumi.Input<inputs.msk.ClusterConnectivityInfoArgs>;
        instanceType: pulumi.Input<string>;
        securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        storageInfo?: pulumi.Input<inputs.msk.ClusterStorageInfoArgs>;
    }

    export interface ClusterClientAuthenticationArgs {
        sasl?: pulumi.Input<inputs.msk.ClusterSaslArgs>;
        tls?: pulumi.Input<inputs.msk.ClusterTlsArgs>;
        unauthenticated?: pulumi.Input<inputs.msk.ClusterUnauthenticatedArgs>;
    }

    export interface ClusterCloudWatchLogsArgs {
        enabled: pulumi.Input<boolean>;
        logGroup?: pulumi.Input<string>;
    }

    export interface ClusterConfigurationInfoArgs {
        arn: pulumi.Input<string>;
        revision: pulumi.Input<number>;
    }

    export interface ClusterConnectivityInfoArgs {
        publicAccess?: pulumi.Input<inputs.msk.ClusterPublicAccessArgs>;
    }

    export interface ClusterEBSStorageInfoArgs {
        volumeSize?: pulumi.Input<number>;
    }

    export interface ClusterEncryptionAtRestArgs {
        dataVolumeKMSKeyId: pulumi.Input<string>;
    }

    export interface ClusterEncryptionInTransitArgs {
        clientBroker?: pulumi.Input<string>;
        inCluster?: pulumi.Input<boolean>;
    }

    export interface ClusterEncryptionInfoArgs {
        encryptionAtRest?: pulumi.Input<inputs.msk.ClusterEncryptionAtRestArgs>;
        encryptionInTransit?: pulumi.Input<inputs.msk.ClusterEncryptionInTransitArgs>;
    }

    export interface ClusterFirehoseArgs {
        deliveryStream?: pulumi.Input<string>;
        enabled: pulumi.Input<boolean>;
    }

    export interface ClusterIamArgs {
        enabled: pulumi.Input<boolean>;
    }

    export interface ClusterJmxExporterArgs {
        enabledInBroker: pulumi.Input<boolean>;
    }

    export interface ClusterLoggingInfoArgs {
        brokerLogs: pulumi.Input<inputs.msk.ClusterBrokerLogsArgs>;
    }

    export interface ClusterNodeExporterArgs {
        enabledInBroker: pulumi.Input<boolean>;
    }

    export interface ClusterOpenMonitoringArgs {
        prometheus: pulumi.Input<inputs.msk.ClusterPrometheusArgs>;
    }

    export interface ClusterPrometheusArgs {
        jmxExporter?: pulumi.Input<inputs.msk.ClusterJmxExporterArgs>;
        nodeExporter?: pulumi.Input<inputs.msk.ClusterNodeExporterArgs>;
    }

    export interface ClusterPublicAccessArgs {
        type?: pulumi.Input<string>;
    }

    export interface ClusterS3Args {
        bucket?: pulumi.Input<string>;
        enabled: pulumi.Input<boolean>;
        prefix?: pulumi.Input<string>;
    }

    export interface ClusterSaslArgs {
        iam?: pulumi.Input<inputs.msk.ClusterIamArgs>;
        scram?: pulumi.Input<inputs.msk.ClusterScramArgs>;
    }

    export interface ClusterScramArgs {
        enabled: pulumi.Input<boolean>;
    }

    export interface ClusterStorageInfoArgs {
        eBSStorageInfo?: pulumi.Input<inputs.msk.ClusterEBSStorageInfoArgs>;
    }

    export interface ClusterTlsArgs {
        certificateAuthorityArnList?: pulumi.Input<pulumi.Input<string>[]>;
        enabled?: pulumi.Input<boolean>;
    }

    export interface ClusterUnauthenticatedArgs {
        enabled: pulumi.Input<boolean>;
    }
}

export namespace mwaa {
    /**
     * Logging configuration for the environment.
     */
    export interface EnvironmentLoggingConfigurationArgs {
        dagProcessingLogs?: pulumi.Input<inputs.mwaa.EnvironmentModuleLoggingConfigurationArgs>;
        schedulerLogs?: pulumi.Input<inputs.mwaa.EnvironmentModuleLoggingConfigurationArgs>;
        taskLogs?: pulumi.Input<inputs.mwaa.EnvironmentModuleLoggingConfigurationArgs>;
        webserverLogs?: pulumi.Input<inputs.mwaa.EnvironmentModuleLoggingConfigurationArgs>;
        workerLogs?: pulumi.Input<inputs.mwaa.EnvironmentModuleLoggingConfigurationArgs>;
    }

    /**
     * Logging configuration for a specific airflow component.
     */
    export interface EnvironmentModuleLoggingConfigurationArgs {
        cloudWatchLogGroupArn?: pulumi.Input<string>;
        enabled?: pulumi.Input<boolean>;
        logLevel?: pulumi.Input<enums.mwaa.EnvironmentLoggingLevel>;
    }

    /**
     * Configures the network resources of the environment.
     */
    export interface EnvironmentNetworkConfigurationArgs {
        /**
         * A list of security groups to use for the environment.
         */
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of subnets to use for the environment. These must be private subnets, in the same VPC, in two different availability zones.
         */
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace neptune {
    export interface DBClusterParameterGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBClusterRoleArgs {
        featureName?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface DBClusterTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBInstanceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBParameterGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBSubnetGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace networkfirewall {
    export interface FirewallPolicyArgs {
        statefulDefaultActions?: pulumi.Input<pulumi.Input<string>[]>;
        statefulEngineOptions?: pulumi.Input<inputs.networkfirewall.FirewallPolicyStatefulEngineOptionsArgs>;
        statefulRuleGroupReferences?: pulumi.Input<pulumi.Input<inputs.networkfirewall.FirewallPolicyStatefulRuleGroupReferenceArgs>[]>;
        statelessCustomActions?: pulumi.Input<pulumi.Input<inputs.networkfirewall.FirewallPolicyCustomActionArgs>[]>;
        statelessDefaultActions: pulumi.Input<pulumi.Input<string>[]>;
        statelessFragmentDefaultActions: pulumi.Input<pulumi.Input<string>[]>;
        statelessRuleGroupReferences?: pulumi.Input<pulumi.Input<inputs.networkfirewall.FirewallPolicyStatelessRuleGroupReferenceArgs>[]>;
    }

    export interface FirewallPolicyActionDefinitionArgs {
        publishMetricAction?: pulumi.Input<inputs.networkfirewall.FirewallPolicyPublishMetricActionArgs>;
    }

    export interface FirewallPolicyCustomActionArgs {
        actionDefinition: pulumi.Input<inputs.networkfirewall.FirewallPolicyActionDefinitionArgs>;
        actionName: pulumi.Input<string>;
    }

    export interface FirewallPolicyDimensionArgs {
        value: pulumi.Input<string>;
    }

    export interface FirewallPolicyPublishMetricActionArgs {
        dimensions: pulumi.Input<pulumi.Input<inputs.networkfirewall.FirewallPolicyDimensionArgs>[]>;
    }

    export interface FirewallPolicyStatefulEngineOptionsArgs {
        ruleOrder?: pulumi.Input<enums.networkfirewall.FirewallPolicyRuleOrder>;
    }

    export interface FirewallPolicyStatefulRuleGroupReferenceArgs {
        priority?: pulumi.Input<number>;
        resourceArn: pulumi.Input<string>;
    }

    export interface FirewallPolicyStatelessRuleGroupReferenceArgs {
        priority: pulumi.Input<number>;
        resourceArn: pulumi.Input<string>;
    }

    export interface FirewallPolicyTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface FirewallSubnetMappingArgs {
        /**
         * A SubnetId.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface FirewallTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface LoggingConfigurationArgs {
        logDestinationConfigs: pulumi.Input<pulumi.Input<inputs.networkfirewall.LoggingConfigurationLogDestinationConfigArgs>[]>;
    }

    export interface LoggingConfigurationLogDestinationConfigArgs {
        /**
         * A key-value pair to configure the logDestinations.
         */
        logDestination: any;
        logDestinationType: pulumi.Input<enums.networkfirewall.LoggingConfigurationLogDestinationConfigLogDestinationType>;
        logType: pulumi.Input<enums.networkfirewall.LoggingConfigurationLogDestinationConfigLogType>;
    }

    export interface RuleGroupArgs {
        ruleVariables?: pulumi.Input<inputs.networkfirewall.RuleGroupRuleVariablesArgs>;
        rulesSource: pulumi.Input<inputs.networkfirewall.RuleGroupRulesSourceArgs>;
        statefulRuleOptions?: pulumi.Input<inputs.networkfirewall.RuleGroupStatefulRuleOptionsArgs>;
    }

    export interface RuleGroupActionDefinitionArgs {
        publishMetricAction?: pulumi.Input<inputs.networkfirewall.RuleGroupPublishMetricActionArgs>;
    }

    export interface RuleGroupAddressArgs {
        addressDefinition: pulumi.Input<string>;
    }

    export interface RuleGroupCustomActionArgs {
        actionDefinition: pulumi.Input<inputs.networkfirewall.RuleGroupActionDefinitionArgs>;
        actionName: pulumi.Input<string>;
    }

    export interface RuleGroupDimensionArgs {
        value: pulumi.Input<string>;
    }

    export interface RuleGroupHeaderArgs {
        destination: pulumi.Input<string>;
        destinationPort: pulumi.Input<string>;
        direction: pulumi.Input<enums.networkfirewall.RuleGroupHeaderDirection>;
        protocol: pulumi.Input<enums.networkfirewall.RuleGroupHeaderProtocol>;
        source: pulumi.Input<string>;
        sourcePort: pulumi.Input<string>;
    }

    export interface RuleGroupMatchAttributesArgs {
        destinationPorts?: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupPortRangeArgs>[]>;
        destinations?: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupAddressArgs>[]>;
        protocols?: pulumi.Input<pulumi.Input<number>[]>;
        sourcePorts?: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupPortRangeArgs>[]>;
        sources?: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupAddressArgs>[]>;
        tCPFlags?: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupTCPFlagFieldArgs>[]>;
    }

    export interface RuleGroupPortRangeArgs {
        fromPort: pulumi.Input<number>;
        toPort: pulumi.Input<number>;
    }

    export interface RuleGroupPublishMetricActionArgs {
        dimensions: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupDimensionArgs>[]>;
    }

    export interface RuleGroupRuleDefinitionArgs {
        actions: pulumi.Input<pulumi.Input<string>[]>;
        matchAttributes: pulumi.Input<inputs.networkfirewall.RuleGroupMatchAttributesArgs>;
    }

    export interface RuleGroupRuleOptionArgs {
        keyword: pulumi.Input<string>;
        settings?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleGroupRuleVariablesArgs {
        iPSets?: any;
        portSets?: any;
    }

    export interface RuleGroupRulesSourceArgs {
        rulesSourceList?: pulumi.Input<inputs.networkfirewall.RuleGroupRulesSourceListArgs>;
        rulesString?: pulumi.Input<string>;
        statefulRules?: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupStatefulRuleArgs>[]>;
        statelessRulesAndCustomActions?: pulumi.Input<inputs.networkfirewall.RuleGroupStatelessRulesAndCustomActionsArgs>;
    }

    export interface RuleGroupRulesSourceListArgs {
        generatedRulesType: pulumi.Input<enums.networkfirewall.RuleGroupGeneratedRulesType>;
        targetTypes: pulumi.Input<pulumi.Input<enums.networkfirewall.RuleGroupTargetType>[]>;
        targets: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleGroupStatefulRuleArgs {
        action: pulumi.Input<enums.networkfirewall.RuleGroupStatefulRuleAction>;
        header: pulumi.Input<inputs.networkfirewall.RuleGroupHeaderArgs>;
        ruleOptions: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupRuleOptionArgs>[]>;
    }

    export interface RuleGroupStatefulRuleOptionsArgs {
        ruleOrder?: pulumi.Input<enums.networkfirewall.RuleGroupRuleOrder>;
    }

    export interface RuleGroupStatelessRuleArgs {
        priority: pulumi.Input<number>;
        ruleDefinition: pulumi.Input<inputs.networkfirewall.RuleGroupRuleDefinitionArgs>;
    }

    export interface RuleGroupStatelessRulesAndCustomActionsArgs {
        customActions?: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupCustomActionArgs>[]>;
        statelessRules: pulumi.Input<pulumi.Input<inputs.networkfirewall.RuleGroupStatelessRuleArgs>[]>;
    }

    export interface RuleGroupTCPFlagFieldArgs {
        flags: pulumi.Input<pulumi.Input<enums.networkfirewall.RuleGroupTCPFlag>[]>;
        masks?: pulumi.Input<pulumi.Input<enums.networkfirewall.RuleGroupTCPFlag>[]>;
    }

    export interface RuleGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace networkmanager {
    /**
     * The site location.
     */
    export interface DeviceLocationArgs {
        /**
         * The physical address.
         */
        address?: pulumi.Input<string>;
        /**
         * The latitude.
         */
        latitude?: pulumi.Input<string>;
        /**
         * The longitude.
         */
        longitude?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a device resource.
     */
    export interface DeviceTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a global network resource.
     */
    export interface GlobalNetworkTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * The bandwidth for the link.
     */
    export interface LinkBandwidthArgs {
        /**
         * Download speed in Mbps.
         */
        downloadSpeed?: pulumi.Input<number>;
        /**
         * Upload speed in Mbps.
         */
        uploadSpeed?: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a link resource.
     */
    export interface LinkTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * The location of the site
     */
    export interface SiteLocationArgs {
        /**
         * The physical address.
         */
        address?: pulumi.Input<string>;
        /**
         * The latitude.
         */
        latitude?: pulumi.Input<string>;
        /**
         * The longitude.
         */
        longitude?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a site resource.
     */
    export interface SiteTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace nimblestudio {
    /**
     * <p>A configuration for a streaming session.</p>
     */
    export interface LaunchProfileStreamConfigurationArgs {
        clipboardMode: pulumi.Input<enums.nimblestudio.LaunchProfileStreamingClipboardMode>;
        /**
         * <p>The EC2 instance types that users can select from when launching a streaming session with this launch profile.</p>
         */
        ec2InstanceTypes: pulumi.Input<pulumi.Input<enums.nimblestudio.LaunchProfileStreamingInstanceType>[]>;
        /**
         * <p>The length of time, in minutes, that a streaming session can run. After this point, Nimble Studio automatically terminates the session.</p>
         */
        maxSessionLengthInMinutes?: pulumi.Input<number>;
        /**
         * <p>The streaming images that users can select from when launching a streaming session with this launch profile.</p>
         */
        streamingImageIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LaunchProfileTagsArgs {
    }

    export interface StreamingImageTagsArgs {
    }

    /**
     * <p>An LDAP attribute of an Active Directory computer account, in the form of a name:value pair.</p>
     */
    export interface StudioComponentActiveDirectoryComputerAttributeArgs {
        /**
         * <p>The name for the LDAP attribute.</p>
         */
        name?: pulumi.Input<string>;
        /**
         * <p>The value for the LDAP attribute.</p>
         */
        value?: pulumi.Input<string>;
    }

    /**
     * <p>The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.</p>
     */
    export interface StudioComponentActiveDirectoryConfigurationArgs {
        /**
         * <p>A collection of custom attributes for an Active Directory computer.</p>
         */
        computerAttributes?: pulumi.Input<pulumi.Input<inputs.nimblestudio.StudioComponentActiveDirectoryComputerAttributeArgs>[]>;
        /**
         * <p>The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.</p>
         */
        directoryId?: pulumi.Input<string>;
        /**
         * <p>The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.</p>
         */
        organizationalUnitDistinguishedName?: pulumi.Input<string>;
    }

    /**
     * <p>The configuration for a render farm that is associated with a studio resource.</p>
     */
    export interface StudioComponentComputeFarmConfigurationArgs {
        /**
         * <p>The name of an Active Directory user that is used on ComputeFarm worker instances.</p>
         */
        activeDirectoryUser?: pulumi.Input<string>;
        /**
         * <p>The endpoint of the ComputeFarm that is accessed by the studio component resource.</p>
         */
        endpoint?: pulumi.Input<string>;
    }

    /**
     * <p>The configuration of the studio component, based on component type.</p>
     */
    export interface StudioComponentConfigurationArgs {
        activeDirectoryConfiguration?: pulumi.Input<inputs.nimblestudio.StudioComponentActiveDirectoryConfigurationArgs>;
        computeFarmConfiguration?: pulumi.Input<inputs.nimblestudio.StudioComponentComputeFarmConfigurationArgs>;
        licenseServiceConfiguration?: pulumi.Input<inputs.nimblestudio.StudioComponentLicenseServiceConfigurationArgs>;
        sharedFileSystemConfiguration?: pulumi.Input<inputs.nimblestudio.StudioComponentSharedFileSystemConfigurationArgs>;
    }

    /**
     * <p>Initialization scripts for studio components.</p>
     */
    export interface StudioComponentInitializationScriptArgs {
        /**
         * <p>The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".</p>
         */
        launchProfileProtocolVersion?: pulumi.Input<string>;
        platform?: pulumi.Input<enums.nimblestudio.StudioComponentLaunchProfilePlatform>;
        runContext?: pulumi.Input<enums.nimblestudio.StudioComponentInitializationScriptRunContext>;
        /**
         * <p>The initialization script.</p>
         */
        script?: pulumi.Input<string>;
    }

    /**
     * <p>The configuration for a license service that is associated with a studio resource.</p>
     */
    export interface StudioComponentLicenseServiceConfigurationArgs {
        /**
         * <p>The endpoint of the license service that is accessed by the studio component resource.</p>
         */
        endpoint?: pulumi.Input<string>;
    }

    /**
     * <p>A parameter for a studio component script, in the form of a key:value pair.</p>
     */
    export interface StudioComponentScriptParameterKeyValueArgs {
        /**
         * <p>A script parameter key.</p>
         */
        key?: pulumi.Input<string>;
        /**
         * <p>A script parameter value.</p>
         */
        value?: pulumi.Input<string>;
    }

    /**
     * <p>The configuration for a shared file storage system that is associated with a studio resource.</p>
     */
    export interface StudioComponentSharedFileSystemConfigurationArgs {
        /**
         * <p>The endpoint of the shared file system that is accessed by the studio component resource.</p>
         */
        endpoint?: pulumi.Input<string>;
        /**
         * <p>The unique identifier for a file system.</p>
         */
        fileSystemId?: pulumi.Input<string>;
        /**
         * <p>The mount location for a shared file system on a Linux virtual workstation.</p>
         */
        linuxMountPoint?: pulumi.Input<string>;
        /**
         * <p>The name of the file share.</p>
         */
        shareName?: pulumi.Input<string>;
        /**
         * <p>The mount location for a shared file system on a Windows virtual workstation.</p>
         */
        windowsMountDrive?: pulumi.Input<string>;
    }

    export interface StudioComponentTagsArgs {
    }

    /**
     * <p>Configuration of the encryption method that is used for the studio.</p>
     */
    export interface StudioEncryptionConfigurationArgs {
        /**
         * <p>The ARN for a KMS key that is used to encrypt studio data.</p>
         */
        keyArn?: pulumi.Input<string>;
        keyType: pulumi.Input<enums.nimblestudio.StudioEncryptionConfigurationKeyType>;
    }

    export interface StudioTagsArgs {
    }
}

export namespace opensearchservice {
    export interface DomainAdvancedSecurityOptionsInputArgs {
        enabled?: pulumi.Input<boolean>;
        internalUserDatabaseEnabled?: pulumi.Input<boolean>;
        masterUserOptions?: pulumi.Input<inputs.opensearchservice.DomainMasterUserOptionsArgs>;
    }

    export interface DomainClusterConfigArgs {
        dedicatedMasterCount?: pulumi.Input<number>;
        dedicatedMasterEnabled?: pulumi.Input<boolean>;
        dedicatedMasterType?: pulumi.Input<string>;
        instanceCount?: pulumi.Input<number>;
        instanceType?: pulumi.Input<string>;
        warmCount?: pulumi.Input<number>;
        warmEnabled?: pulumi.Input<boolean>;
        warmType?: pulumi.Input<string>;
        zoneAwarenessConfig?: pulumi.Input<inputs.opensearchservice.DomainZoneAwarenessConfigArgs>;
        zoneAwarenessEnabled?: pulumi.Input<boolean>;
    }

    export interface DomainCognitoOptionsArgs {
        enabled?: pulumi.Input<boolean>;
        identityPoolId?: pulumi.Input<string>;
        roleArn?: pulumi.Input<string>;
        userPoolId?: pulumi.Input<string>;
    }

    export interface DomainEBSOptionsArgs {
        eBSEnabled?: pulumi.Input<boolean>;
        iops?: pulumi.Input<number>;
        volumeSize?: pulumi.Input<number>;
        volumeType?: pulumi.Input<string>;
    }

    export interface DomainEncryptionAtRestOptionsArgs {
        enabled?: pulumi.Input<boolean>;
        kmsKeyId?: pulumi.Input<string>;
    }

    export interface DomainEndpointOptionsArgs {
        customEndpoint?: pulumi.Input<string>;
        customEndpointCertificateArn?: pulumi.Input<string>;
        customEndpointEnabled?: pulumi.Input<boolean>;
        enforceHTTPS?: pulumi.Input<boolean>;
        tLSSecurityPolicy?: pulumi.Input<string>;
    }

    export interface DomainMasterUserOptionsArgs {
        masterUserARN?: pulumi.Input<string>;
        masterUserName?: pulumi.Input<string>;
        masterUserPassword?: pulumi.Input<string>;
    }

    export interface DomainNodeToNodeEncryptionOptionsArgs {
        enabled?: pulumi.Input<boolean>;
    }

    export interface DomainSnapshotOptionsArgs {
        automatedSnapshotStartHour?: pulumi.Input<number>;
    }

    export interface DomainTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DomainVPCOptionsArgs {
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DomainZoneAwarenessConfigArgs {
        availabilityZoneCount?: pulumi.Input<number>;
    }
}

export namespace opsworks {
    export interface AppDataSourceArgs {
        arn?: pulumi.Input<string>;
        databaseName?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface AppEnvironmentVariableArgs {
        key: pulumi.Input<string>;
        secure?: pulumi.Input<boolean>;
        value: pulumi.Input<string>;
    }

    export interface AppSourceArgs {
        password?: pulumi.Input<string>;
        revision?: pulumi.Input<string>;
        sshKey?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        url?: pulumi.Input<string>;
        username?: pulumi.Input<string>;
    }

    export interface AppSslConfigurationArgs {
        certificate?: pulumi.Input<string>;
        chain?: pulumi.Input<string>;
        privateKey?: pulumi.Input<string>;
    }

    export interface InstanceBlockDeviceMappingArgs {
        deviceName?: pulumi.Input<string>;
        ebs?: pulumi.Input<inputs.opsworks.InstanceEbsBlockDeviceArgs>;
        noDevice?: pulumi.Input<string>;
        virtualName?: pulumi.Input<string>;
    }

    export interface InstanceEbsBlockDeviceArgs {
        deleteOnTermination?: pulumi.Input<boolean>;
        iops?: pulumi.Input<number>;
        snapshotId?: pulumi.Input<string>;
        volumeSize?: pulumi.Input<number>;
        volumeType?: pulumi.Input<string>;
    }

    export interface InstanceTimeBasedAutoScalingArgs {
        friday?: any;
        monday?: any;
        saturday?: any;
        sunday?: any;
        thursday?: any;
        tuesday?: any;
        wednesday?: any;
    }

    export interface LayerAutoScalingThresholdsArgs {
        cpuThreshold?: pulumi.Input<number>;
        ignoreMetricsTime?: pulumi.Input<number>;
        instanceCount?: pulumi.Input<number>;
        loadThreshold?: pulumi.Input<number>;
        memoryThreshold?: pulumi.Input<number>;
        thresholdsWaitTime?: pulumi.Input<number>;
    }

    export interface LayerLifecycleEventConfigurationArgs {
        shutdownEventConfiguration?: pulumi.Input<inputs.opsworks.LayerShutdownEventConfigurationArgs>;
    }

    export interface LayerLoadBasedAutoScalingArgs {
        downScaling?: pulumi.Input<inputs.opsworks.LayerAutoScalingThresholdsArgs>;
        enable?: pulumi.Input<boolean>;
        upScaling?: pulumi.Input<inputs.opsworks.LayerAutoScalingThresholdsArgs>;
    }

    export interface LayerRecipesArgs {
        configure?: pulumi.Input<pulumi.Input<string>[]>;
        deploy?: pulumi.Input<pulumi.Input<string>[]>;
        setup?: pulumi.Input<pulumi.Input<string>[]>;
        shutdown?: pulumi.Input<pulumi.Input<string>[]>;
        undeploy?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LayerShutdownEventConfigurationArgs {
        delayUntilElbConnectionsDrained?: pulumi.Input<boolean>;
        executionTimeout?: pulumi.Input<number>;
    }

    export interface LayerTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface LayerVolumeConfigurationArgs {
        encrypted?: pulumi.Input<boolean>;
        iops?: pulumi.Input<number>;
        mountPoint?: pulumi.Input<string>;
        numberOfDisks?: pulumi.Input<number>;
        raidLevel?: pulumi.Input<number>;
        size?: pulumi.Input<number>;
        volumeType?: pulumi.Input<string>;
    }

    export interface StackChefConfigurationArgs {
        berkshelfVersion?: pulumi.Input<string>;
        manageBerkshelf?: pulumi.Input<boolean>;
    }

    export interface StackConfigurationManagerArgs {
        name?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface StackElasticIpArgs {
        ip: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface StackRdsDbInstanceArgs {
        dbPassword: pulumi.Input<string>;
        dbUser: pulumi.Input<string>;
        rdsDbInstanceArn: pulumi.Input<string>;
    }

    export interface StackSourceArgs {
        password?: pulumi.Input<string>;
        revision?: pulumi.Input<string>;
        sshKey?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        url?: pulumi.Input<string>;
        username?: pulumi.Input<string>;
    }

    export interface StackTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace opsworkscm {
    export interface ServerEngineAttributeArgs {
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ServerTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace panorama {
    export interface ApplicationInstanceManifestOverridesPayloadArgs {
        payloadData?: pulumi.Input<string>;
    }

    export interface ApplicationInstanceManifestPayloadArgs {
        payloadData?: pulumi.Input<string>;
    }

    export interface ApplicationInstanceTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    export interface PackageTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace pinpoint {
    export interface ApplicationSettingsCampaignHookArgs {
        lambdaFunctionName?: pulumi.Input<string>;
        mode?: pulumi.Input<string>;
        webUrl?: pulumi.Input<string>;
    }

    export interface ApplicationSettingsLimitsArgs {
        daily?: pulumi.Input<number>;
        maximumDuration?: pulumi.Input<number>;
        messagesPerSecond?: pulumi.Input<number>;
        total?: pulumi.Input<number>;
    }

    export interface ApplicationSettingsQuietTimeArgs {
        end: pulumi.Input<string>;
        start: pulumi.Input<string>;
    }

    export interface CampaignDefaultButtonConfigurationArgs {
        backgroundColor?: pulumi.Input<string>;
        borderRadius?: pulumi.Input<number>;
        buttonAction?: pulumi.Input<string>;
        link?: pulumi.Input<string>;
        text?: pulumi.Input<string>;
        textColor?: pulumi.Input<string>;
    }

    export interface CampaignEmailMessageArgs {
        body?: pulumi.Input<string>;
        fromAddress?: pulumi.Input<string>;
        htmlBody?: pulumi.Input<string>;
        title?: pulumi.Input<string>;
    }

    export interface CampaignEventDimensionsArgs {
        attributes?: any;
        eventType?: pulumi.Input<inputs.pinpoint.CampaignSetDimensionArgs>;
        metrics?: any;
    }

    export interface CampaignEventFilterArgs {
        dimensions?: pulumi.Input<inputs.pinpoint.CampaignEventDimensionsArgs>;
        filterType?: pulumi.Input<string>;
    }

    export interface CampaignHookArgs {
        lambdaFunctionName?: pulumi.Input<string>;
        mode?: pulumi.Input<string>;
        webUrl?: pulumi.Input<string>;
    }

    export interface CampaignInAppMessageArgs {
        content?: pulumi.Input<pulumi.Input<inputs.pinpoint.CampaignInAppMessageContentArgs>[]>;
        customConfig?: any;
        layout?: pulumi.Input<string>;
    }

    export interface CampaignInAppMessageBodyConfigArgs {
        alignment?: pulumi.Input<string>;
        body?: pulumi.Input<string>;
        textColor?: pulumi.Input<string>;
    }

    export interface CampaignInAppMessageButtonArgs {
        android?: pulumi.Input<inputs.pinpoint.CampaignOverrideButtonConfigurationArgs>;
        defaultConfig?: pulumi.Input<inputs.pinpoint.CampaignDefaultButtonConfigurationArgs>;
        iOS?: pulumi.Input<inputs.pinpoint.CampaignOverrideButtonConfigurationArgs>;
        web?: pulumi.Input<inputs.pinpoint.CampaignOverrideButtonConfigurationArgs>;
    }

    export interface CampaignInAppMessageContentArgs {
        backgroundColor?: pulumi.Input<string>;
        bodyConfig?: pulumi.Input<inputs.pinpoint.CampaignInAppMessageBodyConfigArgs>;
        headerConfig?: pulumi.Input<inputs.pinpoint.CampaignInAppMessageHeaderConfigArgs>;
        imageUrl?: pulumi.Input<string>;
        primaryBtn?: pulumi.Input<inputs.pinpoint.CampaignInAppMessageButtonArgs>;
        secondaryBtn?: pulumi.Input<inputs.pinpoint.CampaignInAppMessageButtonArgs>;
    }

    export interface CampaignInAppMessageHeaderConfigArgs {
        alignment?: pulumi.Input<string>;
        header?: pulumi.Input<string>;
        textColor?: pulumi.Input<string>;
    }

    export interface CampaignLimitsArgs {
        daily?: pulumi.Input<number>;
        maximumDuration?: pulumi.Input<number>;
        messagesPerSecond?: pulumi.Input<number>;
        session?: pulumi.Input<number>;
        total?: pulumi.Input<number>;
    }

    export interface CampaignMessageArgs {
        action?: pulumi.Input<string>;
        body?: pulumi.Input<string>;
        imageIconUrl?: pulumi.Input<string>;
        imageSmallIconUrl?: pulumi.Input<string>;
        imageUrl?: pulumi.Input<string>;
        jsonBody?: pulumi.Input<string>;
        mediaUrl?: pulumi.Input<string>;
        rawContent?: pulumi.Input<string>;
        silentPush?: pulumi.Input<boolean>;
        timeToLive?: pulumi.Input<number>;
        title?: pulumi.Input<string>;
        url?: pulumi.Input<string>;
    }

    export interface CampaignMessageConfigurationArgs {
        aDMMessage?: pulumi.Input<inputs.pinpoint.CampaignMessageArgs>;
        aPNSMessage?: pulumi.Input<inputs.pinpoint.CampaignMessageArgs>;
        baiduMessage?: pulumi.Input<inputs.pinpoint.CampaignMessageArgs>;
        defaultMessage?: pulumi.Input<inputs.pinpoint.CampaignMessageArgs>;
        emailMessage?: pulumi.Input<inputs.pinpoint.CampaignEmailMessageArgs>;
        gCMMessage?: pulumi.Input<inputs.pinpoint.CampaignMessageArgs>;
        inAppMessage?: pulumi.Input<inputs.pinpoint.CampaignInAppMessageArgs>;
        sMSMessage?: pulumi.Input<inputs.pinpoint.CampaignSmsMessageArgs>;
    }

    export interface CampaignOverrideButtonConfigurationArgs {
        buttonAction?: pulumi.Input<string>;
        link?: pulumi.Input<string>;
    }

    export interface CampaignQuietTimeArgs {
        end: pulumi.Input<string>;
        start: pulumi.Input<string>;
    }

    export interface CampaignScheduleArgs {
        endTime?: pulumi.Input<string>;
        eventFilter?: pulumi.Input<inputs.pinpoint.CampaignEventFilterArgs>;
        frequency?: pulumi.Input<string>;
        isLocalTime?: pulumi.Input<boolean>;
        quietTime?: pulumi.Input<inputs.pinpoint.CampaignQuietTimeArgs>;
        startTime?: pulumi.Input<string>;
        timeZone?: pulumi.Input<string>;
    }

    export interface CampaignSetDimensionArgs {
        dimensionType?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CampaignSmsMessageArgs {
        body?: pulumi.Input<string>;
        entityId?: pulumi.Input<string>;
        messageType?: pulumi.Input<string>;
        originationNumber?: pulumi.Input<string>;
        senderId?: pulumi.Input<string>;
        templateId?: pulumi.Input<string>;
    }

    export interface CampaignWriteTreatmentResourceArgs {
        messageConfiguration?: pulumi.Input<inputs.pinpoint.CampaignMessageConfigurationArgs>;
        schedule?: pulumi.Input<inputs.pinpoint.CampaignScheduleArgs>;
        sizePercent?: pulumi.Input<number>;
        treatmentDescription?: pulumi.Input<string>;
        treatmentName?: pulumi.Input<string>;
    }

    export interface InAppTemplateBodyConfigArgs {
        alignment?: pulumi.Input<enums.pinpoint.InAppTemplateAlignment>;
        body?: pulumi.Input<string>;
        textColor?: pulumi.Input<string>;
    }

    export interface InAppTemplateButtonConfigArgs {
        android?: pulumi.Input<inputs.pinpoint.InAppTemplateOverrideButtonConfigurationArgs>;
        defaultConfig?: pulumi.Input<inputs.pinpoint.InAppTemplateDefaultButtonConfigurationArgs>;
        iOS?: pulumi.Input<inputs.pinpoint.InAppTemplateOverrideButtonConfigurationArgs>;
        web?: pulumi.Input<inputs.pinpoint.InAppTemplateOverrideButtonConfigurationArgs>;
    }

    export interface InAppTemplateDefaultButtonConfigurationArgs {
        backgroundColor?: pulumi.Input<string>;
        borderRadius?: pulumi.Input<number>;
        buttonAction?: pulumi.Input<enums.pinpoint.InAppTemplateButtonAction>;
        link?: pulumi.Input<string>;
        text?: pulumi.Input<string>;
        textColor?: pulumi.Input<string>;
    }

    export interface InAppTemplateHeaderConfigArgs {
        alignment?: pulumi.Input<enums.pinpoint.InAppTemplateAlignment>;
        header?: pulumi.Input<string>;
        textColor?: pulumi.Input<string>;
    }

    export interface InAppTemplateInAppMessageContentArgs {
        backgroundColor?: pulumi.Input<string>;
        bodyConfig?: pulumi.Input<inputs.pinpoint.InAppTemplateBodyConfigArgs>;
        headerConfig?: pulumi.Input<inputs.pinpoint.InAppTemplateHeaderConfigArgs>;
        imageUrl?: pulumi.Input<string>;
        primaryBtn?: pulumi.Input<inputs.pinpoint.InAppTemplateButtonConfigArgs>;
        secondaryBtn?: pulumi.Input<inputs.pinpoint.InAppTemplateButtonConfigArgs>;
    }

    export interface InAppTemplateOverrideButtonConfigurationArgs {
        buttonAction?: pulumi.Input<enums.pinpoint.InAppTemplateButtonAction>;
        link?: pulumi.Input<string>;
    }

    export interface PushTemplateAPNSPushNotificationTemplateArgs {
        action?: pulumi.Input<string>;
        body?: pulumi.Input<string>;
        mediaUrl?: pulumi.Input<string>;
        sound?: pulumi.Input<string>;
        title?: pulumi.Input<string>;
        url?: pulumi.Input<string>;
    }

    export interface PushTemplateAndroidPushNotificationTemplateArgs {
        action?: pulumi.Input<string>;
        body?: pulumi.Input<string>;
        imageIconUrl?: pulumi.Input<string>;
        imageUrl?: pulumi.Input<string>;
        smallImageIconUrl?: pulumi.Input<string>;
        sound?: pulumi.Input<string>;
        title?: pulumi.Input<string>;
        url?: pulumi.Input<string>;
    }

    export interface PushTemplateDefaultPushNotificationTemplateArgs {
        action?: pulumi.Input<string>;
        body?: pulumi.Input<string>;
        sound?: pulumi.Input<string>;
        title?: pulumi.Input<string>;
        url?: pulumi.Input<string>;
    }

    export interface SegmentBehaviorArgs {
        recency?: pulumi.Input<inputs.pinpoint.SegmentRecencyArgs>;
    }

    export interface SegmentCoordinatesArgs {
        latitude: pulumi.Input<number>;
        longitude: pulumi.Input<number>;
    }

    export interface SegmentDemographicArgs {
        appVersion?: pulumi.Input<inputs.pinpoint.SegmentSetDimensionArgs>;
        channel?: pulumi.Input<inputs.pinpoint.SegmentSetDimensionArgs>;
        deviceType?: pulumi.Input<inputs.pinpoint.SegmentSetDimensionArgs>;
        make?: pulumi.Input<inputs.pinpoint.SegmentSetDimensionArgs>;
        model?: pulumi.Input<inputs.pinpoint.SegmentSetDimensionArgs>;
        platform?: pulumi.Input<inputs.pinpoint.SegmentSetDimensionArgs>;
    }

    export interface SegmentDimensionsArgs {
        attributes?: any;
        behavior?: pulumi.Input<inputs.pinpoint.SegmentBehaviorArgs>;
        demographic?: pulumi.Input<inputs.pinpoint.SegmentDemographicArgs>;
        location?: pulumi.Input<inputs.pinpoint.SegmentLocationArgs>;
        metrics?: any;
        userAttributes?: any;
    }

    export interface SegmentGPSPointArgs {
        coordinates: pulumi.Input<inputs.pinpoint.SegmentCoordinatesArgs>;
        rangeInKilometers: pulumi.Input<number>;
    }

    export interface SegmentGroupsArgs {
        groups?: pulumi.Input<pulumi.Input<inputs.pinpoint.SegmentGroupsArgs>[]>;
        include?: pulumi.Input<string>;
    }

    export interface SegmentLocationArgs {
        country?: pulumi.Input<inputs.pinpoint.SegmentSetDimensionArgs>;
        gPSPoint?: pulumi.Input<inputs.pinpoint.SegmentGPSPointArgs>;
    }

    export interface SegmentRecencyArgs {
        duration: pulumi.Input<string>;
        recencyType: pulumi.Input<string>;
    }

    export interface SegmentSetDimensionArgs {
        dimensionType?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace pinpointemail {
    export interface ConfigurationSetDeliveryOptionsArgs {
        sendingPoolName?: pulumi.Input<string>;
    }

    export interface ConfigurationSetEventDestinationCloudWatchDestinationArgs {
        dimensionConfigurations?: pulumi.Input<pulumi.Input<inputs.pinpointemail.ConfigurationSetEventDestinationDimensionConfigurationArgs>[]>;
    }

    export interface ConfigurationSetEventDestinationDimensionConfigurationArgs {
        defaultDimensionValue: pulumi.Input<string>;
        dimensionName: pulumi.Input<string>;
        dimensionValueSource: pulumi.Input<string>;
    }

    export interface ConfigurationSetEventDestinationEventDestinationArgs {
        cloudWatchDestination?: pulumi.Input<inputs.pinpointemail.ConfigurationSetEventDestinationCloudWatchDestinationArgs>;
        enabled?: pulumi.Input<boolean>;
        kinesisFirehoseDestination?: pulumi.Input<inputs.pinpointemail.ConfigurationSetEventDestinationKinesisFirehoseDestinationArgs>;
        matchingEventTypes: pulumi.Input<pulumi.Input<string>[]>;
        pinpointDestination?: pulumi.Input<inputs.pinpointemail.ConfigurationSetEventDestinationPinpointDestinationArgs>;
        snsDestination?: pulumi.Input<inputs.pinpointemail.ConfigurationSetEventDestinationSnsDestinationArgs>;
    }

    export interface ConfigurationSetEventDestinationKinesisFirehoseDestinationArgs {
        deliveryStreamArn: pulumi.Input<string>;
        iamRoleArn: pulumi.Input<string>;
    }

    export interface ConfigurationSetEventDestinationPinpointDestinationArgs {
        applicationArn?: pulumi.Input<string>;
    }

    export interface ConfigurationSetEventDestinationSnsDestinationArgs {
        topicArn: pulumi.Input<string>;
    }

    export interface ConfigurationSetReputationOptionsArgs {
        reputationMetricsEnabled?: pulumi.Input<boolean>;
    }

    export interface ConfigurationSetSendingOptionsArgs {
        sendingEnabled?: pulumi.Input<boolean>;
    }

    export interface ConfigurationSetTagsArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ConfigurationSetTrackingOptionsArgs {
        customRedirectDomain?: pulumi.Input<string>;
    }

    export interface DedicatedIpPoolTagsArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface IdentityMailFromAttributesArgs {
        behaviorOnMxFailure?: pulumi.Input<string>;
        mailFromDomain?: pulumi.Input<string>;
    }

    export interface IdentityTagsArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace qldb {
    export interface LedgerTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface StreamKinesisConfigurationArgs {
        aggregationEnabled?: pulumi.Input<boolean>;
        streamArn?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface StreamTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace quicksight {
    /**
     * <p>Dataset reference.</p>
     */
    export interface AnalysisDataSetReferenceArgs {
        /**
         * <p>Dataset Amazon Resource Name (ARN).</p>
         */
        dataSetArn: pulumi.Input<string>;
        /**
         * <p>Dataset placeholder.</p>
         */
        dataSetPlaceholder: pulumi.Input<string>;
    }

    /**
     * <p>A date-time parameter.</p>
     */
    export interface AnalysisDateTimeParameterArgs {
        /**
         * <p>A display name for the date-time parameter.</p>
         */
        name: pulumi.Input<string>;
        /**
         * <p>The values for the date-time parameter.</p>
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * <p>A decimal parameter.</p>
     */
    export interface AnalysisDecimalParameterArgs {
        /**
         * <p>A display name for the decimal parameter.</p>
         */
        name: pulumi.Input<string>;
        /**
         * <p>The values for the decimal parameter.</p>
         */
        values: pulumi.Input<pulumi.Input<number>[]>;
    }

    /**
     * <p>A metadata error structure for an analysis.</p>
     */
    export interface AnalysisErrorArgs {
        /**
         * <p>The message associated with the analysis error.</p>
         */
        message?: pulumi.Input<string>;
        type?: pulumi.Input<enums.quicksight.AnalysisErrorType>;
    }

    /**
     * <p>An integer parameter.</p>
     */
    export interface AnalysisIntegerParameterArgs {
        /**
         * <p>The name of the integer parameter.</p>
         */
        name: pulumi.Input<string>;
        /**
         * <p>The values for the integer parameter.</p>
         */
        values: pulumi.Input<pulumi.Input<number>[]>;
    }

    /**
     * <p>A list of QuickSight parameters and the list's override values.</p>
     */
    export interface AnalysisParametersArgs {
        /**
         * <p>Date-time parameters.</p>
         */
        dateTimeParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.AnalysisDateTimeParameterArgs>[]>;
        /**
         * <p>Decimal parameters.</p>
         */
        decimalParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.AnalysisDecimalParameterArgs>[]>;
        /**
         * <p>Integer parameters.</p>
         */
        integerParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.AnalysisIntegerParameterArgs>[]>;
        /**
         * <p>String parameters.</p>
         */
        stringParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.AnalysisStringParameterArgs>[]>;
    }

    /**
     * <p>Permission for the resource.</p>
     */
    export interface AnalysisResourcePermissionArgs {
        /**
         * <p>The IAM action to grant or revoke permissions on.</p>
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
         *             following:</p>
         *         <ul>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
         *                     ARN. Use this option only to share resources (templates) across AWS accounts.
         *                     (This is less common.) </p>
         *             </li>
         *          </ul>
         */
        principal: pulumi.Input<string>;
    }

    /**
     * <p>The source entity of an analysis.</p>
     */
    export interface AnalysisSourceEntityArgs {
        sourceTemplate?: pulumi.Input<inputs.quicksight.AnalysisSourceTemplateArgs>;
    }

    /**
     * <p>The source template of an analysis.</p>
     */
    export interface AnalysisSourceTemplateArgs {
        /**
         * <p>The Amazon Resource Name (ARN) of the source template of an analysis.</p>
         */
        arn: pulumi.Input<string>;
        /**
         * <p>The dataset references of the source template of an analysis.</p>
         */
        dataSetReferences: pulumi.Input<pulumi.Input<inputs.quicksight.AnalysisDataSetReferenceArgs>[]>;
    }

    /**
     * <p>A string parameter.</p>
     */
    export interface AnalysisStringParameterArgs {
        /**
         * <p>A display name for a string parameter.</p>
         */
        name: pulumi.Input<string>;
        /**
         * <p>The values of a string parameter.</p>
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
     *             resource.</p>
     */
    export interface AnalysisTagArgs {
        /**
         * <p>Tag key.</p>
         */
        key: pulumi.Input<string>;
        /**
         * <p>Tag value.</p>
         */
        value: pulumi.Input<string>;
    }

    /**
     * <p>Ad hoc (one-time) filtering option.</p>
     */
    export interface DashboardAdHocFilteringOptionArgs {
        availabilityStatus?: pulumi.Input<enums.quicksight.DashboardBehavior>;
    }

    /**
     * <p>Dataset reference.</p>
     */
    export interface DashboardDataSetReferenceArgs {
        /**
         * <p>Dataset Amazon Resource Name (ARN).</p>
         */
        dataSetArn: pulumi.Input<string>;
        /**
         * <p>Dataset placeholder.</p>
         */
        dataSetPlaceholder: pulumi.Input<string>;
    }

    /**
     * <p>A date-time parameter.</p>
     */
    export interface DashboardDateTimeParameterArgs {
        /**
         * <p>A display name for the date-time parameter.</p>
         */
        name: pulumi.Input<string>;
        /**
         * <p>The values for the date-time parameter.</p>
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * <p>A decimal parameter.</p>
     */
    export interface DashboardDecimalParameterArgs {
        /**
         * <p>A display name for the decimal parameter.</p>
         */
        name: pulumi.Input<string>;
        /**
         * <p>The values for the decimal parameter.</p>
         */
        values: pulumi.Input<pulumi.Input<number>[]>;
    }

    /**
     * <p>Export to .csv option.</p>
     */
    export interface DashboardExportToCSVOptionArgs {
        availabilityStatus?: pulumi.Input<enums.quicksight.DashboardBehavior>;
    }

    /**
     * <p>An integer parameter.</p>
     */
    export interface DashboardIntegerParameterArgs {
        /**
         * <p>The name of the integer parameter.</p>
         */
        name: pulumi.Input<string>;
        /**
         * <p>The values for the integer parameter.</p>
         */
        values: pulumi.Input<pulumi.Input<number>[]>;
    }

    /**
     * <p>A list of QuickSight parameters and the list's override values.</p>
     */
    export interface DashboardParametersArgs {
        /**
         * <p>Date-time parameters.</p>
         */
        dateTimeParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.DashboardDateTimeParameterArgs>[]>;
        /**
         * <p>Decimal parameters.</p>
         */
        decimalParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.DashboardDecimalParameterArgs>[]>;
        /**
         * <p>Integer parameters.</p>
         */
        integerParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.DashboardIntegerParameterArgs>[]>;
        /**
         * <p>String parameters.</p>
         */
        stringParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.DashboardStringParameterArgs>[]>;
    }

    /**
     * <p>Dashboard publish options.</p>
     */
    export interface DashboardPublishOptionsArgs {
        adHocFilteringOption?: pulumi.Input<inputs.quicksight.DashboardAdHocFilteringOptionArgs>;
        exportToCSVOption?: pulumi.Input<inputs.quicksight.DashboardExportToCSVOptionArgs>;
        sheetControlsOption?: pulumi.Input<inputs.quicksight.DashboardSheetControlsOptionArgs>;
    }

    /**
     * <p>Permission for the resource.</p>
     */
    export interface DashboardResourcePermissionArgs {
        /**
         * <p>The IAM action to grant or revoke permissions on.</p>
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
         *             following:</p>
         *         <ul>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
         *                     ARN. Use this option only to share resources (templates) across AWS accounts.
         *                     (This is less common.) </p>
         *             </li>
         *          </ul>
         */
        principal: pulumi.Input<string>;
    }

    /**
     * <p>Sheet controls option.</p>
     */
    export interface DashboardSheetControlsOptionArgs {
        visibilityState?: pulumi.Input<enums.quicksight.DashboardUIState>;
    }

    /**
     * <p>Dashboard source entity.</p>
     */
    export interface DashboardSourceEntityArgs {
        sourceTemplate?: pulumi.Input<inputs.quicksight.DashboardSourceTemplateArgs>;
    }

    /**
     * <p>Dashboard source template.</p>
     */
    export interface DashboardSourceTemplateArgs {
        /**
         * <p>The Amazon Resource Name (ARN) of the resource.</p>
         */
        arn: pulumi.Input<string>;
        /**
         * <p>Dataset references.</p>
         */
        dataSetReferences: pulumi.Input<pulumi.Input<inputs.quicksight.DashboardDataSetReferenceArgs>[]>;
    }

    /**
     * <p>A string parameter.</p>
     */
    export interface DashboardStringParameterArgs {
        /**
         * <p>A display name for a string parameter.</p>
         */
        name: pulumi.Input<string>;
        /**
         * <p>The values of a string parameter.</p>
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
     *             resource.</p>
     */
    export interface DashboardTagArgs {
        /**
         * <p>Tag key.</p>
         */
        key: pulumi.Input<string>;
        /**
         * <p>Tag value.</p>
         */
        value: pulumi.Input<string>;
    }

    /**
     * <p>Groupings of columns that work together in certain Amazon QuickSight features. This is
     *             a variant type structure. For this structure to be valid, only one of the attributes can
     *             be non-null.</p>
     */
    export interface DataSetColumnGroupArgs {
        geoSpatialColumnGroup?: pulumi.Input<inputs.quicksight.DataSetGeoSpatialColumnGroupArgs>;
    }

    export interface DataSetColumnLevelPermissionRuleArgs {
        columnNames?: pulumi.Input<pulumi.Input<string>[]>;
        principals?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DataSetFieldFolderMapArgs {
    }

    /**
     * <p>Geospatial column group that denotes a hierarchy.</p>
     */
    export interface DataSetGeoSpatialColumnGroupArgs {
        /**
         * <p>Columns in this hierarchy.</p>
         */
        columns: pulumi.Input<pulumi.Input<string>[]>;
        countryCode?: pulumi.Input<enums.quicksight.DataSetGeoSpatialCountryCode>;
        /**
         * <p>A display name for the hierarchy.</p>
         */
        name: pulumi.Input<string>;
    }

    /**
     * <p>Wait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.</p>
     */
    export interface DataSetIngestionWaitPolicyArgs {
        /**
         * <p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.
         *  Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>
         */
        ingestionWaitTimeInHours?: pulumi.Input<number>;
        /**
         * <p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).
         *   Applicable only when DataSetImportMode mode is set to SPICE.</p>
         */
        waitForSpiceIngestion?: pulumi.Input<boolean>;
    }

    export interface DataSetLogicalTableMapArgs {
    }

    export interface DataSetPhysicalTableMapArgs {
    }

    /**
     * <p>Permission for the resource.</p>
     */
    export interface DataSetResourcePermissionArgs {
        /**
         * <p>The IAM action to grant or revoke permissions on.</p>
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
         *             following:</p>
         *         <ul>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
         *                     ARN. Use this option only to share resources (templates) across AWS accounts.
         *                     (This is less common.) </p>
         *             </li>
         *          </ul>
         */
        principal: pulumi.Input<string>;
    }

    /**
     * <p>The row-level security configuration for the dataset.</p>
     */
    export interface DataSetRowLevelPermissionDataSetArgs {
        /**
         * <p>The Amazon Resource Name (ARN) of the permission dataset.</p>
         */
        arn: pulumi.Input<string>;
        formatVersion?: pulumi.Input<enums.quicksight.DataSetRowLevelPermissionFormatVersion>;
        /**
         * <p>The namespace associated with the row-level permissions dataset.</p>
         */
        namespace?: pulumi.Input<string>;
        permissionPolicy: pulumi.Input<enums.quicksight.DataSetRowLevelPermissionPolicy>;
    }

    /**
     * <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
     *             resource.</p>
     */
    export interface DataSetTagArgs {
        /**
         * <p>Tag key.</p>
         */
        key: pulumi.Input<string>;
        /**
         * <p>Tag value.</p>
         */
        value: pulumi.Input<string>;
    }

    /**
     * <p>Amazon Elasticsearch Service parameters.</p>
     */
    export interface DataSourceAmazonElasticsearchParametersArgs {
        /**
         * <p>The Amazon Elasticsearch Service domain.</p>
         */
        domain: pulumi.Input<string>;
    }

    /**
     * <p>Amazon OpenSearch Service parameters.</p>
     */
    export interface DataSourceAmazonOpenSearchParametersArgs {
        /**
         * <p>The Amazon OpenSearch Service domain.</p>
         */
        domain: pulumi.Input<string>;
    }

    /**
     * <p>Amazon Athena parameters.</p>
     */
    export interface DataSourceAthenaParametersArgs {
        /**
         * <p>The workgroup that Amazon Athena uses.</p>
         */
        workGroup?: pulumi.Input<string>;
    }

    /**
     * <p>Amazon Aurora parameters.</p>
     */
    export interface DataSourceAuroraParametersArgs {
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Port.</p>
         */
        port: pulumi.Input<number>;
    }

    /**
     * <p>Amazon Aurora with PostgreSQL compatibility parameters.</p>
     */
    export interface DataSourceAuroraPostgreSqlParametersArgs {
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Port.</p>
         */
        port: pulumi.Input<number>;
    }

    /**
     * <p>The combination of user name and password that are used as credentials.</p>
     */
    export interface DataSourceCredentialPairArgs {
        /**
         * <p>A set of alternate data source parameters that you want to share for these
         *             credentials. The credentials are applied in tandem with the data source parameters when
         *             you copy a data source by using a create or update request. The API operation compares
         *             the <code>DataSourceParameters</code> structure that's in the request with the
         *             structures in the <code>AlternateDataSourceParameters</code> allow list. If the
         *             structures are an exact match, the request is allowed to use the new data source with
         *             the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
         *             null, the <code>DataSourceParameters</code> originally used with these
         *                 <code>Credentials</code> is automatically allowed.</p>
         */
        alternateDataSourceParameters?: pulumi.Input<pulumi.Input<inputs.quicksight.DataSourceParametersArgs>[]>;
        /**
         * <p>Password.</p>
         */
        password: pulumi.Input<string>;
        /**
         * <p>User name.</p>
         */
        username: pulumi.Input<string>;
    }

    /**
     * <p>Data source credentials. This is a variant type structure. For this structure to be
     *             valid, only one of the attributes can be non-null.</p>
     */
    export interface DataSourceCredentialsArgs {
        /**
         * <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
         *             want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
         *             data source in the ARN is used as the credentials for the
         *             <code>DataSourceCredentials</code> structure.</p>
         */
        copySourceArn?: pulumi.Input<string>;
        credentialPair?: pulumi.Input<inputs.quicksight.DataSourceCredentialPairArgs>;
    }

    /**
     * <p>Error information for the data source creation or update.</p>
     */
    export interface DataSourceErrorInfoArgs {
        /**
         * <p>Error message.</p>
         */
        message?: pulumi.Input<string>;
        type?: pulumi.Input<enums.quicksight.DataSourceErrorInfoType>;
    }

    /**
     * <p>Amazon S3 manifest file location.</p>
     */
    export interface DataSourceManifestFileLocationArgs {
        /**
         * <p>Amazon S3 bucket.</p>
         */
        bucket: pulumi.Input<string>;
        /**
         * <p>Amazon S3 key that identifies an object.</p>
         */
        key: pulumi.Input<string>;
    }

    /**
     * <p>MariaDB parameters.</p>
     */
    export interface DataSourceMariaDbParametersArgs {
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Port.</p>
         */
        port: pulumi.Input<number>;
    }

    /**
     * <p>MySQL parameters.</p>
     */
    export interface DataSourceMySqlParametersArgs {
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Port.</p>
         */
        port: pulumi.Input<number>;
    }

    export interface DataSourceOracleParametersArgs {
        database: pulumi.Input<string>;
        host: pulumi.Input<string>;
        port: pulumi.Input<number>;
    }

    /**
     * <p>The parameters that Amazon QuickSight uses to connect to your underlying data source.
     *             This is a variant type structure. For this structure to be valid, only one of the
     *             attributes can be non-null.</p>
     */
    export interface DataSourceParametersArgs {
        amazonElasticsearchParameters?: pulumi.Input<inputs.quicksight.DataSourceAmazonElasticsearchParametersArgs>;
        amazonOpenSearchParameters?: pulumi.Input<inputs.quicksight.DataSourceAmazonOpenSearchParametersArgs>;
        athenaParameters?: pulumi.Input<inputs.quicksight.DataSourceAthenaParametersArgs>;
        auroraParameters?: pulumi.Input<inputs.quicksight.DataSourceAuroraParametersArgs>;
        auroraPostgreSqlParameters?: pulumi.Input<inputs.quicksight.DataSourceAuroraPostgreSqlParametersArgs>;
        mariaDbParameters?: pulumi.Input<inputs.quicksight.DataSourceMariaDbParametersArgs>;
        mySqlParameters?: pulumi.Input<inputs.quicksight.DataSourceMySqlParametersArgs>;
        oracleParameters?: pulumi.Input<inputs.quicksight.DataSourceOracleParametersArgs>;
        postgreSqlParameters?: pulumi.Input<inputs.quicksight.DataSourcePostgreSqlParametersArgs>;
        prestoParameters?: pulumi.Input<inputs.quicksight.DataSourcePrestoParametersArgs>;
        rdsParameters?: pulumi.Input<inputs.quicksight.DataSourceRdsParametersArgs>;
        redshiftParameters?: pulumi.Input<inputs.quicksight.DataSourceRedshiftParametersArgs>;
        s3Parameters?: pulumi.Input<inputs.quicksight.DataSourceS3ParametersArgs>;
        snowflakeParameters?: pulumi.Input<inputs.quicksight.DataSourceSnowflakeParametersArgs>;
        sparkParameters?: pulumi.Input<inputs.quicksight.DataSourceSparkParametersArgs>;
        sqlServerParameters?: pulumi.Input<inputs.quicksight.DataSourceSqlServerParametersArgs>;
        teradataParameters?: pulumi.Input<inputs.quicksight.DataSourceTeradataParametersArgs>;
    }

    /**
     * <p>PostgreSQL parameters.</p>
     */
    export interface DataSourcePostgreSqlParametersArgs {
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Port.</p>
         */
        port: pulumi.Input<number>;
    }

    /**
     * <p>Presto parameters.</p>
     */
    export interface DataSourcePrestoParametersArgs {
        /**
         * <p>Catalog.</p>
         */
        catalog: pulumi.Input<string>;
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Port.</p>
         */
        port: pulumi.Input<number>;
    }

    /**
     * <p>Amazon RDS parameters.</p>
     */
    export interface DataSourceRdsParametersArgs {
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Instance ID.</p>
         */
        instanceId: pulumi.Input<string>;
    }

    /**
     * <p>Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if
     *             <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and
     *             <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>
     */
    export interface DataSourceRedshiftParametersArgs {
        /**
         * <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
         *             provided.</p>
         */
        clusterId?: pulumi.Input<string>;
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
         */
        host?: pulumi.Input<string>;
        /**
         * <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
         */
        port?: pulumi.Input<number>;
    }

    /**
     * <p>Permission for the resource.</p>
     */
    export interface DataSourceResourcePermissionArgs {
        /**
         * <p>The IAM action to grant or revoke permissions on.</p>
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
         *             following:</p>
         *         <ul>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
         *                     ARN. Use this option only to share resources (templates) across AWS accounts.
         *                     (This is less common.) </p>
         *             </li>
         *          </ul>
         */
        principal: pulumi.Input<string>;
    }

    /**
     * <p>S3 parameters.</p>
     */
    export interface DataSourceS3ParametersArgs {
        manifestFileLocation: pulumi.Input<inputs.quicksight.DataSourceManifestFileLocationArgs>;
    }

    /**
     * <p>Snowflake parameters.</p>
     */
    export interface DataSourceSnowflakeParametersArgs {
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Warehouse.</p>
         */
        warehouse: pulumi.Input<string>;
    }

    /**
     * <p>Spark parameters.</p>
     */
    export interface DataSourceSparkParametersArgs {
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Port.</p>
         */
        port: pulumi.Input<number>;
    }

    /**
     * <p>SQL Server parameters.</p>
     */
    export interface DataSourceSqlServerParametersArgs {
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Port.</p>
         */
        port: pulumi.Input<number>;
    }

    /**
     * <p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your
     *             underlying data source.</p>
     */
    export interface DataSourceSslPropertiesArgs {
        /**
         * <p>A Boolean option to control whether SSL should be disabled.</p>
         */
        disableSsl?: pulumi.Input<boolean>;
    }

    /**
     * <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
     *             resource.</p>
     */
    export interface DataSourceTagArgs {
        /**
         * <p>Tag key.</p>
         */
        key: pulumi.Input<string>;
        /**
         * <p>Tag value.</p>
         */
        value: pulumi.Input<string>;
    }

    /**
     * <p>Teradata parameters.</p>
     */
    export interface DataSourceTeradataParametersArgs {
        /**
         * <p>Database.</p>
         */
        database: pulumi.Input<string>;
        /**
         * <p>Host.</p>
         */
        host: pulumi.Input<string>;
        /**
         * <p>Port.</p>
         */
        port: pulumi.Input<number>;
    }

    /**
     * <p>VPC connection properties.</p>
     */
    export interface DataSourceVpcConnectionPropertiesArgs {
        /**
         * <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
         */
        vpcConnectionArn: pulumi.Input<string>;
    }

    /**
     * <p>Dataset reference.</p>
     */
    export interface TemplateDataSetReferenceArgs {
        /**
         * <p>Dataset Amazon Resource Name (ARN).</p>
         */
        dataSetArn: pulumi.Input<string>;
        /**
         * <p>Dataset placeholder.</p>
         */
        dataSetPlaceholder: pulumi.Input<string>;
    }

    /**
     * <p>Permission for the resource.</p>
     */
    export interface TemplateResourcePermissionArgs {
        /**
         * <p>The IAM action to grant or revoke permissions on.</p>
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
         *             following:</p>
         *         <ul>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
         *                     ARN. Use this option only to share resources (templates) across AWS accounts.
         *                     (This is less common.) </p>
         *             </li>
         *          </ul>
         */
        principal: pulumi.Input<string>;
    }

    /**
     * <p>The source analysis of the template.</p>
     */
    export interface TemplateSourceAnalysisArgs {
        /**
         * <p>The Amazon Resource Name (ARN) of the resource.</p>
         */
        arn: pulumi.Input<string>;
        /**
         * <p>A structure containing information about the dataset references used as placeholders
         *             in the template.</p>
         */
        dataSetReferences: pulumi.Input<pulumi.Input<inputs.quicksight.TemplateDataSetReferenceArgs>[]>;
    }

    /**
     * <p>The source entity of the template.</p>
     */
    export interface TemplateSourceEntityArgs {
        sourceAnalysis?: pulumi.Input<inputs.quicksight.TemplateSourceAnalysisArgs>;
        sourceTemplate?: pulumi.Input<inputs.quicksight.TemplateSourceTemplateArgs>;
    }

    /**
     * <p>The source template of the template.</p>
     */
    export interface TemplateSourceTemplateArgs {
        /**
         * <p>The Amazon Resource Name (ARN) of the resource.</p>
         */
        arn: pulumi.Input<string>;
    }

    /**
     * <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
     *             resource.</p>
     */
    export interface TemplateTagArgs {
        /**
         * <p>Tag key.</p>
         */
        key: pulumi.Input<string>;
        /**
         * <p>Tag value.</p>
         */
        value: pulumi.Input<string>;
    }

    /**
     * <p>The display options for tile borders for visuals.</p>
     */
    export interface ThemeBorderStyleArgs {
        /**
         * <p>The option to enable display of borders for visuals.</p>
         */
        show?: pulumi.Input<boolean>;
    }

    /**
     * <p>The theme configuration. This configuration contains all of the display properties for
     *             a theme.</p>
     */
    export interface ThemeConfigurationArgs {
        dataColorPalette?: pulumi.Input<inputs.quicksight.ThemeDataColorPaletteArgs>;
        sheet?: pulumi.Input<inputs.quicksight.ThemeSheetStyleArgs>;
        typography?: pulumi.Input<inputs.quicksight.ThemeTypographyArgs>;
        uIColorPalette?: pulumi.Input<inputs.quicksight.ThemeUIColorPaletteArgs>;
    }

    /**
     * <p>The theme colors that are used for data colors in charts. The colors description is a
     *             hexadecimal color code that consists of six alphanumerical characters, prefixed with
     *                 <code>#</code>, for example #37BFF5. </p>
     */
    export interface ThemeDataColorPaletteArgs {
        /**
         * <p>The hexadecimal codes for the colors.</p>
         */
        colors?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <p>The hexadecimal code of a color that applies to charts where a lack of data is
         *             highlighted.</p>
         */
        emptyFillColor?: pulumi.Input<string>;
        /**
         * <p>The minimum and maximum hexadecimal codes that describe a color gradient. </p>
         */
        minMaxGradient?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ThemeFontArgs {
        fontFamily?: pulumi.Input<string>;
    }

    /**
     * <p>The display options for gutter spacing between tiles on a sheet.</p>
     */
    export interface ThemeGutterStyleArgs {
        /**
         * <p>This Boolean value controls whether to display a gutter space between sheet tiles.
         *         </p>
         */
        show?: pulumi.Input<boolean>;
    }

    /**
     * <p>The display options for margins around the outside edge of sheets.</p>
     */
    export interface ThemeMarginStyleArgs {
        /**
         * <p>This Boolean value controls whether to display sheet margins.</p>
         */
        show?: pulumi.Input<boolean>;
    }

    /**
     * <p>Permission for the resource.</p>
     */
    export interface ThemeResourcePermissionArgs {
        /**
         * <p>The IAM action to grant or revoke permissions on.</p>
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
         *             following:</p>
         *         <ul>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
         *             </li>
         *             <li>
         *                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
         *                     ARN. Use this option only to share resources (templates) across AWS accounts.
         *                     (This is less common.) </p>
         *             </li>
         *          </ul>
         */
        principal: pulumi.Input<string>;
    }

    /**
     * <p>The theme display options for sheets. </p>
     */
    export interface ThemeSheetStyleArgs {
        tile?: pulumi.Input<inputs.quicksight.ThemeTileStyleArgs>;
        tileLayout?: pulumi.Input<inputs.quicksight.ThemeTileLayoutStyleArgs>;
    }

    /**
     * <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
     *             resource.</p>
     */
    export interface ThemeTagArgs {
        /**
         * <p>Tag key.</p>
         */
        key: pulumi.Input<string>;
        /**
         * <p>Tag value.</p>
         */
        value: pulumi.Input<string>;
    }

    /**
     * <p>The display options for the layout of tiles on a sheet.</p>
     */
    export interface ThemeTileLayoutStyleArgs {
        gutter?: pulumi.Input<inputs.quicksight.ThemeGutterStyleArgs>;
        margin?: pulumi.Input<inputs.quicksight.ThemeMarginStyleArgs>;
    }

    /**
     * <p>Display options related to tiles on a sheet.</p>
     */
    export interface ThemeTileStyleArgs {
        border?: pulumi.Input<inputs.quicksight.ThemeBorderStyleArgs>;
    }

    /**
     * <p>The typeface for the theme.</p>
     */
    export interface ThemeTypographyArgs {
        fontFamilies?: pulumi.Input<pulumi.Input<inputs.quicksight.ThemeFontArgs>[]>;
    }

    /**
     * <p>The theme colors that apply to UI and to charts, excluding data colors. The colors
     *             description is a hexadecimal color code that consists of six alphanumerical characters,
     *             prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User
     *                 Guide.</i>
     *         </p>
     */
    export interface ThemeUIColorPaletteArgs {
        /**
         * <p>This color is that applies to selected states and buttons.</p>
         */
        accent?: pulumi.Input<string>;
        /**
         * <p>The foreground color that applies to any text or other elements that appear over the
         *             accent color.</p>
         */
        accentForeground?: pulumi.Input<string>;
        /**
         * <p>The color that applies to error messages.</p>
         */
        danger?: pulumi.Input<string>;
        /**
         * <p>The foreground color that applies to any text or other elements that appear over the
         *             error color.</p>
         */
        dangerForeground?: pulumi.Input<string>;
        /**
         * <p>The color that applies to the names of fields that are identified as
         *             dimensions.</p>
         */
        dimension?: pulumi.Input<string>;
        /**
         * <p>The foreground color that applies to any text or other elements that appear over the
         *             dimension color.</p>
         */
        dimensionForeground?: pulumi.Input<string>;
        /**
         * <p>The color that applies to the names of fields that are identified as measures.</p>
         */
        measure?: pulumi.Input<string>;
        /**
         * <p>The foreground color that applies to any text or other elements that appear over the
         *             measure color.</p>
         */
        measureForeground?: pulumi.Input<string>;
        /**
         * <p>The background color that applies to visuals and other high emphasis UI.</p>
         */
        primaryBackground?: pulumi.Input<string>;
        /**
         * <p>The color of text and other foreground elements that appear over the primary
         *             background regions, such as grid lines, borders, table banding, icons, and so on.</p>
         */
        primaryForeground?: pulumi.Input<string>;
        /**
         * <p>The background color that applies to the sheet background and sheet controls.</p>
         */
        secondaryBackground?: pulumi.Input<string>;
        /**
         * <p>The foreground color that applies to any sheet title, sheet control text, or UI that
         *             appears over the secondary background.</p>
         */
        secondaryForeground?: pulumi.Input<string>;
        /**
         * <p>The color that applies to success messages, for example the check mark for a
         *             successful download.</p>
         */
        success?: pulumi.Input<string>;
        /**
         * <p>The foreground color that applies to any text or other elements that appear over the
         *             success color.</p>
         */
        successForeground?: pulumi.Input<string>;
        /**
         * <p>This color that applies to warning and informational messages.</p>
         */
        warning?: pulumi.Input<string>;
        /**
         * <p>The foreground color that applies to any text or other elements that appear over the
         *             warning color.</p>
         */
        warningForeground?: pulumi.Input<string>;
    }

}

export namespace ram {
    export interface ResourceShareTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace rds {
    export interface DBClusterParameterGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBClusterRoleArgs {
        featureName?: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface DBClusterScalingConfigurationArgs {
        autoPause?: pulumi.Input<boolean>;
        maxCapacity?: pulumi.Input<number>;
        minCapacity?: pulumi.Input<number>;
        secondsUntilAutoPause?: pulumi.Input<number>;
    }

    export interface DBClusterTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBInstanceProcessorFeatureArgs {
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface DBInstanceRoleArgs {
        featureName: pulumi.Input<string>;
        roleArn: pulumi.Input<string>;
    }

    export interface DBInstanceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBParameterGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBProxyAuthFormatArgs {
        /**
         * The type of authentication that the proxy uses for connections from the proxy to the underlying database. 
         */
        authScheme?: pulumi.Input<enums.rds.DBProxyAuthFormatAuthScheme>;
        /**
         * A user-specified description about the authentication used by a proxy to log in as a specific database user. 
         */
        description?: pulumi.Input<string>;
        /**
         * Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. 
         */
        iAMAuth?: pulumi.Input<enums.rds.DBProxyAuthFormatIAMAuth>;
        /**
         * The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager. 
         */
        secretArn?: pulumi.Input<string>;
        /**
         * The name of the database user to which the proxy connects.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DBProxyEndpointTagFormatArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface DBProxyTagFormatArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs {
        /**
         * The number of seconds for a proxy to wait for a connection to become available in the connection pool.
         */
        connectionBorrowTimeout?: pulumi.Input<number>;
        /**
         * One or more SQL statements for the proxy to run when opening each new database connection.
         */
        initQuery?: pulumi.Input<string>;
        /**
         * The maximum size of the connection pool for each target in a target group.
         */
        maxConnectionsPercent?: pulumi.Input<number>;
        /**
         * Controls how actively the proxy closes idle database connections in the connection pool.
         */
        maxIdleConnectionsPercent?: pulumi.Input<number>;
        /**
         * Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
         */
        sessionPinningFilters?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DBSecurityGroupIngressArgs {
        cIDRIP?: pulumi.Input<string>;
        eC2SecurityGroupId?: pulumi.Input<string>;
        eC2SecurityGroupName?: pulumi.Input<string>;
        eC2SecurityGroupOwnerId?: pulumi.Input<string>;
    }

    export interface DBSecurityGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DBSubnetGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface OptionGroupOptionConfigurationArgs {
        dBSecurityGroupMemberships?: pulumi.Input<pulumi.Input<string>[]>;
        optionName: pulumi.Input<string>;
        optionSettings?: pulumi.Input<pulumi.Input<inputs.rds.OptionGroupOptionSettingArgs>[]>;
        optionVersion?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        vpcSecurityGroupMemberships?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface OptionGroupOptionSettingArgs {
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface OptionGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace redshift {
    export interface ClusterEndpointArgs {
        address?: pulumi.Input<string>;
        port?: pulumi.Input<string>;
    }

    export interface ClusterLoggingPropertiesArgs {
        bucketName: pulumi.Input<string>;
        s3KeyPrefix?: pulumi.Input<string>;
    }

    export interface ClusterParameterGroupParameterArgs {
        parameterName: pulumi.Input<string>;
        parameterValue: pulumi.Input<string>;
    }

    export interface ClusterParameterGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ClusterSecurityGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ClusterSubnetGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ClusterTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface EventSubscriptionTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Describes a pause cluster operation. For example, a scheduled action to run the `PauseCluster` API operation.
     */
    export interface ScheduledActionPauseClusterMessageArgs {
        clusterIdentifier: pulumi.Input<string>;
    }

    /**
     * Describes a resize cluster operation. For example, a scheduled action to run the `ResizeCluster` API operation.
     */
    export interface ScheduledActionResizeClusterMessageArgs {
        classic?: pulumi.Input<boolean>;
        clusterIdentifier: pulumi.Input<string>;
        clusterType?: pulumi.Input<string>;
        nodeType?: pulumi.Input<string>;
        numberOfNodes?: pulumi.Input<number>;
    }

    /**
     * Describes a resume cluster operation. For example, a scheduled action to run the `ResumeCluster` API operation.
     */
    export interface ScheduledActionResumeClusterMessageArgs {
        clusterIdentifier: pulumi.Input<string>;
    }

    export interface ScheduledActionTypeArgs {
        pauseCluster?: pulumi.Input<inputs.redshift.ScheduledActionPauseClusterMessageArgs>;
        resizeCluster?: pulumi.Input<inputs.redshift.ScheduledActionResizeClusterMessageArgs>;
        resumeCluster?: pulumi.Input<inputs.redshift.ScheduledActionResumeClusterMessageArgs>;
    }

}

export namespace refactorspaces {
    export interface ApplicationApiGatewayProxyInputArgs {
        endpointType?: pulumi.Input<enums.refactorspaces.ApplicationApiGatewayEndpointType>;
        stageName?: pulumi.Input<string>;
    }

    /**
     * A label for tagging Environment resource
     */
    export interface ApplicationTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    /**
     * A label for tagging Environment resource
     */
    export interface EnvironmentTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    /**
     * A label for tagging Environment resource
     */
    export interface RouteTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    export interface RouteUriPathRouteInputArgs {
        activationState: pulumi.Input<enums.refactorspaces.RouteActivationState>;
        includeChildPaths?: pulumi.Input<boolean>;
        methods?: pulumi.Input<pulumi.Input<enums.refactorspaces.RouteMethod>[]>;
        sourcePath?: pulumi.Input<string>;
    }

    export interface ServiceLambdaEndpointInputArgs {
        arn: pulumi.Input<string>;
    }

    /**
     * A label for tagging Environment resource
     */
    export interface ServiceTagArgs {
        /**
         * A string used to identify this tag
         */
        key: pulumi.Input<string>;
        /**
         * A string containing the value for the tag
         */
        value: pulumi.Input<string>;
    }

    export interface ServiceUrlEndpointInputArgs {
        healthUrl?: pulumi.Input<string>;
        url: pulumi.Input<string>;
    }
}

export namespace resiliencehub {
    export interface AppPhysicalResourceIdArgs {
        awsAccountId?: pulumi.Input<string>;
        awsRegion?: pulumi.Input<string>;
        identifier: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    /**
     * Resource mapping is used to map logical resources from template to physical resource
     */
    export interface AppResourceMappingArgs {
        logicalStackName?: pulumi.Input<string>;
        mappingType: pulumi.Input<string>;
        physicalResourceId: pulumi.Input<inputs.resiliencehub.AppPhysicalResourceIdArgs>;
        resourceName?: pulumi.Input<string>;
    }

    export interface AppTagMapArgs {
    }

    export interface ResiliencyPolicyPolicyMapArgs {
    }

    export interface ResiliencyPolicyTagMapArgs {
    }
}

export namespace resourcegroups {
    export interface GroupConfigurationItemArgs {
        parameters?: pulumi.Input<pulumi.Input<inputs.resourcegroups.GroupConfigurationParameterArgs>[]>;
        type?: pulumi.Input<string>;
    }

    export interface GroupConfigurationParameterArgs {
        name?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GroupQueryArgs {
        resourceTypeFilters?: pulumi.Input<pulumi.Input<string>[]>;
        stackIdentifier?: pulumi.Input<string>;
        tagFilters?: pulumi.Input<pulumi.Input<inputs.resourcegroups.GroupTagFilterArgs>[]>;
    }

    export interface GroupResourceQueryArgs {
        query?: pulumi.Input<inputs.resourcegroups.GroupQueryArgs>;
        type?: pulumi.Input<enums.resourcegroups.GroupResourceQueryType>;
    }

    export interface GroupTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GroupTagFilterArgs {
        key?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace robomaker {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface FleetTagsArgs {
    }

    export interface RobotApplicationRobotSoftwareSuiteArgs {
        name: pulumi.Input<string>;
        version: pulumi.Input<string>;
    }

    export interface RobotApplicationSourceConfigArgs {
        architecture: pulumi.Input<string>;
        s3Bucket: pulumi.Input<string>;
        s3Key: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface RobotTagsArgs {
    }

    /**
     * Information about a rendering engine.
     */
    export interface SimulationApplicationRenderingEngineArgs {
        /**
         * The name of the rendering engine.
         */
        name: pulumi.Input<enums.robomaker.SimulationApplicationRenderingEngineName>;
        /**
         * The version of the rendering engine.
         */
        version: pulumi.Input<string>;
    }

    /**
     * Information about a robot software suite (ROS distribution).
     */
    export interface SimulationApplicationRobotSoftwareSuiteArgs {
        /**
         * The name of the robot software suite (ROS distribution).
         */
        name: pulumi.Input<enums.robomaker.SimulationApplicationRobotSoftwareSuiteName>;
        /**
         * The version of the robot software suite (ROS distribution).
         */
        version: pulumi.Input<enums.robomaker.SimulationApplicationRobotSoftwareSuiteVersion>;
    }

    /**
     * Information about a simulation software suite.
     */
    export interface SimulationApplicationSimulationSoftwareSuiteArgs {
        /**
         * The name of the simulation software suite.
         */
        name: pulumi.Input<enums.robomaker.SimulationApplicationSimulationSoftwareSuiteName>;
        /**
         * The version of the simulation software suite.
         */
        version: pulumi.Input<enums.robomaker.SimulationApplicationSimulationSoftwareSuiteVersion>;
    }

    /**
     * Information about a source configuration.
     */
    export interface SimulationApplicationSourceConfigArgs {
        /**
         * The target processor architecture for the application.
         */
        architecture: pulumi.Input<enums.robomaker.SimulationApplicationSourceConfigArchitecture>;
        /**
         * The Amazon S3 bucket name.
         */
        s3Bucket: pulumi.Input<string>;
        /**
         * The s3 object key.
         */
        s3Key: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface SimulationApplicationTagsArgs {
    }
}

export namespace route53 {
    /**
     * A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.
     */
    export interface HealthCheckAlarmIdentifierArgs {
        /**
         * The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
         */
        name: pulumi.Input<string>;
        /**
         * For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
         */
        region: pulumi.Input<string>;
    }

    /**
     * A complex type that contains information about the health check.
     */
    export interface HealthCheckConfigPropertiesArgs {
        alarmIdentifier?: pulumi.Input<inputs.route53.HealthCheckAlarmIdentifierArgs>;
        childHealthChecks?: pulumi.Input<pulumi.Input<string>[]>;
        enableSNI?: pulumi.Input<boolean>;
        failureThreshold?: pulumi.Input<number>;
        fullyQualifiedDomainName?: pulumi.Input<string>;
        healthThreshold?: pulumi.Input<number>;
        iPAddress?: pulumi.Input<string>;
        insufficientDataHealthStatus?: pulumi.Input<enums.route53.HealthCheckConfigPropertiesInsufficientDataHealthStatus>;
        inverted?: pulumi.Input<boolean>;
        measureLatency?: pulumi.Input<boolean>;
        port?: pulumi.Input<number>;
        regions?: pulumi.Input<pulumi.Input<string>[]>;
        requestInterval?: pulumi.Input<number>;
        resourcePath?: pulumi.Input<string>;
        routingControlArn?: pulumi.Input<string>;
        searchString?: pulumi.Input<string>;
        type: pulumi.Input<enums.route53.HealthCheckConfigPropertiesType>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface HealthCheckTagArgs {
        /**
         * The key name of the tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A complex type that contains an optional comment.
     *
     * If you don't want to specify a comment, omit the HostedZoneConfig and Comment elements.
     */
    export interface HostedZoneConfigArgs {
        /**
         * Any comments that you want to include about the hosted zone.
         */
        comment?: pulumi.Input<string>;
    }

    /**
     * A complex type that contains information about a configuration for DNS query logging.
     */
    export interface HostedZoneQueryLoggingConfigArgs {
        /**
         * The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
         */
        cloudWatchLogsLogGroupArn: pulumi.Input<string>;
    }

    /**
     * A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
     */
    export interface HostedZoneTagArgs {
        /**
         * The key name of the tag.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
     */
    export interface HostedZoneVPCArgs {
        /**
         * The ID of an Amazon VPC.
         */
        vPCId: pulumi.Input<string>;
        /**
         * The region that an Amazon VPC was created in. See https://docs.aws.amazon.com/general/latest/gr/rande.html for a list of up to date regions.
         */
        vPCRegion: pulumi.Input<string>;
    }

    export interface RecordSetAliasTargetArgs {
        dNSName: pulumi.Input<string>;
        evaluateTargetHealth?: pulumi.Input<boolean>;
        hostedZoneId: pulumi.Input<string>;
    }

    export interface RecordSetGeoLocationArgs {
        continentCode?: pulumi.Input<string>;
        countryCode?: pulumi.Input<string>;
        subdivisionCode?: pulumi.Input<string>;
    }

    export interface RecordSetGroupAliasTargetArgs {
        dNSName: pulumi.Input<string>;
        evaluateTargetHealth?: pulumi.Input<boolean>;
        hostedZoneId: pulumi.Input<string>;
    }

    export interface RecordSetGroupGeoLocationArgs {
        continentCode?: pulumi.Input<string>;
        countryCode?: pulumi.Input<string>;
        subdivisionCode?: pulumi.Input<string>;
    }

    export interface RecordSetGroupRecordSetArgs {
        aliasTarget?: pulumi.Input<inputs.route53.RecordSetGroupAliasTargetArgs>;
        comment?: pulumi.Input<string>;
        failover?: pulumi.Input<string>;
        geoLocation?: pulumi.Input<inputs.route53.RecordSetGroupGeoLocationArgs>;
        healthCheckId?: pulumi.Input<string>;
        hostedZoneId?: pulumi.Input<string>;
        hostedZoneName?: pulumi.Input<string>;
        multiValueAnswer?: pulumi.Input<boolean>;
        name: pulumi.Input<string>;
        region?: pulumi.Input<string>;
        resourceRecords?: pulumi.Input<pulumi.Input<string>[]>;
        setIdentifier?: pulumi.Input<string>;
        tTL?: pulumi.Input<string>;
        type: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }
}

export namespace route53recoverycontrol {
    export interface ClusterTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ControlPanelTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * An assertion rule enforces that, when a routing control state is changed, that the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.
     */
    export interface SafetyRuleAssertionRuleArgs {
        /**
         * The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three AWS Regions.
         */
        assertedControls: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.
         */
        waitPeriodMs: pulumi.Input<number>;
    }

    /**
     * A gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.
     */
    export interface SafetyRuleGatingRuleArgs {
        /**
         * The gating controls for the gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.
         */
        gatingControls: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Routing controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three AWS Regions. Now you specify AtLeast 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true. 
         * In other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.
         */
        targetControls: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.
         */
        waitPeriodMs: pulumi.Input<number>;
    }

    /**
     * The rule configuration for an assertion rule or gating rule. This is the criteria that you set for specific assertion controls (routing controls) or gating controls. This configuration specifies how many controls must be enabled after a transaction completes.
     */
    export interface SafetyRuleRuleConfigArgs {
        /**
         * Logical negation of the rule. If the rule would usually evaluate true, it's evaluated as false, and vice versa.
         */
        inverted: pulumi.Input<boolean>;
        /**
         * The value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.
         */
        threshold: pulumi.Input<number>;
        type: pulumi.Input<enums.route53recoverycontrol.SafetyRuleRuleType>;
    }

    export interface SafetyRuleTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace route53recoveryreadiness {
    export interface CellTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ReadinessCheckTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RecoveryGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A component for DNS/routing control readiness checks.
     */
    export interface ResourceSetDNSTargetResourceArgs {
        /**
         * The domain name that acts as an ingress point to a portion of the customer application.
         */
        domainName?: pulumi.Input<string>;
        /**
         * The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.
         */
        hostedZoneArn?: pulumi.Input<string>;
        /**
         * The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type.
         */
        recordSetId?: pulumi.Input<string>;
        /**
         * The type of DNS record of the target resource.
         */
        recordType?: pulumi.Input<string>;
        targetResource?: pulumi.Input<inputs.route53recoveryreadiness.ResourceSetTargetResourceArgs>;
    }

    /**
     * The Network Load Balancer resource that a DNS target resource points to.
     */
    export interface ResourceSetNLBResourceArgs {
        /**
         * A Network Load Balancer resource Amazon Resource Name (ARN).
         */
        arn?: pulumi.Input<string>;
    }

    /**
     * The Route 53 resource that a DNS target resource record points to.
     */
    export interface ResourceSetR53ResourceRecordArgs {
        /**
         * The DNS target domain name.
         */
        domainName?: pulumi.Input<string>;
        /**
         * The Resource Record set id.
         */
        recordSetId?: pulumi.Input<string>;
    }

    /**
     * The resource element of a ResourceSet
     */
    export interface ResourceSetResourceArgs {
        /**
         * The component identifier of the resource, generated when DNS target resource is used.
         */
        componentId?: pulumi.Input<string>;
        dnsTargetResource?: pulumi.Input<inputs.route53recoveryreadiness.ResourceSetDNSTargetResourceArgs>;
        /**
         * A list of recovery group Amazon Resource Names (ARNs) and cell ARNs that this resource is contained within.
         */
        readinessScopes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Amazon Resource Name (ARN) of the AWS resource.
         */
        resourceArn?: pulumi.Input<string>;
    }

    export interface ResourceSetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The target resource that the Route 53 record points to.
     */
    export interface ResourceSetTargetResourceArgs {
        nLBResource?: pulumi.Input<inputs.route53recoveryreadiness.ResourceSetNLBResourceArgs>;
        r53Resource?: pulumi.Input<inputs.route53recoveryreadiness.ResourceSetR53ResourceRecordArgs>;
    }
}

export namespace route53resolver {
    /**
     * A key-value pair to associate with a resource.
     */
    export interface FirewallDomainListTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface FirewallRuleGroupAssociationTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    /**
     * Firewall Rule associating the Rule Group to a Domain List
     */
    export interface FirewallRuleGroupFirewallRuleArgs {
        /**
         * Rule Action
         */
        action: pulumi.Input<enums.route53resolver.FirewallRuleGroupFirewallRuleAction>;
        /**
         * BlockOverrideDnsType
         */
        blockOverrideDnsType?: pulumi.Input<enums.route53resolver.FirewallRuleGroupFirewallRuleBlockOverrideDnsType>;
        /**
         * BlockOverrideDomain
         */
        blockOverrideDomain?: pulumi.Input<string>;
        /**
         * BlockOverrideTtl
         */
        blockOverrideTtl?: pulumi.Input<number>;
        /**
         * BlockResponse
         */
        blockResponse?: pulumi.Input<enums.route53resolver.FirewallRuleGroupFirewallRuleBlockResponse>;
        /**
         * ResourceId
         */
        firewallDomainListId: pulumi.Input<string>;
        /**
         * Rule Priority
         */
        priority: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface FirewallRuleGroupTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    export interface ResolverEndpointIpAddressRequestArgs {
        ip?: pulumi.Input<string>;
        subnetId: pulumi.Input<string>;
    }

    export interface ResolverEndpointTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ResolverRuleTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
         */
        value: pulumi.Input<string>;
    }

    export interface ResolverRuleTargetAddressArgs {
        /**
         * One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses. 
         */
        ip: pulumi.Input<string>;
        /**
         * The port at Ip that you want to forward DNS queries to. 
         */
        port?: pulumi.Input<string>;
    }
}

export namespace rum {
    /**
     * AppMonitor configuration
     */
    export interface AppMonitorConfigurationArgs {
        /**
         * If you set this to true, the RUM web client sets two cookies, a session cookie and a user cookie. The cookies allow the RUM web client to collect data relating to the number of users an application has and the behavior of the application across a sequence of events. Cookies are stored in the top-level domain of the current page.
         */
        allowCookies?: pulumi.Input<boolean>;
        /**
         * If you set this to true, RUM enables xray tracing for the user sessions that RUM samples. RUM adds an xray trace header to allowed HTTP requests. It also records an xray segment for allowed HTTP requests. You can see traces and segments from these user sessions in the xray console and the CW ServiceLens console.
         */
        enableXRay?: pulumi.Input<boolean>;
        /**
         * A list of URLs in your website or application to exclude from RUM data collection. You can't include both ExcludedPages and IncludedPages in the same operation.
         */
        excludedPages?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of pages in the RUM console that are to be displayed with a favorite icon.
         */
        favoritePages?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ARN of the guest IAM role that is attached to the identity pool that is used to authorize the sending of data to RUM.
         */
        guestRoleArn?: pulumi.Input<string>;
        /**
         * The ID of the identity pool that is used to authorize the sending of data to RUM.
         */
        identityPoolId?: pulumi.Input<string>;
        /**
         * If this app monitor is to collect data from only certain pages in your application, this structure lists those pages. You can't include both ExcludedPages and IncludedPages in the same operation.
         */
        includedPages?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the percentage of user sessions to use for RUM data collection. Choosing a higher percentage gives you more data but also incurs more costs. The number you specify is the percentage of user sessions that will be used. If you omit this parameter, the default of 10 is used.
         */
        sessionSampleRate?: pulumi.Input<number>;
        /**
         * An array that lists the types of telemetry data that this app monitor is to collect.
         */
        telemetries?: pulumi.Input<pulumi.Input<enums.rum.AppMonitorTelemetry>[]>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface AppMonitorTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }
}

export namespace s3 {
    export interface AccessPointPublicAccessBlockConfigurationArgs {
        /**
         * Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
         * - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
         *  - PUT Object calls fail if the request includes a public ACL.
         * . - PUT Bucket calls fail if the request includes a public ACL.
         * Enabling this setting doesn't affect existing policies or ACLs.
         */
        blockPublicAcls?: pulumi.Input<boolean>;
        /**
         * Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
         */
        blockPublicPolicy?: pulumi.Input<boolean>;
        /**
         * Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
         */
        ignorePublicAcls?: pulumi.Input<boolean>;
        /**
         * Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
         * Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
         */
        restrictPublicBuckets?: pulumi.Input<boolean>;
    }

    /**
     * The Virtual Private Cloud (VPC) configuration for a bucket access point.
     */
    export interface AccessPointVpcConfigurationArgs {
        /**
         * If this field is specified, this access point will only allow connections from the specified VPC ID.
         */
        vpcId?: pulumi.Input<string>;
    }

    /**
     * Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.
     */
    export interface BucketAbortIncompleteMultipartUploadArgs {
        /**
         * Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.
         */
        daysAfterInitiation: pulumi.Input<number>;
    }

    export interface BucketAccelerateConfigurationArgs {
        /**
         * Configures the transfer acceleration state for an Amazon S3 bucket.
         */
        accelerationStatus: pulumi.Input<enums.s3.BucketAccelerateConfigurationAccelerationStatus>;
    }

    /**
     * Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object.
     */
    export interface BucketAccessControlTranslationArgs {
        owner: pulumi.Input<string>;
    }

    /**
     * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
     */
    export interface BucketAnalyticsConfigurationArgs {
        /**
         * The ID that identifies the analytics configuration.
         */
        id: pulumi.Input<string>;
        /**
         * The prefix that an object must have to be included in the analytics results.
         */
        prefix?: pulumi.Input<string>;
        storageClassAnalysis: pulumi.Input<inputs.s3.BucketStorageClassAnalysisArgs>;
        tagFilters?: pulumi.Input<pulumi.Input<inputs.s3.BucketTagFilterArgs>[]>;
    }

    export interface BucketCorsConfigurationArgs {
        corsRules: pulumi.Input<pulumi.Input<inputs.s3.BucketCorsRuleArgs>[]>;
    }

    /**
     * A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
     */
    export interface BucketCorsRuleArgs {
        /**
         * Headers that are specified in the Access-Control-Request-Headers header.
         */
        allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An HTTP method that you allow the origin to execute.
         */
        allowedMethods: pulumi.Input<pulumi.Input<enums.s3.BucketCorsRuleAllowedMethodsItem>[]>;
        /**
         * One or more origins you want customers to be able to access the bucket from.
         */
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).
         */
        exposedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A unique identifier for this rule.
         */
        id?: pulumi.Input<string>;
        /**
         * The time in seconds that your browser is to cache the preflight response for the specified resource.
         */
        maxAge?: pulumi.Input<number>;
    }

    /**
     * Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
     */
    export interface BucketDataExportArgs {
        destination: pulumi.Input<inputs.s3.BucketDestinationArgs>;
        /**
         * The version of the output schema to use when exporting data.
         */
        outputSchemaVersion: pulumi.Input<string>;
    }

    /**
     * The default retention period that you want to apply to new objects placed in the specified bucket.
     */
    export interface BucketDefaultRetentionArgs {
        days?: pulumi.Input<number>;
        mode?: pulumi.Input<enums.s3.BucketDefaultRetentionMode>;
        years?: pulumi.Input<number>;
    }

    export interface BucketDeleteMarkerReplicationArgs {
        status?: pulumi.Input<enums.s3.BucketDeleteMarkerReplicationStatus>;
    }

    /**
     * Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket and S3 Replication Time Control (S3 RTC).
     */
    export interface BucketDestinationArgs {
        /**
         * The account ID that owns the destination S3 bucket. 
         */
        bucketAccountId?: pulumi.Input<string>;
        /**
         * The Amazon Resource Name (ARN) of the bucket to which data is exported.
         */
        bucketArn: pulumi.Input<string>;
        /**
         * Specifies the file format used when exporting data to Amazon S3.
         */
        format: pulumi.Input<enums.s3.BucketDestinationFormat>;
        /**
         * The prefix to use when exporting data. The prefix is prepended to all results.
         */
        prefix?: pulumi.Input<string>;
    }

    /**
     * Specifies default encryption for a bucket using server-side encryption with either Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS).
     */
    export interface BucketEncryptionArgs {
        /**
         * Specifies the default server-side-encryption configuration.
         */
        serverSideEncryptionConfiguration: pulumi.Input<pulumi.Input<inputs.s3.BucketServerSideEncryptionRuleArgs>[]>;
    }

    /**
     * Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
     */
    export interface BucketEncryptionConfigurationArgs {
        /**
         * Specifies the ID (Key ARN or Alias ARN) of the customer managed customer master key (CMK) stored in AWS Key Management Service (KMS) for the destination bucket.
         */
        replicaKmsKeyID: pulumi.Input<string>;
    }

    /**
     * Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name.
     */
    export interface BucketFilterRuleArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface BucketIntelligentTieringConfigurationArgs {
        /**
         * The ID used to identify the S3 Intelligent-Tiering configuration.
         */
        id: pulumi.Input<string>;
        /**
         * An object key name prefix that identifies the subset of objects to which the rule applies.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Specifies the status of the configuration.
         */
        status: pulumi.Input<enums.s3.BucketIntelligentTieringConfigurationStatus>;
        /**
         * A container for a key-value pair.
         */
        tagFilters?: pulumi.Input<pulumi.Input<inputs.s3.BucketTagFilterArgs>[]>;
        /**
         * Specifies a list of S3 Intelligent-Tiering storage class tiers in the configuration. At least one tier must be defined in the list. At most, you can specify two tiers in the list, one for each available AccessTier: ARCHIVE_ACCESS and DEEP_ARCHIVE_ACCESS.
         */
        tierings: pulumi.Input<pulumi.Input<inputs.s3.BucketTieringArgs>[]>;
    }

    export interface BucketInventoryConfigurationArgs {
        destination: pulumi.Input<inputs.s3.BucketDestinationArgs>;
        /**
         * Specifies whether the inventory is enabled or disabled.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * The ID used to identify the inventory configuration.
         */
        id: pulumi.Input<string>;
        /**
         * Object versions to include in the inventory list.
         */
        includedObjectVersions: pulumi.Input<enums.s3.BucketInventoryConfigurationIncludedObjectVersions>;
        /**
         * Contains the optional fields that are included in the inventory results.
         */
        optionalFields?: pulumi.Input<pulumi.Input<enums.s3.BucketInventoryConfigurationOptionalFieldsItem>[]>;
        /**
         * The prefix that is prepended to all inventory results.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Specifies the schedule for generating inventory results.
         */
        scheduleFrequency: pulumi.Input<enums.s3.BucketInventoryConfigurationScheduleFrequency>;
    }

    /**
     * Describes the AWS Lambda functions to invoke and the events for which to invoke them.
     */
    export interface BucketLambdaConfigurationArgs {
        /**
         * The Amazon S3 bucket event for which to invoke the AWS Lambda function.
         */
        event: pulumi.Input<string>;
        /**
         * The filtering rules that determine which objects invoke the AWS Lambda function.
         */
        filter?: pulumi.Input<inputs.s3.BucketNotificationFilterArgs>;
        /**
         * The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs.
         */
        function: pulumi.Input<string>;
    }

    export interface BucketLifecycleConfigurationArgs {
        /**
         * A lifecycle rule for individual objects in an Amazon S3 bucket.
         */
        rules: pulumi.Input<pulumi.Input<inputs.s3.BucketRuleArgs>[]>;
    }

    export interface BucketLoggingConfigurationArgs {
        /**
         * The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.
         */
        destinationBucketName?: pulumi.Input<string>;
        logFilePrefix?: pulumi.Input<string>;
    }

    export interface BucketMetricsArgs {
        eventThreshold?: pulumi.Input<inputs.s3.BucketReplicationTimeValueArgs>;
        status: pulumi.Input<enums.s3.BucketMetricsStatus>;
    }

    export interface BucketMetricsConfigurationArgs {
        accessPointArn?: pulumi.Input<string>;
        id: pulumi.Input<string>;
        prefix?: pulumi.Input<string>;
        tagFilters?: pulumi.Input<pulumi.Input<inputs.s3.BucketTagFilterArgs>[]>;
    }

    /**
     * Container for the transition rule that describes when noncurrent objects transition to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, or DEEP_ARCHIVE storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, or DEEP_ARCHIVE storage class at a specific period in the object's lifetime.
     */
    export interface BucketNoncurrentVersionTransitionArgs {
        /**
         * The class of storage used to store the object.
         */
        storageClass: pulumi.Input<enums.s3.BucketNoncurrentVersionTransitionStorageClass>;
        /**
         * Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action.
         */
        transitionInDays: pulumi.Input<number>;
    }

    /**
     * Describes the notification configuration for an Amazon S3 bucket.
     */
    export interface BucketNotificationConfigurationArgs {
        lambdaConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketLambdaConfigurationArgs>[]>;
        queueConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketQueueConfigurationArgs>[]>;
        topicConfigurations?: pulumi.Input<pulumi.Input<inputs.s3.BucketTopicConfigurationArgs>[]>;
    }

    /**
     * Specifies object key name filtering rules.
     */
    export interface BucketNotificationFilterArgs {
        s3Key: pulumi.Input<inputs.s3.BucketS3KeyFilterArgs>;
    }

    export interface BucketObjectLockConfigurationArgs {
        objectLockEnabled?: pulumi.Input<string>;
        rule?: pulumi.Input<inputs.s3.BucketObjectLockRuleArgs>;
    }

    /**
     * The Object Lock rule in place for the specified object.
     */
    export interface BucketObjectLockRuleArgs {
        defaultRetention?: pulumi.Input<inputs.s3.BucketDefaultRetentionArgs>;
    }

    export interface BucketOwnershipControlsArgs {
        rules: pulumi.Input<pulumi.Input<inputs.s3.BucketOwnershipControlsRuleArgs>[]>;
    }

    export interface BucketOwnershipControlsRuleArgs {
        /**
         * Specifies an object ownership rule.
         */
        objectOwnership?: pulumi.Input<enums.s3.BucketOwnershipControlsRuleObjectOwnership>;
    }

    /**
     * Configuration that defines how Amazon S3 handles public access.
     */
    export interface BucketPublicAccessBlockConfigurationArgs {
        /**
         * Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to TRUE causes the following behavior:
         * - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
         *  - PUT Object calls fail if the request includes a public ACL.
         * Enabling this setting doesn't affect existing policies or ACLs.
         */
        blockPublicAcls?: pulumi.Input<boolean>;
        /**
         * Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.
         * Enabling this setting doesn't affect existing bucket policies.
         */
        blockPublicPolicy?: pulumi.Input<boolean>;
        /**
         * Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.
         * Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
         */
        ignorePublicAcls?: pulumi.Input<boolean>;
        /**
         * Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
         * Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
         */
        restrictPublicBuckets?: pulumi.Input<boolean>;
    }

    /**
     * The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
     */
    export interface BucketQueueConfigurationArgs {
        /**
         * The Amazon S3 bucket event about which you want to publish messages to Amazon SQS.
         */
        event: pulumi.Input<string>;
        /**
         * The filtering rules that determine which objects trigger notifications.
         */
        filter?: pulumi.Input<inputs.s3.BucketNotificationFilterArgs>;
        /**
         * The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type.
         */
        queue: pulumi.Input<string>;
    }

    /**
     * Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
     */
    export interface BucketRedirectAllRequestsToArgs {
        /**
         * Name of the host where requests are redirected.
         */
        hostName: pulumi.Input<string>;
        /**
         * Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
         */
        protocol?: pulumi.Input<enums.s3.BucketRedirectAllRequestsToProtocol>;
    }

    /**
     * Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
     */
    export interface BucketRedirectRuleArgs {
        /**
         * The host name to use in the redirect request.
         */
        hostName?: pulumi.Input<string>;
        /**
         * The HTTP redirect code to use on the response. Not required if one of the siblings is present.
         */
        httpRedirectCode?: pulumi.Input<string>;
        /**
         * Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
         */
        protocol?: pulumi.Input<enums.s3.BucketRedirectRuleProtocol>;
        /**
         * The object key prefix to use in the redirect request.
         */
        replaceKeyPrefixWith?: pulumi.Input<string>;
        /**
         * The specific object key to use in the redirect request.d
         */
        replaceKeyWith?: pulumi.Input<string>;
    }

    export interface BucketReplicaModificationsArgs {
        /**
         * Specifies whether Amazon S3 replicates modifications on replicas.
         */
        status: pulumi.Input<enums.s3.BucketReplicaModificationsStatus>;
    }

    /**
     * A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.
     */
    export interface BucketReplicationConfigurationArgs {
        /**
         * The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects.
         */
        role: pulumi.Input<string>;
        /**
         * A container for one or more replication rules.
         */
        rules: pulumi.Input<pulumi.Input<inputs.s3.BucketReplicationRuleArgs>[]>;
    }

    /**
     * Specifies which Amazon S3 bucket to store replicated objects in and their storage class.
     */
    export interface BucketReplicationDestinationArgs {
        accessControlTranslation?: pulumi.Input<inputs.s3.BucketAccessControlTranslationArgs>;
        account?: pulumi.Input<string>;
        bucket: pulumi.Input<string>;
        encryptionConfiguration?: pulumi.Input<inputs.s3.BucketEncryptionConfigurationArgs>;
        metrics?: pulumi.Input<inputs.s3.BucketMetricsArgs>;
        replicationTime?: pulumi.Input<inputs.s3.BucketReplicationTimeArgs>;
        /**
         * The storage class to use when replicating objects, such as S3 Standard or reduced redundancy.
         */
        storageClass?: pulumi.Input<enums.s3.BucketReplicationDestinationStorageClass>;
    }

    /**
     * Specifies which Amazon S3 objects to replicate and where to store the replicas.
     */
    export interface BucketReplicationRuleArgs {
        deleteMarkerReplication?: pulumi.Input<inputs.s3.BucketDeleteMarkerReplicationArgs>;
        destination: pulumi.Input<inputs.s3.BucketReplicationDestinationArgs>;
        filter?: pulumi.Input<inputs.s3.BucketReplicationRuleFilterArgs>;
        /**
         * A unique identifier for the rule.
         */
        id?: pulumi.Input<string>;
        /**
         * An object key name prefix that identifies the object or objects to which the rule applies.
         */
        prefix?: pulumi.Input<string>;
        priority?: pulumi.Input<number>;
        sourceSelectionCriteria?: pulumi.Input<inputs.s3.BucketSourceSelectionCriteriaArgs>;
        /**
         * Specifies whether the rule is enabled.
         */
        status: pulumi.Input<enums.s3.BucketReplicationRuleStatus>;
    }

    export interface BucketReplicationRuleAndOperatorArgs {
        prefix?: pulumi.Input<string>;
        tagFilters?: pulumi.Input<pulumi.Input<inputs.s3.BucketTagFilterArgs>[]>;
    }

    export interface BucketReplicationRuleFilterArgs {
        and?: pulumi.Input<inputs.s3.BucketReplicationRuleAndOperatorArgs>;
        prefix?: pulumi.Input<string>;
        tagFilter?: pulumi.Input<inputs.s3.BucketTagFilterArgs>;
    }

    export interface BucketReplicationTimeArgs {
        status: pulumi.Input<enums.s3.BucketReplicationTimeStatus>;
        time: pulumi.Input<inputs.s3.BucketReplicationTimeValueArgs>;
    }

    export interface BucketReplicationTimeValueArgs {
        minutes: pulumi.Input<number>;
    }

    /**
     * Specifies the redirect behavior and when a redirect is applied.
     */
    export interface BucketRoutingRuleArgs {
        /**
         * Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.
         */
        redirectRule: pulumi.Input<inputs.s3.BucketRedirectRuleArgs>;
        routingRuleCondition?: pulumi.Input<inputs.s3.BucketRoutingRuleConditionArgs>;
    }

    /**
     * A container for describing a condition that must be met for the specified redirect to apply.You must specify at least one of HttpErrorCodeReturnedEquals and KeyPrefixEquals
     */
    export interface BucketRoutingRuleConditionArgs {
        /**
         * The HTTP error code when the redirect is applied. 
         */
        httpErrorCodeReturnedEquals?: pulumi.Input<string>;
        /**
         * The object key name prefix when the redirect is applied.
         */
        keyPrefixEquals?: pulumi.Input<string>;
    }

    /**
     * You must specify at least one of the following properties: AbortIncompleteMultipartUpload, ExpirationDate, ExpirationInDays, NoncurrentVersionExpirationInDays, NoncurrentVersionTransition, NoncurrentVersionTransitions, Transition, or Transitions.
     */
    export interface BucketRuleArgs {
        abortIncompleteMultipartUpload?: pulumi.Input<inputs.s3.BucketAbortIncompleteMultipartUploadArgs>;
        expirationDate?: pulumi.Input<string>;
        expirationInDays?: pulumi.Input<number>;
        expiredObjectDeleteMarker?: pulumi.Input<boolean>;
        id?: pulumi.Input<string>;
        noncurrentVersionExpirationInDays?: pulumi.Input<number>;
        noncurrentVersionTransition?: pulumi.Input<inputs.s3.BucketNoncurrentVersionTransitionArgs>;
        noncurrentVersionTransitions?: pulumi.Input<pulumi.Input<inputs.s3.BucketNoncurrentVersionTransitionArgs>[]>;
        prefix?: pulumi.Input<string>;
        status: pulumi.Input<enums.s3.BucketRuleStatus>;
        tagFilters?: pulumi.Input<pulumi.Input<inputs.s3.BucketTagFilterArgs>[]>;
        transition?: pulumi.Input<inputs.s3.BucketTransitionArgs>;
        transitions?: pulumi.Input<pulumi.Input<inputs.s3.BucketTransitionArgs>[]>;
    }

    /**
     * A container for object key name prefix and suffix filtering rules.
     */
    export interface BucketS3KeyFilterArgs {
        rules: pulumi.Input<pulumi.Input<inputs.s3.BucketFilterRuleArgs>[]>;
    }

    /**
     * Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
     */
    export interface BucketServerSideEncryptionByDefaultArgs {
        /**
         * "KMSMasterKeyID" can only be used when you set the value of SSEAlgorithm as aws:kms.
         */
        kMSMasterKeyID?: pulumi.Input<string>;
        sSEAlgorithm: pulumi.Input<enums.s3.BucketServerSideEncryptionByDefaultSSEAlgorithm>;
    }

    /**
     * Specifies the default server-side encryption configuration.
     */
    export interface BucketServerSideEncryptionRuleArgs {
        /**
         * Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the BucketKeyEnabled element to true causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.
         */
        bucketKeyEnabled?: pulumi.Input<boolean>;
        serverSideEncryptionByDefault?: pulumi.Input<inputs.s3.BucketServerSideEncryptionByDefaultArgs>;
    }

    /**
     * A container that describes additional filters for identifying the source objects that you want to replicate.
     */
    export interface BucketSourceSelectionCriteriaArgs {
        /**
         * A filter that you can specify for selection for modifications on replicas.
         */
        replicaModifications?: pulumi.Input<inputs.s3.BucketReplicaModificationsArgs>;
        /**
         * A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS.
         */
        sseKmsEncryptedObjects?: pulumi.Input<inputs.s3.BucketSseKmsEncryptedObjectsArgs>;
    }

    /**
     * A container for filter information for the selection of S3 objects encrypted with AWS KMS.
     */
    export interface BucketSseKmsEncryptedObjectsArgs {
        /**
         * Specifies whether Amazon S3 replicates objects created with server-side encryption using a customer master key (CMK) stored in AWS Key Management Service.
         */
        status: pulumi.Input<enums.s3.BucketSseKmsEncryptedObjectsStatus>;
    }

    /**
     * Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.
     */
    export interface BucketStorageClassAnalysisArgs {
        dataExport?: pulumi.Input<inputs.s3.BucketDataExportArgs>;
    }

    export interface BucketTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Tags to use to identify a subset of objects for an Amazon S3 bucket.
     */
    export interface BucketTagFilterArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface BucketTieringArgs {
        /**
         * S3 Intelligent-Tiering access tier. See Storage class for automatically optimizing frequently and infrequently accessed objects for a list of access tiers in the S3 Intelligent-Tiering storage class.
         */
        accessTier: pulumi.Input<enums.s3.BucketTieringAccessTier>;
        /**
         * The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
         */
        days: pulumi.Input<number>;
    }

    /**
     * The topic to which notifications are sent and the events for which notifications are generated.
     */
    export interface BucketTopicConfigurationArgs {
        /**
         * The Amazon S3 bucket event about which to send notifications.
         */
        event: pulumi.Input<string>;
        /**
         * The filtering rules that determine for which objects to send notifications.
         */
        filter?: pulumi.Input<inputs.s3.BucketNotificationFilterArgs>;
        /**
         * The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
         */
        topic: pulumi.Input<string>;
    }

    /**
     * You must specify at least one of "TransitionDate" and "TransitionInDays"
     */
    export interface BucketTransitionArgs {
        storageClass: pulumi.Input<enums.s3.BucketTransitionStorageClass>;
        transitionDate?: pulumi.Input<string>;
        transitionInDays?: pulumi.Input<number>;
    }

    /**
     * Describes the versioning state of an Amazon S3 bucket.
     */
    export interface BucketVersioningConfigurationArgs {
        /**
         * The versioning state of the bucket.
         */
        status: pulumi.Input<enums.s3.BucketVersioningConfigurationStatus>;
    }

    /**
     * Specifies website configuration parameters for an Amazon S3 bucket.
     */
    export interface BucketWebsiteConfigurationArgs {
        /**
         * The name of the error document for the website.
         */
        errorDocument?: pulumi.Input<string>;
        /**
         * The name of the index document for the website.
         */
        indexDocument?: pulumi.Input<string>;
        redirectAllRequestsTo?: pulumi.Input<inputs.s3.BucketRedirectAllRequestsToArgs>;
        routingRules?: pulumi.Input<pulumi.Input<inputs.s3.BucketRoutingRuleArgs>[]>;
    }

    export interface MultiRegionAccessPointPublicAccessBlockConfigurationArgs {
        /**
         * Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
         * - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
         *  - PUT Object calls fail if the request includes a public ACL.
         * . - PUT Bucket calls fail if the request includes a public ACL.
         * Enabling this setting doesn't affect existing policies or ACLs.
         */
        blockPublicAcls?: pulumi.Input<boolean>;
        /**
         * Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
         */
        blockPublicPolicy?: pulumi.Input<boolean>;
        /**
         * Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
         */
        ignorePublicAcls?: pulumi.Input<boolean>;
        /**
         * Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
         * Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
         */
        restrictPublicBuckets?: pulumi.Input<boolean>;
    }

    export interface MultiRegionAccessPointRegionArgs {
        bucket: pulumi.Input<string>;
    }

    /**
     * The Policy Status associated with this Multi Region Access Point
     */
    export interface PolicyStatusPropertiesArgs {
        /**
         * Specifies whether the policy is public or not.
         */
        isPublic: pulumi.Input<enums.s3.MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublic>;
    }

    /**
     * Account-level metrics configurations.
     */
    export interface StorageLensAccountLevelArgs {
        activityMetrics?: pulumi.Input<inputs.s3.StorageLensActivityMetricsArgs>;
        bucketLevel: pulumi.Input<inputs.s3.StorageLensBucketLevelArgs>;
    }

    /**
     * Enables activity metrics.
     */
    export interface StorageLensActivityMetricsArgs {
        /**
         * Specifies whether activity metrics are enabled or disabled.
         */
        isEnabled?: pulumi.Input<boolean>;
    }

    /**
     * The AWS Organizations ARN to use in the Amazon S3 Storage Lens configuration.
     */
    export interface StorageLensAwsOrgArgs {
        arn: pulumi.Input<string>;
    }

    /**
     * Bucket-level metrics configurations.
     */
    export interface StorageLensBucketLevelArgs {
        activityMetrics?: pulumi.Input<inputs.s3.StorageLensActivityMetricsArgs>;
        prefixLevel?: pulumi.Input<inputs.s3.StorageLensPrefixLevelArgs>;
    }

    /**
     * S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.
     */
    export interface StorageLensBucketsAndRegionsArgs {
        buckets?: pulumi.Input<pulumi.Input<string>[]>;
        regions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * CloudWatch metrics settings for the Amazon S3 Storage Lens metrics export.
     */
    export interface StorageLensCloudWatchMetricsArgs {
        /**
         * Specifies whether CloudWatch metrics are enabled or disabled.
         */
        isEnabled: pulumi.Input<boolean>;
    }

    /**
     * Specifies the details of Amazon S3 Storage Lens configuration.
     */
    export interface StorageLensConfigurationArgs {
        accountLevel: pulumi.Input<inputs.s3.StorageLensAccountLevelArgs>;
        awsOrg?: pulumi.Input<inputs.s3.StorageLensAwsOrgArgs>;
        dataExport?: pulumi.Input<inputs.s3.StorageLensDataExportArgs>;
        exclude?: pulumi.Input<inputs.s3.StorageLensBucketsAndRegionsArgs>;
        id: pulumi.Input<string>;
        include?: pulumi.Input<inputs.s3.StorageLensBucketsAndRegionsArgs>;
        /**
         * Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.
         */
        isEnabled: pulumi.Input<boolean>;
        /**
         * The ARN for the Amazon S3 Storage Lens configuration.
         */
        storageLensArn?: pulumi.Input<string>;
    }

    /**
     * Specifies how Amazon S3 Storage Lens metrics should be exported.
     */
    export interface StorageLensDataExportArgs {
        cloudWatchMetrics?: pulumi.Input<inputs.s3.StorageLensCloudWatchMetricsArgs>;
        s3BucketDestination?: pulumi.Input<inputs.s3.StorageLensS3BucketDestinationArgs>;
    }

    /**
     * Configures the server-side encryption for Amazon S3 Storage Lens report files with either S3-managed keys (SSE-S3) or KMS-managed keys (SSE-KMS).
     */
    export interface StorageLensEncryptionArgs {
    }

    /**
     * Prefix-level metrics configurations.
     */
    export interface StorageLensPrefixLevelArgs {
        storageMetrics: pulumi.Input<inputs.s3.StorageLensPrefixLevelStorageMetricsArgs>;
    }

    export interface StorageLensPrefixLevelStorageMetricsArgs {
        /**
         * Specifies whether prefix-level storage metrics are enabled or disabled.
         */
        isEnabled?: pulumi.Input<boolean>;
        selectionCriteria?: pulumi.Input<inputs.s3.StorageLensSelectionCriteriaArgs>;
    }

    /**
     * S3 bucket destination settings for the Amazon S3 Storage Lens metrics export.
     */
    export interface StorageLensS3BucketDestinationArgs {
        /**
         * The AWS account ID that owns the destination S3 bucket.
         */
        accountId: pulumi.Input<string>;
        /**
         * The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
         */
        arn: pulumi.Input<string>;
        encryption?: pulumi.Input<inputs.s3.StorageLensEncryptionArgs>;
        /**
         * Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
         */
        format: pulumi.Input<enums.s3.StorageLensS3BucketDestinationFormat>;
        /**
         * The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
         */
        outputSchemaVersion: pulumi.Input<enums.s3.StorageLensS3BucketDestinationOutputSchemaVersion>;
        /**
         * The prefix to use for Amazon S3 Storage Lens export.
         */
        prefix?: pulumi.Input<string>;
    }

    /**
     * Selection criteria for prefix-level metrics.
     */
    export interface StorageLensSelectionCriteriaArgs {
        /**
         * Delimiter to divide S3 key into hierarchy of prefixes.
         */
        delimiter?: pulumi.Input<string>;
        /**
         * Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.
         */
        maxDepth?: pulumi.Input<number>;
        /**
         * The minimum storage bytes threshold for the prefixes to be included in the analysis.
         */
        minStorageBytesPercentage?: pulumi.Input<number>;
    }

    export interface StorageLensTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace s3objectlambda {
    /**
     * Configuration to be applied to this Object lambda Access Point. It specifies Supporting Access Point, Transformation Configurations. Customers can also set if they like to enable Cloudwatch metrics for accesses to this Object lambda Access Point. Default setting for Cloudwatch metrics is disable.
     */
    export interface AccessPointObjectLambdaConfigurationArgs {
        allowedFeatures?: pulumi.Input<pulumi.Input<string>[]>;
        cloudWatchMetricsEnabled?: pulumi.Input<boolean>;
        supportingAccessPoint: pulumi.Input<string>;
        transformationConfigurations: pulumi.Input<pulumi.Input<inputs.s3objectlambda.AccessPointTransformationConfigurationArgs>[]>;
    }

    /**
     * Configuration to define what content transformation will be applied on which S3 Action.
     */
    export interface AccessPointTransformationConfigurationArgs {
        actions: pulumi.Input<pulumi.Input<string>[]>;
        contentTransformation: any;
    }

}

export namespace s3outposts {
    export interface AccessPointVpcConfigurationArgs {
        /**
         * Virtual Private Cloud (VPC) Id from which AccessPoint will allow requests.
         */
        vpcId?: pulumi.Input<string>;
    }

    /**
     * Specifies the days since the initiation of an incomplete multipart upload that Amazon S3Outposts will wait before permanently removing all parts of the upload.
     */
    export interface BucketAbortIncompleteMultipartUploadArgs {
        /**
         * Specifies the number of days after which Amazon S3Outposts aborts an incomplete multipart upload.
         */
        daysAfterInitiation: pulumi.Input<number>;
    }

    export interface BucketFilterAndOperatorArgs {
    }

    /**
     * Tag used to identify a subset of objects for an Amazon S3Outposts bucket.
     */
    export interface BucketFilterTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface BucketLifecycleConfigurationArgs {
        /**
         * A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
         */
        rules: pulumi.Input<pulumi.Input<inputs.s3outposts.BucketRuleArgs>[]>;
    }

    /**
     * Specifies lifecycle rules for an Amazon S3Outposts bucket. You must specify at least one of the following: AbortIncompleteMultipartUpload, ExpirationDate, ExpirationInDays.
     */
    export interface BucketRuleArgs {
        /**
         * Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3Outposts bucket.
         */
        abortIncompleteMultipartUpload?: pulumi.Input<inputs.s3outposts.BucketAbortIncompleteMultipartUploadArgs>;
        /**
         * Indicates when objects are deleted from Amazon S3Outposts. The date value must be in ISO 8601 format. The time is always midnight UTC.
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * Indicates the number of days after creation when objects are deleted from Amazon S3Outposts.
         */
        expirationInDays?: pulumi.Input<number>;
        /**
         * The container for the filter of the lifecycle rule.
         */
        filter?: pulumi.Input<inputs.s3outposts.BucketRuleFilterPropertiesArgs>;
        /**
         * Unique identifier for the lifecycle rule. The value can't be longer than 255 characters.
         */
        id?: pulumi.Input<string>;
        status?: pulumi.Input<enums.s3outposts.BucketRuleStatus>;
    }

    /**
     * The container for the filter of the lifecycle rule.
     */
    export interface BucketRuleFilterPropertiesArgs {
        /**
         * The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
         */
        andOperator?: pulumi.Input<inputs.s3outposts.BucketFilterAndOperatorArgs>;
        /**
         * Object key prefix that identifies one or more objects to which this rule applies.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
         */
        tag?: pulumi.Input<inputs.s3outposts.BucketFilterTagArgs>;
    }

    export interface BucketTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

}

export namespace sagemaker {
    /**
     * The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
     */
    export interface AppImageConfigFileSystemConfigArgs {
        /**
         * The default POSIX group ID (GID). If not specified, defaults to 100.
         */
        defaultGid?: pulumi.Input<number>;
        /**
         * The default POSIX user ID (UID). If not specified, defaults to 1000.
         */
        defaultUid?: pulumi.Input<number>;
        /**
         * The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
         */
        mountPath?: pulumi.Input<string>;
    }

    /**
     * The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app.
     */
    export interface AppImageConfigKernelGatewayImageConfigArgs {
        /**
         * The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
         */
        fileSystemConfig?: pulumi.Input<inputs.sagemaker.AppImageConfigFileSystemConfigArgs>;
        /**
         * The specification of the Jupyter kernels in the image.
         */
        kernelSpecs: pulumi.Input<pulumi.Input<inputs.sagemaker.AppImageConfigKernelSpecArgs>[]>;
    }

    export interface AppImageConfigKernelSpecArgs {
        /**
         * The display name of the kernel.
         */
        displayName?: pulumi.Input<string>;
        /**
         * The name of the kernel.
         */
        name: pulumi.Input<string>;
    }

    export interface AppImageConfigTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface AppResourceSpecArgs {
        /**
         * The instance type that the image version runs on.
         */
        instanceType?: pulumi.Input<enums.sagemaker.AppResourceSpecInstanceType>;
        /**
         * The ARN of the SageMaker image that the image version belongs to.
         */
        sageMakerImageArn?: pulumi.Input<string>;
        /**
         * The ARN of the image version created on the instance.
         */
        sageMakerImageVersionArn?: pulumi.Input<string>;
    }

    export interface AppTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface CodeRepositoryGitConfigArgs {
        branch?: pulumi.Input<string>;
        repositoryUrl: pulumi.Input<string>;
        secretArn?: pulumi.Input<string>;
    }

    export interface CodeRepositoryTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Configuration for the cluster used to run model monitoring jobs.
     */
    export interface DataQualityJobDefinitionClusterConfigArgs {
        /**
         * The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
         */
        instanceCount: pulumi.Input<number>;
        /**
         * The ML compute instance type for the processing job.
         */
        instanceType: pulumi.Input<string>;
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
         */
        volumeKmsKeyId?: pulumi.Input<string>;
        /**
         * The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
         */
        volumeSizeInGB: pulumi.Input<number>;
    }

    /**
     * The baseline constraints resource for a monitoring job.
     */
    export interface DataQualityJobDefinitionConstraintsResourceArgs {
        /**
         * The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
         */
        s3Uri?: pulumi.Input<string>;
    }

    /**
     * Container image configuration object for the monitoring job.
     */
    export interface DataQualityJobDefinitionDataQualityAppSpecificationArgs {
        /**
         * An array of arguments for the container used to run the monitoring job.
         */
        containerArguments?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the entrypoint for a container used to run the monitoring job.
         */
        containerEntrypoint?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Sets the environment variables in the Docker container
         */
        environment?: any;
        /**
         * The container image to be run by the monitoring job.
         */
        imageUri: pulumi.Input<string>;
        /**
         * An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
         */
        postAnalyticsProcessorSourceUri?: pulumi.Input<string>;
        /**
         * An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
         */
        recordPreprocessorSourceUri?: pulumi.Input<string>;
    }

    /**
     * Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
     */
    export interface DataQualityJobDefinitionDataQualityBaselineConfigArgs {
        baseliningJobName?: pulumi.Input<string>;
        constraintsResource?: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionConstraintsResourceArgs>;
        statisticsResource?: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionStatisticsResourceArgs>;
    }

    /**
     * The inputs for a monitoring job.
     */
    export interface DataQualityJobDefinitionDataQualityJobInputArgs {
        endpointInput: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionEndpointInputArgs>;
    }

    /**
     * The endpoint for a monitoring job.
     */
    export interface DataQualityJobDefinitionEndpointInputArgs {
        endpointName: pulumi.Input<string>;
        /**
         * Path to the filesystem where the endpoint data is available to the container.
         */
        localPath: pulumi.Input<string>;
        /**
         * Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
         */
        s3DataDistributionType?: pulumi.Input<enums.sagemaker.DataQualityJobDefinitionEndpointInputS3DataDistributionType>;
        /**
         * Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
         */
        s3InputMode?: pulumi.Input<enums.sagemaker.DataQualityJobDefinitionEndpointInputS3InputMode>;
    }

    /**
     * The output object for a monitoring job.
     */
    export interface DataQualityJobDefinitionMonitoringOutputArgs {
        s3Output: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionS3OutputArgs>;
    }

    /**
     * The output configuration for monitoring jobs.
     */
    export interface DataQualityJobDefinitionMonitoringOutputConfigArgs {
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
         */
        monitoringOutputs: pulumi.Input<pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionMonitoringOutputArgs>[]>;
    }

    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    export interface DataQualityJobDefinitionMonitoringResourcesArgs {
        clusterConfig: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionClusterConfigArgs>;
    }

    /**
     * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
     */
    export interface DataQualityJobDefinitionNetworkConfigArgs {
        /**
         * Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
         */
        enableInterContainerTrafficEncryption?: pulumi.Input<boolean>;
        /**
         * Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
         */
        enableNetworkIsolation?: pulumi.Input<boolean>;
        vpcConfig?: pulumi.Input<inputs.sagemaker.DataQualityJobDefinitionVpcConfigArgs>;
    }

    /**
     * Information about where and how to store the results of a monitoring job.
     */
    export interface DataQualityJobDefinitionS3OutputArgs {
        /**
         * The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
         */
        localPath: pulumi.Input<string>;
        /**
         * Whether to upload the results of the monitoring job continuously or after the job completes.
         */
        s3UploadMode?: pulumi.Input<enums.sagemaker.DataQualityJobDefinitionS3OutputS3UploadMode>;
        /**
         * A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
         */
        s3Uri: pulumi.Input<string>;
    }

    /**
     * The baseline statistics resource for a monitoring job.
     */
    export interface DataQualityJobDefinitionStatisticsResourceArgs {
        /**
         * The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
         */
        s3Uri?: pulumi.Input<string>;
    }

    /**
     * Specifies a time limit for how long the monitoring job is allowed to run.
     */
    export interface DataQualityJobDefinitionStoppingConditionArgs {
        /**
         * The maximum runtime allowed in seconds.
         */
        maxRuntimeInSeconds: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface DataQualityJobDefinitionTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
     */
    export interface DataQualityJobDefinitionVpcConfigArgs {
        /**
         * The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
         */
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
         */
        subnets: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Edge device you want to create
     */
    export interface DeviceArgs {
        /**
         * Description of the device
         */
        description?: pulumi.Input<string>;
        /**
         * The name of the device
         */
        deviceName: pulumi.Input<string>;
        /**
         * AWS Internet of Things (IoT) object name.
         */
        iotThingName?: pulumi.Input<string>;
    }

    export interface DeviceFleetEdgeOutputConfigArgs {
        /**
         * The KMS key id used for encryption on the S3 bucket
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The Amazon Simple Storage (S3) bucket URI
         */
        s3OutputLocation: pulumi.Input<string>;
    }

    /**
     * Key-value pair to associate as a tag for the resource
     */
    export interface DeviceFleetTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    export interface DeviceTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * A custom SageMaker image.
     */
    export interface DomainCustomImageArgs {
        /**
         * The Name of the AppImageConfig.
         */
        appImageConfigName: pulumi.Input<string>;
        /**
         * The name of the CustomImage. Must be unique to your account.
         */
        imageName: pulumi.Input<string>;
        /**
         * The version number of the CustomImage.
         */
        imageVersionNumber?: pulumi.Input<number>;
    }

    /**
     * The JupyterServer app settings.
     */
    export interface DomainJupyterServerAppSettingsArgs {
        defaultResourceSpec?: pulumi.Input<inputs.sagemaker.DomainResourceSpecArgs>;
    }

    /**
     * The kernel gateway app settings.
     */
    export interface DomainKernelGatewayAppSettingsArgs {
        /**
         * A list of custom SageMaker images that are configured to run as a KernelGateway app.
         */
        customImages?: pulumi.Input<pulumi.Input<inputs.sagemaker.DomainCustomImageArgs>[]>;
        /**
         * The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
         */
        defaultResourceSpec?: pulumi.Input<inputs.sagemaker.DomainResourceSpecArgs>;
    }

    export interface DomainResourceSpecArgs {
        /**
         * The instance type that the image version runs on.
         */
        instanceType?: pulumi.Input<enums.sagemaker.DomainResourceSpecInstanceType>;
        /**
         * The ARN of the SageMaker image that the image version belongs to.
         */
        sageMakerImageArn?: pulumi.Input<string>;
        /**
         * The ARN of the image version created on the instance.
         */
        sageMakerImageVersionArn?: pulumi.Input<string>;
    }

    /**
     * Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
     */
    export interface DomainSharingSettingsArgs {
        /**
         * Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
         */
        notebookOutputOption?: pulumi.Input<enums.sagemaker.DomainSharingSettingsNotebookOutputOption>;
        /**
         * When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
         */
        s3KmsKeyId?: pulumi.Input<string>;
        /**
         * When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
         */
        s3OutputPath?: pulumi.Input<string>;
    }

    export interface DomainTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
     */
    export interface DomainUserSettingsArgs {
        /**
         * The user profile Amazon Resource Name (ARN).
         */
        executionRole?: pulumi.Input<string>;
        /**
         * The Jupyter server's app settings.
         */
        jupyterServerAppSettings?: pulumi.Input<inputs.sagemaker.DomainJupyterServerAppSettingsArgs>;
        /**
         * The kernel gateway app settings.
         */
        kernelGatewayAppSettings?: pulumi.Input<inputs.sagemaker.DomainKernelGatewayAppSettingsArgs>;
        /**
         * The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
         */
        securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The sharing settings.
         */
        sharingSettings?: pulumi.Input<inputs.sagemaker.DomainSharingSettingsArgs>;
    }

    export interface EndpointAlarmArgs {
        alarmName: pulumi.Input<string>;
    }

    export interface EndpointAutoRollbackConfigArgs {
        alarms: pulumi.Input<pulumi.Input<inputs.sagemaker.EndpointAlarmArgs>[]>;
    }

    export interface EndpointBlueGreenUpdatePolicyArgs {
        maximumExecutionTimeoutInSeconds?: pulumi.Input<number>;
        terminationWaitInSeconds?: pulumi.Input<number>;
        trafficRoutingConfiguration: pulumi.Input<inputs.sagemaker.EndpointTrafficRoutingConfigArgs>;
    }

    export interface EndpointCapacitySizeArgs {
        type: pulumi.Input<string>;
        value: pulumi.Input<number>;
    }

    export interface EndpointConfigAsyncInferenceClientConfigArgs {
        maxConcurrentInvocationsPerInstance?: pulumi.Input<number>;
    }

    export interface EndpointConfigAsyncInferenceConfigArgs {
        clientConfig?: pulumi.Input<inputs.sagemaker.EndpointConfigAsyncInferenceClientConfigArgs>;
        outputConfig: pulumi.Input<inputs.sagemaker.EndpointConfigAsyncInferenceOutputConfigArgs>;
    }

    export interface EndpointConfigAsyncInferenceNotificationConfigArgs {
        errorTopic?: pulumi.Input<string>;
        successTopic?: pulumi.Input<string>;
    }

    export interface EndpointConfigAsyncInferenceOutputConfigArgs {
        kmsKeyId?: pulumi.Input<string>;
        notificationConfig?: pulumi.Input<inputs.sagemaker.EndpointConfigAsyncInferenceNotificationConfigArgs>;
        s3OutputPath: pulumi.Input<string>;
    }

    export interface EndpointConfigCaptureContentTypeHeaderArgs {
        csvContentTypes?: pulumi.Input<pulumi.Input<string>[]>;
        jsonContentTypes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface EndpointConfigCaptureOptionArgs {
        captureMode: pulumi.Input<string>;
    }

    export interface EndpointConfigDataCaptureConfigArgs {
        captureContentTypeHeader?: pulumi.Input<inputs.sagemaker.EndpointConfigCaptureContentTypeHeaderArgs>;
        captureOptions: pulumi.Input<pulumi.Input<inputs.sagemaker.EndpointConfigCaptureOptionArgs>[]>;
        destinationS3Uri: pulumi.Input<string>;
        enableCapture?: pulumi.Input<boolean>;
        initialSamplingPercentage: pulumi.Input<number>;
        kmsKeyId?: pulumi.Input<string>;
    }

    export interface EndpointConfigProductionVariantArgs {
        acceleratorType?: pulumi.Input<string>;
        initialInstanceCount?: pulumi.Input<number>;
        initialVariantWeight: pulumi.Input<number>;
        instanceType?: pulumi.Input<string>;
        modelName: pulumi.Input<string>;
        serverlessConfig?: pulumi.Input<inputs.sagemaker.EndpointConfigServerlessConfigArgs>;
        variantName: pulumi.Input<string>;
    }

    export interface EndpointConfigServerlessConfigArgs {
        maxConcurrency: pulumi.Input<number>;
        memorySizeInMB: pulumi.Input<number>;
    }

    export interface EndpointConfigTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EndpointDeploymentConfigArgs {
        autoRollbackConfiguration?: pulumi.Input<inputs.sagemaker.EndpointAutoRollbackConfigArgs>;
        blueGreenUpdatePolicy: pulumi.Input<inputs.sagemaker.EndpointBlueGreenUpdatePolicyArgs>;
    }

    export interface EndpointTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EndpointTrafficRoutingConfigArgs {
        canarySize?: pulumi.Input<inputs.sagemaker.EndpointCapacitySizeArgs>;
        linearStepSize?: pulumi.Input<inputs.sagemaker.EndpointCapacitySizeArgs>;
        type: pulumi.Input<string>;
        waitIntervalInSeconds?: pulumi.Input<number>;
    }

    export interface EndpointVariantPropertyArgs {
        variantPropertyType?: pulumi.Input<string>;
    }

    export interface FeatureGroupDataCatalogConfigArgs {
        catalog: pulumi.Input<string>;
        database: pulumi.Input<string>;
        tableName: pulumi.Input<string>;
    }

    export interface FeatureGroupFeatureDefinitionArgs {
        featureName: pulumi.Input<string>;
        featureType: pulumi.Input<enums.sagemaker.FeatureGroupFeatureDefinitionFeatureType>;
    }

    export interface FeatureGroupOnlineStoreSecurityConfigArgs {
        kmsKeyId?: pulumi.Input<string>;
    }

    export interface FeatureGroupS3StorageConfigArgs {
        kmsKeyId?: pulumi.Input<string>;
        s3Uri: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface FeatureGroupTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ImageTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * Configuration for the cluster used to run model monitoring jobs.
     */
    export interface ModelBiasJobDefinitionClusterConfigArgs {
        /**
         * The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
         */
        instanceCount: pulumi.Input<number>;
        /**
         * The ML compute instance type for the processing job.
         */
        instanceType: pulumi.Input<string>;
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
         */
        volumeKmsKeyId?: pulumi.Input<string>;
        /**
         * The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
         */
        volumeSizeInGB: pulumi.Input<number>;
    }

    /**
     * The baseline constraints resource for a monitoring job.
     */
    export interface ModelBiasJobDefinitionConstraintsResourceArgs {
        /**
         * The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
         */
        s3Uri?: pulumi.Input<string>;
    }

    /**
     * The endpoint for a monitoring job.
     */
    export interface ModelBiasJobDefinitionEndpointInputArgs {
        /**
         * Monitoring end time offset, e.g. PT0H
         */
        endTimeOffset?: pulumi.Input<string>;
        endpointName: pulumi.Input<string>;
        /**
         * JSONpath to locate features in JSONlines dataset
         */
        featuresAttribute?: pulumi.Input<string>;
        /**
         * Index or JSONpath to locate predicted label(s)
         */
        inferenceAttribute?: pulumi.Input<string>;
        /**
         * Path to the filesystem where the endpoint data is available to the container.
         */
        localPath: pulumi.Input<string>;
        /**
         * Index or JSONpath to locate probabilities
         */
        probabilityAttribute?: pulumi.Input<string>;
        probabilityThresholdAttribute?: pulumi.Input<number>;
        /**
         * Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
         */
        s3DataDistributionType?: pulumi.Input<enums.sagemaker.ModelBiasJobDefinitionEndpointInputS3DataDistributionType>;
        /**
         * Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
         */
        s3InputMode?: pulumi.Input<enums.sagemaker.ModelBiasJobDefinitionEndpointInputS3InputMode>;
        /**
         * Monitoring start time offset, e.g. -PT1H
         */
        startTimeOffset?: pulumi.Input<string>;
    }

    /**
     * Container image configuration object for the monitoring job.
     */
    export interface ModelBiasJobDefinitionModelBiasAppSpecificationArgs {
        /**
         * The S3 URI to an analysis configuration file
         */
        configUri: pulumi.Input<string>;
        /**
         * Sets the environment variables in the Docker container
         */
        environment?: any;
        /**
         * The container image to be run by the monitoring job.
         */
        imageUri: pulumi.Input<string>;
    }

    /**
     * Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
     */
    export interface ModelBiasJobDefinitionModelBiasBaselineConfigArgs {
        baseliningJobName?: pulumi.Input<string>;
        constraintsResource?: pulumi.Input<inputs.sagemaker.ModelBiasJobDefinitionConstraintsResourceArgs>;
    }

    /**
     * The inputs for a monitoring job.
     */
    export interface ModelBiasJobDefinitionModelBiasJobInputArgs {
        endpointInput: pulumi.Input<inputs.sagemaker.ModelBiasJobDefinitionEndpointInputArgs>;
        groundTruthS3Input: pulumi.Input<inputs.sagemaker.ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs>;
    }

    /**
     * Ground truth input provided in S3 
     */
    export interface ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs {
        /**
         * A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
         */
        s3Uri: pulumi.Input<string>;
    }

    /**
     * The output object for a monitoring job.
     */
    export interface ModelBiasJobDefinitionMonitoringOutputArgs {
        s3Output: pulumi.Input<inputs.sagemaker.ModelBiasJobDefinitionS3OutputArgs>;
    }

    /**
     * The output configuration for monitoring jobs.
     */
    export interface ModelBiasJobDefinitionMonitoringOutputConfigArgs {
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
         */
        monitoringOutputs: pulumi.Input<pulumi.Input<inputs.sagemaker.ModelBiasJobDefinitionMonitoringOutputArgs>[]>;
    }

    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    export interface ModelBiasJobDefinitionMonitoringResourcesArgs {
        clusterConfig: pulumi.Input<inputs.sagemaker.ModelBiasJobDefinitionClusterConfigArgs>;
    }

    /**
     * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
     */
    export interface ModelBiasJobDefinitionNetworkConfigArgs {
        /**
         * Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
         */
        enableInterContainerTrafficEncryption?: pulumi.Input<boolean>;
        /**
         * Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
         */
        enableNetworkIsolation?: pulumi.Input<boolean>;
        vpcConfig?: pulumi.Input<inputs.sagemaker.ModelBiasJobDefinitionVpcConfigArgs>;
    }

    /**
     * Information about where and how to store the results of a monitoring job.
     */
    export interface ModelBiasJobDefinitionS3OutputArgs {
        /**
         * The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
         */
        localPath: pulumi.Input<string>;
        /**
         * Whether to upload the results of the monitoring job continuously or after the job completes.
         */
        s3UploadMode?: pulumi.Input<enums.sagemaker.ModelBiasJobDefinitionS3OutputS3UploadMode>;
        /**
         * A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
         */
        s3Uri: pulumi.Input<string>;
    }

    /**
     * Specifies a time limit for how long the monitoring job is allowed to run.
     */
    export interface ModelBiasJobDefinitionStoppingConditionArgs {
        /**
         * The maximum runtime allowed in seconds.
         */
        maxRuntimeInSeconds: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ModelBiasJobDefinitionTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
     */
    export interface ModelBiasJobDefinitionVpcConfigArgs {
        /**
         * The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
         */
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
         */
        subnets: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ModelContainerDefinitionArgs {
        containerHostname?: pulumi.Input<string>;
        environment?: any;
        image?: pulumi.Input<string>;
        imageConfig?: pulumi.Input<inputs.sagemaker.ModelImageConfigArgs>;
        inferenceSpecificationName?: pulumi.Input<string>;
        mode?: pulumi.Input<string>;
        modelDataUrl?: pulumi.Input<string>;
        modelPackageName?: pulumi.Input<string>;
        multiModelConfig?: pulumi.Input<inputs.sagemaker.ModelMultiModelConfigArgs>;
    }

    /**
     * Configuration for the cluster used to run model monitoring jobs.
     */
    export interface ModelExplainabilityJobDefinitionClusterConfigArgs {
        /**
         * The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
         */
        instanceCount: pulumi.Input<number>;
        /**
         * The ML compute instance type for the processing job.
         */
        instanceType: pulumi.Input<string>;
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
         */
        volumeKmsKeyId?: pulumi.Input<string>;
        /**
         * The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
         */
        volumeSizeInGB: pulumi.Input<number>;
    }

    /**
     * The baseline constraints resource for a monitoring job.
     */
    export interface ModelExplainabilityJobDefinitionConstraintsResourceArgs {
        /**
         * The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
         */
        s3Uri?: pulumi.Input<string>;
    }

    /**
     * The endpoint for a monitoring job.
     */
    export interface ModelExplainabilityJobDefinitionEndpointInputArgs {
        endpointName: pulumi.Input<string>;
        /**
         * JSONpath to locate features in JSONlines dataset
         */
        featuresAttribute?: pulumi.Input<string>;
        /**
         * Index or JSONpath to locate predicted label(s)
         */
        inferenceAttribute?: pulumi.Input<string>;
        /**
         * Path to the filesystem where the endpoint data is available to the container.
         */
        localPath: pulumi.Input<string>;
        /**
         * Index or JSONpath to locate probabilities
         */
        probabilityAttribute?: pulumi.Input<string>;
        /**
         * Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
         */
        s3DataDistributionType?: pulumi.Input<enums.sagemaker.ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType>;
        /**
         * Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
         */
        s3InputMode?: pulumi.Input<enums.sagemaker.ModelExplainabilityJobDefinitionEndpointInputS3InputMode>;
    }

    /**
     * Container image configuration object for the monitoring job.
     */
    export interface ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs {
        /**
         * The S3 URI to an analysis configuration file
         */
        configUri: pulumi.Input<string>;
        /**
         * Sets the environment variables in the Docker container
         */
        environment?: any;
        /**
         * The container image to be run by the monitoring job.
         */
        imageUri: pulumi.Input<string>;
    }

    /**
     * Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
     */
    export interface ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs {
        baseliningJobName?: pulumi.Input<string>;
        constraintsResource?: pulumi.Input<inputs.sagemaker.ModelExplainabilityJobDefinitionConstraintsResourceArgs>;
    }

    /**
     * The inputs for a monitoring job.
     */
    export interface ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs {
        endpointInput: pulumi.Input<inputs.sagemaker.ModelExplainabilityJobDefinitionEndpointInputArgs>;
    }

    /**
     * The output object for a monitoring job.
     */
    export interface ModelExplainabilityJobDefinitionMonitoringOutputArgs {
        s3Output: pulumi.Input<inputs.sagemaker.ModelExplainabilityJobDefinitionS3OutputArgs>;
    }

    /**
     * The output configuration for monitoring jobs.
     */
    export interface ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs {
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
         */
        monitoringOutputs: pulumi.Input<pulumi.Input<inputs.sagemaker.ModelExplainabilityJobDefinitionMonitoringOutputArgs>[]>;
    }

    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    export interface ModelExplainabilityJobDefinitionMonitoringResourcesArgs {
        clusterConfig: pulumi.Input<inputs.sagemaker.ModelExplainabilityJobDefinitionClusterConfigArgs>;
    }

    /**
     * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
     */
    export interface ModelExplainabilityJobDefinitionNetworkConfigArgs {
        /**
         * Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
         */
        enableInterContainerTrafficEncryption?: pulumi.Input<boolean>;
        /**
         * Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
         */
        enableNetworkIsolation?: pulumi.Input<boolean>;
        vpcConfig?: pulumi.Input<inputs.sagemaker.ModelExplainabilityJobDefinitionVpcConfigArgs>;
    }

    /**
     * Information about where and how to store the results of a monitoring job.
     */
    export interface ModelExplainabilityJobDefinitionS3OutputArgs {
        /**
         * The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
         */
        localPath: pulumi.Input<string>;
        /**
         * Whether to upload the results of the monitoring job continuously or after the job completes.
         */
        s3UploadMode?: pulumi.Input<enums.sagemaker.ModelExplainabilityJobDefinitionS3OutputS3UploadMode>;
        /**
         * A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
         */
        s3Uri: pulumi.Input<string>;
    }

    /**
     * Specifies a time limit for how long the monitoring job is allowed to run.
     */
    export interface ModelExplainabilityJobDefinitionStoppingConditionArgs {
        /**
         * The maximum runtime allowed in seconds.
         */
        maxRuntimeInSeconds: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ModelExplainabilityJobDefinitionTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
     */
    export interface ModelExplainabilityJobDefinitionVpcConfigArgs {
        /**
         * The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
         */
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
         */
        subnets: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ModelImageConfigArgs {
        repositoryAccessMode: pulumi.Input<string>;
        repositoryAuthConfig?: pulumi.Input<inputs.sagemaker.ModelRepositoryAuthConfigArgs>;
    }

    export interface ModelInferenceExecutionConfigArgs {
        mode: pulumi.Input<string>;
    }

    export interface ModelMultiModelConfigArgs {
        modelCacheSetting?: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ModelPackageGroupTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * Configuration for the cluster used to run model monitoring jobs.
     */
    export interface ModelQualityJobDefinitionClusterConfigArgs {
        /**
         * The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
         */
        instanceCount: pulumi.Input<number>;
        /**
         * The ML compute instance type for the processing job.
         */
        instanceType: pulumi.Input<string>;
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
         */
        volumeKmsKeyId?: pulumi.Input<string>;
        /**
         * The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
         */
        volumeSizeInGB: pulumi.Input<number>;
    }

    /**
     * The baseline constraints resource for a monitoring job.
     */
    export interface ModelQualityJobDefinitionConstraintsResourceArgs {
        /**
         * The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
         */
        s3Uri?: pulumi.Input<string>;
    }

    /**
     * The endpoint for a monitoring job.
     */
    export interface ModelQualityJobDefinitionEndpointInputArgs {
        /**
         * Monitoring end time offset, e.g. PT0H
         */
        endTimeOffset?: pulumi.Input<string>;
        endpointName: pulumi.Input<string>;
        /**
         * Index or JSONpath to locate predicted label(s)
         */
        inferenceAttribute?: pulumi.Input<string>;
        /**
         * Path to the filesystem where the endpoint data is available to the container.
         */
        localPath: pulumi.Input<string>;
        /**
         * Index or JSONpath to locate probabilities
         */
        probabilityAttribute?: pulumi.Input<string>;
        probabilityThresholdAttribute?: pulumi.Input<number>;
        /**
         * Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
         */
        s3DataDistributionType?: pulumi.Input<enums.sagemaker.ModelQualityJobDefinitionEndpointInputS3DataDistributionType>;
        /**
         * Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
         */
        s3InputMode?: pulumi.Input<enums.sagemaker.ModelQualityJobDefinitionEndpointInputS3InputMode>;
        /**
         * Monitoring start time offset, e.g. -PT1H
         */
        startTimeOffset?: pulumi.Input<string>;
    }

    /**
     * Container image configuration object for the monitoring job.
     */
    export interface ModelQualityJobDefinitionModelQualityAppSpecificationArgs {
        /**
         * An array of arguments for the container used to run the monitoring job.
         */
        containerArguments?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the entrypoint for a container used to run the monitoring job.
         */
        containerEntrypoint?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Sets the environment variables in the Docker container
         */
        environment?: any;
        /**
         * The container image to be run by the monitoring job.
         */
        imageUri: pulumi.Input<string>;
        /**
         * An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
         */
        postAnalyticsProcessorSourceUri?: pulumi.Input<string>;
        problemType: pulumi.Input<enums.sagemaker.ModelQualityJobDefinitionProblemType>;
        /**
         * An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
         */
        recordPreprocessorSourceUri?: pulumi.Input<string>;
    }

    /**
     * Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
     */
    export interface ModelQualityJobDefinitionModelQualityBaselineConfigArgs {
        baseliningJobName?: pulumi.Input<string>;
        constraintsResource?: pulumi.Input<inputs.sagemaker.ModelQualityJobDefinitionConstraintsResourceArgs>;
    }

    /**
     * The inputs for a monitoring job.
     */
    export interface ModelQualityJobDefinitionModelQualityJobInputArgs {
        endpointInput: pulumi.Input<inputs.sagemaker.ModelQualityJobDefinitionEndpointInputArgs>;
        groundTruthS3Input: pulumi.Input<inputs.sagemaker.ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs>;
    }

    /**
     * Ground truth input provided in S3 
     */
    export interface ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs {
        /**
         * A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
         */
        s3Uri: pulumi.Input<string>;
    }

    /**
     * The output object for a monitoring job.
     */
    export interface ModelQualityJobDefinitionMonitoringOutputArgs {
        s3Output: pulumi.Input<inputs.sagemaker.ModelQualityJobDefinitionS3OutputArgs>;
    }

    /**
     * The output configuration for monitoring jobs.
     */
    export interface ModelQualityJobDefinitionMonitoringOutputConfigArgs {
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
         */
        monitoringOutputs: pulumi.Input<pulumi.Input<inputs.sagemaker.ModelQualityJobDefinitionMonitoringOutputArgs>[]>;
    }

    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    export interface ModelQualityJobDefinitionMonitoringResourcesArgs {
        clusterConfig: pulumi.Input<inputs.sagemaker.ModelQualityJobDefinitionClusterConfigArgs>;
    }

    /**
     * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
     */
    export interface ModelQualityJobDefinitionNetworkConfigArgs {
        /**
         * Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
         */
        enableInterContainerTrafficEncryption?: pulumi.Input<boolean>;
        /**
         * Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
         */
        enableNetworkIsolation?: pulumi.Input<boolean>;
        vpcConfig?: pulumi.Input<inputs.sagemaker.ModelQualityJobDefinitionVpcConfigArgs>;
    }

    /**
     * Information about where and how to store the results of a monitoring job.
     */
    export interface ModelQualityJobDefinitionS3OutputArgs {
        /**
         * The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
         */
        localPath: pulumi.Input<string>;
        /**
         * Whether to upload the results of the monitoring job continuously or after the job completes.
         */
        s3UploadMode?: pulumi.Input<enums.sagemaker.ModelQualityJobDefinitionS3OutputS3UploadMode>;
        /**
         * A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
         */
        s3Uri: pulumi.Input<string>;
    }

    /**
     * Specifies a time limit for how long the monitoring job is allowed to run.
     */
    export interface ModelQualityJobDefinitionStoppingConditionArgs {
        /**
         * The maximum runtime allowed in seconds.
         */
        maxRuntimeInSeconds: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ModelQualityJobDefinitionTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
     */
    export interface ModelQualityJobDefinitionVpcConfigArgs {
        /**
         * The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
         */
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
         */
        subnets: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ModelRepositoryAuthConfigArgs {
        repositoryCredentialsProviderArn: pulumi.Input<string>;
    }

    export interface ModelTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ModelVpcConfigArgs {
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        subnets: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
     */
    export interface MonitoringScheduleBaselineConfigArgs {
        constraintsResource?: pulumi.Input<inputs.sagemaker.MonitoringScheduleConstraintsResourceArgs>;
        statisticsResource?: pulumi.Input<inputs.sagemaker.MonitoringScheduleStatisticsResourceArgs>;
    }

    /**
     * Configuration for the cluster used to run model monitoring jobs.
     */
    export interface MonitoringScheduleClusterConfigArgs {
        /**
         * The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
         */
        instanceCount: pulumi.Input<number>;
        /**
         * The ML compute instance type for the processing job.
         */
        instanceType: pulumi.Input<string>;
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
         */
        volumeKmsKeyId?: pulumi.Input<string>;
        /**
         * The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
         */
        volumeSizeInGB: pulumi.Input<number>;
    }

    /**
     * The configuration object that specifies the monitoring schedule and defines the monitoring job.
     */
    export interface MonitoringScheduleConfigArgs {
        monitoringJobDefinition?: pulumi.Input<inputs.sagemaker.MonitoringScheduleMonitoringJobDefinitionArgs>;
        /**
         * Name of the job definition
         */
        monitoringJobDefinitionName?: pulumi.Input<string>;
        monitoringType?: pulumi.Input<enums.sagemaker.MonitoringScheduleMonitoringType>;
        scheduleConfig?: pulumi.Input<inputs.sagemaker.MonitoringScheduleScheduleConfigArgs>;
    }

    /**
     * The baseline constraints resource for a monitoring job.
     */
    export interface MonitoringScheduleConstraintsResourceArgs {
        /**
         * The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
         */
        s3Uri?: pulumi.Input<string>;
    }

    /**
     * The endpoint for a monitoring job.
     */
    export interface MonitoringScheduleEndpointInputArgs {
        endpointName: pulumi.Input<string>;
        /**
         * Path to the filesystem where the endpoint data is available to the container.
         */
        localPath: pulumi.Input<string>;
        /**
         * Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
         */
        s3DataDistributionType?: pulumi.Input<enums.sagemaker.MonitoringScheduleEndpointInputS3DataDistributionType>;
        /**
         * Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
         */
        s3InputMode?: pulumi.Input<enums.sagemaker.MonitoringScheduleEndpointInputS3InputMode>;
    }

    /**
     * Container image configuration object for the monitoring job.
     */
    export interface MonitoringScheduleMonitoringAppSpecificationArgs {
        /**
         * An array of arguments for the container used to run the monitoring job.
         */
        containerArguments?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the entrypoint for a container used to run the monitoring job.
         */
        containerEntrypoint?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The container image to be run by the monitoring job.
         */
        imageUri: pulumi.Input<string>;
        /**
         * An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
         */
        postAnalyticsProcessorSourceUri?: pulumi.Input<string>;
        /**
         * An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
         */
        recordPreprocessorSourceUri?: pulumi.Input<string>;
    }

    /**
     * Summary of information about monitoring job
     */
    export interface MonitoringScheduleMonitoringExecutionSummaryArgs {
        /**
         * The time at which the monitoring job was created.
         */
        creationTime: pulumi.Input<string>;
        endpointName?: pulumi.Input<string>;
        /**
         * Contains the reason a monitoring job failed, if it failed.
         */
        failureReason?: pulumi.Input<string>;
        /**
         * A timestamp that indicates the last time the monitoring job was modified.
         */
        lastModifiedTime: pulumi.Input<string>;
        /**
         * The status of the monitoring job.
         */
        monitoringExecutionStatus: pulumi.Input<enums.sagemaker.MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus>;
        monitoringScheduleName: pulumi.Input<string>;
        /**
         * The Amazon Resource Name (ARN) of the monitoring job.
         */
        processingJobArn?: pulumi.Input<string>;
        /**
         * The time the monitoring job was scheduled.
         */
        scheduledTime: pulumi.Input<string>;
    }

    /**
     * The inputs for a monitoring job.
     */
    export interface MonitoringScheduleMonitoringInputArgs {
        endpointInput: pulumi.Input<inputs.sagemaker.MonitoringScheduleEndpointInputArgs>;
    }

    /**
     * Defines the monitoring job.
     */
    export interface MonitoringScheduleMonitoringJobDefinitionArgs {
        baselineConfig?: pulumi.Input<inputs.sagemaker.MonitoringScheduleBaselineConfigArgs>;
        /**
         * Sets the environment variables in the Docker container
         */
        environment?: any;
        monitoringAppSpecification: pulumi.Input<inputs.sagemaker.MonitoringScheduleMonitoringAppSpecificationArgs>;
        monitoringInputs: pulumi.Input<pulumi.Input<inputs.sagemaker.MonitoringScheduleMonitoringInputArgs>[]>;
        monitoringOutputConfig: pulumi.Input<inputs.sagemaker.MonitoringScheduleMonitoringOutputConfigArgs>;
        monitoringResources: pulumi.Input<inputs.sagemaker.MonitoringScheduleMonitoringResourcesArgs>;
        networkConfig?: pulumi.Input<inputs.sagemaker.MonitoringScheduleNetworkConfigArgs>;
        /**
         * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
         */
        roleArn: pulumi.Input<string>;
        stoppingCondition?: pulumi.Input<inputs.sagemaker.MonitoringScheduleStoppingConditionArgs>;
    }

    /**
     * The output object for a monitoring job.
     */
    export interface MonitoringScheduleMonitoringOutputArgs {
        s3Output: pulumi.Input<inputs.sagemaker.MonitoringScheduleS3OutputArgs>;
    }

    /**
     * The output configuration for monitoring jobs.
     */
    export interface MonitoringScheduleMonitoringOutputConfigArgs {
        /**
         * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
         */
        monitoringOutputs: pulumi.Input<pulumi.Input<inputs.sagemaker.MonitoringScheduleMonitoringOutputArgs>[]>;
    }

    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    export interface MonitoringScheduleMonitoringResourcesArgs {
        clusterConfig: pulumi.Input<inputs.sagemaker.MonitoringScheduleClusterConfigArgs>;
    }

    /**
     * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
     */
    export interface MonitoringScheduleNetworkConfigArgs {
        /**
         * Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
         */
        enableInterContainerTrafficEncryption?: pulumi.Input<boolean>;
        /**
         * Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
         */
        enableNetworkIsolation?: pulumi.Input<boolean>;
        vpcConfig?: pulumi.Input<inputs.sagemaker.MonitoringScheduleVpcConfigArgs>;
    }

    /**
     * Information about where and how to store the results of a monitoring job.
     */
    export interface MonitoringScheduleS3OutputArgs {
        /**
         * The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
         */
        localPath: pulumi.Input<string>;
        /**
         * Whether to upload the results of the monitoring job continuously or after the job completes.
         */
        s3UploadMode?: pulumi.Input<enums.sagemaker.MonitoringScheduleS3OutputS3UploadMode>;
        /**
         * A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
         */
        s3Uri: pulumi.Input<string>;
    }

    /**
     * Configuration details about the monitoring schedule.
     */
    export interface MonitoringScheduleScheduleConfigArgs {
        /**
         * A cron expression that describes details about the monitoring schedule.
         */
        scheduleExpression: pulumi.Input<string>;
    }

    /**
     * The baseline statistics resource for a monitoring job.
     */
    export interface MonitoringScheduleStatisticsResourceArgs {
        /**
         * The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
         */
        s3Uri?: pulumi.Input<string>;
    }

    /**
     * Specifies a time limit for how long the monitoring job is allowed to run.
     */
    export interface MonitoringScheduleStoppingConditionArgs {
        /**
         * The maximum runtime allowed in seconds.
         */
        maxRuntimeInSeconds: pulumi.Input<number>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface MonitoringScheduleTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
     */
    export interface MonitoringScheduleVpcConfigArgs {
        /**
         * The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
         */
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
         */
        subnets: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs {
        content?: pulumi.Input<string>;
    }

    export interface NotebookInstanceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface OfflineStoreConfigPropertiesArgs {
        dataCatalogConfig?: pulumi.Input<inputs.sagemaker.FeatureGroupDataCatalogConfigArgs>;
        disableGlueTableCreation?: pulumi.Input<boolean>;
        s3StorageConfig: pulumi.Input<inputs.sagemaker.FeatureGroupS3StorageConfigArgs>;
    }

    export interface OnlineStoreConfigPropertiesArgs {
        enableOnlineStore?: pulumi.Input<boolean>;
        securityConfig?: pulumi.Input<inputs.sagemaker.FeatureGroupOnlineStoreSecurityConfigArgs>;
    }

    export interface PipelineTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Information about a parameter used to provision a product.
     */
    export interface ProjectProvisioningParameterArgs {
        /**
         * The parameter key.
         */
        key: pulumi.Input<string>;
        /**
         * The parameter value.
         */
        value: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ProjectTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    /**
     * Input ServiceCatalog Provisioning Details
     */
    export interface ServiceCatalogProvisioningDetailsPropertiesArgs {
        pathId?: pulumi.Input<string>;
        productId: pulumi.Input<string>;
        provisioningArtifactId?: pulumi.Input<string>;
        /**
         * Parameters specified by the administrator that are required for provisioning the product.
         */
        provisioningParameters?: pulumi.Input<pulumi.Input<inputs.sagemaker.ProjectProvisioningParameterArgs>[]>;
    }

    /**
     * A custom SageMaker image.
     */
    export interface UserProfileCustomImageArgs {
        /**
         * The Name of the AppImageConfig.
         */
        appImageConfigName: pulumi.Input<string>;
        /**
         * The name of the CustomImage. Must be unique to your account.
         */
        imageName: pulumi.Input<string>;
        /**
         * The version number of the CustomImage.
         */
        imageVersionNumber?: pulumi.Input<number>;
    }

    /**
     * The JupyterServer app settings.
     */
    export interface UserProfileJupyterServerAppSettingsArgs {
        defaultResourceSpec?: pulumi.Input<inputs.sagemaker.UserProfileResourceSpecArgs>;
    }

    /**
     * The kernel gateway app settings.
     */
    export interface UserProfileKernelGatewayAppSettingsArgs {
        /**
         * A list of custom SageMaker images that are configured to run as a KernelGateway app.
         */
        customImages?: pulumi.Input<pulumi.Input<inputs.sagemaker.UserProfileCustomImageArgs>[]>;
        /**
         * The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
         */
        defaultResourceSpec?: pulumi.Input<inputs.sagemaker.UserProfileResourceSpecArgs>;
    }

    export interface UserProfileResourceSpecArgs {
        /**
         * The instance type that the image version runs on.
         */
        instanceType?: pulumi.Input<enums.sagemaker.UserProfileResourceSpecInstanceType>;
        /**
         * The ARN of the SageMaker image that the image version belongs to.
         */
        sageMakerImageArn?: pulumi.Input<string>;
        /**
         * The ARN of the image version created on the instance.
         */
        sageMakerImageVersionArn?: pulumi.Input<string>;
    }

    /**
     * Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
     */
    export interface UserProfileSharingSettingsArgs {
        /**
         * Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
         */
        notebookOutputOption?: pulumi.Input<enums.sagemaker.UserProfileSharingSettingsNotebookOutputOption>;
        /**
         * When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
         */
        s3KmsKeyId?: pulumi.Input<string>;
        /**
         * When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
         */
        s3OutputPath?: pulumi.Input<string>;
    }

    export interface UserProfileTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
     */
    export interface UserProfileUserSettingsArgs {
        /**
         * The user profile Amazon Resource Name (ARN).
         */
        executionRole?: pulumi.Input<string>;
        /**
         * The Jupyter server's app settings.
         */
        jupyterServerAppSettings?: pulumi.Input<inputs.sagemaker.UserProfileJupyterServerAppSettingsArgs>;
        /**
         * The kernel gateway app settings.
         */
        kernelGatewayAppSettings?: pulumi.Input<inputs.sagemaker.UserProfileKernelGatewayAppSettingsArgs>;
        /**
         * The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
         */
        securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The sharing settings.
         */
        sharingSettings?: pulumi.Input<inputs.sagemaker.UserProfileSharingSettingsArgs>;
    }

    export interface WorkteamCognitoMemberDefinitionArgs {
        cognitoClientId: pulumi.Input<string>;
        cognitoUserGroup: pulumi.Input<string>;
        cognitoUserPool: pulumi.Input<string>;
    }

    export interface WorkteamMemberDefinitionArgs {
        cognitoMemberDefinition: pulumi.Input<inputs.sagemaker.WorkteamCognitoMemberDefinitionArgs>;
    }

    export interface WorkteamNotificationConfigurationArgs {
        notificationTopicArn: pulumi.Input<string>;
    }

    export interface WorkteamTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

}

export namespace secretsmanager {
    export interface RotationScheduleHostedRotationLambdaArgs {
        kmsKeyArn?: pulumi.Input<string>;
        masterSecretArn?: pulumi.Input<string>;
        masterSecretKmsKeyArn?: pulumi.Input<string>;
        rotationLambdaName?: pulumi.Input<string>;
        rotationType: pulumi.Input<string>;
        superuserSecretArn?: pulumi.Input<string>;
        superuserSecretKmsKeyArn?: pulumi.Input<string>;
        vpcSecurityGroupIds?: pulumi.Input<string>;
        vpcSubnetIds?: pulumi.Input<string>;
    }

    export interface RotationScheduleRotationRulesArgs {
        automaticallyAfterDays?: pulumi.Input<number>;
    }

    export interface SecretGenerateSecretStringArgs {
        excludeCharacters?: pulumi.Input<string>;
        excludeLowercase?: pulumi.Input<boolean>;
        excludeNumbers?: pulumi.Input<boolean>;
        excludePunctuation?: pulumi.Input<boolean>;
        excludeUppercase?: pulumi.Input<boolean>;
        generateStringKey?: pulumi.Input<string>;
        includeSpace?: pulumi.Input<boolean>;
        passwordLength?: pulumi.Input<number>;
        requireEachIncludedType?: pulumi.Input<boolean>;
        secretStringTemplate?: pulumi.Input<string>;
    }

    export interface SecretReplicaRegionArgs {
        kmsKeyId?: pulumi.Input<string>;
        region: pulumi.Input<string>;
    }

    export interface SecretTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace servicecatalog {
    export interface CloudFormationProductProvisioningArtifactPropertiesArgs {
        description?: pulumi.Input<string>;
        disableTemplateValidation?: pulumi.Input<boolean>;
        info: any;
        name?: pulumi.Input<string>;
    }

    export interface CloudFormationProductTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface CloudFormationProvisionedProductProvisioningParameterArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface CloudFormationProvisionedProductProvisioningPreferencesArgs {
        stackSetAccounts?: pulumi.Input<pulumi.Input<string>[]>;
        stackSetFailureToleranceCount?: pulumi.Input<number>;
        stackSetFailureTolerancePercentage?: pulumi.Input<number>;
        stackSetMaxConcurrencyCount?: pulumi.Input<number>;
        stackSetMaxConcurrencyPercentage?: pulumi.Input<number>;
        stackSetOperationType?: pulumi.Input<enums.servicecatalog.CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType>;
        stackSetRegions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CloudFormationProvisionedProductTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface PortfolioTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ServiceActionDefinitionParameterArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace servicecatalogappregistry {
    export interface ApplicationTagsArgs {
    }

    export interface AttributeGroupTagsArgs {
    }
}

export namespace servicediscovery {
    export interface HttpNamespaceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface PrivateDnsNamespacePrivateDnsPropertiesMutableArgs {
        sOA?: pulumi.Input<inputs.servicediscovery.PrivateDnsNamespaceSOAArgs>;
    }

    export interface PrivateDnsNamespacePropertiesArgs {
        dnsProperties?: pulumi.Input<inputs.servicediscovery.PrivateDnsNamespacePrivateDnsPropertiesMutableArgs>;
    }

    export interface PrivateDnsNamespaceSOAArgs {
        tTL?: pulumi.Input<number>;
    }

    export interface PrivateDnsNamespaceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface PublicDnsNamespacePropertiesArgs {
        dnsProperties?: pulumi.Input<inputs.servicediscovery.PublicDnsNamespacePublicDnsPropertiesMutableArgs>;
    }

    export interface PublicDnsNamespacePublicDnsPropertiesMutableArgs {
        sOA?: pulumi.Input<inputs.servicediscovery.PublicDnsNamespaceSOAArgs>;
    }

    export interface PublicDnsNamespaceSOAArgs {
        tTL?: pulumi.Input<number>;
    }

    export interface PublicDnsNamespaceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ServiceDnsConfigArgs {
        dnsRecords: pulumi.Input<pulumi.Input<inputs.servicediscovery.ServiceDnsRecordArgs>[]>;
        namespaceId?: pulumi.Input<string>;
        routingPolicy?: pulumi.Input<string>;
    }

    export interface ServiceDnsRecordArgs {
        tTL: pulumi.Input<number>;
        type: pulumi.Input<string>;
    }

    export interface ServiceHealthCheckConfigArgs {
        failureThreshold?: pulumi.Input<number>;
        resourcePath?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface ServiceHealthCheckCustomConfigArgs {
        failureThreshold?: pulumi.Input<number>;
    }

    export interface ServiceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace ses {
    export interface ConfigurationSetEventDestinationCloudWatchDestinationArgs {
        dimensionConfigurations?: pulumi.Input<pulumi.Input<inputs.ses.ConfigurationSetEventDestinationDimensionConfigurationArgs>[]>;
    }

    export interface ConfigurationSetEventDestinationDimensionConfigurationArgs {
        defaultDimensionValue: pulumi.Input<string>;
        dimensionName: pulumi.Input<string>;
        dimensionValueSource: pulumi.Input<string>;
    }

    export interface ConfigurationSetEventDestinationEventDestinationArgs {
        cloudWatchDestination?: pulumi.Input<inputs.ses.ConfigurationSetEventDestinationCloudWatchDestinationArgs>;
        enabled?: pulumi.Input<boolean>;
        kinesisFirehoseDestination?: pulumi.Input<inputs.ses.ConfigurationSetEventDestinationKinesisFirehoseDestinationArgs>;
        matchingEventTypes: pulumi.Input<pulumi.Input<string>[]>;
        name?: pulumi.Input<string>;
    }

    export interface ConfigurationSetEventDestinationKinesisFirehoseDestinationArgs {
        deliveryStreamARN: pulumi.Input<string>;
        iAMRoleARN: pulumi.Input<string>;
    }

    export interface ContactListTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ContactListTopicArgs {
        defaultSubscriptionStatus: pulumi.Input<string>;
        /**
         * The description of the topic.
         */
        description?: pulumi.Input<string>;
        /**
         * The display name of the topic.
         */
        displayName: pulumi.Input<string>;
        /**
         * The name of the topic.
         */
        topicName: pulumi.Input<string>;
    }

    export interface ReceiptFilterFilterArgs {
        ipFilter: pulumi.Input<inputs.ses.ReceiptFilterIpFilterArgs>;
        name?: pulumi.Input<string>;
    }

    export interface ReceiptFilterIpFilterArgs {
        cidr: pulumi.Input<string>;
        policy: pulumi.Input<string>;
    }

    export interface ReceiptRuleActionArgs {
        addHeaderAction?: pulumi.Input<inputs.ses.ReceiptRuleAddHeaderActionArgs>;
        bounceAction?: pulumi.Input<inputs.ses.ReceiptRuleBounceActionArgs>;
        lambdaAction?: pulumi.Input<inputs.ses.ReceiptRuleLambdaActionArgs>;
        s3Action?: pulumi.Input<inputs.ses.ReceiptRuleS3ActionArgs>;
        sNSAction?: pulumi.Input<inputs.ses.ReceiptRuleSNSActionArgs>;
        stopAction?: pulumi.Input<inputs.ses.ReceiptRuleStopActionArgs>;
        workmailAction?: pulumi.Input<inputs.ses.ReceiptRuleWorkmailActionArgs>;
    }

    export interface ReceiptRuleAddHeaderActionArgs {
        headerName: pulumi.Input<string>;
        headerValue: pulumi.Input<string>;
    }

    export interface ReceiptRuleBounceActionArgs {
        message: pulumi.Input<string>;
        sender: pulumi.Input<string>;
        smtpReplyCode: pulumi.Input<string>;
        statusCode?: pulumi.Input<string>;
        topicArn?: pulumi.Input<string>;
    }

    export interface ReceiptRuleLambdaActionArgs {
        functionArn: pulumi.Input<string>;
        invocationType?: pulumi.Input<string>;
        topicArn?: pulumi.Input<string>;
    }

    export interface ReceiptRuleRuleArgs {
        actions?: pulumi.Input<pulumi.Input<inputs.ses.ReceiptRuleActionArgs>[]>;
        enabled?: pulumi.Input<boolean>;
        name?: pulumi.Input<string>;
        recipients?: pulumi.Input<pulumi.Input<string>[]>;
        scanEnabled?: pulumi.Input<boolean>;
        tlsPolicy?: pulumi.Input<string>;
    }

    export interface ReceiptRuleS3ActionArgs {
        bucketName: pulumi.Input<string>;
        kmsKeyArn?: pulumi.Input<string>;
        objectKeyPrefix?: pulumi.Input<string>;
        topicArn?: pulumi.Input<string>;
    }

    export interface ReceiptRuleSNSActionArgs {
        encoding?: pulumi.Input<string>;
        topicArn?: pulumi.Input<string>;
    }

    export interface ReceiptRuleStopActionArgs {
        scope: pulumi.Input<string>;
        topicArn?: pulumi.Input<string>;
    }

    export interface ReceiptRuleWorkmailActionArgs {
        organizationArn: pulumi.Input<string>;
        topicArn?: pulumi.Input<string>;
    }

    export interface TemplateArgs {
        htmlPart?: pulumi.Input<string>;
        subjectPart?: pulumi.Input<string>;
        templateName?: pulumi.Input<string>;
        textPart?: pulumi.Input<string>;
    }
}

export namespace signer {
    export interface SigningProfileSignatureValidityPeriodArgs {
        type?: pulumi.Input<enums.signer.SigningProfileSignatureValidityPeriodType>;
        value?: pulumi.Input<number>;
    }

    export interface SigningProfileTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace sns {
    export interface TopicSubscriptionArgs {
        endpoint: pulumi.Input<string>;
        protocol: pulumi.Input<string>;
    }

    export interface TopicTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace sqs {
    export interface QueueTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace ssm {
    export interface AssociationInstanceAssociationOutputLocationArgs {
        s3Location?: pulumi.Input<inputs.ssm.AssociationS3OutputLocationArgs>;
    }

    export interface AssociationS3OutputLocationArgs {
        outputS3BucketName?: pulumi.Input<string>;
        outputS3KeyPrefix?: pulumi.Input<string>;
        outputS3Region?: pulumi.Input<string>;
    }

    export interface AssociationTargetArgs {
        key: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DocumentAttachmentsSourceArgs {
        /**
         * The key of a key-value pair that identifies the location of an attachment to a document.
         */
        key?: pulumi.Input<enums.ssm.DocumentAttachmentsSourceKey>;
        /**
         * The name of the document attachment file.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of a key-value pair that identifies the location of an attachment to a document. The format for Value depends on the type of key you specify.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DocumentRequiresArgs {
        /**
         * The name of the required SSM document. The name can be an Amazon Resource Name (ARN).
         */
        name?: pulumi.Input<string>;
        /**
         * The document version required by the current document.
         */
        version?: pulumi.Input<string>;
    }

    export interface DocumentTagArgs {
        /**
         * The name of the tag.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the tag.
         */
        value?: pulumi.Input<string>;
    }

    export interface MaintenanceWindowTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface MaintenanceWindowTargetTargetsArgs {
        key: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface MaintenanceWindowTaskLoggingInfoArgs {
        region: pulumi.Input<string>;
        s3Bucket: pulumi.Input<string>;
        s3Prefix?: pulumi.Input<string>;
    }

    export interface MaintenanceWindowTaskMaintenanceWindowAutomationParametersArgs {
        documentVersion?: pulumi.Input<string>;
        parameters?: any;
    }

    export interface MaintenanceWindowTaskMaintenanceWindowLambdaParametersArgs {
        clientContext?: pulumi.Input<string>;
        payload?: pulumi.Input<string>;
        qualifier?: pulumi.Input<string>;
    }

    export interface MaintenanceWindowTaskMaintenanceWindowRunCommandParametersArgs {
        comment?: pulumi.Input<string>;
        documentHash?: pulumi.Input<string>;
        documentHashType?: pulumi.Input<string>;
        notificationConfig?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskNotificationConfigArgs>;
        outputS3BucketName?: pulumi.Input<string>;
        outputS3KeyPrefix?: pulumi.Input<string>;
        parameters?: any;
        serviceRoleArn?: pulumi.Input<string>;
        timeoutSeconds?: pulumi.Input<number>;
    }

    export interface MaintenanceWindowTaskMaintenanceWindowStepFunctionsParametersArgs {
        input?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
    }

    export interface MaintenanceWindowTaskNotificationConfigArgs {
        notificationArn: pulumi.Input<string>;
        notificationEvents?: pulumi.Input<pulumi.Input<string>[]>;
        notificationType?: pulumi.Input<string>;
    }

    export interface MaintenanceWindowTaskTargetArgs {
        key: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface MaintenanceWindowTaskTaskInvocationParametersArgs {
        maintenanceWindowAutomationParameters?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskMaintenanceWindowAutomationParametersArgs>;
        maintenanceWindowLambdaParameters?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskMaintenanceWindowLambdaParametersArgs>;
        maintenanceWindowRunCommandParameters?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskMaintenanceWindowRunCommandParametersArgs>;
        maintenanceWindowStepFunctionsParameters?: pulumi.Input<inputs.ssm.MaintenanceWindowTaskMaintenanceWindowStepFunctionsParametersArgs>;
    }

    export interface PatchBaselinePatchFilterArgs {
        key?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PatchBaselinePatchFilterGroupArgs {
        patchFilters?: pulumi.Input<pulumi.Input<inputs.ssm.PatchBaselinePatchFilterArgs>[]>;
    }

    export interface PatchBaselinePatchSourceArgs {
        configuration?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        products?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PatchBaselinePatchStringDateArgs {
    }

    export interface PatchBaselineRuleArgs {
        approveAfterDays?: pulumi.Input<number>;
        approveUntilDate?: pulumi.Input<inputs.ssm.PatchBaselinePatchStringDateArgs>;
        complianceLevel?: pulumi.Input<string>;
        enableNonSecurity?: pulumi.Input<boolean>;
        patchFilterGroup?: pulumi.Input<inputs.ssm.PatchBaselinePatchFilterGroupArgs>;
    }

    export interface PatchBaselineRuleGroupArgs {
        patchRules?: pulumi.Input<pulumi.Input<inputs.ssm.PatchBaselineRuleArgs>[]>;
    }

    export interface PatchBaselineTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ResourceDataSyncAwsOrganizationsSourceArgs {
        organizationSourceType: pulumi.Input<string>;
        organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ResourceDataSyncS3DestinationArgs {
        bucketName: pulumi.Input<string>;
        bucketPrefix?: pulumi.Input<string>;
        bucketRegion: pulumi.Input<string>;
        kMSKeyArn?: pulumi.Input<string>;
        syncFormat: pulumi.Input<string>;
    }

    export interface ResourceDataSyncSyncSourceArgs {
        awsOrganizationsSource?: pulumi.Input<inputs.ssm.ResourceDataSyncAwsOrganizationsSourceArgs>;
        includeFutureRegions?: pulumi.Input<boolean>;
        sourceRegions: pulumi.Input<pulumi.Input<string>[]>;
        sourceType: pulumi.Input<string>;
    }
}

export namespace ssmcontacts {
    /**
     * Information about the contact channel that SSM Incident Manager uses to engage the contact.
     */
    export interface ContactChannelTargetInfoArgs {
        /**
         * The Amazon Resource Name (ARN) of the contact channel.
         */
        channelId: pulumi.Input<string>;
        /**
         * The number of minutes to wait to retry sending engagement in the case the engagement initially fails.
         */
        retryIntervalInMinutes: pulumi.Input<number>;
    }

    /**
     * A set amount of time that an escalation plan or engagement plan engages the specified contacts or contact methods.
     */
    export interface ContactStageArgs {
        /**
         * The time to wait until beginning the next stage.
         */
        durationInMinutes: pulumi.Input<number>;
        /**
         * The contacts or contact methods that the escalation plan or engagement plan is engaging.
         */
        targets?: pulumi.Input<pulumi.Input<inputs.ssmcontacts.ContactTargetsArgs>[]>;
    }

    /**
     * The contact that SSM Incident Manager is engaging during an incident.
     */
    export interface ContactTargetInfoArgs {
        /**
         * The Amazon Resource Name (ARN) of the contact.
         */
        contactId: pulumi.Input<string>;
        /**
         * A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.
         */
        isEssential: pulumi.Input<boolean>;
    }

    /**
     * The contacts or contact methods that the escalation plan or engagement plan is engaging.
     */
    export interface ContactTargetsArgs {
        channelTargetInfo?: pulumi.Input<inputs.ssmcontacts.ContactChannelTargetInfoArgs>;
        contactTargetInfo?: pulumi.Input<inputs.ssmcontacts.ContactTargetInfoArgs>;
    }
}

export namespace ssmincidents {
    /**
     * The ReplicationSet regional configuration.
     */
    export interface ReplicationSetRegionConfigurationArgs {
        sseKmsKeyId: pulumi.Input<string>;
    }

    /**
     * The ReplicationSet regional configuration.
     */
    export interface ReplicationSetReplicationRegionArgs {
        regionConfiguration?: pulumi.Input<inputs.ssmincidents.ReplicationSetRegionConfigurationArgs>;
        regionName?: pulumi.Input<string>;
    }

    /**
     * The automation configuration to launch.
     */
    export interface ResponsePlanActionArgs {
        ssmAutomation?: pulumi.Input<inputs.ssmincidents.ResponsePlanSsmAutomationArgs>;
    }

    /**
     * The chat channel configuration.
     */
    export interface ResponsePlanChatChannelArgs {
        chatbotSns?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The incident template configuration.
     */
    export interface ResponsePlanIncidentTemplateArgs {
        /**
         * The deduplication string.
         */
        dedupeString?: pulumi.Input<string>;
        /**
         * The impact value.
         */
        impact: pulumi.Input<number>;
        /**
         * The list of notification targets.
         */
        notificationTargets?: pulumi.Input<pulumi.Input<inputs.ssmincidents.ResponsePlanNotificationTargetItemArgs>[]>;
        /**
         * The summary string.
         */
        summary?: pulumi.Input<string>;
        /**
         * The title string.
         */
        title: pulumi.Input<string>;
    }

    /**
     * A notification target.
     */
    export interface ResponsePlanNotificationTargetItemArgs {
        snsTopicArn?: pulumi.Input<string>;
    }

    /**
     * The configuration to use when starting the SSM automation document.
     */
    export interface ResponsePlanSsmAutomationArgs {
        /**
         * The document name to use when starting the SSM automation document.
         */
        documentName: pulumi.Input<string>;
        /**
         * The version of the document to use when starting the SSM automation document.
         */
        documentVersion?: pulumi.Input<string>;
        /**
         * The parameters to set when starting the SSM automation document.
         */
        parameters?: pulumi.Input<pulumi.Input<inputs.ssmincidents.ResponsePlanSsmParameterArgs>[]>;
        /**
         * The role ARN to use when starting the SSM automation document.
         */
        roleArn: pulumi.Input<string>;
        /**
         * The account type to use when starting the SSM automation document.
         */
        targetAccount?: pulumi.Input<enums.ssmincidents.ResponsePlanSsmAutomationTargetAccount>;
    }

    /**
     * A parameter to set when starting the SSM automation document.
     */
    export interface ResponsePlanSsmParameterArgs {
        key: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * A key-value pair to tag a resource.
     */
    export interface ResponsePlanTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace sso {
    export interface InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<inputs.sso.InstanceAccessControlAttributeConfigurationAccessControlAttributeValueArgs>;
    }

    export interface InstanceAccessControlAttributeConfigurationAccessControlAttributeValueArgs {
        source: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.
     */
    export interface InstanceAccessControlAttributeConfigurationPropertiesArgs {
        accessControlAttributes: pulumi.Input<pulumi.Input<inputs.sso.InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs>[]>;
    }

    /**
     * The metadata that you apply to the permission set to help you categorize and organize them.
     */
    export interface PermissionSetTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace stepfunctions {
    export interface ActivityTagsEntryArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface StateMachineCloudWatchLogsLogGroupArgs {
        logGroupArn?: pulumi.Input<string>;
    }

    export interface StateMachineDefinitionArgs {
    }

    export interface StateMachineDefinitionSubstitutionsArgs {
    }

    export interface StateMachineLogDestinationArgs {
        cloudWatchLogsLogGroup?: pulumi.Input<inputs.stepfunctions.StateMachineCloudWatchLogsLogGroupArgs>;
    }

    export interface StateMachineLoggingConfigurationArgs {
        destinations?: pulumi.Input<pulumi.Input<inputs.stepfunctions.StateMachineLogDestinationArgs>[]>;
        includeExecutionData?: pulumi.Input<boolean>;
        level?: pulumi.Input<enums.stepfunctions.StateMachineLoggingConfigurationLevel>;
    }

    export interface StateMachineS3LocationArgs {
        bucket: pulumi.Input<string>;
        key: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface StateMachineTagsEntryArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface StateMachineTracingConfigurationArgs {
        enabled?: pulumi.Input<boolean>;
    }
}

export namespace synthetics {
    export interface CanaryArtifactConfigArgs {
        /**
         * Encryption configuration for uploading artifacts to S3
         */
        s3Encryption?: pulumi.Input<inputs.synthetics.CanaryS3EncryptionArgs>;
    }

    export interface CanaryBaseScreenshotArgs {
        /**
         * List of coordinates of rectangles to be ignored during visual testing
         */
        ignoreCoordinates?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Name of the screenshot to be used as base reference for visual testing
         */
        screenshotName: pulumi.Input<string>;
    }

    export interface CanaryCodeArgs {
        handler: pulumi.Input<string>;
        s3Bucket?: pulumi.Input<string>;
        s3Key?: pulumi.Input<string>;
        s3ObjectVersion?: pulumi.Input<string>;
        script?: pulumi.Input<string>;
    }

    export interface CanaryRunConfigArgs {
        /**
         * Enable active tracing if set to true
         */
        activeTracing?: pulumi.Input<boolean>;
        /**
         * Environment variable key-value pairs.
         */
        environmentVariables?: any;
        /**
         * Provide maximum memory available for canary in MB
         */
        memoryInMB?: pulumi.Input<number>;
        /**
         * Provide maximum canary timeout per run in seconds
         */
        timeoutInSeconds?: pulumi.Input<number>;
    }

    export interface CanaryS3EncryptionArgs {
        /**
         * Encryption mode for encrypting artifacts when uploading to S3. Valid values: SSE_S3 and SSE_KMS.
         */
        encryptionMode?: pulumi.Input<string>;
        /**
         * KMS key Arn for encrypting artifacts when uploading to S3. You must specify KMS key Arn for SSE_KMS encryption mode only.
         */
        kmsKeyArn?: pulumi.Input<string>;
    }

    export interface CanaryScheduleArgs {
        durationInSeconds?: pulumi.Input<string>;
        expression: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface CanaryTagArgs {
        /**
         * The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        key: pulumi.Input<string>;
        /**
         * The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. 
         */
        value: pulumi.Input<string>;
    }

    export interface CanaryVPCConfigArgs {
        securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds: pulumi.Input<pulumi.Input<string>[]>;
        vpcId?: pulumi.Input<string>;
    }

    export interface CanaryVisualReferenceArgs {
        /**
         * Canary run id to be used as base reference for visual testing
         */
        baseCanaryRunId: pulumi.Input<string>;
        /**
         * List of screenshots used as base reference for visual testing
         */
        baseScreenshots?: pulumi.Input<pulumi.Input<inputs.synthetics.CanaryBaseScreenshotArgs>[]>;
    }
}

export namespace timestream {
    /**
     * You can use the Resource Tags property to apply tags to resources, which can help you identify and categorize those resources.
     */
    export interface DatabaseTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * The retention duration of the memory store and the magnetic store.
     */
    export interface RetentionPropertiesPropertiesArgs {
        /**
         * The duration for which data must be stored in the magnetic store.
         */
        magneticStoreRetentionPeriodInDays?: pulumi.Input<string>;
        /**
         * The duration for which data must be stored in the memory store.
         */
        memoryStoreRetentionPeriodInHours?: pulumi.Input<string>;
    }

    /**
     * Mapping of dimension column name to dimension column value type.
     */
    export interface ScheduledQueryDimensionMappingArgs {
        dimensionValueType: pulumi.Input<enums.timestream.ScheduledQueryDimensionValueType>;
        name: pulumi.Input<string>;
    }

    /**
     * Configuration for where error reports will be placed, how they will be named, and how they will be encrypted.
     */
    export interface ScheduledQueryErrorReportConfigurationArgs {
        s3Configuration: pulumi.Input<inputs.timestream.ScheduledQueryS3ConfigurationArgs>;
    }

    /**
     * Mapping of measure names and measure value columns from the source table to the destination table.
     */
    export interface ScheduledQueryMixedMeasureMappingArgs {
        measureName?: pulumi.Input<string>;
        measureValueType: pulumi.Input<enums.timestream.ScheduledQueryMixedMeasureMappingMeasureValueType>;
        multiMeasureAttributeMappings?: pulumi.Input<pulumi.Input<inputs.timestream.ScheduledQueryMultiMeasureAttributeMappingArgs>[]>;
        sourceColumn?: pulumi.Input<string>;
        targetMeasureName?: pulumi.Input<string>;
    }

    /**
     * Mapping of measure value columns from the source table to the destination table.
     */
    export interface ScheduledQueryMultiMeasureAttributeMappingArgs {
        measureValueType: pulumi.Input<enums.timestream.ScheduledQueryMultiMeasureAttributeMappingMeasureValueType>;
        sourceColumn: pulumi.Input<string>;
        targetMultiMeasureAttributeName?: pulumi.Input<string>;
    }

    /**
     * Mapping of measure value columns from the source table to the destination table.
     */
    export interface ScheduledQueryMultiMeasureMappingsArgs {
        multiMeasureAttributeMappings: pulumi.Input<pulumi.Input<inputs.timestream.ScheduledQueryMultiMeasureAttributeMappingArgs>[]>;
        targetMultiMeasureName?: pulumi.Input<string>;
    }

    /**
     * Configuration for notification upon scheduled query execution.
     */
    export interface ScheduledQueryNotificationConfigurationArgs {
        snsConfiguration: pulumi.Input<inputs.timestream.ScheduledQuerySnsConfigurationArgs>;
    }

    /**
     * S3 configuration for where error reports will be placed, how they will be named, and how they will be encrypted.
     */
    export interface ScheduledQueryS3ConfigurationArgs {
        bucketName: pulumi.Input<string>;
        encryptionOption?: pulumi.Input<enums.timestream.ScheduledQueryEncryptionOption>;
        objectKeyPrefix?: pulumi.Input<string>;
    }

    /**
     * Configuration that indicates when the scheduled query is executed.
     */
    export interface ScheduledQueryScheduleConfigurationArgs {
        scheduleExpression: pulumi.Input<string>;
    }

    /**
     * SNS configuration for notification upon scheduled query execution.
     */
    export interface ScheduledQuerySnsConfigurationArgs {
        topicArn: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface ScheduledQueryTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Configuration of target destination table to query.
     */
    export interface ScheduledQueryTargetConfigurationArgs {
        timestreamConfiguration: pulumi.Input<inputs.timestream.ScheduledQueryTimestreamConfigurationArgs>;
    }

    /**
     * Timestream configuration of destination table to query.
     */
    export interface ScheduledQueryTimestreamConfigurationArgs {
        databaseName: pulumi.Input<string>;
        dimensionMappings: pulumi.Input<pulumi.Input<inputs.timestream.ScheduledQueryDimensionMappingArgs>[]>;
        measureNameColumn?: pulumi.Input<string>;
        mixedMeasureMappings?: pulumi.Input<pulumi.Input<inputs.timestream.ScheduledQueryMixedMeasureMappingArgs>[]>;
        multiMeasureMappings?: pulumi.Input<inputs.timestream.ScheduledQueryMultiMeasureMappingsArgs>;
        tableName: pulumi.Input<string>;
        timeColumn: pulumi.Input<string>;
    }

    /**
     * You can use the Resource Tags property to apply tags to resources, which can help you identify and categorize those resources.
     */
    export interface TableTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }
}

export namespace transfer {
    export interface ServerEndpointDetailsArgs {
        addressAllocationIds?: pulumi.Input<pulumi.Input<string>[]>;
        securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
        vpcEndpointId?: pulumi.Input<string>;
        vpcId?: pulumi.Input<string>;
    }

    export interface ServerIdentityProviderDetailsArgs {
        directoryId?: pulumi.Input<string>;
        function?: pulumi.Input<string>;
        invocationRole?: pulumi.Input<string>;
        url?: pulumi.Input<string>;
    }

    export interface ServerProtocolArgs {
    }

    export interface ServerProtocolDetailsArgs {
        passiveIp?: pulumi.Input<string>;
    }

    export interface ServerTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ServerWorkflowDetailArgs {
        executionRole: pulumi.Input<string>;
        workflowId: pulumi.Input<string>;
    }

    export interface ServerWorkflowDetailsArgs {
        onUpload: pulumi.Input<pulumi.Input<inputs.transfer.ServerWorkflowDetailArgs>[]>;
    }

    export interface UserHomeDirectoryMapEntryArgs {
        entry: pulumi.Input<string>;
        target: pulumi.Input<string>;
    }

    export interface UserPosixProfileArgs {
        gid: pulumi.Input<number>;
        secondaryGids?: pulumi.Input<pulumi.Input<number>[]>;
        uid: pulumi.Input<number>;
    }

    export interface UserSshPublicKeyArgs {
    }

    export interface UserTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Specifies the location for the file being copied. Only applicable for the Copy type of workflow steps.
     */
    export interface WorkflowInputFileLocationArgs {
        s3FileLocation?: pulumi.Input<inputs.transfer.WorkflowS3InputFileLocationArgs>;
    }

    /**
     * Specifies the details for the S3 file being copied.
     */
    export interface WorkflowS3InputFileLocationArgs {
        /**
         * Specifies the S3 bucket that contains the file being copied.
         */
        bucket?: pulumi.Input<string>;
        /**
         * The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
         */
        key?: pulumi.Input<string>;
    }

    /**
     * Specifies the key-value pair that are assigned to a file during the execution of a Tagging step.
     */
    export interface WorkflowS3TagArgs {
        /**
         * The name assigned to the tag that you create.
         */
        key: pulumi.Input<string>;
        /**
         * The value that corresponds to the key.
         */
        value: pulumi.Input<string>;
    }

    /**
     * The basic building block of a workflow.
     */
    export interface WorkflowStepArgs {
        /**
         * Details for a step that performs a file copy.
         */
        copyStepDetails?: pulumi.Input<inputs.transfer.WorkflowStepCopyStepDetailsPropertiesArgs>;
        /**
         * Details for a step that invokes a lambda function.
         */
        customStepDetails?: pulumi.Input<inputs.transfer.WorkflowStepCustomStepDetailsPropertiesArgs>;
        /**
         * Details for a step that deletes the file.
         */
        deleteStepDetails?: pulumi.Input<inputs.transfer.WorkflowStepDeleteStepDetailsPropertiesArgs>;
        /**
         * Details for a step that creates one or more tags.
         */
        tagStepDetails?: pulumi.Input<inputs.transfer.WorkflowStepTagStepDetailsPropertiesArgs>;
        type?: pulumi.Input<enums.transfer.WorkflowStepType>;
    }

    /**
     * Details for a step that performs a file copy.
     */
    export interface WorkflowStepCopyStepDetailsPropertiesArgs {
        destinationFileLocation?: pulumi.Input<inputs.transfer.WorkflowInputFileLocationArgs>;
        /**
         * The name of the step, used as an identifier.
         */
        name?: pulumi.Input<string>;
        /**
         * A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
         */
        overwriteExisting?: pulumi.Input<enums.transfer.WorkflowStepCopyStepDetailsPropertiesOverwriteExisting>;
    }

    /**
     * Details for a step that invokes a lambda function.
     */
    export interface WorkflowStepCustomStepDetailsPropertiesArgs {
        /**
         * The name of the step, used as an identifier.
         */
        name?: pulumi.Input<string>;
        /**
         * The ARN for the lambda function that is being called.
         */
        target?: pulumi.Input<string>;
        /**
         * Timeout, in seconds, for the step.
         */
        timeoutSeconds?: pulumi.Input<number>;
    }

    /**
     * Details for a step that deletes the file.
     */
    export interface WorkflowStepDeleteStepDetailsPropertiesArgs {
        /**
         * The name of the step, used as an identifier.
         */
        name?: pulumi.Input<string>;
    }

    /**
     * Details for a step that creates one or more tags.
     */
    export interface WorkflowStepTagStepDetailsPropertiesArgs {
        /**
         * The name of the step, used as an identifier.
         */
        name?: pulumi.Input<string>;
        /**
         * Array that contains from 1 to 10 key/value pairs.
         */
        tags?: pulumi.Input<pulumi.Input<inputs.transfer.WorkflowS3TagArgs>[]>;
    }

    /**
     * Creates a key-value pair for a specific resource.
     */
    export interface WorkflowTagArgs {
        /**
         * The name assigned to the tag that you create.
         */
        key: pulumi.Input<string>;
        /**
         * Contains one or more values that you assigned to the key name you create.
         */
        value: pulumi.Input<string>;
    }
}

export namespace waf {
    export interface ByteMatchSetByteMatchTupleArgs {
        fieldToMatch: pulumi.Input<inputs.waf.ByteMatchSetFieldToMatchArgs>;
        positionalConstraint: pulumi.Input<string>;
        targetString?: pulumi.Input<string>;
        targetStringBase64?: pulumi.Input<string>;
        textTransformation: pulumi.Input<string>;
    }

    export interface ByteMatchSetFieldToMatchArgs {
        data?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface IPSetDescriptorArgs {
        type: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RulePredicateArgs {
        dataId: pulumi.Input<string>;
        negated: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
    }

    export interface SizeConstraintSetFieldToMatchArgs {
        data?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface SizeConstraintSetSizeConstraintArgs {
        comparisonOperator: pulumi.Input<string>;
        fieldToMatch: pulumi.Input<inputs.waf.SizeConstraintSetFieldToMatchArgs>;
        size: pulumi.Input<number>;
        textTransformation: pulumi.Input<string>;
    }

    export interface SqlInjectionMatchSetFieldToMatchArgs {
        data?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface SqlInjectionMatchSetSqlInjectionMatchTupleArgs {
        fieldToMatch: pulumi.Input<inputs.waf.SqlInjectionMatchSetFieldToMatchArgs>;
        textTransformation: pulumi.Input<string>;
    }

    export interface WebACLActivatedRuleArgs {
        action?: pulumi.Input<inputs.waf.WebACLWafActionArgs>;
        priority: pulumi.Input<number>;
        ruleId: pulumi.Input<string>;
    }

    export interface WebACLWafActionArgs {
        type: pulumi.Input<string>;
    }

    export interface XssMatchSetFieldToMatchArgs {
        data?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface XssMatchSetXssMatchTupleArgs {
        fieldToMatch: pulumi.Input<inputs.waf.XssMatchSetFieldToMatchArgs>;
        textTransformation: pulumi.Input<string>;
    }
}

export namespace wafregional {
    export interface ByteMatchSetByteMatchTupleArgs {
        fieldToMatch: pulumi.Input<inputs.wafregional.ByteMatchSetFieldToMatchArgs>;
        positionalConstraint: pulumi.Input<string>;
        targetString?: pulumi.Input<string>;
        targetStringBase64?: pulumi.Input<string>;
        textTransformation: pulumi.Input<string>;
    }

    export interface ByteMatchSetFieldToMatchArgs {
        data?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface GeoMatchSetGeoMatchConstraintArgs {
        type: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface IPSetDescriptorArgs {
        type: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RateBasedRulePredicateArgs {
        dataId: pulumi.Input<string>;
        negated: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
    }

    export interface RulePredicateArgs {
        dataId: pulumi.Input<string>;
        negated: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
    }

    export interface SizeConstraintSetFieldToMatchArgs {
        data?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface SizeConstraintSetSizeConstraintArgs {
        comparisonOperator: pulumi.Input<string>;
        fieldToMatch: pulumi.Input<inputs.wafregional.SizeConstraintSetFieldToMatchArgs>;
        size: pulumi.Input<number>;
        textTransformation: pulumi.Input<string>;
    }

    export interface SqlInjectionMatchSetFieldToMatchArgs {
        data?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface SqlInjectionMatchSetSqlInjectionMatchTupleArgs {
        fieldToMatch: pulumi.Input<inputs.wafregional.SqlInjectionMatchSetFieldToMatchArgs>;
        textTransformation: pulumi.Input<string>;
    }

    export interface WebACLActionArgs {
        type: pulumi.Input<string>;
    }

    export interface WebACLRuleArgs {
        action: pulumi.Input<inputs.wafregional.WebACLActionArgs>;
        priority: pulumi.Input<number>;
        ruleId: pulumi.Input<string>;
    }

    export interface XssMatchSetFieldToMatchArgs {
        data?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface XssMatchSetXssMatchTupleArgs {
        fieldToMatch: pulumi.Input<inputs.wafregional.XssMatchSetFieldToMatchArgs>;
        textTransformation: pulumi.Input<string>;
    }
}

export namespace wafv2 {
    export interface IPSetTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface LoggingConfigurationConditionArgs {
        /**
         * A single action condition.
         */
        actionCondition?: pulumi.Input<inputs.wafv2.LoggingConfigurationConditionActionConditionPropertiesArgs>;
        /**
         * A single label name condition.
         */
        labelNameCondition?: pulumi.Input<inputs.wafv2.LoggingConfigurationConditionLabelNameConditionPropertiesArgs>;
    }

    /**
     * A single action condition.
     */
    export interface LoggingConfigurationConditionActionConditionPropertiesArgs {
        /**
         * Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
         */
        action: pulumi.Input<enums.wafv2.LoggingConfigurationConditionActionConditionPropertiesAction>;
    }

    /**
     * A single label name condition.
     */
    export interface LoggingConfigurationConditionLabelNameConditionPropertiesArgs {
        /**
         * The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label. 
         */
        labelName: pulumi.Input<string>;
    }

    /**
     * A key-value pair to associate with a resource.
     */
    export interface LoggingConfigurationFieldToMatchArgs {
        /**
         * Inspect the request body as JSON. The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form. 
         */
        jsonBody?: pulumi.Input<inputs.wafv2.LoggingConfigurationFieldToMatchJsonBodyPropertiesArgs>;
        /**
         * Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform. 
         */
        method?: any;
        /**
         * Inspect the query string. This is the part of a URL that appears after a ? character, if any. 
         */
        queryString?: any;
        /**
         * Inspect a single header. Provide the name of the header to inspect, for example, User-Agent or Referer. This setting isn't case sensitive.
         */
        singleHeader?: pulumi.Input<inputs.wafv2.LoggingConfigurationFieldToMatchSingleHeaderPropertiesArgs>;
        /**
         * Inspect the request URI path. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg. 
         */
        uriPath?: any;
    }

    /**
     * Inspect the request body as JSON. The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form. 
     */
    export interface LoggingConfigurationFieldToMatchJsonBodyPropertiesArgs {
        /**
         * What AWS WAF should do if it fails to completely parse the JSON body.
         */
        invalidFallbackBehavior?: pulumi.Input<enums.wafv2.LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior>;
        /**
         * The patterns to look for in the JSON body. AWS WAF inspects the results of these pattern matches against the rule inspection criteria. 
         */
        matchPattern: pulumi.Input<inputs.wafv2.LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternPropertiesArgs>;
        /**
         * The parts of the JSON to match against using the MatchPattern. If you specify All, AWS WAF matches against keys and values. 
         */
        matchScope: pulumi.Input<enums.wafv2.LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope>;
    }

    /**
     * The patterns to look for in the JSON body. AWS WAF inspects the results of these pattern matches against the rule inspection criteria. 
     */
    export interface LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternPropertiesArgs {
        /**
         * Match all of the elements. See also MatchScope in JsonBody. You must specify either this setting or the IncludedPaths setting, but not both.
         */
        all?: any;
        /**
         * Match only the specified include paths. See also MatchScope in JsonBody.
         */
        includedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    }

    /**
     * Inspect a single header. Provide the name of the header to inspect, for example, User-Agent or Referer. This setting isn't case sensitive.
     */
    export interface LoggingConfigurationFieldToMatchSingleHeaderPropertiesArgs {
        /**
         * The name of the query header to inspect.
         */
        name: pulumi.Input<string>;
    }

    export interface LoggingConfigurationFilterArgs {
        /**
         * How to handle logs that satisfy the filter's conditions and requirement. 
         */
        behavior: pulumi.Input<enums.wafv2.LoggingConfigurationFilterBehavior>;
        /**
         * Match conditions for the filter.
         */
        conditions: pulumi.Input<pulumi.Input<inputs.wafv2.LoggingConfigurationConditionArgs>[]>;
        /**
         * Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
         */
        requirement: pulumi.Input<enums.wafv2.LoggingConfigurationFilterRequirement>;
    }

    /**
     * Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
     */
    export interface LoggingFilterPropertiesArgs {
        /**
         * Default handling for logs that don't match any of the specified filtering conditions.
         */
        defaultBehavior: pulumi.Input<enums.wafv2.LoggingConfigurationLoggingFilterPropertiesDefaultBehavior>;
        /**
         * The filters that you want to apply to the logs.
         */
        filters: pulumi.Input<pulumi.Input<inputs.wafv2.LoggingConfigurationFilterArgs>[]>;
    }

    export interface RegexPatternSetTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface RuleGroupAndStatementArgs {
        statements: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupStatementArgs>[]>;
    }

    /**
     * Byte Match statement.
     */
    export interface RuleGroupByteMatchStatementArgs {
        fieldToMatch: pulumi.Input<inputs.wafv2.RuleGroupFieldToMatchArgs>;
        positionalConstraint: pulumi.Input<enums.wafv2.RuleGroupPositionalConstraint>;
        searchString?: pulumi.Input<string>;
        searchStringBase64?: pulumi.Input<string>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupTextTransformationArgs>[]>;
    }

    export interface RuleGroupCaptchaConfigArgs {
        immunityTimeProperty?: pulumi.Input<inputs.wafv2.RuleGroupImmunityTimePropertyArgs>;
    }

    /**
     * HTTP header.
     */
    export interface RuleGroupCustomHTTPHeaderArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Custom request handling.
     */
    export interface RuleGroupCustomRequestHandlingArgs {
        /**
         * Collection of HTTP headers.
         */
        insertHeaders: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupCustomHTTPHeaderArgs>[]>;
    }

    /**
     * Custom response.
     */
    export interface RuleGroupCustomResponseArgs {
        /**
         * Custom response body key.
         */
        customResponseBodyKey?: pulumi.Input<string>;
        responseCode: pulumi.Input<number>;
        /**
         * Collection of HTTP headers.
         */
        responseHeaders?: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupCustomHTTPHeaderArgs>[]>;
    }

    /**
     * Custom response key and body map.
     */
    export interface RuleGroupCustomResponseBodiesArgs {
    }

    /**
     * Field of the request to match.
     */
    export interface RuleGroupFieldToMatchArgs {
        /**
         * All query arguments of a web request.
         */
        allQueryArguments?: any;
        /**
         * The body of a web request. This immediately follows the request headers.
         */
        body?: any;
        jsonBody?: pulumi.Input<inputs.wafv2.RuleGroupJsonBodyArgs>;
        /**
         * The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
         */
        method?: any;
        /**
         * The query string of a web request. This is the part of a URL that appears after a ? character, if any.
         */
        queryString?: any;
        singleHeader?: pulumi.Input<inputs.wafv2.RuleGroupFieldToMatchSingleHeaderPropertiesArgs>;
        /**
         * One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
         */
        singleQueryArgument?: pulumi.Input<inputs.wafv2.RuleGroupFieldToMatchSingleQueryArgumentPropertiesArgs>;
        /**
         * The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
         */
        uriPath?: any;
    }

    export interface RuleGroupFieldToMatchSingleHeaderPropertiesArgs {
        name: pulumi.Input<string>;
    }

    /**
     * One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
     */
    export interface RuleGroupFieldToMatchSingleQueryArgumentPropertiesArgs {
        name: pulumi.Input<string>;
    }

    export interface RuleGroupForwardedIPConfigurationArgs {
        fallbackBehavior: pulumi.Input<enums.wafv2.RuleGroupForwardedIPConfigurationFallbackBehavior>;
        headerName: pulumi.Input<string>;
    }

    export interface RuleGroupGeoMatchStatementArgs {
        countryCodes?: pulumi.Input<pulumi.Input<string>[]>;
        forwardedIPConfig?: pulumi.Input<inputs.wafv2.RuleGroupForwardedIPConfigurationArgs>;
    }

    export interface RuleGroupIPSetForwardedIPConfigurationArgs {
        fallbackBehavior: pulumi.Input<enums.wafv2.RuleGroupIPSetForwardedIPConfigurationFallbackBehavior>;
        headerName: pulumi.Input<string>;
        position: pulumi.Input<enums.wafv2.RuleGroupIPSetForwardedIPConfigurationPosition>;
    }

    export interface RuleGroupIPSetReferenceStatementArgs {
        arn: pulumi.Input<string>;
        iPSetForwardedIPConfig?: pulumi.Input<inputs.wafv2.RuleGroupIPSetForwardedIPConfigurationArgs>;
    }

    export interface RuleGroupImmunityTimePropertyArgs {
        immunityTime: pulumi.Input<number>;
    }

    /**
     * Inspect the request body as JSON. The request body immediately follows the request headers.
     */
    export interface RuleGroupJsonBodyArgs {
        invalidFallbackBehavior?: pulumi.Input<enums.wafv2.RuleGroupBodyParsingFallbackBehavior>;
        matchPattern: pulumi.Input<inputs.wafv2.RuleGroupJsonMatchPatternArgs>;
        matchScope: pulumi.Input<enums.wafv2.RuleGroupJsonMatchScope>;
    }

    /**
     * The pattern to look for in the JSON body.
     */
    export interface RuleGroupJsonMatchPatternArgs {
        /**
         * Inspect all parts of the web request's JSON body.
         */
        all?: any;
        includedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleGroupLabelArgs {
        name: pulumi.Input<string>;
    }

    export interface RuleGroupLabelMatchStatementArgs {
        key: pulumi.Input<string>;
        scope: pulumi.Input<enums.wafv2.RuleGroupLabelMatchScope>;
    }

    export interface RuleGroupNotStatementArgs {
        statement: pulumi.Input<inputs.wafv2.RuleGroupStatementArgs>;
    }

    export interface RuleGroupOrStatementArgs {
        statements: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupStatementArgs>[]>;
    }

    export interface RuleGroupRateBasedStatementArgs {
        aggregateKeyType: pulumi.Input<enums.wafv2.RuleGroupRateBasedStatementAggregateKeyType>;
        forwardedIPConfig?: pulumi.Input<inputs.wafv2.RuleGroupForwardedIPConfigurationArgs>;
        limit: pulumi.Input<number>;
        scopeDownStatement?: pulumi.Input<inputs.wafv2.RuleGroupStatementArgs>;
    }

    export interface RuleGroupRegexMatchStatementArgs {
        fieldToMatch: pulumi.Input<inputs.wafv2.RuleGroupFieldToMatchArgs>;
        regexString: pulumi.Input<string>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupTextTransformationArgs>[]>;
    }

    export interface RuleGroupRegexPatternSetReferenceStatementArgs {
        arn: pulumi.Input<string>;
        fieldToMatch: pulumi.Input<inputs.wafv2.RuleGroupFieldToMatchArgs>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupTextTransformationArgs>[]>;
    }

    /**
     * Rule of RuleGroup that contains condition and action.
     */
    export interface RuleGroupRuleArgs {
        action?: pulumi.Input<inputs.wafv2.RuleGroupRuleActionArgs>;
        captchaConfig?: pulumi.Input<inputs.wafv2.RuleGroupCaptchaConfigArgs>;
        name: pulumi.Input<string>;
        priority: pulumi.Input<number>;
        /**
         * Collection of Rule Labels.
         */
        ruleLabels?: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupLabelArgs>[]>;
        statement: pulumi.Input<inputs.wafv2.RuleGroupStatementArgs>;
        visibilityConfig: pulumi.Input<inputs.wafv2.RuleGroupVisibilityConfigArgs>;
    }

    /**
     * Action taken when Rule matches its condition.
     */
    export interface RuleGroupRuleActionArgs {
        /**
         * Allow traffic towards application.
         */
        allow?: pulumi.Input<inputs.wafv2.RuleGroupRuleActionAllowPropertiesArgs>;
        /**
         * Block traffic towards application.
         */
        block?: pulumi.Input<inputs.wafv2.RuleGroupRuleActionBlockPropertiesArgs>;
        /**
         * Checks valid token exists with request.
         */
        captcha?: pulumi.Input<inputs.wafv2.RuleGroupRuleActionCaptchaPropertiesArgs>;
        /**
         * Count traffic towards application.
         */
        count?: pulumi.Input<inputs.wafv2.RuleGroupRuleActionCountPropertiesArgs>;
    }

    /**
     * Allow traffic towards application.
     */
    export interface RuleGroupRuleActionAllowPropertiesArgs {
        customRequestHandling?: pulumi.Input<inputs.wafv2.RuleGroupCustomRequestHandlingArgs>;
    }

    /**
     * Block traffic towards application.
     */
    export interface RuleGroupRuleActionBlockPropertiesArgs {
        customResponse?: pulumi.Input<inputs.wafv2.RuleGroupCustomResponseArgs>;
    }

    /**
     * Checks valid token exists with request.
     */
    export interface RuleGroupRuleActionCaptchaPropertiesArgs {
        customRequestHandling?: pulumi.Input<inputs.wafv2.RuleGroupCustomRequestHandlingArgs>;
    }

    /**
     * Count traffic towards application.
     */
    export interface RuleGroupRuleActionCountPropertiesArgs {
        customRequestHandling?: pulumi.Input<inputs.wafv2.RuleGroupCustomRequestHandlingArgs>;
    }

    /**
     * Size Constraint statement.
     */
    export interface RuleGroupSizeConstraintStatementArgs {
        comparisonOperator: pulumi.Input<enums.wafv2.RuleGroupSizeConstraintStatementComparisonOperator>;
        fieldToMatch: pulumi.Input<inputs.wafv2.RuleGroupFieldToMatchArgs>;
        size: pulumi.Input<number>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupTextTransformationArgs>[]>;
    }

    /**
     * Sqli Match Statement.
     */
    export interface RuleGroupSqliMatchStatementArgs {
        fieldToMatch: pulumi.Input<inputs.wafv2.RuleGroupFieldToMatchArgs>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupTextTransformationArgs>[]>;
    }

    /**
     * First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
     */
    export interface RuleGroupStatementArgs {
        andStatement?: pulumi.Input<inputs.wafv2.RuleGroupAndStatementArgs>;
        byteMatchStatement?: pulumi.Input<inputs.wafv2.RuleGroupByteMatchStatementArgs>;
        geoMatchStatement?: pulumi.Input<inputs.wafv2.RuleGroupGeoMatchStatementArgs>;
        iPSetReferenceStatement?: pulumi.Input<inputs.wafv2.RuleGroupIPSetReferenceStatementArgs>;
        labelMatchStatement?: pulumi.Input<inputs.wafv2.RuleGroupLabelMatchStatementArgs>;
        notStatement?: pulumi.Input<inputs.wafv2.RuleGroupNotStatementArgs>;
        orStatement?: pulumi.Input<inputs.wafv2.RuleGroupOrStatementArgs>;
        rateBasedStatement?: pulumi.Input<inputs.wafv2.RuleGroupRateBasedStatementArgs>;
        regexMatchStatement?: pulumi.Input<inputs.wafv2.RuleGroupRegexMatchStatementArgs>;
        regexPatternSetReferenceStatement?: pulumi.Input<inputs.wafv2.RuleGroupRegexPatternSetReferenceStatementArgs>;
        sizeConstraintStatement?: pulumi.Input<inputs.wafv2.RuleGroupSizeConstraintStatementArgs>;
        sqliMatchStatement?: pulumi.Input<inputs.wafv2.RuleGroupSqliMatchStatementArgs>;
        xssMatchStatement?: pulumi.Input<inputs.wafv2.RuleGroupXssMatchStatementArgs>;
    }

    export interface RuleGroupTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * Text Transformation on the Search String before match.
     */
    export interface RuleGroupTextTransformationArgs {
        priority: pulumi.Input<number>;
        type: pulumi.Input<enums.wafv2.RuleGroupTextTransformationType>;
    }

    /**
     * Visibility Metric of the RuleGroup.
     */
    export interface RuleGroupVisibilityConfigArgs {
        cloudWatchMetricsEnabled: pulumi.Input<boolean>;
        metricName: pulumi.Input<string>;
        sampledRequestsEnabled: pulumi.Input<boolean>;
    }

    /**
     * Xss Match Statement.
     */
    export interface RuleGroupXssMatchStatementArgs {
        fieldToMatch: pulumi.Input<inputs.wafv2.RuleGroupFieldToMatchArgs>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.RuleGroupTextTransformationArgs>[]>;
    }

    /**
     * Allow traffic towards application.
     */
    export interface WebACLAllowActionArgs {
        customRequestHandling?: pulumi.Input<inputs.wafv2.WebACLCustomRequestHandlingArgs>;
    }

    export interface WebACLAndStatementArgs {
        statements: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLStatementArgs>[]>;
    }

    /**
     * Block traffic towards application.
     */
    export interface WebACLBlockActionArgs {
        customResponse?: pulumi.Input<inputs.wafv2.WebACLCustomResponseArgs>;
    }

    /**
     * Byte Match statement.
     */
    export interface WebACLByteMatchStatementArgs {
        fieldToMatch: pulumi.Input<inputs.wafv2.WebACLFieldToMatchArgs>;
        positionalConstraint: pulumi.Input<enums.wafv2.WebACLPositionalConstraint>;
        searchString?: pulumi.Input<string>;
        searchStringBase64?: pulumi.Input<string>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLTextTransformationArgs>[]>;
    }

    /**
     * Checks valid token exists with request.
     */
    export interface WebACLCaptchaActionArgs {
        customRequestHandling?: pulumi.Input<inputs.wafv2.WebACLCustomRequestHandlingArgs>;
    }

    export interface WebACLCaptchaConfigArgs {
        immunityTimeProperty?: pulumi.Input<inputs.wafv2.WebACLImmunityTimePropertyArgs>;
    }

    /**
     * Allow traffic towards application.
     */
    export interface WebACLCountActionArgs {
        customRequestHandling?: pulumi.Input<inputs.wafv2.WebACLCustomRequestHandlingArgs>;
    }

    /**
     * HTTP header.
     */
    export interface WebACLCustomHTTPHeaderArgs {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    /**
     * Custom request handling.
     */
    export interface WebACLCustomRequestHandlingArgs {
        /**
         * Collection of HTTP headers.
         */
        insertHeaders: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLCustomHTTPHeaderArgs>[]>;
    }

    /**
     * Custom response.
     */
    export interface WebACLCustomResponseArgs {
        /**
         * Custom response body key.
         */
        customResponseBodyKey?: pulumi.Input<string>;
        responseCode: pulumi.Input<number>;
        /**
         * Collection of HTTP headers.
         */
        responseHeaders?: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLCustomHTTPHeaderArgs>[]>;
    }

    /**
     * Custom response key and body map.
     */
    export interface WebACLCustomResponseBodiesArgs {
    }

    /**
     * Default Action WebACL will take against ingress traffic when there is no matching Rule.
     */
    export interface WebACLDefaultActionArgs {
        allow?: pulumi.Input<inputs.wafv2.WebACLAllowActionArgs>;
        block?: pulumi.Input<inputs.wafv2.WebACLBlockActionArgs>;
    }

    /**
     * Excluded Rule in the RuleGroup or ManagedRuleGroup will not be evaluated.
     */
    export interface WebACLExcludedRuleArgs {
        name: pulumi.Input<string>;
    }

    /**
     * Field of the request to match.
     */
    export interface WebACLFieldToMatchArgs {
        /**
         * All query arguments of a web request.
         */
        allQueryArguments?: any;
        /**
         * The body of a web request. This immediately follows the request headers.
         */
        body?: any;
        jsonBody?: pulumi.Input<inputs.wafv2.WebACLJsonBodyArgs>;
        /**
         * The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
         */
        method?: any;
        /**
         * The query string of a web request. This is the part of a URL that appears after a ? character, if any.
         */
        queryString?: any;
        singleHeader?: pulumi.Input<inputs.wafv2.WebACLFieldToMatchSingleHeaderPropertiesArgs>;
        /**
         * One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
         */
        singleQueryArgument?: pulumi.Input<inputs.wafv2.WebACLFieldToMatchSingleQueryArgumentPropertiesArgs>;
        /**
         * The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
         */
        uriPath?: any;
    }

    export interface WebACLFieldToMatchSingleHeaderPropertiesArgs {
        name: pulumi.Input<string>;
    }

    /**
     * One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
     */
    export interface WebACLFieldToMatchSingleQueryArgumentPropertiesArgs {
        name: pulumi.Input<string>;
    }

    export interface WebACLForwardedIPConfigurationArgs {
        fallbackBehavior: pulumi.Input<enums.wafv2.WebACLForwardedIPConfigurationFallbackBehavior>;
        headerName: pulumi.Input<string>;
    }

    export interface WebACLGeoMatchStatementArgs {
        countryCodes?: pulumi.Input<pulumi.Input<string>[]>;
        forwardedIPConfig?: pulumi.Input<inputs.wafv2.WebACLForwardedIPConfigurationArgs>;
    }

    export interface WebACLIPSetForwardedIPConfigurationArgs {
        fallbackBehavior: pulumi.Input<enums.wafv2.WebACLIPSetForwardedIPConfigurationFallbackBehavior>;
        headerName: pulumi.Input<string>;
        position: pulumi.Input<enums.wafv2.WebACLIPSetForwardedIPConfigurationPosition>;
    }

    export interface WebACLIPSetReferenceStatementArgs {
        arn: pulumi.Input<string>;
        iPSetForwardedIPConfig?: pulumi.Input<inputs.wafv2.WebACLIPSetForwardedIPConfigurationArgs>;
    }

    export interface WebACLImmunityTimePropertyArgs {
        immunityTime: pulumi.Input<number>;
    }

    /**
     * Inspect the request body as JSON. The request body immediately follows the request headers.
     */
    export interface WebACLJsonBodyArgs {
        invalidFallbackBehavior?: pulumi.Input<enums.wafv2.WebACLBodyParsingFallbackBehavior>;
        matchPattern: pulumi.Input<inputs.wafv2.WebACLJsonMatchPatternArgs>;
        matchScope: pulumi.Input<enums.wafv2.WebACLJsonMatchScope>;
    }

    /**
     * The pattern to look for in the JSON body.
     */
    export interface WebACLJsonMatchPatternArgs {
        /**
         * Inspect all parts of the web request's JSON body.
         */
        all?: any;
        includedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface WebACLLabelArgs {
        name: pulumi.Input<string>;
    }

    export interface WebACLLabelMatchStatementArgs {
        key: pulumi.Input<string>;
        scope: pulumi.Input<enums.wafv2.WebACLLabelMatchScope>;
    }

    export interface WebACLManagedRuleGroupStatementArgs {
        excludedRules?: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLExcludedRuleArgs>[]>;
        name: pulumi.Input<string>;
        scopeDownStatement?: pulumi.Input<inputs.wafv2.WebACLStatementArgs>;
        vendorName: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface WebACLNotStatementArgs {
        statement: pulumi.Input<inputs.wafv2.WebACLStatementArgs>;
    }

    export interface WebACLOrStatementArgs {
        statements: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLStatementArgs>[]>;
    }

    /**
     * Override a RuleGroup or ManagedRuleGroup behavior. This can only be applied to Rule that has RuleGroupReferenceStatement or ManagedRuleGroupReferenceStatement.
     */
    export interface WebACLOverrideActionArgs {
        /**
         * Count traffic towards application.
         */
        count?: any;
        /**
         * Keep the RuleGroup or ManagedRuleGroup behavior as is.
         */
        none?: any;
    }

    export interface WebACLRateBasedStatementArgs {
        aggregateKeyType: pulumi.Input<enums.wafv2.WebACLRateBasedStatementAggregateKeyType>;
        forwardedIPConfig?: pulumi.Input<inputs.wafv2.WebACLForwardedIPConfigurationArgs>;
        limit: pulumi.Input<number>;
        scopeDownStatement?: pulumi.Input<inputs.wafv2.WebACLStatementArgs>;
    }

    export interface WebACLRegexMatchStatementArgs {
        fieldToMatch: pulumi.Input<inputs.wafv2.WebACLFieldToMatchArgs>;
        regexString: pulumi.Input<string>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLTextTransformationArgs>[]>;
    }

    export interface WebACLRegexPatternSetReferenceStatementArgs {
        arn: pulumi.Input<string>;
        fieldToMatch: pulumi.Input<inputs.wafv2.WebACLFieldToMatchArgs>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLTextTransformationArgs>[]>;
    }

    /**
     * Rule of WebACL that contains condition and action.
     */
    export interface WebACLRuleArgs {
        action?: pulumi.Input<inputs.wafv2.WebACLRuleActionArgs>;
        captchaConfig?: pulumi.Input<inputs.wafv2.WebACLCaptchaConfigArgs>;
        name: pulumi.Input<string>;
        overrideAction?: pulumi.Input<inputs.wafv2.WebACLOverrideActionArgs>;
        priority: pulumi.Input<number>;
        /**
         * Collection of Rule Labels.
         */
        ruleLabels?: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLLabelArgs>[]>;
        statement: pulumi.Input<inputs.wafv2.WebACLStatementArgs>;
        visibilityConfig: pulumi.Input<inputs.wafv2.WebACLVisibilityConfigArgs>;
    }

    /**
     * Action taken when Rule matches its condition.
     */
    export interface WebACLRuleActionArgs {
        allow?: pulumi.Input<inputs.wafv2.WebACLAllowActionArgs>;
        block?: pulumi.Input<inputs.wafv2.WebACLBlockActionArgs>;
        captcha?: pulumi.Input<inputs.wafv2.WebACLCaptchaActionArgs>;
        count?: pulumi.Input<inputs.wafv2.WebACLCountActionArgs>;
    }

    export interface WebACLRuleGroupReferenceStatementArgs {
        arn: pulumi.Input<string>;
        excludedRules?: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLExcludedRuleArgs>[]>;
    }

    /**
     * Size Constraint statement.
     */
    export interface WebACLSizeConstraintStatementArgs {
        comparisonOperator: pulumi.Input<enums.wafv2.WebACLSizeConstraintStatementComparisonOperator>;
        fieldToMatch: pulumi.Input<inputs.wafv2.WebACLFieldToMatchArgs>;
        size: pulumi.Input<number>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLTextTransformationArgs>[]>;
    }

    /**
     * Sqli Match Statement.
     */
    export interface WebACLSqliMatchStatementArgs {
        fieldToMatch: pulumi.Input<inputs.wafv2.WebACLFieldToMatchArgs>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLTextTransformationArgs>[]>;
    }

    /**
     * First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
     */
    export interface WebACLStatementArgs {
        andStatement?: pulumi.Input<inputs.wafv2.WebACLAndStatementArgs>;
        byteMatchStatement?: pulumi.Input<inputs.wafv2.WebACLByteMatchStatementArgs>;
        geoMatchStatement?: pulumi.Input<inputs.wafv2.WebACLGeoMatchStatementArgs>;
        iPSetReferenceStatement?: pulumi.Input<inputs.wafv2.WebACLIPSetReferenceStatementArgs>;
        labelMatchStatement?: pulumi.Input<inputs.wafv2.WebACLLabelMatchStatementArgs>;
        managedRuleGroupStatement?: pulumi.Input<inputs.wafv2.WebACLManagedRuleGroupStatementArgs>;
        notStatement?: pulumi.Input<inputs.wafv2.WebACLNotStatementArgs>;
        orStatement?: pulumi.Input<inputs.wafv2.WebACLOrStatementArgs>;
        rateBasedStatement?: pulumi.Input<inputs.wafv2.WebACLRateBasedStatementArgs>;
        regexMatchStatement?: pulumi.Input<inputs.wafv2.WebACLRegexMatchStatementArgs>;
        regexPatternSetReferenceStatement?: pulumi.Input<inputs.wafv2.WebACLRegexPatternSetReferenceStatementArgs>;
        ruleGroupReferenceStatement?: pulumi.Input<inputs.wafv2.WebACLRuleGroupReferenceStatementArgs>;
        sizeConstraintStatement?: pulumi.Input<inputs.wafv2.WebACLSizeConstraintStatementArgs>;
        sqliMatchStatement?: pulumi.Input<inputs.wafv2.WebACLSqliMatchStatementArgs>;
        xssMatchStatement?: pulumi.Input<inputs.wafv2.WebACLXssMatchStatementArgs>;
    }

    export interface WebACLTagArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    /**
     * Text Transformation on the Search String before match.
     */
    export interface WebACLTextTransformationArgs {
        priority: pulumi.Input<number>;
        type: pulumi.Input<enums.wafv2.WebACLTextTransformationType>;
    }

    /**
     * Visibility Metric of the WebACL.
     */
    export interface WebACLVisibilityConfigArgs {
        cloudWatchMetricsEnabled: pulumi.Input<boolean>;
        metricName: pulumi.Input<string>;
        sampledRequestsEnabled: pulumi.Input<boolean>;
    }

    /**
     * Xss Match Statement.
     */
    export interface WebACLXssMatchStatementArgs {
        fieldToMatch: pulumi.Input<inputs.wafv2.WebACLFieldToMatchArgs>;
        textTransformations: pulumi.Input<pulumi.Input<inputs.wafv2.WebACLTextTransformationArgs>[]>;
    }
}

export namespace wisdom {
    export interface AssistantAssociationAssociationDataArgs {
        knowledgeBaseId: pulumi.Input<string>;
    }

    export interface AssistantAssociationTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface AssistantServerSideEncryptionConfigurationArgs {
        kmsKeyId?: pulumi.Input<string>;
    }

    export interface AssistantTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface KnowledgeBaseAppIntegrationsConfigurationArgs {
        appIntegrationArn: pulumi.Input<string>;
        objectFields: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface KnowledgeBaseRenderingConfigurationArgs {
        templateUri?: pulumi.Input<string>;
    }

    export interface KnowledgeBaseServerSideEncryptionConfigurationArgs {
        kmsKeyId?: pulumi.Input<string>;
    }

    export interface KnowledgeBaseSourceConfigurationArgs {
        appIntegrations?: pulumi.Input<inputs.wisdom.KnowledgeBaseAppIntegrationsConfigurationArgs>;
    }

    export interface KnowledgeBaseTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace workspaces {
    export interface ConnectionAliasTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface WorkspacePropertiesArgs {
        computeTypeName?: pulumi.Input<string>;
        rootVolumeSizeGib?: pulumi.Input<number>;
        runningMode?: pulumi.Input<string>;
        runningModeAutoStopTimeoutInMinutes?: pulumi.Input<number>;
        userVolumeSizeGib?: pulumi.Input<number>;
    }

    export interface WorkspaceTagArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace xray {
    export interface GroupInsightsConfigurationArgs {
        /**
         * Set the InsightsEnabled value to true to enable insights or false to disable insights.
         */
        insightsEnabled?: pulumi.Input<boolean>;
        /**
         * Set the NotificationsEnabled value to true to enable insights notifications. Notifications can only be enabled on a group with InsightsEnabled set to true.
         */
        notificationsEnabled?: pulumi.Input<boolean>;
    }

    export interface SamplingRuleArgs {
        /**
         * Matches attributes derived from the request.
         */
        attributes?: any;
        /**
         * The percentage of matching requests to instrument, after the reservoir is exhausted.
         */
        fixedRate?: pulumi.Input<number>;
        /**
         * Matches the HTTP method from a request URL.
         */
        hTTPMethod?: pulumi.Input<string>;
        /**
         * Matches the hostname from a request URL.
         */
        host?: pulumi.Input<string>;
        /**
         * The priority of the sampling rule.
         */
        priority?: pulumi.Input<number>;
        /**
         * A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.
         */
        reservoirSize?: pulumi.Input<number>;
        /**
         * Matches the ARN of the AWS resource on which the service runs.
         */
        resourceARN?: pulumi.Input<string>;
        ruleARN?: pulumi.Input<string>;
        ruleName?: pulumi.Input<string>;
        /**
         * Matches the name that the service uses to identify itself in segments.
         */
        serviceName?: pulumi.Input<string>;
        /**
         * Matches the origin that the service uses to identify its type in segments.
         */
        serviceType?: pulumi.Input<string>;
        /**
         * Matches the path from a request URL.
         */
        uRLPath?: pulumi.Input<string>;
        /**
         * The version of the sampling rule format (1)
         */
        version?: pulumi.Input<number>;
    }

    export interface SamplingRuleRecordArgs {
        /**
         * When the rule was created, in Unix time seconds.
         */
        createdAt?: pulumi.Input<string>;
        /**
         * When the rule was modified, in Unix time seconds.
         */
        modifiedAt?: pulumi.Input<string>;
        samplingRule?: pulumi.Input<inputs.xray.SamplingRuleArgs>;
    }

    export interface SamplingRuleUpdateArgs {
        /**
         * Matches attributes derived from the request.
         */
        attributes?: any;
        /**
         * The percentage of matching requests to instrument, after the reservoir is exhausted.
         */
        fixedRate?: pulumi.Input<number>;
        /**
         * Matches the HTTP method from a request URL.
         */
        hTTPMethod?: pulumi.Input<string>;
        /**
         * Matches the hostname from a request URL.
         */
        host?: pulumi.Input<string>;
        /**
         * The priority of the sampling rule.
         */
        priority?: pulumi.Input<number>;
        /**
         * A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.
         */
        reservoirSize?: pulumi.Input<number>;
        /**
         * Matches the ARN of the AWS resource on which the service runs.
         */
        resourceARN?: pulumi.Input<string>;
        ruleARN?: pulumi.Input<string>;
        ruleName?: pulumi.Input<string>;
        /**
         * Matches the name that the service uses to identify itself in segments.
         */
        serviceName?: pulumi.Input<string>;
        /**
         * Matches the origin that the service uses to identify its type in segments.
         */
        serviceType?: pulumi.Input<string>;
        /**
         * Matches the path from a request URL.
         */
        uRLPath?: pulumi.Input<string>;
    }

    export interface TagsItemPropertiesArgs {
        key: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}
