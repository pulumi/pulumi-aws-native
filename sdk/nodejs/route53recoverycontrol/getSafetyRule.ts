// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS Route53 Recovery Control basic constructs and validation rules.
 */
export function getSafetyRule(args: GetSafetyRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetSafetyRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:route53recoverycontrol:getSafetyRule", {
        "safetyRuleArn": args.safetyRuleArn,
    }, opts);
}

export interface GetSafetyRuleArgs {
    /**
     * The Amazon Resource Name (ARN) of the safety rule.
     */
    safetyRuleArn: string;
}

export interface GetSafetyRuleResult {
    /**
     * An assertion rule enforces that, when you change a routing control state, that the criteria that you set in the rule configuration is met. Otherwise, the change to the routing control is not accepted. For example, the criteria might be that at least one routing control state is `On` after the transaction so that traffic continues to flow to at least one cell for the application. This ensures that you avoid a fail-open scenario.
     */
    readonly assertionRule?: outputs.route53recoverycontrol.SafetyRuleAssertionRule;
    /**
     * The Amazon Resource Name (ARN) of the control panel.
     */
    readonly controlPanelArn?: string;
    /**
     * A gating rule verifies that a gating routing control or set of gating routing controls, evaluates as true, based on a rule configuration that you specify, which allows a set of routing control state changes to complete.
     *
     * For example, if you specify one gating routing control and you set the `Type` in the rule configuration to `OR` , that indicates that you must set the gating routing control to `On` for the rule to evaluate as true; that is, for the gating control switch to be On. When you do that, then you can update the routing control states for the target routing controls that you specify in the gating rule.
     */
    readonly gatingRule?: outputs.route53recoverycontrol.SafetyRuleGatingRule;
    /**
     * The name of the assertion rule. The name must be unique within a control panel. You can use any non-white space character in the name except the following: & > < ' (single quote) " (double quote) ; (semicolon)
     */
    readonly name?: string;
    /**
     * The criteria that you set for specific assertion controls (routing controls) that designate how many control states must be `ON` as the result of a transaction. For example, if you have three assertion controls, you might specify `ATLEAST 2` for your rule configuration. This means that at least two assertion controls must be `ON` , so that at least two AWS Regions have traffic flowing to them.
     */
    readonly ruleConfig?: outputs.route53recoverycontrol.SafetyRuleRuleConfig;
    /**
     * The Amazon Resource Name (ARN) of the safety rule.
     */
    readonly safetyRuleArn?: string;
    /**
     * The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     */
    readonly status?: enums.route53recoverycontrol.SafetyRuleStatus;
    /**
     * A collection of tags associated with a resource
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource schema for AWS Route53 Recovery Control basic constructs and validation rules.
 */
export function getSafetyRuleOutput(args: GetSafetyRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSafetyRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:route53recoverycontrol:getSafetyRule", {
        "safetyRuleArn": args.safetyRuleArn,
    }, opts);
}

export interface GetSafetyRuleOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the safety rule.
     */
    safetyRuleArn: pulumi.Input<string>;
}
