// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * AWS Route53 Recovery Control Routing Control resource schema .
 */
export function getRoutingControl(args: GetRoutingControlArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutingControlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:route53recoverycontrol:getRoutingControl", {
        "routingControlArn": args.routingControlArn,
    }, opts);
}

export interface GetRoutingControlArgs {
    /**
     * The Amazon Resource Name (ARN) of the routing control.
     */
    routingControlArn: string;
}

export interface GetRoutingControlResult {
    /**
     * The name of the routing control. You can use any non-white space character in the name.
     */
    readonly name?: string;
    /**
     * The Amazon Resource Name (ARN) of the routing control.
     */
    readonly routingControlArn?: string;
    /**
     * The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     */
    readonly status?: enums.route53recoverycontrol.RoutingControlStatus;
}
/**
 * AWS Route53 Recovery Control Routing Control resource schema .
 */
export function getRoutingControlOutput(args: GetRoutingControlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoutingControlResult> {
    return pulumi.output(args).apply((a: any) => getRoutingControl(a, opts))
}

export interface GetRoutingControlOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the routing control.
     */
    routingControlArn: pulumi.Input<string>;
}
