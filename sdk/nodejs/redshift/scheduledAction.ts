// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * The `AWS::Redshift::ScheduledAction` resource creates an Amazon Redshift Scheduled Action.
 */
export class ScheduledAction extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScheduledAction {
        return new ScheduledAction(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:redshift:ScheduledAction';

    /**
     * Returns true if the given object is an instance of ScheduledAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScheduledAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScheduledAction.__pulumiType;
    }

    /**
     * If true, the schedule is enabled. If false, the scheduled action does not trigger.
     */
    public readonly enable!: pulumi.Output<boolean | undefined>;
    /**
     * The end time in UTC of the scheduled action. After this time, the scheduled action does not trigger.
     */
    public readonly endTime!: pulumi.Output<string | undefined>;
    /**
     * The IAM role to assume to run the target action.
     */
    public readonly iamRole!: pulumi.Output<string | undefined>;
    /**
     * List of times when the scheduled action will run.
     */
    public /*out*/ readonly nextInvocations!: pulumi.Output<string[]>;
    /**
     * The schedule in `at( )` or `cron( )` format.
     */
    public readonly schedule!: pulumi.Output<string | undefined>;
    /**
     * The description of the scheduled action.
     */
    public readonly scheduledActionDescription!: pulumi.Output<string | undefined>;
    /**
     * The name of the scheduled action. The name must be unique within an account.
     */
    public readonly scheduledActionName!: pulumi.Output<string>;
    /**
     * The start time in UTC of the scheduled action. Before this time, the scheduled action does not trigger.
     */
    public readonly startTime!: pulumi.Output<string | undefined>;
    /**
     * The state of the scheduled action.
     */
    public /*out*/ readonly state!: pulumi.Output<enums.redshift.ScheduledActionState>;
    /**
     * A JSON format string of the Amazon Redshift API operation with input parameters.
     */
    public readonly targetAction!: pulumi.Output<outputs.redshift.ScheduledActionType | undefined>;

    /**
     * Create a ScheduledAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ScheduledActionArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["enable"] = args ? args.enable : undefined;
            inputs["endTime"] = args ? args.endTime : undefined;
            inputs["iamRole"] = args ? args.iamRole : undefined;
            inputs["schedule"] = args ? args.schedule : undefined;
            inputs["scheduledActionDescription"] = args ? args.scheduledActionDescription : undefined;
            inputs["scheduledActionName"] = args ? args.scheduledActionName : undefined;
            inputs["startTime"] = args ? args.startTime : undefined;
            inputs["targetAction"] = args ? args.targetAction : undefined;
            inputs["nextInvocations"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
        } else {
            inputs["enable"] = undefined /*out*/;
            inputs["endTime"] = undefined /*out*/;
            inputs["iamRole"] = undefined /*out*/;
            inputs["nextInvocations"] = undefined /*out*/;
            inputs["schedule"] = undefined /*out*/;
            inputs["scheduledActionDescription"] = undefined /*out*/;
            inputs["scheduledActionName"] = undefined /*out*/;
            inputs["startTime"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["targetAction"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ScheduledAction.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ScheduledAction resource.
 */
export interface ScheduledActionArgs {
    /**
     * If true, the schedule is enabled. If false, the scheduled action does not trigger.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * The end time in UTC of the scheduled action. After this time, the scheduled action does not trigger.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The IAM role to assume to run the target action.
     */
    iamRole?: pulumi.Input<string>;
    /**
     * The schedule in `at( )` or `cron( )` format.
     */
    schedule?: pulumi.Input<string>;
    /**
     * The description of the scheduled action.
     */
    scheduledActionDescription?: pulumi.Input<string>;
    /**
     * The name of the scheduled action. The name must be unique within an account.
     */
    scheduledActionName?: pulumi.Input<string>;
    /**
     * The start time in UTC of the scheduled action. Before this time, the scheduled action does not trigger.
     */
    startTime?: pulumi.Input<string>;
    /**
     * A JSON format string of the Amazon Redshift API operation with input parameters.
     */
    targetAction?: pulumi.Input<inputs.redshift.ScheduledActionTypeArgs>;
}
