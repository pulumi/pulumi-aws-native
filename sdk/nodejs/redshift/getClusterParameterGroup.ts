// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Redshift::ClusterParameterGroup
 */
export function getClusterParameterGroup(args: GetClusterParameterGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterParameterGroupResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:redshift:getClusterParameterGroup", {
        "parameterGroupName": args.parameterGroupName,
    }, opts);
}

export interface GetClusterParameterGroupArgs {
    /**
     * Cloudformation will generate a unique group name.
     */
    parameterGroupName: string;
}

export interface GetClusterParameterGroupResult {
    /**
     * Cloudformation will generate a unique group name.
     */
    readonly parameterGroupName?: string;
    readonly tags?: outputs.redshift.ClusterParameterGroupTag[];
}

export function getClusterParameterGroupOutput(args: GetClusterParameterGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterParameterGroupResult> {
    return pulumi.output(args).apply(a => getClusterParameterGroup(a, opts))
}

export interface GetClusterParameterGroupOutputArgs {
    /**
     * Cloudformation will generate a unique group name.
     */
    parameterGroupName: pulumi.Input<string>;
}
