// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Redshift::ClusterParameterGroup
 */
export function getClusterParameterGroup(args: GetClusterParameterGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterParameterGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:redshift:getClusterParameterGroup", {
        "parameterGroupName": args.parameterGroupName,
    }, opts);
}

export interface GetClusterParameterGroupArgs {
    /**
     * The name of the cluster parameter group.
     */
    parameterGroupName: string;
}

export interface GetClusterParameterGroupResult {
    /**
     * The name of the cluster parameter group.
     */
    readonly parameterGroupName?: string;
    /**
     * An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.
     */
    readonly parameters?: outputs.redshift.ClusterParameterGroupParameter[];
}
/**
 * Resource Type definition for AWS::Redshift::ClusterParameterGroup
 */
export function getClusterParameterGroupOutput(args: GetClusterParameterGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterParameterGroupResult> {
    return pulumi.output(args).apply((a: any) => getClusterParameterGroup(a, opts))
}

export interface GetClusterParameterGroupOutputArgs {
    /**
     * The name of the cluster parameter group.
     */
    parameterGroupName: pulumi.Input<string>;
}
