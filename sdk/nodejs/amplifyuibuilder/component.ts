// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::AmplifyUIBuilder::Component Resource Type
 */
export class Component extends pulumi.CustomResource {
    /**
     * Get an existing Component resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Component {
        return new Component(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:amplifyuibuilder:Component';

    /**
     * Returns true if the given object is an instance of Component.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Component {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Component.__pulumiType;
    }

    /**
     * The unique ID of the Amplify app associated with the component.
     */
    public readonly appId!: pulumi.Output<string | undefined>;
    /**
     * The unique ID of the component.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * The information to connect a component's properties to data at runtime. You can't specify `tags` as a valid property for `bindingProperties` .
     */
    public readonly bindingProperties!: pulumi.Output<{[key: string]: outputs.amplifyuibuilder.ComponentBindingPropertiesValue} | undefined>;
    /**
     * A list of the component's `ComponentChild` instances.
     */
    public readonly children!: pulumi.Output<outputs.amplifyuibuilder.ComponentChild[] | undefined>;
    /**
     * The data binding configuration for the component's properties. Use this for a collection component. You can't specify `tags` as a valid property for `collectionProperties` .
     */
    public readonly collectionProperties!: pulumi.Output<{[key: string]: outputs.amplifyuibuilder.ComponentDataConfiguration} | undefined>;
    /**
     * The type of the component. This can be an Amplify custom UI component or another custom component.
     */
    public readonly componentType!: pulumi.Output<string | undefined>;
    /**
     * The time that the component was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The name of the backend environment that is a part of the Amplify app.
     */
    public readonly environmentName!: pulumi.Output<string | undefined>;
    /**
     * Describes the events that can be raised on the component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components.
     */
    public readonly events!: pulumi.Output<{[key: string]: outputs.amplifyuibuilder.ComponentEvent} | undefined>;
    /**
     * The time that the component was modified.
     */
    public /*out*/ readonly modifiedAt!: pulumi.Output<string>;
    /**
     * The name of the component.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Describes the component's properties that can be overriden in a customized instance of the component. You can't specify `tags` as a valid property for `overrides` .
     */
    public readonly overrides!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Describes the component's properties. You can't specify `tags` as a valid property for `properties` .
     */
    public readonly properties!: pulumi.Output<{[key: string]: outputs.amplifyuibuilder.ComponentProperty} | undefined>;
    /**
     * The schema version of the component when it was imported.
     */
    public readonly schemaVersion!: pulumi.Output<string | undefined>;
    /**
     * The unique ID of the component in its original source system, such as Figma.
     */
    public readonly sourceId!: pulumi.Output<string | undefined>;
    /**
     * One or more key-value pairs to use when tagging the component.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A list of the component's variants. A variant is a unique style configuration of a main component.
     */
    public readonly variants!: pulumi.Output<outputs.amplifyuibuilder.ComponentVariant[] | undefined>;

    /**
     * Create a Component resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ComponentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["bindingProperties"] = args ? args.bindingProperties : undefined;
            resourceInputs["children"] = args ? args.children : undefined;
            resourceInputs["collectionProperties"] = args ? args.collectionProperties : undefined;
            resourceInputs["componentType"] = args ? args.componentType : undefined;
            resourceInputs["environmentName"] = args ? args.environmentName : undefined;
            resourceInputs["events"] = args ? args.events : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overrides"] = args ? args.overrides : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["schemaVersion"] = args ? args.schemaVersion : undefined;
            resourceInputs["sourceId"] = args ? args.sourceId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["variants"] = args ? args.variants : undefined;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["modifiedAt"] = undefined /*out*/;
        } else {
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["bindingProperties"] = undefined /*out*/;
            resourceInputs["children"] = undefined /*out*/;
            resourceInputs["collectionProperties"] = undefined /*out*/;
            resourceInputs["componentType"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["environmentName"] = undefined /*out*/;
            resourceInputs["events"] = undefined /*out*/;
            resourceInputs["modifiedAt"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["overrides"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["schemaVersion"] = undefined /*out*/;
            resourceInputs["sourceId"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["variants"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["appId", "environmentName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Component.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Component resource.
 */
export interface ComponentArgs {
    /**
     * The unique ID of the Amplify app associated with the component.
     */
    appId?: pulumi.Input<string>;
    /**
     * The information to connect a component's properties to data at runtime. You can't specify `tags` as a valid property for `bindingProperties` .
     */
    bindingProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.amplifyuibuilder.ComponentBindingPropertiesValueArgs>}>;
    /**
     * A list of the component's `ComponentChild` instances.
     */
    children?: pulumi.Input<pulumi.Input<inputs.amplifyuibuilder.ComponentChildArgs>[]>;
    /**
     * The data binding configuration for the component's properties. Use this for a collection component. You can't specify `tags` as a valid property for `collectionProperties` .
     */
    collectionProperties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.amplifyuibuilder.ComponentDataConfigurationArgs>}>;
    /**
     * The type of the component. This can be an Amplify custom UI component or another custom component.
     */
    componentType?: pulumi.Input<string>;
    /**
     * The name of the backend environment that is a part of the Amplify app.
     */
    environmentName?: pulumi.Input<string>;
    /**
     * Describes the events that can be raised on the component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components.
     */
    events?: pulumi.Input<{[key: string]: pulumi.Input<inputs.amplifyuibuilder.ComponentEventArgs>}>;
    /**
     * The name of the component.
     */
    name?: pulumi.Input<string>;
    /**
     * Describes the component's properties that can be overriden in a customized instance of the component. You can't specify `tags` as a valid property for `overrides` .
     */
    overrides?: pulumi.Input<{[key: string]: any}>;
    /**
     * Describes the component's properties. You can't specify `tags` as a valid property for `properties` .
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.amplifyuibuilder.ComponentPropertyArgs>}>;
    /**
     * The schema version of the component when it was imported.
     */
    schemaVersion?: pulumi.Input<string>;
    /**
     * The unique ID of the component in its original source system, such as Figma.
     */
    sourceId?: pulumi.Input<string>;
    /**
     * One or more key-value pairs to use when tagging the component.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of the component's variants. A variant is a unique style configuration of a main component.
     */
    variants?: pulumi.Input<pulumi.Input<inputs.amplifyuibuilder.ComponentVariantArgs>[]>;
}
