// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Events::ApiDestination.
 */
export function getApiDestination(args: GetApiDestinationArgs, opts?: pulumi.InvokeOptions): Promise<GetApiDestinationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:events:getApiDestination", {
        "name": args.name,
    }, opts);
}

export interface GetApiDestinationArgs {
    /**
     * Name of the apiDestination.
     */
    name: string;
}

export interface GetApiDestinationResult {
    /**
     * The arn of the api destination.
     */
    readonly arn?: string;
    /**
     * The arn of the connection.
     */
    readonly connectionArn?: string;
    readonly description?: string;
    readonly httpMethod?: enums.events.ApiDestinationHttpMethod;
    /**
     * Url endpoint to invoke.
     */
    readonly invocationEndpoint?: string;
    readonly invocationRateLimitPerSecond?: number;
}

export function getApiDestinationOutput(args: GetApiDestinationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiDestinationResult> {
    return pulumi.output(args).apply(a => getApiDestination(a, opts))
}

export interface GetApiDestinationOutputArgs {
    /**
     * Name of the apiDestination.
     */
    name: pulumi.Input<string>;
}
