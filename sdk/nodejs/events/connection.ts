// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Events::Connection.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const config = new pulumi.Config();
 * const pagerDutyAPIKeyParam = config.require("pagerDutyAPIKeyParam");
 * const myConnection = new aws_native.events.Connection("myConnection", {
 *     authorizationType: aws_native.events.ConnectionAuthorizationType.ApiKey,
 *     description: "Connection to PagerDuty API",
 *     authParameters: {
 *         apiKeyAuthParameters: {
 *             apiKeyName: "PagerDuty Authorization",
 *             apiKeyValue: pagerDutyAPIKeyParam,
 *         },
 *     },
 * });
 * const myApiDestination = new aws_native.events.ApiDestination("myApiDestination", {
 *     connectionArn: myConnection.arn,
 *     description: "API Destination to send events to PagerDuty",
 *     httpMethod: aws_native.events.ApiDestinationHttpMethod.Post,
 *     invocationEndpoint: "https://events.pagerduty.com/v2/enqueue",
 * });
 *
 * ```
 */
export class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connection {
        return new Connection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:events:Connection';

    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connection.__pulumiType;
    }

    /**
     * The arn of the connection resource.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The arn of the connection resource to be used in IAM policies.
     */
    public /*out*/ readonly arnForPolicy!: pulumi.Output<string>;
    /**
     * The authorization parameters to use to authorize with the endpoint.
     *
     * You must include only authorization parameters for the `AuthorizationType` you specify.
     */
    public readonly authParameters!: pulumi.Output<outputs.events.ConnectionAuthParameters | undefined>;
    /**
     * The type of authorization to use for the connection.
     *
     * > OAUTH tokens are refreshed when a 401 or 407 response is returned.
     */
    public readonly authorizationType!: pulumi.Output<enums.events.ConnectionAuthorizationType | undefined>;
    /**
     * Description of the connection.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The private resource the HTTP request will be sent to.
     */
    public readonly invocationConnectivityParameters!: pulumi.Output<outputs.events.InvocationConnectivityParametersProperties | undefined>;
    /**
     * The identifier of the AWS KMS customer managed key for EventBridge to use, if you choose to use a customer managed key to encrypt this connection. The identifier can be the key Amazon Resource Name (ARN), KeyId, key alias, or key alias ARN.
     *
     * If you do not specify a customer managed key identifier, EventBridge uses an AWS owned key to encrypt the connection.
     *
     * For more information, see [Identify and view keys](https://docs.aws.amazon.com/kms/latest/developerguide/viewing-keys.html) in the *AWS Key Management Service Developer Guide* .
     */
    public readonly kmsKeyIdentifier!: pulumi.Output<string | undefined>;
    /**
     * Name of the connection.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The arn of the secrets manager secret created in the customer account.
     */
    public /*out*/ readonly secretArn!: pulumi.Output<string>;

    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConnectionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["authParameters"] = args ? args.authParameters : undefined;
            resourceInputs["authorizationType"] = args ? args.authorizationType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["invocationConnectivityParameters"] = args ? args.invocationConnectivityParameters : undefined;
            resourceInputs["kmsKeyIdentifier"] = args ? args.kmsKeyIdentifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["arnForPolicy"] = undefined /*out*/;
            resourceInputs["secretArn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["arnForPolicy"] = undefined /*out*/;
            resourceInputs["authParameters"] = undefined /*out*/;
            resourceInputs["authorizationType"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["invocationConnectivityParameters"] = undefined /*out*/;
            resourceInputs["kmsKeyIdentifier"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["secretArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Connection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * The authorization parameters to use to authorize with the endpoint.
     *
     * You must include only authorization parameters for the `AuthorizationType` you specify.
     */
    authParameters?: pulumi.Input<inputs.events.ConnectionAuthParametersArgs>;
    /**
     * The type of authorization to use for the connection.
     *
     * > OAUTH tokens are refreshed when a 401 or 407 response is returned.
     */
    authorizationType?: pulumi.Input<enums.events.ConnectionAuthorizationType>;
    /**
     * Description of the connection.
     */
    description?: pulumi.Input<string>;
    /**
     * The private resource the HTTP request will be sent to.
     */
    invocationConnectivityParameters?: pulumi.Input<inputs.events.InvocationConnectivityParametersPropertiesArgs>;
    /**
     * The identifier of the AWS KMS customer managed key for EventBridge to use, if you choose to use a customer managed key to encrypt this connection. The identifier can be the key Amazon Resource Name (ARN), KeyId, key alias, or key alias ARN.
     *
     * If you do not specify a customer managed key identifier, EventBridge uses an AWS owned key to encrypt the connection.
     *
     * For more information, see [Identify and view keys](https://docs.aws.amazon.com/kms/latest/developerguide/viewing-keys.html) in the *AWS Key Management Service Developer Guide* .
     */
    kmsKeyIdentifier?: pulumi.Input<string>;
    /**
     * Name of the connection.
     */
    name?: pulumi.Input<string>;
}
