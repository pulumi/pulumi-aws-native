// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource type definition for AWS::Events::EventBus
 */
export function getEventBus(args: GetEventBusArgs, opts?: pulumi.InvokeOptions): Promise<GetEventBusResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:events:getEventBus", {
        "name": args.name,
    }, opts);
}

export interface GetEventBusArgs {
    /**
     * The name of the event bus.
     */
    name: string;
}

export interface GetEventBusResult {
    /**
     * The Amazon Resource Name (ARN) for the event bus.
     */
    readonly arn?: string;
    /**
     * A JSON string that describes the permission policy statement for the event bus.
     */
    readonly policy?: any;
    /**
     * Any tags assigned to the event bus.
     */
    readonly tags?: outputs.events.EventBusTag[];
}
/**
 * Resource type definition for AWS::Events::EventBus
 */
export function getEventBusOutput(args: GetEventBusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventBusResult> {
    return pulumi.output(args).apply((a: any) => getEventBus(a, opts))
}

export interface GetEventBusOutputArgs {
    /**
     * The name of the event bus.
     */
    name: pulumi.Input<string>;
}
