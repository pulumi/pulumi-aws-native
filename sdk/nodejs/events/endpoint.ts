// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Events::Endpoint.
 *
 * @deprecated Endpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class Endpoint extends pulumi.CustomResource {
    /**
     * Get an existing Endpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Endpoint {
        pulumi.log.warn("Endpoint is deprecated: Endpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new Endpoint(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:events:Endpoint';

    /**
     * Returns true if the given object is an instance of Endpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Endpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Endpoint.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly endpointId!: pulumi.Output<string>;
    public /*out*/ readonly endpointUrl!: pulumi.Output<string>;
    public readonly eventBuses!: pulumi.Output<outputs.events.EndpointEventBus[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly replicationConfig!: pulumi.Output<outputs.events.EndpointReplicationConfig | undefined>;
    public readonly roleArn!: pulumi.Output<string | undefined>;
    public readonly routingConfig!: pulumi.Output<outputs.events.EndpointRoutingConfig>;
    public /*out*/ readonly state!: pulumi.Output<enums.events.EndpointState>;
    public /*out*/ readonly stateReason!: pulumi.Output<string>;

    /**
     * Create a Endpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Endpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: EndpointArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Endpoint is deprecated: Endpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.eventBuses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventBuses'");
            }
            if ((!args || args.routingConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routingConfig'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["eventBuses"] = args ? args.eventBuses : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["replicationConfig"] = args ? args.replicationConfig : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["routingConfig"] = args ? args.routingConfig : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["endpointId"] = undefined /*out*/;
            resourceInputs["endpointUrl"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateReason"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["endpointId"] = undefined /*out*/;
            resourceInputs["endpointUrl"] = undefined /*out*/;
            resourceInputs["eventBuses"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["replicationConfig"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["routingConfig"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateReason"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Endpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Endpoint resource.
 */
export interface EndpointArgs {
    description?: pulumi.Input<string>;
    eventBuses: pulumi.Input<pulumi.Input<inputs.events.EndpointEventBusArgs>[]>;
    name?: pulumi.Input<string>;
    replicationConfig?: pulumi.Input<inputs.events.EndpointReplicationConfigArgs>;
    roleArn?: pulumi.Input<string>;
    routingConfig: pulumi.Input<inputs.events.EndpointRoutingConfigArgs>;
}
