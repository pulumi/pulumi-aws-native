// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Events::Connection.
 */
export function getConnection(args: GetConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:events:getConnection", {
        "name": args.name,
    }, opts);
}

export interface GetConnectionArgs {
    /**
     * Name of the connection.
     */
    name: string;
}

export interface GetConnectionResult {
    /**
     * The arn of the connection resource.
     */
    readonly arn?: string;
    /**
     * The arn of the connection resource to be used in IAM policies.
     */
    readonly arnForPolicy?: string;
    /**
     * The authorization parameters to use to authorize with the endpoint.
     *
     * You must include only authorization parameters for the `AuthorizationType` you specify.
     */
    readonly authParameters?: outputs.events.ConnectionAuthParameters;
    /**
     * The type of authorization to use for the connection.
     *
     * > OAUTH tokens are refreshed when a 401 or 407 response is returned.
     */
    readonly authorizationType?: enums.events.ConnectionAuthorizationType;
    /**
     * Description of the connection.
     */
    readonly description?: string;
    /**
     * The private resource the HTTP request will be sent to.
     */
    readonly invocationConnectivityParameters?: outputs.events.InvocationConnectivityParametersProperties;
    /**
     * The arn of the secrets manager secret created in the customer account.
     */
    readonly secretArn?: string;
}
/**
 * Resource Type definition for AWS::Events::Connection.
 */
export function getConnectionOutput(args: GetConnectionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConnectionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:events:getConnection", {
        "name": args.name,
    }, opts);
}

export interface GetConnectionOutputArgs {
    /**
     * Name of the connection.
     */
    name: pulumi.Input<string>;
}
