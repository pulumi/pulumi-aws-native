// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::AIOps::InvestigationGroup Resource Type
 */
export class InvestigationGroup extends pulumi.CustomResource {
    /**
     * Get an existing InvestigationGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InvestigationGroup {
        return new InvestigationGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:aiops:InvestigationGroup';

    /**
     * Returns true if the given object is an instance of InvestigationGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InvestigationGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InvestigationGroup.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the investigation group.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * An array of key-value pairs of notification channels to apply to this resource.
     */
    public readonly chatbotNotificationChannels!: pulumi.Output<outputs.aiops.InvestigationGroupChatbotNotificationChannel[] | undefined>;
    /**
     * The date and time that the investigation group was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The name of the user who created the investigation group.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * An array of cross account configurations.
     */
    public readonly crossAccountConfigurations!: pulumi.Output<outputs.aiops.InvestigationGroupCrossAccountConfiguration[] | undefined>;
    /**
     * Specifies the customer managed AWS KMS key that the investigation group uses to encrypt data, if there is one. If not, the investigation group uses an AWS key to encrypt the data.
     */
    public readonly encryptionConfig!: pulumi.Output<outputs.aiops.InvestigationGroupEncryptionConfigMap | undefined>;
    /**
     * Investigation Group policy
     */
    public readonly investigationGroupPolicy!: pulumi.Output<string | undefined>;
    /**
     * Flag to enable cloud trail history
     */
    public readonly isCloudTrailEventHistoryEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The date and time that the investigation group was most recently modified.
     */
    public /*out*/ readonly lastModifiedAt!: pulumi.Output<string>;
    /**
     * The name of the user who created the investigation group.
     */
    public /*out*/ readonly lastModifiedBy!: pulumi.Output<string>;
    /**
     * Specify either the name or the ARN of the investigation group that you want to view. This is used to set the name of the investigation group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The number of days to retain the investigation group
     */
    public readonly retentionInDays!: pulumi.Output<number | undefined>;
    /**
     * The ARN of the IAM role that the investigation group uses for permissions to gather data.
     */
    public readonly roleArn!: pulumi.Output<string | undefined>;
    /**
     * Displays the custom tag keys for custom applications in your system that you have specified in the investigation group. Resource tags help CloudWatch investigations narrow the search space when it is unable to discover definite relationships between resources.
     */
    public readonly tagKeyBoundaries!: pulumi.Output<string[] | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a InvestigationGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InvestigationGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["chatbotNotificationChannels"] = args?.chatbotNotificationChannels;
            resourceInputs["crossAccountConfigurations"] = args?.crossAccountConfigurations;
            resourceInputs["encryptionConfig"] = args?.encryptionConfig;
            resourceInputs["investigationGroupPolicy"] = args?.investigationGroupPolicy;
            resourceInputs["isCloudTrailEventHistoryEnabled"] = args?.isCloudTrailEventHistoryEnabled;
            resourceInputs["name"] = args?.name;
            resourceInputs["retentionInDays"] = args?.retentionInDays;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["tagKeyBoundaries"] = args?.tagKeyBoundaries;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["lastModifiedAt"] = undefined /*out*/;
            resourceInputs["lastModifiedBy"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["chatbotNotificationChannels"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["crossAccountConfigurations"] = undefined /*out*/;
            resourceInputs["encryptionConfig"] = undefined /*out*/;
            resourceInputs["investigationGroupPolicy"] = undefined /*out*/;
            resourceInputs["isCloudTrailEventHistoryEnabled"] = undefined /*out*/;
            resourceInputs["lastModifiedAt"] = undefined /*out*/;
            resourceInputs["lastModifiedBy"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["retentionInDays"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["tagKeyBoundaries"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name", "retentionInDays"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(InvestigationGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a InvestigationGroup resource.
 */
export interface InvestigationGroupArgs {
    /**
     * An array of key-value pairs of notification channels to apply to this resource.
     */
    chatbotNotificationChannels?: pulumi.Input<pulumi.Input<inputs.aiops.InvestigationGroupChatbotNotificationChannelArgs>[]>;
    /**
     * An array of cross account configurations.
     */
    crossAccountConfigurations?: pulumi.Input<pulumi.Input<inputs.aiops.InvestigationGroupCrossAccountConfigurationArgs>[]>;
    /**
     * Specifies the customer managed AWS KMS key that the investigation group uses to encrypt data, if there is one. If not, the investigation group uses an AWS key to encrypt the data.
     */
    encryptionConfig?: pulumi.Input<inputs.aiops.InvestigationGroupEncryptionConfigMapArgs>;
    /**
     * Investigation Group policy
     */
    investigationGroupPolicy?: pulumi.Input<string>;
    /**
     * Flag to enable cloud trail history
     */
    isCloudTrailEventHistoryEnabled?: pulumi.Input<boolean>;
    /**
     * Specify either the name or the ARN of the investigation group that you want to view. This is used to set the name of the investigation group.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of days to retain the investigation group
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * The ARN of the IAM role that the investigation group uses for permissions to gather data.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Displays the custom tag keys for custom applications in your system that you have specified in the investigation group. Resource tags help CloudWatch investigations narrow the search space when it is unable to discover definite relationships between resources.
     */
    tagKeyBoundaries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
