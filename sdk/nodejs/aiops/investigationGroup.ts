// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::AIOps::InvestigationGroup Resource Type
 */
export class InvestigationGroup extends pulumi.CustomResource {
    /**
     * Get an existing InvestigationGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InvestigationGroup {
        return new InvestigationGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:aiops:InvestigationGroup';

    /**
     * Returns true if the given object is an instance of InvestigationGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InvestigationGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InvestigationGroup.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * An array of key-value pairs of notification channels to apply to this resource.
     */
    public readonly chatbotNotificationChannels!: pulumi.Output<outputs.aiops.InvestigationGroupChatbotNotificationChannel[] | undefined>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly encryptionConfig!: pulumi.Output<outputs.aiops.InvestigationGroupEncryptionConfigMap | undefined>;
    /**
     * Investigation Group policy
     */
    public readonly investigationGroupPolicy!: pulumi.Output<string | undefined>;
    /**
     * Flag to enable cloud trail history
     */
    public readonly isCloudTrailEventHistoryEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly lastModifiedAt!: pulumi.Output<string>;
    public /*out*/ readonly lastModifiedBy!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    /**
     * The number of days to retain the investigation group
     */
    public readonly retentionInDays!: pulumi.Output<number | undefined>;
    public readonly roleArn!: pulumi.Output<string | undefined>;
    public readonly tagKeyBoundaries!: pulumi.Output<string[] | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a InvestigationGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InvestigationGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["chatbotNotificationChannels"] = args ? args.chatbotNotificationChannels : undefined;
            resourceInputs["encryptionConfig"] = args ? args.encryptionConfig : undefined;
            resourceInputs["investigationGroupPolicy"] = args ? args.investigationGroupPolicy : undefined;
            resourceInputs["isCloudTrailEventHistoryEnabled"] = args ? args.isCloudTrailEventHistoryEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["retentionInDays"] = args ? args.retentionInDays : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tagKeyBoundaries"] = args ? args.tagKeyBoundaries : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["lastModifiedAt"] = undefined /*out*/;
            resourceInputs["lastModifiedBy"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["chatbotNotificationChannels"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["encryptionConfig"] = undefined /*out*/;
            resourceInputs["investigationGroupPolicy"] = undefined /*out*/;
            resourceInputs["isCloudTrailEventHistoryEnabled"] = undefined /*out*/;
            resourceInputs["lastModifiedAt"] = undefined /*out*/;
            resourceInputs["lastModifiedBy"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["retentionInDays"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["tagKeyBoundaries"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name", "retentionInDays"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(InvestigationGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a InvestigationGroup resource.
 */
export interface InvestigationGroupArgs {
    /**
     * An array of key-value pairs of notification channels to apply to this resource.
     */
    chatbotNotificationChannels?: pulumi.Input<pulumi.Input<inputs.aiops.InvestigationGroupChatbotNotificationChannelArgs>[]>;
    encryptionConfig?: pulumi.Input<inputs.aiops.InvestigationGroupEncryptionConfigMapArgs>;
    /**
     * Investigation Group policy
     */
    investigationGroupPolicy?: pulumi.Input<string>;
    /**
     * Flag to enable cloud trail history
     */
    isCloudTrailEventHistoryEnabled?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    /**
     * The number of days to retain the investigation group
     */
    retentionInDays?: pulumi.Input<number>;
    roleArn?: pulumi.Input<string>;
    tagKeyBoundaries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
