// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::AIOps::InvestigationGroup Resource Type
 */
export function getInvestigationGroup(args: GetInvestigationGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetInvestigationGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:aiops:getInvestigationGroup", {
        "arn": args.arn,
    }, opts);
}

export interface GetInvestigationGroupArgs {
    /**
     * The Amazon Resource Name (ARN) of the investigation group. For example, `arn:aws:aiops: *Region* : *account-id* :investigation-group: *investigation-group-id*`
     */
    arn: string;
}

export interface GetInvestigationGroupResult {
    /**
     * The Amazon Resource Name (ARN) of the investigation group. For example, `arn:aws:aiops: *Region* : *account-id* :investigation-group: *investigation-group-id*`
     */
    readonly arn?: string;
    /**
     * An array of key-value pairs of notification channels to apply to this resource.
     */
    readonly chatbotNotificationChannels?: outputs.aiops.InvestigationGroupChatbotNotificationChannel[];
    /**
     * The date and time that the investigation group was created.
     */
    readonly createdAt?: string;
    /**
     * The name of the user who created the investigation group.
     */
    readonly createdBy?: string;
    /**
     * An array of cross account configurations.
     */
    readonly crossAccountConfigurations?: outputs.aiops.InvestigationGroupCrossAccountConfiguration[];
    /**
     * Use this property to specify a customer managed AWS KMS key to encrypt your investigation data. If you omit this property, Amazon Q Developer operational investigations will use an AWS key to encrypt the data. For more information, see [Encryption of investigation data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Investigations-Security.html#Investigations-KMS) .
     */
    readonly encryptionConfig?: outputs.aiops.InvestigationGroupEncryptionConfigMap;
    /**
     * Investigation Group policy
     */
    readonly investigationGroupPolicy?: string;
    /**
     * Flag to enable cloud trail history
     */
    readonly isCloudTrailEventHistoryEnabled?: boolean;
    /**
     * The date and time that the investigation group was most recently modified.
     */
    readonly lastModifiedAt?: string;
    /**
     * The name of the user who most recently modified the investigation group.
     */
    readonly lastModifiedBy?: string;
    /**
     * Specify the ARN of the IAM role that Amazon Q Developer operational investigations will use when it gathers investigation data. The permissions in this role determine which of your resources that Amazon Q Developer operational investigations will have access to during investigations.
     *
     * For more information, see [How to control what data Amazon Q has access to during investigations](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Investigations-Security.html#Investigations-Security-Data) .
     */
    readonly roleArn?: string;
    /**
     * Enter the existing custom tag keys for custom applications in your system. Resource tags help Amazon Q narrow the search space when it is unable to discover definite relationships between resources. For example, to discover that an Amazon ECS service depends on an Amazon RDS database, Amazon Q can discover this relationship using data sources such as X-Ray and CloudWatch Application Signals. However, if you haven't deployed these features, Amazon Q will attempt to identify possible relationships. Tag boundaries can be used to narrow the resources that will be discovered by Amazon Q in these cases.
     *
     * You don't need to enter tags created by myApplications or AWS CloudFormation , because Amazon Q can automatically detect those tags.
     */
    readonly tagKeyBoundaries?: string[];
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Definition of AWS::AIOps::InvestigationGroup Resource Type
 */
export function getInvestigationGroupOutput(args: GetInvestigationGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInvestigationGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:aiops:getInvestigationGroup", {
        "arn": args.arn,
    }, opts);
}

export interface GetInvestigationGroupOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the investigation group. For example, `arn:aws:aiops: *Region* : *account-id* :investigation-group: *investigation-group-id*`
     */
    arn: pulumi.Input<string>;
}
