// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppStream::Fleet
 */
export function getFleet(args: GetFleetArgs, opts?: pulumi.InvokeOptions): Promise<GetFleetResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:appstream:getFleet", {
        "id": args.id,
    }, opts);
}

export interface GetFleetArgs {
    id: string;
}

export interface GetFleetResult {
    readonly computeCapacity?: outputs.appstream.FleetComputeCapacity;
    readonly description?: string;
    readonly disconnectTimeoutInSeconds?: number;
    readonly displayName?: string;
    readonly domainJoinInfo?: outputs.appstream.FleetDomainJoinInfo;
    readonly enableDefaultInternetAccess?: boolean;
    readonly iamRoleArn?: string;
    readonly id?: string;
    readonly idleDisconnectTimeoutInSeconds?: number;
    readonly imageArn?: string;
    readonly imageName?: string;
    readonly instanceType?: string;
    readonly maxConcurrentSessions?: number;
    readonly maxUserDurationInSeconds?: number;
    readonly platform?: string;
    readonly sessionScriptS3Location?: outputs.appstream.FleetS3Location;
    readonly streamView?: string;
    readonly tags?: outputs.appstream.FleetTag[];
    readonly usbDeviceFilterStrings?: string[];
    readonly vpcConfig?: outputs.appstream.FleetVpcConfig;
}

export function getFleetOutput(args: GetFleetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFleetResult> {
    return pulumi.output(args).apply(a => getFleet(a, opts))
}

export interface GetFleetOutputArgs {
    id: pulumi.Input<string>;
}
