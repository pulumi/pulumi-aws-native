// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppStream::Entitlement
 */
export function getEntitlement(args: GetEntitlementArgs, opts?: pulumi.InvokeOptions): Promise<GetEntitlementResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:appstream:getEntitlement", {
        "name": args.name,
        "stackName": args.stackName,
    }, opts);
}

export interface GetEntitlementArgs {
    /**
     * The name of the entitlement.
     */
    name: string;
    /**
     * The name of the stack.
     */
    stackName: string;
}

export interface GetEntitlementResult {
    /**
     * Specifies whether to entitle all apps or only selected apps.
     */
    readonly appVisibility?: string;
    /**
     * The attributes of the entitlement.
     */
    readonly attributes?: outputs.appstream.EntitlementAttribute[];
    /**
     * The time when the entitlement was created.
     */
    readonly createdTime?: string;
    /**
     * The description of the entitlement.
     */
    readonly description?: string;
    /**
     * The time when the entitlement was last modified.
     */
    readonly lastModifiedTime?: string;
}
/**
 * Resource Type definition for AWS::AppStream::Entitlement
 */
export function getEntitlementOutput(args: GetEntitlementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntitlementResult> {
    return pulumi.output(args).apply((a: any) => getEntitlement(a, opts))
}

export interface GetEntitlementOutputArgs {
    /**
     * The name of the entitlement.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the stack.
     */
    stackName: pulumi.Input<string>;
}
