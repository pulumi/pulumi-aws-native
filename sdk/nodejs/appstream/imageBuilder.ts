// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppStream::ImageBuilder
 */
export class ImageBuilder extends pulumi.CustomResource {
    /**
     * Get an existing ImageBuilder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ImageBuilder {
        return new ImageBuilder(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appstream:ImageBuilder';

    /**
     * Returns true if the given object is an instance of ImageBuilder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ImageBuilder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ImageBuilder.__pulumiType;
    }

    /**
     * The list of virtual private cloud (VPC) interface endpoint objects. Administrators can connect to the image builder only through the specified endpoints.
     */
    public readonly accessEndpoints!: pulumi.Output<outputs.appstream.ImageBuilderAccessEndpoint[] | undefined>;
    /**
     * The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST].
     */
    public readonly appstreamAgentVersion!: pulumi.Output<string | undefined>;
    /**
     * The description to display.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The image builder name to display.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain.
     */
    public readonly domainJoinInfo!: pulumi.Output<outputs.appstream.ImageBuilderDomainJoinInfo | undefined>;
    /**
     * Enables or disables default internet access for the image builder.
     */
    public readonly enableDefaultInternetAccess!: pulumi.Output<boolean | undefined>;
    /**
     * The ARN of the IAM role that is applied to the image builder. To assume a role, the image builder calls the AWS Security Token Service `AssumeRole` API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the *appstream_machine_role* credential profile on the instance.
     *
     * For more information, see [Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances](https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html) in the *Amazon AppStream 2.0 Administration Guide* .
     */
    public readonly iamRoleArn!: pulumi.Output<string | undefined>;
    /**
     * The ARN of the public, private, or shared image to use.
     */
    public readonly imageArn!: pulumi.Output<string | undefined>;
    /**
     * The name of the image used to create the image builder.
     */
    public readonly imageName!: pulumi.Output<string | undefined>;
    /**
     * The instance type to use when launching the image builder. The following instance types are available:
     *
     * - stream.standard.small
     * - stream.standard.medium
     * - stream.standard.large
     * - stream.compute.large
     * - stream.compute.xlarge
     * - stream.compute.2xlarge
     * - stream.compute.4xlarge
     * - stream.compute.8xlarge
     * - stream.memory.large
     * - stream.memory.xlarge
     * - stream.memory.2xlarge
     * - stream.memory.4xlarge
     * - stream.memory.8xlarge
     * - stream.memory.z1d.large
     * - stream.memory.z1d.xlarge
     * - stream.memory.z1d.2xlarge
     * - stream.memory.z1d.3xlarge
     * - stream.memory.z1d.6xlarge
     * - stream.memory.z1d.12xlarge
     * - stream.graphics-design.large
     * - stream.graphics-design.xlarge
     * - stream.graphics-design.2xlarge
     * - stream.graphics-design.4xlarge
     * - stream.graphics-desktop.2xlarge
     * - stream.graphics.g4dn.xlarge
     * - stream.graphics.g4dn.2xlarge
     * - stream.graphics.g4dn.4xlarge
     * - stream.graphics.g4dn.8xlarge
     * - stream.graphics.g4dn.12xlarge
     * - stream.graphics.g4dn.16xlarge
     * - stream.graphics-pro.4xlarge
     * - stream.graphics-pro.8xlarge
     * - stream.graphics-pro.16xlarge
     * - stream.graphics.g5.xlarge
     * - stream.graphics.g5.2xlarge
     * - stream.graphics.g5.4xlarge
     * - stream.graphics.g5.8xlarge
     * - stream.graphics.g5.16xlarge
     * - stream.graphics.g5.12xlarge
     * - stream.graphics.g5.24xlarge
     * - stream.graphics.g6.xlarge
     * - stream.graphics.g6.2xlarge
     * - stream.graphics.g6.4xlarge
     * - stream.graphics.g6.8xlarge
     * - stream.graphics.g6.16xlarge
     * - stream.graphics.g6.12xlarge
     * - stream.graphics.g6.24xlarge
     * - stream.graphics.gr6.4xlarge
     * - stream.graphics.gr6.8xlarge
     * - stream.graphics.g6f.large
     * - stream.graphics.g6f.xlarge
     * - stream.graphics.g6f.2xlarge
     * - stream.graphics.g6f.4xlarge
     * - stream.graphics.gr6f.4xlarge
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * A unique name for the image builder.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The URL to start an image builder streaming session, returned as a string.
     */
    public /*out*/ readonly streamingUrl!: pulumi.Output<string>;
    /**
     * An array of key-value pairs.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The VPC configuration for the image builder. You can specify only one subnet.
     */
    public readonly vpcConfig!: pulumi.Output<outputs.appstream.ImageBuilderVpcConfig | undefined>;

    /**
     * Create a ImageBuilder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageBuilderArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            resourceInputs["accessEndpoints"] = args ? args.accessEndpoints : undefined;
            resourceInputs["appstreamAgentVersion"] = args ? args.appstreamAgentVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["domainJoinInfo"] = args ? args.domainJoinInfo : undefined;
            resourceInputs["enableDefaultInternetAccess"] = args ? args.enableDefaultInternetAccess : undefined;
            resourceInputs["iamRoleArn"] = args ? args.iamRoleArn : undefined;
            resourceInputs["imageArn"] = args ? args.imageArn : undefined;
            resourceInputs["imageName"] = args ? args.imageName : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcConfig"] = args ? args.vpcConfig : undefined;
            resourceInputs["streamingUrl"] = undefined /*out*/;
        } else {
            resourceInputs["accessEndpoints"] = undefined /*out*/;
            resourceInputs["appstreamAgentVersion"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["domainJoinInfo"] = undefined /*out*/;
            resourceInputs["enableDefaultInternetAccess"] = undefined /*out*/;
            resourceInputs["iamRoleArn"] = undefined /*out*/;
            resourceInputs["imageArn"] = undefined /*out*/;
            resourceInputs["imageName"] = undefined /*out*/;
            resourceInputs["instanceType"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["streamingUrl"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpcConfig"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ImageBuilder.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ImageBuilder resource.
 */
export interface ImageBuilderArgs {
    /**
     * The list of virtual private cloud (VPC) interface endpoint objects. Administrators can connect to the image builder only through the specified endpoints.
     */
    accessEndpoints?: pulumi.Input<pulumi.Input<inputs.appstream.ImageBuilderAccessEndpointArgs>[]>;
    /**
     * The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST].
     */
    appstreamAgentVersion?: pulumi.Input<string>;
    /**
     * The description to display.
     */
    description?: pulumi.Input<string>;
    /**
     * The image builder name to display.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain.
     */
    domainJoinInfo?: pulumi.Input<inputs.appstream.ImageBuilderDomainJoinInfoArgs>;
    /**
     * Enables or disables default internet access for the image builder.
     */
    enableDefaultInternetAccess?: pulumi.Input<boolean>;
    /**
     * The ARN of the IAM role that is applied to the image builder. To assume a role, the image builder calls the AWS Security Token Service `AssumeRole` API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the *appstream_machine_role* credential profile on the instance.
     *
     * For more information, see [Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances](https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html) in the *Amazon AppStream 2.0 Administration Guide* .
     */
    iamRoleArn?: pulumi.Input<string>;
    /**
     * The ARN of the public, private, or shared image to use.
     */
    imageArn?: pulumi.Input<string>;
    /**
     * The name of the image used to create the image builder.
     */
    imageName?: pulumi.Input<string>;
    /**
     * The instance type to use when launching the image builder. The following instance types are available:
     *
     * - stream.standard.small
     * - stream.standard.medium
     * - stream.standard.large
     * - stream.compute.large
     * - stream.compute.xlarge
     * - stream.compute.2xlarge
     * - stream.compute.4xlarge
     * - stream.compute.8xlarge
     * - stream.memory.large
     * - stream.memory.xlarge
     * - stream.memory.2xlarge
     * - stream.memory.4xlarge
     * - stream.memory.8xlarge
     * - stream.memory.z1d.large
     * - stream.memory.z1d.xlarge
     * - stream.memory.z1d.2xlarge
     * - stream.memory.z1d.3xlarge
     * - stream.memory.z1d.6xlarge
     * - stream.memory.z1d.12xlarge
     * - stream.graphics-design.large
     * - stream.graphics-design.xlarge
     * - stream.graphics-design.2xlarge
     * - stream.graphics-design.4xlarge
     * - stream.graphics-desktop.2xlarge
     * - stream.graphics.g4dn.xlarge
     * - stream.graphics.g4dn.2xlarge
     * - stream.graphics.g4dn.4xlarge
     * - stream.graphics.g4dn.8xlarge
     * - stream.graphics.g4dn.12xlarge
     * - stream.graphics.g4dn.16xlarge
     * - stream.graphics-pro.4xlarge
     * - stream.graphics-pro.8xlarge
     * - stream.graphics-pro.16xlarge
     * - stream.graphics.g5.xlarge
     * - stream.graphics.g5.2xlarge
     * - stream.graphics.g5.4xlarge
     * - stream.graphics.g5.8xlarge
     * - stream.graphics.g5.16xlarge
     * - stream.graphics.g5.12xlarge
     * - stream.graphics.g5.24xlarge
     * - stream.graphics.g6.xlarge
     * - stream.graphics.g6.2xlarge
     * - stream.graphics.g6.4xlarge
     * - stream.graphics.g6.8xlarge
     * - stream.graphics.g6.16xlarge
     * - stream.graphics.g6.12xlarge
     * - stream.graphics.g6.24xlarge
     * - stream.graphics.gr6.4xlarge
     * - stream.graphics.gr6.8xlarge
     * - stream.graphics.g6f.large
     * - stream.graphics.g6f.xlarge
     * - stream.graphics.g6f.2xlarge
     * - stream.graphics.g6f.4xlarge
     * - stream.graphics.gr6f.4xlarge
     */
    instanceType: pulumi.Input<string>;
    /**
     * A unique name for the image builder.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of key-value pairs.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The VPC configuration for the image builder. You can specify only one subnet.
     */
    vpcConfig?: pulumi.Input<inputs.appstream.ImageBuilderVpcConfigArgs>;
}
