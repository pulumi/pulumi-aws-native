// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppStream::ImageBuilder
 */
export function getImageBuilder(args: GetImageBuilderArgs, opts?: pulumi.InvokeOptions): Promise<GetImageBuilderResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:appstream:getImageBuilder", {
        "name": args.name,
    }, opts);
}

export interface GetImageBuilderArgs {
    /**
     * A unique name for the image builder.
     */
    name: string;
}

export interface GetImageBuilderResult {
    /**
     * The list of virtual private cloud (VPC) interface endpoint objects. Administrators can connect to the image builder only through the specified endpoints.
     */
    readonly accessEndpoints?: outputs.appstream.ImageBuilderAccessEndpoint[];
    /**
     * The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST].
     */
    readonly appstreamAgentVersion?: string;
    /**
     * The description to display.
     */
    readonly description?: string;
    /**
     * The image builder name to display.
     */
    readonly displayName?: string;
    /**
     * The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain.
     */
    readonly domainJoinInfo?: outputs.appstream.ImageBuilderDomainJoinInfo;
    /**
     * Enables or disables default internet access for the image builder.
     */
    readonly enableDefaultInternetAccess?: boolean;
    /**
     * The ARN of the IAM role that is applied to the image builder. To assume a role, the image builder calls the AWS Security Token Service `AssumeRole` API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the *appstream_machine_role* credential profile on the instance.
     *
     * For more information, see [Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances](https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html) in the *Amazon AppStream 2.0 Administration Guide* .
     */
    readonly iamRoleArn?: string;
    /**
     * The ARN of the public, private, or shared image to use.
     */
    readonly imageArn?: string;
    /**
     * The name of the image used to create the image builder.
     */
    readonly imageName?: string;
    /**
     * The instance type to use when launching the image builder. The following instance types are available:
     *
     * - stream.standard.small
     * - stream.standard.medium
     * - stream.standard.large
     * - stream.compute.large
     * - stream.compute.xlarge
     * - stream.compute.2xlarge
     * - stream.compute.4xlarge
     * - stream.compute.8xlarge
     * - stream.memory.large
     * - stream.memory.xlarge
     * - stream.memory.2xlarge
     * - stream.memory.4xlarge
     * - stream.memory.8xlarge
     * - stream.memory.z1d.large
     * - stream.memory.z1d.xlarge
     * - stream.memory.z1d.2xlarge
     * - stream.memory.z1d.3xlarge
     * - stream.memory.z1d.6xlarge
     * - stream.memory.z1d.12xlarge
     * - stream.graphics-design.large
     * - stream.graphics-design.xlarge
     * - stream.graphics-design.2xlarge
     * - stream.graphics-design.4xlarge
     * - stream.graphics-desktop.2xlarge
     * - stream.graphics.g4dn.xlarge
     * - stream.graphics.g4dn.2xlarge
     * - stream.graphics.g4dn.4xlarge
     * - stream.graphics.g4dn.8xlarge
     * - stream.graphics.g4dn.12xlarge
     * - stream.graphics.g4dn.16xlarge
     * - stream.graphics-pro.4xlarge
     * - stream.graphics-pro.8xlarge
     * - stream.graphics-pro.16xlarge
     */
    readonly instanceType?: string;
    /**
     * A unique name for the image builder.
     */
    readonly name?: string;
    /**
     * The URL to start an image builder streaming session, returned as a string.
     */
    readonly streamingUrl?: string;
    /**
     * An array of key-value pairs.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The VPC configuration for the image builder. You can specify only one subnet.
     */
    readonly vpcConfig?: outputs.appstream.ImageBuilderVpcConfig;
}
/**
 * Resource Type definition for AWS::AppStream::ImageBuilder
 */
export function getImageBuilderOutput(args: GetImageBuilderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageBuilderResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:appstream:getImageBuilder", {
        "name": args.name,
    }, opts);
}

export interface GetImageBuilderOutputArgs {
    /**
     * A unique name for the image builder.
     */
    name: pulumi.Input<string>;
}
