// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppStream::AppBlock
 */
export class AppBlock extends pulumi.CustomResource {
    /**
     * Get an existing AppBlock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AppBlock {
        return new AppBlock(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appstream:AppBlock';

    /**
     * Returns true if the given object is an instance of AppBlock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppBlock {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppBlock.__pulumiType;
    }

    /**
     * The ARN of the app block.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The time when the app block was created.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * The description of the app block.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the app block.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The name of the app block.
     *
     * *Pattern* : `^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$`
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The packaging type of the app block.
     */
    public readonly packagingType!: pulumi.Output<string | undefined>;
    /**
     * The post setup script details of the app block.
     */
    public readonly postSetupScriptDetails!: pulumi.Output<outputs.appstream.AppBlockScriptDetails | undefined>;
    /**
     * The setup script details of the app block.
     */
    public readonly setupScriptDetails!: pulumi.Output<outputs.appstream.AppBlockScriptDetails | undefined>;
    /**
     * The source S3 location of the app block.
     */
    public readonly sourceS3Location!: pulumi.Output<outputs.appstream.AppBlockS3Location>;
    /**
     * The tags of the app block.
     */
    public readonly tags!: pulumi.Output<(outputs.appstream.AppBlockTag0Properties | outputs.appstream.AppBlockTag1Properties)[] | undefined>;

    /**
     * Create a AppBlock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppBlockArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.sourceS3Location === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceS3Location'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["name"] = args?.name;
            resourceInputs["packagingType"] = args?.packagingType;
            resourceInputs["postSetupScriptDetails"] = args?.postSetupScriptDetails;
            resourceInputs["setupScriptDetails"] = args?.setupScriptDetails;
            resourceInputs["sourceS3Location"] = args?.sourceS3Location;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["packagingType"] = undefined /*out*/;
            resourceInputs["postSetupScriptDetails"] = undefined /*out*/;
            resourceInputs["setupScriptDetails"] = undefined /*out*/;
            resourceInputs["sourceS3Location"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["description", "displayName", "name", "packagingType", "postSetupScriptDetails", "setupScriptDetails", "sourceS3Location"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AppBlock.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AppBlock resource.
 */
export interface AppBlockArgs {
    /**
     * The description of the app block.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the app block.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the app block.
     *
     * *Pattern* : `^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$`
     */
    name?: pulumi.Input<string>;
    /**
     * The packaging type of the app block.
     */
    packagingType?: pulumi.Input<string>;
    /**
     * The post setup script details of the app block.
     */
    postSetupScriptDetails?: pulumi.Input<inputs.appstream.AppBlockScriptDetailsArgs>;
    /**
     * The setup script details of the app block.
     */
    setupScriptDetails?: pulumi.Input<inputs.appstream.AppBlockScriptDetailsArgs>;
    /**
     * The source S3 location of the app block.
     */
    sourceS3Location: pulumi.Input<inputs.appstream.AppBlockS3LocationArgs>;
    /**
     * The tags of the app block.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.appstream.AppBlockTag0PropertiesArgs | inputs.appstream.AppBlockTag1PropertiesArgs>[]>;
}
