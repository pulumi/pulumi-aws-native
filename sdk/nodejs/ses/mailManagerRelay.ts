// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::SES::MailManagerRelay Resource Type
 */
export class MailManagerRelay extends pulumi.CustomResource {
    /**
     * Get an existing MailManagerRelay resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MailManagerRelay {
        return new MailManagerRelay(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ses:MailManagerRelay';

    /**
     * Returns true if the given object is an instance of MailManagerRelay.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MailManagerRelay {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MailManagerRelay.__pulumiType;
    }

    /**
     * Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
     */
    public readonly authentication!: pulumi.Output<outputs.ses.MailManagerRelayRelayAuthentication0Properties | outputs.ses.MailManagerRelayRelayAuthentication1Properties>;
    /**
     * The Amazon Resource Name (ARN) of the relay.
     */
    public /*out*/ readonly relayArn!: pulumi.Output<string>;
    /**
     * The unique relay identifier.
     */
    public /*out*/ readonly relayId!: pulumi.Output<string>;
    /**
     * The unique relay name.
     */
    public readonly relayName!: pulumi.Output<string | undefined>;
    /**
     * The destination relay server address.
     */
    public readonly serverName!: pulumi.Output<string>;
    /**
     * The destination relay server port.
     */
    public readonly serverPort!: pulumi.Output<number>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a MailManagerRelay resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MailManagerRelayArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.authentication === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authentication'");
            }
            if ((!args || args.serverName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverName'");
            }
            if ((!args || args.serverPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverPort'");
            }
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["relayName"] = args ? args.relayName : undefined;
            resourceInputs["serverName"] = args ? args.serverName : undefined;
            resourceInputs["serverPort"] = args ? args.serverPort : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["relayArn"] = undefined /*out*/;
            resourceInputs["relayId"] = undefined /*out*/;
        } else {
            resourceInputs["authentication"] = undefined /*out*/;
            resourceInputs["relayArn"] = undefined /*out*/;
            resourceInputs["relayId"] = undefined /*out*/;
            resourceInputs["relayName"] = undefined /*out*/;
            resourceInputs["serverName"] = undefined /*out*/;
            resourceInputs["serverPort"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MailManagerRelay.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a MailManagerRelay resource.
 */
export interface MailManagerRelayArgs {
    /**
     * Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
     */
    authentication: pulumi.Input<inputs.ses.MailManagerRelayRelayAuthentication0PropertiesArgs | inputs.ses.MailManagerRelayRelayAuthentication1PropertiesArgs>;
    /**
     * The unique relay name.
     */
    relayName?: pulumi.Input<string>;
    /**
     * The destination relay server address.
     */
    serverName: pulumi.Input<string>;
    /**
     * The destination relay server port.
     */
    serverPort: pulumi.Input<number>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
