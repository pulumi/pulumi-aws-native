// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::SES::MailManagerTrafficPolicy Resource Type
 */
export class MailManagerTrafficPolicy extends pulumi.CustomResource {
    /**
     * Get an existing MailManagerTrafficPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MailManagerTrafficPolicy {
        return new MailManagerTrafficPolicy(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ses:MailManagerTrafficPolicy';

    /**
     * Returns true if the given object is an instance of MailManagerTrafficPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MailManagerTrafficPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MailManagerTrafficPolicy.__pulumiType;
    }

    /**
     * Default action instructs the traﬃc policy to either Allow or Deny (block) messages that fall outside of (or not addressed by) the conditions of your policy statements
     */
    public readonly defaultAction!: pulumi.Output<enums.ses.MailManagerTrafficPolicyAcceptAction>;
    /**
     * The maximum message size in bytes of email which is allowed in by this traffic policy—anything larger will be blocked.
     */
    public readonly maxMessageSizeBytes!: pulumi.Output<number | undefined>;
    /**
     * Conditional statements for filtering email traffic.
     */
    public readonly policyStatements!: pulumi.Output<outputs.ses.MailManagerTrafficPolicyPolicyStatement[]>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the traffic policy resource.
     */
    public /*out*/ readonly trafficPolicyArn!: pulumi.Output<string>;
    /**
     * The identifier of the traffic policy resource.
     */
    public /*out*/ readonly trafficPolicyId!: pulumi.Output<string>;
    /**
     * The name of the policy.
     *
     * The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.
     */
    public readonly trafficPolicyName!: pulumi.Output<string | undefined>;

    /**
     * Create a MailManagerTrafficPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MailManagerTrafficPolicyArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.defaultAction === undefined && !opts.urn) {
                throw new Error("Missing required property 'defaultAction'");
            }
            if (args?.policyStatements === undefined && !opts.urn) {
                throw new Error("Missing required property 'policyStatements'");
            }
            resourceInputs["defaultAction"] = args?.defaultAction;
            resourceInputs["maxMessageSizeBytes"] = args?.maxMessageSizeBytes;
            resourceInputs["policyStatements"] = args?.policyStatements;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["trafficPolicyName"] = args?.trafficPolicyName;
            resourceInputs["trafficPolicyArn"] = undefined /*out*/;
            resourceInputs["trafficPolicyId"] = undefined /*out*/;
        } else {
            resourceInputs["defaultAction"] = undefined /*out*/;
            resourceInputs["maxMessageSizeBytes"] = undefined /*out*/;
            resourceInputs["policyStatements"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["trafficPolicyArn"] = undefined /*out*/;
            resourceInputs["trafficPolicyId"] = undefined /*out*/;
            resourceInputs["trafficPolicyName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MailManagerTrafficPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a MailManagerTrafficPolicy resource.
 */
export interface MailManagerTrafficPolicyArgs {
    /**
     * Default action instructs the traﬃc policy to either Allow or Deny (block) messages that fall outside of (or not addressed by) the conditions of your policy statements
     */
    defaultAction: pulumi.Input<enums.ses.MailManagerTrafficPolicyAcceptAction>;
    /**
     * The maximum message size in bytes of email which is allowed in by this traffic policy—anything larger will be blocked.
     */
    maxMessageSizeBytes?: pulumi.Input<number>;
    /**
     * Conditional statements for filtering email traffic.
     */
    policyStatements: pulumi.Input<pulumi.Input<inputs.ses.MailManagerTrafficPolicyPolicyStatementArgs>[]>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The name of the policy.
     *
     * The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.
     */
    trafficPolicyName?: pulumi.Input<string>;
}
