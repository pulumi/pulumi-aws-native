// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::SES::MailManagerArchive Resource Type
 */
export class MailManagerArchive extends pulumi.CustomResource {
    /**
     * Get an existing MailManagerArchive resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MailManagerArchive {
        return new MailManagerArchive(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ses:MailManagerArchive';

    /**
     * Returns true if the given object is an instance of MailManagerArchive.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MailManagerArchive {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MailManagerArchive.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the archive.
     */
    public /*out*/ readonly archiveArn!: pulumi.Output<string>;
    /**
     * The unique identifier of the archive.
     */
    public /*out*/ readonly archiveId!: pulumi.Output<string>;
    /**
     * A unique name for the new archive.
     */
    public readonly archiveName!: pulumi.Output<string | undefined>;
    /**
     * The current state of the archive:
     *
     * - `ACTIVE` – The archive is ready and available for use.
     * - `PENDING_DELETION` – The archive has been marked for deletion and will be permanently deleted in 30 days. No further modifications can be made in this state.
     */
    public /*out*/ readonly archiveState!: pulumi.Output<enums.ses.MailManagerArchiveArchiveState>;
    /**
     * The Amazon Resource Name (ARN) of the KMS key for encrypting emails in the archive.
     */
    public readonly kmsKeyArn!: pulumi.Output<string | undefined>;
    /**
     * The period for retaining emails in the archive before automatic deletion.
     */
    public readonly retention!: pulumi.Output<outputs.ses.MailManagerArchiveArchiveRetentionProperties | undefined>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a MailManagerArchive resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MailManagerArchiveArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["archiveName"] = args?.archiveName;
            resourceInputs["kmsKeyArn"] = args?.kmsKeyArn;
            resourceInputs["retention"] = args?.retention;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["archiveArn"] = undefined /*out*/;
            resourceInputs["archiveId"] = undefined /*out*/;
            resourceInputs["archiveState"] = undefined /*out*/;
        } else {
            resourceInputs["archiveArn"] = undefined /*out*/;
            resourceInputs["archiveId"] = undefined /*out*/;
            resourceInputs["archiveName"] = undefined /*out*/;
            resourceInputs["archiveState"] = undefined /*out*/;
            resourceInputs["kmsKeyArn"] = undefined /*out*/;
            resourceInputs["retention"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["kmsKeyArn"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(MailManagerArchive.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a MailManagerArchive resource.
 */
export interface MailManagerArchiveArgs {
    /**
     * A unique name for the new archive.
     */
    archiveName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the KMS key for encrypting emails in the archive.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The period for retaining emails in the archive before automatic deletion.
     */
    retention?: pulumi.Input<inputs.ses.MailManagerArchiveArchiveRetentionPropertiesArgs>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
