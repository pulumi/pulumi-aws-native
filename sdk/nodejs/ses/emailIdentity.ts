// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SES::EmailIdentity
 */
export class EmailIdentity extends pulumi.CustomResource {
    /**
     * Get an existing EmailIdentity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EmailIdentity {
        return new EmailIdentity(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ses:EmailIdentity';

    /**
     * Returns true if the given object is an instance of EmailIdentity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmailIdentity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmailIdentity.__pulumiType;
    }

    /**
     * Used to associate a configuration set with an email identity.
     */
    public readonly configurationSetAttributes!: pulumi.Output<outputs.ses.EmailIdentityConfigurationSetAttributes | undefined>;
    /**
     * Used to enable or disable DKIM authentication for an email identity.
     */
    public readonly dkimAttributes!: pulumi.Output<outputs.ses.EmailIdentityDkimAttributes | undefined>;
    /**
     * The host name for the first token that you have to add to the DNS configuration for your domain.
     */
    public /*out*/ readonly dkimDnsTokenName1!: pulumi.Output<string>;
    /**
     * The host name for the second token that you have to add to the DNS configuration for your domain.
     */
    public /*out*/ readonly dkimDnsTokenName2!: pulumi.Output<string>;
    /**
     * The host name for the third token that you have to add to the DNS configuration for your domain.
     */
    public /*out*/ readonly dkimDnsTokenName3!: pulumi.Output<string>;
    /**
     * The record value for the first token that you have to add to the DNS configuration for your domain.
     */
    public /*out*/ readonly dkimDnsTokenValue1!: pulumi.Output<string>;
    /**
     * The record value for the second token that you have to add to the DNS configuration for your domain.
     */
    public /*out*/ readonly dkimDnsTokenValue2!: pulumi.Output<string>;
    /**
     * The record value for the third token that you have to add to the DNS configuration for your domain.
     */
    public /*out*/ readonly dkimDnsTokenValue3!: pulumi.Output<string>;
    /**
     * Used to configure or change the DKIM authentication settings for an email domain identity. You can use this operation to do any of the following:
     *
     * - Update the signing attributes for an identity that uses Bring Your Own DKIM (BYODKIM).
     * - Update the key length that should be used for Easy DKIM.
     * - Change from using no DKIM authentication to using Easy DKIM.
     * - Change from using no DKIM authentication to using BYODKIM.
     * - Change from using Easy DKIM to using BYODKIM.
     * - Change from using BYODKIM to using Easy DKIM.
     */
    public readonly dkimSigningAttributes!: pulumi.Output<outputs.ses.EmailIdentityDkimSigningAttributes | undefined>;
    /**
     * The email address or domain to verify.
     */
    public readonly emailIdentity!: pulumi.Output<string>;
    /**
     * Used to enable or disable feedback forwarding for an identity. This setting determines what happens when an identity is used to send an email that results in a bounce or complaint event.
     */
    public readonly feedbackAttributes!: pulumi.Output<outputs.ses.EmailIdentityFeedbackAttributes | undefined>;
    /**
     * Used to enable or disable the custom Mail-From domain configuration for an email identity.
     */
    public readonly mailFromAttributes!: pulumi.Output<outputs.ses.EmailIdentityMailFromAttributes | undefined>;

    /**
     * Create a EmailIdentity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailIdentityArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.emailIdentity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailIdentity'");
            }
            resourceInputs["configurationSetAttributes"] = args ? args.configurationSetAttributes : undefined;
            resourceInputs["dkimAttributes"] = args ? args.dkimAttributes : undefined;
            resourceInputs["dkimSigningAttributes"] = args ? args.dkimSigningAttributes : undefined;
            resourceInputs["emailIdentity"] = args ? args.emailIdentity : undefined;
            resourceInputs["feedbackAttributes"] = args ? args.feedbackAttributes : undefined;
            resourceInputs["mailFromAttributes"] = args ? args.mailFromAttributes : undefined;
            resourceInputs["dkimDnsTokenName1"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenName2"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenName3"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenValue1"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenValue2"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenValue3"] = undefined /*out*/;
        } else {
            resourceInputs["configurationSetAttributes"] = undefined /*out*/;
            resourceInputs["dkimAttributes"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenName1"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenName2"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenName3"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenValue1"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenValue2"] = undefined /*out*/;
            resourceInputs["dkimDnsTokenValue3"] = undefined /*out*/;
            resourceInputs["dkimSigningAttributes"] = undefined /*out*/;
            resourceInputs["emailIdentity"] = undefined /*out*/;
            resourceInputs["feedbackAttributes"] = undefined /*out*/;
            resourceInputs["mailFromAttributes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["emailIdentity"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(EmailIdentity.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EmailIdentity resource.
 */
export interface EmailIdentityArgs {
    /**
     * Used to associate a configuration set with an email identity.
     */
    configurationSetAttributes?: pulumi.Input<inputs.ses.EmailIdentityConfigurationSetAttributesArgs>;
    /**
     * Used to enable or disable DKIM authentication for an email identity.
     */
    dkimAttributes?: pulumi.Input<inputs.ses.EmailIdentityDkimAttributesArgs>;
    /**
     * Used to configure or change the DKIM authentication settings for an email domain identity. You can use this operation to do any of the following:
     *
     * - Update the signing attributes for an identity that uses Bring Your Own DKIM (BYODKIM).
     * - Update the key length that should be used for Easy DKIM.
     * - Change from using no DKIM authentication to using Easy DKIM.
     * - Change from using no DKIM authentication to using BYODKIM.
     * - Change from using Easy DKIM to using BYODKIM.
     * - Change from using BYODKIM to using Easy DKIM.
     */
    dkimSigningAttributes?: pulumi.Input<inputs.ses.EmailIdentityDkimSigningAttributesArgs>;
    /**
     * The email address or domain to verify.
     */
    emailIdentity: pulumi.Input<string>;
    /**
     * Used to enable or disable feedback forwarding for an identity. This setting determines what happens when an identity is used to send an email that results in a bounce or complaint event.
     */
    feedbackAttributes?: pulumi.Input<inputs.ses.EmailIdentityFeedbackAttributesArgs>;
    /**
     * Used to enable or disable the custom Mail-From domain configuration for an email identity.
     */
    mailFromAttributes?: pulumi.Input<inputs.ses.EmailIdentityMailFromAttributesArgs>;
}
