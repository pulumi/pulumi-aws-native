// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::SES::MailManagerIngressPoint Resource Type
 */
export class MailManagerIngressPoint extends pulumi.CustomResource {
    /**
     * Get an existing MailManagerIngressPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MailManagerIngressPoint {
        return new MailManagerIngressPoint(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ses:MailManagerIngressPoint';

    /**
     * Returns true if the given object is an instance of MailManagerIngressPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MailManagerIngressPoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MailManagerIngressPoint.__pulumiType;
    }

    /**
     * The DNS A Record that identifies your ingress endpoint. Configure your DNS Mail Exchange (MX) record with this value to route emails to Mail Manager.
     */
    public /*out*/ readonly aRecord!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the ingress endpoint resource.
     */
    public /*out*/ readonly ingressPointArn!: pulumi.Output<string>;
    /**
     * The configuration of the ingress endpoint resource.
     */
    public readonly ingressPointConfiguration!: pulumi.Output<outputs.ses.MailManagerIngressPointIngressPointConfiguration0Properties | outputs.ses.MailManagerIngressPointIngressPointConfiguration1Properties | undefined>;
    /**
     * The identifier of the ingress endpoint resource.
     */
    public /*out*/ readonly ingressPointId!: pulumi.Output<string>;
    /**
     * A user friendly name for an ingress endpoint resource.
     */
    public readonly ingressPointName!: pulumi.Output<string | undefined>;
    public readonly networkConfiguration!: pulumi.Output<outputs.ses.MailManagerIngressPointNetworkConfiguration0Properties | outputs.ses.MailManagerIngressPointNetworkConfiguration1Properties | undefined>;
    /**
     * The identifier of an existing rule set that you attach to an ingress endpoint resource.
     */
    public readonly ruleSetId!: pulumi.Output<string>;
    /**
     * The status of the ingress endpoint resource.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.ses.MailManagerIngressPointIngressPointStatus>;
    /**
     * The update status of an ingress endpoint.
     */
    public readonly statusToUpdate!: pulumi.Output<enums.ses.MailManagerIngressPointIngressPointStatusToUpdate | undefined>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The identifier of an existing traffic policy that you attach to an ingress endpoint resource.
     */
    public readonly trafficPolicyId!: pulumi.Output<string>;
    /**
     * The type of the ingress endpoint to create.
     */
    public readonly type!: pulumi.Output<enums.ses.MailManagerIngressPointIngressPointType>;

    /**
     * Create a MailManagerIngressPoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MailManagerIngressPointArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.ruleSetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleSetId'");
            }
            if ((!args || args.trafficPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trafficPolicyId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["ingressPointConfiguration"] = args ? args.ingressPointConfiguration : undefined;
            resourceInputs["ingressPointName"] = args ? args.ingressPointName : undefined;
            resourceInputs["networkConfiguration"] = args ? args.networkConfiguration : undefined;
            resourceInputs["ruleSetId"] = args ? args.ruleSetId : undefined;
            resourceInputs["statusToUpdate"] = args ? args.statusToUpdate : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trafficPolicyId"] = args ? args.trafficPolicyId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["aRecord"] = undefined /*out*/;
            resourceInputs["ingressPointArn"] = undefined /*out*/;
            resourceInputs["ingressPointId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["aRecord"] = undefined /*out*/;
            resourceInputs["ingressPointArn"] = undefined /*out*/;
            resourceInputs["ingressPointConfiguration"] = undefined /*out*/;
            resourceInputs["ingressPointId"] = undefined /*out*/;
            resourceInputs["ingressPointName"] = undefined /*out*/;
            resourceInputs["networkConfiguration"] = undefined /*out*/;
            resourceInputs["ruleSetId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusToUpdate"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["trafficPolicyId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["networkConfiguration", "type"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(MailManagerIngressPoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a MailManagerIngressPoint resource.
 */
export interface MailManagerIngressPointArgs {
    /**
     * The configuration of the ingress endpoint resource.
     */
    ingressPointConfiguration?: pulumi.Input<inputs.ses.MailManagerIngressPointIngressPointConfiguration0PropertiesArgs | inputs.ses.MailManagerIngressPointIngressPointConfiguration1PropertiesArgs>;
    /**
     * A user friendly name for an ingress endpoint resource.
     */
    ingressPointName?: pulumi.Input<string>;
    networkConfiguration?: pulumi.Input<inputs.ses.MailManagerIngressPointNetworkConfiguration0PropertiesArgs | inputs.ses.MailManagerIngressPointNetworkConfiguration1PropertiesArgs>;
    /**
     * The identifier of an existing rule set that you attach to an ingress endpoint resource.
     */
    ruleSetId: pulumi.Input<string>;
    /**
     * The update status of an ingress endpoint.
     */
    statusToUpdate?: pulumi.Input<enums.ses.MailManagerIngressPointIngressPointStatusToUpdate>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The identifier of an existing traffic policy that you attach to an ingress endpoint resource.
     */
    trafficPolicyId: pulumi.Input<string>;
    /**
     * The type of the ingress endpoint to create.
     */
    type: pulumi.Input<enums.ses.MailManagerIngressPointIngressPointType>;
}
