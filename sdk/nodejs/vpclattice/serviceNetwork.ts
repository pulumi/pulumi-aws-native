// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A service network is a logical boundary for a collection of services. You can associate services and VPCs with a service network.
 */
export class ServiceNetwork extends pulumi.CustomResource {
    /**
     * Get an existing ServiceNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceNetwork {
        return new ServiceNetwork(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:vpclattice:ServiceNetwork';

    /**
     * Returns true if the given object is an instance of ServiceNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceNetwork.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the service network.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The type of IAM policy.
     *
     * - `NONE` : The resource does not use an IAM policy. This is the default.
     * - `AWS_IAM` : The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.
     */
    public readonly authType!: pulumi.Output<enums.vpclattice.ServiceNetworkAuthType | undefined>;
    /**
     * The ID of the service network.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * The date and time that the service network was created, specified in ISO-8601 format.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The date and time of the last update, specified in ISO-8601 format.
     */
    public /*out*/ readonly lastUpdatedAt!: pulumi.Output<string>;
    /**
     * The name of the service network. The name must be unique to the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
     *
     * If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Specify if the service network should be enabled for sharing.
     */
    public readonly sharingConfig!: pulumi.Output<outputs.vpclattice.ServiceNetworkSharingConfig | undefined>;
    /**
     * The tags for the service network.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a ServiceNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServiceNetworkArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["authType"] = args?.authType;
            resourceInputs["name"] = args?.name;
            resourceInputs["sharingConfig"] = args?.sharingConfig;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["authType"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["sharingConfig"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ServiceNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServiceNetwork resource.
 */
export interface ServiceNetworkArgs {
    /**
     * The type of IAM policy.
     *
     * - `NONE` : The resource does not use an IAM policy. This is the default.
     * - `AWS_IAM` : The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.
     */
    authType?: pulumi.Input<enums.vpclattice.ServiceNetworkAuthType>;
    /**
     * The name of the service network. The name must be unique to the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
     *
     * If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify if the service network should be enabled for sharing.
     */
    sharingConfig?: pulumi.Input<inputs.vpclattice.ServiceNetworkSharingConfigArgs>;
    /**
     * The tags for the service network.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
