// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Creates a listener for a service. Before you start using your Amazon VPC Lattice service, you must add one or more listeners. A listener is a process that checks for connection requests to your services.
 */
export function getListener(args: GetListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetListenerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:vpclattice:getListener", {
        "arn": args.arn,
    }, opts);
}

export interface GetListenerArgs {
    /**
     * The Amazon Resource Name (ARN) of the listener.
     */
    arn: string;
}

export interface GetListenerResult {
    /**
     * The Amazon Resource Name (ARN) of the listener.
     */
    readonly arn?: string;
    /**
     * The action for the default rule. Each listener has a default rule. The default rule is used if no other rules match.
     */
    readonly defaultAction?: outputs.vpclattice.ListenerDefaultAction;
    /**
     * The ID of the listener.
     */
    readonly id?: string;
    /**
     * The Amazon Resource Name (ARN) of the service.
     */
    readonly serviceArn?: string;
    /**
     * The ID of the service.
     */
    readonly serviceId?: string;
    /**
     * The tags for the listener.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Creates a listener for a service. Before you start using your Amazon VPC Lattice service, you must add one or more listeners. A listener is a process that checks for connection requests to your services.
 */
export function getListenerOutput(args: GetListenerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetListenerResult> {
    return pulumi.output(args).apply((a: any) => getListener(a, opts))
}

export interface GetListenerOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the listener.
     */
    arn: pulumi.Input<string>;
}
