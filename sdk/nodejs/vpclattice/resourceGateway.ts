// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Creates a resource gateway for a service.
 */
export class ResourceGateway extends pulumi.CustomResource {
    /**
     * Get an existing ResourceGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourceGateway {
        return new ResourceGateway(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:vpclattice:ResourceGateway';

    /**
     * Returns true if the given object is an instance of ResourceGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceGateway.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the resource gateway.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The ID of the resource gateway.
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * The type of IP address used by the resource gateway.
     */
    public readonly ipAddressType!: pulumi.Output<enums.vpclattice.ResourceGatewayIpAddressType | undefined>;
    /**
     * The name of the resource gateway.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of one or more security groups to associate with the endpoint network interface.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * The ID of one or more subnets in which to create an endpoint network interface.
     */
    public readonly subnetIds!: pulumi.Output<string[]>;
    /**
     * The tags for the resource gateway.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ID of the VPC for the resource gateway.
     */
    public readonly vpcIdentifier!: pulumi.Output<string>;

    /**
     * Create a ResourceGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceGatewayArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.subnetIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            if (args?.vpcIdentifier === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcIdentifier'");
            }
            resourceInputs["ipAddressType"] = args?.ipAddressType;
            resourceInputs["name"] = args?.name;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["subnetIds"] = args?.subnetIds;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcIdentifier"] = args?.vpcIdentifier;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["ipAddressType"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["securityGroupIds"] = undefined /*out*/;
            resourceInputs["subnetIds"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpcIdentifier"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["ipAddressType", "name", "subnetIds[*]", "vpcIdentifier"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ResourceGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ResourceGateway resource.
 */
export interface ResourceGatewayArgs {
    /**
     * The type of IP address used by the resource gateway.
     */
    ipAddressType?: pulumi.Input<enums.vpclattice.ResourceGatewayIpAddressType>;
    /**
     * The name of the resource gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of one or more security groups to associate with the endpoint network interface.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of one or more subnets in which to create an endpoint network interface.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tags for the resource gateway.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The ID of the VPC for the resource gateway.
     */
    vpcIdentifier: pulumi.Input<string>;
}
