// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A service is any software application that can run on instances containers, or serverless functions within an account or virtual private cloud (VPC).
 */
export function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:vpclattice:getService", {
        "arn": args.arn,
    }, opts);
}

export interface GetServiceArgs {
    arn: string;
}

export interface GetServiceResult {
    readonly arn?: string;
    readonly authType?: enums.vpclattice.ServiceAuthType;
    readonly certificateArn?: string;
    readonly createdAt?: string;
    readonly dnsEntry?: outputs.vpclattice.ServiceDnsEntry;
    readonly id?: string;
    readonly lastUpdatedAt?: string;
    readonly status?: enums.vpclattice.ServiceStatus;
    readonly tags?: outputs.Tag[];
}
/**
 * A service is any software application that can run on instances containers, or serverless functions within an account or virtual private cloud (VPC).
 */
export function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult> {
    return pulumi.output(args).apply((a: any) => getService(a, opts))
}

export interface GetServiceOutputArgs {
    arn: pulumi.Input<string>;
}
