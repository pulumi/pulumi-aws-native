// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Deadline::Farm Resource Type
 */
export class Farm extends pulumi.CustomResource {
    /**
     * Get an existing Farm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Farm {
        return new Farm(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:deadline:Farm';

    /**
     * Returns true if the given object is an instance of Farm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Farm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Farm.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) assigned to the farm.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * A description of the farm that helps identify what the farm is used for.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the farm.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The farm ID.
     */
    public /*out*/ readonly farmId!: pulumi.Output<string>;
    /**
     * The ARN for the KMS key.
     */
    public readonly kmsKeyArn!: pulumi.Output<string | undefined>;

    /**
     * Create a Farm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FarmArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["farmId"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["farmId"] = undefined /*out*/;
            resourceInputs["kmsKeyArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["kmsKeyArn"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Farm.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Farm resource.
 */
export interface FarmArgs {
    /**
     * A description of the farm that helps identify what the farm is used for.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the farm.
     */
    displayName: pulumi.Input<string>;
    /**
     * The ARN for the KMS key.
     */
    kmsKeyArn?: pulumi.Input<string>;
}
