// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FarmArgs } from "./farm";
export type Farm = import("./farm").Farm;
export const Farm: typeof import("./farm").Farm = null as any;
utilities.lazyLoad(exports, ["Farm"], () => require("./farm"));

export { FleetArgs } from "./fleet";
export type Fleet = import("./fleet").Fleet;
export const Fleet: typeof import("./fleet").Fleet = null as any;
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));

export { GetFarmArgs, GetFarmResult, GetFarmOutputArgs } from "./getFarm";
export const getFarm: typeof import("./getFarm").getFarm = null as any;
export const getFarmOutput: typeof import("./getFarm").getFarmOutput = null as any;
utilities.lazyLoad(exports, ["getFarm","getFarmOutput"], () => require("./getFarm"));

export { GetFleetArgs, GetFleetResult, GetFleetOutputArgs } from "./getFleet";
export const getFleet: typeof import("./getFleet").getFleet = null as any;
export const getFleetOutput: typeof import("./getFleet").getFleetOutput = null as any;
utilities.lazyLoad(exports, ["getFleet","getFleetOutput"], () => require("./getFleet"));

export { GetLicenseEndpointArgs, GetLicenseEndpointResult, GetLicenseEndpointOutputArgs } from "./getLicenseEndpoint";
export const getLicenseEndpoint: typeof import("./getLicenseEndpoint").getLicenseEndpoint = null as any;
export const getLicenseEndpointOutput: typeof import("./getLicenseEndpoint").getLicenseEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getLicenseEndpoint","getLicenseEndpointOutput"], () => require("./getLicenseEndpoint"));

export { GetMeteredProductArgs, GetMeteredProductResult, GetMeteredProductOutputArgs } from "./getMeteredProduct";
export const getMeteredProduct: typeof import("./getMeteredProduct").getMeteredProduct = null as any;
export const getMeteredProductOutput: typeof import("./getMeteredProduct").getMeteredProductOutput = null as any;
utilities.lazyLoad(exports, ["getMeteredProduct","getMeteredProductOutput"], () => require("./getMeteredProduct"));

export { GetQueueArgs, GetQueueResult, GetQueueOutputArgs } from "./getQueue";
export const getQueue: typeof import("./getQueue").getQueue = null as any;
export const getQueueOutput: typeof import("./getQueue").getQueueOutput = null as any;
utilities.lazyLoad(exports, ["getQueue","getQueueOutput"], () => require("./getQueue"));

export { GetQueueEnvironmentArgs, GetQueueEnvironmentResult, GetQueueEnvironmentOutputArgs } from "./getQueueEnvironment";
export const getQueueEnvironment: typeof import("./getQueueEnvironment").getQueueEnvironment = null as any;
export const getQueueEnvironmentOutput: typeof import("./getQueueEnvironment").getQueueEnvironmentOutput = null as any;
utilities.lazyLoad(exports, ["getQueueEnvironment","getQueueEnvironmentOutput"], () => require("./getQueueEnvironment"));

export { GetStorageProfileArgs, GetStorageProfileResult, GetStorageProfileOutputArgs } from "./getStorageProfile";
export const getStorageProfile: typeof import("./getStorageProfile").getStorageProfile = null as any;
export const getStorageProfileOutput: typeof import("./getStorageProfile").getStorageProfileOutput = null as any;
utilities.lazyLoad(exports, ["getStorageProfile","getStorageProfileOutput"], () => require("./getStorageProfile"));

export { LicenseEndpointArgs } from "./licenseEndpoint";
export type LicenseEndpoint = import("./licenseEndpoint").LicenseEndpoint;
export const LicenseEndpoint: typeof import("./licenseEndpoint").LicenseEndpoint = null as any;
utilities.lazyLoad(exports, ["LicenseEndpoint"], () => require("./licenseEndpoint"));

export { MeteredProductArgs } from "./meteredProduct";
export type MeteredProduct = import("./meteredProduct").MeteredProduct;
export const MeteredProduct: typeof import("./meteredProduct").MeteredProduct = null as any;
utilities.lazyLoad(exports, ["MeteredProduct"], () => require("./meteredProduct"));

export { QueueArgs } from "./queue";
export type Queue = import("./queue").Queue;
export const Queue: typeof import("./queue").Queue = null as any;
utilities.lazyLoad(exports, ["Queue"], () => require("./queue"));

export { QueueEnvironmentArgs } from "./queueEnvironment";
export type QueueEnvironment = import("./queueEnvironment").QueueEnvironment;
export const QueueEnvironment: typeof import("./queueEnvironment").QueueEnvironment = null as any;
utilities.lazyLoad(exports, ["QueueEnvironment"], () => require("./queueEnvironment"));

export { QueueFleetAssociationArgs } from "./queueFleetAssociation";
export type QueueFleetAssociation = import("./queueFleetAssociation").QueueFleetAssociation;
export const QueueFleetAssociation: typeof import("./queueFleetAssociation").QueueFleetAssociation = null as any;
utilities.lazyLoad(exports, ["QueueFleetAssociation"], () => require("./queueFleetAssociation"));

export { StorageProfileArgs } from "./storageProfile";
export type StorageProfile = import("./storageProfile").StorageProfile;
export const StorageProfile: typeof import("./storageProfile").StorageProfile = null as any;
utilities.lazyLoad(exports, ["StorageProfile"], () => require("./storageProfile"));


// Export enums:
export * from "../types/enums/deadline";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:deadline:Farm":
                return new Farm(name, <any>undefined, { urn })
            case "aws-native:deadline:Fleet":
                return new Fleet(name, <any>undefined, { urn })
            case "aws-native:deadline:LicenseEndpoint":
                return new LicenseEndpoint(name, <any>undefined, { urn })
            case "aws-native:deadline:MeteredProduct":
                return new MeteredProduct(name, <any>undefined, { urn })
            case "aws-native:deadline:Queue":
                return new Queue(name, <any>undefined, { urn })
            case "aws-native:deadline:QueueEnvironment":
                return new QueueEnvironment(name, <any>undefined, { urn })
            case "aws-native:deadline:QueueFleetAssociation":
                return new QueueFleetAssociation(name, <any>undefined, { urn })
            case "aws-native:deadline:StorageProfile":
                return new StorageProfile(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "deadline", _module)
