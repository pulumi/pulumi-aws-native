// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Deadline::Limit Resource Type
 */
export function getLimit(args: GetLimitArgs, opts?: pulumi.InvokeOptions): Promise<GetLimitResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:deadline:getLimit", {
        "farmId": args.farmId,
        "limitId": args.limitId,
    }, opts);
}

export interface GetLimitArgs {
    /**
     * The unique identifier of the farm that contains the limit.
     */
    farmId: string;
    /**
     * The unique identifier of the limit.
     */
    limitId: string;
}

export interface GetLimitResult {
    /**
     * The number of resources from the limit that are being used by jobs. The result is delayed and may not be the count at the time that you called the operation.
     */
    readonly currentCount?: number;
    /**
     * A description of the limit. A clear description helps you identify the purpose of the limit.
     *
     * > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
     */
    readonly description?: string;
    /**
     * The name of the limit used in lists to identify the limit.
     *
     * > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
     */
    readonly displayName?: string;
    /**
     * The unique identifier of the limit.
     */
    readonly limitId?: string;
    /**
     * The maximum number of resources constrained by this limit. When all of the resources are in use, steps that require the limit won't be scheduled until the resource is available.
     *
     * The `maxValue` must not be 0. If the value is -1, there is no restriction on the number of resources that can be acquired for this limit.
     */
    readonly maxCount?: number;
}
/**
 * Definition of AWS::Deadline::Limit Resource Type
 */
export function getLimitOutput(args: GetLimitOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLimitResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:deadline:getLimit", {
        "farmId": args.farmId,
        "limitId": args.limitId,
    }, opts);
}

export interface GetLimitOutputArgs {
    /**
     * The unique identifier of the farm that contains the limit.
     */
    farmId: pulumi.Input<string>;
    /**
     * The unique identifier of the limit.
     */
    limitId: pulumi.Input<string>;
}
