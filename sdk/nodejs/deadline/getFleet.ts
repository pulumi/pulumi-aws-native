// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Deadline::Fleet Resource Type
 */
export function getFleet(args: GetFleetArgs, opts?: pulumi.InvokeOptions): Promise<GetFleetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:deadline:getFleet", {
        "arn": args.arn,
    }, opts);
}

export interface GetFleetArgs {
    /**
     * The Amazon Resource Name (ARN) assigned to the fleet.
     */
    arn: string;
}

export interface GetFleetResult {
    /**
     * The Amazon Resource Name (ARN) assigned to the fleet.
     */
    readonly arn?: string;
    readonly capabilities?: outputs.deadline.FleetCapabilities;
    /**
     * The configuration details for the fleet.
     */
    readonly configuration?: outputs.deadline.FleetConfiguration0Properties | outputs.deadline.FleetConfiguration1Properties;
    /**
     * A description that helps identify what the fleet is used for.
     */
    readonly description?: string;
    /**
     * The display name of the fleet summary to update.
     *
     * > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
     */
    readonly displayName?: string;
    /**
     * The fleet ID.
     */
    readonly fleetId?: string;
    /**
     * The maximum number of workers specified in the fleet.
     */
    readonly maxWorkerCount?: number;
    /**
     * The minimum number of workers in the fleet.
     */
    readonly minWorkerCount?: number;
    /**
     * The IAM role that workers in the fleet use when processing jobs.
     */
    readonly roleArn?: string;
    /**
     * The status of the fleet.
     */
    readonly status?: enums.deadline.FleetStatus;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The number of workers in the fleet summary.
     */
    readonly workerCount?: number;
}
/**
 * Definition of AWS::Deadline::Fleet Resource Type
 */
export function getFleetOutput(args: GetFleetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFleetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:deadline:getFleet", {
        "arn": args.arn,
    }, opts);
}

export interface GetFleetOutputArgs {
    /**
     * The Amazon Resource Name (ARN) assigned to the fleet.
     */
    arn: pulumi.Input<string>;
}
