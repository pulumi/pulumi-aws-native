// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Deadline::Monitor Resource Type
 */
export function getMonitor(args: GetMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:deadline:getMonitor", {
        "arn": args.arn,
    }, opts);
}

export interface GetMonitorArgs {
    /**
     * The Amazon Resource Name (ARN) of the monitor.
     */
    arn: string;
}

export interface GetMonitorResult {
    /**
     * The Amazon Resource Name (ARN) of the monitor.
     */
    readonly arn?: string;
    /**
     * The name of the monitor that displays on the Deadline Cloud console.
     *
     * > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
     */
    readonly displayName?: string;
    /**
     * The Amazon Resource Name (ARN) that the IAM Identity Center assigned to the monitor when it was created.
     */
    readonly identityCenterApplicationArn?: string;
    /**
     * The unique identifier for the monitor.
     */
    readonly monitorId?: string;
    /**
     * The Amazon Resource Name (ARN) of the IAM role for the monitor. Users of the monitor use this role to access Deadline Cloud resources.
     */
    readonly roleArn?: string;
    /**
     * The subdomain used for the monitor URL. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.
     */
    readonly subdomain?: string;
    /**
     * The complete URL of the monitor. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.
     */
    readonly url?: string;
}
/**
 * Definition of AWS::Deadline::Monitor Resource Type
 */
export function getMonitorOutput(args: GetMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorResult> {
    return pulumi.output(args).apply((a: any) => getMonitor(a, opts))
}

export interface GetMonitorOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the monitor.
     */
    arn: pulumi.Input<string>;
}
