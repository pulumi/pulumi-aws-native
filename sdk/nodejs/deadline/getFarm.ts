// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Deadline::Farm Resource Type
 */
export function getFarm(args: GetFarmArgs, opts?: pulumi.InvokeOptions): Promise<GetFarmResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:deadline:getFarm", {
        "arn": args.arn,
    }, opts);
}

export interface GetFarmArgs {
    /**
     * The Amazon Resource Name (ARN) assigned to the farm.
     */
    arn: string;
}

export interface GetFarmResult {
    /**
     * The Amazon Resource Name (ARN) assigned to the farm.
     */
    readonly arn?: string;
    /**
     * A description of the farm that helps identify what the farm is used for.
     */
    readonly description?: string;
    /**
     * The display name of the farm.
     *
     * > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
     */
    readonly displayName?: string;
    /**
     * The farm ID.
     */
    readonly farmId?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Definition of AWS::Deadline::Farm Resource Type
 */
export function getFarmOutput(args: GetFarmOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFarmResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:deadline:getFarm", {
        "arn": args.arn,
    }, opts);
}

export interface GetFarmOutputArgs {
    /**
     * The Amazon Resource Name (ARN) assigned to the farm.
     */
    arn: pulumi.Input<string>;
}
