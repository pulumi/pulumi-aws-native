// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Definition of AWS::QBusiness::Permission Resource Type
 */
export class Permission extends pulumi.CustomResource {
    /**
     * Get an existing Permission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Permission {
        return new Permission(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:qbusiness:Permission';

    /**
     * Returns true if the given object is an instance of Permission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Permission {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Permission.__pulumiType;
    }

    public readonly actions!: pulumi.Output<string[]>;
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * Provides user and group information used for filtering documents to use for generating Amazon Q Business conversation responses.
     */
    public readonly principal!: pulumi.Output<string>;
    public readonly statementId!: pulumi.Output<string>;

    /**
     * Create a Permission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PermissionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.actions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actions'");
            }
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.principal === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principal'");
            }
            if ((!args || args.statementId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'statementId'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["principal"] = args ? args.principal : undefined;
            resourceInputs["statementId"] = args ? args.statementId : undefined;
        } else {
            resourceInputs["actions"] = undefined /*out*/;
            resourceInputs["applicationId"] = undefined /*out*/;
            resourceInputs["principal"] = undefined /*out*/;
            resourceInputs["statementId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["actions[*]", "applicationId", "principal", "statementId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Permission.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Permission resource.
 */
export interface PermissionArgs {
    actions: pulumi.Input<pulumi.Input<string>[]>;
    applicationId: pulumi.Input<string>;
    /**
     * Provides user and group information used for filtering documents to use for generating Amazon Q Business conversation responses.
     */
    principal: pulumi.Input<string>;
    statementId: pulumi.Input<string>;
}
