// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::QBusiness::WebExperience Resource Type
 */
export function getWebExperience(args: GetWebExperienceArgs, opts?: pulumi.InvokeOptions): Promise<GetWebExperienceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:qbusiness:getWebExperience", {
        "applicationId": args.applicationId,
        "webExperienceId": args.webExperienceId,
    }, opts);
}

export interface GetWebExperienceArgs {
    applicationId: string;
    webExperienceId: string;
}

export interface GetWebExperienceResult {
    readonly createdAt?: string;
    readonly defaultEndpoint?: string;
    readonly roleArn?: string;
    readonly samplePromptsControlMode?: enums.qbusiness.WebExperienceSamplePromptsControlMode;
    readonly status?: enums.qbusiness.WebExperienceStatus;
    readonly subtitle?: string;
    readonly tags?: outputs.Tag[];
    readonly title?: string;
    readonly updatedAt?: string;
    readonly webExperienceArn?: string;
    readonly webExperienceId?: string;
    readonly welcomeMessage?: string;
}
/**
 * Definition of AWS::QBusiness::WebExperience Resource Type
 */
export function getWebExperienceOutput(args: GetWebExperienceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebExperienceResult> {
    return pulumi.output(args).apply((a: any) => getWebExperience(a, opts))
}

export interface GetWebExperienceOutputArgs {
    applicationId: pulumi.Input<string>;
    webExperienceId: pulumi.Input<string>;
}
