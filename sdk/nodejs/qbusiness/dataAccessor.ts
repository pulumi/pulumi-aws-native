// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::QBusiness::DataAccessor Resource Type
 */
export class DataAccessor extends pulumi.CustomResource {
    /**
     * Get an existing DataAccessor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataAccessor {
        return new DataAccessor(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:qbusiness:DataAccessor';

    /**
     * Returns true if the given object is an instance of DataAccessor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataAccessor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataAccessor.__pulumiType;
    }

    /**
     * A list of action configurations specifying the allowed actions and any associated filters.
     */
    declare public readonly actionConfigurations: pulumi.Output<outputs.qbusiness.DataAccessorActionConfiguration[]>;
    /**
     * The unique identifier of the Amazon Q Business application.
     */
    declare public readonly applicationId: pulumi.Output<string>;
    /**
     * The authentication configuration details for the data accessor. This specifies how the ISV authenticates when accessing data through this data accessor.
     */
    declare public readonly authenticationDetail: pulumi.Output<outputs.qbusiness.DataAccessorAuthenticationDetail | undefined>;
    /**
     * The timestamp when the data accessor was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the data accessor.
     */
    declare public /*out*/ readonly dataAccessorArn: pulumi.Output<string>;
    /**
     * The unique identifier of the data accessor.
     */
    declare public /*out*/ readonly dataAccessorId: pulumi.Output<string>;
    /**
     * The friendly name of the data accessor.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the associated IAM Identity Center application.
     */
    declare public /*out*/ readonly idcApplicationArn: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role for the ISV associated with this data accessor.
     */
    declare public readonly principal: pulumi.Output<string>;
    /**
     * The tags to associate with the data accessor.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The timestamp when the data accessor was last updated.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a DataAccessor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataAccessorArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.actionConfigurations === undefined && !opts.urn) {
                throw new Error("Missing required property 'actionConfigurations'");
            }
            if (args?.applicationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.principal === undefined && !opts.urn) {
                throw new Error("Missing required property 'principal'");
            }
            resourceInputs["actionConfigurations"] = args?.actionConfigurations;
            resourceInputs["applicationId"] = args?.applicationId;
            resourceInputs["authenticationDetail"] = args?.authenticationDetail;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["principal"] = args?.principal;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dataAccessorArn"] = undefined /*out*/;
            resourceInputs["dataAccessorId"] = undefined /*out*/;
            resourceInputs["idcApplicationArn"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        } else {
            resourceInputs["actionConfigurations"] = undefined /*out*/;
            resourceInputs["applicationId"] = undefined /*out*/;
            resourceInputs["authenticationDetail"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dataAccessorArn"] = undefined /*out*/;
            resourceInputs["dataAccessorId"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["idcApplicationArn"] = undefined /*out*/;
            resourceInputs["principal"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["applicationId", "principal"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DataAccessor.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DataAccessor resource.
 */
export interface DataAccessorArgs {
    /**
     * A list of action configurations specifying the allowed actions and any associated filters.
     */
    actionConfigurations: pulumi.Input<pulumi.Input<inputs.qbusiness.DataAccessorActionConfigurationArgs>[]>;
    /**
     * The unique identifier of the Amazon Q Business application.
     */
    applicationId: pulumi.Input<string>;
    /**
     * The authentication configuration details for the data accessor. This specifies how the ISV authenticates when accessing data through this data accessor.
     */
    authenticationDetail?: pulumi.Input<inputs.qbusiness.DataAccessorAuthenticationDetailArgs>;
    /**
     * The friendly name of the data accessor.
     */
    displayName: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role for the ISV associated with this data accessor.
     */
    principal: pulumi.Input<string>;
    /**
     * The tags to associate with the data accessor.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
