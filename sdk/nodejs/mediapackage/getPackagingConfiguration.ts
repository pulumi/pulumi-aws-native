// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::MediaPackage::PackagingConfiguration
 */
export function getPackagingConfiguration(args: GetPackagingConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetPackagingConfigurationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:mediapackage:getPackagingConfiguration", {
        "id": args.id,
    }, opts);
}

export interface GetPackagingConfigurationArgs {
    /**
     * The ID of the PackagingConfiguration.
     */
    id: string;
}

export interface GetPackagingConfigurationResult {
    /**
     * The ARN of the PackagingConfiguration.
     */
    readonly arn?: string;
    /**
     * A CMAF packaging configuration.
     */
    readonly cmafPackage?: outputs.mediapackage.PackagingConfigurationCmafPackage;
    /**
     * A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
     */
    readonly dashPackage?: outputs.mediapackage.PackagingConfigurationDashPackage;
    /**
     * An HTTP Live Streaming (HLS) packaging configuration.
     */
    readonly hlsPackage?: outputs.mediapackage.PackagingConfigurationHlsPackage;
    /**
     * A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
     */
    readonly mssPackage?: outputs.mediapackage.PackagingConfigurationMssPackage;
    /**
     * The ID of a PackagingGroup.
     */
    readonly packagingGroupId?: string;
    /**
     * A collection of tags associated with a resource
     */
    readonly tags?: outputs.mediapackage.PackagingConfigurationTag[];
}

export function getPackagingConfigurationOutput(args: GetPackagingConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackagingConfigurationResult> {
    return pulumi.output(args).apply(a => getPackagingConfiguration(a, opts))
}

export interface GetPackagingConfigurationOutputArgs {
    /**
     * The ID of the PackagingConfiguration.
     */
    id: pulumi.Input<string>;
}
