// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccessorArgs } from "./accessor";
export type Accessor = import("./accessor").Accessor;
export const Accessor: typeof import("./accessor").Accessor = null as any;
utilities.lazyLoad(exports, ["Accessor"], () => require("./accessor"));

export { GetAccessorArgs, GetAccessorResult, GetAccessorOutputArgs } from "./getAccessor";
export const getAccessor: typeof import("./getAccessor").getAccessor = null as any;
export const getAccessorOutput: typeof import("./getAccessor").getAccessorOutput = null as any;
utilities.lazyLoad(exports, ["getAccessor","getAccessorOutput"], () => require("./getAccessor"));

export { GetMemberArgs, GetMemberResult, GetMemberOutputArgs } from "./getMember";
export const getMember: typeof import("./getMember").getMember = null as any;
export const getMemberOutput: typeof import("./getMember").getMemberOutput = null as any;
utilities.lazyLoad(exports, ["getMember","getMemberOutput"], () => require("./getMember"));

export { GetNodeArgs, GetNodeResult, GetNodeOutputArgs } from "./getNode";
export const getNode: typeof import("./getNode").getNode = null as any;
export const getNodeOutput: typeof import("./getNode").getNodeOutput = null as any;
utilities.lazyLoad(exports, ["getNode","getNodeOutput"], () => require("./getNode"));

export { MemberArgs } from "./member";
export type Member = import("./member").Member;
export const Member: typeof import("./member").Member = null as any;
utilities.lazyLoad(exports, ["Member"], () => require("./member"));

export { NodeArgs } from "./node";
export type Node = import("./node").Node;
export const Node: typeof import("./node").Node = null as any;
utilities.lazyLoad(exports, ["Node"], () => require("./node"));


// Export enums:
export * from "../types/enums/managedblockchain";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:managedblockchain:Accessor":
                return new Accessor(name, <any>undefined, { urn })
            case "aws-native:managedblockchain:Member":
                return new Member(name, <any>undefined, { urn })
            case "aws-native:managedblockchain:Node":
                return new Node(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "managedblockchain", _module)
