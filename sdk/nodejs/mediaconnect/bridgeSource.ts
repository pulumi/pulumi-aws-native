// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::MediaConnect::BridgeSource
 */
export class BridgeSource extends pulumi.CustomResource {
    /**
     * Get an existing BridgeSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BridgeSource {
        return new BridgeSource(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:mediaconnect:BridgeSource';

    /**
     * Returns true if the given object is an instance of BridgeSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BridgeSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BridgeSource.__pulumiType;
    }

    /**
     * The Amazon Resource Number (ARN) of the bridge.
     */
    public readonly bridgeArn!: pulumi.Output<string>;
    public readonly flowSource!: pulumi.Output<outputs.mediaconnect.BridgeSourceBridgeFlowSource | undefined>;
    /**
     * The name of the source.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly networkSource!: pulumi.Output<outputs.mediaconnect.BridgeSourceBridgeNetworkSource | undefined>;

    /**
     * Create a BridgeSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BridgeSourceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.bridgeArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bridgeArn'");
            }
            resourceInputs["bridgeArn"] = args ? args.bridgeArn : undefined;
            resourceInputs["flowSource"] = args ? args.flowSource : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkSource"] = args ? args.networkSource : undefined;
        } else {
            resourceInputs["bridgeArn"] = undefined /*out*/;
            resourceInputs["flowSource"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkSource"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BridgeSource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a BridgeSource resource.
 */
export interface BridgeSourceArgs {
    /**
     * The Amazon Resource Number (ARN) of the bridge.
     */
    bridgeArn: pulumi.Input<string>;
    flowSource?: pulumi.Input<inputs.mediaconnect.BridgeSourceBridgeFlowSourceArgs>;
    /**
     * The name of the source.
     */
    name?: pulumi.Input<string>;
    networkSource?: pulumi.Input<inputs.mediaconnect.BridgeSourceBridgeNetworkSourceArgs>;
}
