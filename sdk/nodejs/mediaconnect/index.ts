// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BridgeArgs } from "./bridge";
export type Bridge = import("./bridge").Bridge;
export const Bridge: typeof import("./bridge").Bridge = null as any;
utilities.lazyLoad(exports, ["Bridge"], () => require("./bridge"));

export { BridgeOutputArgs } from "./bridgeOutput";
export type BridgeOutput = import("./bridgeOutput").BridgeOutput;
export const BridgeOutput: typeof import("./bridgeOutput").BridgeOutput = null as any;
utilities.lazyLoad(exports, ["BridgeOutput"], () => require("./bridgeOutput"));

export { BridgeSourceArgs } from "./bridgeSource";
export type BridgeSource = import("./bridgeSource").BridgeSource;
export const BridgeSource: typeof import("./bridgeSource").BridgeSource = null as any;
utilities.lazyLoad(exports, ["BridgeSource"], () => require("./bridgeSource"));

export { FlowArgs } from "./flow";
export type Flow = import("./flow").Flow;
export const Flow: typeof import("./flow").Flow = null as any;
utilities.lazyLoad(exports, ["Flow"], () => require("./flow"));

export { FlowEntitlementArgs } from "./flowEntitlement";
export type FlowEntitlement = import("./flowEntitlement").FlowEntitlement;
export const FlowEntitlement: typeof import("./flowEntitlement").FlowEntitlement = null as any;
utilities.lazyLoad(exports, ["FlowEntitlement"], () => require("./flowEntitlement"));

export { FlowOutputArgs } from "./flowOutput";
export type FlowOutput = import("./flowOutput").FlowOutput;
export const FlowOutput: typeof import("./flowOutput").FlowOutput = null as any;
utilities.lazyLoad(exports, ["FlowOutput"], () => require("./flowOutput"));

export { FlowSourceArgs } from "./flowSource";
export type FlowSource = import("./flowSource").FlowSource;
export const FlowSource: typeof import("./flowSource").FlowSource = null as any;
utilities.lazyLoad(exports, ["FlowSource"], () => require("./flowSource"));

export { FlowVpcInterfaceArgs } from "./flowVpcInterface";
export type FlowVpcInterface = import("./flowVpcInterface").FlowVpcInterface;
export const FlowVpcInterface: typeof import("./flowVpcInterface").FlowVpcInterface = null as any;
utilities.lazyLoad(exports, ["FlowVpcInterface"], () => require("./flowVpcInterface"));

export { GatewayArgs } from "./gateway";
export type Gateway = import("./gateway").Gateway;
export const Gateway: typeof import("./gateway").Gateway = null as any;
utilities.lazyLoad(exports, ["Gateway"], () => require("./gateway"));

export { GetBridgeArgs, GetBridgeResult, GetBridgeOutputArgs } from "./getBridge";
export const getBridge: typeof import("./getBridge").getBridge = null as any;
export const getBridgeOutput: typeof import("./getBridge").getBridgeOutput = null as any;
utilities.lazyLoad(exports, ["getBridge","getBridgeOutput"], () => require("./getBridge"));

export { GetBridgeOutputArgs, GetBridgeOutputResult, GetBridgeOutputOutputArgs } from "./getBridgeOutput";
export const getBridgeOutput: typeof import("./getBridgeOutput").getBridgeOutput = null as any;
export const getBridgeOutputOutput: typeof import("./getBridgeOutput").getBridgeOutputOutput = null as any;
utilities.lazyLoad(exports, ["getBridgeOutput","getBridgeOutputOutput"], () => require("./getBridgeOutput"));

export { GetBridgeSourceArgs, GetBridgeSourceResult, GetBridgeSourceOutputArgs } from "./getBridgeSource";
export const getBridgeSource: typeof import("./getBridgeSource").getBridgeSource = null as any;
export const getBridgeSourceOutput: typeof import("./getBridgeSource").getBridgeSourceOutput = null as any;
utilities.lazyLoad(exports, ["getBridgeSource","getBridgeSourceOutput"], () => require("./getBridgeSource"));

export { GetFlowArgs, GetFlowResult, GetFlowOutputArgs } from "./getFlow";
export const getFlow: typeof import("./getFlow").getFlow = null as any;
export const getFlowOutput: typeof import("./getFlow").getFlowOutput = null as any;
utilities.lazyLoad(exports, ["getFlow","getFlowOutput"], () => require("./getFlow"));

export { GetFlowEntitlementArgs, GetFlowEntitlementResult, GetFlowEntitlementOutputArgs } from "./getFlowEntitlement";
export const getFlowEntitlement: typeof import("./getFlowEntitlement").getFlowEntitlement = null as any;
export const getFlowEntitlementOutput: typeof import("./getFlowEntitlement").getFlowEntitlementOutput = null as any;
utilities.lazyLoad(exports, ["getFlowEntitlement","getFlowEntitlementOutput"], () => require("./getFlowEntitlement"));

export { GetFlowSourceArgs, GetFlowSourceResult, GetFlowSourceOutputArgs } from "./getFlowSource";
export const getFlowSource: typeof import("./getFlowSource").getFlowSource = null as any;
export const getFlowSourceOutput: typeof import("./getFlowSource").getFlowSourceOutput = null as any;
utilities.lazyLoad(exports, ["getFlowSource","getFlowSourceOutput"], () => require("./getFlowSource"));

export { GetFlowVpcInterfaceArgs, GetFlowVpcInterfaceResult, GetFlowVpcInterfaceOutputArgs } from "./getFlowVpcInterface";
export const getFlowVpcInterface: typeof import("./getFlowVpcInterface").getFlowVpcInterface = null as any;
export const getFlowVpcInterfaceOutput: typeof import("./getFlowVpcInterface").getFlowVpcInterfaceOutput = null as any;
utilities.lazyLoad(exports, ["getFlowVpcInterface","getFlowVpcInterfaceOutput"], () => require("./getFlowVpcInterface"));

export { GetGatewayArgs, GetGatewayResult, GetGatewayOutputArgs } from "./getGateway";
export const getGateway: typeof import("./getGateway").getGateway = null as any;
export const getGatewayOutput: typeof import("./getGateway").getGatewayOutput = null as any;
utilities.lazyLoad(exports, ["getGateway","getGatewayOutput"], () => require("./getGateway"));


// Export enums:
export * from "../types/enums/mediaconnect";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:mediaconnect:Bridge":
                return new Bridge(name, <any>undefined, { urn })
            case "aws-native:mediaconnect:BridgeOutput":
                return new BridgeOutput(name, <any>undefined, { urn })
            case "aws-native:mediaconnect:BridgeSource":
                return new BridgeSource(name, <any>undefined, { urn })
            case "aws-native:mediaconnect:Flow":
                return new Flow(name, <any>undefined, { urn })
            case "aws-native:mediaconnect:FlowEntitlement":
                return new FlowEntitlement(name, <any>undefined, { urn })
            case "aws-native:mediaconnect:FlowOutput":
                return new FlowOutput(name, <any>undefined, { urn })
            case "aws-native:mediaconnect:FlowSource":
                return new FlowSource(name, <any>undefined, { urn })
            case "aws-native:mediaconnect:FlowVpcInterface":
                return new FlowVpcInterface(name, <any>undefined, { urn })
            case "aws-native:mediaconnect:Gateway":
                return new Gateway(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "mediaconnect", _module)
