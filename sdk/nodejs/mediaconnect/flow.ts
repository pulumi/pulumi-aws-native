// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::MediaConnect::Flow
 */
export class Flow extends pulumi.CustomResource {
    /**
     * Get an existing Flow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Flow {
        return new Flow(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:mediaconnect:Flow';

    /**
     * Returns true if the given object is an instance of Flow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Flow {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Flow.__pulumiType;
    }

    /**
     * The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
     */
    public readonly availabilityZone!: pulumi.Output<string | undefined>;
    /**
     * The IP address from which video will be sent to output destinations.
     */
    public /*out*/ readonly egressIp!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    public /*out*/ readonly flowArn!: pulumi.Output<string>;
    /**
     * The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
     */
    public /*out*/ readonly flowAvailabilityZone!: pulumi.Output<string>;
    /**
     * A prefix for the names of the NDI sources that the flow creates.(ReadOnly)
     */
    public /*out*/ readonly flowNdiMachineName!: pulumi.Output<string>;
    /**
     * Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow.
     */
    public readonly flowSize!: pulumi.Output<enums.mediaconnect.FlowSize | undefined>;
    /**
     * The maintenance settings you want to use for the flow.
     */
    public readonly maintenance!: pulumi.Output<outputs.mediaconnect.FlowMaintenance | undefined>;
    /**
     * The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
     */
    public readonly mediaStreams!: pulumi.Output<outputs.mediaconnect.FlowMediaStream[] | undefined>;
    /**
     * The name of the flow.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.
     */
    public readonly ndiConfig!: pulumi.Output<outputs.mediaconnect.FlowNdiConfig | undefined>;
    /**
     * The source of the flow.
     */
    public readonly source!: pulumi.Output<outputs.mediaconnect.FlowSource>;
    /**
     * The source failover config of the flow.
     */
    public readonly sourceFailoverConfig!: pulumi.Output<outputs.mediaconnect.FlowFailoverConfig | undefined>;
    /**
     * The source monitoring config of the flow.
     */
    public readonly sourceMonitoringConfig!: pulumi.Output<outputs.mediaconnect.FlowSourceMonitoringConfig | undefined>;
    /**
     * The VPC interfaces that you added to this flow.
     */
    public readonly vpcInterfaces!: pulumi.Output<outputs.mediaconnect.FlowVpcInterface[] | undefined>;

    /**
     * Create a Flow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.source === undefined && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["availabilityZone"] = args?.availabilityZone;
            resourceInputs["flowSize"] = args?.flowSize;
            resourceInputs["maintenance"] = args?.maintenance;
            resourceInputs["mediaStreams"] = args?.mediaStreams;
            resourceInputs["name"] = args?.name;
            resourceInputs["ndiConfig"] = args?.ndiConfig;
            resourceInputs["source"] = args?.source;
            resourceInputs["sourceFailoverConfig"] = args?.sourceFailoverConfig;
            resourceInputs["sourceMonitoringConfig"] = args?.sourceMonitoringConfig;
            resourceInputs["vpcInterfaces"] = args?.vpcInterfaces;
            resourceInputs["egressIp"] = undefined /*out*/;
            resourceInputs["flowArn"] = undefined /*out*/;
            resourceInputs["flowAvailabilityZone"] = undefined /*out*/;
            resourceInputs["flowNdiMachineName"] = undefined /*out*/;
        } else {
            resourceInputs["availabilityZone"] = undefined /*out*/;
            resourceInputs["egressIp"] = undefined /*out*/;
            resourceInputs["flowArn"] = undefined /*out*/;
            resourceInputs["flowAvailabilityZone"] = undefined /*out*/;
            resourceInputs["flowNdiMachineName"] = undefined /*out*/;
            resourceInputs["flowSize"] = undefined /*out*/;
            resourceInputs["maintenance"] = undefined /*out*/;
            resourceInputs["mediaStreams"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["ndiConfig"] = undefined /*out*/;
            resourceInputs["source"] = undefined /*out*/;
            resourceInputs["sourceFailoverConfig"] = undefined /*out*/;
            resourceInputs["sourceMonitoringConfig"] = undefined /*out*/;
            resourceInputs["vpcInterfaces"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["availabilityZone", "name", "source.name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Flow.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Flow resource.
 */
export interface FlowArgs {
    /**
     * The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow.
     */
    flowSize?: pulumi.Input<enums.mediaconnect.FlowSize>;
    /**
     * The maintenance settings you want to use for the flow.
     */
    maintenance?: pulumi.Input<inputs.mediaconnect.FlowMaintenanceArgs>;
    /**
     * The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
     */
    mediaStreams?: pulumi.Input<pulumi.Input<inputs.mediaconnect.FlowMediaStreamArgs>[]>;
    /**
     * The name of the flow.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.
     */
    ndiConfig?: pulumi.Input<inputs.mediaconnect.FlowNdiConfigArgs>;
    /**
     * The source of the flow.
     */
    source: pulumi.Input<inputs.mediaconnect.FlowSourceArgs>;
    /**
     * The source failover config of the flow.
     */
    sourceFailoverConfig?: pulumi.Input<inputs.mediaconnect.FlowFailoverConfigArgs>;
    /**
     * The source monitoring config of the flow.
     */
    sourceMonitoringConfig?: pulumi.Input<inputs.mediaconnect.FlowSourceMonitoringConfigArgs>;
    /**
     * The VPC interfaces that you added to this flow.
     */
    vpcInterfaces?: pulumi.Input<pulumi.Input<inputs.mediaconnect.FlowVpcInterfaceArgs>[]>;
}
