// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::MediaConnect::Flow
 */
export function getFlow(args: GetFlowArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:mediaconnect:getFlow", {
        "flowArn": args.flowArn,
    }, opts);
}

export interface GetFlowArgs {
    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    flowArn: string;
}

export interface GetFlowResult {
    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    readonly flowArn?: string;
    /**
     * The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
     */
    readonly flowAvailabilityZone?: string;
    /**
     * The source of the flow.
     */
    readonly source?: outputs.mediaconnect.FlowSource;
    /**
     * The source failover config of the flow.
     */
    readonly sourceFailoverConfig?: outputs.mediaconnect.FlowFailoverConfig;
}

export function getFlowOutput(args: GetFlowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlowResult> {
    return pulumi.output(args).apply(a => getFlow(a, opts))
}

export interface GetFlowOutputArgs {
    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    flowArn: pulumi.Input<string>;
}
