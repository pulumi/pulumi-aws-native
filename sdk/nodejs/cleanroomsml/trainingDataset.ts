// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::CleanRoomsML::TrainingDataset Resource Type
 */
export class TrainingDataset extends pulumi.CustomResource {
    /**
     * Get an existing TrainingDataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TrainingDataset {
        return new TrainingDataset(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:cleanroomsml:TrainingDataset';

    /**
     * Returns true if the given object is an instance of TrainingDataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrainingDataset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrainingDataset.__pulumiType;
    }

    /**
     * The description of the training dataset.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the training dataset.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ARN of the IAM role that Clean Rooms ML can assume to read the data referred to in the `dataSource` field of each dataset.
     *
     * Passing a role across accounts is not allowed. If you pass a role that isn't in your account, you get an `AccessDeniedException` error.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * The status of the training dataset.
     */
    public /*out*/ readonly status!: pulumi.Output<enums.cleanroomsml.TrainingDatasetStatus>;
    /**
     * An arbitrary set of tags (key-value pairs) for this cleanrooms-ml training dataset.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * An array of information that lists the Dataset objects, which specifies the dataset type and details on its location and schema. You must provide a role that has read access to these tables.
     */
    public readonly trainingData!: pulumi.Output<outputs.cleanroomsml.TrainingDatasetDataset[]>;
    /**
     * The Amazon Resource Name (ARN) of the training dataset.
     */
    public /*out*/ readonly trainingDatasetArn!: pulumi.Output<string>;

    /**
     * Create a TrainingDataset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrainingDatasetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if (args?.trainingData === undefined && !opts.urn) {
                throw new Error("Missing required property 'trainingData'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["trainingData"] = args?.trainingData;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["trainingDatasetArn"] = undefined /*out*/;
        } else {
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["trainingData"] = undefined /*out*/;
            resourceInputs["trainingDatasetArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["description", "name", "roleArn", "trainingData[*]"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(TrainingDataset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a TrainingDataset resource.
 */
export interface TrainingDatasetArgs {
    /**
     * The description of the training dataset.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the training dataset.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role that Clean Rooms ML can assume to read the data referred to in the `dataSource` field of each dataset.
     *
     * Passing a role across accounts is not allowed. If you pass a role that isn't in your account, you get an `AccessDeniedException` error.
     */
    roleArn: pulumi.Input<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this cleanrooms-ml training dataset.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * An array of information that lists the Dataset objects, which specifies the dataset type and details on its location and schema. You must provide a role that has read access to these tables.
     */
    trainingData: pulumi.Input<pulumi.Input<inputs.cleanroomsml.TrainingDatasetDatasetArgs>[]>;
}
