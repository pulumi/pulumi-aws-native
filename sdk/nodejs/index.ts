// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./cidr";
export * from "./getAccountId";
export * from "./getAzs";
export * from "./getPartition";
export * from "./getRegion";
export * from "./getSsmParameterList";
export * from "./getSsmParameterString";
export * from "./getStackId";
export * from "./getStackName";
export * from "./getUrlSuffix";
export * from "./importValue";
export * from "./provider";

// Export sub-modules:
import * as accessanalyzer from "./accessanalyzer";
import * as acmpca from "./acmpca";
import * as apigateway from "./apigateway";
import * as appflow from "./appflow";
import * as applicationinsights from "./applicationinsights";
import * as athena from "./athena";
import * as auditmanager from "./auditmanager";
import * as backup from "./backup";
import * as cassandra from "./cassandra";
import * as chatbot from "./chatbot";
import * as cloudformation from "./cloudformation";
import * as cloudfront from "./cloudfront";
import * as cloudwatch from "./cloudwatch";
import * as codeartifact from "./codeartifact";
import * as codeguruprofiler from "./codeguruprofiler";
import * as codegurureviewer from "./codegurureviewer";
import * as codestarconnections from "./codestarconnections";
import * as config from "./config";
import * as configuration from "./configuration";
import * as databrew from "./databrew";
import * as detective from "./detective";
import * as devopsguru from "./devopsguru";
import * as ec2 from "./ec2";
import * as ecr from "./ecr";
import * as ecs from "./ecs";
import * as efs from "./efs";
import * as eks from "./eks";
import * as elasticache from "./elasticache";
import * as elasticloadbalancingv2 from "./elasticloadbalancingv2";
import * as events from "./events";
import * as eventschemas from "./eventschemas";
import * as fms from "./fms";
import * as gamelift from "./gamelift";
import * as globalaccelerator from "./globalaccelerator";
import * as glue from "./glue";
import * as greengrassv2 from "./greengrassv2";
import * as groundstation from "./groundstation";
import * as imagebuilder from "./imagebuilder";
import * as iot from "./iot";
import * as iotsitewise from "./iotsitewise";
import * as ivs from "./ivs";
import * as kendra from "./kendra";
import * as kinesis from "./kinesis";
import * as kinesisfirehose from "./kinesisfirehose";
import * as kms from "./kms";
import * as lambda from "./lambda";
import * as licensemanager from "./licensemanager";
import * as logs from "./logs";
import * as macie from "./macie";
import * as mediapackage from "./mediapackage";
import * as mwaa from "./mwaa";
import * as networkfirewall from "./networkfirewall";
import * as networkmanager from "./networkmanager";
import * as opsworkscm from "./opsworkscm";
import * as qldb from "./qldb";
import * as rds from "./rds";
import * as resourcegroups from "./resourcegroups";
import * as route53 from "./route53";
import * as route53resolver from "./route53resolver";
import * as s3 from "./s3";
import * as sagemaker from "./sagemaker";
import * as servicecatalog from "./servicecatalog";
import * as ses from "./ses";
import * as signer from "./signer";
import * as ssm from "./ssm";
import * as sso from "./sso";
import * as stepfunctions from "./stepfunctions";
import * as synthetics from "./synthetics";
import * as timestream from "./timestream";
import * as types from "./types";
import * as wafv2 from "./wafv2";
import * as workspaces from "./workspaces";

export {
    accessanalyzer,
    acmpca,
    apigateway,
    appflow,
    applicationinsights,
    athena,
    auditmanager,
    backup,
    cassandra,
    chatbot,
    cloudformation,
    cloudfront,
    cloudwatch,
    codeartifact,
    codeguruprofiler,
    codegurureviewer,
    codestarconnections,
    config,
    configuration,
    databrew,
    detective,
    devopsguru,
    ec2,
    ecr,
    ecs,
    efs,
    eks,
    elasticache,
    elasticloadbalancingv2,
    events,
    eventschemas,
    fms,
    gamelift,
    globalaccelerator,
    glue,
    greengrassv2,
    groundstation,
    imagebuilder,
    iot,
    iotsitewise,
    ivs,
    kendra,
    kinesis,
    kinesisfirehose,
    kms,
    lambda,
    licensemanager,
    logs,
    macie,
    mediapackage,
    mwaa,
    networkfirewall,
    networkmanager,
    opsworkscm,
    qldb,
    rds,
    resourcegroups,
    route53,
    route53resolver,
    s3,
    sagemaker,
    servicecatalog,
    ses,
    signer,
    ssm,
    sso,
    stepfunctions,
    synthetics,
    timestream,
    types,
    wafv2,
    workspaces,
};

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("aws-native", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:aws-native") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
