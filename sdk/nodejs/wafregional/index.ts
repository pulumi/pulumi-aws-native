// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ByteMatchSetArgs } from "./byteMatchSet";
export type ByteMatchSet = import("./byteMatchSet").ByteMatchSet;
export const ByteMatchSet: typeof import("./byteMatchSet").ByteMatchSet = null as any;
utilities.lazyLoad(exports, ["ByteMatchSet"], () => require("./byteMatchSet"));

export { GeoMatchSetArgs } from "./geoMatchSet";
export type GeoMatchSet = import("./geoMatchSet").GeoMatchSet;
export const GeoMatchSet: typeof import("./geoMatchSet").GeoMatchSet = null as any;
utilities.lazyLoad(exports, ["GeoMatchSet"], () => require("./geoMatchSet"));

export { GetByteMatchSetArgs, GetByteMatchSetResult, GetByteMatchSetOutputArgs } from "./getByteMatchSet";
export const getByteMatchSet: typeof import("./getByteMatchSet").getByteMatchSet = null as any;
export const getByteMatchSetOutput: typeof import("./getByteMatchSet").getByteMatchSetOutput = null as any;
utilities.lazyLoad(exports, ["getByteMatchSet","getByteMatchSetOutput"], () => require("./getByteMatchSet"));

export { GetGeoMatchSetArgs, GetGeoMatchSetResult, GetGeoMatchSetOutputArgs } from "./getGeoMatchSet";
export const getGeoMatchSet: typeof import("./getGeoMatchSet").getGeoMatchSet = null as any;
export const getGeoMatchSetOutput: typeof import("./getGeoMatchSet").getGeoMatchSetOutput = null as any;
utilities.lazyLoad(exports, ["getGeoMatchSet","getGeoMatchSetOutput"], () => require("./getGeoMatchSet"));

export { GetIpSetArgs, GetIpSetResult, GetIpSetOutputArgs } from "./getIpSet";
export const getIpSet: typeof import("./getIpSet").getIpSet = null as any;
export const getIpSetOutput: typeof import("./getIpSet").getIpSetOutput = null as any;
utilities.lazyLoad(exports, ["getIpSet","getIpSetOutput"], () => require("./getIpSet"));

export { GetRateBasedRuleArgs, GetRateBasedRuleResult, GetRateBasedRuleOutputArgs } from "./getRateBasedRule";
export const getRateBasedRule: typeof import("./getRateBasedRule").getRateBasedRule = null as any;
export const getRateBasedRuleOutput: typeof import("./getRateBasedRule").getRateBasedRuleOutput = null as any;
utilities.lazyLoad(exports, ["getRateBasedRule","getRateBasedRuleOutput"], () => require("./getRateBasedRule"));

export { GetRegexPatternSetArgs, GetRegexPatternSetResult, GetRegexPatternSetOutputArgs } from "./getRegexPatternSet";
export const getRegexPatternSet: typeof import("./getRegexPatternSet").getRegexPatternSet = null as any;
export const getRegexPatternSetOutput: typeof import("./getRegexPatternSet").getRegexPatternSetOutput = null as any;
utilities.lazyLoad(exports, ["getRegexPatternSet","getRegexPatternSetOutput"], () => require("./getRegexPatternSet"));

export { GetRuleArgs, GetRuleResult, GetRuleOutputArgs } from "./getRule";
export const getRule: typeof import("./getRule").getRule = null as any;
export const getRuleOutput: typeof import("./getRule").getRuleOutput = null as any;
utilities.lazyLoad(exports, ["getRule","getRuleOutput"], () => require("./getRule"));

export { GetSizeConstraintSetArgs, GetSizeConstraintSetResult, GetSizeConstraintSetOutputArgs } from "./getSizeConstraintSet";
export const getSizeConstraintSet: typeof import("./getSizeConstraintSet").getSizeConstraintSet = null as any;
export const getSizeConstraintSetOutput: typeof import("./getSizeConstraintSet").getSizeConstraintSetOutput = null as any;
utilities.lazyLoad(exports, ["getSizeConstraintSet","getSizeConstraintSetOutput"], () => require("./getSizeConstraintSet"));

export { GetSqlInjectionMatchSetArgs, GetSqlInjectionMatchSetResult, GetSqlInjectionMatchSetOutputArgs } from "./getSqlInjectionMatchSet";
export const getSqlInjectionMatchSet: typeof import("./getSqlInjectionMatchSet").getSqlInjectionMatchSet = null as any;
export const getSqlInjectionMatchSetOutput: typeof import("./getSqlInjectionMatchSet").getSqlInjectionMatchSetOutput = null as any;
utilities.lazyLoad(exports, ["getSqlInjectionMatchSet","getSqlInjectionMatchSetOutput"], () => require("./getSqlInjectionMatchSet"));

export { GetWebAclArgs, GetWebAclResult, GetWebAclOutputArgs } from "./getWebAcl";
export const getWebAcl: typeof import("./getWebAcl").getWebAcl = null as any;
export const getWebAclOutput: typeof import("./getWebAcl").getWebAclOutput = null as any;
utilities.lazyLoad(exports, ["getWebAcl","getWebAclOutput"], () => require("./getWebAcl"));

export { GetWebAclAssociationArgs, GetWebAclAssociationResult, GetWebAclAssociationOutputArgs } from "./getWebAclAssociation";
export const getWebAclAssociation: typeof import("./getWebAclAssociation").getWebAclAssociation = null as any;
export const getWebAclAssociationOutput: typeof import("./getWebAclAssociation").getWebAclAssociationOutput = null as any;
utilities.lazyLoad(exports, ["getWebAclAssociation","getWebAclAssociationOutput"], () => require("./getWebAclAssociation"));

export { GetXssMatchSetArgs, GetXssMatchSetResult, GetXssMatchSetOutputArgs } from "./getXssMatchSet";
export const getXssMatchSet: typeof import("./getXssMatchSet").getXssMatchSet = null as any;
export const getXssMatchSetOutput: typeof import("./getXssMatchSet").getXssMatchSetOutput = null as any;
utilities.lazyLoad(exports, ["getXssMatchSet","getXssMatchSetOutput"], () => require("./getXssMatchSet"));

export { IpSetArgs } from "./ipSet";
export type IpSet = import("./ipSet").IpSet;
export const IpSet: typeof import("./ipSet").IpSet = null as any;
utilities.lazyLoad(exports, ["IpSet"], () => require("./ipSet"));

export { RateBasedRuleArgs } from "./rateBasedRule";
export type RateBasedRule = import("./rateBasedRule").RateBasedRule;
export const RateBasedRule: typeof import("./rateBasedRule").RateBasedRule = null as any;
utilities.lazyLoad(exports, ["RateBasedRule"], () => require("./rateBasedRule"));

export { RegexPatternSetArgs } from "./regexPatternSet";
export type RegexPatternSet = import("./regexPatternSet").RegexPatternSet;
export const RegexPatternSet: typeof import("./regexPatternSet").RegexPatternSet = null as any;
utilities.lazyLoad(exports, ["RegexPatternSet"], () => require("./regexPatternSet"));

export { RuleArgs } from "./rule";
export type Rule = import("./rule").Rule;
export const Rule: typeof import("./rule").Rule = null as any;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));

export { SizeConstraintSetArgs } from "./sizeConstraintSet";
export type SizeConstraintSet = import("./sizeConstraintSet").SizeConstraintSet;
export const SizeConstraintSet: typeof import("./sizeConstraintSet").SizeConstraintSet = null as any;
utilities.lazyLoad(exports, ["SizeConstraintSet"], () => require("./sizeConstraintSet"));

export { SqlInjectionMatchSetArgs } from "./sqlInjectionMatchSet";
export type SqlInjectionMatchSet = import("./sqlInjectionMatchSet").SqlInjectionMatchSet;
export const SqlInjectionMatchSet: typeof import("./sqlInjectionMatchSet").SqlInjectionMatchSet = null as any;
utilities.lazyLoad(exports, ["SqlInjectionMatchSet"], () => require("./sqlInjectionMatchSet"));

export { WebAclArgs } from "./webAcl";
export type WebAcl = import("./webAcl").WebAcl;
export const WebAcl: typeof import("./webAcl").WebAcl = null as any;
utilities.lazyLoad(exports, ["WebAcl"], () => require("./webAcl"));

export { WebAclAssociationArgs } from "./webAclAssociation";
export type WebAclAssociation = import("./webAclAssociation").WebAclAssociation;
export const WebAclAssociation: typeof import("./webAclAssociation").WebAclAssociation = null as any;
utilities.lazyLoad(exports, ["WebAclAssociation"], () => require("./webAclAssociation"));

export { XssMatchSetArgs } from "./xssMatchSet";
export type XssMatchSet = import("./xssMatchSet").XssMatchSet;
export const XssMatchSet: typeof import("./xssMatchSet").XssMatchSet = null as any;
utilities.lazyLoad(exports, ["XssMatchSet"], () => require("./xssMatchSet"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:wafregional:ByteMatchSet":
                return new ByteMatchSet(name, <any>undefined, { urn })
            case "aws-native:wafregional:GeoMatchSet":
                return new GeoMatchSet(name, <any>undefined, { urn })
            case "aws-native:wafregional:IpSet":
                return new IpSet(name, <any>undefined, { urn })
            case "aws-native:wafregional:RateBasedRule":
                return new RateBasedRule(name, <any>undefined, { urn })
            case "aws-native:wafregional:RegexPatternSet":
                return new RegexPatternSet(name, <any>undefined, { urn })
            case "aws-native:wafregional:Rule":
                return new Rule(name, <any>undefined, { urn })
            case "aws-native:wafregional:SizeConstraintSet":
                return new SizeConstraintSet(name, <any>undefined, { urn })
            case "aws-native:wafregional:SqlInjectionMatchSet":
                return new SqlInjectionMatchSet(name, <any>undefined, { urn })
            case "aws-native:wafregional:WebAcl":
                return new WebAcl(name, <any>undefined, { urn })
            case "aws-native:wafregional:WebAclAssociation":
                return new WebAclAssociation(name, <any>undefined, { urn })
            case "aws-native:wafregional:XssMatchSet":
                return new XssMatchSet(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "wafregional", _module)
