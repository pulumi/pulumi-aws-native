// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource type definition for AWS::RAM::Permission
 */
export function getPermission(args: GetPermissionArgs, opts?: pulumi.InvokeOptions): Promise<GetPermissionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ram:getPermission", {
        "arn": args.arn,
    }, opts);
}

export interface GetPermissionArgs {
    /**
     * The Amazon Resource Name (ARN) of the new permission.
     */
    arn: string;
}

export interface GetPermissionResult {
    /**
     * The Amazon Resource Name (ARN) of the new permission.
     */
    readonly arn?: string;
    /**
     * Set to true to use this as the default permission.
     */
    readonly isResourceTypeDefault?: boolean;
    /**
     * The type of managed permission. This can be one of the following values:
     *
     * - *AWS_MANAGED_PERMISSION* – AWS created and manages this managed permission. You can associate it with your resource shares, but you can't modify it.
     * - *CUSTOMER_MANAGED_PERMISSION* – You, or another principal in your account created this managed permission. You can associate it with your resource shares and create new versions that have different permissions.
     */
    readonly permissionType?: string;
    /**
     * Specifies a list of one or more tag key and value pairs to attach to the permission.
     */
    readonly tags?: outputs.Tag[];
    /**
     * Version of the permission.
     */
    readonly version?: string;
}
/**
 * Resource type definition for AWS::RAM::Permission
 */
export function getPermissionOutput(args: GetPermissionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPermissionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ram:getPermission", {
        "arn": args.arn,
    }, opts);
}

export interface GetPermissionOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the new permission.
     */
    arn: pulumi.Input<string>;
}
