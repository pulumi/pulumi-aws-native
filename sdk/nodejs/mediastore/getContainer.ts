// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::MediaStore::Container
 */
export function getContainer(args: GetContainerArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:mediastore:getContainer", {
        "id": args.id,
    }, opts);
}

export interface GetContainerArgs {
    id: string;
}

export interface GetContainerResult {
    readonly accessLoggingEnabled?: boolean;
    readonly corsPolicy?: outputs.mediastore.ContainerCorsRule[];
    readonly endpoint?: string;
    readonly id?: string;
    readonly lifecyclePolicy?: string;
    readonly metricPolicy?: outputs.mediastore.ContainerMetricPolicy;
    readonly policy?: string;
    readonly tags?: outputs.mediastore.ContainerTag[];
}

export function getContainerOutput(args: GetContainerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerResult> {
    return pulumi.output(args).apply(a => getContainer(a, opts))
}

export interface GetContainerOutputArgs {
    id: pulumi.Input<string>;
}
