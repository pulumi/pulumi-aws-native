// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Evidently::Feature.
 */
export class Feature extends pulumi.CustomResource {
    /**
     * Get an existing Feature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Feature {
        return new Feature(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:evidently:Feature';

    /**
     * Returns true if the given object is an instance of Feature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Feature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Feature.__pulumiType;
    }

    /**
     * The ARN of the feature. For example, `arn:aws:evidently:us-west-2:0123455678912:project/myProject/feature/myFeature` .
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.
     *
     * This variation must also be listed in the `Variations` structure.
     *
     * If you omit `DefaultVariation` , the first variation listed in the `Variations` structure is used as the default variation.
     */
    public readonly defaultVariation!: pulumi.Output<string | undefined>;
    /**
     * An optional description of the feature.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A set of key-value pairs that specify users who should always be served a specific variation of a feature. Each key specifies a user using their user ID, account ID, or some other identifier. The value specifies the name of the variation that the user is to be served.
     */
    public readonly entityOverrides!: pulumi.Output<outputs.evidently.FeatureEntityOverride[] | undefined>;
    /**
     * Specify `ALL_RULES` to activate the traffic allocation specified by any ongoing launches or experiments. Specify `DEFAULT_VARIATION` to serve the default variation to all users instead.
     */
    public readonly evaluationStrategy!: pulumi.Output<enums.evidently.FeatureEvaluationStrategy | undefined>;
    /**
     * The name for the feature. It can include up to 127 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name or ARN of the project that is to contain the new feature.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * This structure contains the name and variation value of one variation of a feature. It can contain only one of the following parameters: `BooleanValue` , `DoubleValue` , `LongValue` or `StringValue` .
     */
    public readonly variations!: pulumi.Output<outputs.evidently.FeatureVariationObject[]>;

    /**
     * Create a Feature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FeatureArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.variations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'variations'");
            }
            resourceInputs["defaultVariation"] = args ? args.defaultVariation : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["entityOverrides"] = args ? args.entityOverrides : undefined;
            resourceInputs["evaluationStrategy"] = args ? args.evaluationStrategy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["variations"] = args ? args.variations : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["defaultVariation"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["entityOverrides"] = undefined /*out*/;
            resourceInputs["evaluationStrategy"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["variations"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Feature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Feature resource.
 */
export interface FeatureArgs {
    /**
     * The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.
     *
     * This variation must also be listed in the `Variations` structure.
     *
     * If you omit `DefaultVariation` , the first variation listed in the `Variations` structure is used as the default variation.
     */
    defaultVariation?: pulumi.Input<string>;
    /**
     * An optional description of the feature.
     */
    description?: pulumi.Input<string>;
    /**
     * A set of key-value pairs that specify users who should always be served a specific variation of a feature. Each key specifies a user using their user ID, account ID, or some other identifier. The value specifies the name of the variation that the user is to be served.
     */
    entityOverrides?: pulumi.Input<pulumi.Input<inputs.evidently.FeatureEntityOverrideArgs>[]>;
    /**
     * Specify `ALL_RULES` to activate the traffic allocation specified by any ongoing launches or experiments. Specify `DEFAULT_VARIATION` to serve the default variation to all users instead.
     */
    evaluationStrategy?: pulumi.Input<enums.evidently.FeatureEvaluationStrategy>;
    /**
     * The name for the feature. It can include up to 127 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The name or ARN of the project that is to contain the new feature.
     */
    project: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * This structure contains the name and variation value of one variation of a feature. It can contain only one of the following parameters: `BooleanValue` , `DoubleValue` , `LongValue` or `StringValue` .
     */
    variations: pulumi.Input<pulumi.Input<inputs.evidently.FeatureVariationObjectArgs>[]>;
}
