// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Represents an association between an ID mapping workflow and a collaboration
 */
export class IdMappingTable extends pulumi.CustomResource {
    /**
     * Get an existing IdMappingTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IdMappingTable {
        return new IdMappingTable(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:cleanrooms:IdMappingTable';

    /**
     * Returns true if the given object is an instance of IdMappingTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IdMappingTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IdMappingTable.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the ID mapping table.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the collaboration that contains this ID mapping table.
     */
    public /*out*/ readonly collaborationArn!: pulumi.Output<string>;
    /**
     * The unique identifier of the collaboration that contains this ID mapping table.
     */
    public /*out*/ readonly collaborationIdentifier!: pulumi.Output<string>;
    /**
     * The description of the ID mapping table.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The unique identifier of the ID mapping table identifier that you want to retrieve.
     */
    public /*out*/ readonly idMappingTableIdentifier!: pulumi.Output<string>;
    /**
     * The input reference configuration for the ID mapping table.
     */
    public readonly inputReferenceConfig!: pulumi.Output<outputs.cleanrooms.IdMappingTableInputReferenceConfig>;
    public /*out*/ readonly inputReferenceProperties!: pulumi.Output<outputs.cleanrooms.IdMappingTableInputReferenceProperties>;
    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key.
     */
    public readonly kmsKeyArn!: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the membership resource for the ID mapping table.
     */
    public /*out*/ readonly membershipArn!: pulumi.Output<string>;
    /**
     * The unique identifier of the membership resource for the ID mapping table.
     */
    public readonly membershipIdentifier!: pulumi.Output<string>;
    /**
     * The name of the ID mapping table.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a IdMappingTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdMappingTableArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.inputReferenceConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inputReferenceConfig'");
            }
            if ((!args || args.membershipIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'membershipIdentifier'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["inputReferenceConfig"] = args ? args.inputReferenceConfig : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["membershipIdentifier"] = args ? args.membershipIdentifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["collaborationArn"] = undefined /*out*/;
            resourceInputs["collaborationIdentifier"] = undefined /*out*/;
            resourceInputs["idMappingTableIdentifier"] = undefined /*out*/;
            resourceInputs["inputReferenceProperties"] = undefined /*out*/;
            resourceInputs["membershipArn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["collaborationArn"] = undefined /*out*/;
            resourceInputs["collaborationIdentifier"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["idMappingTableIdentifier"] = undefined /*out*/;
            resourceInputs["inputReferenceConfig"] = undefined /*out*/;
            resourceInputs["inputReferenceProperties"] = undefined /*out*/;
            resourceInputs["kmsKeyArn"] = undefined /*out*/;
            resourceInputs["membershipArn"] = undefined /*out*/;
            resourceInputs["membershipIdentifier"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["inputReferenceConfig", "membershipIdentifier", "name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(IdMappingTable.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a IdMappingTable resource.
 */
export interface IdMappingTableArgs {
    /**
     * The description of the ID mapping table.
     */
    description?: pulumi.Input<string>;
    /**
     * The input reference configuration for the ID mapping table.
     */
    inputReferenceConfig: pulumi.Input<inputs.cleanrooms.IdMappingTableInputReferenceConfigArgs>;
    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The unique identifier of the membership resource for the ID mapping table.
     */
    membershipIdentifier: pulumi.Input<string>;
    /**
     * The name of the ID mapping table.
     */
    name?: pulumi.Input<string>;
    /**
     * An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
