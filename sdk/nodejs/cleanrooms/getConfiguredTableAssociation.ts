// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Represents a table that can be queried within a collaboration
 */
export function getConfiguredTableAssociation(args: GetConfiguredTableAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetConfiguredTableAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cleanrooms:getConfiguredTableAssociation", {
        "configuredTableAssociationIdentifier": args.configuredTableAssociationIdentifier,
        "membershipIdentifier": args.membershipIdentifier,
    }, opts);
}

export interface GetConfiguredTableAssociationArgs {
    /**
     * Returns the unique identifier of the specified configured table association.
     *
     * Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
     */
    configuredTableAssociationIdentifier: string;
    /**
     * The unique ID for the membership this configured table association belongs to.
     */
    membershipIdentifier: string;
}

export interface GetConfiguredTableAssociationResult {
    /**
     * Returns the Amazon Resource Name (ARN) of the specified configured table association.
     *
     * Example: `arn:aws:cleanrooms:us-east-1:111122223333:configuredtable/a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
     */
    readonly arn?: string;
    /**
     * Returns the unique identifier of the specified configured table association.
     *
     * Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
     */
    readonly configuredTableAssociationIdentifier?: string;
    /**
     * A description of the configured table association.
     */
    readonly description?: string;
    /**
     * The service will assume this role to access catalog metadata and query the table.
     */
    readonly roleArn?: string;
    /**
     * An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Represents a table that can be queried within a collaboration
 */
export function getConfiguredTableAssociationOutput(args: GetConfiguredTableAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfiguredTableAssociationResult> {
    return pulumi.output(args).apply((a: any) => getConfiguredTableAssociation(a, opts))
}

export interface GetConfiguredTableAssociationOutputArgs {
    /**
     * Returns the unique identifier of the specified configured table association.
     *
     * Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
     */
    configuredTableAssociationIdentifier: pulumi.Input<string>;
    /**
     * The unique ID for the membership this configured table association belongs to.
     */
    membershipIdentifier: pulumi.Input<string>;
}
