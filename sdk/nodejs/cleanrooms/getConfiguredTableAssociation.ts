// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Represents a table that can be queried within a collaboration
 */
export function getConfiguredTableAssociation(args: GetConfiguredTableAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetConfiguredTableAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:cleanrooms:getConfiguredTableAssociation", {
        "configuredTableAssociationIdentifier": args.configuredTableAssociationIdentifier,
        "membershipIdentifier": args.membershipIdentifier,
    }, opts);
}

export interface GetConfiguredTableAssociationArgs {
    configuredTableAssociationIdentifier: string;
    membershipIdentifier: string;
}

export interface GetConfiguredTableAssociationResult {
    readonly arn?: string;
    readonly configuredTableAssociationIdentifier?: string;
    readonly description?: string;
    readonly roleArn?: string;
    /**
     * An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Represents a table that can be queried within a collaboration
 */
export function getConfiguredTableAssociationOutput(args: GetConfiguredTableAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfiguredTableAssociationResult> {
    return pulumi.output(args).apply((a: any) => getConfiguredTableAssociation(a, opts))
}

export interface GetConfiguredTableAssociationOutputArgs {
    configuredTableAssociationIdentifier: pulumi.Input<string>;
    membershipIdentifier: pulumi.Input<string>;
}
