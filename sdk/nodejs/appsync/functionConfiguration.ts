// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const config = new pulumi.Config();
 * const graphQlApiId = config.require("graphQlApiId");
 * const name = config.require("name");
 * const description = config.require("description");
 * const dataSourceName = config.require("dataSourceName");
 * const functionVersion = config.require("functionVersion");
 * const requestMappingTemplateS3LocationInput = config.require("requestMappingTemplateS3LocationInput");
 * const responseMappingTemplateS3LocationInput = config.require("responseMappingTemplateS3LocationInput");
 * const functionConfiguration = new aws_native.appsync.FunctionConfiguration("functionConfiguration", {
 *     apiId: graphQlApiId,
 *     name: name,
 *     description: description,
 *     functionVersion: functionVersion,
 *     dataSourceName: dataSourceName,
 *     requestMappingTemplateS3Location: requestMappingTemplateS3LocationInput,
 *     responseMappingTemplateS3Location: responseMappingTemplateS3LocationInput,
 * });
 *
 * ```
 */
export class FunctionConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing FunctionConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FunctionConfiguration {
        return new FunctionConfiguration(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appsync:FunctionConfiguration';

    /**
     * Returns true if the given object is an instance of FunctionConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FunctionConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FunctionConfiguration.__pulumiType;
    }

    /**
     * The AWS AppSync GraphQL API that you want to attach using this function.
     */
    declare public readonly apiId: pulumi.Output<string>;
    /**
     * The resolver code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
     */
    declare public readonly code: pulumi.Output<string | undefined>;
    /**
     * The Amazon S3 endpoint (where the code is located??).
     */
    declare public readonly codeS3Location: pulumi.Output<string | undefined>;
    /**
     * The name of data source this function will attach.
     */
    declare public readonly dataSourceName: pulumi.Output<string>;
    /**
     * The function description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The ARN for the function generated by the service
     */
    declare public /*out*/ readonly functionArn: pulumi.Output<string>;
    /**
     * The unique identifier for the function generated by the service
     */
    declare public /*out*/ readonly functionId: pulumi.Output<string>;
    /**
     * The version of the request mapping template. Currently, only the 2018-05-29 version of the template is supported.
     */
    declare public readonly functionVersion: pulumi.Output<string | undefined>;
    /**
     * The maximum number of resolver request inputs that will be sent to a single AWS Lambda function in a BatchInvoke operation.
     */
    declare public readonly maxBatchSize: pulumi.Output<number | undefined>;
    /**
     * The name of the function.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
     */
    declare public readonly requestMappingTemplate: pulumi.Output<string | undefined>;
    /**
     * Describes a Sync configuration for a resolver. Contains information on which Conflict Detection, as well as Resolution strategy, should be performed when the resolver is invoked.
     */
    declare public readonly requestMappingTemplateS3Location: pulumi.Output<string | undefined>;
    /**
     * The Function response mapping template.
     */
    declare public readonly responseMappingTemplate: pulumi.Output<string | undefined>;
    /**
     * The location of a response mapping template in an Amazon S3 bucket. Use this if you want to provision with a template file in Amazon S3 rather than embedding it in your CloudFormation template.
     */
    declare public readonly responseMappingTemplateS3Location: pulumi.Output<string | undefined>;
    /**
     * Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
     */
    declare public readonly runtime: pulumi.Output<outputs.appsync.FunctionConfigurationAppSyncRuntime | undefined>;
    /**
     * Describes a Sync configuration for a resolver. Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.
     */
    declare public readonly syncConfig: pulumi.Output<outputs.appsync.FunctionConfigurationSyncConfig | undefined>;

    /**
     * Create a FunctionConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FunctionConfigurationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.apiId === undefined && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            if (args?.dataSourceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataSourceName'");
            }
            resourceInputs["apiId"] = args?.apiId;
            resourceInputs["code"] = args?.code;
            resourceInputs["codeS3Location"] = args?.codeS3Location;
            resourceInputs["dataSourceName"] = args?.dataSourceName;
            resourceInputs["description"] = args?.description;
            resourceInputs["functionVersion"] = args?.functionVersion;
            resourceInputs["maxBatchSize"] = args?.maxBatchSize;
            resourceInputs["name"] = args?.name;
            resourceInputs["requestMappingTemplate"] = args?.requestMappingTemplate;
            resourceInputs["requestMappingTemplateS3Location"] = args?.requestMappingTemplateS3Location;
            resourceInputs["responseMappingTemplate"] = args?.responseMappingTemplate;
            resourceInputs["responseMappingTemplateS3Location"] = args?.responseMappingTemplateS3Location;
            resourceInputs["runtime"] = args?.runtime;
            resourceInputs["syncConfig"] = args?.syncConfig;
            resourceInputs["functionArn"] = undefined /*out*/;
            resourceInputs["functionId"] = undefined /*out*/;
        } else {
            resourceInputs["apiId"] = undefined /*out*/;
            resourceInputs["code"] = undefined /*out*/;
            resourceInputs["codeS3Location"] = undefined /*out*/;
            resourceInputs["dataSourceName"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["functionArn"] = undefined /*out*/;
            resourceInputs["functionId"] = undefined /*out*/;
            resourceInputs["functionVersion"] = undefined /*out*/;
            resourceInputs["maxBatchSize"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["requestMappingTemplate"] = undefined /*out*/;
            resourceInputs["requestMappingTemplateS3Location"] = undefined /*out*/;
            resourceInputs["responseMappingTemplate"] = undefined /*out*/;
            resourceInputs["responseMappingTemplateS3Location"] = undefined /*out*/;
            resourceInputs["runtime"] = undefined /*out*/;
            resourceInputs["syncConfig"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["apiId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(FunctionConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a FunctionConfiguration resource.
 */
export interface FunctionConfigurationArgs {
    /**
     * The AWS AppSync GraphQL API that you want to attach using this function.
     */
    apiId: pulumi.Input<string>;
    /**
     * The resolver code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
     */
    code?: pulumi.Input<string>;
    /**
     * The Amazon S3 endpoint (where the code is located??).
     */
    codeS3Location?: pulumi.Input<string>;
    /**
     * The name of data source this function will attach.
     */
    dataSourceName: pulumi.Input<string>;
    /**
     * The function description.
     */
    description?: pulumi.Input<string>;
    /**
     * The version of the request mapping template. Currently, only the 2018-05-29 version of the template is supported.
     */
    functionVersion?: pulumi.Input<string>;
    /**
     * The maximum number of resolver request inputs that will be sent to a single AWS Lambda function in a BatchInvoke operation.
     */
    maxBatchSize?: pulumi.Input<number>;
    /**
     * The name of the function.
     */
    name?: pulumi.Input<string>;
    /**
     * The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
     */
    requestMappingTemplate?: pulumi.Input<string>;
    /**
     * Describes a Sync configuration for a resolver. Contains information on which Conflict Detection, as well as Resolution strategy, should be performed when the resolver is invoked.
     */
    requestMappingTemplateS3Location?: pulumi.Input<string>;
    /**
     * The Function response mapping template.
     */
    responseMappingTemplate?: pulumi.Input<string>;
    /**
     * The location of a response mapping template in an Amazon S3 bucket. Use this if you want to provision with a template file in Amazon S3 rather than embedding it in your CloudFormation template.
     */
    responseMappingTemplateS3Location?: pulumi.Input<string>;
    /**
     * Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
     */
    runtime?: pulumi.Input<inputs.appsync.FunctionConfigurationAppSyncRuntimeArgs>;
    /**
     * Describes a Sync configuration for a resolver. Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.
     */
    syncConfig?: pulumi.Input<inputs.appsync.FunctionConfigurationSyncConfigArgs>;
}
