// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppSync::GraphQLApi
 */
export class GraphQlApi extends pulumi.CustomResource {
    /**
     * Get an existing GraphQlApi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GraphQlApi {
        return new GraphQlApi(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appsync:GraphQlApi';

    /**
     * Returns true if the given object is an instance of GraphQlApi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GraphQlApi {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GraphQlApi.__pulumiType;
    }

    /**
     * A list of additional authentication providers for the GraphqlApi API.
     */
    public readonly additionalAuthenticationProviders!: pulumi.Output<outputs.appsync.GraphQlApiAdditionalAuthenticationProvider[] | undefined>;
    /**
     * Unique AWS AppSync GraphQL API identifier.
     */
    public /*out*/ readonly apiId!: pulumi.Output<string>;
    /**
     * The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
     */
    public readonly apiType!: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the API key
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Security configuration for your GraphQL API
     */
    public readonly authenticationType!: pulumi.Output<string>;
    /**
     * Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
     */
    public readonly enhancedMetricsConfig!: pulumi.Output<outputs.appsync.GraphQlApiEnhancedMetricsConfig | undefined>;
    /**
     * A map containing the list of resources with their properties and environment variables.
     */
    public readonly environmentVariables!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.
     */
    public /*out*/ readonly graphQlDns!: pulumi.Output<string>;
    /**
     * The GraphQL endpoint ARN.
     */
    public /*out*/ readonly graphQlEndpointArn!: pulumi.Output<string>;
    /**
     * The Endpoint URL of your GraphQL API.
     */
    public /*out*/ readonly graphQlUrl!: pulumi.Output<string>;
    /**
     * Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
     */
    public readonly introspectionConfig!: pulumi.Output<string | undefined>;
    /**
     * A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
     */
    public readonly lambdaAuthorizerConfig!: pulumi.Output<outputs.appsync.GraphQlApiLambdaAuthorizerConfig | undefined>;
    /**
     * The Amazon CloudWatch Logs configuration.
     */
    public readonly logConfig!: pulumi.Output<outputs.appsync.GraphQlApiLogConfig | undefined>;
    /**
     * The AWS Identity and Access Management service role ARN for a merged API. 
     */
    public readonly mergedApiExecutionRoleArn!: pulumi.Output<string | undefined>;
    /**
     * The API name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The OpenID Connect configuration.
     */
    public readonly openIdConnectConfig!: pulumi.Output<outputs.appsync.GraphQlApiOpenIdConnectConfig | undefined>;
    /**
     * The owner contact information for an API resource.
     */
    public readonly ownerContact!: pulumi.Output<string | undefined>;
    /**
     * The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
     */
    public readonly queryDepthLimit!: pulumi.Output<number | undefined>;
    /**
     * The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.
     */
    public /*out*/ readonly realtimeDns!: pulumi.Output<string>;
    /**
     * The GraphQL API real-time endpoint URL.
     */
    public /*out*/ readonly realtimeUrl!: pulumi.Output<string>;
    /**
     * The maximum number of resolvers that can be invoked in a single request.
     */
    public readonly resolverCountLimit!: pulumi.Output<number | undefined>;
    /**
     * An arbitrary set of tags (key-value pairs) for this GraphQL API.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
     */
    public readonly userPoolConfig!: pulumi.Output<outputs.appsync.GraphQlApiUserPoolConfig | undefined>;
    /**
     * Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
     */
    public readonly visibility!: pulumi.Output<string | undefined>;
    /**
     * A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
     */
    public readonly xrayEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a GraphQlApi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GraphQlApiArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.authenticationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationType'");
            }
            resourceInputs["additionalAuthenticationProviders"] = args ? args.additionalAuthenticationProviders : undefined;
            resourceInputs["apiType"] = args ? args.apiType : undefined;
            resourceInputs["authenticationType"] = args ? args.authenticationType : undefined;
            resourceInputs["enhancedMetricsConfig"] = args ? args.enhancedMetricsConfig : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["introspectionConfig"] = args ? args.introspectionConfig : undefined;
            resourceInputs["lambdaAuthorizerConfig"] = args ? args.lambdaAuthorizerConfig : undefined;
            resourceInputs["logConfig"] = args ? args.logConfig : undefined;
            resourceInputs["mergedApiExecutionRoleArn"] = args ? args.mergedApiExecutionRoleArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["openIdConnectConfig"] = args ? args.openIdConnectConfig : undefined;
            resourceInputs["ownerContact"] = args ? args.ownerContact : undefined;
            resourceInputs["queryDepthLimit"] = args ? args.queryDepthLimit : undefined;
            resourceInputs["resolverCountLimit"] = args ? args.resolverCountLimit : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userPoolConfig"] = args ? args.userPoolConfig : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
            resourceInputs["xrayEnabled"] = args ? args.xrayEnabled : undefined;
            resourceInputs["apiId"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["graphQlDns"] = undefined /*out*/;
            resourceInputs["graphQlEndpointArn"] = undefined /*out*/;
            resourceInputs["graphQlUrl"] = undefined /*out*/;
            resourceInputs["realtimeDns"] = undefined /*out*/;
            resourceInputs["realtimeUrl"] = undefined /*out*/;
        } else {
            resourceInputs["additionalAuthenticationProviders"] = undefined /*out*/;
            resourceInputs["apiId"] = undefined /*out*/;
            resourceInputs["apiType"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["authenticationType"] = undefined /*out*/;
            resourceInputs["enhancedMetricsConfig"] = undefined /*out*/;
            resourceInputs["environmentVariables"] = undefined /*out*/;
            resourceInputs["graphQlDns"] = undefined /*out*/;
            resourceInputs["graphQlEndpointArn"] = undefined /*out*/;
            resourceInputs["graphQlUrl"] = undefined /*out*/;
            resourceInputs["introspectionConfig"] = undefined /*out*/;
            resourceInputs["lambdaAuthorizerConfig"] = undefined /*out*/;
            resourceInputs["logConfig"] = undefined /*out*/;
            resourceInputs["mergedApiExecutionRoleArn"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["openIdConnectConfig"] = undefined /*out*/;
            resourceInputs["ownerContact"] = undefined /*out*/;
            resourceInputs["queryDepthLimit"] = undefined /*out*/;
            resourceInputs["realtimeDns"] = undefined /*out*/;
            resourceInputs["realtimeUrl"] = undefined /*out*/;
            resourceInputs["resolverCountLimit"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["userPoolConfig"] = undefined /*out*/;
            resourceInputs["visibility"] = undefined /*out*/;
            resourceInputs["xrayEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GraphQlApi.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a GraphQlApi resource.
 */
export interface GraphQlApiArgs {
    /**
     * A list of additional authentication providers for the GraphqlApi API.
     */
    additionalAuthenticationProviders?: pulumi.Input<pulumi.Input<inputs.appsync.GraphQlApiAdditionalAuthenticationProviderArgs>[]>;
    /**
     * The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
     */
    apiType?: pulumi.Input<string>;
    /**
     * Security configuration for your GraphQL API
     */
    authenticationType: pulumi.Input<string>;
    /**
     * Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
     */
    enhancedMetricsConfig?: pulumi.Input<inputs.appsync.GraphQlApiEnhancedMetricsConfigArgs>;
    /**
     * A map containing the list of resources with their properties and environment variables.
     */
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
     */
    introspectionConfig?: pulumi.Input<string>;
    /**
     * A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
     */
    lambdaAuthorizerConfig?: pulumi.Input<inputs.appsync.GraphQlApiLambdaAuthorizerConfigArgs>;
    /**
     * The Amazon CloudWatch Logs configuration.
     */
    logConfig?: pulumi.Input<inputs.appsync.GraphQlApiLogConfigArgs>;
    /**
     * The AWS Identity and Access Management service role ARN for a merged API. 
     */
    mergedApiExecutionRoleArn?: pulumi.Input<string>;
    /**
     * The API name
     */
    name?: pulumi.Input<string>;
    /**
     * The OpenID Connect configuration.
     */
    openIdConnectConfig?: pulumi.Input<inputs.appsync.GraphQlApiOpenIdConnectConfigArgs>;
    /**
     * The owner contact information for an API resource.
     */
    ownerContact?: pulumi.Input<string>;
    /**
     * The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
     */
    queryDepthLimit?: pulumi.Input<number>;
    /**
     * The maximum number of resolvers that can be invoked in a single request.
     */
    resolverCountLimit?: pulumi.Input<number>;
    /**
     * An arbitrary set of tags (key-value pairs) for this GraphQL API.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
     */
    userPoolConfig?: pulumi.Input<inputs.appsync.GraphQlApiUserPoolConfigArgs>;
    /**
     * Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
     */
    visibility?: pulumi.Input<string>;
    /**
     * A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
     */
    xrayEnabled?: pulumi.Input<boolean>;
}
