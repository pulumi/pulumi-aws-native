// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppSync::DomainName
 */
export class DomainName extends pulumi.CustomResource {
    /**
     * Get an existing DomainName resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DomainName {
        return new DomainName(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appsync:DomainName';

    /**
     * Returns true if the given object is an instance of DomainName.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainName {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainName.__pulumiType;
    }

    /**
     * The domain name provided by AWS AppSync .
     */
    declare public /*out*/ readonly appSyncDomainName: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the certificate. This will be an Certificate Manager certificate.
     */
    declare public readonly certificateArn: pulumi.Output<string>;
    /**
     * The decription for your domain name.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The domain name.
     */
    declare public readonly domainName: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) for the Domain Name.
     */
    declare public /*out*/ readonly domainNameArn: pulumi.Output<string>;
    /**
     * The ID of your Amazon RouteÂ 53 hosted zone.
     */
    declare public /*out*/ readonly hostedZoneId: pulumi.Output<string>;
    /**
     * A set of tags (key-value pairs) for this domain name.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a DomainName resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainNameArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.certificateArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'certificateArn'");
            }
            if (args?.domainName === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            resourceInputs["certificateArn"] = args?.certificateArn;
            resourceInputs["description"] = args?.description;
            resourceInputs["domainName"] = args?.domainName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["appSyncDomainName"] = undefined /*out*/;
            resourceInputs["domainNameArn"] = undefined /*out*/;
            resourceInputs["hostedZoneId"] = undefined /*out*/;
        } else {
            resourceInputs["appSyncDomainName"] = undefined /*out*/;
            resourceInputs["certificateArn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["domainNameArn"] = undefined /*out*/;
            resourceInputs["hostedZoneId"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["certificateArn", "domainName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DomainName.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DomainName resource.
 */
export interface DomainNameArgs {
    /**
     * The Amazon Resource Name (ARN) of the certificate. This will be an Certificate Manager certificate.
     */
    certificateArn: pulumi.Input<string>;
    /**
     * The decription for your domain name.
     */
    description?: pulumi.Input<string>;
    /**
     * The domain name.
     */
    domainName: pulumi.Input<string>;
    /**
     * A set of tags (key-value pairs) for this domain name.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
