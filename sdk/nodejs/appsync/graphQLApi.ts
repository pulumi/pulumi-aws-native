// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppSync::GraphQLApi
 *
 * @deprecated GraphQLApi is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class GraphQLApi extends pulumi.CustomResource {
    /**
     * Get an existing GraphQLApi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GraphQLApi {
        pulumi.log.warn("GraphQLApi is deprecated: GraphQLApi is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new GraphQLApi(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appsync:GraphQLApi';

    /**
     * Returns true if the given object is an instance of GraphQLApi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GraphQLApi {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GraphQLApi.__pulumiType;
    }

    public readonly additionalAuthenticationProviders!: pulumi.Output<outputs.appsync.GraphQLApiAdditionalAuthenticationProvider[] | undefined>;
    public /*out*/ readonly apiId!: pulumi.Output<string>;
    public readonly apiType!: pulumi.Output<string | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly authenticationType!: pulumi.Output<string>;
    public /*out*/ readonly graphQlDns!: pulumi.Output<string>;
    public /*out*/ readonly graphQlUrl!: pulumi.Output<string>;
    public readonly lambdaAuthorizerConfig!: pulumi.Output<outputs.appsync.GraphQLApiLambdaAuthorizerConfig | undefined>;
    public readonly logConfig!: pulumi.Output<outputs.appsync.GraphQLApiLogConfig | undefined>;
    public readonly mergedApiExecutionRoleArn!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly openIdConnectConfig!: pulumi.Output<outputs.appsync.GraphQLApiOpenIDConnectConfig | undefined>;
    public readonly ownerContact!: pulumi.Output<string | undefined>;
    public /*out*/ readonly realtimeDns!: pulumi.Output<string>;
    public /*out*/ readonly realtimeUrl!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.appsync.GraphQLApiTag[] | undefined>;
    public readonly userPoolConfig!: pulumi.Output<outputs.appsync.GraphQLApiUserPoolConfig | undefined>;
    public readonly visibility!: pulumi.Output<string | undefined>;
    public readonly xrayEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a GraphQLApi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated GraphQLApi is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: GraphQLApiArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("GraphQLApi is deprecated: GraphQLApi is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.authenticationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationType'");
            }
            resourceInputs["additionalAuthenticationProviders"] = args ? args.additionalAuthenticationProviders : undefined;
            resourceInputs["apiType"] = args ? args.apiType : undefined;
            resourceInputs["authenticationType"] = args ? args.authenticationType : undefined;
            resourceInputs["lambdaAuthorizerConfig"] = args ? args.lambdaAuthorizerConfig : undefined;
            resourceInputs["logConfig"] = args ? args.logConfig : undefined;
            resourceInputs["mergedApiExecutionRoleArn"] = args ? args.mergedApiExecutionRoleArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["openIdConnectConfig"] = args ? args.openIdConnectConfig : undefined;
            resourceInputs["ownerContact"] = args ? args.ownerContact : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userPoolConfig"] = args ? args.userPoolConfig : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
            resourceInputs["xrayEnabled"] = args ? args.xrayEnabled : undefined;
            resourceInputs["apiId"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["graphQlDns"] = undefined /*out*/;
            resourceInputs["graphQlUrl"] = undefined /*out*/;
            resourceInputs["realtimeDns"] = undefined /*out*/;
            resourceInputs["realtimeUrl"] = undefined /*out*/;
        } else {
            resourceInputs["additionalAuthenticationProviders"] = undefined /*out*/;
            resourceInputs["apiId"] = undefined /*out*/;
            resourceInputs["apiType"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["authenticationType"] = undefined /*out*/;
            resourceInputs["graphQlDns"] = undefined /*out*/;
            resourceInputs["graphQlUrl"] = undefined /*out*/;
            resourceInputs["lambdaAuthorizerConfig"] = undefined /*out*/;
            resourceInputs["logConfig"] = undefined /*out*/;
            resourceInputs["mergedApiExecutionRoleArn"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["openIdConnectConfig"] = undefined /*out*/;
            resourceInputs["ownerContact"] = undefined /*out*/;
            resourceInputs["realtimeDns"] = undefined /*out*/;
            resourceInputs["realtimeUrl"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["userPoolConfig"] = undefined /*out*/;
            resourceInputs["visibility"] = undefined /*out*/;
            resourceInputs["xrayEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GraphQLApi.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a GraphQLApi resource.
 */
export interface GraphQLApiArgs {
    additionalAuthenticationProviders?: pulumi.Input<pulumi.Input<inputs.appsync.GraphQLApiAdditionalAuthenticationProviderArgs>[]>;
    apiType?: pulumi.Input<string>;
    authenticationType: pulumi.Input<string>;
    lambdaAuthorizerConfig?: pulumi.Input<inputs.appsync.GraphQLApiLambdaAuthorizerConfigArgs>;
    logConfig?: pulumi.Input<inputs.appsync.GraphQLApiLogConfigArgs>;
    mergedApiExecutionRoleArn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    openIdConnectConfig?: pulumi.Input<inputs.appsync.GraphQLApiOpenIDConnectConfigArgs>;
    ownerContact?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.appsync.GraphQLApiTagArgs>[]>;
    userPoolConfig?: pulumi.Input<inputs.appsync.GraphQLApiUserPoolConfigArgs>;
    visibility?: pulumi.Input<string>;
    xrayEnabled?: pulumi.Input<boolean>;
}
