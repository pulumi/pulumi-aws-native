// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::AppSync::SourceApiAssociation
 */
export class SourceApiAssociation extends pulumi.CustomResource {
    /**
     * Get an existing SourceApiAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SourceApiAssociation {
        return new SourceApiAssociation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:appsync:SourceApiAssociation';

    /**
     * Returns true if the given object is an instance of SourceApiAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SourceApiAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SourceApiAssociation.__pulumiType;
    }

    /**
     * ARN of the SourceApiAssociation.
     */
    public /*out*/ readonly associationArn!: pulumi.Output<string>;
    /**
     * Id of the SourceApiAssociation.
     */
    public /*out*/ readonly associationId!: pulumi.Output<string>;
    /**
     * Description of the SourceApiAssociation.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Date of last schema successful merge.
     */
    public /*out*/ readonly lastSuccessfulMergeDate!: pulumi.Output<string>;
    /**
     * ARN of the Merged API in the association.
     */
    public /*out*/ readonly mergedApiArn!: pulumi.Output<string>;
    /**
     * GraphQLApiId of the Merged API in the association.
     */
    public /*out*/ readonly mergedApiId!: pulumi.Output<string>;
    /**
     * Identifier of the Merged GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN
     */
    public readonly mergedApiIdentifier!: pulumi.Output<string | undefined>;
    /**
     * ARN of the source API in the association.
     */
    public /*out*/ readonly sourceApiArn!: pulumi.Output<string>;
    /**
     * Customized configuration for SourceApiAssociation.
     */
    public readonly sourceApiAssociationConfig!: pulumi.Output<outputs.appsync.SourceApiAssociationConfig | undefined>;
    /**
     * Current status of SourceApiAssociation.
     */
    public /*out*/ readonly sourceApiAssociationStatus!: pulumi.Output<enums.appsync.SourceApiAssociationStatus>;
    /**
     * Current SourceApiAssociation status details.
     */
    public /*out*/ readonly sourceApiAssociationStatusDetail!: pulumi.Output<string>;
    /**
     * GraphQLApiId of the source API in the association.
     */
    public /*out*/ readonly sourceApiId!: pulumi.Output<string>;
    /**
     * Identifier of the Source GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN
     */
    public readonly sourceApiIdentifier!: pulumi.Output<string | undefined>;

    /**
     * Create a SourceApiAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SourceApiAssociationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["mergedApiIdentifier"] = args ? args.mergedApiIdentifier : undefined;
            resourceInputs["sourceApiAssociationConfig"] = args ? args.sourceApiAssociationConfig : undefined;
            resourceInputs["sourceApiIdentifier"] = args ? args.sourceApiIdentifier : undefined;
            resourceInputs["associationArn"] = undefined /*out*/;
            resourceInputs["associationId"] = undefined /*out*/;
            resourceInputs["lastSuccessfulMergeDate"] = undefined /*out*/;
            resourceInputs["mergedApiArn"] = undefined /*out*/;
            resourceInputs["mergedApiId"] = undefined /*out*/;
            resourceInputs["sourceApiArn"] = undefined /*out*/;
            resourceInputs["sourceApiAssociationStatus"] = undefined /*out*/;
            resourceInputs["sourceApiAssociationStatusDetail"] = undefined /*out*/;
            resourceInputs["sourceApiId"] = undefined /*out*/;
        } else {
            resourceInputs["associationArn"] = undefined /*out*/;
            resourceInputs["associationId"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["lastSuccessfulMergeDate"] = undefined /*out*/;
            resourceInputs["mergedApiArn"] = undefined /*out*/;
            resourceInputs["mergedApiId"] = undefined /*out*/;
            resourceInputs["mergedApiIdentifier"] = undefined /*out*/;
            resourceInputs["sourceApiArn"] = undefined /*out*/;
            resourceInputs["sourceApiAssociationConfig"] = undefined /*out*/;
            resourceInputs["sourceApiAssociationStatus"] = undefined /*out*/;
            resourceInputs["sourceApiAssociationStatusDetail"] = undefined /*out*/;
            resourceInputs["sourceApiId"] = undefined /*out*/;
            resourceInputs["sourceApiIdentifier"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SourceApiAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SourceApiAssociation resource.
 */
export interface SourceApiAssociationArgs {
    /**
     * Description of the SourceApiAssociation.
     */
    description?: pulumi.Input<string>;
    /**
     * Identifier of the Merged GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN
     */
    mergedApiIdentifier?: pulumi.Input<string>;
    /**
     * Customized configuration for SourceApiAssociation.
     */
    sourceApiAssociationConfig?: pulumi.Input<inputs.appsync.SourceApiAssociationConfigArgs>;
    /**
     * Identifier of the Source GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN
     */
    sourceApiIdentifier?: pulumi.Input<string>;
}
