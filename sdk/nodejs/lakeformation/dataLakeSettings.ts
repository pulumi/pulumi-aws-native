// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::LakeFormation::DataLakeSettings
 *
 * @deprecated DataLakeSettings is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class DataLakeSettings extends pulumi.CustomResource {
    /**
     * Get an existing DataLakeSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataLakeSettings {
        pulumi.log.warn("DataLakeSettings is deprecated: DataLakeSettings is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new DataLakeSettings(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:lakeformation:DataLakeSettings';

    /**
     * Returns true if the given object is an instance of DataLakeSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataLakeSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataLakeSettings.__pulumiType;
    }

    public readonly admins!: pulumi.Output<outputs.lakeformation.DataLakeSettingsAdmins | undefined>;
    public readonly allowExternalDataFiltering!: pulumi.Output<boolean | undefined>;
    public readonly allowFullTableExternalDataAccess!: pulumi.Output<boolean | undefined>;
    public readonly authorizedSessionTagValueList!: pulumi.Output<string[] | undefined>;
    public readonly createDatabaseDefaultPermissions!: pulumi.Output<outputs.lakeformation.DataLakeSettingsCreateDatabaseDefaultPermissions | undefined>;
    public readonly createTableDefaultPermissions!: pulumi.Output<outputs.lakeformation.DataLakeSettingsCreateTableDefaultPermissions | undefined>;
    public readonly externalDataFilteringAllowList!: pulumi.Output<outputs.lakeformation.DataLakeSettingsExternalDataFilteringAllowList | undefined>;
    public readonly mutationType!: pulumi.Output<string | undefined>;
    /**
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::LakeFormation::DataLakeSettings` for more information about the expected schema for this property.
     */
    public readonly parameters!: pulumi.Output<any | undefined>;
    public readonly trustedResourceOwners!: pulumi.Output<string[] | undefined>;

    /**
     * Create a DataLakeSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated DataLakeSettings is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: DataLakeSettingsArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("DataLakeSettings is deprecated: DataLakeSettings is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["admins"] = args ? args.admins : undefined;
            resourceInputs["allowExternalDataFiltering"] = args ? args.allowExternalDataFiltering : undefined;
            resourceInputs["allowFullTableExternalDataAccess"] = args ? args.allowFullTableExternalDataAccess : undefined;
            resourceInputs["authorizedSessionTagValueList"] = args ? args.authorizedSessionTagValueList : undefined;
            resourceInputs["createDatabaseDefaultPermissions"] = args ? args.createDatabaseDefaultPermissions : undefined;
            resourceInputs["createTableDefaultPermissions"] = args ? args.createTableDefaultPermissions : undefined;
            resourceInputs["externalDataFilteringAllowList"] = args ? args.externalDataFilteringAllowList : undefined;
            resourceInputs["mutationType"] = args ? args.mutationType : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["trustedResourceOwners"] = args ? args.trustedResourceOwners : undefined;
        } else {
            resourceInputs["admins"] = undefined /*out*/;
            resourceInputs["allowExternalDataFiltering"] = undefined /*out*/;
            resourceInputs["allowFullTableExternalDataAccess"] = undefined /*out*/;
            resourceInputs["authorizedSessionTagValueList"] = undefined /*out*/;
            resourceInputs["createDatabaseDefaultPermissions"] = undefined /*out*/;
            resourceInputs["createTableDefaultPermissions"] = undefined /*out*/;
            resourceInputs["externalDataFilteringAllowList"] = undefined /*out*/;
            resourceInputs["mutationType"] = undefined /*out*/;
            resourceInputs["parameters"] = undefined /*out*/;
            resourceInputs["trustedResourceOwners"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataLakeSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DataLakeSettings resource.
 */
export interface DataLakeSettingsArgs {
    admins?: pulumi.Input<inputs.lakeformation.DataLakeSettingsAdminsArgs>;
    allowExternalDataFiltering?: pulumi.Input<boolean>;
    allowFullTableExternalDataAccess?: pulumi.Input<boolean>;
    authorizedSessionTagValueList?: pulumi.Input<pulumi.Input<string>[]>;
    createDatabaseDefaultPermissions?: pulumi.Input<inputs.lakeformation.DataLakeSettingsCreateDatabaseDefaultPermissionsArgs>;
    createTableDefaultPermissions?: pulumi.Input<inputs.lakeformation.DataLakeSettingsCreateTableDefaultPermissionsArgs>;
    externalDataFilteringAllowList?: pulumi.Input<inputs.lakeformation.DataLakeSettingsExternalDataFilteringAllowListArgs>;
    mutationType?: pulumi.Input<string>;
    /**
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::LakeFormation::DataLakeSettings` for more information about the expected schema for this property.
     */
    parameters?: any;
    trustedResourceOwners?: pulumi.Input<pulumi.Input<string>[]>;
}
