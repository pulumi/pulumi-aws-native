// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The ``AWS::LakeFormation::PrincipalPermissions`` resource represents the permissions that a principal has on a GLUDC resource (such as GLUlong databases or GLUlong tables). When you create a ``PrincipalPermissions`` resource, the permissions are granted via the LFlong ``GrantPermissions`` API operation. When you delete a ``PrincipalPermissions`` resource, the permissions on principal-resource pair are revoked via the LFlong ``RevokePermissions`` API operation.
 */
export class PrincipalPermissions extends pulumi.CustomResource {
    /**
     * Get an existing PrincipalPermissions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PrincipalPermissions {
        return new PrincipalPermissions(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:lakeformation:PrincipalPermissions';

    /**
     * Returns true if the given object is an instance of PrincipalPermissions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrincipalPermissions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrincipalPermissions.__pulumiType;
    }

    /**
     * The identifier for the GLUDC. By default, the account ID. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     */
    public readonly catalog!: pulumi.Output<string | undefined>;
    /**
     * The permissions granted or revoked.
     */
    public readonly permissions!: pulumi.Output<enums.lakeformation.PrincipalPermissionsPermission[]>;
    /**
     * Indicates the ability to grant permissions (as a subset of permissions granted).
     */
    public readonly permissionsWithGrantOption!: pulumi.Output<enums.lakeformation.PrincipalPermissionsPermission[]>;
    /**
     * The principal to be granted a permission.
     */
    public readonly principal!: pulumi.Output<outputs.lakeformation.PrincipalPermissionsDataLakePrincipal>;
    public /*out*/ readonly principalIdentifier!: pulumi.Output<string>;
    /**
     * The resource to be granted or revoked permissions.
     */
    public readonly resource!: pulumi.Output<outputs.lakeformation.PrincipalPermissionsResource>;
    public /*out*/ readonly resourceIdentifier!: pulumi.Output<string>;

    /**
     * Create a PrincipalPermissions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrincipalPermissionsArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.permissions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permissions'");
            }
            if ((!args || args.permissionsWithGrantOption === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permissionsWithGrantOption'");
            }
            if ((!args || args.principal === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principal'");
            }
            if ((!args || args.resource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resource'");
            }
            resourceInputs["catalog"] = args ? args.catalog : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["permissionsWithGrantOption"] = args ? args.permissionsWithGrantOption : undefined;
            resourceInputs["principal"] = args ? args.principal : undefined;
            resourceInputs["resource"] = args ? args.resource : undefined;
            resourceInputs["principalIdentifier"] = undefined /*out*/;
            resourceInputs["resourceIdentifier"] = undefined /*out*/;
        } else {
            resourceInputs["catalog"] = undefined /*out*/;
            resourceInputs["permissions"] = undefined /*out*/;
            resourceInputs["permissionsWithGrantOption"] = undefined /*out*/;
            resourceInputs["principal"] = undefined /*out*/;
            resourceInputs["principalIdentifier"] = undefined /*out*/;
            resourceInputs["resource"] = undefined /*out*/;
            resourceInputs["resourceIdentifier"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["catalog", "permissions[*]", "permissionsWithGrantOption[*]", "principal", "resource"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(PrincipalPermissions.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a PrincipalPermissions resource.
 */
export interface PrincipalPermissionsArgs {
    /**
     * The identifier for the GLUDC. By default, the account ID. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     */
    catalog?: pulumi.Input<string>;
    /**
     * The permissions granted or revoked.
     */
    permissions: pulumi.Input<pulumi.Input<enums.lakeformation.PrincipalPermissionsPermission>[]>;
    /**
     * Indicates the ability to grant permissions (as a subset of permissions granted).
     */
    permissionsWithGrantOption: pulumi.Input<pulumi.Input<enums.lakeformation.PrincipalPermissionsPermission>[]>;
    /**
     * The principal to be granted a permission.
     */
    principal: pulumi.Input<inputs.lakeformation.PrincipalPermissionsDataLakePrincipalArgs>;
    /**
     * The resource to be granted or revoked permissions.
     */
    resource: pulumi.Input<inputs.lakeformation.PrincipalPermissionsResourceArgs>;
}
