// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DataCellsFilterArgs } from "./dataCellsFilter";
export type DataCellsFilter = import("./dataCellsFilter").DataCellsFilter;
export const DataCellsFilter: typeof import("./dataCellsFilter").DataCellsFilter = null as any;
utilities.lazyLoad(exports, ["DataCellsFilter"], () => require("./dataCellsFilter"));

export { GetPrincipalPermissionsArgs, GetPrincipalPermissionsResult, GetPrincipalPermissionsOutputArgs } from "./getPrincipalPermissions";
export const getPrincipalPermissions: typeof import("./getPrincipalPermissions").getPrincipalPermissions = null as any;
export const getPrincipalPermissionsOutput: typeof import("./getPrincipalPermissions").getPrincipalPermissionsOutput = null as any;
utilities.lazyLoad(exports, ["getPrincipalPermissions","getPrincipalPermissionsOutput"], () => require("./getPrincipalPermissions"));

export { GetTagArgs, GetTagResult, GetTagOutputArgs } from "./getTag";
export const getTag: typeof import("./getTag").getTag = null as any;
export const getTagOutput: typeof import("./getTag").getTagOutput = null as any;
utilities.lazyLoad(exports, ["getTag","getTagOutput"], () => require("./getTag"));

export { GetTagAssociationArgs, GetTagAssociationResult, GetTagAssociationOutputArgs } from "./getTagAssociation";
export const getTagAssociation: typeof import("./getTagAssociation").getTagAssociation = null as any;
export const getTagAssociationOutput: typeof import("./getTagAssociation").getTagAssociationOutput = null as any;
utilities.lazyLoad(exports, ["getTagAssociation","getTagAssociationOutput"], () => require("./getTagAssociation"));

export { PrincipalPermissionsArgs } from "./principalPermissions";
export type PrincipalPermissions = import("./principalPermissions").PrincipalPermissions;
export const PrincipalPermissions: typeof import("./principalPermissions").PrincipalPermissions = null as any;
utilities.lazyLoad(exports, ["PrincipalPermissions"], () => require("./principalPermissions"));

export { TagArgs } from "./tag";
export type Tag = import("./tag").Tag;
export const Tag: typeof import("./tag").Tag = null as any;
utilities.lazyLoad(exports, ["Tag"], () => require("./tag"));

export { TagAssociationArgs } from "./tagAssociation";
export type TagAssociation = import("./tagAssociation").TagAssociation;
export const TagAssociation: typeof import("./tagAssociation").TagAssociation = null as any;
utilities.lazyLoad(exports, ["TagAssociation"], () => require("./tagAssociation"));


// Export enums:
export * from "../types/enums/lakeformation";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:lakeformation:DataCellsFilter":
                return new DataCellsFilter(name, <any>undefined, { urn })
            case "aws-native:lakeformation:PrincipalPermissions":
                return new PrincipalPermissions(name, <any>undefined, { urn })
            case "aws-native:lakeformation:Tag":
                return new Tag(name, <any>undefined, { urn })
            case "aws-native:lakeformation:TagAssociation":
                return new TagAssociation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "lakeformation", _module)
