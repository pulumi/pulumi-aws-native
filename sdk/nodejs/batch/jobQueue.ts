// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Batch::JobQueue
 *
 * @deprecated JobQueue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class JobQueue extends pulumi.CustomResource {
    /**
     * Get an existing JobQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): JobQueue {
        pulumi.log.warn("JobQueue is deprecated: JobQueue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new JobQueue(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:batch:JobQueue';

    /**
     * Returns true if the given object is an instance of JobQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JobQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobQueue.__pulumiType;
    }

    public readonly computeEnvironmentOrder!: pulumi.Output<outputs.batch.JobQueueComputeEnvironmentOrder[]>;
    public readonly jobQueueName!: pulumi.Output<string | undefined>;
    public readonly priority!: pulumi.Output<number>;
    public readonly schedulingPolicyArn!: pulumi.Output<string | undefined>;
    public readonly state!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<any | undefined>;

    /**
     * Create a JobQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated JobQueue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: JobQueueArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("JobQueue is deprecated: JobQueue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.computeEnvironmentOrder === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeEnvironmentOrder'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            inputs["computeEnvironmentOrder"] = args ? args.computeEnvironmentOrder : undefined;
            inputs["jobQueueName"] = args ? args.jobQueueName : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["schedulingPolicyArn"] = args ? args.schedulingPolicyArn : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        } else {
            inputs["computeEnvironmentOrder"] = undefined /*out*/;
            inputs["jobQueueName"] = undefined /*out*/;
            inputs["priority"] = undefined /*out*/;
            inputs["schedulingPolicyArn"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(JobQueue.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a JobQueue resource.
 */
export interface JobQueueArgs {
    computeEnvironmentOrder: pulumi.Input<pulumi.Input<inputs.batch.JobQueueComputeEnvironmentOrderArgs>[]>;
    jobQueueName?: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    schedulingPolicyArn?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: any;
}
