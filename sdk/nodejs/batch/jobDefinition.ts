// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Batch::JobDefinition
 *
 * @deprecated JobDefinition is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class JobDefinition extends pulumi.CustomResource {
    /**
     * Get an existing JobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): JobDefinition {
        pulumi.log.warn("JobDefinition is deprecated: JobDefinition is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new JobDefinition(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:batch:JobDefinition';

    /**
     * Returns true if the given object is an instance of JobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JobDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobDefinition.__pulumiType;
    }

    public readonly containerProperties!: pulumi.Output<outputs.batch.JobDefinitionContainerProperties | undefined>;
    public readonly jobDefinitionName!: pulumi.Output<string | undefined>;
    public readonly nodeProperties!: pulumi.Output<outputs.batch.JobDefinitionNodeProperties | undefined>;
    public readonly parameters!: pulumi.Output<any | undefined>;
    public readonly platformCapabilities!: pulumi.Output<string[] | undefined>;
    public readonly propagateTags!: pulumi.Output<boolean | undefined>;
    public readonly retryStrategy!: pulumi.Output<outputs.batch.JobDefinitionRetryStrategy | undefined>;
    public readonly schedulingPriority!: pulumi.Output<number | undefined>;
    public readonly tags!: pulumi.Output<any | undefined>;
    public readonly timeout!: pulumi.Output<outputs.batch.JobDefinitionTimeout | undefined>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a JobDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated JobDefinition is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: JobDefinitionArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("JobDefinition is deprecated: JobDefinition is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["containerProperties"] = args ? args.containerProperties : undefined;
            resourceInputs["jobDefinitionName"] = args ? args.jobDefinitionName : undefined;
            resourceInputs["nodeProperties"] = args ? args.nodeProperties : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["platformCapabilities"] = args ? args.platformCapabilities : undefined;
            resourceInputs["propagateTags"] = args ? args.propagateTags : undefined;
            resourceInputs["retryStrategy"] = args ? args.retryStrategy : undefined;
            resourceInputs["schedulingPriority"] = args ? args.schedulingPriority : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        } else {
            resourceInputs["containerProperties"] = undefined /*out*/;
            resourceInputs["jobDefinitionName"] = undefined /*out*/;
            resourceInputs["nodeProperties"] = undefined /*out*/;
            resourceInputs["parameters"] = undefined /*out*/;
            resourceInputs["platformCapabilities"] = undefined /*out*/;
            resourceInputs["propagateTags"] = undefined /*out*/;
            resourceInputs["retryStrategy"] = undefined /*out*/;
            resourceInputs["schedulingPriority"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["timeout"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(JobDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a JobDefinition resource.
 */
export interface JobDefinitionArgs {
    containerProperties?: pulumi.Input<inputs.batch.JobDefinitionContainerPropertiesArgs>;
    jobDefinitionName?: pulumi.Input<string>;
    nodeProperties?: pulumi.Input<inputs.batch.JobDefinitionNodePropertiesArgs>;
    parameters?: any;
    platformCapabilities?: pulumi.Input<pulumi.Input<string>[]>;
    propagateTags?: pulumi.Input<boolean>;
    retryStrategy?: pulumi.Input<inputs.batch.JobDefinitionRetryStrategyArgs>;
    schedulingPriority?: pulumi.Input<number>;
    tags?: any;
    timeout?: pulumi.Input<inputs.batch.JobDefinitionTimeoutArgs>;
    type: pulumi.Input<string>;
}
