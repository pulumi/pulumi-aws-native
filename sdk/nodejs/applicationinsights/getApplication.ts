// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::ApplicationInsights::Application
 */
export function getApplication(args: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:applicationinsights:getApplication", {
        "applicationARN": args.applicationARN,
    }, opts);
}

export interface GetApplicationArgs {
    /**
     * The ARN of the ApplicationInsights application.
     */
    applicationARN: string;
}

export interface GetApplicationResult {
    /**
     * The ARN of the ApplicationInsights application.
     */
    readonly applicationARN?: string;
    /**
     * If set to true, application will be configured with recommended monitoring configuration.
     */
    readonly autoConfigurationEnabled?: boolean;
    /**
     * Indicates whether Application Insights can listen to CloudWatch events for the application resources.
     */
    readonly cWEMonitorEnabled?: boolean;
    /**
     * The monitoring settings of the components.
     */
    readonly componentMonitoringSettings?: outputs.applicationinsights.ApplicationComponentMonitoringSetting[];
    /**
     * The custom grouped components.
     */
    readonly customComponents?: outputs.applicationinsights.ApplicationCustomComponent[];
    /**
     * The log pattern sets.
     */
    readonly logPatternSets?: outputs.applicationinsights.ApplicationLogPatternSet[];
    /**
     * When set to true, creates opsItems for any problems detected on an application.
     */
    readonly opsCenterEnabled?: boolean;
    /**
     * The SNS topic provided to Application Insights that is associated to the created opsItem.
     */
    readonly opsItemSNSTopicArn?: string;
    /**
     * The tags of Application Insights application.
     */
    readonly tags?: outputs.applicationinsights.ApplicationTag[];
}

export function getApplicationOutput(args: GetApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationResult> {
    return pulumi.output(args).apply(a => getApplication(a, opts))
}

export interface GetApplicationOutputArgs {
    /**
     * The ARN of the ApplicationInsights application.
     */
    applicationARN: pulumi.Input<string>;
}
