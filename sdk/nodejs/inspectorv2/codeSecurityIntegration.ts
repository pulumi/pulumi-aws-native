// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Inspector CodeSecurityIntegration resource schema
 */
export class CodeSecurityIntegration extends pulumi.CustomResource {
    /**
     * Get an existing CodeSecurityIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CodeSecurityIntegration {
        return new CodeSecurityIntegration(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:inspectorv2:CodeSecurityIntegration';

    /**
     * Returns true if the given object is an instance of CodeSecurityIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CodeSecurityIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CodeSecurityIntegration.__pulumiType;
    }

    /**
     * Code Security Integration ARN
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * Authorization URL for OAuth flow
     */
    declare public /*out*/ readonly authorizationUrl: pulumi.Output<string>;
    /**
     * Create Integration Details
     */
    declare public readonly createIntegrationDetails: pulumi.Output<outputs.inspectorv2.CodeSecurityIntegrationCreateDetails | undefined>;
    /**
     * Creation timestamp
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Last update timestamp
     */
    declare public /*out*/ readonly lastUpdatedAt: pulumi.Output<string>;
    /**
     * Code Security Integration name
     */
    declare public readonly name: pulumi.Output<string | undefined>;
    /**
     * Integration Status
     */
    declare public /*out*/ readonly status: pulumi.Output<enums.inspectorv2.CodeSecurityIntegrationIntegrationStatus>;
    /**
     * Reason for the current status
     */
    declare public /*out*/ readonly statusReason: pulumi.Output<string>;
    /**
     * The tags to apply to the code security integration.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Integration Type
     */
    declare public readonly type: pulumi.Output<enums.inspectorv2.CodeSecurityIntegrationIntegrationType | undefined>;
    /**
     * Update Integration Details
     */
    declare public readonly updateIntegrationDetails: pulumi.Output<outputs.inspectorv2.CodeSecurityIntegrationUpdateDetails | undefined>;

    /**
     * Create a CodeSecurityIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CodeSecurityIntegrationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["createIntegrationDetails"] = args?.createIntegrationDetails;
            resourceInputs["name"] = args?.name;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["type"] = args?.type;
            resourceInputs["updateIntegrationDetails"] = args?.updateIntegrationDetails;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["authorizationUrl"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["authorizationUrl"] = undefined /*out*/;
            resourceInputs["createIntegrationDetails"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updateIntegrationDetails"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["createIntegrationDetails", "tags.*"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(CodeSecurityIntegration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CodeSecurityIntegration resource.
 */
export interface CodeSecurityIntegrationArgs {
    /**
     * Create Integration Details
     */
    createIntegrationDetails?: pulumi.Input<inputs.inspectorv2.CodeSecurityIntegrationCreateDetailsArgs>;
    /**
     * Code Security Integration name
     */
    name?: pulumi.Input<string>;
    /**
     * The tags to apply to the code security integration.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Integration Type
     */
    type?: pulumi.Input<enums.inspectorv2.CodeSecurityIntegrationIntegrationType>;
    /**
     * Update Integration Details
     */
    updateIntegrationDetails?: pulumi.Input<inputs.inspectorv2.CodeSecurityIntegrationUpdateDetailsArgs>;
}
