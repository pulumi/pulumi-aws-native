// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::IoTTwinMaker::SyncJob
 */
export class SyncJob extends pulumi.CustomResource {
    /**
     * Get an existing SyncJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SyncJob {
        return new SyncJob(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:iottwinmaker:SyncJob';

    /**
     * Returns true if the given object is an instance of SyncJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SyncJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SyncJob.__pulumiType;
    }

    /**
     * The ARN of the SyncJob.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The date and time when the sync job was created.
     */
    public /*out*/ readonly creationDateTime!: pulumi.Output<string>;
    /**
     * The state of SyncJob.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The IAM Role that execute SyncJob.
     */
    public readonly syncRole!: pulumi.Output<string>;
    /**
     * The source of the SyncJob.
     */
    public readonly syncSource!: pulumi.Output<string>;
    /**
     * A key-value pair to associate with a resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The date and time when the sync job was updated.
     */
    public /*out*/ readonly updateDateTime!: pulumi.Output<string>;
    /**
     * The ID of the workspace.
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a SyncJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SyncJobArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.syncRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'syncRole'");
            }
            if ((!args || args.syncSource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'syncSource'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["syncRole"] = args ? args.syncRole : undefined;
            resourceInputs["syncSource"] = args ? args.syncSource : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationDateTime"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateDateTime"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationDateTime"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["syncRole"] = undefined /*out*/;
            resourceInputs["syncSource"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["updateDateTime"] = undefined /*out*/;
            resourceInputs["workspaceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["syncRole", "syncSource", "tags.*", "workspaceId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(SyncJob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SyncJob resource.
 */
export interface SyncJobArgs {
    /**
     * The IAM Role that execute SyncJob.
     */
    syncRole: pulumi.Input<string>;
    /**
     * The source of the SyncJob.
     */
    syncSource: pulumi.Input<string>;
    /**
     * A key-value pair to associate with a resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the workspace.
     */
    workspaceId: pulumi.Input<string>;
}
