// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::IoTTwinMaker::Entity
 */
export function getEntity(args: GetEntityArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:iottwinmaker:getEntity", {
        "entityId": args.entityId,
        "workspaceId": args.workspaceId,
    }, opts);
}

export interface GetEntityArgs {
    /**
     * The ID of the entity.
     */
    entityId: string;
    /**
     * The ID of the workspace.
     */
    workspaceId: string;
}

export interface GetEntityResult {
    /**
     * The ARN of the entity.
     */
    readonly arn?: string;
    /**
     * A map that sets information about a component type.
     */
    readonly components?: any;
    /**
     * The date and time when the entity was created.
     */
    readonly creationDateTime?: string;
    /**
     * The description of the entity.
     */
    readonly description?: string;
    /**
     * The name of the entity.
     */
    readonly entityName?: string;
    /**
     * A Boolean value that specifies whether the entity has child entities or not.
     */
    readonly hasChildEntities?: boolean;
    /**
     * The ID of the parent entity.
     */
    readonly parentEntityId?: string;
    /**
     * The current status of the entity.
     */
    readonly status?: outputs.iottwinmaker.EntityStatus;
    /**
     * A key-value pair to associate with a resource.
     */
    readonly tags?: any;
    /**
     * The last date and time when the entity was updated.
     */
    readonly updateDateTime?: string;
}

export function getEntityOutput(args: GetEntityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntityResult> {
    return pulumi.output(args).apply(a => getEntity(a, opts))
}

export interface GetEntityOutputArgs {
    /**
     * The ID of the entity.
     */
    entityId: pulumi.Input<string>;
    /**
     * The ID of the workspace.
     */
    workspaceId: pulumi.Input<string>;
}
