// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::IoTTwinMaker::Scene
 */
export function getScene(args: GetSceneArgs, opts?: pulumi.InvokeOptions): Promise<GetSceneResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:iottwinmaker:getScene", {
        "sceneId": args.sceneId,
        "workspaceId": args.workspaceId,
    }, opts);
}

export interface GetSceneArgs {
    /**
     * The ID of the scene.
     */
    sceneId: string;
    /**
     * The ID of the scene.
     */
    workspaceId: string;
}

export interface GetSceneResult {
    /**
     * The ARN of the scene.
     */
    readonly arn?: string;
    /**
     * A list of capabilities that the scene uses to render.
     */
    readonly capabilities?: string[];
    /**
     * The relative path that specifies the location of the content definition file.
     */
    readonly contentLocation?: string;
    /**
     * The date and time when the scene was created.
     */
    readonly creationDateTime?: string;
    /**
     * The description of the scene.
     */
    readonly description?: string;
    /**
     * A key-value pair to associate with a resource.
     */
    readonly tags?: any;
    /**
     * The date and time of the current update.
     */
    readonly updateDateTime?: string;
}

export function getSceneOutput(args: GetSceneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSceneResult> {
    return pulumi.output(args).apply(a => getScene(a, opts))
}

export interface GetSceneOutputArgs {
    /**
     * The ID of the scene.
     */
    sceneId: pulumi.Input<string>;
    /**
     * The ID of the scene.
     */
    workspaceId: pulumi.Input<string>;
}
