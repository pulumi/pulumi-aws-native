// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccessPointArgs } from "./accessPoint";
export type AccessPoint = import("./accessPoint").AccessPoint;
export const AccessPoint: typeof import("./accessPoint").AccessPoint = null as any;
utilities.lazyLoad(exports, ["AccessPoint"], () => require("./accessPoint"));

export { FileSystemArgs } from "./fileSystem";
export type FileSystem = import("./fileSystem").FileSystem;
export const FileSystem: typeof import("./fileSystem").FileSystem = null as any;
utilities.lazyLoad(exports, ["FileSystem"], () => require("./fileSystem"));

export { GetAccessPointArgs, GetAccessPointResult, GetAccessPointOutputArgs } from "./getAccessPoint";
export const getAccessPoint: typeof import("./getAccessPoint").getAccessPoint = null as any;
export const getAccessPointOutput: typeof import("./getAccessPoint").getAccessPointOutput = null as any;
utilities.lazyLoad(exports, ["getAccessPoint","getAccessPointOutput"], () => require("./getAccessPoint"));

export { GetFileSystemArgs, GetFileSystemResult, GetFileSystemOutputArgs } from "./getFileSystem";
export const getFileSystem: typeof import("./getFileSystem").getFileSystem = null as any;
export const getFileSystemOutput: typeof import("./getFileSystem").getFileSystemOutput = null as any;
utilities.lazyLoad(exports, ["getFileSystem","getFileSystemOutput"], () => require("./getFileSystem"));

export { GetMountTargetArgs, GetMountTargetResult, GetMountTargetOutputArgs } from "./getMountTarget";
export const getMountTarget: typeof import("./getMountTarget").getMountTarget = null as any;
export const getMountTargetOutput: typeof import("./getMountTarget").getMountTargetOutput = null as any;
utilities.lazyLoad(exports, ["getMountTarget","getMountTargetOutput"], () => require("./getMountTarget"));

export { MountTargetArgs } from "./mountTarget";
export type MountTarget = import("./mountTarget").MountTarget;
export const MountTarget: typeof import("./mountTarget").MountTarget = null as any;
utilities.lazyLoad(exports, ["MountTarget"], () => require("./mountTarget"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:efs:AccessPoint":
                return new AccessPoint(name, <any>undefined, { urn })
            case "aws-native:efs:FileSystem":
                return new FileSystem(name, <any>undefined, { urn })
            case "aws-native:efs:MountTarget":
                return new MountTarget(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "efs", _module)
