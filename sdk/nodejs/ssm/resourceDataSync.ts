// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SSM::ResourceDataSync
 */
export class ResourceDataSync extends pulumi.CustomResource {
    /**
     * Get an existing ResourceDataSync resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourceDataSync {
        return new ResourceDataSync(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:ssm:ResourceDataSync';

    /**
     * Returns true if the given object is an instance of ResourceDataSync.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceDataSync {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceDataSync.__pulumiType;
    }

    public readonly bucketName!: pulumi.Output<string | undefined>;
    public readonly bucketPrefix!: pulumi.Output<string | undefined>;
    public readonly bucketRegion!: pulumi.Output<string | undefined>;
    public readonly kMSKeyArn!: pulumi.Output<string | undefined>;
    public readonly s3Destination!: pulumi.Output<outputs.ssm.ResourceDataSyncS3Destination | undefined>;
    public readonly syncFormat!: pulumi.Output<string | undefined>;
    public /*out*/ readonly syncName!: pulumi.Output<string>;
    public readonly syncSource!: pulumi.Output<outputs.ssm.ResourceDataSyncSyncSource | undefined>;
    public readonly syncType!: pulumi.Output<string | undefined>;

    /**
     * Create a ResourceDataSync resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResourceDataSyncArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["bucketName"] = args ? args.bucketName : undefined;
            resourceInputs["bucketPrefix"] = args ? args.bucketPrefix : undefined;
            resourceInputs["bucketRegion"] = args ? args.bucketRegion : undefined;
            resourceInputs["kMSKeyArn"] = args ? args.kMSKeyArn : undefined;
            resourceInputs["s3Destination"] = args ? args.s3Destination : undefined;
            resourceInputs["syncFormat"] = args ? args.syncFormat : undefined;
            resourceInputs["syncSource"] = args ? args.syncSource : undefined;
            resourceInputs["syncType"] = args ? args.syncType : undefined;
            resourceInputs["syncName"] = undefined /*out*/;
        } else {
            resourceInputs["bucketName"] = undefined /*out*/;
            resourceInputs["bucketPrefix"] = undefined /*out*/;
            resourceInputs["bucketRegion"] = undefined /*out*/;
            resourceInputs["kMSKeyArn"] = undefined /*out*/;
            resourceInputs["s3Destination"] = undefined /*out*/;
            resourceInputs["syncFormat"] = undefined /*out*/;
            resourceInputs["syncName"] = undefined /*out*/;
            resourceInputs["syncSource"] = undefined /*out*/;
            resourceInputs["syncType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceDataSync.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ResourceDataSync resource.
 */
export interface ResourceDataSyncArgs {
    bucketName?: pulumi.Input<string>;
    bucketPrefix?: pulumi.Input<string>;
    bucketRegion?: pulumi.Input<string>;
    kMSKeyArn?: pulumi.Input<string>;
    s3Destination?: pulumi.Input<inputs.ssm.ResourceDataSyncS3DestinationArgs>;
    syncFormat?: pulumi.Input<string>;
    syncSource?: pulumi.Input<inputs.ssm.ResourceDataSyncSyncSourceArgs>;
    syncType?: pulumi.Input<string>;
}
