// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SSM::ResourcePolicy
 */
export function getResourcePolicy(args: GetResourcePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ssm:getResourcePolicy", {
        "policyId": args.policyId,
        "resourceArn": args.resourceArn,
    }, opts);
}

export interface GetResourcePolicyArgs {
    /**
     * An unique identifier within the policies of a resource. 
     */
    policyId: string;
    /**
     * Arn of OpsItemGroup etc.
     */
    resourceArn: string;
}

export interface GetResourcePolicyResult {
    /**
     * Actual policy statement.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SSM::ResourcePolicy` for more information about the expected schema for this property.
     */
    readonly policy?: any;
    /**
     * A snapshot identifier for the policy over time.
     */
    readonly policyHash?: string;
    /**
     * An unique identifier within the policies of a resource. 
     */
    readonly policyId?: string;
}
/**
 * Resource Type definition for AWS::SSM::ResourcePolicy
 */
export function getResourcePolicyOutput(args: GetResourcePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcePolicyResult> {
    return pulumi.output(args).apply((a: any) => getResourcePolicy(a, opts))
}

export interface GetResourcePolicyOutputArgs {
    /**
     * An unique identifier within the policies of a resource. 
     */
    policyId: pulumi.Input<string>;
    /**
     * Arn of OpsItemGroup etc.
     */
    resourceArn: pulumi.Input<string>;
}
