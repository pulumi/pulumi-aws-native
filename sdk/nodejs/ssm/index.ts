// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AssociationArgs } from "./association";
export type Association = import("./association").Association;
export const Association: typeof import("./association").Association = null as any;
utilities.lazyLoad(exports, ["Association"], () => require("./association"));

export { DocumentArgs } from "./document";
export type Document = import("./document").Document;
export const Document: typeof import("./document").Document = null as any;
utilities.lazyLoad(exports, ["Document"], () => require("./document"));

export { GetAssociationArgs, GetAssociationResult, GetAssociationOutputArgs } from "./getAssociation";
export const getAssociation: typeof import("./getAssociation").getAssociation = null as any;
export const getAssociationOutput: typeof import("./getAssociation").getAssociationOutput = null as any;
utilities.lazyLoad(exports, ["getAssociation","getAssociationOutput"], () => require("./getAssociation"));

export { GetDocumentArgs, GetDocumentResult, GetDocumentOutputArgs } from "./getDocument";
export const getDocument: typeof import("./getDocument").getDocument = null as any;
export const getDocumentOutput: typeof import("./getDocument").getDocumentOutput = null as any;
utilities.lazyLoad(exports, ["getDocument","getDocumentOutput"], () => require("./getDocument"));

export { GetMaintenanceWindowArgs, GetMaintenanceWindowResult, GetMaintenanceWindowOutputArgs } from "./getMaintenanceWindow";
export const getMaintenanceWindow: typeof import("./getMaintenanceWindow").getMaintenanceWindow = null as any;
export const getMaintenanceWindowOutput: typeof import("./getMaintenanceWindow").getMaintenanceWindowOutput = null as any;
utilities.lazyLoad(exports, ["getMaintenanceWindow","getMaintenanceWindowOutput"], () => require("./getMaintenanceWindow"));

export { GetMaintenanceWindowTargetArgs, GetMaintenanceWindowTargetResult, GetMaintenanceWindowTargetOutputArgs } from "./getMaintenanceWindowTarget";
export const getMaintenanceWindowTarget: typeof import("./getMaintenanceWindowTarget").getMaintenanceWindowTarget = null as any;
export const getMaintenanceWindowTargetOutput: typeof import("./getMaintenanceWindowTarget").getMaintenanceWindowTargetOutput = null as any;
utilities.lazyLoad(exports, ["getMaintenanceWindowTarget","getMaintenanceWindowTargetOutput"], () => require("./getMaintenanceWindowTarget"));

export { GetMaintenanceWindowTaskArgs, GetMaintenanceWindowTaskResult, GetMaintenanceWindowTaskOutputArgs } from "./getMaintenanceWindowTask";
export const getMaintenanceWindowTask: typeof import("./getMaintenanceWindowTask").getMaintenanceWindowTask = null as any;
export const getMaintenanceWindowTaskOutput: typeof import("./getMaintenanceWindowTask").getMaintenanceWindowTaskOutput = null as any;
utilities.lazyLoad(exports, ["getMaintenanceWindowTask","getMaintenanceWindowTaskOutput"], () => require("./getMaintenanceWindowTask"));

export { GetParameterArgs, GetParameterResult, GetParameterOutputArgs } from "./getParameter";
export const getParameter: typeof import("./getParameter").getParameter = null as any;
export const getParameterOutput: typeof import("./getParameter").getParameterOutput = null as any;
utilities.lazyLoad(exports, ["getParameter","getParameterOutput"], () => require("./getParameter"));

export { GetPatchBaselineArgs, GetPatchBaselineResult, GetPatchBaselineOutputArgs } from "./getPatchBaseline";
export const getPatchBaseline: typeof import("./getPatchBaseline").getPatchBaseline = null as any;
export const getPatchBaselineOutput: typeof import("./getPatchBaseline").getPatchBaselineOutput = null as any;
utilities.lazyLoad(exports, ["getPatchBaseline","getPatchBaselineOutput"], () => require("./getPatchBaseline"));

export { GetResourceDataSyncArgs, GetResourceDataSyncResult, GetResourceDataSyncOutputArgs } from "./getResourceDataSync";
export const getResourceDataSync: typeof import("./getResourceDataSync").getResourceDataSync = null as any;
export const getResourceDataSyncOutput: typeof import("./getResourceDataSync").getResourceDataSyncOutput = null as any;
utilities.lazyLoad(exports, ["getResourceDataSync","getResourceDataSyncOutput"], () => require("./getResourceDataSync"));

export { MaintenanceWindowArgs } from "./maintenanceWindow";
export type MaintenanceWindow = import("./maintenanceWindow").MaintenanceWindow;
export const MaintenanceWindow: typeof import("./maintenanceWindow").MaintenanceWindow = null as any;
utilities.lazyLoad(exports, ["MaintenanceWindow"], () => require("./maintenanceWindow"));

export { MaintenanceWindowTargetArgs } from "./maintenanceWindowTarget";
export type MaintenanceWindowTarget = import("./maintenanceWindowTarget").MaintenanceWindowTarget;
export const MaintenanceWindowTarget: typeof import("./maintenanceWindowTarget").MaintenanceWindowTarget = null as any;
utilities.lazyLoad(exports, ["MaintenanceWindowTarget"], () => require("./maintenanceWindowTarget"));

export { MaintenanceWindowTaskArgs } from "./maintenanceWindowTask";
export type MaintenanceWindowTask = import("./maintenanceWindowTask").MaintenanceWindowTask;
export const MaintenanceWindowTask: typeof import("./maintenanceWindowTask").MaintenanceWindowTask = null as any;
utilities.lazyLoad(exports, ["MaintenanceWindowTask"], () => require("./maintenanceWindowTask"));

export { ParameterArgs } from "./parameter";
export type Parameter = import("./parameter").Parameter;
export const Parameter: typeof import("./parameter").Parameter = null as any;
utilities.lazyLoad(exports, ["Parameter"], () => require("./parameter"));

export { PatchBaselineArgs } from "./patchBaseline";
export type PatchBaseline = import("./patchBaseline").PatchBaseline;
export const PatchBaseline: typeof import("./patchBaseline").PatchBaseline = null as any;
utilities.lazyLoad(exports, ["PatchBaseline"], () => require("./patchBaseline"));

export { ResourceDataSyncArgs } from "./resourceDataSync";
export type ResourceDataSync = import("./resourceDataSync").ResourceDataSync;
export const ResourceDataSync: typeof import("./resourceDataSync").ResourceDataSync = null as any;
utilities.lazyLoad(exports, ["ResourceDataSync"], () => require("./resourceDataSync"));


// Export enums:
export * from "../types/enums/ssm";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:ssm:Association":
                return new Association(name, <any>undefined, { urn })
            case "aws-native:ssm:Document":
                return new Document(name, <any>undefined, { urn })
            case "aws-native:ssm:MaintenanceWindow":
                return new MaintenanceWindow(name, <any>undefined, { urn })
            case "aws-native:ssm:MaintenanceWindowTarget":
                return new MaintenanceWindowTarget(name, <any>undefined, { urn })
            case "aws-native:ssm:MaintenanceWindowTask":
                return new MaintenanceWindowTask(name, <any>undefined, { urn })
            case "aws-native:ssm:Parameter":
                return new Parameter(name, <any>undefined, { urn })
            case "aws-native:ssm:PatchBaseline":
                return new PatchBaseline(name, <any>undefined, { urn })
            case "aws-native:ssm:ResourceDataSync":
                return new ResourceDataSync(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "ssm", _module)
