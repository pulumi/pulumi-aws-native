// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::Comprehend::Flywheel resource creates an Amazon Comprehend Flywheel that enables customer to train their model.
 */
export function getFlywheel(args: GetFlywheelArgs, opts?: pulumi.InvokeOptions): Promise<GetFlywheelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:comprehend:getFlywheel", {
        "arn": args.arn,
    }, opts);
}

export interface GetFlywheelArgs {
    /**
     * The Amazon Resource Name (ARN) of the flywheel.
     */
    arn: string;
}

export interface GetFlywheelResult {
    /**
     * The Amazon Resource Number (ARN) of the active model version.
     */
    readonly activeModelArn?: string;
    /**
     * The Amazon Resource Name (ARN) of the flywheel.
     */
    readonly arn?: string;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that grants Amazon Comprehend permission to access the flywheel data.
     */
    readonly dataAccessRoleArn?: string;
    /**
     * Data security configuration.
     */
    readonly dataSecurityConfig?: outputs.comprehend.FlywheelDataSecurityConfig;
    /**
     * A key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * The AWS::Comprehend::Flywheel resource creates an Amazon Comprehend Flywheel that enables customer to train their model.
 */
export function getFlywheelOutput(args: GetFlywheelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlywheelResult> {
    return pulumi.output(args).apply((a: any) => getFlywheel(a, opts))
}

export interface GetFlywheelOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the flywheel.
     */
    arn: pulumi.Input<string>;
}
