// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * IdNamespace defined in AWS Entity Resolution service
 */
export function getIdNamespace(args: GetIdNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetIdNamespaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:entityresolution:getIdNamespace", {
        "idNamespaceName": args.idNamespaceName,
    }, opts);
}

export interface GetIdNamespaceArgs {
    /**
     * The name of the ID namespace.
     */
    idNamespaceName: string;
}

export interface GetIdNamespaceResult {
    /**
     * The date and time when the IdNamespace was created
     */
    readonly createdAt?: string;
    /**
     * The description of the ID namespace.
     */
    readonly description?: string;
    /**
     * Determines the properties of `IdMappingWorflow` where this `IdNamespace` can be used as a `Source` or a `Target` .
     */
    readonly idMappingWorkflowProperties?: outputs.entityresolution.IdNamespaceIdMappingWorkflowProperties[];
    /**
     * The arn associated with the IdNamespace
     */
    readonly idNamespaceArn?: string;
    /**
     * A list of `InputSource` objects, which have the fields `InputSourceARN` and `SchemaName` .
     */
    readonly inputSourceConfig?: outputs.entityresolution.IdNamespaceInputSource[];
    /**
     * The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to access the resources defined in this `IdNamespace` on your behalf as part of the workflow run.
     */
    readonly roleArn?: string;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The type of ID namespace. There are two types: `SOURCE` and `TARGET` .
     *
     * The `SOURCE` contains configurations for `sourceId` data that will be processed in an ID mapping workflow.
     *
     * The `TARGET` contains a configuration of `targetId` which all `sourceIds` will resolve to.
     */
    readonly type?: enums.entityresolution.IdNamespaceType;
    /**
     * The date and time when the IdNamespace was updated
     */
    readonly updatedAt?: string;
}
/**
 * IdNamespace defined in AWS Entity Resolution service
 */
export function getIdNamespaceOutput(args: GetIdNamespaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdNamespaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:entityresolution:getIdNamespace", {
        "idNamespaceName": args.idNamespaceName,
    }, opts);
}

export interface GetIdNamespaceOutputArgs {
    /**
     * The name of the ID namespace.
     */
    idNamespaceName: pulumi.Input<string>;
}
