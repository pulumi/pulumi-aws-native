// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Policy Statement defined in AWS Entity Resolution Service
 */
export function getPolicyStatement(args: GetPolicyStatementArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyStatementResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:entityresolution:getPolicyStatement", {
        "arn": args.arn,
        "statementId": args.statementId,
    }, opts);
}

export interface GetPolicyStatementArgs {
    arn: string;
    statementId: string;
}

export interface GetPolicyStatementResult {
    readonly action?: string[];
    readonly condition?: string;
    readonly effect?: enums.entityresolution.PolicyStatementStatementEffect;
    readonly principal?: string[];
}
/**
 * Policy Statement defined in AWS Entity Resolution Service
 */
export function getPolicyStatementOutput(args: GetPolicyStatementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyStatementResult> {
    return pulumi.output(args).apply((a: any) => getPolicyStatement(a, opts))
}

export interface GetPolicyStatementOutputArgs {
    arn: pulumi.Input<string>;
    statementId: pulumi.Input<string>;
}
