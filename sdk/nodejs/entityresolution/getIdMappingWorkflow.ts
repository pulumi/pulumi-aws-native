// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * IdMappingWorkflow defined in AWS Entity Resolution service
 */
export function getIdMappingWorkflow(args: GetIdMappingWorkflowArgs, opts?: pulumi.InvokeOptions): Promise<GetIdMappingWorkflowResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:entityresolution:getIdMappingWorkflow", {
        "workflowName": args.workflowName,
    }, opts);
}

export interface GetIdMappingWorkflowArgs {
    /**
     * The name of the IdMappingWorkflow
     */
    workflowName: string;
}

export interface GetIdMappingWorkflowResult {
    readonly createdAt?: string;
    /**
     * The description of the IdMappingWorkflow
     */
    readonly description?: string;
    readonly idMappingTechniques?: outputs.entityresolution.IdMappingWorkflowIdMappingTechniques;
    readonly inputSourceConfig?: outputs.entityresolution.IdMappingWorkflowInputSource[];
    readonly outputSourceConfig?: outputs.entityresolution.IdMappingWorkflowOutputSource[];
    readonly roleArn?: string;
    readonly tags?: outputs.Tag[];
    readonly updatedAt?: string;
    readonly workflowArn?: string;
}
/**
 * IdMappingWorkflow defined in AWS Entity Resolution service
 */
export function getIdMappingWorkflowOutput(args: GetIdMappingWorkflowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdMappingWorkflowResult> {
    return pulumi.output(args).apply((a: any) => getIdMappingWorkflow(a, opts))
}

export interface GetIdMappingWorkflowOutputArgs {
    /**
     * The name of the IdMappingWorkflow
     */
    workflowName: pulumi.Input<string>;
}
