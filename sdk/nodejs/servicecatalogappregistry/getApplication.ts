// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Schema for AWS::ServiceCatalogAppRegistry::Application
 */
export function getApplication(args: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:servicecatalogappregistry:getApplication", {
        "id": args.id,
    }, opts);
}

export interface GetApplicationArgs {
    /**
     * The identifier of the application.
     */
    id: string;
}

export interface GetApplicationResult {
    /**
     * The name of the application. 
     */
    readonly applicationName?: string;
    /**
     * The key of the AWS application tag, which is awsApplication. Applications created before 11/13/2023 or applications without the AWS application tag resource group return no value.
     */
    readonly applicationTagKey?: string;
    /**
     * The value of the AWS application tag, which is the identifier of an associated resource. Applications created before 11/13/2023 or applications without the AWS application tag resource group return no value. 
     */
    readonly applicationTagValue?: string;
    /**
     * The Amazon resource name (ARN) that specifies the application across services.
     */
    readonly arn?: string;
    /**
     * The description of the application. 
     */
    readonly description?: string;
    /**
     * The identifier of the application.
     */
    readonly id?: string;
    /**
     * The name of the application. 
     */
    readonly name?: string;
    /**
     * Key-value pairs you can use to associate with the application.
     */
    readonly tags?: {[key: string]: string};
}
/**
 * Resource Schema for AWS::ServiceCatalogAppRegistry::Application
 */
export function getApplicationOutput(args: GetApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:servicecatalogappregistry:getApplication", {
        "id": args.id,
    }, opts);
}

export interface GetApplicationOutputArgs {
    /**
     * The identifier of the application.
     */
    id: pulumi.Input<string>;
}
