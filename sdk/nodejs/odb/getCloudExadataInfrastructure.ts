// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::ODB::CloudExadataInfrastructure resource creates an Exadata Infrastructure
 */
export function getCloudExadataInfrastructure(args: GetCloudExadataInfrastructureArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudExadataInfrastructureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:odb:getCloudExadataInfrastructure", {
        "cloudExadataInfrastructureArn": args.cloudExadataInfrastructureArn,
    }, opts);
}

export interface GetCloudExadataInfrastructureArgs {
    /**
     * The Amazon Resource Name (ARN) for the Exadata infrastructure.
     */
    cloudExadataInfrastructureArn: string;
}

export interface GetCloudExadataInfrastructureResult {
    /**
     * The number of storage servers requested for the Exadata infrastructure.
     */
    readonly activatedStorageCount?: number;
    /**
     * The number of storage servers requested for the Exadata infrastructure.
     */
    readonly additionalStorageCount?: number;
    /**
     * The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
     */
    readonly availableStorageSizeInGbs?: number;
    /**
     * The Amazon Resource Name (ARN) for the Exadata infrastructure.
     */
    readonly cloudExadataInfrastructureArn?: string;
    /**
     * The unique identifier for the Exadata infrastructure.
     */
    readonly cloudExadataInfrastructureId?: string;
    /**
     * The OCI model compute model used when you create or clone an instance: ECPU or OCPU. An ECPU is an abstracted measure of compute resources. ECPUs are based on the number of cores elastically allocated from a pool of compute and storage servers. An OCPU is a legacy physical measure of compute resources. OCPUs are based on the physical core of a processor with hyper-threading enabled.
     */
    readonly computeModel?: string;
    /**
     * The total number of CPU cores that are allocated to the Exadata infrastructure.
     */
    readonly cpuCount?: number;
    /**
     * The size of the Exadata infrastructure's data disk group, in terabytes (TB).
     */
    readonly dataStorageSizeInTbs?: number;
    /**
     * The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
     */
    readonly dbNodeStorageSizeInGbs?: number;
    /**
     * The list of database server identifiers for the Exadata infrastructure.
     */
    readonly dbServerIds?: string[];
    /**
     * The software version of the database servers (dom0) in the Exadata infrastructure.
     */
    readonly dbServerVersion?: string;
    /**
     * The total number of CPU cores available on the Exadata infrastructure.
     */
    readonly maxCpuCount?: number;
    /**
     * The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
     */
    readonly maxDataStorageInTbs?: number;
    /**
     * The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
     */
    readonly maxDbNodeStorageSizeInGbs?: number;
    /**
     * The total amount of memory, in gigabytes (GB), that's available on the Exadata infrastructure.
     */
    readonly maxMemoryInGbs?: number;
    /**
     * The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure.
     */
    readonly memorySizeInGbs?: number;
    /**
     * The name of the OCI resource anchor for the Exadata infrastructure.
     */
    readonly ociResourceAnchorName?: string;
    /**
     * The HTTPS link to the Exadata infrastructure in OCI.
     */
    readonly ociUrl?: string;
    /**
     * The OCID of the Exadata infrastructure.
     */
    readonly ocid?: string;
    /**
     * The software version of the storage servers on the Exadata infrastructure.
     */
    readonly storageServerVersion?: string;
    /**
     * Tags to assign to the Exadata Infrastructure.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The total amount of storage, in gigabytes (GB), on the the Exadata infrastructure.
     */
    readonly totalStorageSizeInGbs?: number;
}
/**
 * The AWS::ODB::CloudExadataInfrastructure resource creates an Exadata Infrastructure
 */
export function getCloudExadataInfrastructureOutput(args: GetCloudExadataInfrastructureOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudExadataInfrastructureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:odb:getCloudExadataInfrastructure", {
        "cloudExadataInfrastructureArn": args.cloudExadataInfrastructureArn,
    }, opts);
}

export interface GetCloudExadataInfrastructureOutputArgs {
    /**
     * The Amazon Resource Name (ARN) for the Exadata infrastructure.
     */
    cloudExadataInfrastructureArn: pulumi.Input<string>;
}
