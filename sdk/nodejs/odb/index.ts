// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CloudAutonomousVmClusterArgs } from "./cloudAutonomousVmCluster";
export type CloudAutonomousVmCluster = import("./cloudAutonomousVmCluster").CloudAutonomousVmCluster;
export const CloudAutonomousVmCluster: typeof import("./cloudAutonomousVmCluster").CloudAutonomousVmCluster = null as any;
utilities.lazyLoad(exports, ["CloudAutonomousVmCluster"], () => require("./cloudAutonomousVmCluster"));

export { CloudExadataInfrastructureArgs } from "./cloudExadataInfrastructure";
export type CloudExadataInfrastructure = import("./cloudExadataInfrastructure").CloudExadataInfrastructure;
export const CloudExadataInfrastructure: typeof import("./cloudExadataInfrastructure").CloudExadataInfrastructure = null as any;
utilities.lazyLoad(exports, ["CloudExadataInfrastructure"], () => require("./cloudExadataInfrastructure"));

export { CloudVmClusterArgs } from "./cloudVmCluster";
export type CloudVmCluster = import("./cloudVmCluster").CloudVmCluster;
export const CloudVmCluster: typeof import("./cloudVmCluster").CloudVmCluster = null as any;
utilities.lazyLoad(exports, ["CloudVmCluster"], () => require("./cloudVmCluster"));

export { GetCloudAutonomousVmClusterArgs, GetCloudAutonomousVmClusterResult, GetCloudAutonomousVmClusterOutputArgs } from "./getCloudAutonomousVmCluster";
export const getCloudAutonomousVmCluster: typeof import("./getCloudAutonomousVmCluster").getCloudAutonomousVmCluster = null as any;
export const getCloudAutonomousVmClusterOutput: typeof import("./getCloudAutonomousVmCluster").getCloudAutonomousVmClusterOutput = null as any;
utilities.lazyLoad(exports, ["getCloudAutonomousVmCluster","getCloudAutonomousVmClusterOutput"], () => require("./getCloudAutonomousVmCluster"));

export { GetCloudExadataInfrastructureArgs, GetCloudExadataInfrastructureResult, GetCloudExadataInfrastructureOutputArgs } from "./getCloudExadataInfrastructure";
export const getCloudExadataInfrastructure: typeof import("./getCloudExadataInfrastructure").getCloudExadataInfrastructure = null as any;
export const getCloudExadataInfrastructureOutput: typeof import("./getCloudExadataInfrastructure").getCloudExadataInfrastructureOutput = null as any;
utilities.lazyLoad(exports, ["getCloudExadataInfrastructure","getCloudExadataInfrastructureOutput"], () => require("./getCloudExadataInfrastructure"));

export { GetCloudVmClusterArgs, GetCloudVmClusterResult, GetCloudVmClusterOutputArgs } from "./getCloudVmCluster";
export const getCloudVmCluster: typeof import("./getCloudVmCluster").getCloudVmCluster = null as any;
export const getCloudVmClusterOutput: typeof import("./getCloudVmCluster").getCloudVmClusterOutput = null as any;
utilities.lazyLoad(exports, ["getCloudVmCluster","getCloudVmClusterOutput"], () => require("./getCloudVmCluster"));

export { GetOdbNetworkArgs, GetOdbNetworkResult, GetOdbNetworkOutputArgs } from "./getOdbNetwork";
export const getOdbNetwork: typeof import("./getOdbNetwork").getOdbNetwork = null as any;
export const getOdbNetworkOutput: typeof import("./getOdbNetwork").getOdbNetworkOutput = null as any;
utilities.lazyLoad(exports, ["getOdbNetwork","getOdbNetworkOutput"], () => require("./getOdbNetwork"));

export { GetOdbPeeringConnectionArgs, GetOdbPeeringConnectionResult, GetOdbPeeringConnectionOutputArgs } from "./getOdbPeeringConnection";
export const getOdbPeeringConnection: typeof import("./getOdbPeeringConnection").getOdbPeeringConnection = null as any;
export const getOdbPeeringConnectionOutput: typeof import("./getOdbPeeringConnection").getOdbPeeringConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getOdbPeeringConnection","getOdbPeeringConnectionOutput"], () => require("./getOdbPeeringConnection"));

export { OdbNetworkArgs } from "./odbNetwork";
export type OdbNetwork = import("./odbNetwork").OdbNetwork;
export const OdbNetwork: typeof import("./odbNetwork").OdbNetwork = null as any;
utilities.lazyLoad(exports, ["OdbNetwork"], () => require("./odbNetwork"));

export { OdbPeeringConnectionArgs } from "./odbPeeringConnection";
export type OdbPeeringConnection = import("./odbPeeringConnection").OdbPeeringConnection;
export const OdbPeeringConnection: typeof import("./odbPeeringConnection").OdbPeeringConnection = null as any;
utilities.lazyLoad(exports, ["OdbPeeringConnection"], () => require("./odbPeeringConnection"));


// Export enums:
export * from "../types/enums/odb";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:odb:CloudAutonomousVmCluster":
                return new CloudAutonomousVmCluster(name, <any>undefined, { urn })
            case "aws-native:odb:CloudExadataInfrastructure":
                return new CloudExadataInfrastructure(name, <any>undefined, { urn })
            case "aws-native:odb:CloudVmCluster":
                return new CloudVmCluster(name, <any>undefined, { urn })
            case "aws-native:odb:OdbNetwork":
                return new OdbNetwork(name, <any>undefined, { urn })
            case "aws-native:odb:OdbPeeringConnection":
                return new OdbPeeringConnection(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "odb", _module)
