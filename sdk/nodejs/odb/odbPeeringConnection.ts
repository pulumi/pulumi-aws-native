// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ODB::OdbPeeringConnection.
 */
export class OdbPeeringConnection extends pulumi.CustomResource {
    /**
     * Get an existing OdbPeeringConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OdbPeeringConnection {
        return new OdbPeeringConnection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:odb:OdbPeeringConnection';

    /**
     * Returns true if the given object is an instance of OdbPeeringConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OdbPeeringConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OdbPeeringConnection.__pulumiType;
    }

    /**
     * The name of the ODB peering connection.
     */
    declare public readonly displayName: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the ODB network.
     */
    declare public /*out*/ readonly odbNetworkArn: pulumi.Output<string>;
    /**
     * The unique identifier of the ODB network.
     */
    declare public readonly odbNetworkId: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the ODB peering connection.
     */
    declare public /*out*/ readonly odbPeeringConnectionArn: pulumi.Output<string>;
    /**
     * The unique identifier of the ODB peering connection.
     */
    declare public /*out*/ readonly odbPeeringConnectionId: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the peer network.
     */
    declare public /*out*/ readonly peerNetworkArn: pulumi.Output<string>;
    /**
     * The unique identifier of the peer network.
     */
    declare public readonly peerNetworkId: pulumi.Output<string | undefined>;
    /**
     * Tags to assign to the Odb peering connection.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a OdbPeeringConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OdbPeeringConnectionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["odbNetworkId"] = args?.odbNetworkId;
            resourceInputs["peerNetworkId"] = args?.peerNetworkId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["odbNetworkArn"] = undefined /*out*/;
            resourceInputs["odbPeeringConnectionArn"] = undefined /*out*/;
            resourceInputs["odbPeeringConnectionId"] = undefined /*out*/;
            resourceInputs["peerNetworkArn"] = undefined /*out*/;
        } else {
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["odbNetworkArn"] = undefined /*out*/;
            resourceInputs["odbNetworkId"] = undefined /*out*/;
            resourceInputs["odbPeeringConnectionArn"] = undefined /*out*/;
            resourceInputs["odbPeeringConnectionId"] = undefined /*out*/;
            resourceInputs["peerNetworkArn"] = undefined /*out*/;
            resourceInputs["peerNetworkId"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["displayName", "odbNetworkId", "peerNetworkId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(OdbPeeringConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a OdbPeeringConnection resource.
 */
export interface OdbPeeringConnectionArgs {
    /**
     * The name of the ODB peering connection.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The unique identifier of the ODB network.
     */
    odbNetworkId?: pulumi.Input<string>;
    /**
     * The unique identifier of the peer network.
     */
    peerNetworkId?: pulumi.Input<string>;
    /**
     * Tags to assign to the Odb peering connection.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
