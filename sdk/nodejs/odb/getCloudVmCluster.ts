// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::ODB::CloudVmCluster resource creates a Cloud VM Cluster
 */
export function getCloudVmCluster(args: GetCloudVmClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudVmClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:odb:getCloudVmCluster", {
        "cloudVmClusterArn": args.cloudVmClusterArn,
    }, opts);
}

export interface GetCloudVmClusterArgs {
    /**
     * The Amazon Resource Name (ARN) of the VM cluster.
     */
    cloudVmClusterArn: string;
}

export interface GetCloudVmClusterResult {
    /**
     * The Amazon Resource Name (ARN) of the VM cluster.
     */
    readonly cloudVmClusterArn?: string;
    /**
     * The unique identifier of the VM cluster.
     */
    readonly cloudVmClusterId?: string;
    /**
     * The OCI model compute model used when you create or clone an instance: ECPU or OCPU. An ECPU is an abstracted measure of compute resources. ECPUs are based on the number of cores elastically allocated from a pool of compute and storage servers. An OCPU is a legacy physical measure of compute resources. OCPUs are based on the physical core of a processor with hyper-threading enabled.
     */
    readonly computeModel?: string;
    /**
     * The DB nodes that are implicitly created and managed as part of this VM Cluster.
     */
    readonly dbNodes?: outputs.odb.CloudVmClusterDbNode[];
    /**
     * The type of redundancy configured for the VM cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     */
    readonly diskRedundancy?: string;
    /**
     * The domain of the VM cluster.
     */
    readonly domain?: string;
    /**
     * The port number configured for the listener on the VM cluster.
     */
    readonly listenerPort?: number;
    /**
     * The number of nodes in the VM cluster.
     */
    readonly nodeCount?: number;
    /**
     * The name of the OCI resource anchor for the VM cluster.
     */
    readonly ociResourceAnchorName?: string;
    /**
     * The HTTPS link to the VM cluster in OCI.
     */
    readonly ociUrl?: string;
    /**
     * The OCID of the VM cluster.
     */
    readonly ocid?: string;
    /**
     * The FQDN of the DNS record for the Single Client Access Name (SCAN) IP addresses that are associated with the VM cluster.
     */
    readonly scanDnsName?: string;
    /**
     * The OCID of the SCAN IP addresses that are associated with the VM cluster.
     */
    readonly scanIpIds?: string[];
    /**
     * The hardware model name of the Exadata infrastructure that's running the VM cluster.
     */
    readonly shape?: string;
    /**
     * The amount of local node storage, in gigabytes (GB), that's allocated to the VM cluster.
     */
    readonly storageSizeInGbs?: number;
    /**
     * Tags to assign to the Vm Cluster.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The virtual IP (VIP) addresses that are associated with the VM cluster. Oracle's Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the VM cluster to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     */
    readonly vipIds?: string[];
}
/**
 * The AWS::ODB::CloudVmCluster resource creates a Cloud VM Cluster
 */
export function getCloudVmClusterOutput(args: GetCloudVmClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudVmClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:odb:getCloudVmCluster", {
        "cloudVmClusterArn": args.cloudVmClusterArn,
    }, opts);
}

export interface GetCloudVmClusterOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the VM cluster.
     */
    cloudVmClusterArn: pulumi.Input<string>;
}
