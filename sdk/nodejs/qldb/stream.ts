// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::QLDB::Stream.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myQLDBStream = new aws_native.qldb.Stream("myQLDBStream", {
 *     exclusiveEndTime: "2020-05-29T22:59:59Z",
 *     inclusiveStartTime: "2020-05-29T00:00:00Z",
 *     kinesisConfiguration: {
 *         aggregationEnabled: true,
 *         streamArn: "arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb",
 *     },
 *     ledgerName: "exampleLedger",
 *     roleArn: "arn:aws:iam::123456789012:role/my-kinesis-stream-role",
 *     streamName: "exampleLedger-stream",
 *     tags: [{
 *         key: "Domain",
 *         value: "Test",
 *     }],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myQLDBStream = new aws_native.qldb.Stream("myQLDBStream", {
 *     exclusiveEndTime: "2020-05-29T22:59:59Z",
 *     inclusiveStartTime: "2020-05-29T00:00:00Z",
 *     kinesisConfiguration: {
 *         aggregationEnabled: true,
 *         streamArn: "arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb",
 *     },
 *     ledgerName: "exampleLedger",
 *     roleArn: "arn:aws:iam::123456789012:role/my-kinesis-stream-role",
 *     streamName: "exampleLedger-stream",
 *     tags: [{
 *         key: "Domain",
 *         value: "Test",
 *     }],
 * });
 *
 * ```
 */
export class Stream extends pulumi.CustomResource {
    /**
     * Get an existing Stream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Stream {
        return new Stream(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:qldb:Stream';

    /**
     * Returns true if the given object is an instance of Stream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Stream {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Stream.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the QLDB journal stream. For example: `arn:aws:qldb:us-east-1:123456789012:stream/exampleLedger/IiPT4brpZCqCq3f4MTHbYy` .
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The unique ID that QLDB assigns to each QLDB journal stream. For example: `IiPT4brpZCqCq3f4MTHbYy` .
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it.
     *
     * The `ExclusiveEndTime` must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
     */
    public readonly exclusiveEndTime!: pulumi.Output<string | undefined>;
    /**
     * The inclusive start date and time from which to start streaming journal data. This parameter must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
     *
     * The `InclusiveStartTime` cannot be in the future and must be before `ExclusiveEndTime` .
     *
     * If you provide an `InclusiveStartTime` that is before the ledger's `CreationDateTime` , QLDB effectively defaults it to the ledger's `CreationDateTime` .
     */
    public readonly inclusiveStartTime!: pulumi.Output<string>;
    /**
     * The configuration settings of the Kinesis Data Streams destination for your stream request.
     */
    public readonly kinesisConfiguration!: pulumi.Output<outputs.qldb.StreamKinesisConfiguration>;
    /**
     * The name of the ledger.
     */
    public readonly ledgerName!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
     *
     * To pass a role to QLDB when requesting a journal stream, you must have permissions to perform the `iam:PassRole` action on the IAM role resource. This is required for all journal stream requests.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.
     *
     * Your stream name must be unique among other *active* streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in [Quotas in Amazon QLDB](https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming) in the *Amazon QLDB Developer Guide* .
     */
    public readonly streamName!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a Stream resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StreamArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.inclusiveStartTime === undefined && !opts.urn) {
                throw new Error("Missing required property 'inclusiveStartTime'");
            }
            if (args?.kinesisConfiguration === undefined && !opts.urn) {
                throw new Error("Missing required property 'kinesisConfiguration'");
            }
            if (args?.ledgerName === undefined && !opts.urn) {
                throw new Error("Missing required property 'ledgerName'");
            }
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["exclusiveEndTime"] = args?.exclusiveEndTime;
            resourceInputs["inclusiveStartTime"] = args?.inclusiveStartTime;
            resourceInputs["kinesisConfiguration"] = args?.kinesisConfiguration;
            resourceInputs["ledgerName"] = args?.ledgerName;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["streamName"] = args?.streamName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["exclusiveEndTime"] = undefined /*out*/;
            resourceInputs["inclusiveStartTime"] = undefined /*out*/;
            resourceInputs["kinesisConfiguration"] = undefined /*out*/;
            resourceInputs["ledgerName"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["streamName"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["exclusiveEndTime", "inclusiveStartTime", "kinesisConfiguration", "ledgerName", "roleArn", "streamName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Stream.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Stream resource.
 */
export interface StreamArgs {
    /**
     * The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it.
     *
     * The `ExclusiveEndTime` must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
     */
    exclusiveEndTime?: pulumi.Input<string>;
    /**
     * The inclusive start date and time from which to start streaming journal data. This parameter must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
     *
     * The `InclusiveStartTime` cannot be in the future and must be before `ExclusiveEndTime` .
     *
     * If you provide an `InclusiveStartTime` that is before the ledger's `CreationDateTime` , QLDB effectively defaults it to the ledger's `CreationDateTime` .
     */
    inclusiveStartTime: pulumi.Input<string>;
    /**
     * The configuration settings of the Kinesis Data Streams destination for your stream request.
     */
    kinesisConfiguration: pulumi.Input<inputs.qldb.StreamKinesisConfigurationArgs>;
    /**
     * The name of the ledger.
     */
    ledgerName: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
     *
     * To pass a role to QLDB when requesting a journal stream, you must have permissions to perform the `iam:PassRole` action on the IAM role resource. This is required for all journal stream requests.
     */
    roleArn: pulumi.Input<string>;
    /**
     * The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.
     *
     * Your stream name must be unique among other *active* streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in [Quotas in Amazon QLDB](https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming) in the *Amazon QLDB Developer Guide* .
     */
    streamName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
