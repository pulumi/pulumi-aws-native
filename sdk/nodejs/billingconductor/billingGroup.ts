// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * A billing group is a set of linked account which belong to the same end customer. It can be seen as a virtual consolidated billing family.
 *
 * @deprecated BillingGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class BillingGroup extends pulumi.CustomResource {
    /**
     * Get an existing BillingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BillingGroup {
        pulumi.log.warn("BillingGroup is deprecated: BillingGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new BillingGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:billingconductor:BillingGroup';

    /**
     * Returns true if the given object is an instance of BillingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BillingGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BillingGroup.__pulumiType;
    }

    public readonly accountGrouping!: pulumi.Output<outputs.billingconductor.BillingGroupAccountGrouping>;
    /**
     * Billing Group ARN
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly computationPreference!: pulumi.Output<outputs.billingconductor.BillingGroupComputationPreference>;
    /**
     * Creation timestamp in UNIX epoch time format
     */
    public /*out*/ readonly creationTime!: pulumi.Output<number>;
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Latest modified timestamp in UNIX epoch time format
     */
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    /**
     * This account will act as a virtual payer account of the billing group
     */
    public readonly primaryAccountId!: pulumi.Output<string>;
    /**
     * Number of accounts in the billing group
     */
    public /*out*/ readonly size!: pulumi.Output<number>;
    public /*out*/ readonly status!: pulumi.Output<enums.billingconductor.BillingGroupStatus>;
    public /*out*/ readonly statusReason!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.billingconductor.BillingGroupTag[] | undefined>;

    /**
     * Create a BillingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated BillingGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: BillingGroupArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("BillingGroup is deprecated: BillingGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountGrouping === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountGrouping'");
            }
            if ((!args || args.computationPreference === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computationPreference'");
            }
            if ((!args || args.primaryAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryAccountId'");
            }
            resourceInputs["accountGrouping"] = args ? args.accountGrouping : undefined;
            resourceInputs["computationPreference"] = args ? args.computationPreference : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primaryAccountId"] = args ? args.primaryAccountId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
        } else {
            resourceInputs["accountGrouping"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["computationPreference"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["primaryAccountId"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BillingGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a BillingGroup resource.
 */
export interface BillingGroupArgs {
    accountGrouping: pulumi.Input<inputs.billingconductor.BillingGroupAccountGroupingArgs>;
    computationPreference: pulumi.Input<inputs.billingconductor.BillingGroupComputationPreferenceArgs>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * This account will act as a virtual payer account of the billing group
     */
    primaryAccountId: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.billingconductor.BillingGroupTagArgs>[]>;
}
