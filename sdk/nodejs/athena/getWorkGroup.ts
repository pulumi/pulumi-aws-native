// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Athena::WorkGroup
 */
export function getWorkGroup(args: GetWorkGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkGroupResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:athena:getWorkGroup", {
        "name": args.name,
    }, opts);
}

export interface GetWorkGroupArgs {
    /**
     * The workGroup name.
     */
    name: string;
}

export interface GetWorkGroupResult {
    /**
     * The date and time the workgroup was created.
     */
    readonly creationTime?: string;
    /**
     * The workgroup description.
     */
    readonly description?: string;
    /**
     * The option to delete the workgroup and its contents even if the workgroup contains any named queries.
     */
    readonly recursiveDeleteOption?: boolean;
    /**
     * The state of the workgroup: ENABLED or DISABLED.
     */
    readonly state?: enums.athena.WorkGroupState;
    /**
     * One or more tags, separated by commas, that you want to attach to the workgroup as you create it
     */
    readonly tags?: outputs.athena.WorkGroupTag[];
    /**
     * The workgroup configuration
     */
    readonly workGroupConfiguration?: outputs.athena.WorkGroupConfiguration;
}

export function getWorkGroupOutput(args: GetWorkGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkGroupResult> {
    return pulumi.output(args).apply(a => getWorkGroup(a, opts))
}

export interface GetWorkGroupOutputArgs {
    /**
     * The workGroup name.
     */
    name: pulumi.Input<string>;
}
