// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DataCatalogArgs } from "./dataCatalog";
export type DataCatalog = import("./dataCatalog").DataCatalog;
export const DataCatalog: typeof import("./dataCatalog").DataCatalog = null as any;
utilities.lazyLoad(exports, ["DataCatalog"], () => require("./dataCatalog"));

export { GetDataCatalogArgs, GetDataCatalogResult, GetDataCatalogOutputArgs } from "./getDataCatalog";
export const getDataCatalog: typeof import("./getDataCatalog").getDataCatalog = null as any;
export const getDataCatalogOutput: typeof import("./getDataCatalog").getDataCatalogOutput = null as any;
utilities.lazyLoad(exports, ["getDataCatalog","getDataCatalogOutput"], () => require("./getDataCatalog"));

export { GetNamedQueryArgs, GetNamedQueryResult, GetNamedQueryOutputArgs } from "./getNamedQuery";
export const getNamedQuery: typeof import("./getNamedQuery").getNamedQuery = null as any;
export const getNamedQueryOutput: typeof import("./getNamedQuery").getNamedQueryOutput = null as any;
utilities.lazyLoad(exports, ["getNamedQuery","getNamedQueryOutput"], () => require("./getNamedQuery"));

export { GetPreparedStatementArgs, GetPreparedStatementResult, GetPreparedStatementOutputArgs } from "./getPreparedStatement";
export const getPreparedStatement: typeof import("./getPreparedStatement").getPreparedStatement = null as any;
export const getPreparedStatementOutput: typeof import("./getPreparedStatement").getPreparedStatementOutput = null as any;
utilities.lazyLoad(exports, ["getPreparedStatement","getPreparedStatementOutput"], () => require("./getPreparedStatement"));

export { GetWorkGroupArgs, GetWorkGroupResult, GetWorkGroupOutputArgs } from "./getWorkGroup";
export const getWorkGroup: typeof import("./getWorkGroup").getWorkGroup = null as any;
export const getWorkGroupOutput: typeof import("./getWorkGroup").getWorkGroupOutput = null as any;
utilities.lazyLoad(exports, ["getWorkGroup","getWorkGroupOutput"], () => require("./getWorkGroup"));

export { NamedQueryArgs } from "./namedQuery";
export type NamedQuery = import("./namedQuery").NamedQuery;
export const NamedQuery: typeof import("./namedQuery").NamedQuery = null as any;
utilities.lazyLoad(exports, ["NamedQuery"], () => require("./namedQuery"));

export { PreparedStatementArgs } from "./preparedStatement";
export type PreparedStatement = import("./preparedStatement").PreparedStatement;
export const PreparedStatement: typeof import("./preparedStatement").PreparedStatement = null as any;
utilities.lazyLoad(exports, ["PreparedStatement"], () => require("./preparedStatement"));

export { WorkGroupArgs } from "./workGroup";
export type WorkGroup = import("./workGroup").WorkGroup;
export const WorkGroup: typeof import("./workGroup").WorkGroup = null as any;
utilities.lazyLoad(exports, ["WorkGroup"], () => require("./workGroup"));


// Export enums:
export * from "../types/enums/athena";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:athena:DataCatalog":
                return new DataCatalog(name, <any>undefined, { urn })
            case "aws-native:athena:NamedQuery":
                return new NamedQuery(name, <any>undefined, { urn })
            case "aws-native:athena:PreparedStatement":
                return new PreparedStatement(name, <any>undefined, { urn })
            case "aws-native:athena:WorkGroup":
                return new WorkGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "athena", _module)
