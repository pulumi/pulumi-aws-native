// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Athena::CapacityReservation
 */
export function getCapacityReservation(args: GetCapacityReservationArgs, opts?: pulumi.InvokeOptions): Promise<GetCapacityReservationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:athena:getCapacityReservation", {
        "arn": args.arn,
    }, opts);
}

export interface GetCapacityReservationArgs {
    /**
     * The ARN of the capacity reservation.
     */
    arn: string;
}

export interface GetCapacityReservationResult {
    /**
     * The number of DPUs Athena has provisioned and allocated for the reservation
     */
    readonly allocatedDpus?: number;
    /**
     * The ARN of the capacity reservation.
     */
    readonly arn?: string;
    /**
     * Assigns Athena workgroups (and hence their queries) to capacity reservations. A capacity reservation can have only one capacity assignment configuration, but the capacity assignment configuration can be made up of multiple individual assignments. Each assignment specifies how Athena queries can consume capacity from the capacity reservation that their workgroup is mapped to.
     */
    readonly capacityAssignmentConfiguration?: outputs.athena.CapacityReservationCapacityAssignmentConfiguration;
    /**
     * The date and time the reservation was created.
     */
    readonly creationTime?: string;
    /**
     * The timestamp when the last successful allocated was made
     */
    readonly lastSuccessfulAllocationTime?: string;
    /**
     * The status of the reservation.
     */
    readonly status?: enums.athena.CapacityReservationStatus;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The number of DPUs to request to be allocated to the reservation.
     */
    readonly targetDpus?: number;
}
/**
 * Resource schema for AWS::Athena::CapacityReservation
 */
export function getCapacityReservationOutput(args: GetCapacityReservationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCapacityReservationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:athena:getCapacityReservation", {
        "arn": args.arn,
    }, opts);
}

export interface GetCapacityReservationOutputArgs {
    /**
     * The ARN of the capacity reservation.
     */
    arn: pulumi.Input<string>;
}
