// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Athena::DataCatalog
 */
export function getDataCatalog(args: GetDataCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetDataCatalogResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:athena:getDataCatalog", {
        "name": args.name,
    }, opts);
}

export interface GetDataCatalogArgs {
    /**
     * The name of the data catalog to create. The catalog name must be unique for the AWS account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters. 
     */
    name: string;
}

export interface GetDataCatalogResult {
    /**
     * A description of the data catalog to be created. 
     */
    readonly description?: string;
    /**
     * Specifies the Lambda function or functions to use for creating the data catalog. This is a mapping whose values depend on the catalog type. 
     */
    readonly parameters?: any;
    /**
     * A list of comma separated tags to add to the data catalog that is created. 
     */
    readonly tags?: outputs.athena.DataCatalogTag[];
    /**
     * The type of data catalog to create: LAMBDA for a federated catalog, GLUE for AWS Glue Catalog, or HIVE for an external hive metastore. 
     */
    readonly type?: enums.athena.DataCatalogType;
}

export function getDataCatalogOutput(args: GetDataCatalogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataCatalogResult> {
    return pulumi.output(args).apply(a => getDataCatalog(a, opts))
}

export interface GetDataCatalogOutputArgs {
    /**
     * The name of the data catalog to create. The catalog name must be unique for the AWS account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters. 
     */
    name: pulumi.Input<string>;
}
