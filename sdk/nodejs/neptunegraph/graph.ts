// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::NeptuneGraph::Graph resource creates an Amazon NeptuneGraph Graph.
 */
export class Graph extends pulumi.CustomResource {
    /**
     * Get an existing Graph resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Graph {
        return new Graph(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:neptunegraph:Graph';

    /**
     * Returns true if the given object is an instance of Graph.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Graph {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Graph.__pulumiType;
    }

    /**
     * Value that indicates whether the Graph has deletion protection enabled. The graph can't be deleted when deletion protection is enabled.
     *
     * _Default_: If not specified, the default value is true.
     */
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    /**
     * The connection endpoint for the graph. For example: `g-12a3bcdef4.us-east-1.neptune-graph.amazonaws.com`
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * Graph resource ARN
     */
    public /*out*/ readonly graphArn!: pulumi.Output<string>;
    /**
     * The auto-generated id assigned by the service.
     */
    public /*out*/ readonly graphId!: pulumi.Output<string>;
    /**
     * Contains a user-supplied name for the Graph. 
     *
     * If you don't specify a name, we generate a unique Graph Name using a combination of Stack Name and a UUID comprising of 4 characters.
     *
     * _Important_: If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     */
    public readonly graphName!: pulumi.Output<string | undefined>;
    /**
     * Memory for the Graph.
     */
    public readonly provisionedMemory!: pulumi.Output<number>;
    /**
     * Specifies whether the Graph can be reached over the internet. Access to all graphs requires IAM authentication.
     *
     * When the Graph is publicly reachable, its Domain Name System (DNS) endpoint resolves to the public IP address from the internet.
     *
     * When the Graph isn't publicly reachable, you need to create a PrivateGraphEndpoint in a given VPC to ensure the DNS name resolves to a private IP address that is reachable from the VPC.
     *
     * _Default_: If not specified, the default value is false.
     */
    public readonly publicConnectivity!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the number of replicas you want when finished. All replicas will be provisioned in different availability zones.
     *
     * Replica Count should always be less than or equal to 2.
     *
     * _Default_: If not specified, the default value is 1.
     */
    public readonly replicaCount!: pulumi.Output<number | undefined>;
    /**
     * The tags associated with this graph.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Vector Search Configuration
     */
    public readonly vectorSearchConfiguration!: pulumi.Output<outputs.neptunegraph.GraphVectorSearchConfiguration | undefined>;

    /**
     * Create a Graph resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GraphArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.provisionedMemory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'provisionedMemory'");
            }
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["graphName"] = args ? args.graphName : undefined;
            resourceInputs["provisionedMemory"] = args ? args.provisionedMemory : undefined;
            resourceInputs["publicConnectivity"] = args ? args.publicConnectivity : undefined;
            resourceInputs["replicaCount"] = args ? args.replicaCount : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vectorSearchConfiguration"] = args ? args.vectorSearchConfiguration : undefined;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["graphArn"] = undefined /*out*/;
            resourceInputs["graphId"] = undefined /*out*/;
        } else {
            resourceInputs["deletionProtection"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["graphArn"] = undefined /*out*/;
            resourceInputs["graphId"] = undefined /*out*/;
            resourceInputs["graphName"] = undefined /*out*/;
            resourceInputs["provisionedMemory"] = undefined /*out*/;
            resourceInputs["publicConnectivity"] = undefined /*out*/;
            resourceInputs["replicaCount"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vectorSearchConfiguration"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["graphName", "replicaCount", "vectorSearchConfiguration"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Graph.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Graph resource.
 */
export interface GraphArgs {
    /**
     * Value that indicates whether the Graph has deletion protection enabled. The graph can't be deleted when deletion protection is enabled.
     *
     * _Default_: If not specified, the default value is true.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Contains a user-supplied name for the Graph. 
     *
     * If you don't specify a name, we generate a unique Graph Name using a combination of Stack Name and a UUID comprising of 4 characters.
     *
     * _Important_: If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
     */
    graphName?: pulumi.Input<string>;
    /**
     * Memory for the Graph.
     */
    provisionedMemory: pulumi.Input<number>;
    /**
     * Specifies whether the Graph can be reached over the internet. Access to all graphs requires IAM authentication.
     *
     * When the Graph is publicly reachable, its Domain Name System (DNS) endpoint resolves to the public IP address from the internet.
     *
     * When the Graph isn't publicly reachable, you need to create a PrivateGraphEndpoint in a given VPC to ensure the DNS name resolves to a private IP address that is reachable from the VPC.
     *
     * _Default_: If not specified, the default value is false.
     */
    publicConnectivity?: pulumi.Input<boolean>;
    /**
     * Specifies the number of replicas you want when finished. All replicas will be provisioned in different availability zones.
     *
     * Replica Count should always be less than or equal to 2.
     *
     * _Default_: If not specified, the default value is 1.
     */
    replicaCount?: pulumi.Input<number>;
    /**
     * The tags associated with this graph.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Vector Search Configuration
     */
    vectorSearchConfiguration?: pulumi.Input<inputs.neptunegraph.GraphVectorSearchConfigurationArgs>;
}
