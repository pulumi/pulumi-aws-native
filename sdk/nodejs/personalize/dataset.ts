// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Personalize::Dataset.
 */
export class Dataset extends pulumi.CustomResource {
    /**
     * Get an existing Dataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Dataset {
        return new Dataset(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:personalize:Dataset';

    /**
     * Returns true if the given object is an instance of Dataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Dataset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Dataset.__pulumiType;
    }

    /**
     * The ARN of the dataset
     */
    public /*out*/ readonly datasetArn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the dataset group to add the dataset to
     */
    public readonly datasetGroupArn!: pulumi.Output<string>;
    public readonly datasetImportJob!: pulumi.Output<outputs.personalize.DatasetImportJob | undefined>;
    /**
     * The type of dataset
     */
    public readonly datasetType!: pulumi.Output<enums.personalize.DatasetType>;
    /**
     * The name for the dataset
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ARN of the schema to associate with the dataset. The schema defines the dataset fields.
     */
    public readonly schemaArn!: pulumi.Output<string>;

    /**
     * Create a Dataset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatasetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.datasetGroupArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datasetGroupArn'");
            }
            if ((!args || args.datasetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datasetType'");
            }
            if ((!args || args.schemaArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schemaArn'");
            }
            resourceInputs["datasetGroupArn"] = args ? args.datasetGroupArn : undefined;
            resourceInputs["datasetImportJob"] = args ? args.datasetImportJob : undefined;
            resourceInputs["datasetType"] = args ? args.datasetType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["schemaArn"] = args ? args.schemaArn : undefined;
            resourceInputs["datasetArn"] = undefined /*out*/;
        } else {
            resourceInputs["datasetArn"] = undefined /*out*/;
            resourceInputs["datasetGroupArn"] = undefined /*out*/;
            resourceInputs["datasetImportJob"] = undefined /*out*/;
            resourceInputs["datasetType"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["schemaArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Dataset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Dataset resource.
 */
export interface DatasetArgs {
    /**
     * The Amazon Resource Name (ARN) of the dataset group to add the dataset to
     */
    datasetGroupArn: pulumi.Input<string>;
    datasetImportJob?: pulumi.Input<inputs.personalize.DatasetImportJobArgs>;
    /**
     * The type of dataset
     */
    datasetType: pulumi.Input<enums.personalize.DatasetType>;
    /**
     * The name for the dataset
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN of the schema to associate with the dataset. The schema defines the dataset fields.
     */
    schemaArn: pulumi.Input<string>;
}
