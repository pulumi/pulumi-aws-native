// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::EventSchemas::Schema
 */
export function getSchema(args: GetSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:eventschemas:getSchema", {
        "schemaArn": args.schemaArn,
    }, opts);
}

export interface GetSchemaArgs {
    /**
     * The ARN of the schema.
     */
    schemaArn: string;
}

export interface GetSchemaResult {
    /**
     * The source of the schema definition.
     */
    readonly content?: string;
    /**
     * A description of the schema.
     */
    readonly description?: string;
    /**
     * The last modified time of the schema.
     */
    readonly lastModified?: string;
    /**
     * The ARN of the schema.
     */
    readonly schemaArn?: string;
    /**
     * The version number of the schema.
     */
    readonly schemaVersion?: string;
    /**
     * Tags associated with the resource.
     */
    readonly tags?: outputs.eventschemas.SchemaTagsEntry[];
    /**
     * The type of schema. Valid types include OpenApi3 and JSONSchemaDraft4.
     */
    readonly type?: string;
    /**
     * The date the schema version was created.
     */
    readonly versionCreatedDate?: string;
}
/**
 * Resource Type definition for AWS::EventSchemas::Schema
 */
export function getSchemaOutput(args: GetSchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaResult> {
    return pulumi.output(args).apply((a: any) => getSchema(a, opts))
}

export interface GetSchemaOutputArgs {
    /**
     * The ARN of the schema.
     */
    schemaArn: pulumi.Input<string>;
}
