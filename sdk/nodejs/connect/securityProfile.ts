// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Connect::SecurityProfile
 */
export class SecurityProfile extends pulumi.CustomResource {
    /**
     * Get an existing SecurityProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityProfile {
        return new SecurityProfile(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:connect:SecurityProfile';

    /**
     * Returns true if the given object is an instance of SecurityProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityProfile.__pulumiType;
    }

    /**
     * The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
     */
    public readonly allowedAccessControlTags!: pulumi.Output<outputs.connect.SecurityProfileTag[] | undefined>;
    /**
     * The description of the security profile.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * Permissions assigned to the security profile.
     */
    public readonly permissions!: pulumi.Output<string[] | undefined>;
    /**
     * The Amazon Resource Name (ARN) for the security profile.
     */
    public /*out*/ readonly securityProfileArn!: pulumi.Output<string>;
    /**
     * The name of the security profile.
     */
    public readonly securityProfileName!: pulumi.Output<string>;
    /**
     * The list of resources that a security profile applies tag restrictions to in Amazon Connect.
     */
    public readonly tagRestrictedResources!: pulumi.Output<string[] | undefined>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a SecurityProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityProfileArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            resourceInputs["allowedAccessControlTags"] = args ? args.allowedAccessControlTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["securityProfileName"] = args ? args.securityProfileName : undefined;
            resourceInputs["tagRestrictedResources"] = args ? args.tagRestrictedResources : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["securityProfileArn"] = undefined /*out*/;
        } else {
            resourceInputs["allowedAccessControlTags"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["instanceArn"] = undefined /*out*/;
            resourceInputs["permissions"] = undefined /*out*/;
            resourceInputs["securityProfileArn"] = undefined /*out*/;
            resourceInputs["securityProfileName"] = undefined /*out*/;
            resourceInputs["tagRestrictedResources"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["instanceArn", "securityProfileName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(SecurityProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SecurityProfile resource.
 */
export interface SecurityProfileArgs {
    /**
     * The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
     */
    allowedAccessControlTags?: pulumi.Input<pulumi.Input<inputs.connect.SecurityProfileTagArgs>[]>;
    /**
     * The description of the security profile.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * Permissions assigned to the security profile.
     */
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the security profile.
     */
    securityProfileName?: pulumi.Input<string>;
    /**
     * The list of resources that a security profile applies tag restrictions to in Amazon Connect.
     */
    tagRestrictedResources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
