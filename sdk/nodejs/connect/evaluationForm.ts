// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Creates an evaluation form for the specified CON instance.
 */
export class EvaluationForm extends pulumi.CustomResource {
    /**
     * Get an existing EvaluationForm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EvaluationForm {
        return new EvaluationForm(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:connect:EvaluationForm';

    /**
     * Returns true if the given object is an instance of EvaluationForm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EvaluationForm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EvaluationForm.__pulumiType;
    }

    /**
     * The description of the evaluation form.
     *   *Length Constraints*: Minimum length of 0. Maximum length of 1024.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the evaluation form.
     */
    public /*out*/ readonly evaluationFormArn!: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
     *   *Minimum size*: 1
     *   *Maximum size*: 100
     */
    public readonly items!: pulumi.Output<outputs.connect.EvaluationFormBaseItem[]>;
    /**
     * A scoring strategy of the evaluation form.
     */
    public readonly scoringStrategy!: pulumi.Output<outputs.connect.EvaluationFormScoringStrategy | undefined>;
    /**
     * The status of the evaluation form.
     *   *Allowed values*: ``DRAFT`` | ``ACTIVE``
     */
    public readonly status!: pulumi.Output<enums.connect.EvaluationFormStatus>;
    /**
     * The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * A title of the evaluation form.
     */
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a EvaluationForm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EvaluationFormArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            if ((!args || args.items === undefined) && !opts.urn) {
                throw new Error("Missing required property 'items'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["items"] = args ? args.items : undefined;
            resourceInputs["scoringStrategy"] = args ? args.scoringStrategy : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["evaluationFormArn"] = undefined /*out*/;
        } else {
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["evaluationFormArn"] = undefined /*out*/;
            resourceInputs["instanceArn"] = undefined /*out*/;
            resourceInputs["items"] = undefined /*out*/;
            resourceInputs["scoringStrategy"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["title"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EvaluationForm.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EvaluationForm resource.
 */
export interface EvaluationFormArgs {
    /**
     * The description of the evaluation form.
     *   *Length Constraints*: Minimum length of 0. Maximum length of 1024.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
     *   *Minimum size*: 1
     *   *Maximum size*: 100
     */
    items: pulumi.Input<pulumi.Input<inputs.connect.EvaluationFormBaseItemArgs>[]>;
    /**
     * A scoring strategy of the evaluation form.
     */
    scoringStrategy?: pulumi.Input<inputs.connect.EvaluationFormScoringStrategyArgs>;
    /**
     * The status of the evaluation form.
     *   *Allowed values*: ``DRAFT`` | ``ACTIVE``
     */
    status: pulumi.Input<enums.connect.EvaluationFormStatus>;
    /**
     * The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * A title of the evaluation form.
     */
    title: pulumi.Input<string>;
}
