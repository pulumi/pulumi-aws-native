// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Connect::AgentStatus
 */
export class AgentStatus extends pulumi.CustomResource {
    /**
     * Get an existing AgentStatus resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AgentStatus {
        return new AgentStatus(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:connect:AgentStatus';

    /**
     * Returns true if the given object is an instance of AgentStatus.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgentStatus {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentStatus.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the agent status.
     */
    public /*out*/ readonly agentStatusArn!: pulumi.Output<string>;
    /**
     * The description of the status.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display order of the status.
     */
    public readonly displayOrder!: pulumi.Output<number | undefined>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * Last modified region.
     */
    public /*out*/ readonly lastModifiedRegion!: pulumi.Output<string>;
    /**
     * Last modified time.
     */
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<number>;
    /**
     * The name of the status.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A number indicating the reset order of the agent status.
     */
    public readonly resetOrderNumber!: pulumi.Output<boolean | undefined>;
    /**
     * The state of the status.
     */
    public readonly state!: pulumi.Output<enums.connect.AgentStatusState>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The type of agent status.
     */
    public readonly type!: pulumi.Output<enums.connect.AgentStatusType | undefined>;

    /**
     * Create a AgentStatus resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentStatusArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.instanceArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            if (args?.state === undefined && !opts.urn) {
                throw new Error("Missing required property 'state'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["displayOrder"] = args?.displayOrder;
            resourceInputs["instanceArn"] = args?.instanceArn;
            resourceInputs["name"] = args?.name;
            resourceInputs["resetOrderNumber"] = args?.resetOrderNumber;
            resourceInputs["state"] = args?.state;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["type"] = args?.type;
            resourceInputs["agentStatusArn"] = undefined /*out*/;
            resourceInputs["lastModifiedRegion"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
        } else {
            resourceInputs["agentStatusArn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayOrder"] = undefined /*out*/;
            resourceInputs["instanceArn"] = undefined /*out*/;
            resourceInputs["lastModifiedRegion"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["resetOrderNumber"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgentStatus.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AgentStatus resource.
 */
export interface AgentStatusArgs {
    /**
     * The description of the status.
     */
    description?: pulumi.Input<string>;
    /**
     * The display order of the status.
     */
    displayOrder?: pulumi.Input<number>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The name of the status.
     */
    name?: pulumi.Input<string>;
    /**
     * A number indicating the reset order of the agent status.
     */
    resetOrderNumber?: pulumi.Input<boolean>;
    /**
     * The state of the status.
     */
    state: pulumi.Input<enums.connect.AgentStatusState>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The type of agent status.
     */
    type?: pulumi.Input<enums.connect.AgentStatusType>;
}
