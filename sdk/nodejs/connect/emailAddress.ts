// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Connect::EmailAddress
 */
export class EmailAddress extends pulumi.CustomResource {
    /**
     * Get an existing EmailAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EmailAddress {
        return new EmailAddress(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:connect:EmailAddress';

    /**
     * Returns true if the given object is an instance of EmailAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmailAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmailAddress.__pulumiType;
    }

    /**
     * List of alias configurations for the email address
     */
    declare public readonly aliasConfigurations: pulumi.Output<outputs.connect.EmailAddressAliasConfiguration[] | undefined>;
    /**
     * A description for the email address.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name for the email address.
     */
    declare public readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Email address to be created for this instance
     */
    declare public readonly emailAddress: pulumi.Output<string>;
    /**
     * The identifier of the email address.
     */
    declare public /*out*/ readonly emailAddressArn: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    declare public readonly instanceArn: pulumi.Output<string>;
    /**
     * One or more tags.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a EmailAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailAddressArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.emailAddress === undefined && !opts.urn) {
                throw new Error("Missing required property 'emailAddress'");
            }
            if (args?.instanceArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            resourceInputs["aliasConfigurations"] = args?.aliasConfigurations;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["emailAddress"] = args?.emailAddress;
            resourceInputs["instanceArn"] = args?.instanceArn;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["emailAddressArn"] = undefined /*out*/;
        } else {
            resourceInputs["aliasConfigurations"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["emailAddress"] = undefined /*out*/;
            resourceInputs["emailAddressArn"] = undefined /*out*/;
            resourceInputs["instanceArn"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["emailAddress"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(EmailAddress.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EmailAddress resource.
 */
export interface EmailAddressArgs {
    /**
     * List of alias configurations for the email address
     */
    aliasConfigurations?: pulumi.Input<pulumi.Input<inputs.connect.EmailAddressAliasConfigurationArgs>[]>;
    /**
     * A description for the email address.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name for the email address.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Email address to be created for this instance
     */
    emailAddress: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
