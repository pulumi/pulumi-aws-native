// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Connect::UserHierarchyStructure
 */
export class UserHierarchyStructure extends pulumi.CustomResource {
    /**
     * Get an existing UserHierarchyStructure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UserHierarchyStructure {
        return new UserHierarchyStructure(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:connect:UserHierarchyStructure';

    /**
     * Returns true if the given object is an instance of UserHierarchyStructure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserHierarchyStructure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserHierarchyStructure.__pulumiType;
    }

    /**
     * The identifier of the Amazon Connect instance.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * Information about the hierarchy structure.
     */
    public readonly userHierarchyStructure!: pulumi.Output<outputs.connect.UserHierarchyStructureProperties | undefined>;
    /**
     * The identifier of the User Hierarchy Structure.
     */
    public /*out*/ readonly userHierarchyStructureArn!: pulumi.Output<string>;

    /**
     * Create a UserHierarchyStructure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserHierarchyStructureArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["userHierarchyStructure"] = args ? args.userHierarchyStructure : undefined;
            resourceInputs["userHierarchyStructureArn"] = undefined /*out*/;
        } else {
            resourceInputs["instanceArn"] = undefined /*out*/;
            resourceInputs["userHierarchyStructure"] = undefined /*out*/;
            resourceInputs["userHierarchyStructureArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["instanceArn"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(UserHierarchyStructure.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a UserHierarchyStructure resource.
 */
export interface UserHierarchyStructureArgs {
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * Information about the hierarchy structure.
     */
    userHierarchyStructure?: pulumi.Input<inputs.connect.UserHierarchyStructurePropertiesArgs>;
}
