// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Creates an evaluation form for the specified CON instance.
 */
export function getEvaluationForm(args: GetEvaluationFormArgs, opts?: pulumi.InvokeOptions): Promise<GetEvaluationFormResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:connect:getEvaluationForm", {
        "evaluationFormArn": args.evaluationFormArn,
    }, opts);
}

export interface GetEvaluationFormArgs {
    /**
     * The Amazon Resource Name (ARN) of the evaluation form.
     */
    evaluationFormArn: string;
}

export interface GetEvaluationFormResult {
    /**
     * The description of the evaluation form.
     *   *Length Constraints*: Minimum length of 0. Maximum length of 1024.
     */
    readonly description?: string;
    /**
     * The Amazon Resource Name (ARN) of the evaluation form.
     */
    readonly evaluationFormArn?: string;
    /**
     * The identifier of the Amazon Connect instance.
     */
    readonly instanceArn?: string;
    /**
     * Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
     *   *Minimum size*: 1
     *   *Maximum size*: 100
     */
    readonly items?: outputs.connect.EvaluationFormBaseItem[];
    /**
     * A scoring strategy of the evaluation form.
     */
    readonly scoringStrategy?: outputs.connect.EvaluationFormScoringStrategy;
    /**
     * The status of the evaluation form.
     *   *Allowed values*: ``DRAFT`` | ``ACTIVE``
     */
    readonly status?: enums.connect.EvaluationFormStatus;
    /**
     * The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    readonly tags?: outputs.Tag[];
    /**
     * A title of the evaluation form.
     */
    readonly title?: string;
}
/**
 * Creates an evaluation form for the specified CON instance.
 */
export function getEvaluationFormOutput(args: GetEvaluationFormOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEvaluationFormResult> {
    return pulumi.output(args).apply((a: any) => getEvaluationForm(a, opts))
}

export interface GetEvaluationFormOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the evaluation form.
     */
    evaluationFormArn: pulumi.Input<string>;
}
