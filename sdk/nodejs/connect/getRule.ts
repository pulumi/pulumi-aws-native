// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS:Connect::Rule
 */
export function getRule(args: GetRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetRuleResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:connect:getRule", {
        "ruleArn": args.ruleArn,
    }, opts);
}

export interface GetRuleArgs {
    /**
     * The Amazon Resource Name (ARN) of the rule.
     */
    ruleArn: string;
}

export interface GetRuleResult {
    /**
     * The list of actions that will be executed when a rule is triggered.
     */
    readonly actions?: outputs.connect.RuleActions;
    /**
     * The conditions of a rule.
     */
    readonly function?: string;
    /**
     * The name of the rule.
     */
    readonly name?: string;
    /**
     * The publish status of a rule, either draft or published.
     */
    readonly publishStatus?: enums.connect.RulePublishStatus;
    /**
     * The Amazon Resource Name (ARN) of the rule.
     */
    readonly ruleArn?: string;
    /**
     * One or more tags.
     */
    readonly tags?: outputs.connect.RuleTag[];
}

export function getRuleOutput(args: GetRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRuleResult> {
    return pulumi.output(args).apply(a => getRule(a, opts))
}

export interface GetRuleOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the rule.
     */
    ruleArn: pulumi.Input<string>;
}
