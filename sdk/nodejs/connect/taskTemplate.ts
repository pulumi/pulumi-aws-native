// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Connect::TaskTemplate.
 */
export class TaskTemplate extends pulumi.CustomResource {
    /**
     * Get an existing TaskTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TaskTemplate {
        return new TaskTemplate(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:connect:TaskTemplate';

    /**
     * Returns true if the given object is an instance of TaskTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TaskTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TaskTemplate.__pulumiType;
    }

    /**
     * The identifier (arn) of the task template.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
     */
    declare public readonly clientToken: pulumi.Output<string | undefined>;
    /**
     * The constraints for the task template
     */
    declare public readonly constraints: pulumi.Output<outputs.connect.ConstraintsProperties | undefined>;
    /**
     * The identifier of the contact flow.
     */
    declare public readonly contactFlowArn: pulumi.Output<string | undefined>;
    /**
     * The default values for fields when a task is created by referencing this template.
     */
    declare public readonly defaults: pulumi.Output<outputs.connect.TaskTemplateDefaultFieldValue[] | undefined>;
    /**
     * The description of the task template.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The list of task template's fields
     */
    declare public readonly fields: pulumi.Output<outputs.connect.TaskTemplateField[] | undefined>;
    /**
     * The identifier (arn) of the instance.
     */
    declare public readonly instanceArn: pulumi.Output<string>;
    /**
     * The name of the task template.
     */
    declare public readonly name: pulumi.Output<string | undefined>;
    /**
     * The identifier of the contact flow.
     */
    declare public readonly selfAssignContactFlowArn: pulumi.Output<string | undefined>;
    /**
     * The status of the task template.
     */
    declare public readonly status: pulumi.Output<enums.connect.TaskTemplateStatus | undefined>;
    /**
     * One or more tags.
     */
    declare public readonly tags: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a TaskTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TaskTemplateArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.instanceArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            resourceInputs["clientToken"] = args?.clientToken;
            resourceInputs["constraints"] = args?.constraints;
            resourceInputs["contactFlowArn"] = args?.contactFlowArn;
            resourceInputs["defaults"] = args?.defaults;
            resourceInputs["description"] = args?.description;
            resourceInputs["fields"] = args?.fields;
            resourceInputs["instanceArn"] = args?.instanceArn;
            resourceInputs["name"] = args?.name;
            resourceInputs["selfAssignContactFlowArn"] = args?.selfAssignContactFlowArn;
            resourceInputs["status"] = args?.status;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["clientToken"] = undefined /*out*/;
            resourceInputs["constraints"] = undefined /*out*/;
            resourceInputs["contactFlowArn"] = undefined /*out*/;
            resourceInputs["defaults"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["fields"] = undefined /*out*/;
            resourceInputs["instanceArn"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["selfAssignContactFlowArn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TaskTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a TaskTemplate resource.
 */
export interface TaskTemplateArgs {
    /**
     * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The constraints for the task template
     */
    constraints?: pulumi.Input<inputs.connect.ConstraintsPropertiesArgs>;
    /**
     * The identifier of the contact flow.
     */
    contactFlowArn?: pulumi.Input<string>;
    /**
     * The default values for fields when a task is created by referencing this template.
     */
    defaults?: pulumi.Input<pulumi.Input<inputs.connect.TaskTemplateDefaultFieldValueArgs>[]>;
    /**
     * The description of the task template.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of task template's fields
     */
    fields?: pulumi.Input<pulumi.Input<inputs.connect.TaskTemplateFieldArgs>[]>;
    /**
     * The identifier (arn) of the instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The name of the task template.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the contact flow.
     */
    selfAssignContactFlowArn?: pulumi.Input<string>;
    /**
     * The status of the task template.
     */
    status?: pulumi.Input<enums.connect.TaskTemplateStatus>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
