// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Connect::User
 */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:connect:getUser", {
        "userArn": args.userArn,
    }, opts);
}

export interface GetUserArgs {
    /**
     * The Amazon Resource Name (ARN) for the user.
     */
    userArn: string;
}

export interface GetUserResult {
    /**
     * The identifier of the user account in the directory used for identity management.
     */
    readonly directoryUserId?: string;
    /**
     * The identifier of the hierarchy group for the user.
     */
    readonly hierarchyGroupArn?: string;
    /**
     * The information about the identity of the user.
     */
    readonly identityInfo?: outputs.connect.UserIdentityInfo;
    /**
     * The identifier of the Amazon Connect instance.
     */
    readonly instanceArn?: string;
    /**
     * The phone settings for the user.
     */
    readonly phoneConfig?: outputs.connect.UserPhoneConfig;
    /**
     * The identifier of the routing profile for the user.
     */
    readonly routingProfileArn?: string;
    /**
     * One or more security profile arns for the user
     */
    readonly securityProfileArns?: string[];
    /**
     * One or more tags.
     */
    readonly tags?: outputs.connect.UserTag[];
    /**
     * The Amazon Resource Name (ARN) for the user.
     */
    readonly userArn?: string;
    /**
     * One or more predefined attributes assigned to a user, with a level that indicates how skilled they are.
     */
    readonly userProficiencies?: outputs.connect.UserProficiency[];
    /**
     * The user name for the account.
     */
    readonly username?: string;
}
/**
 * Resource Type definition for AWS::Connect::User
 */
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

export interface GetUserOutputArgs {
    /**
     * The Amazon Resource Name (ARN) for the user.
     */
    userArn: pulumi.Input<string>;
}
