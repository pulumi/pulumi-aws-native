// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Route53Resolver::ResolverDNSSECConfig.
 */
export function getResolverDnssecConfig(args: GetResolverDnssecConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetResolverDnssecConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:route53resolver:getResolverDnssecConfig", {
        "id": args.id,
    }, opts);
}

export interface GetResolverDnssecConfigArgs {
    /**
     * Id
     */
    id: string;
}

export interface GetResolverDnssecConfigResult {
    /**
     * Id
     */
    readonly id?: string;
    /**
     * AccountId
     */
    readonly ownerId?: string;
    /**
     * ResolverDNSSECValidationStatus, possible values are ENABLING, ENABLED, DISABLING AND DISABLED.
     */
    readonly validationStatus?: enums.route53resolver.ResolverDnssecConfigValidationStatus;
}
/**
 * Resource schema for AWS::Route53Resolver::ResolverDNSSECConfig.
 */
export function getResolverDnssecConfigOutput(args: GetResolverDnssecConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResolverDnssecConfigResult> {
    return pulumi.output(args).apply((a: any) => getResolverDnssecConfig(a, opts))
}

export interface GetResolverDnssecConfigOutputArgs {
    /**
     * Id
     */
    id: pulumi.Input<string>;
}
