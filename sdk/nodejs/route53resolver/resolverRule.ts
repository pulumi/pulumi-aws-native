// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::Route53Resolver::ResolverRule
 */
export class ResolverRule extends pulumi.CustomResource {
    /**
     * Get an existing ResolverRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResolverRule {
        return new ResolverRule(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:route53resolver:ResolverRule';

    /**
     * Returns true if the given object is an instance of ResolverRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResolverRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResolverRule.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the resolver rule.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * DNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The name for the Resolver rule
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * The ID of the endpoint that the rule is associated with.
     */
    public readonly resolverEndpointId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the endpoint that the rule is associated with.
     */
    public /*out*/ readonly resolverRuleId!: pulumi.Output<string>;
    /**
     * When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD. When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM.
     */
    public readonly ruleType!: pulumi.Output<enums.route53resolver.ResolverRuleRuleType>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.route53resolver.ResolverRuleTag[] | undefined>;
    /**
     * An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.
     */
    public readonly targetIps!: pulumi.Output<outputs.route53resolver.ResolverRuleTargetAddress[] | undefined>;

    /**
     * Create a ResolverRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResolverRuleArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.ruleType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleType'");
            }
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resolverEndpointId"] = args ? args.resolverEndpointId : undefined;
            resourceInputs["ruleType"] = args ? args.ruleType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetIps"] = args ? args.targetIps : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["resolverRuleId"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["resolverEndpointId"] = undefined /*out*/;
            resourceInputs["resolverRuleId"] = undefined /*out*/;
            resourceInputs["ruleType"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["targetIps"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResolverRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ResolverRule resource.
 */
export interface ResolverRuleArgs {
    /**
     * DNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps
     */
    domainName: pulumi.Input<string>;
    /**
     * The name for the Resolver rule
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the endpoint that the rule is associated with.
     */
    resolverEndpointId?: pulumi.Input<string>;
    /**
     * When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD. When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM.
     */
    ruleType: pulumi.Input<enums.route53resolver.ResolverRuleRuleType>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.route53resolver.ResolverRuleTagArgs>[]>;
    /**
     * An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.
     */
    targetIps?: pulumi.Input<pulumi.Input<inputs.route53resolver.ResolverRuleTargetAddressArgs>[]>;
}
