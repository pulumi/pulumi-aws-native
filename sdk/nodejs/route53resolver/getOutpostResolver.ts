// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Route53Resolver::OutpostResolver.
 */
export function getOutpostResolver(args: GetOutpostResolverArgs, opts?: pulumi.InvokeOptions): Promise<GetOutpostResolverResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:route53resolver:getOutpostResolver", {
        "id": args.id,
    }, opts);
}

export interface GetOutpostResolverArgs {
    /**
     * Id
     */
    id: string;
}

export interface GetOutpostResolverResult {
    /**
     * The OutpostResolver ARN.
     */
    readonly arn?: string;
    /**
     * The OutpostResolver creation time
     */
    readonly creationTime?: string;
    /**
     * The id of the creator request.
     */
    readonly creatorRequestId?: string;
    /**
     * Id
     */
    readonly id?: string;
    /**
     * The number of OutpostResolvers.
     */
    readonly instanceCount?: number;
    /**
     * The OutpostResolver last modified time
     */
    readonly modificationTime?: string;
    /**
     * The OutpostResolver name.
     */
    readonly name?: string;
    /**
     * The OutpostResolver instance type.
     */
    readonly preferredInstanceType?: string;
    /**
     * The OutpostResolver status, possible values are CREATING, OPERATIONAL, UPDATING, DELETING, ACTION_NEEDED, FAILED_CREATION and FAILED_DELETION.
     */
    readonly status?: enums.route53resolver.OutpostResolverStatus;
    /**
     * The OutpostResolver status message.
     */
    readonly statusMessage?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.route53resolver.OutpostResolverTag[];
}
/**
 * Resource schema for AWS::Route53Resolver::OutpostResolver.
 */
export function getOutpostResolverOutput(args: GetOutpostResolverOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOutpostResolverResult> {
    return pulumi.output(args).apply((a: any) => getOutpostResolver(a, opts))
}

export interface GetOutpostResolverOutputArgs {
    /**
     * Id
     */
    id: pulumi.Input<string>;
}
