// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource type definition for AWS::Route53Resolver::ResolverEndpoint
 */
export function getResolverEndpoint(args: GetResolverEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetResolverEndpointResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:route53resolver:getResolverEndpoint", {
        "resolverEndpointId": args.resolverEndpointId,
    }, opts);
}

export interface GetResolverEndpointArgs {
    /**
     * The ID of the resolver endpoint.
     */
    resolverEndpointId: string;
}

export interface GetResolverEndpointResult {
    /**
     * The Amazon Resource Name (ARN) of the resolver endpoint, such as arn:aws:route53resolver:us-east-1:123456789012:resolver-endpoint/resolver-endpoint-a1bzhi.
     */
    readonly arn?: string;
    /**
     * The ID of the VPC that you want to create the resolver endpoint in.
     */
    readonly hostVpcId?: string;
    /**
     * The number of IP addresses that the resolver endpoint can use for DNS queries.
     */
    readonly ipAddressCount?: string;
    /**
     * The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.
     */
    readonly ipAddresses?: outputs.route53resolver.ResolverEndpointIpAddressRequest[];
    /**
     * A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.
     */
    readonly name?: string;
    /**
     * Protocols used for the endpoint. DoH-FIPS is applicable for inbound endpoints only.
     */
    readonly protocols?: string[];
    /**
     * The ID of the resolver endpoint.
     */
    readonly resolverEndpointId?: string;
    /**
     * The Resolver endpoint IP address type.
     */
    readonly resolverEndpointType?: enums.route53resolver.ResolverEndpointType;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource type definition for AWS::Route53Resolver::ResolverEndpoint
 */
export function getResolverEndpointOutput(args: GetResolverEndpointOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResolverEndpointResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:route53resolver:getResolverEndpoint", {
        "resolverEndpointId": args.resolverEndpointId,
    }, opts);
}

export interface GetResolverEndpointOutputArgs {
    /**
     * The ID of the resolver endpoint.
     */
    resolverEndpointId: pulumi.Input<string>;
}
