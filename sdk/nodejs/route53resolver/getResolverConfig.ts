// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource schema for AWS::Route53Resolver::ResolverConfig.
 */
export function getResolverConfig(args: GetResolverConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetResolverConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:route53resolver:getResolverConfig", {
        "id": args.id,
    }, opts);
}

export interface GetResolverConfigArgs {
    /**
     * Id
     */
    id: string;
}

export interface GetResolverConfigResult {
    /**
     * ResolverAutodefinedReverseStatus, possible values are ENABLING, ENABLED, DISABLING AND DISABLED.
     */
    readonly autodefinedReverse?: enums.route53resolver.ResolverConfigAutodefinedReverse;
    /**
     * Id
     */
    readonly id?: string;
    /**
     * AccountId
     */
    readonly ownerId?: string;
}

export function getResolverConfigOutput(args: GetResolverConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResolverConfigResult> {
    return pulumi.output(args).apply(a => getResolverConfig(a, opts))
}

export interface GetResolverConfigOutputArgs {
    /**
     * Id
     */
    id: pulumi.Input<string>;
}
