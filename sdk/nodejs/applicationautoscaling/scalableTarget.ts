// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ApplicationAutoScaling::ScalableTarget
 */
export class ScalableTarget extends pulumi.CustomResource {
    /**
     * Get an existing ScalableTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScalableTarget {
        return new ScalableTarget(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:applicationautoscaling:ScalableTarget';

    /**
     * Returns true if the given object is an instance of ScalableTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalableTarget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalableTarget.__pulumiType;
    }

    /**
     * The maximum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
     */
    public readonly maxCapacity!: pulumi.Output<number>;
    /**
     * The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
     */
    public readonly minCapacity!: pulumi.Output<number>;
    /**
     * The identifier of the resource associated with the scalable target
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf. 
     */
    public readonly roleArn!: pulumi.Output<string | undefined>;
    /**
     * The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property
     */
    public readonly scalableDimension!: pulumi.Output<string>;
    /**
     * The scheduled actions for the scalable target. Duplicates aren't allowed.
     */
    public readonly scheduledActions!: pulumi.Output<outputs.applicationautoscaling.ScalableTargetScheduledAction[] | undefined>;
    /**
     * The namespace of the AWS service that provides the resource, or a custom-resource
     */
    public readonly serviceNamespace!: pulumi.Output<string>;
    /**
     * An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities.
     */
    public readonly suspendedState!: pulumi.Output<outputs.applicationautoscaling.ScalableTargetSuspendedState | undefined>;

    /**
     * Create a ScalableTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalableTargetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.maxCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxCapacity'");
            }
            if ((!args || args.minCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minCapacity'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.scalableDimension === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalableDimension'");
            }
            if ((!args || args.serviceNamespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceNamespace'");
            }
            resourceInputs["maxCapacity"] = args ? args.maxCapacity : undefined;
            resourceInputs["minCapacity"] = args ? args.minCapacity : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["scalableDimension"] = args ? args.scalableDimension : undefined;
            resourceInputs["scheduledActions"] = args ? args.scheduledActions : undefined;
            resourceInputs["serviceNamespace"] = args ? args.serviceNamespace : undefined;
            resourceInputs["suspendedState"] = args ? args.suspendedState : undefined;
        } else {
            resourceInputs["maxCapacity"] = undefined /*out*/;
            resourceInputs["minCapacity"] = undefined /*out*/;
            resourceInputs["resourceId"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["scalableDimension"] = undefined /*out*/;
            resourceInputs["scheduledActions"] = undefined /*out*/;
            resourceInputs["serviceNamespace"] = undefined /*out*/;
            resourceInputs["suspendedState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScalableTarget.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ScalableTarget resource.
 */
export interface ScalableTargetArgs {
    /**
     * The maximum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
     */
    maxCapacity: pulumi.Input<number>;
    /**
     * The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
     */
    minCapacity: pulumi.Input<number>;
    /**
     * The identifier of the resource associated with the scalable target
     */
    resourceId: pulumi.Input<string>;
    /**
     * Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf. 
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property
     */
    scalableDimension: pulumi.Input<string>;
    /**
     * The scheduled actions for the scalable target. Duplicates aren't allowed.
     */
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.applicationautoscaling.ScalableTargetScheduledActionArgs>[]>;
    /**
     * The namespace of the AWS service that provides the resource, or a custom-resource
     */
    serviceNamespace: pulumi.Input<string>;
    /**
     * An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities.
     */
    suspendedState?: pulumi.Input<inputs.applicationautoscaling.ScalableTargetSuspendedStateArgs>;
}
