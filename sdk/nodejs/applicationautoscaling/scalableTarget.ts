// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ApplicationAutoScaling::ScalableTarget
 *
 * @deprecated ScalableTarget is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class ScalableTarget extends pulumi.CustomResource {
    /**
     * Get an existing ScalableTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScalableTarget {
        pulumi.log.warn("ScalableTarget is deprecated: ScalableTarget is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new ScalableTarget(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:applicationautoscaling:ScalableTarget';

    /**
     * Returns true if the given object is an instance of ScalableTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalableTarget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalableTarget.__pulumiType;
    }

    public readonly maxCapacity!: pulumi.Output<number>;
    public readonly minCapacity!: pulumi.Output<number>;
    public readonly resourceId!: pulumi.Output<string>;
    public readonly roleARN!: pulumi.Output<string>;
    public readonly scalableDimension!: pulumi.Output<string>;
    public readonly scheduledActions!: pulumi.Output<outputs.applicationautoscaling.ScalableTargetScheduledAction[] | undefined>;
    public readonly serviceNamespace!: pulumi.Output<string>;
    public readonly suspendedState!: pulumi.Output<outputs.applicationautoscaling.ScalableTargetSuspendedState | undefined>;

    /**
     * Create a ScalableTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated ScalableTarget is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: ScalableTargetArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("ScalableTarget is deprecated: ScalableTarget is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.maxCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxCapacity'");
            }
            if ((!args || args.minCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minCapacity'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.roleARN === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleARN'");
            }
            if ((!args || args.scalableDimension === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalableDimension'");
            }
            if ((!args || args.serviceNamespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceNamespace'");
            }
            resourceInputs["maxCapacity"] = args ? args.maxCapacity : undefined;
            resourceInputs["minCapacity"] = args ? args.minCapacity : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["roleARN"] = args ? args.roleARN : undefined;
            resourceInputs["scalableDimension"] = args ? args.scalableDimension : undefined;
            resourceInputs["scheduledActions"] = args ? args.scheduledActions : undefined;
            resourceInputs["serviceNamespace"] = args ? args.serviceNamespace : undefined;
            resourceInputs["suspendedState"] = args ? args.suspendedState : undefined;
        } else {
            resourceInputs["maxCapacity"] = undefined /*out*/;
            resourceInputs["minCapacity"] = undefined /*out*/;
            resourceInputs["resourceId"] = undefined /*out*/;
            resourceInputs["roleARN"] = undefined /*out*/;
            resourceInputs["scalableDimension"] = undefined /*out*/;
            resourceInputs["scheduledActions"] = undefined /*out*/;
            resourceInputs["serviceNamespace"] = undefined /*out*/;
            resourceInputs["suspendedState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScalableTarget.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ScalableTarget resource.
 */
export interface ScalableTargetArgs {
    maxCapacity: pulumi.Input<number>;
    minCapacity: pulumi.Input<number>;
    resourceId: pulumi.Input<string>;
    roleARN: pulumi.Input<string>;
    scalableDimension: pulumi.Input<string>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.applicationautoscaling.ScalableTargetScheduledActionArgs>[]>;
    serviceNamespace: pulumi.Input<string>;
    suspendedState?: pulumi.Input<inputs.applicationautoscaling.ScalableTargetSuspendedStateArgs>;
}
