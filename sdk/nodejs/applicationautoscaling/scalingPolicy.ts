// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::ApplicationAutoScaling::ScalingPolicy
 */
export class ScalingPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ScalingPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScalingPolicy {
        return new ScalingPolicy(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:applicationautoscaling:ScalingPolicy';

    /**
     * Returns true if the given object is an instance of ScalingPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalingPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalingPolicy.__pulumiType;
    }

    /**
     * ARN is a read only property for the resource.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name of the scaling policy.
     *
     * Updates to the name of a target tracking scaling policy are not supported, unless you also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy by removing the existing AWS::ApplicationAutoScaling::ScalingPolicy resource from the template and updating the stack. Then, recreate the resource with the same settings and a different name.
     */
    public readonly policyName!: pulumi.Output<string>;
    /**
     * The scaling policy type.
     *
     * The following policy types are supported:
     *
     * TargetTrackingScaling Not supported for Amazon EMR
     *
     * StepScaling Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.
     */
    public readonly policyType!: pulumi.Output<string>;
    /**
     * The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.
     */
    public readonly resourceId!: pulumi.Output<string | undefined>;
    /**
     * The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
     */
    public readonly scalableDimension!: pulumi.Output<string | undefined>;
    /**
     * The CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see the Return Value section of the AWS::ApplicationAutoScaling::ScalableTarget resource.
     */
    public readonly scalingTargetId!: pulumi.Output<string | undefined>;
    /**
     * The namespace of the AWS service that provides the resource, or a custom-resource.
     */
    public readonly serviceNamespace!: pulumi.Output<string | undefined>;
    /**
     * A step scaling policy.
     */
    public readonly stepScalingPolicyConfiguration!: pulumi.Output<outputs.applicationautoscaling.ScalingPolicyStepScalingPolicyConfiguration | undefined>;
    /**
     * A target tracking scaling policy.
     */
    public readonly targetTrackingScalingPolicyConfiguration!: pulumi.Output<outputs.applicationautoscaling.ScalingPolicyTargetTrackingScalingPolicyConfiguration | undefined>;

    /**
     * Create a ScalingPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalingPolicyArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.policyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyName'");
            }
            if ((!args || args.policyType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyType'");
            }
            resourceInputs["policyName"] = args ? args.policyName : undefined;
            resourceInputs["policyType"] = args ? args.policyType : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["scalableDimension"] = args ? args.scalableDimension : undefined;
            resourceInputs["scalingTargetId"] = args ? args.scalingTargetId : undefined;
            resourceInputs["serviceNamespace"] = args ? args.serviceNamespace : undefined;
            resourceInputs["stepScalingPolicyConfiguration"] = args ? args.stepScalingPolicyConfiguration : undefined;
            resourceInputs["targetTrackingScalingPolicyConfiguration"] = args ? args.targetTrackingScalingPolicyConfiguration : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["policyName"] = undefined /*out*/;
            resourceInputs["policyType"] = undefined /*out*/;
            resourceInputs["resourceId"] = undefined /*out*/;
            resourceInputs["scalableDimension"] = undefined /*out*/;
            resourceInputs["scalingTargetId"] = undefined /*out*/;
            resourceInputs["serviceNamespace"] = undefined /*out*/;
            resourceInputs["stepScalingPolicyConfiguration"] = undefined /*out*/;
            resourceInputs["targetTrackingScalingPolicyConfiguration"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["policyName", "resourceId", "scalableDimension", "scalingTargetId", "serviceNamespace"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ScalingPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ScalingPolicy resource.
 */
export interface ScalingPolicyArgs {
    /**
     * The name of the scaling policy.
     *
     * Updates to the name of a target tracking scaling policy are not supported, unless you also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy by removing the existing AWS::ApplicationAutoScaling::ScalingPolicy resource from the template and updating the stack. Then, recreate the resource with the same settings and a different name.
     */
    policyName: pulumi.Input<string>;
    /**
     * The scaling policy type.
     *
     * The following policy types are supported:
     *
     * TargetTrackingScaling Not supported for Amazon EMR
     *
     * StepScaling Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.
     */
    policyType: pulumi.Input<string>;
    /**
     * The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
     */
    scalableDimension?: pulumi.Input<string>;
    /**
     * The CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see the Return Value section of the AWS::ApplicationAutoScaling::ScalableTarget resource.
     */
    scalingTargetId?: pulumi.Input<string>;
    /**
     * The namespace of the AWS service that provides the resource, or a custom-resource.
     */
    serviceNamespace?: pulumi.Input<string>;
    /**
     * A step scaling policy.
     */
    stepScalingPolicyConfiguration?: pulumi.Input<inputs.applicationautoscaling.ScalingPolicyStepScalingPolicyConfigurationArgs>;
    /**
     * A target tracking scaling policy.
     */
    targetTrackingScalingPolicyConfiguration?: pulumi.Input<inputs.applicationautoscaling.ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs>;
}
