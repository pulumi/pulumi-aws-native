// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::MediaLive::Channel
 */
export function getChannel(args: GetChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetChannelResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:medialive:getChannel", {
        "id": args.id,
    }, opts);
}

export interface GetChannelArgs {
    id: string;
}

export interface GetChannelResult {
    readonly arn?: string;
    readonly cdiInputSpecification?: outputs.medialive.ChannelCdiInputSpecification;
    readonly channelClass?: string;
    readonly destinations?: outputs.medialive.ChannelOutputDestination[];
    readonly encoderSettings?: outputs.medialive.ChannelEncoderSettings;
    readonly id?: string;
    readonly inputAttachments?: outputs.medialive.ChannelInputAttachment[];
    readonly inputSpecification?: outputs.medialive.ChannelInputSpecification;
    readonly inputs?: string[];
    readonly logLevel?: string;
    readonly name?: string;
    readonly roleArn?: string;
    readonly tags?: any;
}

export function getChannelOutput(args: GetChannelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetChannelResult> {
    return pulumi.output(args).apply(a => getChannel(a, opts))
}

export interface GetChannelOutputArgs {
    id: pulumi.Input<string>;
}
