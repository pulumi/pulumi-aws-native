// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::MediaLive::Channel
 *
 * @deprecated Channel is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class Channel extends pulumi.CustomResource {
    /**
     * Get an existing Channel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Channel {
        pulumi.log.warn("Channel is deprecated: Channel is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new Channel(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:medialive:Channel';

    /**
     * Returns true if the given object is an instance of Channel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Channel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Channel.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly cdiInputSpecification!: pulumi.Output<outputs.medialive.ChannelCdiInputSpecification | undefined>;
    public readonly channelClass!: pulumi.Output<string | undefined>;
    public readonly destinations!: pulumi.Output<outputs.medialive.ChannelOutputDestination[] | undefined>;
    public readonly encoderSettings!: pulumi.Output<outputs.medialive.ChannelEncoderSettings | undefined>;
    public readonly inputAttachments!: pulumi.Output<outputs.medialive.ChannelInputAttachment[] | undefined>;
    public readonly inputSpecification!: pulumi.Output<outputs.medialive.ChannelInputSpecification | undefined>;
    public /*out*/ readonly inputs!: pulumi.Output<string[]>;
    public readonly logLevel!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string | undefined>;
    public readonly roleArn!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<any | undefined>;
    public readonly vpc!: pulumi.Output<outputs.medialive.ChannelVpcOutputSettings | undefined>;

    /**
     * Create a Channel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Channel is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: ChannelArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Channel is deprecated: Channel is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["cdiInputSpecification"] = args ? args.cdiInputSpecification : undefined;
            resourceInputs["channelClass"] = args ? args.channelClass : undefined;
            resourceInputs["destinations"] = args ? args.destinations : undefined;
            resourceInputs["encoderSettings"] = args ? args.encoderSettings : undefined;
            resourceInputs["inputAttachments"] = args ? args.inputAttachments : undefined;
            resourceInputs["inputSpecification"] = args ? args.inputSpecification : undefined;
            resourceInputs["logLevel"] = args ? args.logLevel : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpc"] = args ? args.vpc : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["inputs"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["cdiInputSpecification"] = undefined /*out*/;
            resourceInputs["channelClass"] = undefined /*out*/;
            resourceInputs["destinations"] = undefined /*out*/;
            resourceInputs["encoderSettings"] = undefined /*out*/;
            resourceInputs["inputAttachments"] = undefined /*out*/;
            resourceInputs["inputSpecification"] = undefined /*out*/;
            resourceInputs["inputs"] = undefined /*out*/;
            resourceInputs["logLevel"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpc"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Channel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Channel resource.
 */
export interface ChannelArgs {
    cdiInputSpecification?: pulumi.Input<inputs.medialive.ChannelCdiInputSpecificationArgs>;
    channelClass?: pulumi.Input<string>;
    destinations?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelOutputDestinationArgs>[]>;
    encoderSettings?: pulumi.Input<inputs.medialive.ChannelEncoderSettingsArgs>;
    inputAttachments?: pulumi.Input<pulumi.Input<inputs.medialive.ChannelInputAttachmentArgs>[]>;
    inputSpecification?: pulumi.Input<inputs.medialive.ChannelInputSpecificationArgs>;
    logLevel?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    tags?: any;
    vpc?: pulumi.Input<inputs.medialive.ChannelVpcOutputSettingsArgs>;
}
