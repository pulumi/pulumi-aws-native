// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ChannelArgs } from "./channel";
export type Channel = import("./channel").Channel;
export const Channel: typeof import("./channel").Channel = null as any;
utilities.lazyLoad(exports, ["Channel"], () => require("./channel"));

export { GetChannelArgs, GetChannelResult, GetChannelOutputArgs } from "./getChannel";
export const getChannel: typeof import("./getChannel").getChannel = null as any;
export const getChannelOutput: typeof import("./getChannel").getChannelOutput = null as any;
utilities.lazyLoad(exports, ["getChannel","getChannelOutput"], () => require("./getChannel"));

export { GetInputArgs, GetInputResult, GetInputOutputArgs } from "./getInput";
export const getInput: typeof import("./getInput").getInput = null as any;
export const getInputOutput: typeof import("./getInput").getInputOutput = null as any;
utilities.lazyLoad(exports, ["getInput","getInputOutput"], () => require("./getInput"));

export { GetInputSecurityGroupArgs, GetInputSecurityGroupResult, GetInputSecurityGroupOutputArgs } from "./getInputSecurityGroup";
export const getInputSecurityGroup: typeof import("./getInputSecurityGroup").getInputSecurityGroup = null as any;
export const getInputSecurityGroupOutput: typeof import("./getInputSecurityGroup").getInputSecurityGroupOutput = null as any;
utilities.lazyLoad(exports, ["getInputSecurityGroup","getInputSecurityGroupOutput"], () => require("./getInputSecurityGroup"));

export { GetMultiplexArgs, GetMultiplexResult, GetMultiplexOutputArgs } from "./getMultiplex";
export const getMultiplex: typeof import("./getMultiplex").getMultiplex = null as any;
export const getMultiplexOutput: typeof import("./getMultiplex").getMultiplexOutput = null as any;
utilities.lazyLoad(exports, ["getMultiplex","getMultiplexOutput"], () => require("./getMultiplex"));

export { GetMultiplexprogramArgs, GetMultiplexprogramResult, GetMultiplexprogramOutputArgs } from "./getMultiplexprogram";
export const getMultiplexprogram: typeof import("./getMultiplexprogram").getMultiplexprogram = null as any;
export const getMultiplexprogramOutput: typeof import("./getMultiplexprogram").getMultiplexprogramOutput = null as any;
utilities.lazyLoad(exports, ["getMultiplexprogram","getMultiplexprogramOutput"], () => require("./getMultiplexprogram"));

export { InputArgs } from "./input";
export type Input = import("./input").Input;
export const Input: typeof import("./input").Input = null as any;
utilities.lazyLoad(exports, ["Input"], () => require("./input"));

export { InputSecurityGroupArgs } from "./inputSecurityGroup";
export type InputSecurityGroup = import("./inputSecurityGroup").InputSecurityGroup;
export const InputSecurityGroup: typeof import("./inputSecurityGroup").InputSecurityGroup = null as any;
utilities.lazyLoad(exports, ["InputSecurityGroup"], () => require("./inputSecurityGroup"));

export { MultiplexArgs } from "./multiplex";
export type Multiplex = import("./multiplex").Multiplex;
export const Multiplex: typeof import("./multiplex").Multiplex = null as any;
utilities.lazyLoad(exports, ["Multiplex"], () => require("./multiplex"));

export { MultiplexprogramArgs } from "./multiplexprogram";
export type Multiplexprogram = import("./multiplexprogram").Multiplexprogram;
export const Multiplexprogram: typeof import("./multiplexprogram").Multiplexprogram = null as any;
utilities.lazyLoad(exports, ["Multiplexprogram"], () => require("./multiplexprogram"));


// Export enums:
export * from "../types/enums/medialive";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aws-native:medialive:Channel":
                return new Channel(name, <any>undefined, { urn })
            case "aws-native:medialive:Input":
                return new Input(name, <any>undefined, { urn })
            case "aws-native:medialive:InputSecurityGroup":
                return new InputSecurityGroup(name, <any>undefined, { urn })
            case "aws-native:medialive:Multiplex":
                return new Multiplex(name, <any>undefined, { urn })
            case "aws-native:medialive:Multiplexprogram":
                return new Multiplexprogram(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "medialive", _module)
