// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::MediaLive::EventBridgeRuleTemplate Resource Type
 */
export class EventBridgeRuleTemplate extends pulumi.CustomResource {
    /**
     * Get an existing EventBridgeRuleTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EventBridgeRuleTemplate {
        return new EventBridgeRuleTemplate(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:medialive:EventBridgeRuleTemplate';

    /**
     * Returns true if the given object is an instance of EventBridgeRuleTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EventBridgeRuleTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EventBridgeRuleTemplate.__pulumiType;
    }

    /**
     * An eventbridge rule template's ARN (Amazon Resource Name)
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * An eventbridge rule template's id. AWS provided templates have ids that start with `aws-`
     */
    public /*out*/ readonly awsId!: pulumi.Output<string>;
    /**
     * Placeholder documentation for __timestampIso8601
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A resource's optional description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
     */
    public readonly eventTargets!: pulumi.Output<outputs.medialive.EventBridgeRuleTemplateTarget[] | undefined>;
    /**
     * The type of event to match with the rule.
     */
    public readonly eventType!: pulumi.Output<enums.medialive.EventBridgeRuleTemplateEventType>;
    /**
     * An eventbridge rule template group's id. AWS provided template groups have ids that start with `aws-`
     */
    public /*out*/ readonly groupId!: pulumi.Output<string>;
    /**
     * An eventbridge rule template group's identifier. Can be either be its id or current name.
     */
    public readonly groupIdentifier!: pulumi.Output<string | undefined>;
    /**
     * Placeholder documentation for __string
     */
    public /*out*/ readonly identifier!: pulumi.Output<string>;
    /**
     * Placeholder documentation for __timestampIso8601
     */
    public /*out*/ readonly modifiedAt!: pulumi.Output<string>;
    /**
     * A resource's name. Names must be unique within the scope of a resource type in a specific region.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a EventBridgeRuleTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EventBridgeRuleTemplateArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.eventType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventType'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["eventTargets"] = args ? args.eventTargets : undefined;
            resourceInputs["eventType"] = args ? args.eventType : undefined;
            resourceInputs["groupIdentifier"] = args ? args.groupIdentifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["groupId"] = undefined /*out*/;
            resourceInputs["identifier"] = undefined /*out*/;
            resourceInputs["modifiedAt"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["eventTargets"] = undefined /*out*/;
            resourceInputs["eventType"] = undefined /*out*/;
            resourceInputs["groupId"] = undefined /*out*/;
            resourceInputs["groupIdentifier"] = undefined /*out*/;
            resourceInputs["identifier"] = undefined /*out*/;
            resourceInputs["modifiedAt"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["tags.*"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(EventBridgeRuleTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EventBridgeRuleTemplate resource.
 */
export interface EventBridgeRuleTemplateArgs {
    /**
     * A resource's optional description.
     */
    description?: pulumi.Input<string>;
    /**
     * Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
     */
    eventTargets?: pulumi.Input<pulumi.Input<inputs.medialive.EventBridgeRuleTemplateTargetArgs>[]>;
    /**
     * The type of event to match with the rule.
     */
    eventType: pulumi.Input<enums.medialive.EventBridgeRuleTemplateEventType>;
    /**
     * An eventbridge rule template group's identifier. Can be either be its id or current name.
     */
    groupIdentifier?: pulumi.Input<string>;
    /**
     * A resource's name. Names must be unique within the scope of a resource type in a specific region.
     */
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
