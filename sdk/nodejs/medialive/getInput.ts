// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::MediaLive::Input
 */
export function getInput(args: GetInputArgs, opts?: pulumi.InvokeOptions): Promise<GetInputResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws-native:medialive:getInput", {
        "id": args.id,
    }, opts);
}

export interface GetInputArgs {
    id: string;
}

export interface GetInputResult {
    readonly arn?: string;
    readonly destinations?: outputs.medialive.InputDestinationRequest[];
    readonly id?: string;
    readonly inputDevices?: outputs.medialive.InputDeviceSettings[];
    readonly inputSecurityGroups?: string[];
    readonly mediaConnectFlows?: outputs.medialive.InputMediaConnectFlowRequest[];
    readonly name?: string;
    readonly roleArn?: string;
    readonly sources?: outputs.medialive.InputSourceRequest[];
    readonly tags?: any;
}

export function getInputOutput(args: GetInputOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInputResult> {
    return pulumi.output(args).apply(a => getInput(a, opts))
}

export interface GetInputOutputArgs {
    id: pulumi.Input<string>;
}
