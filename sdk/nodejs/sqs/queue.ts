// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::SQS::Queue
 *
 * @deprecated Queue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export class Queue extends pulumi.CustomResource {
    /**
     * Get an existing Queue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Queue {
        pulumi.log.warn("Queue is deprecated: Queue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        return new Queue(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:sqs:Queue';

    /**
     * Returns true if the given object is an instance of Queue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Queue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Queue.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly contentBasedDeduplication!: pulumi.Output<boolean | undefined>;
    public readonly deduplicationScope!: pulumi.Output<string | undefined>;
    public readonly delaySeconds!: pulumi.Output<number | undefined>;
    public readonly fifoQueue!: pulumi.Output<boolean | undefined>;
    public readonly fifoThroughputLimit!: pulumi.Output<string | undefined>;
    public readonly kmsDataKeyReusePeriodSeconds!: pulumi.Output<number | undefined>;
    public readonly kmsMasterKeyId!: pulumi.Output<string | undefined>;
    public readonly maximumMessageSize!: pulumi.Output<number | undefined>;
    public readonly messageRetentionPeriod!: pulumi.Output<number | undefined>;
    public readonly queueName!: pulumi.Output<string | undefined>;
    public readonly receiveMessageWaitTimeSeconds!: pulumi.Output<number | undefined>;
    public readonly redriveAllowPolicy!: pulumi.Output<any | undefined>;
    public readonly redrivePolicy!: pulumi.Output<any | undefined>;
    public readonly tags!: pulumi.Output<outputs.sqs.QueueTag[] | undefined>;
    public readonly visibilityTimeout!: pulumi.Output<number | undefined>;

    /**
     * Create a Queue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Queue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: QueueArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Queue is deprecated: Queue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["contentBasedDeduplication"] = args ? args.contentBasedDeduplication : undefined;
            resourceInputs["deduplicationScope"] = args ? args.deduplicationScope : undefined;
            resourceInputs["delaySeconds"] = args ? args.delaySeconds : undefined;
            resourceInputs["fifoQueue"] = args ? args.fifoQueue : undefined;
            resourceInputs["fifoThroughputLimit"] = args ? args.fifoThroughputLimit : undefined;
            resourceInputs["kmsDataKeyReusePeriodSeconds"] = args ? args.kmsDataKeyReusePeriodSeconds : undefined;
            resourceInputs["kmsMasterKeyId"] = args ? args.kmsMasterKeyId : undefined;
            resourceInputs["maximumMessageSize"] = args ? args.maximumMessageSize : undefined;
            resourceInputs["messageRetentionPeriod"] = args ? args.messageRetentionPeriod : undefined;
            resourceInputs["queueName"] = args ? args.queueName : undefined;
            resourceInputs["receiveMessageWaitTimeSeconds"] = args ? args.receiveMessageWaitTimeSeconds : undefined;
            resourceInputs["redriveAllowPolicy"] = args ? args.redriveAllowPolicy : undefined;
            resourceInputs["redrivePolicy"] = args ? args.redrivePolicy : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["visibilityTimeout"] = args ? args.visibilityTimeout : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["contentBasedDeduplication"] = undefined /*out*/;
            resourceInputs["deduplicationScope"] = undefined /*out*/;
            resourceInputs["delaySeconds"] = undefined /*out*/;
            resourceInputs["fifoQueue"] = undefined /*out*/;
            resourceInputs["fifoThroughputLimit"] = undefined /*out*/;
            resourceInputs["kmsDataKeyReusePeriodSeconds"] = undefined /*out*/;
            resourceInputs["kmsMasterKeyId"] = undefined /*out*/;
            resourceInputs["maximumMessageSize"] = undefined /*out*/;
            resourceInputs["messageRetentionPeriod"] = undefined /*out*/;
            resourceInputs["queueName"] = undefined /*out*/;
            resourceInputs["receiveMessageWaitTimeSeconds"] = undefined /*out*/;
            resourceInputs["redriveAllowPolicy"] = undefined /*out*/;
            resourceInputs["redrivePolicy"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["visibilityTimeout"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Queue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Queue resource.
 */
export interface QueueArgs {
    contentBasedDeduplication?: pulumi.Input<boolean>;
    deduplicationScope?: pulumi.Input<string>;
    delaySeconds?: pulumi.Input<number>;
    fifoQueue?: pulumi.Input<boolean>;
    fifoThroughputLimit?: pulumi.Input<string>;
    kmsDataKeyReusePeriodSeconds?: pulumi.Input<number>;
    kmsMasterKeyId?: pulumi.Input<string>;
    maximumMessageSize?: pulumi.Input<number>;
    messageRetentionPeriod?: pulumi.Input<number>;
    queueName?: pulumi.Input<string>;
    receiveMessageWaitTimeSeconds?: pulumi.Input<number>;
    redriveAllowPolicy?: any;
    redrivePolicy?: any;
    tags?: pulumi.Input<pulumi.Input<inputs.sqs.QueueTagArgs>[]>;
    visibilityTimeout?: pulumi.Input<number>;
}
