// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Schema describing various properties for AWS Proton Environment Account Connections resources.
 */
export function getEnvironmentAccountConnection(args: GetEnvironmentAccountConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentAccountConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:proton:getEnvironmentAccountConnection", {
        "arn": args.arn,
    }, opts);
}

export interface GetEnvironmentAccountConnectionArgs {
    /**
     * The Amazon Resource Name (ARN) of the environment account connection.
     */
    arn: string;
}

export interface GetEnvironmentAccountConnectionResult {
    /**
     * The Amazon Resource Name (ARN) of the environment account connection.
     */
    readonly arn?: string;
    /**
     * The Amazon Resource Name (ARN) of an IAM service role in the environment account. AWS Proton uses this role to provision infrastructure resources using CodeBuild-based provisioning in the associated environment account.
     */
    readonly codebuildRoleArn?: string;
    /**
     * The Amazon Resource Name (ARN) of the IAM service role that AWS Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.
     */
    readonly componentRoleArn?: string;
    /**
     * The environment account that's connected to the environment account connection.
     */
    readonly environmentAccountId?: string;
    /**
     * The name of the AWS Proton environment that's created in the associated management account.
     */
    readonly environmentName?: string;
    /**
     * The ID of the environment account connection.
     */
    readonly id?: string;
    /**
     * The ID of the management account that accepts or rejects the environment account connection. You create an manage the AWS Proton environment in this account. If the management account accepts the environment account connection, AWS Proton can use the associated IAM role to provision environment infrastructure resources in the associated environment account.
     */
    readonly managementAccountId?: string;
    /**
     * The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. AWS Proton uses this role to provision infrastructure resources in the associated environment account.
     */
    readonly roleArn?: string;
    /**
     * The status of the environment account connection.
     */
    readonly status?: enums.proton.EnvironmentAccountConnectionStatus;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton environment account connection. A tag is a key-value pair.</p>
     *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     *         <i>Proton User Guide</i>.</p>
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Schema describing various properties for AWS Proton Environment Account Connections resources.
 */
export function getEnvironmentAccountConnectionOutput(args: GetEnvironmentAccountConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvironmentAccountConnectionResult> {
    return pulumi.output(args).apply((a: any) => getEnvironmentAccountConnection(a, opts))
}

export interface GetEnvironmentAccountConnectionOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the environment account connection.
     */
    arn: pulumi.Input<string>;
}
