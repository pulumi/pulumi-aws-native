// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Definition of AWS::Proton::EnvironmentTemplate Resource Type
 */
export class EnvironmentTemplate extends pulumi.CustomResource {
    /**
     * Get an existing EnvironmentTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EnvironmentTemplate {
        return new EnvironmentTemplate(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:proton:EnvironmentTemplate';

    /**
     * Returns true if the given object is an instance of EnvironmentTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnvironmentTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnvironmentTemplate.__pulumiType;
    }

    /**
     * <p>The Amazon Resource Name (ARN) of the environment template.</p>
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * <p>A description of the environment template.</p>
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * <p>The environment template name as displayed in the developer interface.</p>
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * <p>A customer provided encryption key that Proton uses to encrypt data.</p>
     */
    public readonly encryptionKey!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string | undefined>;
    public readonly provisioning!: pulumi.Output<enums.proton.EnvironmentTemplateProvisioning | undefined>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p>
     *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     *         <i>Proton User Guide</i>.</p>
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a EnvironmentTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EnvironmentTemplateArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["encryptionKey"] = args ? args.encryptionKey : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["provisioning"] = args ? args.provisioning : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["encryptionKey"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioning"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["encryptionKey", "name", "provisioning"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(EnvironmentTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a EnvironmentTemplate resource.
 */
export interface EnvironmentTemplateArgs {
    /**
     * <p>A description of the environment template.</p>
     */
    description?: pulumi.Input<string>;
    /**
     * <p>The environment template name as displayed in the developer interface.</p>
     */
    displayName?: pulumi.Input<string>;
    /**
     * <p>A customer provided encryption key that Proton uses to encrypt data.</p>
     */
    encryptionKey?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    provisioning?: pulumi.Input<enums.proton.EnvironmentTemplateProvisioning>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p>
     *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     *         <i>Proton User Guide</i>.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
