// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * The AWS::S3Express::AccessPoint resource is an Amazon S3 resource type that you can use to access buckets.
 */
export class AccessPoint extends pulumi.CustomResource {
    /**
     * Get an existing AccessPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AccessPoint {
        return new AccessPoint(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:s3express:AccessPoint';

    /**
     * Returns true if the given object is an instance of AccessPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessPoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessPoint.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the specified accesspoint.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name of the bucket that you want to associate this Access Point with.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * The AWS account ID associated with the S3 bucket associated with this access point.
     */
    public readonly bucketAccountId!: pulumi.Output<string | undefined>;
    /**
     * The name you want to assign to this Access Point. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the access point name. For directory buckets, the access point name must consist of a base name that you provide and suﬃx that includes the ZoneID (AWS Availability Zone or Local Zone) of your bucket location, followed by --xa-s3.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise, NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and bucket access policies.
     */
    public /*out*/ readonly networkOrigin!: pulumi.Output<enums.s3express.AccessPointNetworkOrigin>;
    /**
     * The Access Point Policy you want to apply to this access point.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::S3Express::AccessPoint` for more information about the expected schema for this property.
     */
    public readonly policy!: pulumi.Output<any | undefined>;
    /**
     * The PublicAccessBlock configuration that you want to apply to this Access Point.
     */
    public readonly publicAccessBlockConfiguration!: pulumi.Output<outputs.s3express.AccessPointPublicAccessBlockConfiguration | undefined>;
    /**
     * For directory buckets, you can ﬁlter access control to speciﬁc preﬁxes, API operations, or a combination of both.
     */
    public readonly scope!: pulumi.Output<outputs.s3express.AccessPointScope | undefined>;
    /**
     * An array of tags that you can apply to access points. Tags are key-value pairs of metadata used to categorize your access points and control access. For more information, see [Using tags for attribute-based access control (ABAC)](https://docs.aws.amazon.com/AmazonS3/latest/userguide/tagging.html#using-tags-for-abac) .
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * If you include this field, Amazon S3 restricts access to this Access Point to requests from the specified Virtual Private Cloud (VPC).
     */
    public readonly vpcConfiguration!: pulumi.Output<outputs.s3express.AccessPointVpcConfiguration | undefined>;

    /**
     * Create a AccessPoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessPointArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.bucket === undefined && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            resourceInputs["bucket"] = args?.bucket;
            resourceInputs["bucketAccountId"] = args?.bucketAccountId;
            resourceInputs["name"] = args?.name;
            resourceInputs["policy"] = args?.policy;
            resourceInputs["publicAccessBlockConfiguration"] = args?.publicAccessBlockConfiguration;
            resourceInputs["scope"] = args?.scope;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcConfiguration"] = args?.vpcConfiguration;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["networkOrigin"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["bucket"] = undefined /*out*/;
            resourceInputs["bucketAccountId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkOrigin"] = undefined /*out*/;
            resourceInputs["policy"] = undefined /*out*/;
            resourceInputs["publicAccessBlockConfiguration"] = undefined /*out*/;
            resourceInputs["scope"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpcConfiguration"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["bucket", "bucketAccountId", "name", "vpcConfiguration"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AccessPoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AccessPoint resource.
 */
export interface AccessPointArgs {
    /**
     * The name of the bucket that you want to associate this Access Point with.
     */
    bucket: pulumi.Input<string>;
    /**
     * The AWS account ID associated with the S3 bucket associated with this access point.
     */
    bucketAccountId?: pulumi.Input<string>;
    /**
     * The name you want to assign to this Access Point. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the access point name. For directory buckets, the access point name must consist of a base name that you provide and suﬃx that includes the ZoneID (AWS Availability Zone or Local Zone) of your bucket location, followed by --xa-s3.
     */
    name?: pulumi.Input<string>;
    /**
     * The Access Point Policy you want to apply to this access point.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::S3Express::AccessPoint` for more information about the expected schema for this property.
     */
    policy?: any;
    /**
     * The PublicAccessBlock configuration that you want to apply to this Access Point.
     */
    publicAccessBlockConfiguration?: pulumi.Input<inputs.s3express.AccessPointPublicAccessBlockConfigurationArgs>;
    /**
     * For directory buckets, you can ﬁlter access control to speciﬁc preﬁxes, API operations, or a combination of both.
     */
    scope?: pulumi.Input<inputs.s3express.AccessPointScopeArgs>;
    /**
     * An array of tags that you can apply to access points. Tags are key-value pairs of metadata used to categorize your access points and control access. For more information, see [Using tags for attribute-based access control (ABAC)](https://docs.aws.amazon.com/AmazonS3/latest/userguide/tagging.html#using-tags-for-abac) .
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * If you include this field, Amazon S3 restricts access to this Access Point to requests from the specified Virtual Private Cloud (VPC).
     */
    vpcConfiguration?: pulumi.Input<inputs.s3express.AccessPointVpcConfigurationArgs>;
}
