// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::S3Express::DirectoryBucket.
 */
export class DirectoryBucket extends pulumi.CustomResource {
    /**
     * Get an existing DirectoryBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DirectoryBucket {
        return new DirectoryBucket(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws-native:s3express:DirectoryBucket';

    /**
     * Returns true if the given object is an instance of DirectoryBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DirectoryBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DirectoryBucket.__pulumiType;
    }

    /**
     * Returns the Amazon Resource Name (ARN) of the specified bucket.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Returns the code for the Availability Zone or Local Zone where the directory bucket was created. An example for the code of an Availability Zone is 'us-east-1f'.
     */
    public /*out*/ readonly availabilityZoneName!: pulumi.Output<string>;
    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS). For information about default encryption for directory buckets, see [Setting and monitoring default encryption for directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-bucket-encryption.html) in the *Amazon S3 User Guide* .
     */
    public readonly bucketEncryption!: pulumi.Output<outputs.s3express.DirectoryBucketBucketEncryption | undefined>;
    /**
     * Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone or Local Zone. The bucket name must also follow the format 'bucket_base_name--zone_id--x-s3'. The zone_id can be the ID of an Availability Zone or a Local Zone. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
     */
    public readonly bucketName!: pulumi.Output<string | undefined>;
    /**
     * Specifies the number of Availability Zone or Local Zone that's used for redundancy for the bucket.
     */
    public readonly dataRedundancy!: pulumi.Output<enums.s3express.DirectoryBucketDataRedundancy>;
    /**
     * Lifecycle rules that define how Amazon S3 Express manages objects during their lifetime.
     */
    public readonly lifecycleConfiguration!: pulumi.Output<outputs.s3express.DirectoryBucketLifecycleConfiguration | undefined>;
    /**
     * Specifies the Zone ID of the Availability Zone or Local Zone where the directory bucket will be created. An example Availability Zone ID value is 'use1-az5'.
     */
    public readonly locationName!: pulumi.Output<string>;
    /**
     * An array of tags that you can apply to the S3 directory bucket. Tags are key-value pairs of metadata used to categorize and organize your buckets, track costs, and control access. For more information, see [Using tags with directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-tagging.html) .
     */
    public readonly tags!: pulumi.Output<outputs.Tag[] | undefined>;

    /**
     * Create a DirectoryBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DirectoryBucketArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.dataRedundancy === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataRedundancy'");
            }
            if (args?.locationName === undefined && !opts.urn) {
                throw new Error("Missing required property 'locationName'");
            }
            resourceInputs["bucketEncryption"] = args?.bucketEncryption;
            resourceInputs["bucketName"] = args?.bucketName;
            resourceInputs["dataRedundancy"] = args?.dataRedundancy;
            resourceInputs["lifecycleConfiguration"] = args?.lifecycleConfiguration;
            resourceInputs["locationName"] = args?.locationName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["availabilityZoneName"] = undefined /*out*/;
        } else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["availabilityZoneName"] = undefined /*out*/;
            resourceInputs["bucketEncryption"] = undefined /*out*/;
            resourceInputs["bucketName"] = undefined /*out*/;
            resourceInputs["dataRedundancy"] = undefined /*out*/;
            resourceInputs["lifecycleConfiguration"] = undefined /*out*/;
            resourceInputs["locationName"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["bucketName", "dataRedundancy", "locationName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DirectoryBucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DirectoryBucket resource.
 */
export interface DirectoryBucketArgs {
    /**
     * Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS). For information about default encryption for directory buckets, see [Setting and monitoring default encryption for directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-bucket-encryption.html) in the *Amazon S3 User Guide* .
     */
    bucketEncryption?: pulumi.Input<inputs.s3express.DirectoryBucketBucketEncryptionArgs>;
    /**
     * Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone or Local Zone. The bucket name must also follow the format 'bucket_base_name--zone_id--x-s3'. The zone_id can be the ID of an Availability Zone or a Local Zone. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Specifies the number of Availability Zone or Local Zone that's used for redundancy for the bucket.
     */
    dataRedundancy: pulumi.Input<enums.s3express.DirectoryBucketDataRedundancy>;
    /**
     * Lifecycle rules that define how Amazon S3 Express manages objects during their lifetime.
     */
    lifecycleConfiguration?: pulumi.Input<inputs.s3express.DirectoryBucketLifecycleConfigurationArgs>;
    /**
     * Specifies the Zone ID of the Availability Zone or Local Zone where the directory bucket will be created. An example Availability Zone ID value is 'use1-az5'.
     */
    locationName: pulumi.Input<string>;
    /**
     * An array of tags that you can apply to the S3 directory bucket. Tags are key-value pairs of metadata used to categorize and organize your buckets, track costs, and control access. For more information, see [Using tags with directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-tagging.html) .
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
