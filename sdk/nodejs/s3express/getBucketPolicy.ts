// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource Type definition for AWS::S3Express::BucketPolicy.
 */
export function getBucketPolicy(args: GetBucketPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:s3express:getBucketPolicy", {
        "bucket": args.bucket,
    }, opts);
}

export interface GetBucketPolicyArgs {
    /**
     * The name of the S3 directory bucket to which the policy applies.
     */
    bucket: string;
}

export interface GetBucketPolicyResult {
    /**
     * A policy document containing permissions to add to the specified bucket. In IAM, you must provide policy documents in JSON format. However, in CloudFormation you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::S3Express::BucketPolicy` for more information about the expected schema for this property.
     */
    readonly policyDocument?: any;
}
/**
 * Resource Type definition for AWS::S3Express::BucketPolicy.
 */
export function getBucketPolicyOutput(args: GetBucketPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBucketPolicyResult> {
    return pulumi.output(args).apply((a: any) => getBucketPolicy(a, opts))
}

export interface GetBucketPolicyOutputArgs {
    /**
     * The name of the S3 directory bucket to which the policy applies.
     */
    bucket: pulumi.Input<string>;
}
