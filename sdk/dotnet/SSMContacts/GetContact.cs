// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SSMContacts
{
    public static class GetContact
    {
        /// <summary>
        /// Resource Type definition for AWS::SSMContacts::Contact
        /// </summary>
        public static Task<GetContactResult> InvokeAsync(GetContactArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetContactResult>("aws-native:ssmcontacts:getContact", args ?? new GetContactArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SSMContacts::Contact
        /// </summary>
        public static Output<GetContactResult> Invoke(GetContactInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetContactResult>("aws-native:ssmcontacts:getContact", args ?? new GetContactInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContactArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the contact.
        /// </summary>
        [Input("arn")]
        public string? Arn { get; set; }

        public GetContactArgs()
        {
        }
    }

    public sealed class GetContactInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the contact.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        public GetContactInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetContactResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the contact.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Name of the contact. String value with 3 to 256 characters. Only alphabetical, space, numeric characters, dash, or underscore allowed.
        /// </summary>
        public readonly string? DisplayName;

        [OutputConstructor]
        private GetContactResult(
            string? arn,

            string? displayName)
        {
            Arn = arn;
            DisplayName = displayName;
        }
    }
}
