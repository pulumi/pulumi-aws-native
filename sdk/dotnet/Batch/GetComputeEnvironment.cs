// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Batch
{
    public static class GetComputeEnvironment
    {
        /// <summary>
        /// Resource Type definition for AWS::Batch::ComputeEnvironment
        /// </summary>
        public static Task<GetComputeEnvironmentResult> InvokeAsync(GetComputeEnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeEnvironmentResult>("aws-native:batch:getComputeEnvironment", args ?? new GetComputeEnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Batch::ComputeEnvironment
        /// </summary>
        public static Output<GetComputeEnvironmentResult> Invoke(GetComputeEnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeEnvironmentResult>("aws-native:batch:getComputeEnvironment", args ?? new GetComputeEnvironmentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Batch::ComputeEnvironment
        /// </summary>
        public static Output<GetComputeEnvironmentResult> Invoke(GetComputeEnvironmentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeEnvironmentResult>("aws-native:batch:getComputeEnvironment", args ?? new GetComputeEnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeEnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns the compute environment ARN, such as `batch: *us-east-1* : *111122223333* :compute-environment/ *ComputeEnvironmentName*` .
        /// </summary>
        [Input("computeEnvironmentArn", required: true)]
        public string ComputeEnvironmentArn { get; set; } = null!;

        public GetComputeEnvironmentArgs()
        {
        }
        public static new GetComputeEnvironmentArgs Empty => new GetComputeEnvironmentArgs();
    }

    public sealed class GetComputeEnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns the compute environment ARN, such as `batch: *us-east-1* : *111122223333* :compute-environment/ *ComputeEnvironmentName*` .
        /// </summary>
        [Input("computeEnvironmentArn", required: true)]
        public Input<string> ComputeEnvironmentArn { get; set; } = null!;

        public GetComputeEnvironmentInvokeArgs()
        {
        }
        public static new GetComputeEnvironmentInvokeArgs Empty => new GetComputeEnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeEnvironmentResult
    {
        /// <summary>
        /// Returns the compute environment ARN, such as `batch: *us-east-1* : *111122223333* :compute-environment/ *ComputeEnvironmentName*` .
        /// </summary>
        public readonly string? ComputeEnvironmentArn;
        /// <summary>
        /// The ComputeResources property type specifies details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. For more information, see [Compute Environments](https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html) in the ** .
        /// </summary>
        public readonly Outputs.ComputeEnvironmentComputeResources? ComputeResources;
        /// <summary>
        /// Reserved.
        /// </summary>
        public readonly string? Context;
        /// <summary>
        /// The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf. For more information, see [AWS Batch service IAM role](https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html) in the *AWS Batch User Guide* .
        /// 
        /// &gt; If your account already created the AWS Batch service-linked role, that role is used by default for your compute environment unless you specify a different role here. If the AWS Batch service-linked role doesn't exist in your account, and no role is specified here, the service attempts to create the AWS Batch service-linked role in your account. 
        /// 
        /// If your specified role has a path other than `/` , then you must specify either the full role ARN (recommended) or prefix the role name with the path. For example, if a role with the name `bar` has a path of `/foo/` , specify `/foo/bar` as the role name. For more information, see [Friendly names and paths](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) in the *IAM User Guide* .
        /// 
        /// &gt; Depending on how you created your AWS Batch service role, its ARN might contain the `service-role` path prefix. When you only specify the name of the service role, AWS Batch assumes that your ARN doesn't use the `service-role` path prefix. Because of this, we recommend that you specify the full ARN of your service role when you create compute environments.
        /// </summary>
        public readonly string? ServiceRole;
        /// <summary>
        /// The state of the compute environment. If the state is `ENABLED` , then the compute environment accepts jobs from a queue and can scale out automatically based on queues.
        /// 
        /// If the state is `ENABLED` , then the AWS Batch scheduler can attempt to place jobs from an associated job queue on the compute resources within the environment. If the compute environment is managed, then it can scale its instances out or in automatically, based on the job queue demand.
        /// 
        /// If the state is `DISABLED` , then the AWS Batch scheduler doesn't attempt to place jobs within the environment. Jobs in a `STARTING` or `RUNNING` state continue to progress normally. Managed compute environments in the `DISABLED` state don't scale out.
        /// 
        /// &gt; Compute environments in a `DISABLED` state may continue to incur billing charges. To prevent additional charges, turn off and then delete the compute environment. For more information, see [State](https://docs.aws.amazon.com/batch/latest/userguide/compute_environment_parameters.html#compute_environment_state) in the *AWS Batch User Guide* . 
        /// 
        /// When an instance is idle, the instance scales down to the `minvCpus` value. However, the instance size doesn't change. For example, consider a `c5.8xlarge` instance with a `minvCpus` value of `4` and a `desiredvCpus` value of `36` . This instance doesn't scale down to a `c5.large` instance.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The maximum number of vCPUs for an unmanaged compute environment. This parameter is only used for fair share scheduling to reserve vCPU capacity for new share identifiers. If this parameter isn't provided for a fair share job queue, no vCPU capacity is reserved.
        /// 
        /// &gt; This parameter is only supported when the `type` parameter is set to `UNMANAGED` .
        /// </summary>
        public readonly int? UnmanagedvCpus;

        [OutputConstructor]
        private GetComputeEnvironmentResult(
            string? computeEnvironmentArn,

            Outputs.ComputeEnvironmentComputeResources? computeResources,

            string? context,

            string? serviceRole,

            string? state,

            int? unmanagedvCpus)
        {
            ComputeEnvironmentArn = computeEnvironmentArn;
            ComputeResources = computeResources;
            Context = context;
            ServiceRole = serviceRole;
            State = state;
            UnmanagedvCpus = unmanagedvCpus;
        }
    }
}
