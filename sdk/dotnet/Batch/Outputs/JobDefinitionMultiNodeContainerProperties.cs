// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Batch.Outputs
{

    [OutputType]
    public sealed class JobDefinitionMultiNodeContainerProperties
    {
        public readonly ImmutableArray<string> Command;
        public readonly ImmutableArray<Outputs.JobDefinitionEnvironment> Environment;
        public readonly Outputs.JobDefinitionEphemeralStorage? EphemeralStorage;
        public readonly string? ExecutionRoleArn;
        public readonly string Image;
        public readonly string? InstanceType;
        public readonly string? JobRoleArn;
        public readonly Outputs.JobDefinitionLinuxParameters? LinuxParameters;
        public readonly Outputs.JobDefinitionLogConfiguration? LogConfiguration;
        public readonly int? Memory;
        public readonly ImmutableArray<Outputs.JobDefinitionMountPoint> MountPoints;
        public readonly bool? Privileged;
        public readonly bool? ReadonlyRootFilesystem;
        public readonly Outputs.JobDefinitionRepositoryCredentials? RepositoryCredentials;
        public readonly ImmutableArray<Outputs.JobDefinitionResourceRequirement> ResourceRequirements;
        public readonly Outputs.JobDefinitionRuntimePlatform? RuntimePlatform;
        public readonly ImmutableArray<Outputs.JobDefinitionSecret> Secrets;
        public readonly ImmutableArray<Outputs.JobDefinitionUlimit> Ulimits;
        public readonly string? User;
        public readonly int? Vcpus;
        public readonly ImmutableArray<Outputs.JobDefinitionVolume> Volumes;

        [OutputConstructor]
        private JobDefinitionMultiNodeContainerProperties(
            ImmutableArray<string> command,

            ImmutableArray<Outputs.JobDefinitionEnvironment> environment,

            Outputs.JobDefinitionEphemeralStorage? ephemeralStorage,

            string? executionRoleArn,

            string image,

            string? instanceType,

            string? jobRoleArn,

            Outputs.JobDefinitionLinuxParameters? linuxParameters,

            Outputs.JobDefinitionLogConfiguration? logConfiguration,

            int? memory,

            ImmutableArray<Outputs.JobDefinitionMountPoint> mountPoints,

            bool? privileged,

            bool? readonlyRootFilesystem,

            Outputs.JobDefinitionRepositoryCredentials? repositoryCredentials,

            ImmutableArray<Outputs.JobDefinitionResourceRequirement> resourceRequirements,

            Outputs.JobDefinitionRuntimePlatform? runtimePlatform,

            ImmutableArray<Outputs.JobDefinitionSecret> secrets,

            ImmutableArray<Outputs.JobDefinitionUlimit> ulimits,

            string? user,

            int? vcpus,

            ImmutableArray<Outputs.JobDefinitionVolume> volumes)
        {
            Command = command;
            Environment = environment;
            EphemeralStorage = ephemeralStorage;
            ExecutionRoleArn = executionRoleArn;
            Image = image;
            InstanceType = instanceType;
            JobRoleArn = jobRoleArn;
            LinuxParameters = linuxParameters;
            LogConfiguration = logConfiguration;
            Memory = memory;
            MountPoints = mountPoints;
            Privileged = privileged;
            ReadonlyRootFilesystem = readonlyRootFilesystem;
            RepositoryCredentials = repositoryCredentials;
            ResourceRequirements = resourceRequirements;
            RuntimePlatform = runtimePlatform;
            Secrets = secrets;
            Ulimits = ulimits;
            User = user;
            Vcpus = vcpus;
            Volumes = volumes;
        }
    }
}
