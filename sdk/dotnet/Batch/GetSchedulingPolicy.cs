// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Batch
{
    public static class GetSchedulingPolicy
    {
        /// <summary>
        /// Resource Type schema for AWS::Batch::SchedulingPolicy
        /// </summary>
        public static Task<GetSchedulingPolicyResult> InvokeAsync(GetSchedulingPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSchedulingPolicyResult>("aws-native:batch:getSchedulingPolicy", args ?? new GetSchedulingPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type schema for AWS::Batch::SchedulingPolicy
        /// </summary>
        public static Output<GetSchedulingPolicyResult> Invoke(GetSchedulingPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSchedulingPolicyResult>("aws-native:batch:getSchedulingPolicy", args ?? new GetSchedulingPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSchedulingPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetSchedulingPolicyArgs()
        {
        }
        public static new GetSchedulingPolicyArgs Empty => new GetSchedulingPolicyArgs();
    }

    public sealed class GetSchedulingPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetSchedulingPolicyInvokeArgs()
        {
        }
        public static new GetSchedulingPolicyInvokeArgs Empty => new GetSchedulingPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSchedulingPolicyResult
    {
        public readonly string? Arn;
        public readonly Outputs.SchedulingPolicyFairsharePolicy? FairsharePolicy;

        [OutputConstructor]
        private GetSchedulingPolicyResult(
            string? arn,

            Outputs.SchedulingPolicyFairsharePolicy? fairsharePolicy)
        {
            Arn = arn;
            FairsharePolicy = fairsharePolicy;
        }
    }
}
