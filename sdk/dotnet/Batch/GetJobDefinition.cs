// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Batch
{
    public static class GetJobDefinition
    {
        /// <summary>
        /// Resource Type definition for AWS::Batch::JobDefinition
        /// </summary>
        public static Task<GetJobDefinitionResult> InvokeAsync(GetJobDefinitionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetJobDefinitionResult>("aws-native:batch:getJobDefinition", args ?? new GetJobDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Batch::JobDefinition
        /// </summary>
        public static Output<GetJobDefinitionResult> Invoke(GetJobDefinitionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetJobDefinitionResult>("aws-native:batch:getJobDefinition", args ?? new GetJobDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobDefinitionArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetJobDefinitionArgs()
        {
        }
    }

    public sealed class GetJobDefinitionInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetJobDefinitionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetJobDefinitionResult
    {
        public readonly Outputs.JobDefinitionContainerProperties? ContainerProperties;
        public readonly string? Id;
        public readonly Outputs.JobDefinitionNodeProperties? NodeProperties;
        public readonly object? Parameters;
        public readonly ImmutableArray<string> PlatformCapabilities;
        public readonly bool? PropagateTags;
        public readonly Outputs.JobDefinitionRetryStrategy? RetryStrategy;
        public readonly int? SchedulingPriority;
        public readonly Outputs.JobDefinitionTimeout? Timeout;
        public readonly string? Type;

        [OutputConstructor]
        private GetJobDefinitionResult(
            Outputs.JobDefinitionContainerProperties? containerProperties,

            string? id,

            Outputs.JobDefinitionNodeProperties? nodeProperties,

            object? parameters,

            ImmutableArray<string> platformCapabilities,

            bool? propagateTags,

            Outputs.JobDefinitionRetryStrategy? retryStrategy,

            int? schedulingPriority,

            Outputs.JobDefinitionTimeout? timeout,

            string? type)
        {
            ContainerProperties = containerProperties;
            Id = id;
            NodeProperties = nodeProperties;
            Parameters = parameters;
            PlatformCapabilities = platformCapabilities;
            PropagateTags = propagateTags;
            RetryStrategy = retryStrategy;
            SchedulingPriority = schedulingPriority;
            Timeout = timeout;
            Type = type;
        }
    }
}
