// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Batch.Inputs
{

    public sealed class JobDefinitionVolumesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This is used when you're using an Amazon Elastic File System file system for job storage. For more information, see [Amazon EFS Volumes](https://docs.aws.amazon.com/batch/latest/userguide/efs-volumes.html) in the *AWS Batch User Guide* .
        /// </summary>
        [Input("efsVolumeConfiguration")]
        public Input<Inputs.JobDefinitionEfsVolumeConfigurationArgs>? EfsVolumeConfiguration { get; set; }

        /// <summary>
        /// Determine whether your data volume persists on the host container instance and where it's stored. If this parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data isn't guaranteed to persist after the containers that are associated with it stop running.
        /// </summary>
        [Input("host")]
        public Input<Inputs.JobDefinitionVolumesHostArgs>? Host { get; set; }

        /// <summary>
        /// The name of the volume. It can be up to 255 characters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_). This name is referenced in the `sourceVolume` parameter of container definition `mountPoints` .
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public JobDefinitionVolumesArgs()
        {
        }
        public static new JobDefinitionVolumesArgs Empty => new JobDefinitionVolumesArgs();
    }
}
