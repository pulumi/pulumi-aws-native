// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Batch.Inputs
{

    public sealed class JobDefinitionRuntimePlatformArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The vCPU architecture. The default value is `X86_64` . Valid values are `X86_64` and `ARM64` .
        /// 
        /// &gt; This parameter must be set to `X86_64` for Windows containers. &gt; Fargate Spot is not supported for `ARM64` and Windows-based containers on Fargate. A job queue will be blocked if a Fargate `ARM64` or Windows job is submitted to a job queue with only Fargate Spot compute environments. However, you can attach both `FARGATE` and `FARGATE_SPOT` compute environments to the same job queue.
        /// </summary>
        [Input("cpuArchitecture")]
        public Input<string>? CpuArchitecture { get; set; }

        /// <summary>
        /// The operating system for the compute environment. Valid values are: `LINUX` (default), `WINDOWS_SERVER_2019_CORE` , `WINDOWS_SERVER_2019_FULL` , `WINDOWS_SERVER_2022_CORE` , and `WINDOWS_SERVER_2022_FULL` .
        /// 
        /// &gt; The following parameters canâ€™t be set for Windows containers: `linuxParameters` , `privileged` , `user` , `ulimits` , `readonlyRootFilesystem` , and `efsVolumeConfiguration` . &gt; The AWS Batch Scheduler checks the compute environments that are attached to the job queue before registering a task definition with Fargate. In this scenario, the job queue is where the job is submitted. If the job requires a Windows container and the first compute environment is `LINUX` , the compute environment is skipped and the next compute environment is checked until a Windows-based compute environment is found. &gt; Fargate Spot is not supported for `ARM64` and Windows-based containers on Fargate. A job queue will be blocked if a Fargate `ARM64` or Windows job is submitted to a job queue with only Fargate Spot compute environments. However, you can attach both `FARGATE` and `FARGATE_SPOT` compute environments to the same job queue.
        /// </summary>
        [Input("operatingSystemFamily")]
        public Input<string>? OperatingSystemFamily { get; set; }

        public JobDefinitionRuntimePlatformArgs()
        {
        }
        public static new JobDefinitionRuntimePlatformArgs Empty => new JobDefinitionRuntimePlatformArgs();
    }
}
