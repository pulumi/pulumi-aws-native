// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3.Outputs
{

    /// <summary>
    /// Specifies the details of Amazon S3 Storage Lens configuration.
    /// </summary>
    [OutputType]
    public sealed class StorageLensConfiguration
    {
        public readonly Outputs.StorageLensAccountLevel AccountLevel;
        public readonly Outputs.StorageLensAwsOrg? AwsOrg;
        public readonly Outputs.StorageLensDataExport? DataExport;
        public readonly Outputs.StorageLensBucketsAndRegions? Exclude;
        public readonly string Id;
        public readonly Outputs.StorageLensBucketsAndRegions? Include;
        /// <summary>
        /// Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.
        /// </summary>
        public readonly bool IsEnabled;
        /// <summary>
        /// The ARN for the Amazon S3 Storage Lens configuration.
        /// </summary>
        public readonly string? StorageLensArn;

        [OutputConstructor]
        private StorageLensConfiguration(
            Outputs.StorageLensAccountLevel accountLevel,

            Outputs.StorageLensAwsOrg? awsOrg,

            Outputs.StorageLensDataExport? dataExport,

            Outputs.StorageLensBucketsAndRegions? exclude,

            string id,

            Outputs.StorageLensBucketsAndRegions? include,

            bool isEnabled,

            string? storageLensArn)
        {
            AccountLevel = accountLevel;
            AwsOrg = awsOrg;
            DataExport = dataExport;
            Exclude = exclude;
            Id = id;
            Include = include;
            IsEnabled = isEnabled;
            StorageLensArn = storageLensArn;
        }
    }
}
