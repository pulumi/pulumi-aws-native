// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3.Outputs
{

    [OutputType]
    public sealed class BucketIntelligentTieringConfiguration
    {
        /// <summary>
        /// The ID used to identify the S3 Intelligent-Tiering configuration.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An object key name prefix that identifies the subset of objects to which the rule applies.
        /// </summary>
        public readonly string? Prefix;
        /// <summary>
        /// Specifies the status of the configuration.
        /// </summary>
        public readonly Pulumi.AwsNative.S3.BucketIntelligentTieringConfigurationStatus Status;
        /// <summary>
        /// A container for a key-value pair.
        /// </summary>
        public readonly ImmutableArray<Outputs.BucketTagFilter> TagFilters;
        /// <summary>
        /// Specifies a list of S3 Intelligent-Tiering storage class tiers in the configuration. At least one tier must be defined in the list. At most, you can specify two tiers in the list, one for each available AccessTier: ARCHIVE_ACCESS and DEEP_ARCHIVE_ACCESS.
        /// </summary>
        public readonly ImmutableArray<Outputs.BucketTiering> Tierings;

        [OutputConstructor]
        private BucketIntelligentTieringConfiguration(
            string id,

            string? prefix,

            Pulumi.AwsNative.S3.BucketIntelligentTieringConfigurationStatus status,

            ImmutableArray<Outputs.BucketTagFilter> tagFilters,

            ImmutableArray<Outputs.BucketTiering> tierings)
        {
            Id = id;
            Prefix = prefix;
            Status = status;
            TagFilters = tagFilters;
            Tierings = tierings;
        }
    }
}
