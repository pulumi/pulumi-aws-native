// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3
{
    /// <summary>
    /// Resource Type definition for AWS::S3::Bucket
    /// </summary>
    [AwsNativeResourceType("aws-native:s3:Bucket")]
    public partial class Bucket : Pulumi.CustomResource
    {
        [Output("accelerateConfiguration")]
        public Output<Outputs.BucketAccelerateConfiguration?> AccelerateConfiguration { get; private set; } = null!;

        [Output("accessControl")]
        public Output<string?> AccessControl { get; private set; } = null!;

        [Output("analyticsConfigurations")]
        public Output<ImmutableArray<Outputs.BucketAnalyticsConfiguration>> AnalyticsConfigurations { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("bucketEncryption")]
        public Output<Outputs.BucketEncryption?> BucketEncryption { get; private set; } = null!;

        [Output("bucketName")]
        public Output<string?> BucketName { get; private set; } = null!;

        [Output("corsConfiguration")]
        public Output<Outputs.BucketCorsConfiguration?> CorsConfiguration { get; private set; } = null!;

        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        [Output("dualStackDomainName")]
        public Output<string> DualStackDomainName { get; private set; } = null!;

        [Output("intelligentTieringConfigurations")]
        public Output<ImmutableArray<Outputs.BucketIntelligentTieringConfiguration>> IntelligentTieringConfigurations { get; private set; } = null!;

        [Output("inventoryConfigurations")]
        public Output<ImmutableArray<Outputs.BucketInventoryConfiguration>> InventoryConfigurations { get; private set; } = null!;

        [Output("lifecycleConfiguration")]
        public Output<Outputs.BucketLifecycleConfiguration?> LifecycleConfiguration { get; private set; } = null!;

        [Output("loggingConfiguration")]
        public Output<Outputs.BucketLoggingConfiguration?> LoggingConfiguration { get; private set; } = null!;

        [Output("metricsConfigurations")]
        public Output<ImmutableArray<Outputs.BucketMetricsConfiguration>> MetricsConfigurations { get; private set; } = null!;

        [Output("notificationConfiguration")]
        public Output<Outputs.BucketNotificationConfiguration?> NotificationConfiguration { get; private set; } = null!;

        [Output("objectLockConfiguration")]
        public Output<Outputs.BucketObjectLockConfiguration?> ObjectLockConfiguration { get; private set; } = null!;

        [Output("objectLockEnabled")]
        public Output<bool?> ObjectLockEnabled { get; private set; } = null!;

        [Output("ownershipControls")]
        public Output<Outputs.BucketOwnershipControls?> OwnershipControls { get; private set; } = null!;

        [Output("publicAccessBlockConfiguration")]
        public Output<Outputs.BucketPublicAccessBlockConfiguration?> PublicAccessBlockConfiguration { get; private set; } = null!;

        [Output("regionalDomainName")]
        public Output<string> RegionalDomainName { get; private set; } = null!;

        [Output("replicationConfiguration")]
        public Output<Outputs.BucketReplicationConfiguration?> ReplicationConfiguration { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.BucketTag>> Tags { get; private set; } = null!;

        [Output("versioningConfiguration")]
        public Output<Outputs.BucketVersioningConfiguration?> VersioningConfiguration { get; private set; } = null!;

        [Output("websiteConfiguration")]
        public Output<Outputs.BucketWebsiteConfiguration?> WebsiteConfiguration { get; private set; } = null!;

        [Output("websiteURL")]
        public Output<string> WebsiteURL { get; private set; } = null!;


        /// <summary>
        /// Create a Bucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Bucket(string name, BucketArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:s3:Bucket", name, args ?? new BucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Bucket(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:s3:Bucket", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Bucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Bucket Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Bucket(name, id, options);
        }
    }

    public sealed class BucketArgs : Pulumi.ResourceArgs
    {
        [Input("accelerateConfiguration")]
        public Input<Inputs.BucketAccelerateConfigurationArgs>? AccelerateConfiguration { get; set; }

        [Input("accessControl")]
        public Input<string>? AccessControl { get; set; }

        [Input("analyticsConfigurations")]
        private InputList<Inputs.BucketAnalyticsConfigurationArgs>? _analyticsConfigurations;
        public InputList<Inputs.BucketAnalyticsConfigurationArgs> AnalyticsConfigurations
        {
            get => _analyticsConfigurations ?? (_analyticsConfigurations = new InputList<Inputs.BucketAnalyticsConfigurationArgs>());
            set => _analyticsConfigurations = value;
        }

        [Input("bucketEncryption")]
        public Input<Inputs.BucketEncryptionArgs>? BucketEncryption { get; set; }

        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        [Input("corsConfiguration")]
        public Input<Inputs.BucketCorsConfigurationArgs>? CorsConfiguration { get; set; }

        [Input("intelligentTieringConfigurations")]
        private InputList<Inputs.BucketIntelligentTieringConfigurationArgs>? _intelligentTieringConfigurations;
        public InputList<Inputs.BucketIntelligentTieringConfigurationArgs> IntelligentTieringConfigurations
        {
            get => _intelligentTieringConfigurations ?? (_intelligentTieringConfigurations = new InputList<Inputs.BucketIntelligentTieringConfigurationArgs>());
            set => _intelligentTieringConfigurations = value;
        }

        [Input("inventoryConfigurations")]
        private InputList<Inputs.BucketInventoryConfigurationArgs>? _inventoryConfigurations;
        public InputList<Inputs.BucketInventoryConfigurationArgs> InventoryConfigurations
        {
            get => _inventoryConfigurations ?? (_inventoryConfigurations = new InputList<Inputs.BucketInventoryConfigurationArgs>());
            set => _inventoryConfigurations = value;
        }

        [Input("lifecycleConfiguration")]
        public Input<Inputs.BucketLifecycleConfigurationArgs>? LifecycleConfiguration { get; set; }

        [Input("loggingConfiguration")]
        public Input<Inputs.BucketLoggingConfigurationArgs>? LoggingConfiguration { get; set; }

        [Input("metricsConfigurations")]
        private InputList<Inputs.BucketMetricsConfigurationArgs>? _metricsConfigurations;
        public InputList<Inputs.BucketMetricsConfigurationArgs> MetricsConfigurations
        {
            get => _metricsConfigurations ?? (_metricsConfigurations = new InputList<Inputs.BucketMetricsConfigurationArgs>());
            set => _metricsConfigurations = value;
        }

        [Input("notificationConfiguration")]
        public Input<Inputs.BucketNotificationConfigurationArgs>? NotificationConfiguration { get; set; }

        [Input("objectLockConfiguration")]
        public Input<Inputs.BucketObjectLockConfigurationArgs>? ObjectLockConfiguration { get; set; }

        [Input("objectLockEnabled")]
        public Input<bool>? ObjectLockEnabled { get; set; }

        [Input("ownershipControls")]
        public Input<Inputs.BucketOwnershipControlsArgs>? OwnershipControls { get; set; }

        [Input("publicAccessBlockConfiguration")]
        public Input<Inputs.BucketPublicAccessBlockConfigurationArgs>? PublicAccessBlockConfiguration { get; set; }

        [Input("replicationConfiguration")]
        public Input<Inputs.BucketReplicationConfigurationArgs>? ReplicationConfiguration { get; set; }

        [Input("tags")]
        private InputList<Inputs.BucketTagArgs>? _tags;
        public InputList<Inputs.BucketTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.BucketTagArgs>());
            set => _tags = value;
        }

        [Input("versioningConfiguration")]
        public Input<Inputs.BucketVersioningConfigurationArgs>? VersioningConfiguration { get; set; }

        [Input("websiteConfiguration")]
        public Input<Inputs.BucketWebsiteConfigurationArgs>? WebsiteConfiguration { get; set; }

        public BucketArgs()
        {
        }
    }
}
