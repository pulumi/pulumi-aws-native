// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3.Inputs
{

    /// <summary>
    /// Describes the notification configuration for an Amazon S3 bucket.
    ///   If you create the target resource and related permissions in the same template, you might have a circular dependency.
    ///  For example, you might use the ``AWS::Lambda::Permission`` resource to grant the bucket permission to invoke an AWS Lambda function. However, AWS CloudFormation can't create the bucket until the bucket has permission to invoke the function (AWS CloudFormation checks whether the bucket can invoke the function). If you're using Refs to pass the bucket name, this leads to a circular dependency.
    ///  To avoid this dependency, you can create all resources without specifying the notification configuration. Then, update the stack with a notification configuration.
    ///  For more information on permissions, see [AWS::Lambda::Permission](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html) and [Granting Permissions to Publish Event Notification Messages to a Destination](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#grant-destinations-permissions-to-s3).
    /// </summary>
    public sealed class BucketNotificationConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables delivery of events to Amazon EventBridge.
        /// </summary>
        [Input("eventBridgeConfiguration")]
        public Input<Inputs.BucketEventBridgeConfigurationArgs>? EventBridgeConfiguration { get; set; }

        [Input("lambdaConfigurations")]
        private InputList<Inputs.BucketLambdaConfigurationArgs>? _lambdaConfigurations;

        /// <summary>
        /// Describes the LAMlong functions to invoke and the events for which to invoke them.
        /// </summary>
        public InputList<Inputs.BucketLambdaConfigurationArgs> LambdaConfigurations
        {
            get => _lambdaConfigurations ?? (_lambdaConfigurations = new InputList<Inputs.BucketLambdaConfigurationArgs>());
            set => _lambdaConfigurations = value;
        }

        [Input("queueConfigurations")]
        private InputList<Inputs.BucketQueueConfigurationArgs>? _queueConfigurations;

        /// <summary>
        /// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
        /// </summary>
        public InputList<Inputs.BucketQueueConfigurationArgs> QueueConfigurations
        {
            get => _queueConfigurations ?? (_queueConfigurations = new InputList<Inputs.BucketQueueConfigurationArgs>());
            set => _queueConfigurations = value;
        }

        [Input("topicConfigurations")]
        private InputList<Inputs.BucketTopicConfigurationArgs>? _topicConfigurations;

        /// <summary>
        /// The topic to which notifications are sent and the events for which notifications are generated.
        /// </summary>
        public InputList<Inputs.BucketTopicConfigurationArgs> TopicConfigurations
        {
            get => _topicConfigurations ?? (_topicConfigurations = new InputList<Inputs.BucketTopicConfigurationArgs>());
            set => _topicConfigurations = value;
        }

        public BucketNotificationConfigurationArgs()
        {
        }
        public static new BucketNotificationConfigurationArgs Empty => new BucketNotificationConfigurationArgs();
    }
}
