// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3.Inputs
{

    /// <summary>
    /// Specifies lifecycle rules for an Amazon S3 bucket. For more information, see [Put Bucket Lifecycle Configuration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html) in the *Amazon S3 API Reference*.
    ///  You must specify at least one of the following properties: ``AbortIncompleteMultipartUpload``, ``ExpirationDate``, ``ExpirationInDays``, ``NoncurrentVersionExpirationInDays``, ``NoncurrentVersionTransition``, ``NoncurrentVersionTransitions``, ``Transition``, or ``Transitions``.
    /// </summary>
    public sealed class BucketRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3 bucket.
        /// </summary>
        [Input("abortIncompleteMultipartUpload")]
        public Input<Inputs.BucketAbortIncompleteMultipartUploadArgs>? AbortIncompleteMultipartUpload { get; set; }

        /// <summary>
        /// Indicates when objects are deleted from Amazon S3 and Amazon S3 Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
        /// </summary>
        [Input("expirationDate")]
        public Input<string>? ExpirationDate { get; set; }

        /// <summary>
        /// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
        /// </summary>
        [Input("expirationInDays")]
        public Input<int>? ExpirationInDays { get; set; }

        /// <summary>
        /// Indicates whether Amazon S3 will remove a delete marker without any noncurrent versions. If set to true, the delete marker will be removed if there are no noncurrent versions. This cannot be specified with ``ExpirationInDays``, ``ExpirationDate``, or ``TagFilters``.
        /// </summary>
        [Input("expiredObjectDeleteMarker")]
        public Input<bool>? ExpiredObjectDeleteMarker { get; set; }

        /// <summary>
        /// Unique identifier for the rule. The value can't be longer than 255 characters.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime.
        /// </summary>
        [Input("noncurrentVersionExpiration")]
        public Input<Inputs.BucketNoncurrentVersionExpirationArgs>? NoncurrentVersionExpiration { get; set; }

        /// <summary>
        /// (Deprecated.) For buckets with versioning enabled (or suspended), specifies the time, in days, between when a new version of the object is uploaded to the bucket and when old versions of the object expire. When object versions expire, Amazon S3 permanently deletes them. If you specify a transition and expiration time, the expiration time must be later than the transition time.
        /// </summary>
        [Input("noncurrentVersionExpirationInDays")]
        public Input<int>? NoncurrentVersionExpirationInDays { get; set; }

        /// <summary>
        /// (Deprecated.) For buckets with versioning enabled (or suspended), specifies when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property.
        /// </summary>
        [Input("noncurrentVersionTransition")]
        public Input<Inputs.BucketNoncurrentVersionTransitionArgs>? NoncurrentVersionTransition { get; set; }

        [Input("noncurrentVersionTransitions")]
        private InputList<Inputs.BucketNoncurrentVersionTransitionArgs>? _noncurrentVersionTransitions;

        /// <summary>
        /// For buckets with versioning enabled (or suspended), one or more transition rules that specify when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransition`` property.
        /// </summary>
        public InputList<Inputs.BucketNoncurrentVersionTransitionArgs> NoncurrentVersionTransitions
        {
            get => _noncurrentVersionTransitions ?? (_noncurrentVersionTransitions = new InputList<Inputs.BucketNoncurrentVersionTransitionArgs>());
            set => _noncurrentVersionTransitions = value;
        }

        /// <summary>
        /// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
        /// </summary>
        [Input("objectSizeGreaterThan")]
        public Input<string>? ObjectSizeGreaterThan { get; set; }

        /// <summary>
        /// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
        /// </summary>
        [Input("objectSizeLessThan")]
        public Input<string>? ObjectSizeLessThan { get; set; }

        /// <summary>
        /// Object key prefix that identifies one or more objects to which this rule applies.
        ///   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// If ``Enabled``, the rule is currently being applied. If ``Disabled``, the rule is not currently being applied.
        /// </summary>
        [Input("status", required: true)]
        public Input<Pulumi.AwsNative.S3.BucketRuleStatus> Status { get; set; } = null!;

        [Input("tagFilters")]
        private InputList<Inputs.BucketTagFilterArgs>? _tagFilters;

        /// <summary>
        /// Tags to use to identify a subset of objects to which the lifecycle rule applies.
        /// </summary>
        public InputList<Inputs.BucketTagFilterArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<Inputs.BucketTagFilterArgs>());
            set => _tagFilters = value;
        }

        /// <summary>
        /// (Deprecated.) Specifies when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transitions`` property.
        /// </summary>
        [Input("transition")]
        public Input<Inputs.BucketTransitionArgs>? Transition { get; set; }

        [Input("transitions")]
        private InputList<Inputs.BucketTransitionArgs>? _transitions;

        /// <summary>
        /// One or more transition rules that specify when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transition`` property.
        /// </summary>
        public InputList<Inputs.BucketTransitionArgs> Transitions
        {
            get => _transitions ?? (_transitions = new InputList<Inputs.BucketTransitionArgs>());
            set => _transitions = value;
        }

        public BucketRuleArgs()
        {
        }
        public static new BucketRuleArgs Empty => new BucketRuleArgs();
    }
}
