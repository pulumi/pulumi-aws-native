// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3.Inputs
{

    /// <summary>
    /// Sets the Storage Lens Group filter.
    /// </summary>
    public sealed class StorageLensGroupFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This property contains the `And` logical operator, which allows multiple filter conditions to be joined for more complex comparisons of Storage Lens group data. Objects must match all of the listed filter conditions that are joined by the `And` logical operator. Only one of each filter condition is allowed.
        /// </summary>
        [Input("and")]
        public Input<Inputs.StorageLensGroupAndArgs>? And { get; set; }

        [Input("matchAnyPrefix")]
        private InputList<string>? _matchAnyPrefix;

        /// <summary>
        /// This property contains a list of prefixes. At least one prefix must be specified. Up to 10 prefixes are allowed.
        /// </summary>
        public InputList<string> MatchAnyPrefix
        {
            get => _matchAnyPrefix ?? (_matchAnyPrefix = new InputList<string>());
            set => _matchAnyPrefix = value;
        }

        [Input("matchAnySuffix")]
        private InputList<string>? _matchAnySuffix;

        /// <summary>
        /// This property contains a list of suffixes. At least one suffix must be specified. Up to 10 suffixes are allowed.
        /// </summary>
        public InputList<string> MatchAnySuffix
        {
            get => _matchAnySuffix ?? (_matchAnySuffix = new InputList<string>());
            set => _matchAnySuffix = value;
        }

        [Input("matchAnyTag")]
        private InputList<Inputs.StorageLensGroupTagArgs>? _matchAnyTag;

        /// <summary>
        /// This property contains the list of S3 object tags. At least one object tag must be specified. Up to 10 object tags are allowed.
        /// </summary>
        public InputList<Inputs.StorageLensGroupTagArgs> MatchAnyTag
        {
            get => _matchAnyTag ?? (_matchAnyTag = new InputList<Inputs.StorageLensGroupTagArgs>());
            set => _matchAnyTag = value;
        }

        /// <summary>
        /// This property contains `DaysGreaterThan` and `DaysLessThan` to define the object age range (minimum and maximum number of days).
        /// </summary>
        [Input("matchObjectAge")]
        public Input<Inputs.StorageLensGroupMatchObjectAgeArgs>? MatchObjectAge { get; set; }

        /// <summary>
        /// This property contains `BytesGreaterThan` and `BytesLessThan` to define the object size range (minimum and maximum number of Bytes).
        /// </summary>
        [Input("matchObjectSize")]
        public Input<Inputs.StorageLensGroupMatchObjectSizeArgs>? MatchObjectSize { get; set; }

        /// <summary>
        /// This property contains the `Or` logical operator, which allows multiple filter conditions to be joined. Objects can match any of the listed filter conditions, which are joined by the `Or` logical operator. Only one of each filter condition is allowed.
        /// </summary>
        [Input("or")]
        public Input<Inputs.StorageLensGroupOrArgs>? Or { get; set; }

        public StorageLensGroupFilterArgs()
        {
        }
        public static new StorageLensGroupFilterArgs Empty => new StorageLensGroupFilterArgs();
    }
}
