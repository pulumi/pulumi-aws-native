// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3.Inputs
{

    /// <summary>
    /// Account-level metrics configurations.
    /// </summary>
    public sealed class StorageLensAccountLevelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This property contains the details of account-level activity metrics for S3 Storage Lens.
        /// </summary>
        [Input("activityMetrics")]
        public Input<Inputs.StorageLensActivityMetricsArgs>? ActivityMetrics { get; set; }

        /// <summary>
        /// This property contains the details of account-level advanced cost optimization metrics for S3 Storage Lens.
        /// </summary>
        [Input("advancedCostOptimizationMetrics")]
        public Input<Inputs.StorageLensAdvancedCostOptimizationMetricsArgs>? AdvancedCostOptimizationMetrics { get; set; }

        /// <summary>
        /// This property contains the details of account-level advanced data protection metrics for S3 Storage Lens.
        /// </summary>
        [Input("advancedDataProtectionMetrics")]
        public Input<Inputs.StorageLensAdvancedDataProtectionMetricsArgs>? AdvancedDataProtectionMetrics { get; set; }

        /// <summary>
        /// This property contains the details of the account-level bucket-level configurations for Amazon S3 Storage Lens.
        /// </summary>
        [Input("bucketLevel", required: true)]
        public Input<Inputs.StorageLensBucketLevelArgs> BucketLevel { get; set; } = null!;

        /// <summary>
        /// This property contains the details of account-level detailed status code metrics for S3 Storage Lens.
        /// </summary>
        [Input("detailedStatusCodesMetrics")]
        public Input<Inputs.StorageLensDetailedStatusCodesMetricsArgs>? DetailedStatusCodesMetrics { get; set; }

        /// <summary>
        /// This property determines the scope of Storage Lens group data that is displayed in the Storage Lens dashboard.
        /// </summary>
        [Input("storageLensGroupLevel")]
        public Input<Inputs.StorageLensGroupLevelArgs>? StorageLensGroupLevel { get; set; }

        public StorageLensAccountLevelArgs()
        {
        }
        public static new StorageLensAccountLevelArgs Empty => new StorageLensAccountLevelArgs();
    }
}
