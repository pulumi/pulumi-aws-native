// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3
{
    public static class GetAccessGrant
    {
        /// <summary>
        /// The AWS::S3::AccessGrant resource is an Amazon S3 resource type representing permissions to a specific S3 bucket or prefix hosted in an S3 Access Grants instance.
        /// </summary>
        public static Task<GetAccessGrantResult> InvokeAsync(GetAccessGrantArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessGrantResult>("aws-native:s3:getAccessGrant", args ?? new GetAccessGrantArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::S3::AccessGrant resource is an Amazon S3 resource type representing permissions to a specific S3 bucket or prefix hosted in an S3 Access Grants instance.
        /// </summary>
        public static Output<GetAccessGrantResult> Invoke(GetAccessGrantInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessGrantResult>("aws-native:s3:getAccessGrant", args ?? new GetAccessGrantInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessGrantArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID assigned to this access grant.
        /// </summary>
        [Input("accessGrantId", required: true)]
        public string AccessGrantId { get; set; } = null!;

        public GetAccessGrantArgs()
        {
        }
        public static new GetAccessGrantArgs Empty => new GetAccessGrantArgs();
    }

    public sealed class GetAccessGrantInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID assigned to this access grant.
        /// </summary>
        [Input("accessGrantId", required: true)]
        public Input<string> AccessGrantId { get; set; } = null!;

        public GetAccessGrantInvokeArgs()
        {
        }
        public static new GetAccessGrantInvokeArgs Empty => new GetAccessGrantInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessGrantResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the specified access grant.
        /// </summary>
        public readonly string? AccessGrantArn;
        /// <summary>
        /// The ID assigned to this access grant.
        /// </summary>
        public readonly string? AccessGrantId;
        /// <summary>
        /// The configuration options of the grant location, which is the S3 path to the data to which you are granting access.
        /// </summary>
        public readonly Outputs.AccessGrantsLocationConfiguration? AccessGrantsLocationConfiguration;
        /// <summary>
        /// The custom S3 location to be accessed by the grantee
        /// </summary>
        public readonly string? AccessGrantsLocationId;
        /// <summary>
        /// The ARN of the application grantees will use to access the location
        /// </summary>
        public readonly string? ApplicationArn;
        /// <summary>
        /// The S3 path of the data to which you are granting access. It is a combination of the S3 path of the registered location and the subprefix.
        /// </summary>
        public readonly string? GrantScope;
        /// <summary>
        /// The principal who will be granted permission to access S3.
        /// </summary>
        public readonly Outputs.AccessGrantGrantee? Grantee;
        /// <summary>
        /// The level of access to be afforded to the grantee
        /// </summary>
        public readonly Pulumi.AwsNative.S3.AccessGrantPermission? Permission;

        [OutputConstructor]
        private GetAccessGrantResult(
            string? accessGrantArn,

            string? accessGrantId,

            Outputs.AccessGrantsLocationConfiguration? accessGrantsLocationConfiguration,

            string? accessGrantsLocationId,

            string? applicationArn,

            string? grantScope,

            Outputs.AccessGrantGrantee? grantee,

            Pulumi.AwsNative.S3.AccessGrantPermission? permission)
        {
            AccessGrantArn = accessGrantArn;
            AccessGrantId = accessGrantId;
            AccessGrantsLocationConfiguration = accessGrantsLocationConfiguration;
            AccessGrantsLocationId = accessGrantsLocationId;
            ApplicationArn = applicationArn;
            GrantScope = grantScope;
            Grantee = grantee;
            Permission = permission;
        }
    }
}
