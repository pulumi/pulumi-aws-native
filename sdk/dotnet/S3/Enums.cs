// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.S3
{
    /// <summary>
    /// Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise, NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and bucket access policies.
    /// </summary>
    [EnumType]
    public readonly struct AccessPointNetworkOrigin : IEquatable<AccessPointNetworkOrigin>
    {
        private readonly string _value;

        private AccessPointNetworkOrigin(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static AccessPointNetworkOrigin Internet { get; } = new AccessPointNetworkOrigin("Internet");
        public static AccessPointNetworkOrigin Vpc { get; } = new AccessPointNetworkOrigin("VPC");

        public static bool operator ==(AccessPointNetworkOrigin left, AccessPointNetworkOrigin right) => left.Equals(right);
        public static bool operator !=(AccessPointNetworkOrigin left, AccessPointNetworkOrigin right) => !left.Equals(right);

        public static explicit operator string(AccessPointNetworkOrigin value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AccessPointNetworkOrigin other && Equals(other);
        public bool Equals(AccessPointNetworkOrigin other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
    /// </summary>
    [EnumType]
    public readonly struct StorageLensS3BucketDestinationFormat : IEquatable<StorageLensS3BucketDestinationFormat>
    {
        private readonly string _value;

        private StorageLensS3BucketDestinationFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static StorageLensS3BucketDestinationFormat Csv { get; } = new StorageLensS3BucketDestinationFormat("CSV");
        public static StorageLensS3BucketDestinationFormat Parquet { get; } = new StorageLensS3BucketDestinationFormat("Parquet");

        public static bool operator ==(StorageLensS3BucketDestinationFormat left, StorageLensS3BucketDestinationFormat right) => left.Equals(right);
        public static bool operator !=(StorageLensS3BucketDestinationFormat left, StorageLensS3BucketDestinationFormat right) => !left.Equals(right);

        public static explicit operator string(StorageLensS3BucketDestinationFormat value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is StorageLensS3BucketDestinationFormat other && Equals(other);
        public bool Equals(StorageLensS3BucketDestinationFormat other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
    /// </summary>
    [EnumType]
    public readonly struct StorageLensS3BucketDestinationOutputSchemaVersion : IEquatable<StorageLensS3BucketDestinationOutputSchemaVersion>
    {
        private readonly string _value;

        private StorageLensS3BucketDestinationOutputSchemaVersion(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static StorageLensS3BucketDestinationOutputSchemaVersion V1 { get; } = new StorageLensS3BucketDestinationOutputSchemaVersion("V_1");

        public static bool operator ==(StorageLensS3BucketDestinationOutputSchemaVersion left, StorageLensS3BucketDestinationOutputSchemaVersion right) => left.Equals(right);
        public static bool operator !=(StorageLensS3BucketDestinationOutputSchemaVersion left, StorageLensS3BucketDestinationOutputSchemaVersion right) => !left.Equals(right);

        public static explicit operator string(StorageLensS3BucketDestinationOutputSchemaVersion value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is StorageLensS3BucketDestinationOutputSchemaVersion other && Equals(other);
        public bool Equals(StorageLensS3BucketDestinationOutputSchemaVersion other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
