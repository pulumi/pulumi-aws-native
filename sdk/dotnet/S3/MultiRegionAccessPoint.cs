// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3
{
    /// <summary>
    /// AWS::S3::MultiRegionAccessPoint is an Amazon S3 resource type that dynamically routes S3 requests to easily satisfy geographic compliance requirements based on customer-defined routing policies.
    /// </summary>
    [AwsNativeResourceType("aws-native:s3:MultiRegionAccessPoint")]
    public partial class MultiRegionAccessPoint : Pulumi.CustomResource
    {
        /// <summary>
        /// The alias is a unique identifier to, and is part of the public DNS name for this Multi Region Access Point
        /// </summary>
        [Output("alias")]
        public Output<string> Alias { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the when the Multi Region Access Point is created
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The name you want to assign to this Multi Region Access Point.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The PublicAccessBlock configuration that you want to apply to this Multi Region Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
        /// </summary>
        [Output("publicAccessBlockConfiguration")]
        public Output<Outputs.MultiRegionAccessPointPublicAccessBlockConfiguration?> PublicAccessBlockConfiguration { get; private set; } = null!;

        /// <summary>
        /// The list of buckets that you want to associate this Multi Region Access Point with.
        /// </summary>
        [Output("regions")]
        public Output<ImmutableArray<Outputs.MultiRegionAccessPointRegion>> Regions { get; private set; } = null!;


        /// <summary>
        /// Create a MultiRegionAccessPoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MultiRegionAccessPoint(string name, MultiRegionAccessPointArgs args, CustomResourceOptions? options = null)
            : base("aws-native:s3:MultiRegionAccessPoint", name, args ?? new MultiRegionAccessPointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MultiRegionAccessPoint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:s3:MultiRegionAccessPoint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MultiRegionAccessPoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MultiRegionAccessPoint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new MultiRegionAccessPoint(name, id, options);
        }
    }

    public sealed class MultiRegionAccessPointArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name you want to assign to this Multi Region Access Point.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The PublicAccessBlock configuration that you want to apply to this Multi Region Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
        /// </summary>
        [Input("publicAccessBlockConfiguration")]
        public Input<Inputs.MultiRegionAccessPointPublicAccessBlockConfigurationArgs>? PublicAccessBlockConfiguration { get; set; }

        [Input("regions", required: true)]
        private InputList<Inputs.MultiRegionAccessPointRegionArgs>? _regions;

        /// <summary>
        /// The list of buckets that you want to associate this Multi Region Access Point with.
        /// </summary>
        public InputList<Inputs.MultiRegionAccessPointRegionArgs> Regions
        {
            get => _regions ?? (_regions = new InputList<Inputs.MultiRegionAccessPointRegionArgs>());
            set => _regions = value;
        }

        public MultiRegionAccessPointArgs()
        {
        }
    }
}
