// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3
{
    /// <summary>
    /// The AWS::S3::AccessGrant resource is an Amazon S3 resource type representing permissions to a specific S3 bucket or prefix hosted in an S3 Access Grants instance.
    /// </summary>
    [AwsNativeResourceType("aws-native:s3:AccessGrant")]
    public partial class AccessGrant : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the specified access grant.
        /// </summary>
        [Output("accessGrantArn")]
        public Output<string> AccessGrantArn { get; private set; } = null!;

        /// <summary>
        /// The ID assigned to this access grant.
        /// </summary>
        [Output("accessGrantId")]
        public Output<string> AccessGrantId { get; private set; } = null!;

        /// <summary>
        /// The configuration options of the grant location, which is the S3 path to the data to which you are granting access.
        /// </summary>
        [Output("accessGrantsLocationConfiguration")]
        public Output<Outputs.AccessGrantsLocationConfiguration?> AccessGrantsLocationConfiguration { get; private set; } = null!;

        /// <summary>
        /// The custom S3 location to be accessed by the grantee
        /// </summary>
        [Output("accessGrantsLocationId")]
        public Output<string> AccessGrantsLocationId { get; private set; } = null!;

        /// <summary>
        /// The ARN of the application grantees will use to access the location
        /// </summary>
        [Output("applicationArn")]
        public Output<string?> ApplicationArn { get; private set; } = null!;

        /// <summary>
        /// The S3 path of the data to which you are granting access. It is a combination of the S3 path of the registered location and the subprefix.
        /// </summary>
        [Output("grantScope")]
        public Output<string> GrantScope { get; private set; } = null!;

        /// <summary>
        /// The principal who will be granted permission to access S3.
        /// </summary>
        [Output("grantee")]
        public Output<Outputs.AccessGrantGrantee> Grantee { get; private set; } = null!;

        /// <summary>
        /// The level of access to be afforded to the grantee
        /// </summary>
        [Output("permission")]
        public Output<Pulumi.AwsNative.S3.AccessGrantPermission> Permission { get; private set; } = null!;

        /// <summary>
        /// The type of S3SubPrefix.
        /// </summary>
        [Output("s3PrefixType")]
        public Output<Pulumi.AwsNative.S3.AccessGrantS3PrefixType?> S3PrefixType { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.CreateOnlyTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a AccessGrant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessGrant(string name, AccessGrantArgs args, CustomResourceOptions? options = null)
            : base("aws-native:s3:AccessGrant", name, args ?? new AccessGrantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessGrant(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:s3:AccessGrant", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "s3PrefixType",
                    "tags[*]",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessGrant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessGrant Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AccessGrant(name, id, options);
        }
    }

    public sealed class AccessGrantArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration options of the grant location, which is the S3 path to the data to which you are granting access.
        /// </summary>
        [Input("accessGrantsLocationConfiguration")]
        public Input<Inputs.AccessGrantsLocationConfigurationArgs>? AccessGrantsLocationConfiguration { get; set; }

        /// <summary>
        /// The custom S3 location to be accessed by the grantee
        /// </summary>
        [Input("accessGrantsLocationId", required: true)]
        public Input<string> AccessGrantsLocationId { get; set; } = null!;

        /// <summary>
        /// The ARN of the application grantees will use to access the location
        /// </summary>
        [Input("applicationArn")]
        public Input<string>? ApplicationArn { get; set; }

        /// <summary>
        /// The principal who will be granted permission to access S3.
        /// </summary>
        [Input("grantee", required: true)]
        public Input<Inputs.AccessGrantGranteeArgs> Grantee { get; set; } = null!;

        /// <summary>
        /// The level of access to be afforded to the grantee
        /// </summary>
        [Input("permission", required: true)]
        public Input<Pulumi.AwsNative.S3.AccessGrantPermission> Permission { get; set; } = null!;

        /// <summary>
        /// The type of S3SubPrefix.
        /// </summary>
        [Input("s3PrefixType")]
        public Input<Pulumi.AwsNative.S3.AccessGrantS3PrefixType>? S3PrefixType { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs>? _tags;
        public InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs>());
            set => _tags = value;
        }

        public AccessGrantArgs()
        {
        }
        public static new AccessGrantArgs Empty => new AccessGrantArgs();
    }
}
