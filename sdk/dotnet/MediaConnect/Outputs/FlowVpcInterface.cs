// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaConnect.Outputs
{

    /// <summary>
    /// The details of a VPC interface.
    /// </summary>
    [OutputType]
    public sealed class FlowVpcInterface
    {
        /// <summary>
        /// Immutable and has to be a unique against other VpcInterfaces in this Flow.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// IDs of the network interfaces created in customer's account by MediaConnect.
        /// </summary>
        public readonly ImmutableArray<string> NetworkInterfaceIds;
        /// <summary>
        /// The type of network adapter that you want MediaConnect to use on this interface. If you don't set this value, it defaults to ENA.
        /// </summary>
        public readonly Pulumi.AwsNative.MediaConnect.FlowVpcInterfaceNetworkInterfaceType? NetworkInterfaceType;
        /// <summary>
        /// Role Arn MediaConnect can assume to create ENIs in customer's account.
        /// </summary>
        public readonly string RoleArn;
        /// <summary>
        /// Security Group IDs to be used on ENI.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// Subnet must be in the AZ of the Flow
        /// </summary>
        public readonly string SubnetId;

        [OutputConstructor]
        private FlowVpcInterface(
            string name,

            ImmutableArray<string> networkInterfaceIds,

            Pulumi.AwsNative.MediaConnect.FlowVpcInterfaceNetworkInterfaceType? networkInterfaceType,

            string roleArn,

            ImmutableArray<string> securityGroupIds,

            string subnetId)
        {
            Name = name;
            NetworkInterfaceIds = networkInterfaceIds;
            NetworkInterfaceType = networkInterfaceType;
            RoleArn = roleArn;
            SecurityGroupIds = securityGroupIds;
            SubnetId = subnetId;
        }
    }
}
