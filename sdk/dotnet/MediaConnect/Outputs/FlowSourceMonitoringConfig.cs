// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaConnect.Outputs
{

    /// <summary>
    /// The settings for source monitoring.
    /// </summary>
    [OutputType]
    public sealed class FlowSourceMonitoringConfig
    {
        /// <summary>
        /// Contains the settings for audio stream metrics monitoring.
        /// </summary>
        public readonly ImmutableArray<Outputs.FlowAudioMonitoringSetting> AudioMonitoringSettings;
        /// <summary>
        /// Indicates whether content quality analysis is enabled or disabled.
        /// </summary>
        public readonly Pulumi.AwsNative.MediaConnect.FlowSourceMonitoringConfigContentQualityAnalysisState? ContentQualityAnalysisState;
        /// <summary>
        /// The state of thumbnail monitoring.
        /// </summary>
        public readonly Pulumi.AwsNative.MediaConnect.FlowSourceMonitoringConfigThumbnailState? ThumbnailState;
        /// <summary>
        /// Contains the settings for video stream metrics monitoring.
        /// </summary>
        public readonly ImmutableArray<Outputs.FlowVideoMonitoringSetting> VideoMonitoringSettings;

        [OutputConstructor]
        private FlowSourceMonitoringConfig(
            ImmutableArray<Outputs.FlowAudioMonitoringSetting> audioMonitoringSettings,

            Pulumi.AwsNative.MediaConnect.FlowSourceMonitoringConfigContentQualityAnalysisState? contentQualityAnalysisState,

            Pulumi.AwsNative.MediaConnect.FlowSourceMonitoringConfigThumbnailState? thumbnailState,

            ImmutableArray<Outputs.FlowVideoMonitoringSetting> videoMonitoringSettings)
        {
            AudioMonitoringSettings = audioMonitoringSettings;
            ContentQualityAnalysisState = contentQualityAnalysisState;
            ThumbnailState = thumbnailState;
            VideoMonitoringSettings = videoMonitoringSettings;
        }
    }
}
