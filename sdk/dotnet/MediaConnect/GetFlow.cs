// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaConnect
{
    public static class GetFlow
    {
        /// <summary>
        /// Resource schema for AWS::MediaConnect::Flow
        /// </summary>
        public static Task<GetFlowResult> InvokeAsync(GetFlowArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFlowResult>("aws-native:mediaconnect:getFlow", args ?? new GetFlowArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::MediaConnect::Flow
        /// </summary>
        public static Output<GetFlowResult> Invoke(GetFlowInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFlowResult>("aws-native:mediaconnect:getFlow", args ?? new GetFlowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlowArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
        /// </summary>
        [Input("flowArn", required: true)]
        public string FlowArn { get; set; } = null!;

        public GetFlowArgs()
        {
        }
    }

    public sealed class GetFlowInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
        /// </summary>
        [Input("flowArn", required: true)]
        public Input<string> FlowArn { get; set; } = null!;

        public GetFlowInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFlowResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
        /// </summary>
        public readonly string? FlowArn;
        /// <summary>
        /// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
        /// </summary>
        public readonly string? FlowAvailabilityZone;
        /// <summary>
        /// The source of the flow.
        /// </summary>
        public readonly Outputs.FlowSource? Source;
        /// <summary>
        /// The source failover config of the flow.
        /// </summary>
        public readonly Outputs.FlowFailoverConfig? SourceFailoverConfig;

        [OutputConstructor]
        private GetFlowResult(
            string? flowArn,

            string? flowAvailabilityZone,

            Outputs.FlowSource? source,

            Outputs.FlowFailoverConfig? sourceFailoverConfig)
        {
            FlowArn = flowArn;
            FlowAvailabilityZone = flowAvailabilityZone;
            Source = source;
            SourceFailoverConfig = sourceFailoverConfig;
        }
    }
}
