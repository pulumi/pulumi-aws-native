// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaConnect
{
    public static class GetFlow
    {
        /// <summary>
        /// Resource schema for AWS::MediaConnect::Flow
        /// </summary>
        public static Task<GetFlowResult> InvokeAsync(GetFlowArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlowResult>("aws-native:mediaconnect:getFlow", args ?? new GetFlowArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::MediaConnect::Flow
        /// </summary>
        public static Output<GetFlowResult> Invoke(GetFlowInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlowResult>("aws-native:mediaconnect:getFlow", args ?? new GetFlowInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::MediaConnect::Flow
        /// </summary>
        public static Output<GetFlowResult> Invoke(GetFlowInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlowResult>("aws-native:mediaconnect:getFlow", args ?? new GetFlowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlowArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
        /// </summary>
        [Input("flowArn", required: true)]
        public string FlowArn { get; set; } = null!;

        public GetFlowArgs()
        {
        }
        public static new GetFlowArgs Empty => new GetFlowArgs();
    }

    public sealed class GetFlowInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
        /// </summary>
        [Input("flowArn", required: true)]
        public Input<string> FlowArn { get; set; } = null!;

        public GetFlowInvokeArgs()
        {
        }
        public static new GetFlowInvokeArgs Empty => new GetFlowInvokeArgs();
    }


    [OutputType]
    public sealed class GetFlowResult
    {
        /// <summary>
        /// The IP address from which video will be sent to output destinations.
        /// </summary>
        public readonly string? EgressIp;
        /// <summary>
        /// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
        /// </summary>
        public readonly string? FlowArn;
        /// <summary>
        /// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
        /// </summary>
        public readonly string? FlowAvailabilityZone;
        /// <summary>
        /// A prefix for the names of the NDI sources that the flow creates.(ReadOnly)
        /// </summary>
        public readonly string? FlowNdiMachineName;
        /// <summary>
        /// Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow.
        /// </summary>
        public readonly Pulumi.AwsNative.MediaConnect.FlowSize? FlowSize;
        /// <summary>
        /// The maintenance settings you want to use for the flow.
        /// </summary>
        public readonly Outputs.FlowMaintenance? Maintenance;
        /// <summary>
        /// The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
        /// </summary>
        public readonly ImmutableArray<Outputs.FlowMediaStream> MediaStreams;
        /// <summary>
        /// Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.
        /// </summary>
        public readonly Outputs.FlowNdiConfig? NdiConfig;
        /// <summary>
        /// The source of the flow.
        /// </summary>
        public readonly Outputs.FlowSource? Source;
        /// <summary>
        /// The source failover config of the flow.
        /// </summary>
        public readonly Outputs.FlowFailoverConfig? SourceFailoverConfig;
        /// <summary>
        /// The source monitoring config of the flow.
        /// </summary>
        public readonly Outputs.FlowSourceMonitoringConfig? SourceMonitoringConfig;
        /// <summary>
        /// The VPC interfaces that you added to this flow.
        /// </summary>
        public readonly ImmutableArray<Outputs.FlowVpcInterface> VpcInterfaces;

        [OutputConstructor]
        private GetFlowResult(
            string? egressIp,

            string? flowArn,

            string? flowAvailabilityZone,

            string? flowNdiMachineName,

            Pulumi.AwsNative.MediaConnect.FlowSize? flowSize,

            Outputs.FlowMaintenance? maintenance,

            ImmutableArray<Outputs.FlowMediaStream> mediaStreams,

            Outputs.FlowNdiConfig? ndiConfig,

            Outputs.FlowSource? source,

            Outputs.FlowFailoverConfig? sourceFailoverConfig,

            Outputs.FlowSourceMonitoringConfig? sourceMonitoringConfig,

            ImmutableArray<Outputs.FlowVpcInterface> vpcInterfaces)
        {
            EgressIp = egressIp;
            FlowArn = flowArn;
            FlowAvailabilityZone = flowAvailabilityZone;
            FlowNdiMachineName = flowNdiMachineName;
            FlowSize = flowSize;
            Maintenance = maintenance;
            MediaStreams = mediaStreams;
            NdiConfig = ndiConfig;
            Source = source;
            SourceFailoverConfig = sourceFailoverConfig;
            SourceMonitoringConfig = sourceMonitoringConfig;
            VpcInterfaces = vpcInterfaces;
        }
    }
}
