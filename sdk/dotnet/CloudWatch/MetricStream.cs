// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudWatch
{
    /// <summary>
    /// Resource Type definition for Metric Stream
    /// </summary>
    [AwsNativeResourceType("aws-native:cloudwatch:MetricStream")]
    public partial class MetricStream : Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name of the metric stream.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The date of creation of the metric stream.
        /// </summary>
        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        /// <summary>
        /// Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        /// </summary>
        [Output("excludeFilters")]
        public Output<ImmutableArray<Outputs.MetricStreamMetricStreamFilter>> ExcludeFilters { get; private set; } = null!;

        /// <summary>
        /// The ARN of the Kinesis Firehose where to stream the data.
        /// </summary>
        [Output("firehoseArn")]
        public Output<string> FirehoseArn { get; private set; } = null!;

        /// <summary>
        /// Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        /// </summary>
        [Output("includeFilters")]
        public Output<ImmutableArray<Outputs.MetricStreamMetricStreamFilter>> IncludeFilters { get; private set; } = null!;

        /// <summary>
        /// The date of the last update of the metric stream.
        /// </summary>
        [Output("lastUpdateDate")]
        public Output<string> LastUpdateDate { get; private set; } = null!;

        /// <summary>
        /// Name of the metric stream.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The output format of the data streamed to the Kinesis Firehose.
        /// </summary>
        [Output("outputFormat")]
        public Output<string> OutputFormat { get; private set; } = null!;

        /// <summary>
        /// The ARN of the role that provides access to the Kinesis Firehose.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// Displays the state of the Metric Stream.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// A set of tags to assign to the delivery stream.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.MetricStreamTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a MetricStream resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MetricStream(string name, MetricStreamArgs args, CustomResourceOptions? options = null)
            : base("aws-native:cloudwatch:MetricStream", name, args ?? new MetricStreamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MetricStream(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cloudwatch:MetricStream", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MetricStream resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MetricStream Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new MetricStream(name, id, options);
        }
    }

    public sealed class MetricStreamArgs : Pulumi.ResourceArgs
    {
        [Input("excludeFilters")]
        private InputList<Inputs.MetricStreamMetricStreamFilterArgs>? _excludeFilters;

        /// <summary>
        /// Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        /// </summary>
        public InputList<Inputs.MetricStreamMetricStreamFilterArgs> ExcludeFilters
        {
            get => _excludeFilters ?? (_excludeFilters = new InputList<Inputs.MetricStreamMetricStreamFilterArgs>());
            set => _excludeFilters = value;
        }

        /// <summary>
        /// The ARN of the Kinesis Firehose where to stream the data.
        /// </summary>
        [Input("firehoseArn", required: true)]
        public Input<string> FirehoseArn { get; set; } = null!;

        [Input("includeFilters")]
        private InputList<Inputs.MetricStreamMetricStreamFilterArgs>? _includeFilters;

        /// <summary>
        /// Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        /// </summary>
        public InputList<Inputs.MetricStreamMetricStreamFilterArgs> IncludeFilters
        {
            get => _includeFilters ?? (_includeFilters = new InputList<Inputs.MetricStreamMetricStreamFilterArgs>());
            set => _includeFilters = value;
        }

        /// <summary>
        /// Name of the metric stream.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The output format of the data streamed to the Kinesis Firehose.
        /// </summary>
        [Input("outputFormat", required: true)]
        public Input<string> OutputFormat { get; set; } = null!;

        /// <summary>
        /// The ARN of the role that provides access to the Kinesis Firehose.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.MetricStreamTagArgs>? _tags;

        /// <summary>
        /// A set of tags to assign to the delivery stream.
        /// </summary>
        public InputList<Inputs.MetricStreamTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.MetricStreamTagArgs>());
            set => _tags = value;
        }

        public MetricStreamArgs()
        {
        }
    }
}
