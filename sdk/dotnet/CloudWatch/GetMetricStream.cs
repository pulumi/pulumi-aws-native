// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudWatch
{
    public static class GetMetricStream
    {
        /// <summary>
        /// Resource Type definition for Metric Stream
        /// </summary>
        public static Task<GetMetricStreamResult> InvokeAsync(GetMetricStreamArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMetricStreamResult>("aws-native:cloudwatch:getMetricStream", args ?? new GetMetricStreamArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for Metric Stream
        /// </summary>
        public static Output<GetMetricStreamResult> Invoke(GetMetricStreamInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMetricStreamResult>("aws-native:cloudwatch:getMetricStream", args ?? new GetMetricStreamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMetricStreamArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the metric stream.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetMetricStreamArgs()
        {
        }
    }

    public sealed class GetMetricStreamInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the metric stream.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetMetricStreamInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMetricStreamResult
    {
        /// <summary>
        /// Amazon Resource Name of the metric stream.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The date of creation of the metric stream.
        /// </summary>
        public readonly string? CreationDate;
        /// <summary>
        /// Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        /// </summary>
        public readonly ImmutableArray<Outputs.MetricStreamFilter> ExcludeFilters;
        /// <summary>
        /// The ARN of the Kinesis Firehose where to stream the data.
        /// </summary>
        public readonly string? FirehoseArn;
        /// <summary>
        /// Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        /// </summary>
        public readonly ImmutableArray<Outputs.MetricStreamFilter> IncludeFilters;
        /// <summary>
        /// The date of the last update of the metric stream.
        /// </summary>
        public readonly string? LastUpdateDate;
        /// <summary>
        /// The output format of the data streamed to the Kinesis Firehose.
        /// </summary>
        public readonly string? OutputFormat;
        /// <summary>
        /// The ARN of the role that provides access to the Kinesis Firehose.
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// Displays the state of the Metric Stream.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.
        /// </summary>
        public readonly ImmutableArray<Outputs.MetricStreamStatisticsConfiguration> StatisticsConfigurations;

        [OutputConstructor]
        private GetMetricStreamResult(
            string? arn,

            string? creationDate,

            ImmutableArray<Outputs.MetricStreamFilter> excludeFilters,

            string? firehoseArn,

            ImmutableArray<Outputs.MetricStreamFilter> includeFilters,

            string? lastUpdateDate,

            string? outputFormat,

            string? roleArn,

            string? state,

            ImmutableArray<Outputs.MetricStreamStatisticsConfiguration> statisticsConfigurations)
        {
            Arn = arn;
            CreationDate = creationDate;
            ExcludeFilters = excludeFilters;
            FirehoseArn = firehoseArn;
            IncludeFilters = includeFilters;
            LastUpdateDate = lastUpdateDate;
            OutputFormat = outputFormat;
            RoleArn = roleArn;
            State = state;
            StatisticsConfigurations = statisticsConfigurations;
        }
    }
}
