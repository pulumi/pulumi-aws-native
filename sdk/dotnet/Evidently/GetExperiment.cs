// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Evidently
{
    public static class GetExperiment
    {
        /// <summary>
        /// Resource Type definition for AWS::Evidently::Experiment.
        /// </summary>
        public static Task<GetExperimentResult> InvokeAsync(GetExperimentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExperimentResult>("aws-native:evidently:getExperiment", args ?? new GetExperimentArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Evidently::Experiment.
        /// </summary>
        public static Output<GetExperimentResult> Invoke(GetExperimentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExperimentResult>("aws-native:evidently:getExperiment", args ?? new GetExperimentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Evidently::Experiment.
        /// </summary>
        public static Output<GetExperimentResult> Invoke(GetExperimentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetExperimentResult>("aws-native:evidently:getExperiment", args ?? new GetExperimentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExperimentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the experiment. For example, `arn:aws:evidently:us-west-2:0123455678912:project/myProject/experiment/myExperiment`
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetExperimentArgs()
        {
        }
        public static new GetExperimentArgs Empty => new GetExperimentArgs();
    }

    public sealed class GetExperimentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the experiment. For example, `arn:aws:evidently:us-west-2:0123455678912:project/myProject/experiment/myExperiment`
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetExperimentInvokeArgs()
        {
        }
        public static new GetExperimentInvokeArgs Empty => new GetExperimentInvokeArgs();
    }


    [OutputType]
    public sealed class GetExperimentResult
    {
        /// <summary>
        /// The ARN of the experiment. For example, `arn:aws:evidently:us-west-2:0123455678912:project/myProject/experiment/myExperiment`
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// An optional description of the experiment.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal. You can use up to three metrics in an experiment.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExperimentMetricGoalObject> MetricGoals;
        /// <summary>
        /// A structure that contains the configuration of which variation to use as the "control" version. The "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
        /// </summary>
        public readonly Outputs.ExperimentOnlineAbConfigObject? OnlineAbConfig;
        /// <summary>
        /// When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and `randomizationSalt` . If you omit `randomizationSalt` , Evidently uses the experiment name as the `randomizationSalt` .
        /// </summary>
        public readonly string? RandomizationSalt;
        /// <summary>
        /// Set this to `true` to remove the segment that is associated with this experiment. You can't use this parameter if the experiment is currently running.
        /// </summary>
        public readonly bool? RemoveSegment;
        /// <summary>
        /// Start Experiment. Default is False
        /// </summary>
        public readonly Outputs.ExperimentRunningStatusObject? RunningStatus;
        /// <summary>
        /// The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.
        /// 
        /// This is represented in thousandths of a percent. For example, specify 10,000 to allocate 10% of the available audience.
        /// </summary>
        public readonly int? SamplingRate;
        /// <summary>
        /// Specifies an audience *segment* to use in the experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment.
        /// 
        /// For more information, see [Segment rule pattern syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html#CloudWatch-Evidently-segments-syntax) .
        /// </summary>
        public readonly string? Segment;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// An array of structures that describe the configuration of each feature variation used in the experiment.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExperimentTreatmentObject> Treatments;

        [OutputConstructor]
        private GetExperimentResult(
            string? arn,

            string? description,

            ImmutableArray<Outputs.ExperimentMetricGoalObject> metricGoals,

            Outputs.ExperimentOnlineAbConfigObject? onlineAbConfig,

            string? randomizationSalt,

            bool? removeSegment,

            Outputs.ExperimentRunningStatusObject? runningStatus,

            int? samplingRate,

            string? segment,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            ImmutableArray<Outputs.ExperimentTreatmentObject> treatments)
        {
            Arn = arn;
            Description = description;
            MetricGoals = metricGoals;
            OnlineAbConfig = onlineAbConfig;
            RandomizationSalt = randomizationSalt;
            RemoveSegment = removeSegment;
            RunningStatus = runningStatus;
            SamplingRate = samplingRate;
            Segment = segment;
            Tags = tags;
            Treatments = treatments;
        }
    }
}
