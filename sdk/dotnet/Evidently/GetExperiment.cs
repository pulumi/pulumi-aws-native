// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Evidently
{
    public static class GetExperiment
    {
        /// <summary>
        /// Resource Type definition for AWS::Evidently::Experiment.
        /// </summary>
        public static Task<GetExperimentResult> InvokeAsync(GetExperimentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetExperimentResult>("aws-native:evidently:getExperiment", args ?? new GetExperimentArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Evidently::Experiment.
        /// </summary>
        public static Output<GetExperimentResult> Invoke(GetExperimentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetExperimentResult>("aws-native:evidently:getExperiment", args ?? new GetExperimentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExperimentArgs : Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetExperimentArgs()
        {
        }
    }

    public sealed class GetExperimentInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetExperimentInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetExperimentResult
    {
        public readonly string? Arn;
        public readonly string? Description;
        public readonly ImmutableArray<Outputs.ExperimentMetricGoalObject> MetricGoals;
        public readonly Outputs.ExperimentOnlineAbConfigObject? OnlineAbConfig;
        public readonly string? RandomizationSalt;
        public readonly int? SamplingRate;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExperimentTag> Tags;
        public readonly ImmutableArray<Outputs.ExperimentTreatmentObject> Treatments;

        [OutputConstructor]
        private GetExperimentResult(
            string? arn,

            string? description,

            ImmutableArray<Outputs.ExperimentMetricGoalObject> metricGoals,

            Outputs.ExperimentOnlineAbConfigObject? onlineAbConfig,

            string? randomizationSalt,

            int? samplingRate,

            ImmutableArray<Outputs.ExperimentTag> tags,

            ImmutableArray<Outputs.ExperimentTreatmentObject> treatments)
        {
            Arn = arn;
            Description = description;
            MetricGoals = metricGoals;
            OnlineAbConfig = onlineAbConfig;
            RandomizationSalt = randomizationSalt;
            SamplingRate = samplingRate;
            Tags = tags;
            Treatments = treatments;
        }
    }
}
