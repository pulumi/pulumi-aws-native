// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Evidently.Outputs
{

    [OutputType]
    public sealed class LaunchStepConfig
    {
        /// <summary>
        /// An array of structures that define how much launch traffic to allocate to each launch group during this step of the launch.
        /// </summary>
        public readonly ImmutableArray<Outputs.LaunchGroupToWeight> GroupWeights;
        /// <summary>
        /// An array of structures that you can use to specify different traffic splits for one or more audience *segments* . A segment is a portion of your audience that share one or more characteristics. Examples could be Chrome browser users, users in Europe, or Firefox browser users in Europe who also fit other criteria that your application collects, such as age.
        /// 
        /// For more information, see [Use segments to focus your audience](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html) .
        /// </summary>
        public readonly ImmutableArray<Outputs.LaunchSegmentOverride> SegmentOverrides;
        /// <summary>
        /// The date and time to start this step of the launch. Use UTC format, `yyyy-MM-ddTHH:mm:ssZ` . For example, `2025-11-25T23:59:59Z`
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private LaunchStepConfig(
            ImmutableArray<Outputs.LaunchGroupToWeight> groupWeights,

            ImmutableArray<Outputs.LaunchSegmentOverride> segmentOverrides,

            string startTime)
        {
            GroupWeights = groupWeights;
            SegmentOverrides = segmentOverrides;
            StartTime = startTime;
        }
    }
}
