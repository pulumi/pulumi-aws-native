// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Evidently
{
    public static class GetProject
    {
        /// <summary>
        /// Resource Type definition for AWS::Evidently::Project
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("aws-native:evidently:getProject", args ?? new GetProjectArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Evidently::Project
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetProjectResult>("aws-native:evidently:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectArgs : Pulumi.InvokeArgs
    {
        [Input("arn")]
        public string? Arn { get; set; }

        public GetProjectArgs()
        {
        }
    }

    public sealed class GetProjectInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        public GetProjectInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        public readonly string? Arn;
        public readonly Outputs.ProjectDataDeliveryObject? DataDelivery;
        public readonly string? Description;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectTag> Tags;

        [OutputConstructor]
        private GetProjectResult(
            string? arn,

            Outputs.ProjectDataDeliveryObject? dataDelivery,

            string? description,

            ImmutableArray<Outputs.ProjectTag> tags)
        {
            Arn = arn;
            DataDelivery = dataDelivery;
            Description = description;
            Tags = tags;
        }
    }
}
