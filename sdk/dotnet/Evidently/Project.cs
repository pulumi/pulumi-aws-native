// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Evidently
{
    /// <summary>
    /// Resource Type definition for AWS::Evidently::Project
    /// </summary>
    [AwsNativeResourceType("aws-native:evidently:Project")]
    public partial class Project : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This is a structure that defines the configuration of how your application integrates with AWS AppConfig to run client-side evaluation.
        /// </summary>
        [Output("appConfigResource")]
        public Output<Outputs.ProjectAppConfigResourceObject?> AppConfigResource { get; private set; } = null!;

        /// <summary>
        /// The ARN of the project. For example, `arn:aws:evidently:us-west-2:0123455678912:project/myProject`
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A structure that contains information about where Evidently is to store evaluation events for longer term storage.
        /// </summary>
        [Output("dataDelivery")]
        public Output<Outputs.ProjectDataDeliveryObject?> DataDelivery { get; private set; } = null!;

        /// <summary>
        /// An optional description of the project.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name for the project. It can include up to 127 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Project resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Project(string name, ProjectArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:evidently:Project", name, args ?? new ProjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Project(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:evidently:Project", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Project resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Project Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Project(name, id, options);
        }
    }

    public sealed class ProjectArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This is a structure that defines the configuration of how your application integrates with AWS AppConfig to run client-side evaluation.
        /// </summary>
        [Input("appConfigResource")]
        public Input<Inputs.ProjectAppConfigResourceObjectArgs>? AppConfigResource { get; set; }

        /// <summary>
        /// A structure that contains information about where Evidently is to store evaluation events for longer term storage.
        /// </summary>
        [Input("dataDelivery")]
        public Input<Inputs.ProjectDataDeliveryObjectArgs>? DataDelivery { get; set; }

        /// <summary>
        /// An optional description of the project.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name for the project. It can include up to 127 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public ProjectArgs()
        {
        }
        public static new ProjectArgs Empty => new ProjectArgs();
    }
}
