// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EKS
{
    public static class GetNodegroup
    {
        /// <summary>
        /// Resource Type definition for AWS::EKS::Nodegroup
        /// </summary>
        public static Task<GetNodegroupResult> InvokeAsync(GetNodegroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNodegroupResult>("aws-native:eks:getNodegroup", args ?? new GetNodegroupArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EKS::Nodegroup
        /// </summary>
        public static Output<GetNodegroupResult> Invoke(GetNodegroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNodegroupResult>("aws-native:eks:getNodegroup", args ?? new GetNodegroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNodegroupArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetNodegroupArgs()
        {
        }
    }

    public sealed class GetNodegroupInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetNodegroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNodegroupResult
    {
        public readonly string? Arn;
        public readonly bool? ForceUpdateEnabled;
        public readonly string? Id;
        public readonly object? Labels;
        public readonly Outputs.NodegroupLaunchTemplateSpecification? LaunchTemplate;
        public readonly string? ReleaseVersion;
        public readonly Outputs.NodegroupScalingConfig? ScalingConfig;
        public readonly object? Tags;
        public readonly ImmutableArray<Outputs.NodegroupTaint> Taints;
        public readonly Outputs.NodegroupUpdateConfig? UpdateConfig;
        public readonly string? Version;

        [OutputConstructor]
        private GetNodegroupResult(
            string? arn,

            bool? forceUpdateEnabled,

            string? id,

            object? labels,

            Outputs.NodegroupLaunchTemplateSpecification? launchTemplate,

            string? releaseVersion,

            Outputs.NodegroupScalingConfig? scalingConfig,

            object? tags,

            ImmutableArray<Outputs.NodegroupTaint> taints,

            Outputs.NodegroupUpdateConfig? updateConfig,

            string? version)
        {
            Arn = arn;
            ForceUpdateEnabled = forceUpdateEnabled;
            Id = id;
            Labels = labels;
            LaunchTemplate = launchTemplate;
            ReleaseVersion = releaseVersion;
            ScalingConfig = scalingConfig;
            Tags = tags;
            Taints = taints;
            UpdateConfig = updateConfig;
            Version = version;
        }
    }
}
