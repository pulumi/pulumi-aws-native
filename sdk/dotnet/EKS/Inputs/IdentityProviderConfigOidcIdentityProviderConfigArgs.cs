// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EKS.Inputs
{

    /// <summary>
    /// An object representing an OpenID Connect (OIDC) configuration.
    /// </summary>
    public sealed class IdentityProviderConfigOidcIdentityProviderConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// This is also known as audience. The ID for the client application that makes authentication requests to the OpenID identity provider.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// The JWT claim that the provider uses to return your groups.
        /// </summary>
        [Input("groupsClaim")]
        public Input<string>? GroupsClaim { get; set; }

        /// <summary>
        /// The prefix that is prepended to group claims to prevent clashes with existing names (such as system: groups).
        /// </summary>
        [Input("groupsPrefix")]
        public Input<string>? GroupsPrefix { get; set; }

        /// <summary>
        /// The URL of the OpenID identity provider that allows the API server to discover public signing keys for verifying tokens.
        /// </summary>
        [Input("issuerUrl", required: true)]
        public Input<string> IssuerUrl { get; set; } = null!;

        [Input("requiredClaims")]
        private InputList<Inputs.IdentityProviderConfigRequiredClaimArgs>? _requiredClaims;
        public InputList<Inputs.IdentityProviderConfigRequiredClaimArgs> RequiredClaims
        {
            get => _requiredClaims ?? (_requiredClaims = new InputList<Inputs.IdentityProviderConfigRequiredClaimArgs>());
            set => _requiredClaims = value;
        }

        /// <summary>
        /// The JSON Web Token (JWT) claim to use as the username. The default is sub, which is expected to be a unique identifier of the end user. You can choose other claims, such as email or name, depending on the OpenID identity provider. Claims other than email are prefixed with the issuer URL to prevent naming clashes with other plug-ins.
        /// </summary>
        [Input("usernameClaim")]
        public Input<string>? UsernameClaim { get; set; }

        /// <summary>
        /// The prefix that is prepended to username claims to prevent clashes with existing names. If you do not provide this field, and username is a value other than email, the prefix defaults to issuerurl#. You can use the value - to disable all prefixing.
        /// </summary>
        [Input("usernamePrefix")]
        public Input<string>? UsernamePrefix { get; set; }

        public IdentityProviderConfigOidcIdentityProviderConfigArgs()
        {
        }
    }
}
