// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Mwaa
{
    /// <summary>
    /// Resource schema for AWS::MWAA::Environment
    /// </summary>
    [AwsNativeResourceType("aws-native:mwaa:Environment")]
    public partial class Environment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Key/value pairs representing Airflow configuration variables.
        ///     Keys are prefixed by their section:
        /// 
        ///     [core]
        ///     dags_folder={AIRFLOW_HOME}/dags
        /// 
        ///     Would be represented as
        /// 
        ///     "core.dags_folder": "{AIRFLOW_HOME}/dags"
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::MWAA::Environment` for more information about the expected schema for this property.
        /// </summary>
        [Output("airflowConfigurationOptions")]
        public Output<object?> AirflowConfigurationOptions { get; private set; } = null!;

        /// <summary>
        /// The version of Apache Airflow to use for the environment. If no value is specified, defaults to the latest version.
        /// 
        /// If you specify a newer version number for an existing environment, the version update requires some service interruption before taking effect.
        /// 
        /// *Allowed Values* : `1.10.12` | `2.0.2` | `2.2.2` | `2.4.3` | `2.5.1` | `2.6.3` | `2.7.2` (latest)
        /// </summary>
        [Output("airflowVersion")]
        public Output<string?> AirflowVersion { get; private set; } = null!;

        /// <summary>
        /// The ARN for the Amazon MWAA environment.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The queue ARN for the environment's [Celery Executor](https://docs.aws.amazon.com/https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/executor/celery.html) . Amazon MWAA uses a Celery Executor to distribute tasks across multiple workers. When you create an environment in a shared VPC, you must provide access to the Celery Executor queue from your VPC.
        /// </summary>
        [Output("celeryExecutorQueue")]
        public Output<string> CeleryExecutorQueue { get; private set; } = null!;

        /// <summary>
        /// The relative path to the DAGs folder on your Amazon S3 bucket. For example, `dags` . To learn more, see [Adding or updating DAGs](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html) .
        /// </summary>
        [Output("dagS3Path")]
        public Output<string?> DagS3Path { get; private set; } = null!;

        /// <summary>
        /// The VPC endpoint for the environment's Amazon RDS database.
        /// </summary>
        [Output("databaseVpcEndpointService")]
        public Output<string> DatabaseVpcEndpointService { get; private set; } = null!;

        /// <summary>
        /// Defines whether the VPC endpoints configured for the environment are created, and managed, by the customer or by Amazon MWAA. If set to `SERVICE` , Amazon MWAA will create and manage the required VPC endpoints in your VPC. If set to `CUSTOMER` , you must create, and manage, the VPC endpoints in your VPC.
        /// </summary>
        [Output("endpointManagement")]
        public Output<Pulumi.AwsNative.Mwaa.EnvironmentEndpointManagement?> EndpointManagement { get; private set; } = null!;

        /// <summary>
        /// The environment class type. Valid values: `mw1.small` , `mw1.medium` , `mw1.large` . To learn more, see [Amazon MWAA environment class](https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html) .
        /// </summary>
        [Output("environmentClass")]
        public Output<string?> EnvironmentClass { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access AWS resources in your environment. For example, `arn:aws:iam::123456789:role/my-execution-role` . To learn more, see [Amazon MWAA Execution role](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html) .
        /// </summary>
        [Output("executionRoleArn")]
        public Output<string?> ExecutionRoleArn { get; private set; } = null!;

        /// <summary>
        /// The AWS Key Management Service (KMS) key to encrypt and decrypt the data in your environment. You can use an AWS KMS key managed by MWAA, or a customer-managed KMS key (advanced).
        /// </summary>
        [Output("kmsKey")]
        public Output<string?> KmsKey { get; private set; } = null!;

        /// <summary>
        /// The type of Apache Airflow logs to send to CloudWatch Logs.
        /// </summary>
        [Output("loggingConfiguration")]
        public Output<Outputs.EnvironmentLoggingConfiguration?> LoggingConfiguration { get; private set; } = null!;

        /// <summary>
        /// The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the `MaxWorkers` field. For example, `20` . When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in `MinWorkers` .
        /// </summary>
        [Output("maxWorkers")]
        public Output<int?> MaxWorkers { get; private set; } = null!;

        /// <summary>
        /// The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the `MaxWorkers` field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the `MinWorkers` field. For example, `2` .
        /// </summary>
        [Output("minWorkers")]
        public Output<int?> MinWorkers { get; private set; } = null!;

        /// <summary>
        /// The name of your Amazon MWAA environment.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The VPC networking components used to secure and enable network traffic between the AWS resources for your environment. To learn more, see [About networking on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html) .
        /// </summary>
        [Output("networkConfiguration")]
        public Output<Outputs.EnvironmentNetworkConfiguration?> NetworkConfiguration { get; private set; } = null!;

        /// <summary>
        /// The version of the plugins.zip file on your Amazon S3 bucket. To learn more, see [Installing custom plugins](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html) .
        /// </summary>
        [Output("pluginsS3ObjectVersion")]
        public Output<string?> PluginsS3ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// The relative path to the `plugins.zip` file on your Amazon S3 bucket. For example, `plugins.zip` . To learn more, see [Installing custom plugins](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html) .
        /// </summary>
        [Output("pluginsS3Path")]
        public Output<string?> PluginsS3Path { get; private set; } = null!;

        /// <summary>
        /// The version of the requirements.txt file on your Amazon S3 bucket. To learn more, see [Installing Python dependencies](https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html) .
        /// </summary>
        [Output("requirementsS3ObjectVersion")]
        public Output<string?> RequirementsS3ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// The relative path to the `requirements.txt` file on your Amazon S3 bucket. For example, `requirements.txt` . To learn more, see [Installing Python dependencies](https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html) .
        /// </summary>
        [Output("requirementsS3Path")]
        public Output<string?> RequirementsS3Path { get; private set; } = null!;

        /// <summary>
        /// The number of schedulers that you want to run in your environment. Valid values:
        /// 
        /// - *v2* - Accepts between 2 to 5. Defaults to 2.
        /// - *v1* - Accepts 1.
        /// </summary>
        [Output("schedulers")]
        public Output<int?> Schedulers { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, `arn:aws:s3:::my-airflow-bucket-unique-name` . To learn more, see [Create an Amazon S3 bucket for Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html) .
        /// </summary>
        [Output("sourceBucketArn")]
        public Output<string?> SourceBucketArn { get; private set; } = null!;

        /// <summary>
        /// The version of the startup shell script in your Amazon S3 bucket. You must specify the [version ID](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html) that Amazon S3 assigns to the file every time you update the script.
        /// 
        /// Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that are no more than 1,024 bytes long. The following is an example:
        /// 
        /// `3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo`
        /// 
        /// For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html) .
        /// </summary>
        [Output("startupScriptS3ObjectVersion")]
        public Output<string?> StartupScriptS3ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// The relative path to the startup shell script in your Amazon S3 bucket. For example, `s3://mwaa-environment/startup.sh` .
        /// 
        /// Amazon MWAA runs the script as your environment starts, and before running the Apache Airflow process. You can use this script to install dependencies, modify Apache Airflow configuration options, and set environment variables. For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html) .
        /// </summary>
        [Output("startupScriptS3Path")]
        public Output<string?> StartupScriptS3Path { get; private set; } = null!;

        /// <summary>
        /// A map of tags for the environment.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::MWAA::Environment` for more information about the expected schema for this property.
        /// </summary>
        [Output("tags")]
        public Output<object?> Tags { get; private set; } = null!;

        /// <summary>
        /// The Apache Airflow *Web server* access mode. To learn more, see [Apache Airflow access modes](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html) . Valid values: `PRIVATE_ONLY` or `PUBLIC_ONLY` .
        /// </summary>
        [Output("webserverAccessMode")]
        public Output<Pulumi.AwsNative.Mwaa.EnvironmentWebserverAccessMode?> WebserverAccessMode { get; private set; } = null!;

        /// <summary>
        /// The URL of your Apache Airflow UI.
        /// </summary>
        [Output("webserverUrl")]
        public Output<string> WebserverUrl { get; private set; } = null!;

        /// <summary>
        /// The VPC endpoint for the environment's web server.
        /// </summary>
        [Output("webserverVpcEndpointService")]
        public Output<string> WebserverVpcEndpointService { get; private set; } = null!;

        /// <summary>
        /// The day and time of the week to start weekly maintenance updates of your environment in the following format: `DAY:HH:MM` . For example: `TUE:03:30` . You can specify a start time in 30 minute increments only. Supported input includes the following:
        /// 
        /// - MON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)
        /// </summary>
        [Output("weeklyMaintenanceWindowStart")]
        public Output<string?> WeeklyMaintenanceWindowStart { get; private set; } = null!;


        /// <summary>
        /// Create a Environment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Environment(string name, EnvironmentArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:mwaa:Environment", name, args ?? new EnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Environment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:mwaa:Environment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "endpointManagement",
                    "kmsKey",
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Environment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Environment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Environment(name, id, options);
        }
    }

    public sealed class EnvironmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Key/value pairs representing Airflow configuration variables.
        ///     Keys are prefixed by their section:
        /// 
        ///     [core]
        ///     dags_folder={AIRFLOW_HOME}/dags
        /// 
        ///     Would be represented as
        /// 
        ///     "core.dags_folder": "{AIRFLOW_HOME}/dags"
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::MWAA::Environment` for more information about the expected schema for this property.
        /// </summary>
        [Input("airflowConfigurationOptions")]
        public Input<object>? AirflowConfigurationOptions { get; set; }

        /// <summary>
        /// The version of Apache Airflow to use for the environment. If no value is specified, defaults to the latest version.
        /// 
        /// If you specify a newer version number for an existing environment, the version update requires some service interruption before taking effect.
        /// 
        /// *Allowed Values* : `1.10.12` | `2.0.2` | `2.2.2` | `2.4.3` | `2.5.1` | `2.6.3` | `2.7.2` (latest)
        /// </summary>
        [Input("airflowVersion")]
        public Input<string>? AirflowVersion { get; set; }

        /// <summary>
        /// The relative path to the DAGs folder on your Amazon S3 bucket. For example, `dags` . To learn more, see [Adding or updating DAGs](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html) .
        /// </summary>
        [Input("dagS3Path")]
        public Input<string>? DagS3Path { get; set; }

        /// <summary>
        /// Defines whether the VPC endpoints configured for the environment are created, and managed, by the customer or by Amazon MWAA. If set to `SERVICE` , Amazon MWAA will create and manage the required VPC endpoints in your VPC. If set to `CUSTOMER` , you must create, and manage, the VPC endpoints in your VPC.
        /// </summary>
        [Input("endpointManagement")]
        public Input<Pulumi.AwsNative.Mwaa.EnvironmentEndpointManagement>? EndpointManagement { get; set; }

        /// <summary>
        /// The environment class type. Valid values: `mw1.small` , `mw1.medium` , `mw1.large` . To learn more, see [Amazon MWAA environment class](https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html) .
        /// </summary>
        [Input("environmentClass")]
        public Input<string>? EnvironmentClass { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access AWS resources in your environment. For example, `arn:aws:iam::123456789:role/my-execution-role` . To learn more, see [Amazon MWAA Execution role](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html) .
        /// </summary>
        [Input("executionRoleArn")]
        public Input<string>? ExecutionRoleArn { get; set; }

        /// <summary>
        /// The AWS Key Management Service (KMS) key to encrypt and decrypt the data in your environment. You can use an AWS KMS key managed by MWAA, or a customer-managed KMS key (advanced).
        /// </summary>
        [Input("kmsKey")]
        public Input<string>? KmsKey { get; set; }

        /// <summary>
        /// The type of Apache Airflow logs to send to CloudWatch Logs.
        /// </summary>
        [Input("loggingConfiguration")]
        public Input<Inputs.EnvironmentLoggingConfigurationArgs>? LoggingConfiguration { get; set; }

        /// <summary>
        /// The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the `MaxWorkers` field. For example, `20` . When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in `MinWorkers` .
        /// </summary>
        [Input("maxWorkers")]
        public Input<int>? MaxWorkers { get; set; }

        /// <summary>
        /// The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the `MaxWorkers` field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the `MinWorkers` field. For example, `2` .
        /// </summary>
        [Input("minWorkers")]
        public Input<int>? MinWorkers { get; set; }

        /// <summary>
        /// The name of your Amazon MWAA environment.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The VPC networking components used to secure and enable network traffic between the AWS resources for your environment. To learn more, see [About networking on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html) .
        /// </summary>
        [Input("networkConfiguration")]
        public Input<Inputs.EnvironmentNetworkConfigurationArgs>? NetworkConfiguration { get; set; }

        /// <summary>
        /// The version of the plugins.zip file on your Amazon S3 bucket. To learn more, see [Installing custom plugins](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html) .
        /// </summary>
        [Input("pluginsS3ObjectVersion")]
        public Input<string>? PluginsS3ObjectVersion { get; set; }

        /// <summary>
        /// The relative path to the `plugins.zip` file on your Amazon S3 bucket. For example, `plugins.zip` . To learn more, see [Installing custom plugins](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html) .
        /// </summary>
        [Input("pluginsS3Path")]
        public Input<string>? PluginsS3Path { get; set; }

        /// <summary>
        /// The version of the requirements.txt file on your Amazon S3 bucket. To learn more, see [Installing Python dependencies](https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html) .
        /// </summary>
        [Input("requirementsS3ObjectVersion")]
        public Input<string>? RequirementsS3ObjectVersion { get; set; }

        /// <summary>
        /// The relative path to the `requirements.txt` file on your Amazon S3 bucket. For example, `requirements.txt` . To learn more, see [Installing Python dependencies](https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html) .
        /// </summary>
        [Input("requirementsS3Path")]
        public Input<string>? RequirementsS3Path { get; set; }

        /// <summary>
        /// The number of schedulers that you want to run in your environment. Valid values:
        /// 
        /// - *v2* - Accepts between 2 to 5. Defaults to 2.
        /// - *v1* - Accepts 1.
        /// </summary>
        [Input("schedulers")]
        public Input<int>? Schedulers { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, `arn:aws:s3:::my-airflow-bucket-unique-name` . To learn more, see [Create an Amazon S3 bucket for Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html) .
        /// </summary>
        [Input("sourceBucketArn")]
        public Input<string>? SourceBucketArn { get; set; }

        /// <summary>
        /// The version of the startup shell script in your Amazon S3 bucket. You must specify the [version ID](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html) that Amazon S3 assigns to the file every time you update the script.
        /// 
        /// Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that are no more than 1,024 bytes long. The following is an example:
        /// 
        /// `3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo`
        /// 
        /// For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html) .
        /// </summary>
        [Input("startupScriptS3ObjectVersion")]
        public Input<string>? StartupScriptS3ObjectVersion { get; set; }

        /// <summary>
        /// The relative path to the startup shell script in your Amazon S3 bucket. For example, `s3://mwaa-environment/startup.sh` .
        /// 
        /// Amazon MWAA runs the script as your environment starts, and before running the Apache Airflow process. You can use this script to install dependencies, modify Apache Airflow configuration options, and set environment variables. For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html) .
        /// </summary>
        [Input("startupScriptS3Path")]
        public Input<string>? StartupScriptS3Path { get; set; }

        /// <summary>
        /// A map of tags for the environment.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::MWAA::Environment` for more information about the expected schema for this property.
        /// </summary>
        [Input("tags")]
        public Input<object>? Tags { get; set; }

        /// <summary>
        /// The Apache Airflow *Web server* access mode. To learn more, see [Apache Airflow access modes](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html) . Valid values: `PRIVATE_ONLY` or `PUBLIC_ONLY` .
        /// </summary>
        [Input("webserverAccessMode")]
        public Input<Pulumi.AwsNative.Mwaa.EnvironmentWebserverAccessMode>? WebserverAccessMode { get; set; }

        /// <summary>
        /// The day and time of the week to start weekly maintenance updates of your environment in the following format: `DAY:HH:MM` . For example: `TUE:03:30` . You can specify a start time in 30 minute increments only. Supported input includes the following:
        /// 
        /// - MON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)
        /// </summary>
        [Input("weeklyMaintenanceWindowStart")]
        public Input<string>? WeeklyMaintenanceWindowStart { get; set; }

        public EnvironmentArgs()
        {
        }
        public static new EnvironmentArgs Empty => new EnvironmentArgs();
    }
}
