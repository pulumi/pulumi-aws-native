// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AuditManager
{
    /// <summary>
    /// An entity that defines the scope of audit evidence collected by AWS Audit Manager.
    /// </summary>
    [AwsNativeResourceType("aws-native:auditmanager:Assessment")]
    public partial class Assessment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the assessment.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the assessment.
        /// </summary>
        [Output("assessmentId")]
        public Output<string> AssessmentId { get; private set; } = null!;

        /// <summary>
        /// The `AssessmentReportsDestination` property type specifies the location in which AWS Audit Manager saves assessment reports for the given assessment.
        /// </summary>
        [Output("assessmentReportsDestination")]
        public Output<Outputs.AssessmentReportsDestination?> AssessmentReportsDestination { get; private set; } = null!;

        /// <summary>
        /// The `AWSAccount` property type specifies the wrapper of the AWS account details, such as account ID, email address, and so on.
        /// </summary>
        [Output("awsAccount")]
        public Output<Outputs.AssessmentAwsAccount?> AwsAccount { get; private set; } = null!;

        /// <summary>
        /// Specifies when the assessment was created.
        /// </summary>
        [Output("creationTime")]
        public Output<double> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The list of delegations.
        /// </summary>
        [Output("delegations")]
        public Output<ImmutableArray<Outputs.AssessmentDelegation>> Delegations { get; private set; } = null!;

        /// <summary>
        /// The description of the assessment.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the framework.
        /// </summary>
        [Output("frameworkId")]
        public Output<string?> FrameworkId { get; private set; } = null!;

        /// <summary>
        /// The name of the assessment.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The list of roles for the specified assessment.
        /// </summary>
        [Output("roles")]
        public Output<ImmutableArray<Outputs.AssessmentRole>> Roles { get; private set; } = null!;

        /// <summary>
        /// The `Scope` property type specifies the wrapper that contains the AWS accounts and services that are in scope for the assessment.
        /// </summary>
        [Output("scope")]
        public Output<Outputs.AssessmentScope?> Scope { get; private set; } = null!;

        /// <summary>
        /// The overall status of the assessment.
        /// 
        /// When you create a new assessment, the initial `Status` value is always `ACTIVE` . When you create an assessment, even if you specify the value as `INACTIVE` , the value overrides to `ACTIVE` .
        /// 
        /// After you create an assessment, you can change the value of the `Status` property at any time. For example, when you want to stop collecting evidence for your assessment, you can change the assessment status to `INACTIVE` .
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.AuditManager.AssessmentStatus?> Status { get; private set; } = null!;

        /// <summary>
        /// The tags associated with the assessment.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Assessment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Assessment(string name, AssessmentArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:auditmanager:Assessment", name, args ?? new AssessmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Assessment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:auditmanager:Assessment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "awsAccount",
                    "frameworkId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Assessment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Assessment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Assessment(name, id, options);
        }
    }

    public sealed class AssessmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The `AssessmentReportsDestination` property type specifies the location in which AWS Audit Manager saves assessment reports for the given assessment.
        /// </summary>
        [Input("assessmentReportsDestination")]
        public Input<Inputs.AssessmentReportsDestinationArgs>? AssessmentReportsDestination { get; set; }

        /// <summary>
        /// The `AWSAccount` property type specifies the wrapper of the AWS account details, such as account ID, email address, and so on.
        /// </summary>
        [Input("awsAccount")]
        public Input<Inputs.AssessmentAwsAccountArgs>? AwsAccount { get; set; }

        [Input("delegations")]
        private InputList<Inputs.AssessmentDelegationArgs>? _delegations;

        /// <summary>
        /// The list of delegations.
        /// </summary>
        public InputList<Inputs.AssessmentDelegationArgs> Delegations
        {
            get => _delegations ?? (_delegations = new InputList<Inputs.AssessmentDelegationArgs>());
            set => _delegations = value;
        }

        /// <summary>
        /// The description of the assessment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique identifier for the framework.
        /// </summary>
        [Input("frameworkId")]
        public Input<string>? FrameworkId { get; set; }

        /// <summary>
        /// The name of the assessment.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("roles")]
        private InputList<Inputs.AssessmentRoleArgs>? _roles;

        /// <summary>
        /// The list of roles for the specified assessment.
        /// </summary>
        public InputList<Inputs.AssessmentRoleArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.AssessmentRoleArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// The `Scope` property type specifies the wrapper that contains the AWS accounts and services that are in scope for the assessment.
        /// </summary>
        [Input("scope")]
        public Input<Inputs.AssessmentScopeArgs>? Scope { get; set; }

        /// <summary>
        /// The overall status of the assessment.
        /// 
        /// When you create a new assessment, the initial `Status` value is always `ACTIVE` . When you create an assessment, even if you specify the value as `INACTIVE` , the value overrides to `ACTIVE` .
        /// 
        /// After you create an assessment, you can change the value of the `Status` property at any time. For example, when you want to stop collecting evidence for your assessment, you can change the assessment status to `INACTIVE` .
        /// </summary>
        [Input("status")]
        public Input<Pulumi.AwsNative.AuditManager.AssessmentStatus>? Status { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// The tags associated with the assessment.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public AssessmentArgs()
        {
        }
        public static new AssessmentArgs Empty => new AssessmentArgs();
    }
}
