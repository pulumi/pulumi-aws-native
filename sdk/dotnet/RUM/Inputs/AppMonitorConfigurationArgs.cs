// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RUM.Inputs
{

    /// <summary>
    /// AppMonitor configuration
    /// </summary>
    public sealed class AppMonitorConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If you set this to true, the RUM web client sets two cookies, a session cookie and a user cookie. The cookies allow the RUM web client to collect data relating to the number of users an application has and the behavior of the application across a sequence of events. Cookies are stored in the top-level domain of the current page.
        /// </summary>
        [Input("allowCookies")]
        public Input<bool>? AllowCookies { get; set; }

        /// <summary>
        /// If you set this to true, RUM enables xray tracing for the user sessions that RUM samples. RUM adds an xray trace header to allowed HTTP requests. It also records an xray segment for allowed HTTP requests. You can see traces and segments from these user sessions in the xray console and the CW ServiceLens console.
        /// </summary>
        [Input("enableXRay")]
        public Input<bool>? EnableXRay { get; set; }

        [Input("excludedPages")]
        private InputList<string>? _excludedPages;

        /// <summary>
        /// A list of URLs in your website or application to exclude from RUM data collection. You can't include both ExcludedPages and IncludedPages in the same operation.
        /// </summary>
        public InputList<string> ExcludedPages
        {
            get => _excludedPages ?? (_excludedPages = new InputList<string>());
            set => _excludedPages = value;
        }

        [Input("favoritePages")]
        private InputList<string>? _favoritePages;

        /// <summary>
        /// A list of pages in the RUM console that are to be displayed with a favorite icon.
        /// </summary>
        public InputList<string> FavoritePages
        {
            get => _favoritePages ?? (_favoritePages = new InputList<string>());
            set => _favoritePages = value;
        }

        /// <summary>
        /// The ARN of the guest IAM role that is attached to the identity pool that is used to authorize the sending of data to RUM.
        /// </summary>
        [Input("guestRoleArn")]
        public Input<string>? GuestRoleArn { get; set; }

        /// <summary>
        /// The ID of the identity pool that is used to authorize the sending of data to RUM.
        /// </summary>
        [Input("identityPoolId")]
        public Input<string>? IdentityPoolId { get; set; }

        [Input("includedPages")]
        private InputList<string>? _includedPages;

        /// <summary>
        /// If this app monitor is to collect data from only certain pages in your application, this structure lists those pages. You can't include both ExcludedPages and IncludedPages in the same operation.
        /// </summary>
        public InputList<string> IncludedPages
        {
            get => _includedPages ?? (_includedPages = new InputList<string>());
            set => _includedPages = value;
        }

        /// <summary>
        /// Specifies the percentage of user sessions to use for RUM data collection. Choosing a higher percentage gives you more data but also incurs more costs. The number you specify is the percentage of user sessions that will be used. If you omit this parameter, the default of 10 is used.
        /// </summary>
        [Input("sessionSampleRate")]
        public Input<double>? SessionSampleRate { get; set; }

        [Input("telemetries")]
        private InputList<Pulumi.AwsNative.RUM.AppMonitorTelemetry>? _telemetries;

        /// <summary>
        /// An array that lists the types of telemetry data that this app monitor is to collect.
        /// </summary>
        public InputList<Pulumi.AwsNative.RUM.AppMonitorTelemetry> Telemetries
        {
            get => _telemetries ?? (_telemetries = new InputList<Pulumi.AwsNative.RUM.AppMonitorTelemetry>());
            set => _telemetries = value;
        }

        public AppMonitorConfigurationArgs()
        {
        }
    }
}
