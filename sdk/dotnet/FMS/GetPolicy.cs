// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.FMS
{
    public static class GetPolicy
    {
        /// <summary>
        /// Creates an AWS Firewall Manager policy.
        /// </summary>
        public static Task<GetPolicyResult> InvokeAsync(GetPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPolicyResult>("aws-native:fms:getPolicy", args ?? new GetPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Creates an AWS Firewall Manager policy.
        /// </summary>
        public static Output<GetPolicyResult> Invoke(GetPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPolicyResult>("aws-native:fms:getPolicy", args ?? new GetPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetPolicyArgs()
        {
        }
    }

    public sealed class GetPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPolicyResult
    {
        public readonly string? Arn;
        public readonly Outputs.PolicyIEMap? ExcludeMap;
        public readonly bool? ExcludeResourceTags;
        public readonly string? Id;
        public readonly Outputs.PolicyIEMap? IncludeMap;
        public readonly string? PolicyName;
        public readonly bool? RemediationEnabled;
        public readonly ImmutableArray<Outputs.PolicyResourceTag> ResourceTags;
        public readonly string? ResourceType;
        public readonly ImmutableArray<string> ResourceTypeList;
        public readonly bool? ResourcesCleanUp;
        public readonly Outputs.SecurityServicePolicyDataProperties? SecurityServicePolicyData;
        public readonly ImmutableArray<Outputs.PolicyTag> Tags;

        [OutputConstructor]
        private GetPolicyResult(
            string? arn,

            Outputs.PolicyIEMap? excludeMap,

            bool? excludeResourceTags,

            string? id,

            Outputs.PolicyIEMap? includeMap,

            string? policyName,

            bool? remediationEnabled,

            ImmutableArray<Outputs.PolicyResourceTag> resourceTags,

            string? resourceType,

            ImmutableArray<string> resourceTypeList,

            bool? resourcesCleanUp,

            Outputs.SecurityServicePolicyDataProperties? securityServicePolicyData,

            ImmutableArray<Outputs.PolicyTag> tags)
        {
            Arn = arn;
            ExcludeMap = excludeMap;
            ExcludeResourceTags = excludeResourceTags;
            Id = id;
            IncludeMap = includeMap;
            PolicyName = policyName;
            RemediationEnabled = remediationEnabled;
            ResourceTags = resourceTags;
            ResourceType = resourceType;
            ResourceTypeList = resourceTypeList;
            ResourcesCleanUp = resourcesCleanUp;
            SecurityServicePolicyData = securityServicePolicyData;
            Tags = tags;
        }
    }
}
