// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.FMS
{
    public static class GetNotificationChannel
    {
        /// <summary>
        /// Designates the IAM role and Amazon Simple Notification Service (SNS) topic that AWS Firewall Manager uses to record SNS logs.
        /// </summary>
        public static Task<GetNotificationChannelResult> InvokeAsync(GetNotificationChannelArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNotificationChannelResult>("aws-native:fms:getNotificationChannel", args ?? new GetNotificationChannelArgs(), options.WithDefaults());

        /// <summary>
        /// Designates the IAM role and Amazon Simple Notification Service (SNS) topic that AWS Firewall Manager uses to record SNS logs.
        /// </summary>
        public static Output<GetNotificationChannelResult> Invoke(GetNotificationChannelInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNotificationChannelResult>("aws-native:fms:getNotificationChannel", args ?? new GetNotificationChannelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNotificationChannelArgs : Pulumi.InvokeArgs
    {
        [Input("snsTopicArn", required: true)]
        public string SnsTopicArn { get; set; } = null!;

        public GetNotificationChannelArgs()
        {
        }
    }

    public sealed class GetNotificationChannelInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("snsTopicArn", required: true)]
        public Input<string> SnsTopicArn { get; set; } = null!;

        public GetNotificationChannelInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNotificationChannelResult
    {
        public readonly string? SnsRoleName;
        public readonly string? SnsTopicArn;

        [OutputConstructor]
        private GetNotificationChannelResult(
            string? snsRoleName,

            string? snsTopicArn)
        {
            SnsRoleName = snsRoleName;
            SnsTopicArn = snsTopicArn;
        }
    }
}
