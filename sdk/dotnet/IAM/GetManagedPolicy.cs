// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IAM
{
    public static class GetManagedPolicy
    {
        /// <summary>
        /// Resource Type definition for AWS::IAM::ManagedPolicy
        /// </summary>
        public static Task<GetManagedPolicyResult> InvokeAsync(GetManagedPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedPolicyResult>("aws-native:iam:getManagedPolicy", args ?? new GetManagedPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::IAM::ManagedPolicy
        /// </summary>
        public static Output<GetManagedPolicyResult> Invoke(GetManagedPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedPolicyResult>("aws-native:iam:getManagedPolicy", args ?? new GetManagedPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetManagedPolicyArgs()
        {
        }
        public static new GetManagedPolicyArgs Empty => new GetManagedPolicyArgs();
    }

    public sealed class GetManagedPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetManagedPolicyInvokeArgs()
        {
        }
        public static new GetManagedPolicyInvokeArgs Empty => new GetManagedPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedPolicyResult
    {
        public readonly int? AttachmentCount;
        public readonly string? CreateDate;
        public readonly string? DefaultVersionId;
        public readonly ImmutableArray<string> Groups;
        public readonly string? Id;
        public readonly bool? IsAttachable;
        public readonly int? PermissionsBoundaryUsageCount;
        public readonly string? PolicyArn;
        public readonly object? PolicyDocument;
        public readonly string? PolicyId;
        public readonly ImmutableArray<string> Roles;
        public readonly string? UpdateDate;
        public readonly ImmutableArray<string> Users;

        [OutputConstructor]
        private GetManagedPolicyResult(
            int? attachmentCount,

            string? createDate,

            string? defaultVersionId,

            ImmutableArray<string> groups,

            string? id,

            bool? isAttachable,

            int? permissionsBoundaryUsageCount,

            string? policyArn,

            object? policyDocument,

            string? policyId,

            ImmutableArray<string> roles,

            string? updateDate,

            ImmutableArray<string> users)
        {
            AttachmentCount = attachmentCount;
            CreateDate = createDate;
            DefaultVersionId = defaultVersionId;
            Groups = groups;
            Id = id;
            IsAttachable = isAttachable;
            PermissionsBoundaryUsageCount = permissionsBoundaryUsageCount;
            PolicyArn = policyArn;
            PolicyDocument = policyDocument;
            PolicyId = policyId;
            Roles = roles;
            UpdateDate = updateDate;
            Users = users;
        }
    }
}
