// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IAM
{
    public static class GetAccessKey
    {
        /// <summary>
        /// Resource Type definition for AWS::IAM::AccessKey
        /// </summary>
        public static Task<GetAccessKeyResult> InvokeAsync(GetAccessKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccessKeyResult>("aws-native:iam:getAccessKey", args ?? new GetAccessKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::IAM::AccessKey
        /// </summary>
        public static Output<GetAccessKeyResult> Invoke(GetAccessKeyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAccessKeyResult>("aws-native:iam:getAccessKey", args ?? new GetAccessKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessKeyArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetAccessKeyArgs()
        {
        }
    }

    public sealed class GetAccessKeyInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetAccessKeyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAccessKeyResult
    {
        public readonly string? Id;
        public readonly string? SecretAccessKey;
        public readonly string? Status;

        [OutputConstructor]
        private GetAccessKeyResult(
            string? id,

            string? secretAccessKey,

            string? status)
        {
            Id = id;
            SecretAccessKey = secretAccessKey;
            Status = status;
        }
    }
}
