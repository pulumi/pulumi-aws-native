// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DevOpsGuru.Inputs
{

    /// <summary>
    /// Information about filters of a notification channel configured in DevOpsGuru to filter for insights.
    /// </summary>
    public sealed class NotificationChannelNotificationFilterConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("messageTypes")]
        private InputList<Pulumi.AwsNative.DevOpsGuru.NotificationChannelNotificationMessageType>? _messageTypes;

        /// <summary>
        /// The events that you want to receive notifications for. For example, you can choose to receive notifications only when the severity level is upgraded or a new insight is created.
        /// </summary>
        public InputList<Pulumi.AwsNative.DevOpsGuru.NotificationChannelNotificationMessageType> MessageTypes
        {
            get => _messageTypes ?? (_messageTypes = new InputList<Pulumi.AwsNative.DevOpsGuru.NotificationChannelNotificationMessageType>());
            set => _messageTypes = value;
        }

        [Input("severities")]
        private InputList<Pulumi.AwsNative.DevOpsGuru.NotificationChannelInsightSeverity>? _severities;

        /// <summary>
        /// The severity levels that you want to receive notifications for. For example, you can choose to receive notifications only for insights with `HIGH` and `MEDIUM` severity levels. For more information, see [Understanding insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities) .
        /// </summary>
        public InputList<Pulumi.AwsNative.DevOpsGuru.NotificationChannelInsightSeverity> Severities
        {
            get => _severities ?? (_severities = new InputList<Pulumi.AwsNative.DevOpsGuru.NotificationChannelInsightSeverity>());
            set => _severities = value;
        }

        public NotificationChannelNotificationFilterConfigArgs()
        {
        }
        public static new NotificationChannelNotificationFilterConfigArgs Empty => new NotificationChannelNotificationFilterConfigArgs();
    }
}
