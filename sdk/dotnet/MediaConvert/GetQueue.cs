// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaConvert
{
    public static class GetQueue
    {
        /// <summary>
        /// Resource Type definition for AWS::MediaConvert::Queue
        /// </summary>
        public static Task<GetQueueResult> InvokeAsync(GetQueueArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetQueueResult>("aws-native:mediaconvert:getQueue", args ?? new GetQueueArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::MediaConvert::Queue
        /// </summary>
        public static Output<GetQueueResult> Invoke(GetQueueInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetQueueResult>("aws-native:mediaconvert:getQueue", args ?? new GetQueueInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQueueArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetQueueArgs()
        {
        }
    }

    public sealed class GetQueueInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetQueueInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetQueueResult
    {
        public readonly string? Arn;
        public readonly string? Description;
        public readonly string? Id;
        public readonly string? PricingPlan;
        public readonly string? Status;
        public readonly object? Tags;

        [OutputConstructor]
        private GetQueueResult(
            string? arn,

            string? description,

            string? id,

            string? pricingPlan,

            string? status,

            object? tags)
        {
            Arn = arn;
            Description = description;
            Id = id;
            PricingPlan = pricingPlan;
            Status = status;
            Tags = tags;
        }
    }
}
