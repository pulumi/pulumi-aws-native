// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Glue
{
    /// <summary>
    /// Resource Type definition for AWS::Glue::Job
    /// </summary>
    [AwsNativeResourceType("aws-native:glue:Job")]
    public partial class Job : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of capacity units that are allocated to this job.
        /// </summary>
        [Output("allocatedCapacity")]
        public Output<double?> AllocatedCapacity { get; private set; } = null!;

        /// <summary>
        /// The code that executes a job.
        /// </summary>
        [Output("command")]
        public Output<Outputs.JobCommand> Command { get; private set; } = null!;

        /// <summary>
        /// Specifies the connections used by a job
        /// </summary>
        [Output("connections")]
        public Output<Outputs.JobConnectionsList?> Connections { get; private set; } = null!;

        /// <summary>
        /// The default arguments for this job, specified as name-value pairs.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
        /// </summary>
        [Output("defaultArguments")]
        public Output<object?> DefaultArguments { get; private set; } = null!;

        /// <summary>
        /// A description of the job.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the job is run with a standard or flexible execution class.
        /// </summary>
        [Output("executionClass")]
        public Output<string?> ExecutionClass { get; private set; } = null!;

        /// <summary>
        /// The maximum number of concurrent runs that are allowed for this job.
        /// </summary>
        [Output("executionProperty")]
        public Output<Outputs.JobExecutionProperty?> ExecutionProperty { get; private set; } = null!;

        /// <summary>
        /// Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
        /// </summary>
        [Output("glueVersion")]
        public Output<string?> GlueVersion { get; private set; } = null!;

        /// <summary>
        /// Property description not available.
        /// </summary>
        [Output("jobMode")]
        public Output<string?> JobMode { get; private set; } = null!;

        /// <summary>
        /// Property description not available.
        /// </summary>
        [Output("jobRunQueuingEnabled")]
        public Output<bool?> JobRunQueuingEnabled { get; private set; } = null!;

        /// <summary>
        /// This field is reserved for future use.
        /// </summary>
        [Output("logUri")]
        public Output<string?> LogUri { get; private set; } = null!;

        /// <summary>
        /// Property description not available.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<string?> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
        /// </summary>
        [Output("maxCapacity")]
        public Output<double?> MaxCapacity { get; private set; } = null!;

        /// <summary>
        /// The maximum number of times to retry this job after a JobRun fails
        /// </summary>
        [Output("maxRetries")]
        public Output<double?> MaxRetries { get; private set; } = null!;

        /// <summary>
        /// The name you assign to the job definition
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Non-overridable arguments for this job, specified as name-value pairs.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
        /// </summary>
        [Output("nonOverridableArguments")]
        public Output<object?> NonOverridableArguments { get; private set; } = null!;

        /// <summary>
        /// Specifies configuration properties of a notification.
        /// </summary>
        [Output("notificationProperty")]
        public Output<Outputs.JobNotificationProperty?> NotificationProperty { get; private set; } = null!;

        /// <summary>
        /// The number of workers of a defined workerType that are allocated when a job runs.
        /// </summary>
        [Output("numberOfWorkers")]
        public Output<int?> NumberOfWorkers { get; private set; } = null!;

        /// <summary>
        /// The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        /// <summary>
        /// The name of the SecurityConfiguration structure to be used with this job.
        /// </summary>
        [Output("securityConfiguration")]
        public Output<string?> SecurityConfiguration { get; private set; } = null!;

        /// <summary>
        /// The tags to use with this job.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
        /// </summary>
        [Output("tags")]
        public Output<object?> Tags { get; private set; } = null!;

        /// <summary>
        /// The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
        /// </summary>
        [Output("timeout")]
        public Output<int?> Timeout { get; private set; } = null!;

        /// <summary>
        /// TThe type of predefined worker that is allocated when a job runs.
        /// </summary>
        [Output("workerType")]
        public Output<Pulumi.AwsNative.Glue.JobWorkerType?> WorkerType { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("aws-native:glue:Job", name, args ?? new JobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:glue:Job", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Job(name, id, options);
        }
    }

    public sealed class JobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of capacity units that are allocated to this job.
        /// </summary>
        [Input("allocatedCapacity")]
        public Input<double>? AllocatedCapacity { get; set; }

        /// <summary>
        /// The code that executes a job.
        /// </summary>
        [Input("command", required: true)]
        public Input<Inputs.JobCommandArgs> Command { get; set; } = null!;

        /// <summary>
        /// Specifies the connections used by a job
        /// </summary>
        [Input("connections")]
        public Input<Inputs.JobConnectionsListArgs>? Connections { get; set; }

        /// <summary>
        /// The default arguments for this job, specified as name-value pairs.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
        /// </summary>
        [Input("defaultArguments")]
        public Input<object>? DefaultArguments { get; set; }

        /// <summary>
        /// A description of the job.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Indicates whether the job is run with a standard or flexible execution class.
        /// </summary>
        [Input("executionClass")]
        public Input<string>? ExecutionClass { get; set; }

        /// <summary>
        /// The maximum number of concurrent runs that are allowed for this job.
        /// </summary>
        [Input("executionProperty")]
        public Input<Inputs.JobExecutionPropertyArgs>? ExecutionProperty { get; set; }

        /// <summary>
        /// Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
        /// </summary>
        [Input("glueVersion")]
        public Input<string>? GlueVersion { get; set; }

        /// <summary>
        /// Property description not available.
        /// </summary>
        [Input("jobMode")]
        public Input<string>? JobMode { get; set; }

        /// <summary>
        /// Property description not available.
        /// </summary>
        [Input("jobRunQueuingEnabled")]
        public Input<bool>? JobRunQueuingEnabled { get; set; }

        /// <summary>
        /// This field is reserved for future use.
        /// </summary>
        [Input("logUri")]
        public Input<string>? LogUri { get; set; }

        /// <summary>
        /// Property description not available.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<string>? MaintenanceWindow { get; set; }

        /// <summary>
        /// The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
        /// </summary>
        [Input("maxCapacity")]
        public Input<double>? MaxCapacity { get; set; }

        /// <summary>
        /// The maximum number of times to retry this job after a JobRun fails
        /// </summary>
        [Input("maxRetries")]
        public Input<double>? MaxRetries { get; set; }

        /// <summary>
        /// The name you assign to the job definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Non-overridable arguments for this job, specified as name-value pairs.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
        /// </summary>
        [Input("nonOverridableArguments")]
        public Input<object>? NonOverridableArguments { get; set; }

        /// <summary>
        /// Specifies configuration properties of a notification.
        /// </summary>
        [Input("notificationProperty")]
        public Input<Inputs.JobNotificationPropertyArgs>? NotificationProperty { get; set; }

        /// <summary>
        /// The number of workers of a defined workerType that are allocated when a job runs.
        /// </summary>
        [Input("numberOfWorkers")]
        public Input<int>? NumberOfWorkers { get; set; }

        /// <summary>
        /// The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        /// <summary>
        /// The name of the SecurityConfiguration structure to be used with this job.
        /// </summary>
        [Input("securityConfiguration")]
        public Input<string>? SecurityConfiguration { get; set; }

        /// <summary>
        /// The tags to use with this job.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
        /// </summary>
        [Input("tags")]
        public Input<object>? Tags { get; set; }

        /// <summary>
        /// The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// TThe type of predefined worker that is allocated when a job runs.
        /// </summary>
        [Input("workerType")]
        public Input<Pulumi.AwsNative.Glue.JobWorkerType>? WorkerType { get; set; }

        public JobArgs()
        {
        }
        public static new JobArgs Empty => new JobArgs();
    }
}
