// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Glue
{
    public static class GetClassifier
    {
        /// <summary>
        /// Resource Type definition for AWS::Glue::Classifier
        /// </summary>
        public static Task<GetClassifierResult> InvokeAsync(GetClassifierArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClassifierResult>("aws-native:glue:getClassifier", args ?? new GetClassifierArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Glue::Classifier
        /// </summary>
        public static Output<GetClassifierResult> Invoke(GetClassifierInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClassifierResult>("aws-native:glue:getClassifier", args ?? new GetClassifierInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClassifierArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetClassifierArgs()
        {
        }
    }

    public sealed class GetClassifierInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetClassifierInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClassifierResult
    {
        public readonly Outputs.ClassifierCsvClassifier? CsvClassifier;
        public readonly Outputs.ClassifierGrokClassifier? GrokClassifier;
        public readonly string? Id;
        public readonly Outputs.ClassifierJsonClassifier? JsonClassifier;
        public readonly Outputs.ClassifierXMLClassifier? XMLClassifier;

        [OutputConstructor]
        private GetClassifierResult(
            Outputs.ClassifierCsvClassifier? csvClassifier,

            Outputs.ClassifierGrokClassifier? grokClassifier,

            string? id,

            Outputs.ClassifierJsonClassifier? jsonClassifier,

            Outputs.ClassifierXMLClassifier? xMLClassifier)
        {
            CsvClassifier = csvClassifier;
            GrokClassifier = grokClassifier;
            Id = id;
            JsonClassifier = jsonClassifier;
            XMLClassifier = xMLClassifier;
        }
    }
}
