// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Glue.Inputs
{

    /// <summary>
    /// The structure used to create or update a database.
    /// </summary>
    public sealed class DatabaseInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("createTableDefaultPermissions")]
        private InputList<Inputs.DatabasePrincipalPrivilegesArgs>? _createTableDefaultPermissions;

        /// <summary>
        /// Creates a set of default permissions on the table for principals. Used by AWS Lake Formation. Not used in the normal course of AWS Glue operations.
        /// </summary>
        public InputList<Inputs.DatabasePrincipalPrivilegesArgs> CreateTableDefaultPermissions
        {
            get => _createTableDefaultPermissions ?? (_createTableDefaultPermissions = new InputList<Inputs.DatabasePrincipalPrivilegesArgs>());
            set => _createTableDefaultPermissions = value;
        }

        /// <summary>
        /// A description of the database.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A FederatedDatabase structure that references an entity outside the AWS Glue Data Catalog.
        /// </summary>
        [Input("federatedDatabase")]
        public Input<Inputs.DatabaseFederatedDatabaseArgs>? FederatedDatabase { get; set; }

        /// <summary>
        /// The location of the database (for example, an HDFS path).
        /// </summary>
        [Input("locationUri")]
        public Input<string>? LocationUri { get; set; }

        /// <summary>
        /// The name of the database. For hive compatibility, this is folded to lowercase when it is stored.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// These key-value pairs define parameters and properties of the database.
        /// </summary>
        [Input("parameters")]
        public Input<object>? Parameters { get; set; }

        /// <summary>
        /// A DatabaseIdentifier structure that describes a target database for resource linking.
        /// </summary>
        [Input("targetDatabase")]
        public Input<Inputs.DatabaseIdentifierArgs>? TargetDatabase { get; set; }

        public DatabaseInputArgs()
        {
        }
        public static new DatabaseInputArgs Empty => new DatabaseInputArgs();
    }
}
