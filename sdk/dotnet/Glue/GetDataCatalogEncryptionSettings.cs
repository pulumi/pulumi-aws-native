// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Glue
{
    public static class GetDataCatalogEncryptionSettings
    {
        /// <summary>
        /// Resource Type definition for AWS::Glue::DataCatalogEncryptionSettings
        /// </summary>
        public static Task<GetDataCatalogEncryptionSettingsResult> InvokeAsync(GetDataCatalogEncryptionSettingsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDataCatalogEncryptionSettingsResult>("aws-native:glue:getDataCatalogEncryptionSettings", args ?? new GetDataCatalogEncryptionSettingsArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Glue::DataCatalogEncryptionSettings
        /// </summary>
        public static Output<GetDataCatalogEncryptionSettingsResult> Invoke(GetDataCatalogEncryptionSettingsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDataCatalogEncryptionSettingsResult>("aws-native:glue:getDataCatalogEncryptionSettings", args ?? new GetDataCatalogEncryptionSettingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataCatalogEncryptionSettingsArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDataCatalogEncryptionSettingsArgs()
        {
        }
    }

    public sealed class GetDataCatalogEncryptionSettingsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDataCatalogEncryptionSettingsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDataCatalogEncryptionSettingsResult
    {
        public readonly Outputs.DataCatalogEncryptionSettings? DataCatalogEncryptionSettingsValue;
        public readonly string? Id;

        [OutputConstructor]
        private GetDataCatalogEncryptionSettingsResult(
            Outputs.DataCatalogEncryptionSettings? dataCatalogEncryptionSettings,

            string? id)
        {
            DataCatalogEncryptionSettingsValue = dataCatalogEncryptionSettings;
            Id = id;
        }
    }
}
