// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Eks.Outputs
{

    /// <summary>
    /// Specify granular overrides for specific repair actions. These overrides control the repair action and the repair delay time before a node is considered eligible for repair. If you use this, you must specify all the values.
    /// </summary>
    [OutputType]
    public sealed class NodegroupNodeRepairConfigOverrides
    {
        /// <summary>
        /// Specify the minimum time in minutes to wait before attempting to repair a node with this specific NodeMonitoringCondition and NodeUnhealthyReason.
        /// </summary>
        public readonly int? MinRepairWaitTimeMins;
        /// <summary>
        /// Specify an unhealthy condition reported by the node monitoring agent that this override would apply to.
        /// </summary>
        public readonly string? NodeMonitoringCondition;
        /// <summary>
        /// Specify a reason reported by the node monitoring agent that this override would apply to.
        /// </summary>
        public readonly string? NodeUnhealthyReason;
        /// <summary>
        /// Specify the repair action to take for nodes when all of the specified conditions are met.
        /// </summary>
        public readonly Pulumi.AwsNative.Eks.NodegroupNodeRepairConfigOverridesRepairAction? RepairAction;

        [OutputConstructor]
        private NodegroupNodeRepairConfigOverrides(
            int? minRepairWaitTimeMins,

            string? nodeMonitoringCondition,

            string? nodeUnhealthyReason,

            Pulumi.AwsNative.Eks.NodegroupNodeRepairConfigOverridesRepairAction? repairAction)
        {
            MinRepairWaitTimeMins = minRepairWaitTimeMins;
            NodeMonitoringCondition = nodeMonitoringCondition;
            NodeUnhealthyReason = nodeUnhealthyReason;
            RepairAction = repairAction;
        }
    }
}
