// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Eks.Outputs
{

    /// <summary>
    /// The node auto repair configuration for node group.
    /// </summary>
    [OutputType]
    public sealed class NodegroupNodeRepairConfig
    {
        /// <summary>
        /// Set this value to true to enable node auto repair for the node group.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Specify the maximum number of nodes that can be repaired concurrently or in parallel, expressed as a count of unhealthy nodes. This gives you finer-grained control over the pace of node replacements. When using this, you cannot also set MaxParallelNodesRepairedPercentage at the same time.
        /// </summary>
        public readonly int? MaxParallelNodesRepairedCount;
        /// <summary>
        /// Specify the maximum number of nodes that can be repaired concurrently or in parallel, expressed as a percentage of unhealthy nodes. This gives you finer-grained control over the pace of node replacements. When using this, you cannot also set MaxParallelNodesRepairedCount at the same time.
        /// </summary>
        public readonly int? MaxParallelNodesRepairedPercentage;
        /// <summary>
        /// Specify a count threshold of unhealthy nodes, above which node auto repair actions will stop. When using this, you cannot also set MaxUnhealthyNodeThresholdPercentage at the same time.
        /// </summary>
        public readonly int? MaxUnhealthyNodeThresholdCount;
        /// <summary>
        /// Specify a percentage threshold of unhealthy nodes, above which node auto repair actions will stop. When using this, you cannot also set MaxUnhealthyNodeThresholdCount at the same time.
        /// </summary>
        public readonly int? MaxUnhealthyNodeThresholdPercentage;
        /// <summary>
        /// Specify granular overrides for specific repair actions. These overrides control the repair action and the repair delay time before a node is considered eligible for repair. If you use this, you must specify all the values.
        /// </summary>
        public readonly ImmutableArray<Outputs.NodegroupNodeRepairConfigOverrides> NodeRepairConfigOverrides;

        [OutputConstructor]
        private NodegroupNodeRepairConfig(
            bool? enabled,

            int? maxParallelNodesRepairedCount,

            int? maxParallelNodesRepairedPercentage,

            int? maxUnhealthyNodeThresholdCount,

            int? maxUnhealthyNodeThresholdPercentage,

            ImmutableArray<Outputs.NodegroupNodeRepairConfigOverrides> nodeRepairConfigOverrides)
        {
            Enabled = enabled;
            MaxParallelNodesRepairedCount = maxParallelNodesRepairedCount;
            MaxParallelNodesRepairedPercentage = maxParallelNodesRepairedPercentage;
            MaxUnhealthyNodeThresholdCount = maxUnhealthyNodeThresholdCount;
            MaxUnhealthyNodeThresholdPercentage = maxUnhealthyNodeThresholdPercentage;
            NodeRepairConfigOverrides = nodeRepairConfigOverrides;
        }
    }
}
