// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Rds
{
    /// <summary>
    /// Creates a new DB shard group for Aurora Limitless Database. You must enable Aurora Limitless Database to create a DB shard group.
    ///  Valid for: Aurora DB clusters only
    /// </summary>
    [AwsNativeResourceType("aws-native:rds:DbShardGroup")]
    public partial class DbShardGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether to create standby DB shard groups for the DB shard group. Valid values are the following:
        ///   +  0 - Creates a DB shard group without a standby DB shard group. This is the default value.
        ///   +  1 - Creates a DB shard group with a standby DB shard group in a different Availability Zone (AZ).
        ///   +  2 - Creates a DB shard group with two standby DB shard groups in two different AZs.
        /// </summary>
        [Output("computeRedundancy")]
        public Output<int?> ComputeRedundancy { get; private set; } = null!;

        /// <summary>
        /// The name of the primary DB cluster for the DB shard group.
        /// </summary>
        [Output("dbClusterIdentifier")]
        public Output<string> DbClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// The name of the DB shard group.
        /// </summary>
        [Output("dbShardGroupIdentifier")]
        public Output<string?> DbShardGroupIdentifier { get; private set; } = null!;

        /// <summary>
        /// The AWS Region -unique, immutable identifier for the DB shard group.
        /// </summary>
        [Output("dbShardGroupResourceId")]
        public Output<string> DbShardGroupResourceId { get; private set; } = null!;

        /// <summary>
        /// This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:
        /// 
        /// - `CreateDBInstance`
        /// - `DescribeDBInstances`
        /// - `DeleteDBInstance`
        /// 
        /// For the data structure that represents Amazon Aurora DB cluster endpoints, see `DBClusterEndpoint` .
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// The maximum capacity of the DB shard group in Aurora capacity units (ACUs).
        /// </summary>
        [Output("maxAcu")]
        public Output<double> MaxAcu { get; private set; } = null!;

        /// <summary>
        /// The minimum capacity of the DB shard group in Aurora capacity units (ACUs).
        /// </summary>
        [Output("minAcu")]
        public Output<double?> MinAcu { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the DB shard group is publicly accessible.
        ///  When the DB shard group is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB shard group's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB shard group's VPC. Access to the DB shard group is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB shard group doesn't permit it.
        ///  When the DB shard group isn't publicly accessible, it is an internal DB shard group with a DNS name that resolves to a private IP address.
        ///  Default: The default behavior varies depending on whether ``DBSubnetGroupName`` is specified.
        ///  If ``DBSubnetGroupName`` isn't specified, and ``PubliclyAccessible`` isn't specified, the following applies:
        ///   +  If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB shard group is private.
        ///   +  If the default VPC in the target Region has an internet gateway attached to it, the DB shard group is public.
        ///   
        ///  If ``DBSubnetGroupName`` is specified, and ``PubliclyAccessible`` isn't specified, the following applies:
        ///   +  If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB shard group is private.
        ///   +  If the subnets are part of a VPC that has an internet gateway attached to it, the DB shard group is public.
        /// </summary>
        [Output("publiclyAccessible")]
        public Output<bool?> PubliclyAccessible { get; private set; } = null!;

        /// <summary>
        /// An optional set of key-value pairs to associate arbitrary data of your choosing with the DB shard group.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DbShardGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbShardGroup(string name, DbShardGroupArgs args, CustomResourceOptions? options = null)
            : base("aws-native:rds:DbShardGroup", name, args ?? new DbShardGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbShardGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:rds:DbShardGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "dbClusterIdentifier",
                    "dbShardGroupIdentifier",
                    "publiclyAccessible",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbShardGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbShardGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DbShardGroup(name, id, options);
        }
    }

    public sealed class DbShardGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to create standby DB shard groups for the DB shard group. Valid values are the following:
        ///   +  0 - Creates a DB shard group without a standby DB shard group. This is the default value.
        ///   +  1 - Creates a DB shard group with a standby DB shard group in a different Availability Zone (AZ).
        ///   +  2 - Creates a DB shard group with two standby DB shard groups in two different AZs.
        /// </summary>
        [Input("computeRedundancy")]
        public Input<int>? ComputeRedundancy { get; set; }

        /// <summary>
        /// The name of the primary DB cluster for the DB shard group.
        /// </summary>
        [Input("dbClusterIdentifier", required: true)]
        public Input<string> DbClusterIdentifier { get; set; } = null!;

        /// <summary>
        /// The name of the DB shard group.
        /// </summary>
        [Input("dbShardGroupIdentifier")]
        public Input<string>? DbShardGroupIdentifier { get; set; }

        /// <summary>
        /// The maximum capacity of the DB shard group in Aurora capacity units (ACUs).
        /// </summary>
        [Input("maxAcu", required: true)]
        public Input<double> MaxAcu { get; set; } = null!;

        /// <summary>
        /// The minimum capacity of the DB shard group in Aurora capacity units (ACUs).
        /// </summary>
        [Input("minAcu")]
        public Input<double>? MinAcu { get; set; }

        /// <summary>
        /// Specifies whether the DB shard group is publicly accessible.
        ///  When the DB shard group is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB shard group's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB shard group's VPC. Access to the DB shard group is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB shard group doesn't permit it.
        ///  When the DB shard group isn't publicly accessible, it is an internal DB shard group with a DNS name that resolves to a private IP address.
        ///  Default: The default behavior varies depending on whether ``DBSubnetGroupName`` is specified.
        ///  If ``DBSubnetGroupName`` isn't specified, and ``PubliclyAccessible`` isn't specified, the following applies:
        ///   +  If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB shard group is private.
        ///   +  If the default VPC in the target Region has an internet gateway attached to it, the DB shard group is public.
        ///   
        ///  If ``DBSubnetGroupName`` is specified, and ``PubliclyAccessible`` isn't specified, the following applies:
        ///   +  If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB shard group is private.
        ///   +  If the subnets are part of a VPC that has an internet gateway attached to it, the DB shard group is public.
        /// </summary>
        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An optional set of key-value pairs to associate arbitrary data of your choosing with the DB shard group.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public DbShardGroupArgs()
        {
        }
        public static new DbShardGroupArgs Empty => new DbShardGroupArgs();
    }
}
