// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Rds
{
    /// <summary>
    /// The AWS::RDS::DBShardGroup resource creates an Amazon Aurora Limitless DB Shard Group.
    /// </summary>
    [AwsNativeResourceType("aws-native:rds:DbShardGroup")]
    public partial class DbShardGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether to create standby instances for the DB shard group.
        /// </summary>
        [Output("computeRedundancy")]
        public Output<int?> ComputeRedundancy { get; private set; } = null!;

        /// <summary>
        /// The name of the primary DB cluster for the DB shard group.
        /// </summary>
        [Output("dbClusterIdentifier")]
        public Output<string> DbClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// The name of the DB shard group.
        /// </summary>
        [Output("dbShardGroupIdentifier")]
        public Output<string?> DbShardGroupIdentifier { get; private set; } = null!;

        /// <summary>
        /// The Amazon Web Services Region-unique, immutable identifier for the DB shard group.
        /// </summary>
        [Output("dbShardGroupResourceId")]
        public Output<string> DbShardGroupResourceId { get; private set; } = null!;

        /// <summary>
        /// The connection endpoint for the DB shard group.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// The maximum capacity of the DB shard group in Aurora capacity units (ACUs).
        /// </summary>
        [Output("maxAcu")]
        public Output<double> MaxAcu { get; private set; } = null!;

        /// <summary>
        /// The minimum capacity of the DB shard group in Aurora capacity units (ACUs).
        /// </summary>
        [Output("minAcu")]
        public Output<double?> MinAcu { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the DB shard group is publicly accessible.
        /// </summary>
        [Output("publiclyAccessible")]
        public Output<bool?> PubliclyAccessible { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DbShardGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbShardGroup(string name, DbShardGroupArgs args, CustomResourceOptions? options = null)
            : base("aws-native:rds:DbShardGroup", name, args ?? new DbShardGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbShardGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:rds:DbShardGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "dbClusterIdentifier",
                    "dbShardGroupIdentifier",
                    "publiclyAccessible",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbShardGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbShardGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DbShardGroup(name, id, options);
        }
    }

    public sealed class DbShardGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to create standby instances for the DB shard group.
        /// </summary>
        [Input("computeRedundancy")]
        public Input<int>? ComputeRedundancy { get; set; }

        /// <summary>
        /// The name of the primary DB cluster for the DB shard group.
        /// </summary>
        [Input("dbClusterIdentifier", required: true)]
        public Input<string> DbClusterIdentifier { get; set; } = null!;

        /// <summary>
        /// The name of the DB shard group.
        /// </summary>
        [Input("dbShardGroupIdentifier")]
        public Input<string>? DbShardGroupIdentifier { get; set; }

        /// <summary>
        /// The maximum capacity of the DB shard group in Aurora capacity units (ACUs).
        /// </summary>
        [Input("maxAcu", required: true)]
        public Input<double> MaxAcu { get; set; } = null!;

        /// <summary>
        /// The minimum capacity of the DB shard group in Aurora capacity units (ACUs).
        /// </summary>
        [Input("minAcu")]
        public Input<double>? MinAcu { get; set; }

        /// <summary>
        /// Indicates whether the DB shard group is publicly accessible.
        /// </summary>
        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public DbShardGroupArgs()
        {
        }
        public static new DbShardGroupArgs Empty => new DbShardGroupArgs();
    }
}
