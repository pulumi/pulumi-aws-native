// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Rds
{
    /// <summary>
    /// The ``AWS::RDS::DBParameterGroup`` resource creates a custom parameter group for an RDS database family.
    ///  This type can be declared in a template and referenced in the ``DBParameterGroupName`` property of an ``AWS::RDS::DBInstance`` resource.
    ///  For information about configuring parameters for Amazon RDS DB instances, see [Working with parameter groups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html) in the *Amazon RDS User Guide*.
    ///  For information about configuring parameters for Amazon Aurora DB instances, see [Working with parameter groups](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_WorkingWithParamGroups.html) in the *Amazon Aurora User Guide*.
    ///   Applying a parameter group to a DB instance may require the DB instance to reboot, resulting in a database outage for the duration of the reboot.
    /// </summary>
    [AwsNativeResourceType("aws-native:rds:DbParameterGroup")]
    public partial class DbParameterGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the DB parameter group.
        ///  Constraints:
        ///   +  Must be 1 to 255 letters, numbers, or hyphens.
        ///   +  First character must be a letter
        ///   +  Can't end with a hyphen or contain two consecutive hyphens
        ///   
        ///  If you don't specify a value for ``DBParameterGroupName`` property, a name is automatically created for the DB parameter group.
        ///   This value is stored as a lowercase string.
        /// </summary>
        [Output("dbParameterGroupName")]
        public Output<string?> DbParameterGroupName { get; private set; } = null!;

        /// <summary>
        /// Provides the customer-specified description for this DB parameter group.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.
        ///  To list all of the available parameter group families for a DB engine, use the following command:
        ///   ``aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine &lt;engine&gt;`` 
        ///  For example, to list all of the available parameter group families for the MySQL DB engine, use the following command:
        ///   ``aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine mysql`` 
        ///   The output contains duplicates.
        ///   The following are the valid DB engine values:
        ///   +   ``aurora-mysql`` 
        ///   +   ``aurora-postgresql`` 
        ///   +   ``db2-ae`` 
        ///   +   ``db2-se`` 
        ///   +   ``mysql`` 
        ///   +   ``oracle-ee`` 
        ///   +   ``oracle-ee-cdb`` 
        ///   +   ``oracle-se2`` 
        ///   +   ``oracle-se2-cdb`` 
        ///   +   ``postgres`` 
        ///   +   ``sqlserver-ee`` 
        ///   +   ``sqlserver-se`` 
        ///   +   ``sqlserver-ex`` 
        ///   +   ``sqlserver-web``
        /// </summary>
        [Output("family")]
        public Output<string> Family { get; private set; } = null!;

        /// <summary>
        /// An array of parameter names and values for the parameter update. You must specify at least one parameter name and value.
        ///  For more information about parameter groups, see [Working with parameter groups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html) in the *Amazon RDS User Guide*, or [Working with parameter groups](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_WorkingWithParamGroups.html) in the *Amazon Aurora User Guide*.
        ///    AWS CloudFormation doesn't support specifying an apply method for each individual parameter. The default apply method for each parameter is used.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::RDS::DBParameterGroup` for more information about the expected schema for this property.
        /// </summary>
        [Output("parameters")]
        public Output<object?> Parameters { get; private set; } = null!;

        /// <summary>
        /// Tags to assign to the DB parameter group.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DbParameterGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbParameterGroup(string name, DbParameterGroupArgs args, CustomResourceOptions? options = null)
            : base("aws-native:rds:DbParameterGroup", name, args ?? new DbParameterGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbParameterGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:rds:DbParameterGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "dbParameterGroupName",
                    "description",
                    "family",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbParameterGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbParameterGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DbParameterGroup(name, id, options);
        }
    }

    public sealed class DbParameterGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the DB parameter group.
        ///  Constraints:
        ///   +  Must be 1 to 255 letters, numbers, or hyphens.
        ///   +  First character must be a letter
        ///   +  Can't end with a hyphen or contain two consecutive hyphens
        ///   
        ///  If you don't specify a value for ``DBParameterGroupName`` property, a name is automatically created for the DB parameter group.
        ///   This value is stored as a lowercase string.
        /// </summary>
        [Input("dbParameterGroupName")]
        public Input<string>? DbParameterGroupName { get; set; }

        /// <summary>
        /// Provides the customer-specified description for this DB parameter group.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.
        ///  To list all of the available parameter group families for a DB engine, use the following command:
        ///   ``aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine &lt;engine&gt;`` 
        ///  For example, to list all of the available parameter group families for the MySQL DB engine, use the following command:
        ///   ``aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine mysql`` 
        ///   The output contains duplicates.
        ///   The following are the valid DB engine values:
        ///   +   ``aurora-mysql`` 
        ///   +   ``aurora-postgresql`` 
        ///   +   ``db2-ae`` 
        ///   +   ``db2-se`` 
        ///   +   ``mysql`` 
        ///   +   ``oracle-ee`` 
        ///   +   ``oracle-ee-cdb`` 
        ///   +   ``oracle-se2`` 
        ///   +   ``oracle-se2-cdb`` 
        ///   +   ``postgres`` 
        ///   +   ``sqlserver-ee`` 
        ///   +   ``sqlserver-se`` 
        ///   +   ``sqlserver-ex`` 
        ///   +   ``sqlserver-web``
        /// </summary>
        [Input("family", required: true)]
        public Input<string> Family { get; set; } = null!;

        /// <summary>
        /// An array of parameter names and values for the parameter update. You must specify at least one parameter name and value.
        ///  For more information about parameter groups, see [Working with parameter groups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html) in the *Amazon RDS User Guide*, or [Working with parameter groups](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_WorkingWithParamGroups.html) in the *Amazon Aurora User Guide*.
        ///    AWS CloudFormation doesn't support specifying an apply method for each individual parameter. The default apply method for each parameter is used.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::RDS::DBParameterGroup` for more information about the expected schema for this property.
        /// </summary>
        [Input("parameters")]
        public Input<object>? Parameters { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Tags to assign to the DB parameter group.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public DbParameterGroupArgs()
        {
        }
        public static new DbParameterGroupArgs Empty => new DbParameterGroupArgs();
    }
}
