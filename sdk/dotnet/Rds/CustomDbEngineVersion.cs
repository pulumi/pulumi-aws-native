// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Rds
{
    /// <summary>
    /// Creates a custom DB engine version (CEV).
    /// </summary>
    [AwsNativeResourceType("aws-native:rds:CustomDbEngineVersion")]
    public partial class CustomDbEngineVersion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is ``my-custom-installation-files``.
        /// </summary>
        [Output("databaseInstallationFilesS3BucketName")]
        public Output<string?> DatabaseInstallationFilesS3BucketName { get; private set; } = null!;

        /// <summary>
        /// The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is ``123456789012/cev1``. If this setting isn't specified, no prefix is assumed.
        /// </summary>
        [Output("databaseInstallationFilesS3Prefix")]
        public Output<string?> DatabaseInstallationFilesS3Prefix { get; private set; } = null!;

        /// <summary>
        /// The ARN of the custom engine version.
        /// </summary>
        [Output("dbEngineVersionArn")]
        public Output<string> DbEngineVersionArn { get; private set; } = null!;

        /// <summary>
        /// An optional description of your CEV.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The database engine to use for your custom engine version (CEV).
        ///  Valid values:
        ///   +   ``custom-oracle-ee`` 
        ///   +   ``custom-oracle-ee-cdb``
        /// </summary>
        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        /// <summary>
        /// The name of your CEV. The name format is ``major version.customized_string``. For example, a valid CEV name is ``19.my_cev1``. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of ``Engine`` and ``EngineVersion`` is unique per customer per Region.
        ///   *Constraints:* Minimum length is 1. Maximum length is 60.
        ///   *Pattern:* ``^[a-z0-9_.-]{1,60$``}
        /// </summary>
        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        /// <summary>
        /// A value that indicates the ID of the AMI.
        /// </summary>
        [Output("imageId")]
        public Output<string?> ImageId { get; private set; } = null!;

        /// <summary>
        /// The AWS KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.
        ///  If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the *Key Management Service Developer Guide*.
        ///  You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
        ///  The following JSON fields are valid:
        ///   + MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. + databaseInstallationFileNames Ordered list of installation files for the CEV. + opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. + psuRuPatchFileNames The PSU and RU patches for this CEV. + OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches. 
        ///  For more information, see [Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the *Amazon RDS User Guide*.
        /// </summary>
        [Output("manifest")]
        public Output<string?> Manifest { get; private set; } = null!;

        /// <summary>
        /// The ARN of a CEV to use as a source for creating a new CEV. You can specify a different Amazon Machine Imagine (AMI) by using either ``Source`` or ``UseAwsProvidedLatestImage``. You can't specify a different JSON manifest when you specify ``SourceCustomDbEngineVersionIdentifier``.
        /// </summary>
        [Output("sourceCustomDbEngineVersionIdentifier")]
        public Output<string?> SourceCustomDbEngineVersionIdentifier { get; private set; } = null!;

        /// <summary>
        /// A value that indicates the status of a custom engine version (CEV).
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Rds.CustomDbEngineVersionStatus?> Status { get; private set; } = null!;

        /// <summary>
        /// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to use the latest service-provided Amazon Machine Image (AMI) for the CEV. If you specify ``UseAwsProvidedLatestImage``, you can't also specify ``ImageId``.
        /// </summary>
        [Output("useAwsProvidedLatestImage")]
        public Output<bool?> UseAwsProvidedLatestImage { get; private set; } = null!;


        /// <summary>
        /// Create a CustomDbEngineVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomDbEngineVersion(string name, CustomDbEngineVersionArgs args, CustomResourceOptions? options = null)
            : base("aws-native:rds:CustomDbEngineVersion", name, args ?? new CustomDbEngineVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomDbEngineVersion(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:rds:CustomDbEngineVersion", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "databaseInstallationFilesS3BucketName",
                    "databaseInstallationFilesS3Prefix",
                    "engine",
                    "engineVersion",
                    "imageId",
                    "kmsKeyId",
                    "manifest",
                    "sourceCustomDbEngineVersionIdentifier",
                    "useAwsProvidedLatestImage",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomDbEngineVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomDbEngineVersion Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CustomDbEngineVersion(name, id, options);
        }
    }

    public sealed class CustomDbEngineVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is ``my-custom-installation-files``.
        /// </summary>
        [Input("databaseInstallationFilesS3BucketName")]
        public Input<string>? DatabaseInstallationFilesS3BucketName { get; set; }

        /// <summary>
        /// The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is ``123456789012/cev1``. If this setting isn't specified, no prefix is assumed.
        /// </summary>
        [Input("databaseInstallationFilesS3Prefix")]
        public Input<string>? DatabaseInstallationFilesS3Prefix { get; set; }

        /// <summary>
        /// An optional description of your CEV.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The database engine to use for your custom engine version (CEV).
        ///  Valid values:
        ///   +   ``custom-oracle-ee`` 
        ///   +   ``custom-oracle-ee-cdb``
        /// </summary>
        [Input("engine", required: true)]
        public Input<string> Engine { get; set; } = null!;

        /// <summary>
        /// The name of your CEV. The name format is ``major version.customized_string``. For example, a valid CEV name is ``19.my_cev1``. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of ``Engine`` and ``EngineVersion`` is unique per customer per Region.
        ///   *Constraints:* Minimum length is 1. Maximum length is 60.
        ///   *Pattern:* ``^[a-z0-9_.-]{1,60$``}
        /// </summary>
        [Input("engineVersion", required: true)]
        public Input<string> EngineVersion { get; set; } = null!;

        /// <summary>
        /// A value that indicates the ID of the AMI.
        /// </summary>
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        /// <summary>
        /// The AWS KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.
        ///  If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the *Key Management Service Developer Guide*.
        ///  You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
        ///  The following JSON fields are valid:
        ///   + MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. + databaseInstallationFileNames Ordered list of installation files for the CEV. + opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. + psuRuPatchFileNames The PSU and RU patches for this CEV. + OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches. 
        ///  For more information, see [Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the *Amazon RDS User Guide*.
        /// </summary>
        [Input("manifest")]
        public Input<string>? Manifest { get; set; }

        /// <summary>
        /// The ARN of a CEV to use as a source for creating a new CEV. You can specify a different Amazon Machine Imagine (AMI) by using either ``Source`` or ``UseAwsProvidedLatestImage``. You can't specify a different JSON manifest when you specify ``SourceCustomDbEngineVersionIdentifier``.
        /// </summary>
        [Input("sourceCustomDbEngineVersionIdentifier")]
        public Input<string>? SourceCustomDbEngineVersionIdentifier { get; set; }

        /// <summary>
        /// A value that indicates the status of a custom engine version (CEV).
        /// </summary>
        [Input("status")]
        public Input<Pulumi.AwsNative.Rds.CustomDbEngineVersionStatus>? Status { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies whether to use the latest service-provided Amazon Machine Image (AMI) for the CEV. If you specify ``UseAwsProvidedLatestImage``, you can't also specify ``ImageId``.
        /// </summary>
        [Input("useAwsProvidedLatestImage")]
        public Input<bool>? UseAwsProvidedLatestImage { get; set; }

        public CustomDbEngineVersionArgs()
        {
        }
        public static new CustomDbEngineVersionArgs Empty => new CustomDbEngineVersionArgs();
    }
}
