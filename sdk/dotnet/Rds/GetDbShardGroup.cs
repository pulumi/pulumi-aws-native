// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Rds
{
    public static class GetDbShardGroup
    {
        /// <summary>
        /// The AWS::RDS::DBShardGroup resource creates an Amazon Aurora Limitless DB Shard Group.
        /// </summary>
        public static Task<GetDbShardGroupResult> InvokeAsync(GetDbShardGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbShardGroupResult>("aws-native:rds:getDbShardGroup", args ?? new GetDbShardGroupArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::RDS::DBShardGroup resource creates an Amazon Aurora Limitless DB Shard Group.
        /// </summary>
        public static Output<GetDbShardGroupResult> Invoke(GetDbShardGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbShardGroupResult>("aws-native:rds:getDbShardGroup", args ?? new GetDbShardGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::RDS::DBShardGroup resource creates an Amazon Aurora Limitless DB Shard Group.
        /// </summary>
        public static Output<GetDbShardGroupResult> Invoke(GetDbShardGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbShardGroupResult>("aws-native:rds:getDbShardGroup", args ?? new GetDbShardGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbShardGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DB shard group.
        /// </summary>
        [Input("dbShardGroupIdentifier", required: true)]
        public string DbShardGroupIdentifier { get; set; } = null!;

        public GetDbShardGroupArgs()
        {
        }
        public static new GetDbShardGroupArgs Empty => new GetDbShardGroupArgs();
    }

    public sealed class GetDbShardGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DB shard group.
        /// </summary>
        [Input("dbShardGroupIdentifier", required: true)]
        public Input<string> DbShardGroupIdentifier { get; set; } = null!;

        public GetDbShardGroupInvokeArgs()
        {
        }
        public static new GetDbShardGroupInvokeArgs Empty => new GetDbShardGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbShardGroupResult
    {
        /// <summary>
        /// Specifies whether to create standby instances for the DB shard group.
        /// </summary>
        public readonly int? ComputeRedundancy;
        /// <summary>
        /// The Amazon Web Services Region-unique, immutable identifier for the DB shard group.
        /// </summary>
        public readonly string? DbShardGroupResourceId;
        /// <summary>
        /// The connection endpoint for the DB shard group.
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// The maximum capacity of the DB shard group in Aurora capacity units (ACUs).
        /// </summary>
        public readonly double? MaxAcu;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetDbShardGroupResult(
            int? computeRedundancy,

            string? dbShardGroupResourceId,

            string? endpoint,

            double? maxAcu,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            ComputeRedundancy = computeRedundancy;
            DbShardGroupResourceId = dbShardGroupResourceId;
            Endpoint = endpoint;
            MaxAcu = maxAcu;
            Tags = tags;
        }
    }
}
