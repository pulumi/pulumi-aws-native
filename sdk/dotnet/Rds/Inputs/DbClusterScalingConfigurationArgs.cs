// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Rds.Inputs
{

    /// <summary>
    /// The ``ScalingConfiguration`` property type specifies the scaling configuration of an Aurora Serverless v1 DB cluster. 
    ///  For more information, see [Using Amazon Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the *Amazon Aurora User Guide*.
    ///  This property is only supported for Aurora Serverless v1. For Aurora Serverless v2, Use the ``ServerlessV2ScalingConfiguration`` property.
    ///  Valid for: Aurora Serverless v1 DB clusters only
    /// </summary>
    public sealed class DbClusterScalingConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether to allow or disallow automatic pause for an Aurora DB cluster in ``serverless`` DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
        ///   If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it.
        /// </summary>
        [Input("autoPause")]
        public Input<bool>? AutoPause { get; set; }

        /// <summary>
        /// The maximum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.
        ///  For Aurora MySQL, valid capacity values are ``1``, ``2``, ``4``, ``8``, ``16``, ``32``, ``64``, ``128``, and ``256``.
        ///  For Aurora PostgreSQL, valid capacity values are ``2``, ``4``, ``8``, ``16``, ``32``, ``64``, ``192``, and ``384``.
        ///  The maximum capacity must be greater than or equal to the minimum capacity.
        /// </summary>
        [Input("maxCapacity")]
        public Input<int>? MaxCapacity { get; set; }

        /// <summary>
        /// The minimum capacity for an Aurora DB cluster in ``serverless`` DB engine mode.
        ///  For Aurora MySQL, valid capacity values are ``1``, ``2``, ``4``, ``8``, ``16``, ``32``, ``64``, ``128``, and ``256``.
        ///  For Aurora PostgreSQL, valid capacity values are ``2``, ``4``, ``8``, ``16``, ``32``, ``64``, ``192``, and ``384``.
        ///  The minimum capacity must be less than or equal to the maximum capacity.
        /// </summary>
        [Input("minCapacity")]
        public Input<int>? MinCapacity { get; set; }

        /// <summary>
        /// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action. The default is 300.
        ///  Specify a value between 60 and 600 seconds.
        /// </summary>
        [Input("secondsBeforeTimeout")]
        public Input<int>? SecondsBeforeTimeout { get; set; }

        /// <summary>
        /// The time, in seconds, before an Aurora DB cluster in ``serverless`` mode is paused.
        ///  Specify a value between 300 and 86,400 seconds.
        /// </summary>
        [Input("secondsUntilAutoPause")]
        public Input<int>? SecondsUntilAutoPause { get; set; }

        /// <summary>
        /// The action to take when the timeout is reached, either ``ForceApplyCapacityChange`` or ``RollbackCapacityChange``.
        ///   ``ForceApplyCapacityChange`` sets the capacity to the specified value as soon as possible.
        ///   ``RollbackCapacityChange``, the default, ignores the capacity change if a scaling point isn't found in the timeout period.
        ///   If you specify ``ForceApplyCapacityChange``, connections that prevent Aurora Serverless v1 from finding a scaling point might be dropped.
        ///   For more information, see [Autoscaling for Aurora Serverless v1](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling) in the *Amazon Aurora User Guide*.
        /// </summary>
        [Input("timeoutAction")]
        public Input<string>? TimeoutAction { get; set; }

        public DbClusterScalingConfigurationArgs()
        {
        }
        public static new DbClusterScalingConfigurationArgs Empty => new DbClusterScalingConfigurationArgs();
    }
}
