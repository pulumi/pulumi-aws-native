// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WafRegional
{
    public static class GetGeoMatchSet
    {
        /// <summary>
        /// Resource Type definition for AWS::WAFRegional::GeoMatchSet
        /// </summary>
        public static Task<GetGeoMatchSetResult> InvokeAsync(GetGeoMatchSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGeoMatchSetResult>("aws-native:wafregional:getGeoMatchSet", args ?? new GetGeoMatchSetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::WAFRegional::GeoMatchSet
        /// </summary>
        public static Output<GetGeoMatchSetResult> Invoke(GetGeoMatchSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGeoMatchSetResult>("aws-native:wafregional:getGeoMatchSet", args ?? new GetGeoMatchSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGeoMatchSetArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetGeoMatchSetArgs()
        {
        }
        public static new GetGeoMatchSetArgs Empty => new GetGeoMatchSetArgs();
    }

    public sealed class GetGeoMatchSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetGeoMatchSetInvokeArgs()
        {
        }
        public static new GetGeoMatchSetInvokeArgs Empty => new GetGeoMatchSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetGeoMatchSetResult
    {
        public readonly ImmutableArray<Outputs.GeoMatchSetGeoMatchConstraint> GeoMatchConstraints;
        public readonly string? Id;

        [OutputConstructor]
        private GetGeoMatchSetResult(
            ImmutableArray<Outputs.GeoMatchSetGeoMatchConstraint> geoMatchConstraints,

            string? id)
        {
            GeoMatchConstraints = geoMatchConstraints;
            Id = id;
        }
    }
}
