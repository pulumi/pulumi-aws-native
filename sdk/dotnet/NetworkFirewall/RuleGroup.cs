// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkFirewall
{
    /// <summary>
    /// Resource type definition for AWS::NetworkFirewall::RuleGroup
    /// </summary>
    [AwsNativeResourceType("aws-native:networkfirewall:RuleGroup")]
    public partial class RuleGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The maximum operating resources that this rule group can use. You can't change a rule group's capacity setting after you create the rule group. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group.
        /// </summary>
        [Output("capacity")]
        public Output<int> Capacity { get; private set; } = null!;

        /// <summary>
        /// A description of the rule group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The object that defines the rules in a rule group.
        /// 
        /// AWS Network Firewall uses a rule group to inspect and control network traffic. You define stateless rule groups to inspect individual packets and you define stateful rule groups to inspect packets in the context of their traffic flow.
        /// 
        /// To use a rule group, you include it by reference in an Network Firewall firewall policy, then you use the policy in a firewall. You can reference a rule group from more than one firewall policy, and you can use a firewall policy in more than one firewall.
        /// </summary>
        [Output("ruleGroup")]
        public Output<Outputs.RuleGroup?> RuleGroupValue { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the `RuleGroup` .
        /// </summary>
        [Output("ruleGroupArn")]
        public Output<string> RuleGroupArn { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the `RuleGroup` resource.
        /// </summary>
        [Output("ruleGroupId")]
        public Output<string> RuleGroupId { get; private set; } = null!;

        /// <summary>
        /// The descriptive name of the rule group. You can't change the name of a rule group after you create it.
        /// </summary>
        [Output("ruleGroupName")]
        public Output<string> RuleGroupName { get; private set; } = null!;

        /// <summary>
        /// A key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as "environment") and the tag value represents a specific value within that category (such as "test," "development," or "production"). You can add up to 50 tags to each AWS resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains
        /// stateless rules. If it is stateful, it contains stateful rules.
        /// </summary>
        [Output("type")]
        public Output<Pulumi.AwsNative.NetworkFirewall.RuleGroupTypeEnum> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RuleGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RuleGroup(string name, RuleGroupArgs args, CustomResourceOptions? options = null)
            : base("aws-native:networkfirewall:RuleGroup", name, args ?? new RuleGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RuleGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:networkfirewall:RuleGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "capacity",
                    "ruleGroupName",
                    "type",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RuleGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RuleGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RuleGroup(name, id, options);
        }
    }

    public sealed class RuleGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum operating resources that this rule group can use. You can't change a rule group's capacity setting after you create the rule group. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group.
        /// </summary>
        [Input("capacity", required: true)]
        public Input<int> Capacity { get; set; } = null!;

        /// <summary>
        /// A description of the rule group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The object that defines the rules in a rule group.
        /// 
        /// AWS Network Firewall uses a rule group to inspect and control network traffic. You define stateless rule groups to inspect individual packets and you define stateful rule groups to inspect packets in the context of their traffic flow.
        /// 
        /// To use a rule group, you include it by reference in an Network Firewall firewall policy, then you use the policy in a firewall. You can reference a rule group from more than one firewall policy, and you can use a firewall policy in more than one firewall.
        /// </summary>
        [Input("ruleGroup")]
        public Input<Inputs.RuleGroupArgs>? RuleGroupValue { get; set; }

        /// <summary>
        /// The descriptive name of the rule group. You can't change the name of a rule group after you create it.
        /// </summary>
        [Input("ruleGroupName")]
        public Input<string>? RuleGroupName { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as "environment") and the tag value represents a specific value within that category (such as "test," "development," or "production"). You can add up to 50 tags to each AWS resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains
        /// stateless rules. If it is stateful, it contains stateful rules.
        /// </summary>
        [Input("type", required: true)]
        public Input<Pulumi.AwsNative.NetworkFirewall.RuleGroupTypeEnum> Type { get; set; } = null!;

        public RuleGroupArgs()
        {
        }
        public static new RuleGroupArgs Empty => new RuleGroupArgs();
    }
}
