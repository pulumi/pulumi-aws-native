// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkFirewall
{
    public static class GetRuleGroup
    {
        /// <summary>
        /// Resource type definition for AWS::NetworkFirewall::RuleGroup
        /// </summary>
        public static Task<GetRuleGroupResult> InvokeAsync(GetRuleGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRuleGroupResult>("aws-native:networkfirewall:getRuleGroup", args ?? new GetRuleGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Resource type definition for AWS::NetworkFirewall::RuleGroup
        /// </summary>
        public static Output<GetRuleGroupResult> Invoke(GetRuleGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRuleGroupResult>("aws-native:networkfirewall:getRuleGroup", args ?? new GetRuleGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRuleGroupArgs : Pulumi.InvokeArgs
    {
        [Input("ruleGroupArn", required: true)]
        public string RuleGroupArn { get; set; } = null!;

        public GetRuleGroupArgs()
        {
        }
    }

    public sealed class GetRuleGroupInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("ruleGroupArn", required: true)]
        public Input<string> RuleGroupArn { get; set; } = null!;

        public GetRuleGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRuleGroupResult
    {
        public readonly string? Description;
        public readonly Outputs.RuleGroup? RuleGroupValue;
        public readonly string? RuleGroupArn;
        public readonly string? RuleGroupId;
        public readonly ImmutableArray<Outputs.RuleGroupTag> Tags;

        [OutputConstructor]
        private GetRuleGroupResult(
            string? description,

            Outputs.RuleGroup? ruleGroup,

            string? ruleGroupArn,

            string? ruleGroupId,

            ImmutableArray<Outputs.RuleGroupTag> tags)
        {
            Description = description;
            RuleGroupValue = ruleGroup;
            RuleGroupArn = ruleGroupArn;
            RuleGroupId = ruleGroupId;
            Tags = tags;
        }
    }
}
