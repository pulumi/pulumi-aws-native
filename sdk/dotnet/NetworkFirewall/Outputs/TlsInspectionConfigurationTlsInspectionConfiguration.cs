// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkFirewall.Outputs
{

    [OutputType]
    public sealed class TlsInspectionConfigurationTlsInspectionConfiguration
    {
        /// <summary>
        /// Configures the AWS Certificate Manager certificates and scope that Network Firewall uses to decrypt and re-encrypt traffic using a [TLSInspectionConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-tlsinspectionconfiguration.html) . You can configure `ServerCertificates` for inbound SSL/TLS inspection, a `CertificateAuthorityArn` for outbound SSL/TLS inspection, or both. For information about working with certificates for TLS inspection, see [Using SSL/TLS server certficiates with TLS inspection configurations](https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection-certificate-requirements.html) in the *AWS Network Firewall Developer Guide* .
        /// 
        /// &gt; If a server certificate that's associated with your [TLSInspectionConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-tlsinspectionconfiguration.html) is revoked, deleted, or expired it can result in client-side TLS errors.
        /// </summary>
        public readonly ImmutableArray<Outputs.TlsInspectionConfigurationServerCertificateConfiguration> ServerCertificateConfigurations;

        [OutputConstructor]
        private TlsInspectionConfigurationTlsInspectionConfiguration(ImmutableArray<Outputs.TlsInspectionConfigurationServerCertificateConfiguration> serverCertificateConfigurations)
        {
            ServerCertificateConfigurations = serverCertificateConfigurations;
        }
    }
}
