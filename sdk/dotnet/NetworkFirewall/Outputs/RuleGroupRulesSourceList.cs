// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkFirewall.Outputs
{

    [OutputType]
    public sealed class RuleGroupRulesSourceList
    {
        /// <summary>
        /// Whether you want to apply allow, reject, alert, or drop behavior to the domains in your target list.
        /// 
        /// &gt; When logging is enabled and you choose Alert, traffic that matches the domain specifications generates an alert in the firewall's logs. Then, traffic either passes, is rejected, or drops based on other rules in the firewall policy.
        /// </summary>
        public readonly Pulumi.AwsNative.NetworkFirewall.RuleGroupGeneratedRulesType GeneratedRulesType;
        /// <summary>
        /// The types of targets to inspect for. Valid values are `TLS_SNI` and `HTTP_HOST` .
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.NetworkFirewall.RuleGroupTargetType> TargetTypes;
        /// <summary>
        /// The domains that you want to inspect for in your traffic flows. Valid domain specifications are the following:
        /// 
        /// - Explicit names. For example, `abc.example.com` matches only the domain `abc.example.com` .
        /// - Names that use a domain wildcard, which you indicate with an initial ' `.` '. For example, `.example.com` matches `example.com` and matches all subdomains of `example.com` , such as `abc.example.com` and `www.example.com` .
        /// </summary>
        public readonly ImmutableArray<string> Targets;

        [OutputConstructor]
        private RuleGroupRulesSourceList(
            Pulumi.AwsNative.NetworkFirewall.RuleGroupGeneratedRulesType generatedRulesType,

            ImmutableArray<Pulumi.AwsNative.NetworkFirewall.RuleGroupTargetType> targetTypes,

            ImmutableArray<string> targets)
        {
            GeneratedRulesType = generatedRulesType;
            TargetTypes = targetTypes;
            Targets = targets;
        }
    }
}
