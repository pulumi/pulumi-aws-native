// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkFirewall.Outputs
{

    [OutputType]
    public sealed class TlsInspectionConfigurationServerCertificateScope
    {
        /// <summary>
        /// A single port range specification. This is used for source and destination port ranges in the stateless rule [MatchAttributes](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-networkfirewall-rulegroup-matchattributes.html) , `SourcePorts` , and `DestinationPorts` settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.TlsInspectionConfigurationPortRange> DestinationPorts;
        /// <summary>
        /// A single IP address specification. This is used in the [MatchAttributes](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-networkfirewall-rulegroup-matchattributes.html) source and destination settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.TlsInspectionConfigurationAddress> Destinations;
        /// <summary>
        /// The protocols to decrypt for inspection, specified using each protocol's assigned internet protocol number
        /// (IANA). Network Firewall currently supports only TCP.
        /// </summary>
        public readonly ImmutableArray<int> Protocols;
        /// <summary>
        /// The source ports to decrypt for inspection, in Transmission Control Protocol (TCP) format. If not specified, this matches with any source port.
        /// 
        /// You can specify individual ports, for example `1994` , and you can specify port ranges, such as `1990:1994` .
        /// </summary>
        public readonly ImmutableArray<Outputs.TlsInspectionConfigurationPortRange> SourcePorts;
        /// <summary>
        /// The source IP addresses and address ranges to decrypt for inspection, in CIDR notation. If not specified, this
        /// matches with any source address.
        /// </summary>
        public readonly ImmutableArray<Outputs.TlsInspectionConfigurationAddress> Sources;

        [OutputConstructor]
        private TlsInspectionConfigurationServerCertificateScope(
            ImmutableArray<Outputs.TlsInspectionConfigurationPortRange> destinationPorts,

            ImmutableArray<Outputs.TlsInspectionConfigurationAddress> destinations,

            ImmutableArray<int> protocols,

            ImmutableArray<Outputs.TlsInspectionConfigurationPortRange> sourcePorts,

            ImmutableArray<Outputs.TlsInspectionConfigurationAddress> sources)
        {
            DestinationPorts = destinationPorts;
            Destinations = destinations;
            Protocols = protocols;
            SourcePorts = sourcePorts;
            Sources = sources;
        }
    }
}
