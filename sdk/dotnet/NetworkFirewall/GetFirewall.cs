// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkFirewall
{
    public static class GetFirewall
    {
        /// <summary>
        /// Resource type definition for AWS::NetworkFirewall::Firewall
        /// </summary>
        public static Task<GetFirewallResult> InvokeAsync(GetFirewallArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFirewallResult>("aws-native:networkfirewall:getFirewall", args ?? new GetFirewallArgs(), options.WithDefaults());

        /// <summary>
        /// Resource type definition for AWS::NetworkFirewall::Firewall
        /// </summary>
        public static Output<GetFirewallResult> Invoke(GetFirewallInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFirewallResult>("aws-native:networkfirewall:getFirewall", args ?? new GetFirewallInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallArgs : Pulumi.InvokeArgs
    {
        [Input("firewallArn", required: true)]
        public string FirewallArn { get; set; } = null!;

        public GetFirewallArgs()
        {
        }
    }

    public sealed class GetFirewallInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("firewallArn", required: true)]
        public Input<string> FirewallArn { get; set; } = null!;

        public GetFirewallInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFirewallResult
    {
        public readonly bool? DeleteProtection;
        public readonly string? Description;
        public readonly ImmutableArray<string> EndpointIds;
        public readonly string? FirewallArn;
        public readonly string? FirewallId;
        public readonly string? FirewallPolicyArn;
        public readonly bool? FirewallPolicyChangeProtection;
        public readonly bool? SubnetChangeProtection;
        public readonly ImmutableArray<Outputs.FirewallSubnetMapping> SubnetMappings;
        public readonly ImmutableArray<Outputs.FirewallTag> Tags;

        [OutputConstructor]
        private GetFirewallResult(
            bool? deleteProtection,

            string? description,

            ImmutableArray<string> endpointIds,

            string? firewallArn,

            string? firewallId,

            string? firewallPolicyArn,

            bool? firewallPolicyChangeProtection,

            bool? subnetChangeProtection,

            ImmutableArray<Outputs.FirewallSubnetMapping> subnetMappings,

            ImmutableArray<Outputs.FirewallTag> tags)
        {
            DeleteProtection = deleteProtection;
            Description = description;
            EndpointIds = endpointIds;
            FirewallArn = firewallArn;
            FirewallId = firewallId;
            FirewallPolicyArn = firewallPolicyArn;
            FirewallPolicyChangeProtection = firewallPolicyChangeProtection;
            SubnetChangeProtection = subnetChangeProtection;
            SubnetMappings = subnetMappings;
            Tags = tags;
        }
    }
}
