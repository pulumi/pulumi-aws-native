// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ImageBuilder.Inputs
{

    /// <summary>
    /// The distributions of the distribution configuration.
    /// </summary>
    public sealed class DistributionConfigurationDistributionArgs : global::Pulumi.ResourceArgs
    {
        [Input("amiDistributionConfiguration")]
        public Input<Inputs.DistributionConfigurationAmiDistributionConfigurationArgs>? AmiDistributionConfiguration { get; set; }

        [Input("containerDistributionConfiguration")]
        public Input<Inputs.DistributionConfigurationContainerDistributionConfigurationArgs>? ContainerDistributionConfiguration { get; set; }

        [Input("fastLaunchConfigurations")]
        private InputList<Inputs.DistributionConfigurationFastLaunchConfigurationArgs>? _fastLaunchConfigurations;

        /// <summary>
        /// The Windows faster-launching configurations to use for AMI distribution.
        /// </summary>
        public InputList<Inputs.DistributionConfigurationFastLaunchConfigurationArgs> FastLaunchConfigurations
        {
            get => _fastLaunchConfigurations ?? (_fastLaunchConfigurations = new InputList<Inputs.DistributionConfigurationFastLaunchConfigurationArgs>());
            set => _fastLaunchConfigurations = value;
        }

        [Input("launchTemplateConfigurations")]
        private InputList<Inputs.DistributionConfigurationLaunchTemplateConfigurationArgs>? _launchTemplateConfigurations;

        /// <summary>
        /// A group of launchTemplateConfiguration settings that apply to image distribution.
        /// </summary>
        public InputList<Inputs.DistributionConfigurationLaunchTemplateConfigurationArgs> LaunchTemplateConfigurations
        {
            get => _launchTemplateConfigurations ?? (_launchTemplateConfigurations = new InputList<Inputs.DistributionConfigurationLaunchTemplateConfigurationArgs>());
            set => _launchTemplateConfigurations = value;
        }

        [Input("licenseConfigurationArns")]
        private InputList<string>? _licenseConfigurationArns;

        /// <summary>
        /// The License Manager Configuration to associate with the AMI in the specified Region.
        /// </summary>
        public InputList<string> LicenseConfigurationArns
        {
            get => _licenseConfigurationArns ?? (_licenseConfigurationArns = new InputList<string>());
            set => _licenseConfigurationArns = value;
        }

        /// <summary>
        /// region
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public DistributionConfigurationDistributionArgs()
        {
        }
        public static new DistributionConfigurationDistributionArgs Empty => new DistributionConfigurationDistributionArgs();
    }
}
