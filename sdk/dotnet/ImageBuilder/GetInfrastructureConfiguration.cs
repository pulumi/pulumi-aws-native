// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ImageBuilder
{
    public static class GetInfrastructureConfiguration
    {
        /// <summary>
        /// Resource schema for AWS::ImageBuilder::InfrastructureConfiguration
        /// </summary>
        public static Task<GetInfrastructureConfigurationResult> InvokeAsync(GetInfrastructureConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInfrastructureConfigurationResult>("aws-native:imagebuilder:getInfrastructureConfiguration", args ?? new GetInfrastructureConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::ImageBuilder::InfrastructureConfiguration
        /// </summary>
        public static Output<GetInfrastructureConfigurationResult> Invoke(GetInfrastructureConfigurationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInfrastructureConfigurationResult>("aws-native:imagebuilder:getInfrastructureConfiguration", args ?? new GetInfrastructureConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInfrastructureConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the infrastructure configuration.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetInfrastructureConfigurationArgs()
        {
        }
    }

    public sealed class GetInfrastructureConfigurationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the infrastructure configuration.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetInfrastructureConfigurationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInfrastructureConfigurationResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the infrastructure configuration.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The description of the infrastructure configuration.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The instance metadata option settings for the infrastructure configuration.
        /// </summary>
        public readonly Outputs.InfrastructureConfigurationInstanceMetadataOptions? InstanceMetadataOptions;
        /// <summary>
        /// The instance profile of the infrastructure configuration.
        /// </summary>
        public readonly string? InstanceProfileName;
        /// <summary>
        /// The instance types of the infrastructure configuration.
        /// </summary>
        public readonly ImmutableArray<string> InstanceTypes;
        /// <summary>
        /// The EC2 key pair of the infrastructure configuration..
        /// </summary>
        public readonly string? KeyPair;
        /// <summary>
        /// The logging configuration of the infrastructure configuration.
        /// </summary>
        public readonly Outputs.InfrastructureConfigurationLogging? Logging;
        /// <summary>
        /// The tags attached to the resource created by Image Builder.
        /// </summary>
        public readonly object? ResourceTags;
        /// <summary>
        /// The security group IDs of the infrastructure configuration.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// The SNS Topic Amazon Resource Name (ARN) of the infrastructure configuration.
        /// </summary>
        public readonly string? SnsTopicArn;
        /// <summary>
        /// The subnet ID of the infrastructure configuration.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The tags associated with the component.
        /// </summary>
        public readonly object? Tags;
        /// <summary>
        /// The terminate instance on failure configuration of the infrastructure configuration.
        /// </summary>
        public readonly bool? TerminateInstanceOnFailure;

        [OutputConstructor]
        private GetInfrastructureConfigurationResult(
            string? arn,

            string? description,

            Outputs.InfrastructureConfigurationInstanceMetadataOptions? instanceMetadataOptions,

            string? instanceProfileName,

            ImmutableArray<string> instanceTypes,

            string? keyPair,

            Outputs.InfrastructureConfigurationLogging? logging,

            object? resourceTags,

            ImmutableArray<string> securityGroupIds,

            string? snsTopicArn,

            string? subnetId,

            object? tags,

            bool? terminateInstanceOnFailure)
        {
            Arn = arn;
            Description = description;
            InstanceMetadataOptions = instanceMetadataOptions;
            InstanceProfileName = instanceProfileName;
            InstanceTypes = instanceTypes;
            KeyPair = keyPair;
            Logging = logging;
            ResourceTags = resourceTags;
            SecurityGroupIds = securityGroupIds;
            SnsTopicArn = snsTopicArn;
            SubnetId = subnetId;
            Tags = tags;
            TerminateInstanceOnFailure = terminateInstanceOnFailure;
        }
    }
}
