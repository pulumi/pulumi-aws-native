// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ImageBuilder
{
    public static class GetImagePipeline
    {
        /// <summary>
        /// Resource schema for AWS::ImageBuilder::ImagePipeline
        /// </summary>
        public static Task<GetImagePipelineResult> InvokeAsync(GetImagePipelineArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetImagePipelineResult>("aws-native:imagebuilder:getImagePipeline", args ?? new GetImagePipelineArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::ImageBuilder::ImagePipeline
        /// </summary>
        public static Output<GetImagePipelineResult> Invoke(GetImagePipelineInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetImagePipelineResult>("aws-native:imagebuilder:getImagePipeline", args ?? new GetImagePipelineInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImagePipelineArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the image pipeline.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetImagePipelineArgs()
        {
        }
    }

    public sealed class GetImagePipelineInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the image pipeline.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetImagePipelineInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetImagePipelineResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the image pipeline.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
        /// </summary>
        public readonly string? ContainerRecipeArn;
        /// <summary>
        /// The description of the image pipeline.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.
        /// </summary>
        public readonly string? DistributionConfigurationArn;
        /// <summary>
        /// Collects additional information about the image being created, including the operating system (OS) version and package list.
        /// </summary>
        public readonly bool? EnhancedImageMetadataEnabled;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
        /// </summary>
        public readonly string? ImageRecipeArn;
        /// <summary>
        /// The image tests configuration of the image pipeline.
        /// </summary>
        public readonly Outputs.ImagePipelineImageTestsConfiguration? ImageTestsConfiguration;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.
        /// </summary>
        public readonly string? InfrastructureConfigurationArn;
        /// <summary>
        /// The schedule of the image pipeline.
        /// </summary>
        public readonly Outputs.ImagePipelineSchedule? Schedule;
        /// <summary>
        /// The status of the image pipeline.
        /// </summary>
        public readonly Pulumi.AwsNative.ImageBuilder.ImagePipelineStatus? Status;
        /// <summary>
        /// The tags of this image pipeline.
        /// </summary>
        public readonly object? Tags;

        [OutputConstructor]
        private GetImagePipelineResult(
            string? arn,

            string? containerRecipeArn,

            string? description,

            string? distributionConfigurationArn,

            bool? enhancedImageMetadataEnabled,

            string? imageRecipeArn,

            Outputs.ImagePipelineImageTestsConfiguration? imageTestsConfiguration,

            string? infrastructureConfigurationArn,

            Outputs.ImagePipelineSchedule? schedule,

            Pulumi.AwsNative.ImageBuilder.ImagePipelineStatus? status,

            object? tags)
        {
            Arn = arn;
            ContainerRecipeArn = containerRecipeArn;
            Description = description;
            DistributionConfigurationArn = distributionConfigurationArn;
            EnhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            ImageRecipeArn = imageRecipeArn;
            ImageTestsConfiguration = imageTestsConfiguration;
            InfrastructureConfigurationArn = infrastructureConfigurationArn;
            Schedule = schedule;
            Status = status;
            Tags = tags;
        }
    }
}
