// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationInsights.Outputs
{

    /// <summary>
    /// The monitoring setting of the component.
    /// </summary>
    [OutputType]
    public sealed class ApplicationComponentMonitoringSetting
    {
        /// <summary>
        /// The ARN of the compnonent.
        /// </summary>
        public readonly string? ComponentARN;
        /// <summary>
        /// The component monitoring configuration mode.
        /// </summary>
        public readonly Pulumi.AwsNative.ApplicationInsights.ApplicationComponentMonitoringSettingComponentConfigurationMode ComponentConfigurationMode;
        /// <summary>
        /// The name of the component.
        /// </summary>
        public readonly string? ComponentName;
        /// <summary>
        /// The monitoring configuration of the component.
        /// </summary>
        public readonly Outputs.ApplicationComponentConfiguration? CustomComponentConfiguration;
        /// <summary>
        /// The overwritten settings on default component monitoring configuration.
        /// </summary>
        public readonly Outputs.ApplicationComponentConfiguration? DefaultOverwriteComponentConfiguration;
        /// <summary>
        /// The tier of the application component.
        /// </summary>
        public readonly string Tier;

        [OutputConstructor]
        private ApplicationComponentMonitoringSetting(
            string? componentARN,

            Pulumi.AwsNative.ApplicationInsights.ApplicationComponentMonitoringSettingComponentConfigurationMode componentConfigurationMode,

            string? componentName,

            Outputs.ApplicationComponentConfiguration? customComponentConfiguration,

            Outputs.ApplicationComponentConfiguration? defaultOverwriteComponentConfiguration,

            string tier)
        {
            ComponentARN = componentARN;
            ComponentConfigurationMode = componentConfigurationMode;
            ComponentName = componentName;
            CustomComponentConfiguration = customComponentConfiguration;
            DefaultOverwriteComponentConfiguration = defaultOverwriteComponentConfiguration;
            Tier = tier;
        }
    }
}
