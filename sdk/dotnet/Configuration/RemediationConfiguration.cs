// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Configuration
{
    /// <summary>
    /// Resource Type definition for AWS::Config::RemediationConfiguration
    /// </summary>
    [Obsolete(@"RemediationConfiguration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:configuration:RemediationConfiguration")]
    public partial class RemediationConfiguration : Pulumi.CustomResource
    {
        [Output("automatic")]
        public Output<bool?> Automatic { get; private set; } = null!;

        [Output("configRuleName")]
        public Output<string> ConfigRuleName { get; private set; } = null!;

        [Output("executionControls")]
        public Output<Outputs.RemediationConfigurationExecutionControls?> ExecutionControls { get; private set; } = null!;

        [Output("maximumAutomaticAttempts")]
        public Output<int?> MaximumAutomaticAttempts { get; private set; } = null!;

        [Output("parameters")]
        public Output<object?> Parameters { get; private set; } = null!;

        [Output("resourceType")]
        public Output<string?> ResourceType { get; private set; } = null!;

        [Output("retryAttemptSeconds")]
        public Output<int?> RetryAttemptSeconds { get; private set; } = null!;

        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        [Output("targetType")]
        public Output<string> TargetType { get; private set; } = null!;

        [Output("targetVersion")]
        public Output<string?> TargetVersion { get; private set; } = null!;


        /// <summary>
        /// Create a RemediationConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RemediationConfiguration(string name, RemediationConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:configuration:RemediationConfiguration", name, args ?? new RemediationConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RemediationConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:configuration:RemediationConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RemediationConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RemediationConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RemediationConfiguration(name, id, options);
        }
    }

    public sealed class RemediationConfigurationArgs : Pulumi.ResourceArgs
    {
        [Input("automatic")]
        public Input<bool>? Automatic { get; set; }

        [Input("configRuleName", required: true)]
        public Input<string> ConfigRuleName { get; set; } = null!;

        [Input("executionControls")]
        public Input<Inputs.RemediationConfigurationExecutionControlsArgs>? ExecutionControls { get; set; }

        [Input("maximumAutomaticAttempts")]
        public Input<int>? MaximumAutomaticAttempts { get; set; }

        [Input("parameters")]
        public Input<object>? Parameters { get; set; }

        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        [Input("retryAttemptSeconds")]
        public Input<int>? RetryAttemptSeconds { get; set; }

        [Input("targetId", required: true)]
        public Input<string> TargetId { get; set; } = null!;

        [Input("targetType", required: true)]
        public Input<string> TargetType { get; set; } = null!;

        [Input("targetVersion")]
        public Input<string>? TargetVersion { get; set; }

        public RemediationConfigurationArgs()
        {
        }
    }
}
