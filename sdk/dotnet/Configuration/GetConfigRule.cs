// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Configuration
{
    public static class GetConfigRule
    {
        /// <summary>
        /// Resource Type definition for AWS::Config::ConfigRule
        /// </summary>
        public static Task<GetConfigRuleResult> InvokeAsync(GetConfigRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConfigRuleResult>("aws-native:configuration:getConfigRule", args ?? new GetConfigRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Config::ConfigRule
        /// </summary>
        public static Output<GetConfigRuleResult> Invoke(GetConfigRuleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetConfigRuleResult>("aws-native:configuration:getConfigRule", args ?? new GetConfigRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigRuleArgs : Pulumi.InvokeArgs
    {
        [Input("configRuleId", required: true)]
        public string ConfigRuleId { get; set; } = null!;

        public GetConfigRuleArgs()
        {
        }
    }

    public sealed class GetConfigRuleInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("configRuleId", required: true)]
        public Input<string> ConfigRuleId { get; set; } = null!;

        public GetConfigRuleInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConfigRuleResult
    {
        public readonly string? Arn;
        public readonly string? ComplianceType;
        public readonly string? ConfigRuleId;
        public readonly string? Description;
        public readonly object? InputParameters;
        public readonly string? MaximumExecutionFrequency;
        public readonly Outputs.ConfigRuleScope? Scope;
        public readonly Outputs.ConfigRuleSource? Source;

        [OutputConstructor]
        private GetConfigRuleResult(
            string? arn,

            string? complianceType,

            string? configRuleId,

            string? description,

            object? inputParameters,

            string? maximumExecutionFrequency,

            Outputs.ConfigRuleScope? scope,

            Outputs.ConfigRuleSource? source)
        {
            Arn = arn;
            ComplianceType = complianceType;
            ConfigRuleId = configRuleId;
            Description = description;
            InputParameters = inputParameters;
            MaximumExecutionFrequency = maximumExecutionFrequency;
            Scope = scope;
            Source = source;
        }
    }
}
