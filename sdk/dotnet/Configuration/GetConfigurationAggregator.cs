// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Configuration
{
    public static class GetConfigurationAggregator
    {
        /// <summary>
        /// Resource Type definition for AWS::Config::ConfigurationAggregator
        /// </summary>
        public static Task<GetConfigurationAggregatorResult> InvokeAsync(GetConfigurationAggregatorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationAggregatorResult>("aws-native:configuration:getConfigurationAggregator", args ?? new GetConfigurationAggregatorArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Config::ConfigurationAggregator
        /// </summary>
        public static Output<GetConfigurationAggregatorResult> Invoke(GetConfigurationAggregatorInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetConfigurationAggregatorResult>("aws-native:configuration:getConfigurationAggregator", args ?? new GetConfigurationAggregatorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationAggregatorArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the aggregator.
        /// </summary>
        [Input("configurationAggregatorName", required: true)]
        public string ConfigurationAggregatorName { get; set; } = null!;

        public GetConfigurationAggregatorArgs()
        {
        }
    }

    public sealed class GetConfigurationAggregatorInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the aggregator.
        /// </summary>
        [Input("configurationAggregatorName", required: true)]
        public Input<string> ConfigurationAggregatorName { get; set; } = null!;

        public GetConfigurationAggregatorInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConfigurationAggregatorResult
    {
        public readonly ImmutableArray<Outputs.ConfigurationAggregatorAccountAggregationSource> AccountAggregationSources;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the aggregator.
        /// </summary>
        public readonly string? ConfigurationAggregatorArn;
        public readonly Outputs.ConfigurationAggregatorOrganizationAggregationSource? OrganizationAggregationSource;
        /// <summary>
        /// The tags for the configuration aggregator.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConfigurationAggregatorTag> Tags;

        [OutputConstructor]
        private GetConfigurationAggregatorResult(
            ImmutableArray<Outputs.ConfigurationAggregatorAccountAggregationSource> accountAggregationSources,

            string? configurationAggregatorArn,

            Outputs.ConfigurationAggregatorOrganizationAggregationSource? organizationAggregationSource,

            ImmutableArray<Outputs.ConfigurationAggregatorTag> tags)
        {
            AccountAggregationSources = accountAggregationSources;
            ConfigurationAggregatorArn = configurationAggregatorArn;
            OrganizationAggregationSource = organizationAggregationSource;
            Tags = tags;
        }
    }
}
