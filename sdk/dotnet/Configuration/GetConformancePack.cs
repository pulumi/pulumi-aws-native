// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Configuration
{
    public static class GetConformancePack
    {
        /// <summary>
        /// A conformance pack is a collection of AWS Config rules and remediation actions that can be easily deployed as a single entity in an account and a region or across an entire AWS Organization.
        /// </summary>
        public static Task<GetConformancePackResult> InvokeAsync(GetConformancePackArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConformancePackResult>("aws-native:configuration:getConformancePack", args ?? new GetConformancePackArgs(), options.WithDefaults());

        /// <summary>
        /// A conformance pack is a collection of AWS Config rules and remediation actions that can be easily deployed as a single entity in an account and a region or across an entire AWS Organization.
        /// </summary>
        public static Output<GetConformancePackResult> Invoke(GetConformancePackInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetConformancePackResult>("aws-native:configuration:getConformancePack", args ?? new GetConformancePackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConformancePackArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the conformance pack which will be assigned as the unique identifier.
        /// </summary>
        [Input("conformancePackName", required: true)]
        public string ConformancePackName { get; set; } = null!;

        public GetConformancePackArgs()
        {
        }
    }

    public sealed class GetConformancePackInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the conformance pack which will be assigned as the unique identifier.
        /// </summary>
        [Input("conformancePackName", required: true)]
        public Input<string> ConformancePackName { get; set; } = null!;

        public GetConformancePackInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConformancePackResult
    {
        /// <summary>
        /// A list of ConformancePackInputParameter objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConformancePackInputParameter> ConformancePackInputParameters;
        /// <summary>
        /// AWS Config stores intermediate files while processing conformance pack template.
        /// </summary>
        public readonly string? DeliveryS3Bucket;
        /// <summary>
        /// The prefix for delivery S3 bucket.
        /// </summary>
        public readonly string? DeliveryS3KeyPrefix;

        [OutputConstructor]
        private GetConformancePackResult(
            ImmutableArray<Outputs.ConformancePackInputParameter> conformancePackInputParameters,

            string? deliveryS3Bucket,

            string? deliveryS3KeyPrefix)
        {
            ConformancePackInputParameters = conformancePackInputParameters;
            DeliveryS3Bucket = deliveryS3Bucket;
            DeliveryS3KeyPrefix = deliveryS3KeyPrefix;
        }
    }
}
