// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Configuration
{
    public static class GetConfigurationRecorder
    {
        /// <summary>
        /// Resource Type definition for AWS::Config::ConfigurationRecorder
        /// </summary>
        public static Task<GetConfigurationRecorderResult> InvokeAsync(GetConfigurationRecorderArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationRecorderResult>("aws-native:configuration:getConfigurationRecorder", args ?? new GetConfigurationRecorderArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Config::ConfigurationRecorder
        /// </summary>
        public static Output<GetConfigurationRecorderResult> Invoke(GetConfigurationRecorderInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetConfigurationRecorderResult>("aws-native:configuration:getConfigurationRecorder", args ?? new GetConfigurationRecorderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationRecorderArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetConfigurationRecorderArgs()
        {
        }
    }

    public sealed class GetConfigurationRecorderInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetConfigurationRecorderInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConfigurationRecorderResult
    {
        public readonly string? Id;
        public readonly Outputs.ConfigurationRecorderRecordingGroup? RecordingGroup;
        public readonly string? RoleARN;

        [OutputConstructor]
        private GetConfigurationRecorderResult(
            string? id,

            Outputs.ConfigurationRecorderRecordingGroup? recordingGroup,

            string? roleARN)
        {
            Id = id;
            RecordingGroup = recordingGroup;
            RoleARN = roleARN;
        }
    }
}
