// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ServiceDiscovery
{
    public static class GetService
    {
        /// <summary>
        /// Resource Type definition for AWS::ServiceDiscovery::Service
        /// </summary>
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("aws-native:servicediscovery:getService", args ?? new GetServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ServiceDiscovery::Service
        /// </summary>
        public static Output<GetServiceResult> Invoke(GetServiceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceResult>("aws-native:servicediscovery:getService", args ?? new GetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetServiceArgs()
        {
        }
    }

    public sealed class GetServiceInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetServiceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        public readonly string? Arn;
        public readonly string? Description;
        public readonly Outputs.ServiceDnsConfig? DnsConfig;
        public readonly Outputs.ServiceHealthCheckConfig? HealthCheckConfig;
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.ServiceTag> Tags;

        [OutputConstructor]
        private GetServiceResult(
            string? arn,

            string? description,

            Outputs.ServiceDnsConfig? dnsConfig,

            Outputs.ServiceHealthCheckConfig? healthCheckConfig,

            string? id,

            ImmutableArray<Outputs.ServiceTag> tags)
        {
            Arn = arn;
            Description = description;
            DnsConfig = dnsConfig;
            HealthCheckConfig = healthCheckConfig;
            Id = id;
            Tags = tags;
        }
    }
}
