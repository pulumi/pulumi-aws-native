// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ServiceDiscovery
{
    public static class GetHttpNamespace
    {
        /// <summary>
        /// Resource Type definition for AWS::ServiceDiscovery::HttpNamespace
        /// </summary>
        public static Task<GetHttpNamespaceResult> InvokeAsync(GetHttpNamespaceArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetHttpNamespaceResult>("aws-native:servicediscovery:getHttpNamespace", args ?? new GetHttpNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ServiceDiscovery::HttpNamespace
        /// </summary>
        public static Output<GetHttpNamespaceResult> Invoke(GetHttpNamespaceInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetHttpNamespaceResult>("aws-native:servicediscovery:getHttpNamespace", args ?? new GetHttpNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHttpNamespaceArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        public GetHttpNamespaceArgs()
        {
        }
    }

    public sealed class GetHttpNamespaceInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetHttpNamespaceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetHttpNamespaceResult
    {
        public readonly string? Arn;
        public readonly string? Description;
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.HttpNamespaceTag> Tags;

        [OutputConstructor]
        private GetHttpNamespaceResult(
            string? arn,

            string? description,

            string? id,

            ImmutableArray<Outputs.HttpNamespaceTag> tags)
        {
            Arn = arn;
            Description = description;
            Id = id;
            Tags = tags;
        }
    }
}
