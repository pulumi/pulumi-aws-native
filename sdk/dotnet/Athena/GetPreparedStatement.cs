// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Athena
{
    public static class GetPreparedStatement
    {
        /// <summary>
        /// Resource schema for AWS::Athena::PreparedStatement
        /// </summary>
        public static Task<GetPreparedStatementResult> InvokeAsync(GetPreparedStatementArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPreparedStatementResult>("aws-native:athena:getPreparedStatement", args ?? new GetPreparedStatementArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Athena::PreparedStatement
        /// </summary>
        public static Output<GetPreparedStatementResult> Invoke(GetPreparedStatementInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPreparedStatementResult>("aws-native:athena:getPreparedStatement", args ?? new GetPreparedStatementInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPreparedStatementArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the prepared statement.
        /// </summary>
        [Input("statementName")]
        public string? StatementName { get; set; }

        /// <summary>
        /// The name of the workgroup to which the prepared statement belongs.
        /// </summary>
        [Input("workGroup")]
        public string? WorkGroup { get; set; }

        public GetPreparedStatementArgs()
        {
        }
    }

    public sealed class GetPreparedStatementInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the prepared statement.
        /// </summary>
        [Input("statementName")]
        public Input<string>? StatementName { get; set; }

        /// <summary>
        /// The name of the workgroup to which the prepared statement belongs.
        /// </summary>
        [Input("workGroup")]
        public Input<string>? WorkGroup { get; set; }

        public GetPreparedStatementInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPreparedStatementResult
    {
        /// <summary>
        /// The description of the prepared statement.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The query string for the prepared statement.
        /// </summary>
        public readonly string? QueryStatement;

        [OutputConstructor]
        private GetPreparedStatementResult(
            string? description,

            string? queryStatement)
        {
            Description = description;
            QueryStatement = queryStatement;
        }
    }
}
