// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Athena
{
    public static class GetWorkGroup
    {
        /// <summary>
        /// Resource schema for AWS::Athena::WorkGroup
        /// </summary>
        public static Task<GetWorkGroupResult> InvokeAsync(GetWorkGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkGroupResult>("aws-native:athena:getWorkGroup", args ?? new GetWorkGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Athena::WorkGroup
        /// </summary>
        public static Output<GetWorkGroupResult> Invoke(GetWorkGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWorkGroupResult>("aws-native:athena:getWorkGroup", args ?? new GetWorkGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The workGroup name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetWorkGroupArgs()
        {
        }
    }

    public sealed class GetWorkGroupInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The workGroup name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetWorkGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkGroupResult
    {
        /// <summary>
        /// The date and time the workgroup was created.
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// The workgroup description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The option to delete the workgroup and its contents even if the workgroup contains any named queries.
        /// </summary>
        public readonly bool? RecursiveDeleteOption;
        /// <summary>
        /// The state of the workgroup: ENABLED or DISABLED.
        /// </summary>
        public readonly Pulumi.AwsNative.Athena.WorkGroupState? State;
        /// <summary>
        /// One or more tags, separated by commas, that you want to attach to the workgroup as you create it
        /// </summary>
        public readonly ImmutableArray<Outputs.WorkGroupTag> Tags;
        /// <summary>
        /// The workgroup configuration
        /// </summary>
        public readonly Outputs.WorkGroupConfiguration? WorkGroupConfiguration;

        [OutputConstructor]
        private GetWorkGroupResult(
            string? creationTime,

            string? description,

            bool? recursiveDeleteOption,

            Pulumi.AwsNative.Athena.WorkGroupState? state,

            ImmutableArray<Outputs.WorkGroupTag> tags,

            Outputs.WorkGroupConfiguration? workGroupConfiguration)
        {
            CreationTime = creationTime;
            Description = description;
            RecursiveDeleteOption = recursiveDeleteOption;
            State = state;
            Tags = tags;
            WorkGroupConfiguration = workGroupConfiguration;
        }
    }
}
