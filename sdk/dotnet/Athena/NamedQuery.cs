// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Athena
{
    /// <summary>
    /// Resource schema for AWS::Athena::NamedQuery
    /// </summary>
    [AwsNativeResourceType("aws-native:athena:NamedQuery")]
    public partial class NamedQuery : Pulumi.CustomResource
    {
        /// <summary>
        /// The database to which the query belongs.
        /// </summary>
        [Output("database")]
        public Output<string> Database { get; private set; } = null!;

        /// <summary>
        /// The query description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The query name.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the query.
        /// </summary>
        [Output("namedQueryId")]
        public Output<string> NamedQueryId { get; private set; } = null!;

        /// <summary>
        /// The contents of the query with all query statements.
        /// </summary>
        [Output("queryString")]
        public Output<string> QueryString { get; private set; } = null!;

        /// <summary>
        /// The name of the workgroup that contains the named query.
        /// </summary>
        [Output("workGroup")]
        public Output<string?> WorkGroup { get; private set; } = null!;


        /// <summary>
        /// Create a NamedQuery resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NamedQuery(string name, NamedQueryArgs args, CustomResourceOptions? options = null)
            : base("aws-native:athena:NamedQuery", name, args ?? new NamedQueryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NamedQuery(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:athena:NamedQuery", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NamedQuery resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NamedQuery Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NamedQuery(name, id, options);
        }
    }

    public sealed class NamedQueryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The database to which the query belongs.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// The query description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The query name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The contents of the query with all query statements.
        /// </summary>
        [Input("queryString", required: true)]
        public Input<string> QueryString { get; set; } = null!;

        /// <summary>
        /// The name of the workgroup that contains the named query.
        /// </summary>
        [Input("workGroup")]
        public Input<string>? WorkGroup { get; set; }

        public NamedQueryArgs()
        {
        }
    }
}
