// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Athena
{
    public static class GetCapacityReservation
    {
        /// <summary>
        /// Resource schema for AWS::Athena::CapacityReservation
        /// </summary>
        public static Task<GetCapacityReservationResult> InvokeAsync(GetCapacityReservationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCapacityReservationResult>("aws-native:athena:getCapacityReservation", args ?? new GetCapacityReservationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Athena::CapacityReservation
        /// </summary>
        public static Output<GetCapacityReservationResult> Invoke(GetCapacityReservationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCapacityReservationResult>("aws-native:athena:getCapacityReservation", args ?? new GetCapacityReservationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCapacityReservationArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetCapacityReservationArgs()
        {
        }
        public static new GetCapacityReservationArgs Empty => new GetCapacityReservationArgs();
    }

    public sealed class GetCapacityReservationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetCapacityReservationInvokeArgs()
        {
        }
        public static new GetCapacityReservationInvokeArgs Empty => new GetCapacityReservationInvokeArgs();
    }


    [OutputType]
    public sealed class GetCapacityReservationResult
    {
        /// <summary>
        /// The number of DPUs Athena has provisioned and allocated for the reservation
        /// </summary>
        public readonly int? AllocatedDpus;
        public readonly string? Arn;
        public readonly Outputs.CapacityReservationCapacityAssignmentConfiguration? CapacityAssignmentConfiguration;
        /// <summary>
        /// The date and time the reservation was created.
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// The timestamp when the last successful allocated was made
        /// </summary>
        public readonly string? LastSuccessfulAllocationTime;
        /// <summary>
        /// The status of the reservation.
        /// </summary>
        public readonly Pulumi.AwsNative.Athena.CapacityReservationStatus? Status;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.CapacityReservationTag> Tags;
        /// <summary>
        /// The number of DPUs to request to be allocated to the reservation.
        /// </summary>
        public readonly int? TargetDpus;

        [OutputConstructor]
        private GetCapacityReservationResult(
            int? allocatedDpus,

            string? arn,

            Outputs.CapacityReservationCapacityAssignmentConfiguration? capacityAssignmentConfiguration,

            string? creationTime,

            string? lastSuccessfulAllocationTime,

            Pulumi.AwsNative.Athena.CapacityReservationStatus? status,

            ImmutableArray<Outputs.CapacityReservationTag> tags,

            int? targetDpus)
        {
            AllocatedDpus = allocatedDpus;
            Arn = arn;
            CapacityAssignmentConfiguration = capacityAssignmentConfiguration;
            CreationTime = creationTime;
            LastSuccessfulAllocationTime = lastSuccessfulAllocationTime;
            Status = status;
            Tags = tags;
            TargetDpus = targetDpus;
        }
    }
}
