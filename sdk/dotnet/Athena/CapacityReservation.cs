// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Athena
{
    /// <summary>
    /// Resource schema for AWS::Athena::CapacityReservation
    /// </summary>
    [AwsNativeResourceType("aws-native:athena:CapacityReservation")]
    public partial class CapacityReservation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of DPUs Athena has provisioned and allocated for the reservation
        /// </summary>
        [Output("allocatedDpus")]
        public Output<int> AllocatedDpus { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("capacityAssignmentConfiguration")]
        public Output<Outputs.CapacityReservationCapacityAssignmentConfiguration?> CapacityAssignmentConfiguration { get; private set; } = null!;

        /// <summary>
        /// The date and time the reservation was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the last successful allocated was made
        /// </summary>
        [Output("lastSuccessfulAllocationTime")]
        public Output<string> LastSuccessfulAllocationTime { get; private set; } = null!;

        /// <summary>
        /// The reservation name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The status of the reservation.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Athena.CapacityReservationStatus> Status { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.CapacityReservationTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The number of DPUs to request to be allocated to the reservation.
        /// </summary>
        [Output("targetDpus")]
        public Output<int> TargetDpus { get; private set; } = null!;


        /// <summary>
        /// Create a CapacityReservation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CapacityReservation(string name, CapacityReservationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:athena:CapacityReservation", name, args ?? new CapacityReservationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CapacityReservation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:athena:CapacityReservation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CapacityReservation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CapacityReservation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CapacityReservation(name, id, options);
        }
    }

    public sealed class CapacityReservationArgs : global::Pulumi.ResourceArgs
    {
        [Input("capacityAssignmentConfiguration")]
        public Input<Inputs.CapacityReservationCapacityAssignmentConfigurationArgs>? CapacityAssignmentConfiguration { get; set; }

        /// <summary>
        /// The reservation name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<Inputs.CapacityReservationTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.CapacityReservationTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CapacityReservationTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The number of DPUs to request to be allocated to the reservation.
        /// </summary>
        [Input("targetDpus", required: true)]
        public Input<int> TargetDpus { get; set; } = null!;

        public CapacityReservationArgs()
        {
        }
        public static new CapacityReservationArgs Empty => new CapacityReservationArgs();
    }
}
