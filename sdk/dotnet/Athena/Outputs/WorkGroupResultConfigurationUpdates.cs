// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Athena.Outputs
{

    /// <summary>
    /// The result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results. 
    /// </summary>
    [OutputType]
    public sealed class WorkGroupResultConfigurationUpdates
    {
        public readonly Outputs.WorkGroupAclConfiguration? AclConfiguration;
        public readonly Outputs.WorkGroupEncryptionConfiguration? EncryptionConfiguration;
        public readonly string? ExpectedBucketOwner;
        public readonly string? OutputLocation;
        public readonly bool? RemoveAclConfiguration;
        public readonly bool? RemoveEncryptionConfiguration;
        public readonly bool? RemoveExpectedBucketOwner;
        public readonly bool? RemoveOutputLocation;

        [OutputConstructor]
        private WorkGroupResultConfigurationUpdates(
            Outputs.WorkGroupAclConfiguration? aclConfiguration,

            Outputs.WorkGroupEncryptionConfiguration? encryptionConfiguration,

            string? expectedBucketOwner,

            string? outputLocation,

            bool? removeAclConfiguration,

            bool? removeEncryptionConfiguration,

            bool? removeExpectedBucketOwner,

            bool? removeOutputLocation)
        {
            AclConfiguration = aclConfiguration;
            EncryptionConfiguration = encryptionConfiguration;
            ExpectedBucketOwner = expectedBucketOwner;
            OutputLocation = outputLocation;
            RemoveAclConfiguration = removeAclConfiguration;
            RemoveEncryptionConfiguration = removeEncryptionConfiguration;
            RemoveExpectedBucketOwner = removeExpectedBucketOwner;
            RemoveOutputLocation = removeOutputLocation;
        }
    }
}
