// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lex.Outputs
{

    /// <summary>
    /// Prompts the user to confirm the intent.
    /// </summary>
    [OutputType]
    public sealed class BotPromptSpecification
    {
        /// <summary>
        /// Indicates whether the user can interrupt a speech prompt from the bot.
        /// </summary>
        public readonly bool? AllowInterrupt;
        /// <summary>
        /// The maximum number of times the bot tries to elicit a response from the user using this prompt.
        /// </summary>
        public readonly int MaxRetries;
        /// <summary>
        /// A collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.
        /// </summary>
        public readonly ImmutableArray<Outputs.BotMessageGroup> MessageGroupsList;
        /// <summary>
        /// Indicates how a message is selected from a message group among retries.
        /// </summary>
        public readonly Pulumi.AwsNative.Lex.BotMessageSelectionStrategy? MessageSelectionStrategy;
        /// <summary>
        /// Specifies the advanced settings on each attempt of the prompt.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.BotPromptAttemptSpecification>? PromptAttemptsSpecification;

        [OutputConstructor]
        private BotPromptSpecification(
            bool? allowInterrupt,

            int maxRetries,

            ImmutableArray<Outputs.BotMessageGroup> messageGroupsList,

            Pulumi.AwsNative.Lex.BotMessageSelectionStrategy? messageSelectionStrategy,

            ImmutableDictionary<string, Outputs.BotPromptAttemptSpecification>? promptAttemptsSpecification)
        {
            AllowInterrupt = allowInterrupt;
            MaxRetries = maxRetries;
            MessageGroupsList = messageGroupsList;
            MessageSelectionStrategy = messageSelectionStrategy;
            PromptAttemptsSpecification = promptAttemptsSpecification;
        }
    }
}
