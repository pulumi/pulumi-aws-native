// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lex.Outputs
{

    [OutputType]
    public sealed class BotStillWaitingResponseSpecification
    {
        /// <summary>
        /// Indicates that the user can interrupt the response by speaking while the message is being played.
        /// </summary>
        public readonly bool? AllowInterrupt;
        /// <summary>
        /// How often a message should be sent to the user. Minimum of 1 second, maximum of 5 minutes.
        /// </summary>
        public readonly int FrequencyInSeconds;
        /// <summary>
        /// One or more message groups, each containing one or more messages, that define the prompts that Amazon Lex sends to the user.
        /// </summary>
        public readonly ImmutableArray<Outputs.BotMessageGroup> MessageGroupsList;
        /// <summary>
        /// If Amazon Lex waits longer than this length of time for a response, it will stop sending messages.
        /// </summary>
        public readonly int TimeoutInSeconds;

        [OutputConstructor]
        private BotStillWaitingResponseSpecification(
            bool? allowInterrupt,

            int frequencyInSeconds,

            ImmutableArray<Outputs.BotMessageGroup> messageGroupsList,

            int timeoutInSeconds)
        {
            AllowInterrupt = allowInterrupt;
            FrequencyInSeconds = frequencyInSeconds;
            MessageGroupsList = messageGroupsList;
            TimeoutInSeconds = timeoutInSeconds;
        }
    }
}
