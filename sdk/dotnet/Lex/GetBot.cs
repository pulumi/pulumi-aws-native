// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lex
{
    public static class GetBot
    {
        /// <summary>
        /// Amazon Lex conversational bot performing automated tasks such as ordering a pizza, booking a hotel, and so on.
        /// </summary>
        public static Task<GetBotResult> InvokeAsync(GetBotArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBotResult>("aws-native:lex:getBot", args ?? new GetBotArgs(), options.WithDefaults());

        /// <summary>
        /// Amazon Lex conversational bot performing automated tasks such as ordering a pizza, booking a hotel, and so on.
        /// </summary>
        public static Output<GetBotResult> Invoke(GetBotInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBotResult>("aws-native:lex:getBot", args ?? new GetBotInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Amazon Lex conversational bot performing automated tasks such as ordering a pizza, booking a hotel, and so on.
        /// </summary>
        public static Output<GetBotResult> Invoke(GetBotInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBotResult>("aws-native:lex:getBot", args ?? new GetBotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the bot.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetBotArgs()
        {
        }
        public static new GetBotArgs Empty => new GetBotArgs();
    }

    public sealed class GetBotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the bot.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetBotInvokeArgs()
        {
        }
        public static new GetBotInvokeArgs Empty => new GetBotInvokeArgs();
    }


    [OutputType]
    public sealed class GetBotResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the bot.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// By default, data stored by Amazon Lex is encrypted. The `DataPrivacy` structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot.
        /// </summary>
        public readonly Outputs.DataPrivacyProperties? DataPrivacy;
        /// <summary>
        /// The description of the version.
        /// </summary>
        public readonly string? Description;
        public readonly Outputs.ErrorLogSettingsProperties? ErrorLogSettings;
        /// <summary>
        /// The unique identifier of the bot.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot.
        /// 
        /// A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.
        /// 
        /// You can specify between 60 (1 minute) and 86,400 (24 hours) seconds.
        /// </summary>
        public readonly int? IdleSessionTtlInSeconds;
        /// <summary>
        /// The name of the bot locale.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role used to build and run the bot.
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// Specifies configuration settings for the alias used to test the bot. If the `TestBotAliasSettings` property is not specified, the settings are configured with default values.
        /// </summary>
        public readonly Outputs.BotTestBotAliasSettings? TestBotAliasSettings;

        [OutputConstructor]
        private GetBotResult(
            string? arn,

            Outputs.DataPrivacyProperties? dataPrivacy,

            string? description,

            Outputs.ErrorLogSettingsProperties? errorLogSettings,

            string? id,

            int? idleSessionTtlInSeconds,

            string? name,

            string? roleArn,

            Outputs.BotTestBotAliasSettings? testBotAliasSettings)
        {
            Arn = arn;
            DataPrivacy = dataPrivacy;
            Description = description;
            ErrorLogSettings = errorLogSettings;
            Id = id;
            IdleSessionTtlInSeconds = idleSessionTtlInSeconds;
            Name = name;
            RoleArn = roleArn;
            TestBotAliasSettings = testBotAliasSettings;
        }
    }
}
