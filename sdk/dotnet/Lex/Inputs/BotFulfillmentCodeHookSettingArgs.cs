// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lex.Inputs
{

    /// <summary>
    /// Settings that determine if a Lambda function should be invoked to fulfill a specific intent.
    /// </summary>
    public sealed class BotFulfillmentCodeHookSettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether a Lambda function should be invoked to fulfill a specific intent.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Provides settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations.
        /// </summary>
        [Input("fulfillmentUpdatesSpecification")]
        public Input<Inputs.BotFulfillmentUpdatesSpecificationArgs>? FulfillmentUpdatesSpecification { get; set; }

        /// <summary>
        /// Determines whether the fulfillment code hook is used. When active is false, the code hook doesn't run.
        /// </summary>
        [Input("isActive")]
        public Input<bool>? IsActive { get; set; }

        /// <summary>
        /// Provides settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations.
        /// </summary>
        [Input("postFulfillmentStatusSpecification")]
        public Input<Inputs.BotPostFulfillmentStatusSpecificationArgs>? PostFulfillmentStatusSpecification { get; set; }

        public BotFulfillmentCodeHookSettingArgs()
        {
        }
        public static new BotFulfillmentCodeHookSettingArgs Empty => new BotFulfillmentCodeHookSettingArgs();
    }
}
