// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lex.Inputs
{

    public sealed class BotFulfillmentStartResponseSpecificationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines whether the user can interrupt the start message while it is playing.
        /// </summary>
        [Input("allowInterrupt")]
        public Input<bool>? AllowInterrupt { get; set; }

        /// <summary>
        /// The delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn't played.
        /// </summary>
        [Input("delayInSeconds", required: true)]
        public Input<int> DelayInSeconds { get; set; } = null!;

        [Input("messageGroups", required: true)]
        private InputList<Inputs.BotMessageGroupArgs>? _messageGroups;

        /// <summary>
        /// 1 - 5 message groups that contain start messages. Amazon Lex chooses one of the messages to play to the user.
        /// </summary>
        public InputList<Inputs.BotMessageGroupArgs> MessageGroups
        {
            get => _messageGroups ?? (_messageGroups = new InputList<Inputs.BotMessageGroupArgs>());
            set => _messageGroups = value;
        }

        public BotFulfillmentStartResponseSpecificationArgs()
        {
        }
        public static new BotFulfillmentStartResponseSpecificationArgs Empty => new BotFulfillmentStartResponseSpecificationArgs();
    }
}
