// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lex.Inputs
{

    /// <summary>
    /// Provides a prompt for making sure that the user is ready for the intent to be fulfilled.
    /// </summary>
    public sealed class BotIntentConfirmationSettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DialogCodeHookInvocationSetting object associated with intent's confirmation step. The dialog code hook is triggered based on these invocation settings when the confirmation next step or declination next step or failure next step is InvokeDialogCodeHook.
        /// </summary>
        [Input("codeHook")]
        public Input<Inputs.BotDialogCodeHookInvocationSettingArgs>? CodeHook { get; set; }

        /// <summary>
        /// A list of conditional branches to evaluate after the intent is closed.
        /// </summary>
        [Input("confirmationConditional")]
        public Input<Inputs.BotConditionalSpecificationArgs>? ConfirmationConditional { get; set; }

        /// <summary>
        /// Specifies the next step that the bot executes when the customer confirms the intent.
        /// </summary>
        [Input("confirmationNextStep")]
        public Input<Inputs.BotDialogStateArgs>? ConfirmationNextStep { get; set; }

        /// <summary>
        /// Specifies a list of message groups that Amazon Lex uses to respond the user input.
        /// </summary>
        [Input("confirmationResponse")]
        public Input<Inputs.BotResponseSpecificationArgs>? ConfirmationResponse { get; set; }

        /// <summary>
        /// A list of conditional branches to evaluate after the intent is declined.
        /// </summary>
        [Input("declinationConditional")]
        public Input<Inputs.BotConditionalSpecificationArgs>? DeclinationConditional { get; set; }

        /// <summary>
        /// Specifies the next step that the bot executes when the customer declines the intent.
        /// </summary>
        [Input("declinationNextStep")]
        public Input<Inputs.BotDialogStateArgs>? DeclinationNextStep { get; set; }

        /// <summary>
        /// When the user answers "no" to the question defined in promptSpecification, Amazon Lex responds with this response to acknowledge that the intent was canceled.
        /// </summary>
        [Input("declinationResponse")]
        public Input<Inputs.BotResponseSpecificationArgs>? DeclinationResponse { get; set; }

        /// <summary>
        /// The DialogCodeHookInvocationSetting used when the code hook is invoked during confirmation prompt retries.
        /// </summary>
        [Input("elicitationCodeHook")]
        public Input<Inputs.BotElicitationCodeHookInvocationSettingArgs>? ElicitationCodeHook { get; set; }

        /// <summary>
        /// Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.
        /// </summary>
        [Input("failureConditional")]
        public Input<Inputs.BotConditionalSpecificationArgs>? FailureConditional { get; set; }

        /// <summary>
        /// The next step to take in the conversation if the confirmation step fails.
        /// </summary>
        [Input("failureNextStep")]
        public Input<Inputs.BotDialogStateArgs>? FailureNextStep { get; set; }

        /// <summary>
        /// Specifies a list of message groups that Amazon Lex uses to respond the user input.
        /// </summary>
        [Input("failureResponse")]
        public Input<Inputs.BotResponseSpecificationArgs>? FailureResponse { get; set; }

        /// <summary>
        /// Specifies whether the intent's confirmation is sent to the user. When this field is false, confirmation and declination responses aren't sent. If the active field isn't specified, the default is true.
        /// </summary>
        [Input("isActive")]
        public Input<bool>? IsActive { get; set; }

        /// <summary>
        /// Prompts the user to confirm the intent. This question should have a yes or no answer.
        /// </summary>
        [Input("promptSpecification", required: true)]
        public Input<Inputs.BotPromptSpecificationArgs> PromptSpecification { get; set; } = null!;

        public BotIntentConfirmationSettingArgs()
        {
        }
        public static new BotIntentConfirmationSettingArgs Empty => new BotIntentConfirmationSettingArgs();
    }
}
