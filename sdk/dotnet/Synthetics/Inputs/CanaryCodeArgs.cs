// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Synthetics.Inputs
{

    public sealed class CanaryCodeArgs : global::Pulumi.ResourceArgs
    {
        [Input("blueprintTypes")]
        private InputList<string>? _blueprintTypes;
        public InputList<string> BlueprintTypes
        {
            get => _blueprintTypes ?? (_blueprintTypes = new InputList<string>());
            set => _blueprintTypes = value;
        }

        [Input("dependencies")]
        private InputList<Inputs.CanaryDependencyArgs>? _dependencies;

        /// <summary>
        /// List of Lambda layers to attach to the canary
        /// </summary>
        public InputList<Inputs.CanaryDependencyArgs> Dependencies
        {
            get => _dependencies ?? (_dependencies = new InputList<Inputs.CanaryDependencyArgs>());
            set => _dependencies = value;
        }

        /// <summary>
        /// The entry point to use for the source code when running the canary. For canaries that use the `syn-python-selenium-1.0` runtime or a `syn-nodejs.puppeteer` runtime earlier than `syn-nodejs.puppeteer-3.4` , the handler must be specified as `*fileName* .handler` . For `syn-python-selenium-1.1` , `syn-nodejs.puppeteer-3.4` , and later runtimes, the handler can be specified as `*fileName* . *functionName*` , or you can specify a folder where canary scripts reside as `*folder* / *fileName* . *functionName*` .
        /// </summary>
        [Input("handler")]
        public Input<string>? Handler { get; set; }

        /// <summary>
        /// If your canary script is located in S3, specify the bucket name here. The bucket must already exist.
        /// </summary>
        [Input("s3Bucket")]
        public Input<string>? S3Bucket { get; set; }

        /// <summary>
        /// The Amazon S3 key of your script. For more information, see [Working with Amazon S3 Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingObjects.html) .
        /// </summary>
        [Input("s3Key")]
        public Input<string>? S3Key { get; set; }

        /// <summary>
        /// The Amazon S3 version ID of your script.
        /// </summary>
        [Input("s3ObjectVersion")]
        public Input<string>? S3ObjectVersion { get; set; }

        /// <summary>
        /// If you input your canary script directly into the canary instead of referring to an S3 location, the value of this parameter is the script in plain text. It can be up to 5 MB.
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// The ARN of the Lambda layer where Synthetics stores the canary script code.
        /// </summary>
        [Input("sourceLocationArn")]
        public Input<string>? SourceLocationArn { get; set; }

        public CanaryCodeArgs()
        {
        }
        public static new CanaryCodeArgs Empty => new CanaryCodeArgs();
    }
}
