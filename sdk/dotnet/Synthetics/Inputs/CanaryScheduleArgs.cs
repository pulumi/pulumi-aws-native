// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Synthetics.Inputs
{

    public sealed class CanaryScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// How long, in seconds, for the canary to continue making regular runs according to the schedule in the `Expression` value. If you specify 0, the canary continues making runs until you stop it. If you omit this field, the default of 0 is used.
        /// </summary>
        [Input("durationInSeconds")]
        public Input<string>? DurationInSeconds { get; set; }

        /// <summary>
        /// A `rate` expression or a `cron` expression that defines how often the canary is to run.
        /// 
        /// For a rate expression, The syntax is `rate( *number unit* )` . *unit* can be `minute` , `minutes` , or `hour` .
        /// 
        /// For example, `rate(1 minute)` runs the canary once a minute, `rate(10 minutes)` runs it once every 10 minutes, and `rate(1 hour)` runs it once every hour. You can specify a frequency between `rate(1 minute)` and `rate(1 hour)` .
        /// 
        /// Specifying `rate(0 minute)` or `rate(0 hour)` is a special value that causes the canary to run only once when it is started.
        /// 
        /// Use `cron( *expression* )` to specify a cron expression. You can't schedule a canary to wait for more than a year before running. For information about the syntax for cron expressions, see [Scheduling canary runs using cron](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_cron.html) .
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        /// <summary>
        /// Provide canary auto retry configuration
        /// </summary>
        [Input("retryConfig")]
        public Input<Inputs.CanaryRetryConfigArgs>? RetryConfig { get; set; }

        public CanaryScheduleArgs()
        {
        }
        public static new CanaryScheduleArgs Empty => new CanaryScheduleArgs();
    }
}
