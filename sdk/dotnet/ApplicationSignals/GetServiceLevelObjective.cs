// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationSignals
{
    public static class GetServiceLevelObjective
    {
        /// <summary>
        /// Resource Type definition for AWS::ApplicationSignals::ServiceLevelObjective
        /// </summary>
        public static Task<GetServiceLevelObjectiveResult> InvokeAsync(GetServiceLevelObjectiveArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceLevelObjectiveResult>("aws-native:applicationsignals:getServiceLevelObjective", args ?? new GetServiceLevelObjectiveArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApplicationSignals::ServiceLevelObjective
        /// </summary>
        public static Output<GetServiceLevelObjectiveResult> Invoke(GetServiceLevelObjectiveInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceLevelObjectiveResult>("aws-native:applicationsignals:getServiceLevelObjective", args ?? new GetServiceLevelObjectiveInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApplicationSignals::ServiceLevelObjective
        /// </summary>
        public static Output<GetServiceLevelObjectiveResult> Invoke(GetServiceLevelObjectiveInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceLevelObjectiveResult>("aws-native:applicationsignals:getServiceLevelObjective", args ?? new GetServiceLevelObjectiveInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceLevelObjectiveArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of this SLO.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetServiceLevelObjectiveArgs()
        {
        }
        public static new GetServiceLevelObjectiveArgs Empty => new GetServiceLevelObjectiveArgs();
    }

    public sealed class GetServiceLevelObjectiveInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of this SLO.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetServiceLevelObjectiveInvokeArgs()
        {
        }
        public static new GetServiceLevelObjectiveInvokeArgs Empty => new GetServiceLevelObjectiveInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceLevelObjectiveResult
    {
        /// <summary>
        /// The ARN of this SLO.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Each object in this array defines the length of the look-back window used to calculate one burn rate metric for this SLO. The burn rate measures how fast the service is consuming the error budget, relative to the attainment goal of the SLO.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceLevelObjectiveBurnRateConfiguration> BurnRateConfigurations;
        /// <summary>
        /// Epoch time in seconds of the time that this SLO was created
        /// </summary>
        public readonly int? CreatedTime;
        /// <summary>
        /// An optional description for this SLO. Default is 'No description'
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Displays whether this is a period-based SLO or a request-based SLO.
        /// </summary>
        public readonly Pulumi.AwsNative.ApplicationSignals.ServiceLevelObjectiveEvaluationType? EvaluationType;
        /// <summary>
        /// The time window to be excluded from the SLO performance metrics.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceLevelObjectiveExclusionWindow> ExclusionWindows;
        /// <summary>
        /// This structure contains the attributes that determine the goal of an SLO. This includes the time period for evaluation and the attainment threshold.
        /// </summary>
        public readonly Outputs.ServiceLevelObjectiveGoal? Goal;
        /// <summary>
        /// Epoch time in seconds of the time that this SLO was most recently updated
        /// </summary>
        public readonly int? LastUpdatedTime;
        /// <summary>
        /// A structure containing information about the performance metric that this SLO monitors, if this is a request-based SLO.
        /// </summary>
        public readonly Outputs.ServiceLevelObjectiveRequestBasedSli? RequestBasedSli;
        /// <summary>
        /// A structure containing information about the performance metric that this SLO monitors, if this is a period-based SLO.
        /// </summary>
        public readonly Outputs.ServiceLevelObjectiveSli? Sli;
        /// <summary>
        /// A list of key-value pairs to associate with the SLO. You can associate as many as 50 tags with an SLO. To be able to associate tags with the SLO when you create the SLO, you must have the cloudwatch:TagResource permission.
        /// 
        /// Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetServiceLevelObjectiveResult(
            string? arn,

            ImmutableArray<Outputs.ServiceLevelObjectiveBurnRateConfiguration> burnRateConfigurations,

            int? createdTime,

            string? description,

            Pulumi.AwsNative.ApplicationSignals.ServiceLevelObjectiveEvaluationType? evaluationType,

            ImmutableArray<Outputs.ServiceLevelObjectiveExclusionWindow> exclusionWindows,

            Outputs.ServiceLevelObjectiveGoal? goal,

            int? lastUpdatedTime,

            Outputs.ServiceLevelObjectiveRequestBasedSli? requestBasedSli,

            Outputs.ServiceLevelObjectiveSli? sli,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            BurnRateConfigurations = burnRateConfigurations;
            CreatedTime = createdTime;
            Description = description;
            EvaluationType = evaluationType;
            ExclusionWindows = exclusionWindows;
            Goal = goal;
            LastUpdatedTime = lastUpdatedTime;
            RequestBasedSli = requestBasedSli;
            Sli = sli;
            Tags = tags;
        }
    }
}
