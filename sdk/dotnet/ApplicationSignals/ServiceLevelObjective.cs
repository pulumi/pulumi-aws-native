// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationSignals
{
    /// <summary>
    /// Resource Type definition for AWS::ApplicationSignals::ServiceLevelObjective
    /// </summary>
    [AwsNativeResourceType("aws-native:applicationsignals:ServiceLevelObjective")]
    public partial class ServiceLevelObjective : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of this SLO.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Each object in this array defines the length of the look-back window used to calculate one burn rate metric for this SLO. The burn rate measures how fast the service is consuming the error budget, relative to the attainment goal of the SLO.
        /// </summary>
        [Output("burnRateConfigurations")]
        public Output<ImmutableArray<Outputs.ServiceLevelObjectiveBurnRateConfiguration>> BurnRateConfigurations { get; private set; } = null!;

        /// <summary>
        /// Epoch time in seconds of the time that this SLO was created
        /// </summary>
        [Output("createdTime")]
        public Output<int> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// An optional description for this SLO. Default is 'No description'
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Displays whether this is a period-based SLO or a request-based SLO.
        /// </summary>
        [Output("evaluationType")]
        public Output<Pulumi.AwsNative.ApplicationSignals.ServiceLevelObjectiveEvaluationType> EvaluationType { get; private set; } = null!;

        /// <summary>
        /// This structure contains the attributes that determine the goal of an SLO. This includes the time period for evaluation and the attainment threshold.
        /// </summary>
        [Output("goal")]
        public Output<Outputs.ServiceLevelObjectiveGoal?> Goal { get; private set; } = null!;

        /// <summary>
        /// Epoch time in seconds of the time that this SLO was most recently updated
        /// </summary>
        [Output("lastUpdatedTime")]
        public Output<int> LastUpdatedTime { get; private set; } = null!;

        /// <summary>
        /// The name of this SLO.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A structure containing information about the performance metric that this SLO monitors, if this is a request-based SLO.
        /// </summary>
        [Output("requestBasedSli")]
        public Output<Outputs.ServiceLevelObjectiveRequestBasedSli?> RequestBasedSli { get; private set; } = null!;

        /// <summary>
        /// A structure containing information about the performance metric that this SLO monitors, if this is a period-based SLO.
        /// </summary>
        [Output("sli")]
        public Output<Outputs.ServiceLevelObjectiveSli?> Sli { get; private set; } = null!;

        /// <summary>
        /// A list of key-value pairs to associate with the SLO. You can associate as many as 50 tags with an SLO. To be able to associate tags with the SLO when you create the SLO, you must have the cloudwatch:TagResource permission.
        /// 
        /// Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceLevelObjective resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceLevelObjective(string name, ServiceLevelObjectiveArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:applicationsignals:ServiceLevelObjective", name, args ?? new ServiceLevelObjectiveArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceLevelObjective(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:applicationsignals:ServiceLevelObjective", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceLevelObjective resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceLevelObjective Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ServiceLevelObjective(name, id, options);
        }
    }

    public sealed class ServiceLevelObjectiveArgs : global::Pulumi.ResourceArgs
    {
        [Input("burnRateConfigurations")]
        private InputList<Inputs.ServiceLevelObjectiveBurnRateConfigurationArgs>? _burnRateConfigurations;

        /// <summary>
        /// Each object in this array defines the length of the look-back window used to calculate one burn rate metric for this SLO. The burn rate measures how fast the service is consuming the error budget, relative to the attainment goal of the SLO.
        /// </summary>
        public InputList<Inputs.ServiceLevelObjectiveBurnRateConfigurationArgs> BurnRateConfigurations
        {
            get => _burnRateConfigurations ?? (_burnRateConfigurations = new InputList<Inputs.ServiceLevelObjectiveBurnRateConfigurationArgs>());
            set => _burnRateConfigurations = value;
        }

        /// <summary>
        /// An optional description for this SLO. Default is 'No description'
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// This structure contains the attributes that determine the goal of an SLO. This includes the time period for evaluation and the attainment threshold.
        /// </summary>
        [Input("goal")]
        public Input<Inputs.ServiceLevelObjectiveGoalArgs>? Goal { get; set; }

        /// <summary>
        /// The name of this SLO.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A structure containing information about the performance metric that this SLO monitors, if this is a request-based SLO.
        /// </summary>
        [Input("requestBasedSli")]
        public Input<Inputs.ServiceLevelObjectiveRequestBasedSliArgs>? RequestBasedSli { get; set; }

        /// <summary>
        /// A structure containing information about the performance metric that this SLO monitors, if this is a period-based SLO.
        /// </summary>
        [Input("sli")]
        public Input<Inputs.ServiceLevelObjectiveSliArgs>? Sli { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A list of key-value pairs to associate with the SLO. You can associate as many as 50 tags with an SLO. To be able to associate tags with the SLO when you create the SLO, you must have the cloudwatch:TagResource permission.
        /// 
        /// Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public ServiceLevelObjectiveArgs()
        {
        }
        public static new ServiceLevelObjectiveArgs Empty => new ServiceLevelObjectiveArgs();
    }
}
