// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationSignals
{
    /// <summary>
    /// Resource Type definition for AWS::ApplicationSignals::GroupingConfiguration
    /// </summary>
    [AwsNativeResourceType("aws-native:applicationsignals:GroupingConfiguration")]
    public partial class GroupingConfiguration : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// An array of grouping attribute definitions that specify how services should be grouped based on various attributes and source keys.
        /// </summary>
        [Output("groupingAttributeDefinitions")]
        public Output<ImmutableArray<Outputs.GroupingConfigurationGroupingAttributeDefinition>> GroupingAttributeDefinitions { get; private set; } = null!;

        /// <summary>
        /// The timestamp when this grouping configuration was last updated. When used in a raw HTTP Query API, it is formatted as epoch time in seconds.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a GroupingConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupingConfiguration(string name, GroupingConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:applicationsignals:GroupingConfiguration", name, args ?? new GroupingConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupingConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:applicationsignals:GroupingConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupingConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupingConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GroupingConfiguration(name, id, options);
        }
    }

    public sealed class GroupingConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("groupingAttributeDefinitions", required: true)]
        private InputList<Inputs.GroupingConfigurationGroupingAttributeDefinitionArgs>? _groupingAttributeDefinitions;

        /// <summary>
        /// An array of grouping attribute definitions that specify how services should be grouped based on various attributes and source keys.
        /// </summary>
        public InputList<Inputs.GroupingConfigurationGroupingAttributeDefinitionArgs> GroupingAttributeDefinitions
        {
            get => _groupingAttributeDefinitions ?? (_groupingAttributeDefinitions = new InputList<Inputs.GroupingConfigurationGroupingAttributeDefinitionArgs>());
            set => _groupingAttributeDefinitions = value;
        }

        public GroupingConfigurationArgs()
        {
        }
        public static new GroupingConfigurationArgs Empty => new GroupingConfigurationArgs();
    }
}
