// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationSignals
{
    public static class GetGroupingConfiguration
    {
        /// <summary>
        /// Resource Type definition for AWS::ApplicationSignals::GroupingConfiguration
        /// </summary>
        public static Task<GetGroupingConfigurationResult> InvokeAsync(GetGroupingConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupingConfigurationResult>("aws-native:applicationsignals:getGroupingConfiguration", args ?? new GetGroupingConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApplicationSignals::GroupingConfiguration
        /// </summary>
        public static Output<GetGroupingConfigurationResult> Invoke(GetGroupingConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupingConfigurationResult>("aws-native:applicationsignals:getGroupingConfiguration", args ?? new GetGroupingConfigurationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApplicationSignals::GroupingConfiguration
        /// </summary>
        public static Output<GetGroupingConfigurationResult> Invoke(GetGroupingConfigurationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupingConfigurationResult>("aws-native:applicationsignals:getGroupingConfiguration", args ?? new GetGroupingConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupingConfigurationArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        public GetGroupingConfigurationArgs()
        {
        }
        public static new GetGroupingConfigurationArgs Empty => new GetGroupingConfigurationArgs();
    }

    public sealed class GetGroupingConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        public GetGroupingConfigurationInvokeArgs()
        {
        }
        public static new GetGroupingConfigurationInvokeArgs Empty => new GetGroupingConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupingConfigurationResult
    {
        public readonly string? AccountId;
        /// <summary>
        /// An array of grouping attribute definitions that specify how services should be grouped based on various attributes and source keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.GroupingConfigurationGroupingAttributeDefinition> GroupingAttributeDefinitions;
        /// <summary>
        /// The timestamp when this grouping configuration was last updated. When used in a raw HTTP Query API, it is formatted as epoch time in seconds.
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetGroupingConfigurationResult(
            string? accountId,

            ImmutableArray<Outputs.GroupingConfigurationGroupingAttributeDefinition> groupingAttributeDefinitions,

            string? updatedAt)
        {
            AccountId = accountId;
            GroupingAttributeDefinitions = groupingAttributeDefinitions;
            UpdatedAt = updatedAt;
        }
    }
}
