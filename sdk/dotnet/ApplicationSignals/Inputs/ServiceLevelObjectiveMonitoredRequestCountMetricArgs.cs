// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationSignals.Inputs
{

    /// <summary>
    /// This structure defines the metric that is used as the "good request" or "bad request" value for a request-based SLO. This value observed for the metric defined in `TotalRequestCountMetric` is divided by the number found for `MonitoredRequestCountMetric` to determine the percentage of successful requests that this SLO tracks.
    /// </summary>
    public sealed class ServiceLevelObjectiveMonitoredRequestCountMetricArgs : global::Pulumi.ResourceArgs
    {
        [Input("badCountMetric")]
        private InputList<Inputs.ServiceLevelObjectiveMetricDataQueryArgs>? _badCountMetric;

        /// <summary>
        /// If you want to count "bad requests" to determine the percentage of successful requests for this request-based SLO, specify the metric to use as "bad requests" in this structure.
        /// </summary>
        public InputList<Inputs.ServiceLevelObjectiveMetricDataQueryArgs> BadCountMetric
        {
            get => _badCountMetric ?? (_badCountMetric = new InputList<Inputs.ServiceLevelObjectiveMetricDataQueryArgs>());
            set => _badCountMetric = value;
        }

        [Input("goodCountMetric")]
        private InputList<Inputs.ServiceLevelObjectiveMetricDataQueryArgs>? _goodCountMetric;

        /// <summary>
        /// If you want to count "good requests" to determine the percentage of successful requests for this request-based SLO, specify the metric to use as "good requests" in this structure.
        /// </summary>
        public InputList<Inputs.ServiceLevelObjectiveMetricDataQueryArgs> GoodCountMetric
        {
            get => _goodCountMetric ?? (_goodCountMetric = new InputList<Inputs.ServiceLevelObjectiveMetricDataQueryArgs>());
            set => _goodCountMetric = value;
        }

        public ServiceLevelObjectiveMonitoredRequestCountMetricArgs()
        {
        }
        public static new ServiceLevelObjectiveMonitoredRequestCountMetricArgs Empty => new ServiceLevelObjectiveMonitoredRequestCountMetricArgs();
    }
}
