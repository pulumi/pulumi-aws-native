// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationSignals.Inputs
{

    /// <summary>
    /// Configuration for identifying a dependency and its operation
    /// </summary>
    public sealed class ServiceLevelObjectiveDependencyConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("dependencyKeyAttributes", required: true)]
        private InputMap<string>? _dependencyKeyAttributes;

        /// <summary>
        /// This is a string-to-string map. It can include the following fields.
        /// 
        /// - `Type` designates the type of object this is.
        /// - `ResourceType` specifies the type of the resource. This field is used only when the value of the `Type` field is `Resource` or `AWS::Resource` .
        /// - `Name` specifies the name of the object. This is used only if the value of the `Type` field is `Service` , `RemoteService` , or `AWS::Service` .
        /// - `Identifier` identifies the resource objects of this resource. This is used only if the value of the `Type` field is `Resource` or `AWS::Resource` .
        /// - `Environment` specifies the location where this object is hosted, or what it belongs to.
        /// </summary>
        public InputMap<string> DependencyKeyAttributes
        {
            get => _dependencyKeyAttributes ?? (_dependencyKeyAttributes = new InputMap<string>());
            set => _dependencyKeyAttributes = value;
        }

        /// <summary>
        /// When the SLO monitors a specific operation of the dependency, this field specifies the name of that operation in the dependency.
        /// </summary>
        [Input("dependencyOperationName", required: true)]
        public Input<string> DependencyOperationName { get; set; } = null!;

        public ServiceLevelObjectiveDependencyConfigArgs()
        {
        }
        public static new ServiceLevelObjectiveDependencyConfigArgs Empty => new ServiceLevelObjectiveDependencyConfigArgs();
    }
}
