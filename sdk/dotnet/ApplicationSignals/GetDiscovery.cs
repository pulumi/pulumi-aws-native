// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationSignals
{
    public static class GetDiscovery
    {
        /// <summary>
        /// Resource Type definition for AWS::ApplicationSignals::Discovery
        /// </summary>
        public static Task<GetDiscoveryResult> InvokeAsync(GetDiscoveryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDiscoveryResult>("aws-native:applicationsignals:getDiscovery", args ?? new GetDiscoveryArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApplicationSignals::Discovery
        /// </summary>
        public static Output<GetDiscoveryResult> Invoke(GetDiscoveryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDiscoveryResult>("aws-native:applicationsignals:getDiscovery", args ?? new GetDiscoveryInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApplicationSignals::Discovery
        /// </summary>
        public static Output<GetDiscoveryResult> Invoke(GetDiscoveryInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDiscoveryResult>("aws-native:applicationsignals:getDiscovery", args ?? new GetDiscoveryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiscoveryArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        public GetDiscoveryArgs()
        {
        }
        public static new GetDiscoveryArgs Empty => new GetDiscoveryArgs();
    }

    public sealed class GetDiscoveryInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        public GetDiscoveryInvokeArgs()
        {
        }
        public static new GetDiscoveryInvokeArgs Empty => new GetDiscoveryInvokeArgs();
    }


    [OutputType]
    public sealed class GetDiscoveryResult
    {
        public readonly string? AccountId;

        [OutputConstructor]
        private GetDiscoveryResult(string? accountId)
        {
            AccountId = accountId;
        }
    }
}
