// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationSignals.Outputs
{

    /// <summary>
    /// Use this structure to define a metric or metric math expression that you want to use as for a service level objective.
    /// Each `MetricDataQuery` in the `MetricDataQueries` array specifies either a metric to retrieve, or a metric math expression to be performed on retrieved metrics. A single `MetricDataQueries` array can include as many as 20 `MetricDataQuery` structures in the array. The 20 structures can include as many as 10 structures that contain a `MetricStat` parameter to retrieve a metric, and as many as 10 structures that contain the `Expression` parameter to perform a math expression. Of those Expression structures, exactly one must have true as the value for `ReturnData`. The result of this expression used for the SLO.
    /// </summary>
    [OutputType]
    public sealed class ServiceLevelObjectiveMetricDataQuery
    {
        /// <summary>
        /// The ID of the account where the metrics are located, if this is a cross-account alarm.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The math expression to be performed on the returned data.
        /// </summary>
        public readonly string? Expression;
        /// <summary>
        /// A short name used to tie this object to the results in the response.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A metric to be used directly for the SLO, or to be used in the math expression that will be used for the SLO. Within one MetricDataQuery, you must specify either Expression or MetricStat but not both.
        /// </summary>
        public readonly Outputs.ServiceLevelObjectiveMetricStat? MetricStat;
        /// <summary>
        /// This option indicates whether to return the timestamps and raw data values of this metric.
        /// </summary>
        public readonly bool? ReturnData;

        [OutputConstructor]
        private ServiceLevelObjectiveMetricDataQuery(
            string? accountId,

            string? expression,

            string id,

            Outputs.ServiceLevelObjectiveMetricStat? metricStat,

            bool? returnData)
        {
            AccountId = accountId;
            Expression = expression;
            Id = id;
            MetricStat = metricStat;
            ReturnData = returnData;
        }
    }
}
