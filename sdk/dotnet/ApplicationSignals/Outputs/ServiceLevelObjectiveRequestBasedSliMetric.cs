// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationSignals.Outputs
{

    /// <summary>
    /// This structure contains the information about the metric that is used for a request-based SLO.
    /// </summary>
    [OutputType]
    public sealed class ServiceLevelObjectiveRequestBasedSliMetric
    {
        public readonly Outputs.ServiceLevelObjectiveDependencyConfig? DependencyConfig;
        /// <summary>
        /// This is a string-to-string map that contains information about the type of object that this SLO is related to. It can include the following fields.
        /// 
        /// - `Type` designates the type of object that this SLO is related to.
        /// - `ResourceType` specifies the type of the resource. This field is used only when the value of the `Type` field is `Resource` or `AWS::Resource` .
        /// - `Name` specifies the name of the object. This is used only if the value of the `Type` field is `Service` , `RemoteService` , or `AWS::Service` .
        /// - `Identifier` identifies the resource objects of this resource. This is used only if the value of the `Type` field is `Resource` or `AWS::Resource` .
        /// - `Environment` specifies the location where this object is hosted, or what it belongs to.
        /// - `AwsAccountId` allows you to create an SLO for an object that exists in another account.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? KeyAttributes;
        /// <summary>
        /// If the SLO monitors either the LATENCY or AVAILABILITY metric that Application Signals collects, this field displays which of those metrics is used.
        /// </summary>
        public readonly Pulumi.AwsNative.ApplicationSignals.ServiceLevelObjectiveRequestBasedSliMetricMetricType? MetricType;
        /// <summary>
        /// Use this structure to define the metric that you want to use as the "good request" or "bad request" value for a request-based SLO. This value observed for the metric defined in `TotalRequestCountMetric` will be divided by the number found for `MonitoredRequestCountMetric` to determine the percentage of successful requests that this SLO tracks.
        /// </summary>
        public readonly Outputs.ServiceLevelObjectiveMonitoredRequestCountMetric? MonitoredRequestCountMetric;
        /// <summary>
        /// If the SLO monitors a specific operation of the service, this field displays that operation name.
        /// </summary>
        public readonly string? OperationName;
        /// <summary>
        /// This structure defines the metric that is used as the "total requests" number for a request-based SLO. The number observed for this metric is divided by the number of "good requests" or "bad requests" that is observed for the metric defined in `MonitoredRequestCountMetric`.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceLevelObjectiveMetricDataQuery> TotalRequestCountMetric;

        [OutputConstructor]
        private ServiceLevelObjectiveRequestBasedSliMetric(
            Outputs.ServiceLevelObjectiveDependencyConfig? dependencyConfig,

            ImmutableDictionary<string, string>? keyAttributes,

            Pulumi.AwsNative.ApplicationSignals.ServiceLevelObjectiveRequestBasedSliMetricMetricType? metricType,

            Outputs.ServiceLevelObjectiveMonitoredRequestCountMetric? monitoredRequestCountMetric,

            string? operationName,

            ImmutableArray<Outputs.ServiceLevelObjectiveMetricDataQuery> totalRequestCountMetric)
        {
            DependencyConfig = dependencyConfig;
            KeyAttributes = keyAttributes;
            MetricType = metricType;
            MonitoredRequestCountMetric = monitoredRequestCountMetric;
            OperationName = operationName;
            TotalRequestCountMetric = totalRequestCountMetric;
        }
    }
}
