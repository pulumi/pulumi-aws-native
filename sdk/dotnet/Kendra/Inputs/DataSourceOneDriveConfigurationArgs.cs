// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Kendra.Inputs
{

    public sealed class DataSourceOneDriveConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// `TRUE` to disable local groups information.
        /// </summary>
        [Input("disableLocalGroups")]
        public Input<bool>? DisableLocalGroups { get; set; }

        [Input("exclusionPatterns")]
        private InputList<string>? _exclusionPatterns;

        /// <summary>
        /// A list of regular expression patterns to exclude certain documents in your OneDrive. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the document isn't included in the index.
        /// 
        /// The pattern is applied to the file name.
        /// </summary>
        public InputList<string> ExclusionPatterns
        {
            get => _exclusionPatterns ?? (_exclusionPatterns = new InputList<string>());
            set => _exclusionPatterns = value;
        }

        [Input("fieldMappings")]
        private InputList<Inputs.DataSourceToIndexFieldMappingArgs>? _fieldMappings;

        /// <summary>
        /// A list of `DataSourceToIndexFieldMapping` objects that map OneDrive data source attributes or field names to Amazon Kendra index field names. To create custom fields, use the `UpdateIndex` API before you map to OneDrive fields. For more information, see [Mapping data source fields](https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html) . The OneDrive data source field names must exist in your OneDrive custom metadata.
        /// </summary>
        public InputList<Inputs.DataSourceToIndexFieldMappingArgs> FieldMappings
        {
            get => _fieldMappings ?? (_fieldMappings = new InputList<Inputs.DataSourceToIndexFieldMappingArgs>());
            set => _fieldMappings = value;
        }

        [Input("inclusionPatterns")]
        private InputList<string>? _inclusionPatterns;

        /// <summary>
        /// A list of regular expression patterns to include certain documents in your OneDrive. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the document isn't included in the index.
        /// 
        /// The pattern is applied to the file name.
        /// </summary>
        public InputList<string> InclusionPatterns
        {
            get => _inclusionPatterns ?? (_inclusionPatterns = new InputList<string>());
            set => _inclusionPatterns = value;
        }

        /// <summary>
        /// A list of user accounts whose documents should be indexed.
        /// </summary>
        [Input("oneDriveUsers", required: true)]
        public Input<Inputs.DataSourceOneDriveUsersArgs> OneDriveUsers { get; set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of an AWS Secrets Manager secret that contains the user name and password to connect to OneDrive. The user name should be the application ID for the OneDrive application, and the password is the application key for the OneDrive application.
        /// </summary>
        [Input("secretArn", required: true)]
        public Input<string> SecretArn { get; set; } = null!;

        /// <summary>
        /// The Azure Active Directory domain of the organization.
        /// </summary>
        [Input("tenantDomain", required: true)]
        public Input<string> TenantDomain { get; set; } = null!;

        public DataSourceOneDriveConfigurationArgs()
        {
        }
        public static new DataSourceOneDriveConfigurationArgs Empty => new DataSourceOneDriveConfigurationArgs();
    }
}
