// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Kendra.Outputs
{

    [OutputType]
    public sealed class DataSourceSalesforceChatterFeedConfiguration
    {
        /// <summary>
        /// The name of the column in the Salesforce FeedItem table that contains the content to index. Typically this is the `Body` column.
        /// </summary>
        public readonly string DocumentDataFieldName;
        /// <summary>
        /// The name of the column in the Salesforce FeedItem table that contains the title of the document. This is typically the `Title` column.
        /// </summary>
        public readonly string? DocumentTitleFieldName;
        /// <summary>
        /// Maps fields from a Salesforce chatter feed into Amazon Kendra index fields.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataSourceToIndexFieldMapping> FieldMappings;
        /// <summary>
        /// Filters the documents in the feed based on status of the user. When you specify `ACTIVE_USERS` only documents from users who have an active account are indexed. When you specify `STANDARD_USER` only documents for Salesforce standard users are documented. You can specify both.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Kendra.DataSourceSalesforceChatterFeedIncludeFilterType> IncludeFilterTypes;

        [OutputConstructor]
        private DataSourceSalesforceChatterFeedConfiguration(
            string documentDataFieldName,

            string? documentTitleFieldName,

            ImmutableArray<Outputs.DataSourceToIndexFieldMapping> fieldMappings,

            ImmutableArray<Pulumi.AwsNative.Kendra.DataSourceSalesforceChatterFeedIncludeFilterType> includeFilterTypes)
        {
            DocumentDataFieldName = documentDataFieldName;
            DocumentTitleFieldName = documentTitleFieldName;
            FieldMappings = fieldMappings;
            IncludeFilterTypes = includeFilterTypes;
        }
    }
}
