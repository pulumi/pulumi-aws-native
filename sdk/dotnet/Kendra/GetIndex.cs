// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Kendra
{
    public static class GetIndex
    {
        /// <summary>
        /// A Kendra index
        /// </summary>
        public static Task<GetIndexResult> InvokeAsync(GetIndexArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIndexResult>("aws-native:kendra:getIndex", args ?? new GetIndexArgs(), options.WithDefaults());

        /// <summary>
        /// A Kendra index
        /// </summary>
        public static Output<GetIndexResult> Invoke(GetIndexInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIndexResult>("aws-native:kendra:getIndex", args ?? new GetIndexInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// A Kendra index
        /// </summary>
        public static Output<GetIndexResult> Invoke(GetIndexInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIndexResult>("aws-native:kendra:getIndex", args ?? new GetIndexInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIndexArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier for the index. For example: `f4aeaa10-8056-4b2c-a343-522ca0f41234` .
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetIndexArgs()
        {
        }
        public static new GetIndexArgs Empty => new GetIndexArgs();
    }

    public sealed class GetIndexInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier for the index. For example: `f4aeaa10-8056-4b2c-a343-522ca0f41234` .
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetIndexInvokeArgs()
        {
        }
        public static new GetIndexInvokeArgs Empty => new GetIndexInvokeArgs();
    }


    [OutputType]
    public sealed class GetIndexResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the index. For example: `arn:aws:kendra:us-west-2:111122223333:index/0123456789abcdef` .
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Capacity units
        /// </summary>
        public readonly Outputs.IndexCapacityUnitsConfiguration? CapacityUnits;
        /// <summary>
        /// A description for the index
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Document metadata configurations
        /// </summary>
        public readonly ImmutableArray<Outputs.IndexDocumentMetadataConfiguration> DocumentMetadataConfigurations;
        /// <summary>
        /// The identifier for the index. For example: `f4aeaa10-8056-4b2c-a343-522ca0f41234` .
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the index.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// An IAM role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role used when you use the [BatchPutDocument](https://docs.aws.amazon.com/kendra/latest/dg/BatchPutDocument.html) operation to index documents from an Amazon S3 bucket.
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// Tags for labeling the index
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The user context policy.
        /// 
        /// ATTRIBUTE_FILTER
        /// 
        /// - All indexed content is searchable and displayable for all users. If you want to filter search results on user context, you can use the attribute filters of `_user_id` and `_group_ids` or you can provide user and group information in `UserContext` .
        /// 
        /// USER_TOKEN
        /// 
        /// - Enables token-based user access control to filter search results on user context. All documents with no access control and all documents accessible to the user will be searchable and displayable.
        /// </summary>
        public readonly Pulumi.AwsNative.Kendra.IndexUserContextPolicy? UserContextPolicy;
        /// <summary>
        /// Defines the type of user token used for the index.
        /// </summary>
        public readonly ImmutableArray<Outputs.IndexUserTokenConfiguration> UserTokenConfigurations;

        [OutputConstructor]
        private GetIndexResult(
            string? arn,

            Outputs.IndexCapacityUnitsConfiguration? capacityUnits,

            string? description,

            ImmutableArray<Outputs.IndexDocumentMetadataConfiguration> documentMetadataConfigurations,

            string? id,

            string? name,

            string? roleArn,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            Pulumi.AwsNative.Kendra.IndexUserContextPolicy? userContextPolicy,

            ImmutableArray<Outputs.IndexUserTokenConfiguration> userTokenConfigurations)
        {
            Arn = arn;
            CapacityUnits = capacityUnits;
            Description = description;
            DocumentMetadataConfigurations = documentMetadataConfigurations;
            Id = id;
            Name = name;
            RoleArn = roleArn;
            Tags = tags;
            UserContextPolicy = userContextPolicy;
            UserTokenConfigurations = userTokenConfigurations;
        }
    }
}
