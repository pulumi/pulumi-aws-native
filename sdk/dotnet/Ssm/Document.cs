// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ssm
{
    /// <summary>
    /// The AWS::SSM::Document resource is an SSM document in AWS Systems Manager that defines the actions that Systems Manager performs, which can be used to set up and run commands on your instances.
    /// 
    /// ## Example Usage
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sessionPreferencesDocument = new AwsNative.Ssm.Document("sessionPreferencesDocument", new()
    ///     {
    ///         Name = "SSM-SessionManagerRunShell",
    ///         Content = new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["schemaVersion"] = "1.0",
    ///             ["description"] = "Document to hold regional settings for Session Manager",
    ///             ["sessionType"] = "Standard_Stream",
    ///             ["inputs"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["s3BucketName"] = "DOC-EXAMPLE-BUCKET",
    ///                 ["s3KeyPrefix"] = "MyBucketPrefix",
    ///                 ["s3EncryptionEnabled"] = true,
    ///                 ["cloudWatchLogGroupName"] = "MyLogGroupName",
    ///                 ["cloudWatchEncryptionEnabled"] = true,
    ///                 ["cloudWatchStreamingEnabled"] = false,
    ///                 ["kmsKeyId"] = "MyKMSKeyID",
    ///                 ["runAsEnabled"] = false,
    ///                 ["runAsDefaultUser"] = "MyDefaultRunAsUser",
    ///                 ["idleSessionTimeout"] = "20",
    ///                 ["shellProfile"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["windows"] = "example commands",
    ///                     ["linux"] = "example commands",
    ///                 },
    ///             },
    ///         },
    ///         DocumentType = AwsNative.Ssm.DocumentType.Session,
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["documentName"] = "SSM-SessionManagerRunShell",
    ///     };
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sessionPreferencesDocument = new AwsNative.Ssm.Document("sessionPreferencesDocument", new()
    ///     {
    ///         Name = "SSM-SessionManagerRunShell",
    ///         Content = new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["schemaVersion"] = "1.0",
    ///             ["description"] = "Document to hold regional settings for Session Manager",
    ///             ["sessionType"] = "Standard_Stream",
    ///             ["inputs"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["s3BucketName"] = "DOC-EXAMPLE-BUCKET",
    ///                 ["s3KeyPrefix"] = "MyBucketPrefix",
    ///                 ["s3EncryptionEnabled"] = true,
    ///                 ["cloudWatchLogGroupName"] = "MyLogGroupName",
    ///                 ["cloudWatchEncryptionEnabled"] = true,
    ///                 ["cloudWatchStreamingEnabled"] = false,
    ///                 ["kmsKeyId"] = "MyKMSKeyID",
    ///                 ["runAsEnabled"] = false,
    ///                 ["runAsDefaultUser"] = "MyDefaultRunAsUser",
    ///                 ["idleSessionTimeout"] = "20",
    ///                 ["shellProfile"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["windows"] = "example commands",
    ///                     ["linux"] = "example commands",
    ///                 },
    ///             },
    ///         },
    ///         DocumentFormat = AwsNative.Ssm.DocumentFormat.Yaml,
    ///         DocumentType = AwsNative.Ssm.DocumentType.Session,
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["documentName"] = "SSM-SessionManagerRunShell",
    ///     };
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var examplePackageDocument = new AwsNative.Ssm.Document("examplePackageDocument", new()
    ///     {
    ///         Content = "{\"files\": {\"NewPackage_WINDOWS.zip\": {\"checksums\": {\"sha256\": \"36aeb0ec2c706013cf8c68163459678f7f6daa9489cd3f91d52799331EXAMPLE\"}}}, \"publisher\": \"publisherName\", \"schemaVersion\": \"2.0\", \"packages\": {\"_any\": {\"_any\": {\"x86_64\": {\"file\": \"NewPackage_WINDOWS.zip\"}}}}, \"version\": \"1.0\"}",
    ///         DocumentType = AwsNative.Ssm.DocumentType.Package,
    ///         Attachments = new[]
    ///         {
    ///             new AwsNative.Ssm.Inputs.DocumentAttachmentsSourceArgs
    ///             {
    ///                 Key = AwsNative.Ssm.DocumentAttachmentsSourceKey.SourceUrl,
    ///                 Values = new[]
    ///                 {
    ///                     "s3://example-package-path/valid-package",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var examplePackageDocument = new AwsNative.Ssm.Document("examplePackageDocument", new()
    ///     {
    ///         Content = "{\\\"files\\\": {\\\"NewPackage_WINDOWS.zip\\\": {\\\"checksums\\\": {\\\"sha256\\\": \\\"36aeb0ec2c706013cf8c68163459678f7f6daa9489cd3f91d52799331EXAMPLE\\\"}}}, \\\"publisher\\\": \\\"publisherName\\\", \\\"schemaVersion\\\": \\\"2.0\\\", \\\"packages\\\": {\\\"_any\\\": {\\\"_any\\\": {\\\"x86_64\\\": {\\\"file\\\": \\\"NewPackage_WINDOWS.zip\\\"}}}}, \\\"version\\\": \\\"1.0\\\"}",
    ///         DocumentType = AwsNative.Ssm.DocumentType.Package,
    ///         Attachments = new[]
    ///         {
    ///             new AwsNative.Ssm.Inputs.DocumentAttachmentsSourceArgs
    ///             {
    ///                 Key = AwsNative.Ssm.DocumentAttachmentsSourceKey.SourceUrl,
    ///                 Values = new[]
    ///                 {
    ///                     "s3://example-package-path/valid-package",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleChangeCalendarDocument = new AwsNative.Ssm.Document("exampleChangeCalendarDocument", new()
    ///     {
    ///         Content = @"BEGIN:VCALENDAR\r
    /// PRODID:-//AWS//Change Calendar 1.0//EN\r
    /// VERSION:2.0\r
    /// X-CALENDAR-TYPE:DEFAULT_OPEN\r
    /// X-WR-CALDESC:test\r
    /// BEGIN:VTODO\r
    /// DTSTAMP:20200320T004207Z\r
    /// UID:3b5af39a-d0b3-4049-a839-d7bb8af01f92\r
    /// SUMMARY:Add events to this calendar.\r
    /// END:VTODO\r
    /// END:VCALENDAR\r
    /// ",
    ///         DocumentType = AwsNative.Ssm.DocumentType.ChangeCalendar,
    ///         DocumentFormat = AwsNative.Ssm.DocumentFormat.Text,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleChangeCalendarDocument = new AwsNative.Ssm.Document("exampleChangeCalendarDocument", new()
    ///     {
    ///         Content = @"BEGIN:VCALENDAR\r
    /// PRODID:-//AWS//Change Calendar 1.0//EN\r
    /// VERSION:2.0\r
    /// X-CALENDAR-TYPE:DEFAULT_OPEN\r
    /// X-WR-CALDESC:test\r
    /// BEGIN:VTODO\r
    /// DTSTAMP:20200320T004207Z\r
    /// UID:3b5af39a-d0b3-4049-a839-d7bb8af01f92\r
    /// SUMMARY:Add events to this calendar.\r
    /// END:VTODO\r
    /// END:VCALENDAR\r
    /// ",
    ///         DocumentType = AwsNative.Ssm.DocumentType.ChangeCalendar,
    ///         DocumentFormat = AwsNative.Ssm.DocumentFormat.Text,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// </summary>
    [AwsNativeResourceType("aws-native:ssm:Document")]
    public partial class Document : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of key and value pairs that describe attachments to a version of a document.
        /// </summary>
        [Output("attachments")]
        public Output<ImmutableArray<Outputs.DocumentAttachmentsSource>> Attachments { get; private set; } = null!;

        /// <summary>
        /// The content for the Systems Manager document in JSON, YAML or String format.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SSM::Document` for more information about the expected schema for this property.
        /// </summary>
        [Output("content")]
        public Output<object> Content { get; private set; } = null!;

        /// <summary>
        /// Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
        /// </summary>
        [Output("documentFormat")]
        public Output<Pulumi.AwsNative.Ssm.DocumentFormat?> DocumentFormat { get; private set; } = null!;

        /// <summary>
        /// The type of document to create.
        /// </summary>
        [Output("documentType")]
        public Output<Pulumi.AwsNative.Ssm.DocumentType?> DocumentType { get; private set; } = null!;

        /// <summary>
        /// A name for the Systems Manager document.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document.
        /// </summary>
        [Output("requires")]
        public Output<ImmutableArray<Outputs.DocumentRequires>> Requires { get; private set; } = null!;

        /// <summary>
        /// Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Specify a target type to define the kinds of resources the document can run on.
        /// </summary>
        [Output("targetType")]
        public Output<string?> TargetType { get; private set; } = null!;

        /// <summary>
        /// Update method - when set to 'Replace', the update will replace the existing document; when set to 'NewVersion', the update will create a new version.
        /// </summary>
        [Output("updateMethod")]
        public Output<Pulumi.AwsNative.Ssm.DocumentUpdateMethod?> UpdateMethod { get; private set; } = null!;

        /// <summary>
        /// An optional field specifying the version of the artifact you are creating with the document. This value is unique across all versions of a document, and cannot be changed.
        /// </summary>
        [Output("versionName")]
        public Output<string?> VersionName { get; private set; } = null!;


        /// <summary>
        /// Create a Document resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Document(string name, DocumentArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ssm:Document", name, args ?? new DocumentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Document(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ssm:Document", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "documentType",
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Document resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Document Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Document(name, id, options);
        }
    }

    public sealed class DocumentArgs : global::Pulumi.ResourceArgs
    {
        [Input("attachments")]
        private InputList<Inputs.DocumentAttachmentsSourceArgs>? _attachments;

        /// <summary>
        /// A list of key and value pairs that describe attachments to a version of a document.
        /// </summary>
        public InputList<Inputs.DocumentAttachmentsSourceArgs> Attachments
        {
            get => _attachments ?? (_attachments = new InputList<Inputs.DocumentAttachmentsSourceArgs>());
            set => _attachments = value;
        }

        /// <summary>
        /// The content for the Systems Manager document in JSON, YAML or String format.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SSM::Document` for more information about the expected schema for this property.
        /// </summary>
        [Input("content", required: true)]
        public Input<object> Content { get; set; } = null!;

        /// <summary>
        /// Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
        /// </summary>
        [Input("documentFormat")]
        public Input<Pulumi.AwsNative.Ssm.DocumentFormat>? DocumentFormat { get; set; }

        /// <summary>
        /// The type of document to create.
        /// </summary>
        [Input("documentType")]
        public Input<Pulumi.AwsNative.Ssm.DocumentType>? DocumentType { get; set; }

        /// <summary>
        /// A name for the Systems Manager document.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("requires")]
        private InputList<Inputs.DocumentRequiresArgs>? _requires;

        /// <summary>
        /// A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document.
        /// </summary>
        public InputList<Inputs.DocumentRequiresArgs> Requires
        {
            get => _requires ?? (_requires = new InputList<Inputs.DocumentRequiresArgs>());
            set => _requires = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Specify a target type to define the kinds of resources the document can run on.
        /// </summary>
        [Input("targetType")]
        public Input<string>? TargetType { get; set; }

        /// <summary>
        /// Update method - when set to 'Replace', the update will replace the existing document; when set to 'NewVersion', the update will create a new version.
        /// </summary>
        [Input("updateMethod")]
        public Input<Pulumi.AwsNative.Ssm.DocumentUpdateMethod>? UpdateMethod { get; set; }

        /// <summary>
        /// An optional field specifying the version of the artifact you are creating with the document. This value is unique across all versions of a document, and cannot be changed.
        /// </summary>
        [Input("versionName")]
        public Input<string>? VersionName { get; set; }

        public DocumentArgs()
        {
        }
        public static new DocumentArgs Empty => new DocumentArgs();
    }
}
