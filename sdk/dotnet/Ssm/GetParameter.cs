// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ssm
{
    public static class GetParameter
    {
        /// <summary>
        /// The ``AWS::SSM::Parameter`` resource creates an SSM parameter in SYSlong Parameter Store.
        ///   To create an SSM parameter, you must have the IAMlong (IAM) permissions ``ssm:PutParameter`` and ``ssm:AddTagsToResource``. On stack creation, CFNlong adds the following three tags to the parameter: ``aws:cloudformation:stack-name``, ``aws:cloudformation:logical-id``, and ``aws:cloudformation:stack-id``, in addition to any custom tags you specify.
        ///  To add, update, or remove tags during stack update, you must have IAM permissions for both ``ssm:AddTagsToResource`` and ``ssm:RemoveTagsFromResource``. For more information, see [Managing access using policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/security-iam.html#security_iam_access-manage) in the *User Guide*.
        ///   For information about valid values for parameters, see [About requirements and constraints for parameter names](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html#sysman-parameter-name-constraints) in the *User Guide* and [PutParameter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PutParameter.html) in the *API Reference*.
        /// </summary>
        public static Task<GetParameterResult> InvokeAsync(GetParameterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParameterResult>("aws-native:ssm:getParameter", args ?? new GetParameterArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::SSM::Parameter`` resource creates an SSM parameter in SYSlong Parameter Store.
        ///   To create an SSM parameter, you must have the IAMlong (IAM) permissions ``ssm:PutParameter`` and ``ssm:AddTagsToResource``. On stack creation, CFNlong adds the following three tags to the parameter: ``aws:cloudformation:stack-name``, ``aws:cloudformation:logical-id``, and ``aws:cloudformation:stack-id``, in addition to any custom tags you specify.
        ///  To add, update, or remove tags during stack update, you must have IAM permissions for both ``ssm:AddTagsToResource`` and ``ssm:RemoveTagsFromResource``. For more information, see [Managing access using policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/security-iam.html#security_iam_access-manage) in the *User Guide*.
        ///   For information about valid values for parameters, see [About requirements and constraints for parameter names](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html#sysman-parameter-name-constraints) in the *User Guide* and [PutParameter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PutParameter.html) in the *API Reference*.
        /// </summary>
        public static Output<GetParameterResult> Invoke(GetParameterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterResult>("aws-native:ssm:getParameter", args ?? new GetParameterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::SSM::Parameter`` resource creates an SSM parameter in SYSlong Parameter Store.
        ///   To create an SSM parameter, you must have the IAMlong (IAM) permissions ``ssm:PutParameter`` and ``ssm:AddTagsToResource``. On stack creation, CFNlong adds the following three tags to the parameter: ``aws:cloudformation:stack-name``, ``aws:cloudformation:logical-id``, and ``aws:cloudformation:stack-id``, in addition to any custom tags you specify.
        ///  To add, update, or remove tags during stack update, you must have IAM permissions for both ``ssm:AddTagsToResource`` and ``ssm:RemoveTagsFromResource``. For more information, see [Managing access using policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/security-iam.html#security_iam_access-manage) in the *User Guide*.
        ///   For information about valid values for parameters, see [About requirements and constraints for parameter names](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html#sysman-parameter-name-constraints) in the *User Guide* and [PutParameter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PutParameter.html) in the *API Reference*.
        /// </summary>
        public static Output<GetParameterResult> Invoke(GetParameterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterResult>("aws-native:ssm:getParameter", args ?? new GetParameterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParameterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the parameter.
        ///   The reported maximum length of 2048 characters for a parameter name includes 1037 characters that are reserved for internal use by SYS. The maximum length for a parameter name that you specify is 1011 characters.
        ///  This count of 1011 characters includes the characters in the ARN that precede the name you specify. This ARN length will vary depending on your partition and Region. For example, the following 45 characters count toward the 1011 character maximum for a parameter created in the US East (Ohio) Region: ``arn:aws:ssm:us-east-2:111122223333:parameter/``.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetParameterArgs()
        {
        }
        public static new GetParameterArgs Empty => new GetParameterArgs();
    }

    public sealed class GetParameterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the parameter.
        ///   The reported maximum length of 2048 characters for a parameter name includes 1037 characters that are reserved for internal use by SYS. The maximum length for a parameter name that you specify is 1011 characters.
        ///  This count of 1011 characters includes the characters in the ARN that precede the name you specify. This ARN length will vary depending on your partition and Region. For example, the following 45 characters count toward the 1011 character maximum for a parameter created in the US East (Ohio) Region: ``arn:aws:ssm:us-east-2:111122223333:parameter/``.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetParameterInvokeArgs()
        {
        }
        public static new GetParameterInvokeArgs Empty => new GetParameterInvokeArgs();
    }


    [OutputType]
    public sealed class GetParameterResult
    {
        /// <summary>
        /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
        /// </summary>
        public readonly Pulumi.AwsNative.Ssm.ParameterDataType? DataType;
        /// <summary>
        /// The type of parameter.
        ///   Parameters of type ``SecureString`` are not supported by CFNlong.
        /// </summary>
        public readonly Pulumi.AwsNative.Ssm.ParameterType? Type;
        /// <summary>
        /// The parameter value.
        ///   If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.
        /// </summary>
        public readonly string? Value;

        [OutputConstructor]
        private GetParameterResult(
            Pulumi.AwsNative.Ssm.ParameterDataType? dataType,

            Pulumi.AwsNative.Ssm.ParameterType? type,

            string? value)
        {
            DataType = dataType;
            Type = type;
            Value = value;
        }
    }
}
