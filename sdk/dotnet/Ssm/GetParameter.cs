// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ssm
{
    public static class GetParameter
    {
        /// <summary>
        /// The ``AWS::SSM::Parameter`` resource creates an SSM parameter in SYSlong Parameter Store.
        ///   To create an SSM parameter, you must have the IAMlong (IAM) permissions ``ssm:PutParameter`` and ``ssm:AddTagsToResource``. On stack creation, CFNlong adds the following three tags to the parameter: ``aws:cloudformation:stack-name``, ``aws:cloudformation:logical-id``, and ``aws:cloudformation:stack-id``, in addition to any custom tags you specify.
        ///  To add, update, or remove tags during stack update, you must have IAM permissions for both ``ssm:AddTagsToResource`` and ``ssm:RemoveTagsFromResource``. For more information, see [Managing Access Using Policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/security-iam.html#security_iam_access-manage) in the *User Guide*.
        ///   For information about valid values for parameters, see [Requirements and Constraints for Parameter Names](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html#sysman-paramete
        /// </summary>
        public static Task<GetParameterResult> InvokeAsync(GetParameterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParameterResult>("aws-native:ssm:getParameter", args ?? new GetParameterArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::SSM::Parameter`` resource creates an SSM parameter in SYSlong Parameter Store.
        ///   To create an SSM parameter, you must have the IAMlong (IAM) permissions ``ssm:PutParameter`` and ``ssm:AddTagsToResource``. On stack creation, CFNlong adds the following three tags to the parameter: ``aws:cloudformation:stack-name``, ``aws:cloudformation:logical-id``, and ``aws:cloudformation:stack-id``, in addition to any custom tags you specify.
        ///  To add, update, or remove tags during stack update, you must have IAM permissions for both ``ssm:AddTagsToResource`` and ``ssm:RemoveTagsFromResource``. For more information, see [Managing Access Using Policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/security-iam.html#security_iam_access-manage) in the *User Guide*.
        ///   For information about valid values for parameters, see [Requirements and Constraints for Parameter Names](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html#sysman-paramete
        /// </summary>
        public static Output<GetParameterResult> Invoke(GetParameterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterResult>("aws-native:ssm:getParameter", args ?? new GetParameterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParameterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the parameter.
        ///  The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter ARN, is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetParameterArgs()
        {
        }
        public static new GetParameterArgs Empty => new GetParameterArgs();
    }

    public sealed class GetParameterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the parameter.
        ///  The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter ARN, is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetParameterInvokeArgs()
        {
        }
        public static new GetParameterInvokeArgs Empty => new GetParameterInvokeArgs();
    }


    [OutputType]
    public sealed class GetParameterResult
    {
        /// <summary>
        /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
        /// </summary>
        public readonly Pulumi.AwsNative.Ssm.ParameterDataType? DataType;
        /// <summary>
        /// The type of parameter.
        ///   Although ``SecureString`` is included in the list of valid values, CFNlong does *not* currently support creating a ``SecureString`` parameter type.
        /// </summary>
        public readonly Pulumi.AwsNative.Ssm.ParameterType? Type;
        /// <summary>
        /// The parameter value.
        ///   If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.
        /// </summary>
        public readonly string? Value;

        [OutputConstructor]
        private GetParameterResult(
            Pulumi.AwsNative.Ssm.ParameterDataType? dataType,

            Pulumi.AwsNative.Ssm.ParameterType? type,

            string? value)
        {
            DataType = dataType;
            Type = type;
            Value = value;
        }
    }
}
