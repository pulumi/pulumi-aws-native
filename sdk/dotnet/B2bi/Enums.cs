// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.B2bi
{
    [EnumType]
    public readonly struct CapabilityType : IEquatable<CapabilityType>
    {
        private readonly string _value;

        private CapabilityType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static CapabilityType Edi { get; } = new CapabilityType("edi");

        public static bool operator ==(CapabilityType left, CapabilityType right) => left.Equals(right);
        public static bool operator !=(CapabilityType left, CapabilityType right) => !left.Equals(right);

        public static explicit operator string(CapabilityType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CapabilityType other && Equals(other);
        public bool Equals(CapabilityType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct CapabilityX12TransactionSet : IEquatable<CapabilityX12TransactionSet>
    {
        private readonly string _value;

        private CapabilityX12TransactionSet(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static CapabilityX12TransactionSet X12110 { get; } = new CapabilityX12TransactionSet("X12_110");
        public static CapabilityX12TransactionSet X12180 { get; } = new CapabilityX12TransactionSet("X12_180");
        public static CapabilityX12TransactionSet X12204 { get; } = new CapabilityX12TransactionSet("X12_204");
        public static CapabilityX12TransactionSet X12210 { get; } = new CapabilityX12TransactionSet("X12_210");
        public static CapabilityX12TransactionSet X12214 { get; } = new CapabilityX12TransactionSet("X12_214");
        public static CapabilityX12TransactionSet X12215 { get; } = new CapabilityX12TransactionSet("X12_215");
        public static CapabilityX12TransactionSet X12310 { get; } = new CapabilityX12TransactionSet("X12_310");
        public static CapabilityX12TransactionSet X12315 { get; } = new CapabilityX12TransactionSet("X12_315");
        public static CapabilityX12TransactionSet X12322 { get; } = new CapabilityX12TransactionSet("X12_322");
        public static CapabilityX12TransactionSet X12404 { get; } = new CapabilityX12TransactionSet("X12_404");
        public static CapabilityX12TransactionSet X12410 { get; } = new CapabilityX12TransactionSet("X12_410");
        public static CapabilityX12TransactionSet X12820 { get; } = new CapabilityX12TransactionSet("X12_820");
        public static CapabilityX12TransactionSet X12824 { get; } = new CapabilityX12TransactionSet("X12_824");
        public static CapabilityX12TransactionSet X12830 { get; } = new CapabilityX12TransactionSet("X12_830");
        public static CapabilityX12TransactionSet X12846 { get; } = new CapabilityX12TransactionSet("X12_846");
        public static CapabilityX12TransactionSet X12850 { get; } = new CapabilityX12TransactionSet("X12_850");
        public static CapabilityX12TransactionSet X12852 { get; } = new CapabilityX12TransactionSet("X12_852");
        public static CapabilityX12TransactionSet X12855 { get; } = new CapabilityX12TransactionSet("X12_855");
        public static CapabilityX12TransactionSet X12856 { get; } = new CapabilityX12TransactionSet("X12_856");
        public static CapabilityX12TransactionSet X12860 { get; } = new CapabilityX12TransactionSet("X12_860");
        public static CapabilityX12TransactionSet X12861 { get; } = new CapabilityX12TransactionSet("X12_861");
        public static CapabilityX12TransactionSet X12864 { get; } = new CapabilityX12TransactionSet("X12_864");
        public static CapabilityX12TransactionSet X12940 { get; } = new CapabilityX12TransactionSet("X12_940");
        public static CapabilityX12TransactionSet X12990 { get; } = new CapabilityX12TransactionSet("X12_990");
        public static CapabilityX12TransactionSet X12997 { get; } = new CapabilityX12TransactionSet("X12_997");

        public static bool operator ==(CapabilityX12TransactionSet left, CapabilityX12TransactionSet right) => left.Equals(right);
        public static bool operator !=(CapabilityX12TransactionSet left, CapabilityX12TransactionSet right) => !left.Equals(right);

        public static explicit operator string(CapabilityX12TransactionSet value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CapabilityX12TransactionSet other && Equals(other);
        public bool Equals(CapabilityX12TransactionSet other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct CapabilityX12Version : IEquatable<CapabilityX12Version>
    {
        private readonly string _value;

        private CapabilityX12Version(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static CapabilityX12Version Version4010 { get; } = new CapabilityX12Version("VERSION_4010");
        public static CapabilityX12Version Version4030 { get; } = new CapabilityX12Version("VERSION_4030");
        public static CapabilityX12Version Version5010 { get; } = new CapabilityX12Version("VERSION_5010");

        public static bool operator ==(CapabilityX12Version left, CapabilityX12Version right) => left.Equals(right);
        public static bool operator !=(CapabilityX12Version left, CapabilityX12Version right) => !left.Equals(right);

        public static explicit operator string(CapabilityX12Version value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CapabilityX12Version other && Equals(other);
        public bool Equals(CapabilityX12Version other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ProfileLogging : IEquatable<ProfileLogging>
    {
        private readonly string _value;

        private ProfileLogging(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ProfileLogging Enabled { get; } = new ProfileLogging("ENABLED");
        public static ProfileLogging Disabled { get; } = new ProfileLogging("DISABLED");

        public static bool operator ==(ProfileLogging left, ProfileLogging right) => left.Equals(right);
        public static bool operator !=(ProfileLogging left, ProfileLogging right) => !left.Equals(right);

        public static explicit operator string(ProfileLogging value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ProfileLogging other && Equals(other);
        public bool Equals(ProfileLogging other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct TransformerFileFormat : IEquatable<TransformerFileFormat>
    {
        private readonly string _value;

        private TransformerFileFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TransformerFileFormat Xml { get; } = new TransformerFileFormat("XML");
        public static TransformerFileFormat Json { get; } = new TransformerFileFormat("JSON");

        public static bool operator ==(TransformerFileFormat left, TransformerFileFormat right) => left.Equals(right);
        public static bool operator !=(TransformerFileFormat left, TransformerFileFormat right) => !left.Equals(right);

        public static explicit operator string(TransformerFileFormat value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TransformerFileFormat other && Equals(other);
        public bool Equals(TransformerFileFormat other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct TransformerStatus : IEquatable<TransformerStatus>
    {
        private readonly string _value;

        private TransformerStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TransformerStatus Active { get; } = new TransformerStatus("active");
        public static TransformerStatus Inactive { get; } = new TransformerStatus("inactive");

        public static bool operator ==(TransformerStatus left, TransformerStatus right) => left.Equals(right);
        public static bool operator !=(TransformerStatus left, TransformerStatus right) => !left.Equals(right);

        public static explicit operator string(TransformerStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TransformerStatus other && Equals(other);
        public bool Equals(TransformerStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct TransformerX12TransactionSet : IEquatable<TransformerX12TransactionSet>
    {
        private readonly string _value;

        private TransformerX12TransactionSet(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TransformerX12TransactionSet X12110 { get; } = new TransformerX12TransactionSet("X12_110");
        public static TransformerX12TransactionSet X12180 { get; } = new TransformerX12TransactionSet("X12_180");
        public static TransformerX12TransactionSet X12204 { get; } = new TransformerX12TransactionSet("X12_204");
        public static TransformerX12TransactionSet X12210 { get; } = new TransformerX12TransactionSet("X12_210");
        public static TransformerX12TransactionSet X12214 { get; } = new TransformerX12TransactionSet("X12_214");
        public static TransformerX12TransactionSet X12215 { get; } = new TransformerX12TransactionSet("X12_215");
        public static TransformerX12TransactionSet X12310 { get; } = new TransformerX12TransactionSet("X12_310");
        public static TransformerX12TransactionSet X12315 { get; } = new TransformerX12TransactionSet("X12_315");
        public static TransformerX12TransactionSet X12322 { get; } = new TransformerX12TransactionSet("X12_322");
        public static TransformerX12TransactionSet X12404 { get; } = new TransformerX12TransactionSet("X12_404");
        public static TransformerX12TransactionSet X12410 { get; } = new TransformerX12TransactionSet("X12_410");
        public static TransformerX12TransactionSet X12820 { get; } = new TransformerX12TransactionSet("X12_820");
        public static TransformerX12TransactionSet X12824 { get; } = new TransformerX12TransactionSet("X12_824");
        public static TransformerX12TransactionSet X12830 { get; } = new TransformerX12TransactionSet("X12_830");
        public static TransformerX12TransactionSet X12846 { get; } = new TransformerX12TransactionSet("X12_846");
        public static TransformerX12TransactionSet X12850 { get; } = new TransformerX12TransactionSet("X12_850");
        public static TransformerX12TransactionSet X12852 { get; } = new TransformerX12TransactionSet("X12_852");
        public static TransformerX12TransactionSet X12855 { get; } = new TransformerX12TransactionSet("X12_855");
        public static TransformerX12TransactionSet X12856 { get; } = new TransformerX12TransactionSet("X12_856");
        public static TransformerX12TransactionSet X12860 { get; } = new TransformerX12TransactionSet("X12_860");
        public static TransformerX12TransactionSet X12861 { get; } = new TransformerX12TransactionSet("X12_861");
        public static TransformerX12TransactionSet X12864 { get; } = new TransformerX12TransactionSet("X12_864");
        public static TransformerX12TransactionSet X12940 { get; } = new TransformerX12TransactionSet("X12_940");
        public static TransformerX12TransactionSet X12990 { get; } = new TransformerX12TransactionSet("X12_990");
        public static TransformerX12TransactionSet X12997 { get; } = new TransformerX12TransactionSet("X12_997");

        public static bool operator ==(TransformerX12TransactionSet left, TransformerX12TransactionSet right) => left.Equals(right);
        public static bool operator !=(TransformerX12TransactionSet left, TransformerX12TransactionSet right) => !left.Equals(right);

        public static explicit operator string(TransformerX12TransactionSet value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TransformerX12TransactionSet other && Equals(other);
        public bool Equals(TransformerX12TransactionSet other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct TransformerX12Version : IEquatable<TransformerX12Version>
    {
        private readonly string _value;

        private TransformerX12Version(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TransformerX12Version Version4010 { get; } = new TransformerX12Version("VERSION_4010");
        public static TransformerX12Version Version4030 { get; } = new TransformerX12Version("VERSION_4030");
        public static TransformerX12Version Version5010 { get; } = new TransformerX12Version("VERSION_5010");

        public static bool operator ==(TransformerX12Version left, TransformerX12Version right) => left.Equals(right);
        public static bool operator !=(TransformerX12Version left, TransformerX12Version right) => !left.Equals(right);

        public static explicit operator string(TransformerX12Version value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TransformerX12Version other && Equals(other);
        public bool Equals(TransformerX12Version other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
