// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.B2bi
{
    public static class GetCapability
    {
        /// <summary>
        /// Definition of AWS::B2BI::Capability Resource Type
        /// </summary>
        public static Task<GetCapabilityResult> InvokeAsync(GetCapabilityArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCapabilityResult>("aws-native:b2bi:getCapability", args ?? new GetCapabilityArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::B2BI::Capability Resource Type
        /// </summary>
        public static Output<GetCapabilityResult> Invoke(GetCapabilityInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCapabilityResult>("aws-native:b2bi:getCapability", args ?? new GetCapabilityInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::B2BI::Capability Resource Type
        /// </summary>
        public static Output<GetCapabilityResult> Invoke(GetCapabilityInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCapabilityResult>("aws-native:b2bi:getCapability", args ?? new GetCapabilityInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCapabilityArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns a system-assigned unique identifier for the capability.
        /// </summary>
        [Input("capabilityId", required: true)]
        public string CapabilityId { get; set; } = null!;

        public GetCapabilityArgs()
        {
        }
        public static new GetCapabilityArgs Empty => new GetCapabilityArgs();
    }

    public sealed class GetCapabilityInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns a system-assigned unique identifier for the capability.
        /// </summary>
        [Input("capabilityId", required: true)]
        public Input<string> CapabilityId { get; set; } = null!;

        public GetCapabilityInvokeArgs()
        {
        }
        public static new GetCapabilityInvokeArgs Empty => new GetCapabilityInvokeArgs();
    }


    [OutputType]
    public sealed class GetCapabilityResult
    {
        /// <summary>
        /// Returns an Amazon Resource Name (ARN) for a specific AWS resource, such as a capability, partnership, profile, or transformer.
        /// </summary>
        public readonly string? CapabilityArn;
        /// <summary>
        /// Returns a system-assigned unique identifier for the capability.
        /// </summary>
        public readonly string? CapabilityId;
        /// <summary>
        /// Specifies a structure that contains the details for a capability.
        /// </summary>
        public readonly Outputs.CapabilityConfigurationProperties? Configuration;
        /// <summary>
        /// Returns a timestamp for creation date and time of the capability.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// Specifies one or more locations in Amazon S3, each specifying an EDI document that can be used with this capability. Each item contains the name of the bucket and the key, to identify the document's location.
        /// </summary>
        public readonly ImmutableArray<Outputs.CapabilityS3Location> InstructionsDocuments;
        /// <summary>
        /// Returns a timestamp that identifies the most recent date and time that the capability was modified.
        /// </summary>
        public readonly string? ModifiedAt;
        /// <summary>
        /// The display name of the capability.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetCapabilityResult(
            string? capabilityArn,

            string? capabilityId,

            Outputs.CapabilityConfigurationProperties? configuration,

            string? createdAt,

            ImmutableArray<Outputs.CapabilityS3Location> instructionsDocuments,

            string? modifiedAt,

            string? name,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            CapabilityArn = capabilityArn;
            CapabilityId = capabilityId;
            Configuration = configuration;
            CreatedAt = createdAt;
            InstructionsDocuments = instructionsDocuments;
            ModifiedAt = modifiedAt;
            Name = name;
            Tags = tags;
        }
    }
}
