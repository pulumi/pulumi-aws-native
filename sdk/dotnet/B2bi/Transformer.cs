// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.B2bi
{
    /// <summary>
    /// Definition of AWS::B2BI::Transformer Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:b2bi:Transformer")]
    public partial class Transformer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Returns a timestamp indicating when the transformer was created. For example, `2023-07-20T19:58:44.624Z` .
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("ediType")]
        public Output<Outputs.TransformerEdiTypeProperties?> EdiType { get; private set; } = null!;

        [Output("fileFormat")]
        public Output<Pulumi.AwsNative.B2bi.TransformerFileFormat?> FileFormat { get; private set; } = null!;

        /// <summary>
        /// Returns a structure that contains the format options for the transformation.
        /// </summary>
        [Output("inputConversion")]
        public Output<Outputs.TransformerInputConversion?> InputConversion { get; private set; } = null!;

        /// <summary>
        /// Returns the structure that contains the mapping template and its language (either XSLT or JSONATA).
        /// </summary>
        [Output("mapping")]
        public Output<Outputs.TransformerMapping?> Mapping { get; private set; } = null!;

        /// <summary>
        /// This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
        /// </summary>
        [Output("mappingTemplate")]
        public Output<string?> MappingTemplate { get; private set; } = null!;

        /// <summary>
        /// Returns a timestamp representing the date and time for the most recent change for the transformer object.
        /// </summary>
        [Output("modifiedAt")]
        public Output<string> ModifiedAt { get; private set; } = null!;

        /// <summary>
        /// Returns the descriptive name for the transformer.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Returns the `OutputConversion` object, which contains the format options for the outbound transformation.
        /// </summary>
        [Output("outputConversion")]
        public Output<Outputs.TransformerOutputConversion?> OutputConversion { get; private set; } = null!;

        /// <summary>
        /// This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
        /// </summary>
        [Output("sampleDocument")]
        public Output<string?> SampleDocument { get; private set; } = null!;

        /// <summary>
        /// Returns a structure that contains the Amazon S3 bucket and an array of the corresponding keys used to identify the location for your sample documents.
        /// </summary>
        [Output("sampleDocuments")]
        public Output<Outputs.TransformerSampleDocuments?> SampleDocuments { get; private set; } = null!;

        /// <summary>
        /// Returns the state of the newly created transformer. The transformer can be either `active` or `inactive` . For the transformer to be used in a capability, its status must `active` .
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.B2bi.TransformerStatus> Status { get; private set; } = null!;

        /// <summary>
        /// A key-value pair for a specific transformer. Tags are metadata that you can use to search for and group capabilities for various purposes.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Returns an Amazon Resource Name (ARN) for a specific transformer.
        /// </summary>
        [Output("transformerArn")]
        public Output<string> TransformerArn { get; private set; } = null!;

        /// <summary>
        /// The system-assigned unique identifier for the transformer.
        /// </summary>
        [Output("transformerId")]
        public Output<string> TransformerId { get; private set; } = null!;


        /// <summary>
        /// Create a Transformer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Transformer(string name, TransformerArgs args, CustomResourceOptions? options = null)
            : base("aws-native:b2bi:Transformer", name, args ?? new TransformerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Transformer(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:b2bi:Transformer", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Transformer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Transformer Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Transformer(name, id, options);
        }
    }

    public sealed class TransformerArgs : global::Pulumi.ResourceArgs
    {
        [Input("ediType")]
        public Input<Inputs.TransformerEdiTypePropertiesArgs>? EdiType { get; set; }

        [Input("fileFormat")]
        public Input<Pulumi.AwsNative.B2bi.TransformerFileFormat>? FileFormat { get; set; }

        /// <summary>
        /// Returns a structure that contains the format options for the transformation.
        /// </summary>
        [Input("inputConversion")]
        public Input<Inputs.TransformerInputConversionArgs>? InputConversion { get; set; }

        /// <summary>
        /// Returns the structure that contains the mapping template and its language (either XSLT or JSONATA).
        /// </summary>
        [Input("mapping")]
        public Input<Inputs.TransformerMappingArgs>? Mapping { get; set; }

        /// <summary>
        /// This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
        /// </summary>
        [Input("mappingTemplate")]
        public Input<string>? MappingTemplate { get; set; }

        /// <summary>
        /// Returns the descriptive name for the transformer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Returns the `OutputConversion` object, which contains the format options for the outbound transformation.
        /// </summary>
        [Input("outputConversion")]
        public Input<Inputs.TransformerOutputConversionArgs>? OutputConversion { get; set; }

        /// <summary>
        /// This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
        /// </summary>
        [Input("sampleDocument")]
        public Input<string>? SampleDocument { get; set; }

        /// <summary>
        /// Returns a structure that contains the Amazon S3 bucket and an array of the corresponding keys used to identify the location for your sample documents.
        /// </summary>
        [Input("sampleDocuments")]
        public Input<Inputs.TransformerSampleDocumentsArgs>? SampleDocuments { get; set; }

        /// <summary>
        /// Returns the state of the newly created transformer. The transformer can be either `active` or `inactive` . For the transformer to be used in a capability, its status must `active` .
        /// </summary>
        [Input("status", required: true)]
        public Input<Pulumi.AwsNative.B2bi.TransformerStatus> Status { get; set; } = null!;

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A key-value pair for a specific transformer. Tags are metadata that you can use to search for and group capabilities for various purposes.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public TransformerArgs()
        {
        }
        public static new TransformerArgs Empty => new TransformerArgs();
    }
}
