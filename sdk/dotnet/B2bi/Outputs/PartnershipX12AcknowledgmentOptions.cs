// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.B2bi.Outputs
{

    [OutputType]
    public sealed class PartnershipX12AcknowledgmentOptions
    {
        /// <summary>
        /// Specifies whether functional acknowledgments (997/999) should be generated for incoming X12 transactions. Valid values are `DO_NOT_GENERATE` , `GENERATE_ALL_SEGMENTS` and `GENERATE_WITHOUT_TRANSACTION_SET_RESPONSE_LOOP` .
        /// 
        /// If you choose `GENERATE_WITHOUT_TRANSACTION_SET_RESPONSE_LOOP` , AWS B2B Data Interchange skips the AK2_Loop when generating an acknowledgment document.
        /// </summary>
        public readonly Pulumi.AwsNative.B2bi.PartnershipX12FunctionalAcknowledgment FunctionalAcknowledgment;
        /// <summary>
        /// Specifies whether technical acknowledgments (TA1) should be generated for incoming X12 interchanges. Valid values are `DO_NOT_GENERATE` and `GENERATE_ALL_SEGMENTS` and.
        /// </summary>
        public readonly Pulumi.AwsNative.B2bi.PartnershipX12TechnicalAcknowledgment TechnicalAcknowledgment;

        [OutputConstructor]
        private PartnershipX12AcknowledgmentOptions(
            Pulumi.AwsNative.B2bi.PartnershipX12FunctionalAcknowledgment functionalAcknowledgment,

            Pulumi.AwsNative.B2bi.PartnershipX12TechnicalAcknowledgment technicalAcknowledgment)
        {
            FunctionalAcknowledgment = functionalAcknowledgment;
            TechnicalAcknowledgment = technicalAcknowledgment;
        }
    }
}
