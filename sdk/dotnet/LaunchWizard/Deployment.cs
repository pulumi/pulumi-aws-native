// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.LaunchWizard
{
    /// <summary>
    /// Definition of AWS::LaunchWizard::Deployment Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:launchwizard:Deployment")]
    public partial class Deployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the LaunchWizard deployment
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Timestamp of LaunchWizard deployment creation
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Timestamp of LaunchWizard deployment deletion
        /// </summary>
        [Output("deletedAt")]
        public Output<string> DeletedAt { get; private set; } = null!;

        /// <summary>
        /// Deployment ID of the LaunchWizard deployment
        /// </summary>
        [Output("deploymentId")]
        public Output<string> DeploymentId { get; private set; } = null!;

        /// <summary>
        /// Workload deployment pattern name
        /// </summary>
        [Output("deploymentPatternName")]
        public Output<string> DeploymentPatternName { get; private set; } = null!;

        /// <summary>
        /// Name of LaunchWizard deployment
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Resource Group Name created for LaunchWizard deployment
        /// </summary>
        [Output("resourceGroup")]
        public Output<string> ResourceGroup { get; private set; } = null!;

        /// <summary>
        /// LaunchWizard deployment specifications
        /// </summary>
        [Output("specifications")]
        public Output<ImmutableDictionary<string, string>> Specifications { get; private set; } = null!;

        /// <summary>
        /// Status of LaunchWizard deployment
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.LaunchWizard.DeploymentStatus> Status { get; private set; } = null!;

        /// <summary>
        /// Tags for LaunchWizard deployment
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Workload Name for LaunchWizard deployment
        /// </summary>
        [Output("workloadName")]
        public Output<string> WorkloadName { get; private set; } = null!;


        /// <summary>
        /// Create a Deployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Deployment(string name, DeploymentArgs args, CustomResourceOptions? options = null)
            : base("aws-native:launchwizard:Deployment", name, args ?? new DeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Deployment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:launchwizard:Deployment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "deploymentPatternName",
                    "name",
                    "workloadName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Deployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Deployment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Deployment(name, id, options);
        }
    }

    public sealed class DeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Workload deployment pattern name
        /// </summary>
        [Input("deploymentPatternName", required: true)]
        public Input<string> DeploymentPatternName { get; set; } = null!;

        /// <summary>
        /// Name of LaunchWizard deployment
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("specifications", required: true)]
        private InputMap<string>? _specifications;

        /// <summary>
        /// LaunchWizard deployment specifications
        /// </summary>
        public InputMap<string> Specifications
        {
            get => _specifications ?? (_specifications = new InputMap<string>());
            set => _specifications = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Tags for LaunchWizard deployment
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Workload Name for LaunchWizard deployment
        /// </summary>
        [Input("workloadName", required: true)]
        public Input<string> WorkloadName { get; set; } = null!;

        public DeploymentArgs()
        {
        }
        public static new DeploymentArgs Empty => new DeploymentArgs();
    }
}
