// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.LaunchWizard
{
    [EnumType]
    public readonly struct DeploymentStatus : IEquatable<DeploymentStatus>
    {
        private readonly string _value;

        private DeploymentStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static DeploymentStatus Completed { get; } = new DeploymentStatus("COMPLETED");
        public static DeploymentStatus Creating { get; } = new DeploymentStatus("CREATING");
        public static DeploymentStatus DeleteInProgress { get; } = new DeploymentStatus("DELETE_IN_PROGRESS");
        public static DeploymentStatus DeleteInitiating { get; } = new DeploymentStatus("DELETE_INITIATING");
        public static DeploymentStatus DeleteFailed { get; } = new DeploymentStatus("DELETE_FAILED");
        public static DeploymentStatus Deleted { get; } = new DeploymentStatus("DELETED");
        public static DeploymentStatus Failed { get; } = new DeploymentStatus("FAILED");
        public static DeploymentStatus InProgress { get; } = new DeploymentStatus("IN_PROGRESS");
        public static DeploymentStatus Validating { get; } = new DeploymentStatus("VALIDATING");

        public static bool operator ==(DeploymentStatus left, DeploymentStatus right) => left.Equals(right);
        public static bool operator !=(DeploymentStatus left, DeploymentStatus right) => !left.Equals(right);

        public static explicit operator string(DeploymentStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DeploymentStatus other && Equals(other);
        public bool Equals(DeploymentStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
