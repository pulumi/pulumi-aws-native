// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Odb
{
    /// <summary>
    /// The AWS::ODB::CloudVmCluster resource creates a Cloud VM Cluster
    /// </summary>
    [AwsNativeResourceType("aws-native:odb:CloudVmCluster")]
    public partial class CloudVmCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The unique identifier of the Exadata infrastructure that this VM cluster belongs to.
        /// </summary>
        [Output("cloudExadataInfrastructureId")]
        public Output<string?> CloudExadataInfrastructureId { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the VM cluster.
        /// </summary>
        [Output("cloudVmClusterArn")]
        public Output<string> CloudVmClusterArn { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the VM cluster.
        /// </summary>
        [Output("cloudVmClusterId")]
        public Output<string> CloudVmClusterId { get; private set; } = null!;

        /// <summary>
        /// The name of the Grid Infrastructure (GI) cluster.
        /// </summary>
        [Output("clusterName")]
        public Output<string?> ClusterName { get; private set; } = null!;

        /// <summary>
        /// The OCI model compute model used when you create or clone an instance: ECPU or OCPU. An ECPU is an abstracted measure of compute resources. ECPUs are based on the number of cores elastically allocated from a pool of compute and storage servers. An OCPU is a legacy physical measure of compute resources. OCPUs are based on the physical core of a processor with hyper-threading enabled.
        /// </summary>
        [Output("computeModel")]
        public Output<string> ComputeModel { get; private set; } = null!;

        /// <summary>
        /// The number of CPU cores enabled on the VM cluster.
        /// </summary>
        [Output("cpuCoreCount")]
        public Output<int?> CpuCoreCount { get; private set; } = null!;

        /// <summary>
        /// The set of diagnostic collection options enabled for the VM cluster.
        /// </summary>
        [Output("dataCollectionOptions")]
        public Output<Outputs.CloudVmClusterDataCollectionOptions?> DataCollectionOptions { get; private set; } = null!;

        /// <summary>
        /// The size of the data disk group, in terabytes (TB), that's allocated for the VM cluster.
        /// </summary>
        [Output("dataStorageSizeInTbs")]
        public Output<double?> DataStorageSizeInTbs { get; private set; } = null!;

        /// <summary>
        /// The amount of local node storage, in gigabytes (GB), that's allocated for the VM cluster.
        /// </summary>
        [Output("dbNodeStorageSizeInGbs")]
        public Output<int?> DbNodeStorageSizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The DB nodes that are implicitly created and managed as part of this VM Cluster.
        /// </summary>
        [Output("dbNodes")]
        public Output<ImmutableArray<Outputs.CloudVmClusterDbNode>> DbNodes { get; private set; } = null!;

        /// <summary>
        /// The list of database servers for the VM cluster.
        /// </summary>
        [Output("dbServers")]
        public Output<ImmutableArray<string>> DbServers { get; private set; } = null!;

        /// <summary>
        /// The type of redundancy configured for the VM cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
        /// </summary>
        [Output("diskRedundancy")]
        public Output<string> DiskRedundancy { get; private set; } = null!;

        /// <summary>
        /// The user-friendly name for the VM cluster.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The domain of the VM cluster.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// The software version of the Oracle Grid Infrastructure (GI) for the VM cluster.
        /// </summary>
        [Output("giVersion")]
        public Output<string?> GiVersion { get; private set; } = null!;

        /// <summary>
        /// The host name for the VM cluster.
        /// </summary>
        [Output("hostname")]
        public Output<string?> Hostname { get; private set; } = null!;

        /// <summary>
        /// Indicates whether database backups to local Exadata storage is enabled for the VM cluster.
        /// </summary>
        [Output("isLocalBackupEnabled")]
        public Output<bool?> IsLocalBackupEnabled { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the VM cluster is configured with a sparse disk group.
        /// </summary>
        [Output("isSparseDiskgroupEnabled")]
        public Output<bool?> IsSparseDiskgroupEnabled { get; private set; } = null!;

        /// <summary>
        /// The Oracle license model applied to the VM cluster.
        /// </summary>
        [Output("licenseModel")]
        public Output<Pulumi.AwsNative.Odb.CloudVmClusterLicenseModel?> LicenseModel { get; private set; } = null!;

        /// <summary>
        /// The port number configured for the listener on the VM cluster.
        /// </summary>
        [Output("listenerPort")]
        public Output<int> ListenerPort { get; private set; } = null!;

        /// <summary>
        /// The amount of memory, in gigabytes (GB), that's allocated for the VM cluster.
        /// </summary>
        [Output("memorySizeInGbs")]
        public Output<int?> MemorySizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The number of nodes in the VM cluster.
        /// </summary>
        [Output("nodeCount")]
        public Output<int> NodeCount { get; private set; } = null!;

        /// <summary>
        /// The name of the OCI resource anchor for the VM cluster.
        /// </summary>
        [Output("ociResourceAnchorName")]
        public Output<string> OciResourceAnchorName { get; private set; } = null!;

        /// <summary>
        /// The HTTPS link to the VM cluster in OCI.
        /// </summary>
        [Output("ociUrl")]
        public Output<string> OciUrl { get; private set; } = null!;

        /// <summary>
        /// The OCID of the VM cluster.
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the ODB network for the VM cluster.
        /// </summary>
        [Output("odbNetworkId")]
        public Output<string?> OdbNetworkId { get; private set; } = null!;

        /// <summary>
        /// The FQDN of the DNS record for the Single Client Access Name (SCAN) IP addresses that are associated with the VM cluster.
        /// </summary>
        [Output("scanDnsName")]
        public Output<string> ScanDnsName { get; private set; } = null!;

        /// <summary>
        /// The OCID of the SCAN IP addresses that are associated with the VM cluster.
        /// </summary>
        [Output("scanIpIds")]
        public Output<ImmutableArray<string>> ScanIpIds { get; private set; } = null!;

        /// <summary>
        /// Property description not available.
        /// </summary>
        [Output("scanListenerPortTcp")]
        public Output<int?> ScanListenerPortTcp { get; private set; } = null!;

        /// <summary>
        /// The hardware model name of the Exadata infrastructure that's running the VM cluster.
        /// </summary>
        [Output("shape")]
        public Output<string> Shape { get; private set; } = null!;

        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the VM cluster.
        /// </summary>
        [Output("sshPublicKeys")]
        public Output<ImmutableArray<string>> SshPublicKeys { get; private set; } = null!;

        /// <summary>
        /// The amount of local node storage, in gigabytes (GB), that's allocated to the VM cluster.
        /// </summary>
        [Output("storageSizeInGbs")]
        public Output<int> StorageSizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The operating system version of the image chosen for the VM cluster.
        /// </summary>
        [Output("systemVersion")]
        public Output<string?> SystemVersion { get; private set; } = null!;

        /// <summary>
        /// Tags to assign to the Vm Cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The time zone of the VM cluster.
        /// </summary>
        [Output("timeZone")]
        public Output<string?> TimeZone { get; private set; } = null!;

        /// <summary>
        /// The virtual IP (VIP) addresses that are associated with the VM cluster. Oracle's Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the VM cluster to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
        /// </summary>
        [Output("vipIds")]
        public Output<ImmutableArray<string>> VipIds { get; private set; } = null!;


        /// <summary>
        /// Create a CloudVmCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudVmCluster(string name, CloudVmClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:odb:CloudVmCluster", name, args ?? new CloudVmClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudVmCluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:odb:CloudVmCluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "cloudExadataInfrastructureId",
                    "clusterName",
                    "cpuCoreCount",
                    "dataCollectionOptions",
                    "dataStorageSizeInTbs",
                    "dbNodeStorageSizeInGbs",
                    "dbNodes[*].dbServerId",
                    "dbServers[*]",
                    "displayName",
                    "giVersion",
                    "hostname",
                    "isLocalBackupEnabled",
                    "isSparseDiskgroupEnabled",
                    "licenseModel",
                    "memorySizeInGbs",
                    "odbNetworkId",
                    "scanListenerPortTcp",
                    "sshPublicKeys[*]",
                    "systemVersion",
                    "timeZone",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudVmCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudVmCluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CloudVmCluster(name, id, options);
        }
    }

    public sealed class CloudVmClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier of the Exadata infrastructure that this VM cluster belongs to.
        /// </summary>
        [Input("cloudExadataInfrastructureId")]
        public Input<string>? CloudExadataInfrastructureId { get; set; }

        /// <summary>
        /// The name of the Grid Infrastructure (GI) cluster.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The number of CPU cores enabled on the VM cluster.
        /// </summary>
        [Input("cpuCoreCount")]
        public Input<int>? CpuCoreCount { get; set; }

        /// <summary>
        /// The set of diagnostic collection options enabled for the VM cluster.
        /// </summary>
        [Input("dataCollectionOptions")]
        public Input<Inputs.CloudVmClusterDataCollectionOptionsArgs>? DataCollectionOptions { get; set; }

        /// <summary>
        /// The size of the data disk group, in terabytes (TB), that's allocated for the VM cluster.
        /// </summary>
        [Input("dataStorageSizeInTbs")]
        public Input<double>? DataStorageSizeInTbs { get; set; }

        /// <summary>
        /// The amount of local node storage, in gigabytes (GB), that's allocated for the VM cluster.
        /// </summary>
        [Input("dbNodeStorageSizeInGbs")]
        public Input<int>? DbNodeStorageSizeInGbs { get; set; }

        [Input("dbNodes")]
        private InputList<Inputs.CloudVmClusterDbNodeArgs>? _dbNodes;

        /// <summary>
        /// The DB nodes that are implicitly created and managed as part of this VM Cluster.
        /// </summary>
        public InputList<Inputs.CloudVmClusterDbNodeArgs> DbNodes
        {
            get => _dbNodes ?? (_dbNodes = new InputList<Inputs.CloudVmClusterDbNodeArgs>());
            set => _dbNodes = value;
        }

        [Input("dbServers")]
        private InputList<string>? _dbServers;

        /// <summary>
        /// The list of database servers for the VM cluster.
        /// </summary>
        public InputList<string> DbServers
        {
            get => _dbServers ?? (_dbServers = new InputList<string>());
            set => _dbServers = value;
        }

        /// <summary>
        /// The user-friendly name for the VM cluster.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The software version of the Oracle Grid Infrastructure (GI) for the VM cluster.
        /// </summary>
        [Input("giVersion")]
        public Input<string>? GiVersion { get; set; }

        /// <summary>
        /// The host name for the VM cluster.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// Indicates whether database backups to local Exadata storage is enabled for the VM cluster.
        /// </summary>
        [Input("isLocalBackupEnabled")]
        public Input<bool>? IsLocalBackupEnabled { get; set; }

        /// <summary>
        /// Indicates whether the VM cluster is configured with a sparse disk group.
        /// </summary>
        [Input("isSparseDiskgroupEnabled")]
        public Input<bool>? IsSparseDiskgroupEnabled { get; set; }

        /// <summary>
        /// The Oracle license model applied to the VM cluster.
        /// </summary>
        [Input("licenseModel")]
        public Input<Pulumi.AwsNative.Odb.CloudVmClusterLicenseModel>? LicenseModel { get; set; }

        /// <summary>
        /// The amount of memory, in gigabytes (GB), that's allocated for the VM cluster.
        /// </summary>
        [Input("memorySizeInGbs")]
        public Input<int>? MemorySizeInGbs { get; set; }

        /// <summary>
        /// The unique identifier of the ODB network for the VM cluster.
        /// </summary>
        [Input("odbNetworkId")]
        public Input<string>? OdbNetworkId { get; set; }

        /// <summary>
        /// Property description not available.
        /// </summary>
        [Input("scanListenerPortTcp")]
        public Input<int>? ScanListenerPortTcp { get; set; }

        [Input("sshPublicKeys")]
        private InputList<string>? _sshPublicKeys;

        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the VM cluster.
        /// </summary>
        public InputList<string> SshPublicKeys
        {
            get => _sshPublicKeys ?? (_sshPublicKeys = new InputList<string>());
            set => _sshPublicKeys = value;
        }

        /// <summary>
        /// The operating system version of the image chosen for the VM cluster.
        /// </summary>
        [Input("systemVersion")]
        public Input<string>? SystemVersion { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Tags to assign to the Vm Cluster.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The time zone of the VM cluster.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public CloudVmClusterArgs()
        {
        }
        public static new CloudVmClusterArgs Empty => new CloudVmClusterArgs();
    }
}
