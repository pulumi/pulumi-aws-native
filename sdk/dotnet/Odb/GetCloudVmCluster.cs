// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Odb
{
    public static class GetCloudVmCluster
    {
        /// <summary>
        /// The AWS::ODB::CloudVmCluster resource creates a Cloud VM Cluster
        /// </summary>
        public static Task<GetCloudVmClusterResult> InvokeAsync(GetCloudVmClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudVmClusterResult>("aws-native:odb:getCloudVmCluster", args ?? new GetCloudVmClusterArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::ODB::CloudVmCluster resource creates a Cloud VM Cluster
        /// </summary>
        public static Output<GetCloudVmClusterResult> Invoke(GetCloudVmClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudVmClusterResult>("aws-native:odb:getCloudVmCluster", args ?? new GetCloudVmClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::ODB::CloudVmCluster resource creates a Cloud VM Cluster
        /// </summary>
        public static Output<GetCloudVmClusterResult> Invoke(GetCloudVmClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudVmClusterResult>("aws-native:odb:getCloudVmCluster", args ?? new GetCloudVmClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudVmClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the VM cluster.
        /// </summary>
        [Input("cloudVmClusterArn", required: true)]
        public string CloudVmClusterArn { get; set; } = null!;

        public GetCloudVmClusterArgs()
        {
        }
        public static new GetCloudVmClusterArgs Empty => new GetCloudVmClusterArgs();
    }

    public sealed class GetCloudVmClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the VM cluster.
        /// </summary>
        [Input("cloudVmClusterArn", required: true)]
        public Input<string> CloudVmClusterArn { get; set; } = null!;

        public GetCloudVmClusterInvokeArgs()
        {
        }
        public static new GetCloudVmClusterInvokeArgs Empty => new GetCloudVmClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudVmClusterResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the VM cluster.
        /// </summary>
        public readonly string? CloudVmClusterArn;
        /// <summary>
        /// The unique identifier of the VM cluster.
        /// </summary>
        public readonly string? CloudVmClusterId;
        /// <summary>
        /// The OCI model compute model used when you create or clone an instance: ECPU or OCPU. An ECPU is an abstracted measure of compute resources. ECPUs are based on the number of cores elastically allocated from a pool of compute and storage servers. An OCPU is a legacy physical measure of compute resources. OCPUs are based on the physical core of a processor with hyper-threading enabled.
        /// </summary>
        public readonly string? ComputeModel;
        /// <summary>
        /// The DB nodes that are implicitly created and managed as part of this VM Cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.CloudVmClusterDbNode> DbNodes;
        /// <summary>
        /// The type of redundancy configured for the VM cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
        /// </summary>
        public readonly string? DiskRedundancy;
        /// <summary>
        /// The domain of the VM cluster.
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// The port number configured for the listener on the VM cluster.
        /// </summary>
        public readonly int? ListenerPort;
        /// <summary>
        /// The number of nodes in the VM cluster.
        /// </summary>
        public readonly int? NodeCount;
        /// <summary>
        /// The name of the OCI resource anchor for the VM cluster.
        /// </summary>
        public readonly string? OciResourceAnchorName;
        /// <summary>
        /// The HTTPS link to the VM cluster in OCI.
        /// </summary>
        public readonly string? OciUrl;
        /// <summary>
        /// The OCID of the VM cluster.
        /// </summary>
        public readonly string? Ocid;
        /// <summary>
        /// The FQDN of the DNS record for the Single Client Access Name (SCAN) IP addresses that are associated with the VM cluster.
        /// </summary>
        public readonly string? ScanDnsName;
        /// <summary>
        /// The OCID of the SCAN IP addresses that are associated with the VM cluster.
        /// </summary>
        public readonly ImmutableArray<string> ScanIpIds;
        /// <summary>
        /// The hardware model name of the Exadata infrastructure that's running the VM cluster.
        /// </summary>
        public readonly string? Shape;
        /// <summary>
        /// The amount of local node storage, in gigabytes (GB), that's allocated to the VM cluster.
        /// </summary>
        public readonly int? StorageSizeInGbs;
        /// <summary>
        /// Tags to assign to the Vm Cluster.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The virtual IP (VIP) addresses that are associated with the VM cluster. Oracle's Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the VM cluster to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
        /// </summary>
        public readonly ImmutableArray<string> VipIds;

        [OutputConstructor]
        private GetCloudVmClusterResult(
            string? cloudVmClusterArn,

            string? cloudVmClusterId,

            string? computeModel,

            ImmutableArray<Outputs.CloudVmClusterDbNode> dbNodes,

            string? diskRedundancy,

            string? domain,

            int? listenerPort,

            int? nodeCount,

            string? ociResourceAnchorName,

            string? ociUrl,

            string? ocid,

            string? scanDnsName,

            ImmutableArray<string> scanIpIds,

            string? shape,

            int? storageSizeInGbs,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            ImmutableArray<string> vipIds)
        {
            CloudVmClusterArn = cloudVmClusterArn;
            CloudVmClusterId = cloudVmClusterId;
            ComputeModel = computeModel;
            DbNodes = dbNodes;
            DiskRedundancy = diskRedundancy;
            Domain = domain;
            ListenerPort = listenerPort;
            NodeCount = nodeCount;
            OciResourceAnchorName = ociResourceAnchorName;
            OciUrl = ociUrl;
            Ocid = ocid;
            ScanDnsName = scanDnsName;
            ScanIpIds = scanIpIds;
            Shape = shape;
            StorageSizeInGbs = storageSizeInGbs;
            Tags = tags;
            VipIds = vipIds;
        }
    }
}
