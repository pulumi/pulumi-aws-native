// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EventSchemas
{
    public static class GetRegistryPolicy
    {
        /// <summary>
        /// Resource Type definition for AWS::EventSchemas::RegistryPolicy
        /// </summary>
        public static Task<GetRegistryPolicyResult> InvokeAsync(GetRegistryPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegistryPolicyResult>("aws-native:eventschemas:getRegistryPolicy", args ?? new GetRegistryPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EventSchemas::RegistryPolicy
        /// </summary>
        public static Output<GetRegistryPolicyResult> Invoke(GetRegistryPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRegistryPolicyResult>("aws-native:eventschemas:getRegistryPolicy", args ?? new GetRegistryPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegistryPolicyArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRegistryPolicyArgs()
        {
        }
    }

    public sealed class GetRegistryPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRegistryPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRegistryPolicyResult
    {
        public readonly string? Id;
        public readonly object? Policy;
        public readonly string? RegistryName;
        public readonly string? RevisionId;

        [OutputConstructor]
        private GetRegistryPolicyResult(
            string? id,

            object? policy,

            string? registryName,

            string? revisionId)
        {
            Id = id;
            Policy = policy;
            RegistryName = registryName;
            RevisionId = revisionId;
        }
    }
}
