// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3Outposts
{
    public static class GetBucketPolicy
    {
        /// <summary>
        /// Resource Type Definition for AWS::S3Outposts::BucketPolicy
        /// </summary>
        public static Task<GetBucketPolicyResult> InvokeAsync(GetBucketPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBucketPolicyResult>("aws-native:s3outposts:getBucketPolicy", args ?? new GetBucketPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type Definition for AWS::S3Outposts::BucketPolicy
        /// </summary>
        public static Output<GetBucketPolicyResult> Invoke(GetBucketPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBucketPolicyResult>("aws-native:s3outposts:getBucketPolicy", args ?? new GetBucketPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBucketPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the specified bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public string Bucket { get; set; } = null!;

        public GetBucketPolicyArgs()
        {
        }
    }

    public sealed class GetBucketPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the specified bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        public GetBucketPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBucketPolicyResult
    {
        /// <summary>
        /// A policy document containing permissions to add to the specified bucket.
        /// </summary>
        public readonly object? PolicyDocument;

        [OutputConstructor]
        private GetBucketPolicyResult(object? policyDocument)
        {
            PolicyDocument = policyDocument;
        }
    }
}
