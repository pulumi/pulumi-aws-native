// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.CleanRooms
{
    [EnumType]
    public readonly struct CollaborationMemberAbility : IEquatable<CollaborationMemberAbility>
    {
        private readonly string _value;

        private CollaborationMemberAbility(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static CollaborationMemberAbility CanQuery { get; } = new CollaborationMemberAbility("CAN_QUERY");
        public static CollaborationMemberAbility CanReceiveResults { get; } = new CollaborationMemberAbility("CAN_RECEIVE_RESULTS");

        public static bool operator ==(CollaborationMemberAbility left, CollaborationMemberAbility right) => left.Equals(right);
        public static bool operator !=(CollaborationMemberAbility left, CollaborationMemberAbility right) => !left.Equals(right);

        public static explicit operator string(CollaborationMemberAbility value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CollaborationMemberAbility other && Equals(other);
        public bool Equals(CollaborationMemberAbility other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct CollaborationQueryLogStatus : IEquatable<CollaborationQueryLogStatus>
    {
        private readonly string _value;

        private CollaborationQueryLogStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static CollaborationQueryLogStatus Enabled { get; } = new CollaborationQueryLogStatus("ENABLED");
        public static CollaborationQueryLogStatus Disabled { get; } = new CollaborationQueryLogStatus("DISABLED");

        public static bool operator ==(CollaborationQueryLogStatus left, CollaborationQueryLogStatus right) => left.Equals(right);
        public static bool operator !=(CollaborationQueryLogStatus left, CollaborationQueryLogStatus right) => !left.Equals(right);

        public static explicit operator string(CollaborationQueryLogStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CollaborationQueryLogStatus other && Equals(other);
        public bool Equals(CollaborationQueryLogStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ConfiguredTableAnalysisMethod : IEquatable<ConfiguredTableAnalysisMethod>
    {
        private readonly string _value;

        private ConfiguredTableAnalysisMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ConfiguredTableAnalysisMethod DirectQuery { get; } = new ConfiguredTableAnalysisMethod("DIRECT_QUERY");

        public static bool operator ==(ConfiguredTableAnalysisMethod left, ConfiguredTableAnalysisMethod right) => left.Equals(right);
        public static bool operator !=(ConfiguredTableAnalysisMethod left, ConfiguredTableAnalysisMethod right) => !left.Equals(right);

        public static explicit operator string(ConfiguredTableAnalysisMethod value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ConfiguredTableAnalysisMethod other && Equals(other);
        public bool Equals(ConfiguredTableAnalysisMethod other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ConfiguredTableAnalysisRuleType : IEquatable<ConfiguredTableAnalysisRuleType>
    {
        private readonly string _value;

        private ConfiguredTableAnalysisRuleType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ConfiguredTableAnalysisRuleType Aggregation { get; } = new ConfiguredTableAnalysisRuleType("AGGREGATION");
        public static ConfiguredTableAnalysisRuleType List { get; } = new ConfiguredTableAnalysisRuleType("LIST");

        public static bool operator ==(ConfiguredTableAnalysisRuleType left, ConfiguredTableAnalysisRuleType right) => left.Equals(right);
        public static bool operator !=(ConfiguredTableAnalysisRuleType left, ConfiguredTableAnalysisRuleType right) => !left.Equals(right);

        public static explicit operator string(ConfiguredTableAnalysisRuleType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ConfiguredTableAnalysisRuleType other && Equals(other);
        public bool Equals(ConfiguredTableAnalysisRuleType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct MembershipQueryLogStatus : IEquatable<MembershipQueryLogStatus>
    {
        private readonly string _value;

        private MembershipQueryLogStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static MembershipQueryLogStatus Enabled { get; } = new MembershipQueryLogStatus("ENABLED");
        public static MembershipQueryLogStatus Disabled { get; } = new MembershipQueryLogStatus("DISABLED");

        public static bool operator ==(MembershipQueryLogStatus left, MembershipQueryLogStatus right) => left.Equals(right);
        public static bool operator !=(MembershipQueryLogStatus left, MembershipQueryLogStatus right) => !left.Equals(right);

        public static explicit operator string(MembershipQueryLogStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is MembershipQueryLogStatus other && Equals(other);
        public bool Equals(MembershipQueryLogStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
