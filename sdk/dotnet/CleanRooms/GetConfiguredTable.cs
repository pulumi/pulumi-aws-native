// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CleanRooms
{
    public static class GetConfiguredTable
    {
        /// <summary>
        /// Represents a table that can be associated with collaborations
        /// </summary>
        public static Task<GetConfiguredTableResult> InvokeAsync(GetConfiguredTableArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfiguredTableResult>("aws-native:cleanrooms:getConfiguredTable", args ?? new GetConfiguredTableArgs(), options.WithDefaults());

        /// <summary>
        /// Represents a table that can be associated with collaborations
        /// </summary>
        public static Output<GetConfiguredTableResult> Invoke(GetConfiguredTableInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfiguredTableResult>("aws-native:cleanrooms:getConfiguredTable", args ?? new GetConfiguredTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfiguredTableArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns the unique identifier of the specified configured table.
        /// 
        /// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
        /// </summary>
        [Input("configuredTableIdentifier", required: true)]
        public string ConfiguredTableIdentifier { get; set; } = null!;

        public GetConfiguredTableArgs()
        {
        }
        public static new GetConfiguredTableArgs Empty => new GetConfiguredTableArgs();
    }

    public sealed class GetConfiguredTableInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns the unique identifier of the specified configured table.
        /// 
        /// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
        /// </summary>
        [Input("configuredTableIdentifier", required: true)]
        public Input<string> ConfiguredTableIdentifier { get; set; } = null!;

        public GetConfiguredTableInvokeArgs()
        {
        }
        public static new GetConfiguredTableInvokeArgs Empty => new GetConfiguredTableInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfiguredTableResult
    {
        /// <summary>
        /// A specification about how data from the configured table can be used in a query.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConfiguredTableAnalysisRule> AnalysisRules;
        /// <summary>
        /// Returns the Amazon Resource Name (ARN) of the specified configured table.
        /// 
        /// Example: `arn:aws:cleanrooms:us-east-1:111122223333:configuredtable/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111`
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Returns the unique identifier of the specified configured table.
        /// 
        /// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
        /// </summary>
        public readonly string? ConfiguredTableIdentifier;
        /// <summary>
        /// A description for the configured table.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A name for the configured table.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetConfiguredTableResult(
            ImmutableArray<Outputs.ConfiguredTableAnalysisRule> analysisRules,

            string? arn,

            string? configuredTableIdentifier,

            string? description,

            string? name,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            AnalysisRules = analysisRules;
            Arn = arn;
            ConfiguredTableIdentifier = configuredTableIdentifier;
            Description = description;
            Name = name;
            Tags = tags;
        }
    }
}
