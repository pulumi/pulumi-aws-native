// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CleanRooms
{
    /// <summary>
    /// Represents a table that can be queried within a collaboration
    /// </summary>
    [AwsNativeResourceType("aws-native:cleanrooms:ConfiguredTableAssociation")]
    public partial class ConfiguredTableAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Returns the Amazon Resource Name (ARN) of the specified configured table association.
        /// 
        /// Example: `arn:aws:cleanrooms:us-east-1:111122223333:configuredtable/a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// An analysis rule for a configured table association. This analysis rule specifies how data from the table can be used within its associated collaboration. In the console, the `ConfiguredTableAssociationAnalysisRule` is referred to as the *collaboration analysis rule* .
        /// </summary>
        [Output("configuredTableAssociationAnalysisRules")]
        public Output<ImmutableArray<Outputs.ConfiguredTableAssociationAnalysisRule>> ConfiguredTableAssociationAnalysisRules { get; private set; } = null!;

        /// <summary>
        /// Returns the unique identifier of the specified configured table association.
        /// 
        /// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
        /// </summary>
        [Output("configuredTableAssociationIdentifier")]
        public Output<string> ConfiguredTableAssociationIdentifier { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for the configured table to be associated to. Currently accepts a configured table ID.
        /// </summary>
        [Output("configuredTableIdentifier")]
        public Output<string> ConfiguredTableIdentifier { get; private set; } = null!;

        /// <summary>
        /// A description of the configured table association.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The unique ID for the membership this configured table association belongs to.
        /// </summary>
        [Output("membershipIdentifier")]
        public Output<string> MembershipIdentifier { get; private set; } = null!;

        /// <summary>
        /// The name of the configured table association, in lowercase. The table is identified by this name when running protected queries against the underlying data.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The service will assume this role to access catalog metadata and query the table.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a ConfiguredTableAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfiguredTableAssociation(string name, ConfiguredTableAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:cleanrooms:ConfiguredTableAssociation", name, args ?? new ConfiguredTableAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfiguredTableAssociation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cleanrooms:ConfiguredTableAssociation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "configuredTableIdentifier",
                    "membershipIdentifier",
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfiguredTableAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfiguredTableAssociation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ConfiguredTableAssociation(name, id, options);
        }
    }

    public sealed class ConfiguredTableAssociationArgs : global::Pulumi.ResourceArgs
    {
        [Input("configuredTableAssociationAnalysisRules")]
        private InputList<Inputs.ConfiguredTableAssociationAnalysisRuleArgs>? _configuredTableAssociationAnalysisRules;

        /// <summary>
        /// An analysis rule for a configured table association. This analysis rule specifies how data from the table can be used within its associated collaboration. In the console, the `ConfiguredTableAssociationAnalysisRule` is referred to as the *collaboration analysis rule* .
        /// </summary>
        public InputList<Inputs.ConfiguredTableAssociationAnalysisRuleArgs> ConfiguredTableAssociationAnalysisRules
        {
            get => _configuredTableAssociationAnalysisRules ?? (_configuredTableAssociationAnalysisRules = new InputList<Inputs.ConfiguredTableAssociationAnalysisRuleArgs>());
            set => _configuredTableAssociationAnalysisRules = value;
        }

        /// <summary>
        /// A unique identifier for the configured table to be associated to. Currently accepts a configured table ID.
        /// </summary>
        [Input("configuredTableIdentifier", required: true)]
        public Input<string> ConfiguredTableIdentifier { get; set; } = null!;

        /// <summary>
        /// A description of the configured table association.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique ID for the membership this configured table association belongs to.
        /// </summary>
        [Input("membershipIdentifier", required: true)]
        public Input<string> MembershipIdentifier { get; set; } = null!;

        /// <summary>
        /// The name of the configured table association, in lowercase. The table is identified by this name when running protected queries against the underlying data.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The service will assume this role to access catalog metadata and query the table.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public ConfiguredTableAssociationArgs()
        {
        }
        public static new ConfiguredTableAssociationArgs Empty => new ConfiguredTableAssociationArgs();
    }
}
