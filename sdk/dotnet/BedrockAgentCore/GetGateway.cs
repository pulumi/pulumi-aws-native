// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.BedrockAgentCore
{
    public static class GetGateway
    {
        /// <summary>
        /// Definition of AWS::BedrockAgentCore::Gateway Resource Type
        /// </summary>
        public static Task<GetGatewayResult> InvokeAsync(GetGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayResult>("aws-native:bedrockagentcore:getGateway", args ?? new GetGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::BedrockAgentCore::Gateway Resource Type
        /// </summary>
        public static Output<GetGatewayResult> Invoke(GetGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayResult>("aws-native:bedrockagentcore:getGateway", args ?? new GetGatewayInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::BedrockAgentCore::Gateway Resource Type
        /// </summary>
        public static Output<GetGatewayResult> Invoke(GetGatewayInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayResult>("aws-native:bedrockagentcore:getGateway", args ?? new GetGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayArgs : global::Pulumi.InvokeArgs
    {
        [Input("gatewayIdentifier", required: true)]
        public string GatewayIdentifier { get; set; } = null!;

        public GetGatewayArgs()
        {
        }
        public static new GetGatewayArgs Empty => new GetGatewayArgs();
    }

    public sealed class GetGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("gatewayIdentifier", required: true)]
        public Input<string> GatewayIdentifier { get; set; } = null!;

        public GetGatewayInvokeArgs()
        {
        }
        public static new GetGatewayInvokeArgs Empty => new GetGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayResult
    {
        public readonly Outputs.GatewayAuthorizerConfigurationProperties? AuthorizerConfiguration;
        public readonly Pulumi.AwsNative.BedrockAgentCore.GatewayAuthorizerType? AuthorizerType;
        public readonly string? CreatedAt;
        public readonly string? Description;
        public readonly Pulumi.AwsNative.BedrockAgentCore.GatewayExceptionLevel? ExceptionLevel;
        public readonly string? GatewayArn;
        public readonly string? GatewayIdentifier;
        public readonly string? GatewayUrl;
        public readonly string? KmsKeyArn;
        public readonly string? Name;
        public readonly Outputs.GatewayProtocolConfigurationProperties? ProtocolConfiguration;
        public readonly Pulumi.AwsNative.BedrockAgentCore.GatewayProtocolType? ProtocolType;
        public readonly string? RoleArn;
        public readonly Pulumi.AwsNative.BedrockAgentCore.GatewayStatus? Status;
        public readonly ImmutableArray<string> StatusReasons;
        /// <summary>
        /// The tags for the gateway.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly string? UpdatedAt;
        public readonly Outputs.GatewayWorkloadIdentityDetails? WorkloadIdentityDetails;

        [OutputConstructor]
        private GetGatewayResult(
            Outputs.GatewayAuthorizerConfigurationProperties? authorizerConfiguration,

            Pulumi.AwsNative.BedrockAgentCore.GatewayAuthorizerType? authorizerType,

            string? createdAt,

            string? description,

            Pulumi.AwsNative.BedrockAgentCore.GatewayExceptionLevel? exceptionLevel,

            string? gatewayArn,

            string? gatewayIdentifier,

            string? gatewayUrl,

            string? kmsKeyArn,

            string? name,

            Outputs.GatewayProtocolConfigurationProperties? protocolConfiguration,

            Pulumi.AwsNative.BedrockAgentCore.GatewayProtocolType? protocolType,

            string? roleArn,

            Pulumi.AwsNative.BedrockAgentCore.GatewayStatus? status,

            ImmutableArray<string> statusReasons,

            ImmutableDictionary<string, string>? tags,

            string? updatedAt,

            Outputs.GatewayWorkloadIdentityDetails? workloadIdentityDetails)
        {
            AuthorizerConfiguration = authorizerConfiguration;
            AuthorizerType = authorizerType;
            CreatedAt = createdAt;
            Description = description;
            ExceptionLevel = exceptionLevel;
            GatewayArn = gatewayArn;
            GatewayIdentifier = gatewayIdentifier;
            GatewayUrl = gatewayUrl;
            KmsKeyArn = kmsKeyArn;
            Name = name;
            ProtocolConfiguration = protocolConfiguration;
            ProtocolType = protocolType;
            RoleArn = roleArn;
            Status = status;
            StatusReasons = statusReasons;
            Tags = tags;
            UpdatedAt = updatedAt;
            WorkloadIdentityDetails = workloadIdentityDetails;
        }
    }
}
