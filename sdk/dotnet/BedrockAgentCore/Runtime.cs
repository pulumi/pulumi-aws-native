// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.BedrockAgentCore
{
    /// <summary>
    /// Resource Type definition for AWS::BedrockAgentCore::Runtime
    /// </summary>
    [AwsNativeResourceType("aws-native:bedrockagentcore:Runtime")]
    public partial class Runtime : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name(ARN) that uniquely identifies the Agent
        /// </summary>
        [Output("agentRuntimeArn")]
        public Output<string> AgentRuntimeArn { get; private set; } = null!;

        /// <summary>
        /// The artifact of the agent
        /// </summary>
        [Output("agentRuntimeArtifact")]
        public Output<Outputs.RuntimeAgentRuntimeArtifact> AgentRuntimeArtifact { get; private set; } = null!;

        /// <summary>
        /// Identifier for a resource
        /// </summary>
        [Output("agentRuntimeId")]
        public Output<string> AgentRuntimeId { get; private set; } = null!;

        /// <summary>
        /// Name for a resource
        /// </summary>
        [Output("agentRuntimeName")]
        public Output<string> AgentRuntimeName { get; private set; } = null!;

        /// <summary>
        /// Version of the Agent
        /// </summary>
        [Output("agentRuntimeVersion")]
        public Output<string> AgentRuntimeVersion { get; private set; } = null!;

        /// <summary>
        /// Authorizer configuration for the agent runtime
        /// </summary>
        [Output("authorizerConfiguration")]
        public Output<Outputs.RuntimeAuthorizerConfiguration?> AuthorizerConfiguration { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the Agent was created
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Description of the resource
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Environment variables for the agent runtime
        /// </summary>
        [Output("environmentVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// When resource was last updated
        /// </summary>
        [Output("lastUpdatedAt")]
        public Output<string> LastUpdatedAt { get; private set; } = null!;

        /// <summary>
        /// Network access configuration for the Agent
        /// </summary>
        [Output("networkConfiguration")]
        public Output<Outputs.RuntimeNetworkConfiguration> NetworkConfiguration { get; private set; } = null!;

        /// <summary>
        /// Protocol configuration for the agent runtime
        /// </summary>
        [Output("protocolConfiguration")]
        public Output<Pulumi.AwsNative.BedrockAgentCore.RuntimeProtocolConfiguration?> ProtocolConfiguration { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of an IAM role
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// Current status of the agent
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.BedrockAgentCore.RuntimeAgentStatus> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Workload identity details for the agent
        /// </summary>
        [Output("workloadIdentityDetails")]
        public Output<Outputs.RuntimeWorkloadIdentityDetails> WorkloadIdentityDetails { get; private set; } = null!;


        /// <summary>
        /// Create a Runtime resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Runtime(string name, RuntimeArgs args, CustomResourceOptions? options = null)
            : base("aws-native:bedrockagentcore:Runtime", name, args ?? new RuntimeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Runtime(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:bedrockagentcore:Runtime", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "agentRuntimeName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Runtime resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Runtime Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Runtime(name, id, options);
        }
    }

    public sealed class RuntimeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The artifact of the agent
        /// </summary>
        [Input("agentRuntimeArtifact", required: true)]
        public Input<Inputs.RuntimeAgentRuntimeArtifactArgs> AgentRuntimeArtifact { get; set; } = null!;

        /// <summary>
        /// Name for a resource
        /// </summary>
        [Input("agentRuntimeName", required: true)]
        public Input<string> AgentRuntimeName { get; set; } = null!;

        /// <summary>
        /// Authorizer configuration for the agent runtime
        /// </summary>
        [Input("authorizerConfiguration")]
        public Input<Inputs.RuntimeAuthorizerConfigurationArgs>? AuthorizerConfiguration { get; set; }

        /// <summary>
        /// Description of the resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// Environment variables for the agent runtime
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Network access configuration for the Agent
        /// </summary>
        [Input("networkConfiguration", required: true)]
        public Input<Inputs.RuntimeNetworkConfigurationArgs> NetworkConfiguration { get; set; } = null!;

        /// <summary>
        /// Protocol configuration for the agent runtime
        /// </summary>
        [Input("protocolConfiguration")]
        public Input<Pulumi.AwsNative.BedrockAgentCore.RuntimeProtocolConfiguration>? ProtocolConfiguration { get; set; }

        /// <summary>
        /// Amazon Resource Name (ARN) of an IAM role
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public RuntimeArgs()
        {
        }
        public static new RuntimeArgs Empty => new RuntimeArgs();
    }
}
