// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.BedrockAgentCore
{
    public static class GetGatewayTarget
    {
        /// <summary>
        /// Definition of AWS::BedrockAgentCore::GatewayTarget Resource Type
        /// </summary>
        public static Task<GetGatewayTargetResult> InvokeAsync(GetGatewayTargetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayTargetResult>("aws-native:bedrockagentcore:getGatewayTarget", args ?? new GetGatewayTargetArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::BedrockAgentCore::GatewayTarget Resource Type
        /// </summary>
        public static Output<GetGatewayTargetResult> Invoke(GetGatewayTargetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayTargetResult>("aws-native:bedrockagentcore:getGatewayTarget", args ?? new GetGatewayTargetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::BedrockAgentCore::GatewayTarget Resource Type
        /// </summary>
        public static Output<GetGatewayTargetResult> Invoke(GetGatewayTargetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayTargetResult>("aws-native:bedrockagentcore:getGatewayTarget", args ?? new GetGatewayTargetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayTargetArgs : global::Pulumi.InvokeArgs
    {
        [Input("gatewayIdentifier", required: true)]
        public string GatewayIdentifier { get; set; } = null!;

        [Input("targetId", required: true)]
        public string TargetId { get; set; } = null!;

        public GetGatewayTargetArgs()
        {
        }
        public static new GetGatewayTargetArgs Empty => new GetGatewayTargetArgs();
    }

    public sealed class GetGatewayTargetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("gatewayIdentifier", required: true)]
        public Input<string> GatewayIdentifier { get; set; } = null!;

        [Input("targetId", required: true)]
        public Input<string> TargetId { get; set; } = null!;

        public GetGatewayTargetInvokeArgs()
        {
        }
        public static new GetGatewayTargetInvokeArgs Empty => new GetGatewayTargetInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayTargetResult
    {
        public readonly string? CreatedAt;
        public readonly ImmutableArray<Outputs.GatewayTargetCredentialProviderConfiguration> CredentialProviderConfigurations;
        public readonly string? Description;
        public readonly string? GatewayArn;
        public readonly string? Name;
        public readonly Pulumi.AwsNative.BedrockAgentCore.GatewayTargetTargetStatus? Status;
        public readonly ImmutableArray<string> StatusReasons;
        public readonly Outputs.GatewayTargetTargetConfigurationProperties? TargetConfiguration;
        public readonly string? TargetId;
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetGatewayTargetResult(
            string? createdAt,

            ImmutableArray<Outputs.GatewayTargetCredentialProviderConfiguration> credentialProviderConfigurations,

            string? description,

            string? gatewayArn,

            string? name,

            Pulumi.AwsNative.BedrockAgentCore.GatewayTargetTargetStatus? status,

            ImmutableArray<string> statusReasons,

            Outputs.GatewayTargetTargetConfigurationProperties? targetConfiguration,

            string? targetId,

            string? updatedAt)
        {
            CreatedAt = createdAt;
            CredentialProviderConfigurations = credentialProviderConfigurations;
            Description = description;
            GatewayArn = gatewayArn;
            Name = name;
            Status = status;
            StatusReasons = statusReasons;
            TargetConfiguration = targetConfiguration;
            TargetId = targetId;
            UpdatedAt = updatedAt;
        }
    }
}
