// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.BedrockAgentCore.Outputs
{

    [OutputType]
    public sealed class MemorySemanticMemoryStrategy
    {
        /// <summary>
        /// Creation timestamp of the memory strategy
        /// </summary>
        public readonly string? CreatedAt;
        public readonly string? Description;
        public readonly string Name;
        public readonly ImmutableArray<string> Namespaces;
        /// <summary>
        /// Status of the memory strategy
        /// </summary>
        public readonly Pulumi.AwsNative.BedrockAgentCore.MemorySemanticMemoryStrategyStatus? Status;
        /// <summary>
        /// Unique identifier for the memory strategy
        /// </summary>
        public readonly string? StrategyId;
        /// <summary>
        /// Type of memory strategy
        /// </summary>
        public readonly Pulumi.AwsNative.BedrockAgentCore.MemorySemanticMemoryStrategyType? Type;
        /// <summary>
        /// Last update timestamp of the memory strategy
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private MemorySemanticMemoryStrategy(
            string? createdAt,

            string? description,

            string name,

            ImmutableArray<string> namespaces,

            Pulumi.AwsNative.BedrockAgentCore.MemorySemanticMemoryStrategyStatus? status,

            string? strategyId,

            Pulumi.AwsNative.BedrockAgentCore.MemorySemanticMemoryStrategyType? type,

            string? updatedAt)
        {
            CreatedAt = createdAt;
            Description = description;
            Name = name;
            Namespaces = namespaces;
            Status = status;
            StrategyId = strategyId;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
