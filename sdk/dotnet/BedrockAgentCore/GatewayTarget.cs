// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.BedrockAgentCore
{
    /// <summary>
    /// Definition of AWS::BedrockAgentCore::GatewayTarget Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:bedrockagentcore:GatewayTarget")]
    public partial class GatewayTarget : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The date and time at which the gateway target was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The OAuth credential provider configuration.
        /// </summary>
        [Output("credentialProviderConfigurations")]
        public Output<ImmutableArray<Outputs.GatewayTargetCredentialProviderConfiguration>> CredentialProviderConfigurations { get; private set; } = null!;

        /// <summary>
        /// The description for the gateway target.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("gatewayArn")]
        public Output<string> GatewayArn { get; private set; } = null!;

        /// <summary>
        /// The gateway ID for the gateway target.
        /// </summary>
        [Output("gatewayIdentifier")]
        public Output<string?> GatewayIdentifier { get; private set; } = null!;

        /// <summary>
        /// The name for the gateway target.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The status for the gateway target.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.BedrockAgentCore.GatewayTargetTargetStatus> Status { get; private set; } = null!;

        /// <summary>
        /// The status reasons for the gateway target.
        /// </summary>
        [Output("statusReasons")]
        public Output<ImmutableArray<string>> StatusReasons { get; private set; } = null!;

        /// <summary>
        /// The target configuration for the Smithy model target.
        /// </summary>
        [Output("targetConfiguration")]
        public Output<Outputs.GatewayTargetTargetConfigurationProperties> TargetConfiguration { get; private set; } = null!;

        /// <summary>
        /// The target ID for the gateway target.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        /// <summary>
        /// The time at which the resource was updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a GatewayTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GatewayTarget(string name, GatewayTargetArgs args, CustomResourceOptions? options = null)
            : base("aws-native:bedrockagentcore:GatewayTarget", name, args ?? new GatewayTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GatewayTarget(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:bedrockagentcore:GatewayTarget", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "gatewayIdentifier",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GatewayTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GatewayTarget Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GatewayTarget(name, id, options);
        }
    }

    public sealed class GatewayTargetArgs : global::Pulumi.ResourceArgs
    {
        [Input("credentialProviderConfigurations", required: true)]
        private InputList<Inputs.GatewayTargetCredentialProviderConfigurationArgs>? _credentialProviderConfigurations;

        /// <summary>
        /// The OAuth credential provider configuration.
        /// </summary>
        public InputList<Inputs.GatewayTargetCredentialProviderConfigurationArgs> CredentialProviderConfigurations
        {
            get => _credentialProviderConfigurations ?? (_credentialProviderConfigurations = new InputList<Inputs.GatewayTargetCredentialProviderConfigurationArgs>());
            set => _credentialProviderConfigurations = value;
        }

        /// <summary>
        /// The description for the gateway target.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The gateway ID for the gateway target.
        /// </summary>
        [Input("gatewayIdentifier")]
        public Input<string>? GatewayIdentifier { get; set; }

        /// <summary>
        /// The name for the gateway target.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The target configuration for the Smithy model target.
        /// </summary>
        [Input("targetConfiguration", required: true)]
        public Input<Inputs.GatewayTargetTargetConfigurationPropertiesArgs> TargetConfiguration { get; set; } = null!;

        public GatewayTargetArgs()
        {
        }
        public static new GatewayTargetArgs Empty => new GatewayTargetArgs();
    }
}
