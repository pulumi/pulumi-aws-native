// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.BedrockAgentCore
{
    /// <summary>
    /// Definition of AWS::BedrockAgentCore::Gateway Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:bedrockagentcore:Gateway")]
    public partial class Gateway : global::Pulumi.CustomResource
    {
        [Output("authorizerConfiguration")]
        public Output<Outputs.GatewayAuthorizerConfigurationProperties?> AuthorizerConfiguration { get; private set; } = null!;

        /// <summary>
        /// The authorizer type for the gateway.
        /// </summary>
        [Output("authorizerType")]
        public Output<Pulumi.AwsNative.BedrockAgentCore.GatewayAuthorizerType> AuthorizerType { get; private set; } = null!;

        /// <summary>
        /// The date and time at which the gateway was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The description for the gateway.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The exception level for the gateway.
        /// </summary>
        [Output("exceptionLevel")]
        public Output<Pulumi.AwsNative.BedrockAgentCore.GatewayExceptionLevel?> ExceptionLevel { get; private set; } = null!;

        /// <summary>
        /// The ARN for the gateway.
        /// </summary>
        [Output("gatewayArn")]
        public Output<string> GatewayArn { get; private set; } = null!;

        [Output("gatewayIdentifier")]
        public Output<string> GatewayIdentifier { get; private set; } = null!;

        /// <summary>
        /// The gateway URL for the gateway.
        /// </summary>
        [Output("gatewayUrl")]
        public Output<string> GatewayUrl { get; private set; } = null!;

        /// <summary>
        /// The KMS key ARN for the gateway.
        /// </summary>
        [Output("kmsKeyArn")]
        public Output<string?> KmsKeyArn { get; private set; } = null!;

        /// <summary>
        /// The name for the gateway.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The protocol configuration for the gateway target.
        /// </summary>
        [Output("protocolConfiguration")]
        public Output<Outputs.GatewayProtocolConfigurationProperties?> ProtocolConfiguration { get; private set; } = null!;

        /// <summary>
        /// The protocol type for the gateway target.
        /// </summary>
        [Output("protocolType")]
        public Output<Pulumi.AwsNative.BedrockAgentCore.GatewayProtocolType> ProtocolType { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// The status for the gateway.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.BedrockAgentCore.GatewayStatus> Status { get; private set; } = null!;

        /// <summary>
        /// The status reasons for the gateway.
        /// </summary>
        [Output("statusReasons")]
        public Output<ImmutableArray<string>> StatusReasons { get; private set; } = null!;

        /// <summary>
        /// The tags for the gateway.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        [Output("workloadIdentityDetails")]
        public Output<Outputs.GatewayWorkloadIdentityDetails> WorkloadIdentityDetails { get; private set; } = null!;


        /// <summary>
        /// Create a Gateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Gateway(string name, GatewayArgs args, CustomResourceOptions? options = null)
            : base("aws-native:bedrockagentcore:Gateway", name, args ?? new GatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Gateway(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:bedrockagentcore:Gateway", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Gateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Gateway Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Gateway(name, id, options);
        }
    }

    public sealed class GatewayArgs : global::Pulumi.ResourceArgs
    {
        [Input("authorizerConfiguration")]
        public Input<Inputs.GatewayAuthorizerConfigurationPropertiesArgs>? AuthorizerConfiguration { get; set; }

        /// <summary>
        /// The authorizer type for the gateway.
        /// </summary>
        [Input("authorizerType", required: true)]
        public Input<Pulumi.AwsNative.BedrockAgentCore.GatewayAuthorizerType> AuthorizerType { get; set; } = null!;

        /// <summary>
        /// The description for the gateway.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The exception level for the gateway.
        /// </summary>
        [Input("exceptionLevel")]
        public Input<Pulumi.AwsNative.BedrockAgentCore.GatewayExceptionLevel>? ExceptionLevel { get; set; }

        /// <summary>
        /// The KMS key ARN for the gateway.
        /// </summary>
        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        /// <summary>
        /// The name for the gateway.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The protocol configuration for the gateway target.
        /// </summary>
        [Input("protocolConfiguration")]
        public Input<Inputs.GatewayProtocolConfigurationPropertiesArgs>? ProtocolConfiguration { get; set; }

        /// <summary>
        /// The protocol type for the gateway target.
        /// </summary>
        [Input("protocolType", required: true)]
        public Input<Pulumi.AwsNative.BedrockAgentCore.GatewayProtocolType> ProtocolType { get; set; } = null!;

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags for the gateway.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GatewayArgs()
        {
        }
        public static new GatewayArgs Empty => new GatewayArgs();
    }
}
