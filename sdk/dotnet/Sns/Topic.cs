// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Sns
{
    /// <summary>
    /// Resource Type definition for AWS::SNS::Topic
    /// </summary>
    [AwsNativeResourceType("aws-native:sns:Topic")]
    public partial class Topic : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enables content-based deduplication for FIFO topics. By default, ContentBasedDeduplication is set to false. If you create a FIFO topic and this attribute is false, you must specify a value for the MessageDeduplicationId parameter for the Publish action.
        /// 
        /// When you set ContentBasedDeduplication to true, Amazon SNS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message).
        /// 
        /// (Optional) To override the generated value, you can specify a value for the the MessageDeduplicationId parameter for the Publish action.
        /// </summary>
        [Output("contentBasedDeduplication")]
        public Output<bool?> ContentBasedDeduplication { get; private set; } = null!;

        /// <summary>
        /// The body of the policy document you want to use for this topic.
        /// 
        /// You can only add one policy per topic.
        /// 
        /// The policy must be in JSON string format.
        /// 
        /// Length Constraints: Maximum length of 30720
        /// </summary>
        [Output("dataProtectionPolicy")]
        public Output<object?> DataProtectionPolicy { get; private set; } = null!;

        /// <summary>
        /// The display name to use for an Amazon SNS topic with SMS subscriptions.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Set to true to create a FIFO topic.
        /// </summary>
        [Output("fifoTopic")]
        public Output<bool?> FifoTopic { get; private set; } = null!;

        /// <summary>
        /// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see Key Terms. For more examples, see KeyId in the AWS Key Management Service API Reference.
        /// 
        /// This property applies only to [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).
        /// </summary>
        [Output("kmsMasterKeyId")]
        public Output<string?> KmsMasterKeyId { get; private set; } = null!;

        /// <summary>
        /// Version of the Amazon SNS signature used. If the SignatureVersion is 1, Signature is a Base64-encoded SHA1withRSA signature of the Message, MessageId, Type, Timestamp, and TopicArn values. If the SignatureVersion is 2, Signature is a Base64-encoded SHA256withRSA signature of the Message, MessageId, Type, Timestamp, and TopicArn values.
        /// </summary>
        [Output("signatureVersion")]
        public Output<string?> SignatureVersion { get; private set; } = null!;

        /// <summary>
        /// The SNS subscriptions (endpoints) for this topic.
        /// </summary>
        [Output("subscription")]
        public Output<ImmutableArray<Outputs.TopicSubscription>> Subscription { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.TopicTag>> Tags { get; private set; } = null!;

        [Output("topicArn")]
        public Output<string> TopicArn { get; private set; } = null!;

        /// <summary>
        /// The name of the topic you want to create. Topic names must include only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. FIFO topic names must end with .fifo.
        /// 
        /// If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the topic name. For more information, see Name Type.
        /// </summary>
        [Output("topicName")]
        public Output<string?> TopicName { get; private set; } = null!;

        /// <summary>
        /// Tracing mode of an Amazon SNS topic. By default TracingConfig is set to PassThrough, and the topic passes through the tracing header it receives from an SNS publisher to its subscriptions. If set to Active, SNS will vend X-Ray segment data to topic owner account if the sampled flag in the tracing header is true. Only supported on standard topics.
        /// </summary>
        [Output("tracingConfig")]
        public Output<string?> TracingConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Topic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Topic(string name, TopicArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:sns:Topic", name, args ?? new TopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Topic(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:sns:Topic", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "fifoTopic",
                    "topicName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Topic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Topic Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Topic(name, id, options);
        }
    }

    public sealed class TopicArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables content-based deduplication for FIFO topics. By default, ContentBasedDeduplication is set to false. If you create a FIFO topic and this attribute is false, you must specify a value for the MessageDeduplicationId parameter for the Publish action.
        /// 
        /// When you set ContentBasedDeduplication to true, Amazon SNS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message).
        /// 
        /// (Optional) To override the generated value, you can specify a value for the the MessageDeduplicationId parameter for the Publish action.
        /// </summary>
        [Input("contentBasedDeduplication")]
        public Input<bool>? ContentBasedDeduplication { get; set; }

        /// <summary>
        /// The body of the policy document you want to use for this topic.
        /// 
        /// You can only add one policy per topic.
        /// 
        /// The policy must be in JSON string format.
        /// 
        /// Length Constraints: Maximum length of 30720
        /// </summary>
        [Input("dataProtectionPolicy")]
        public Input<object>? DataProtectionPolicy { get; set; }

        /// <summary>
        /// The display name to use for an Amazon SNS topic with SMS subscriptions.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Set to true to create a FIFO topic.
        /// </summary>
        [Input("fifoTopic")]
        public Input<bool>? FifoTopic { get; set; }

        /// <summary>
        /// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see Key Terms. For more examples, see KeyId in the AWS Key Management Service API Reference.
        /// 
        /// This property applies only to [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).
        /// </summary>
        [Input("kmsMasterKeyId")]
        public Input<string>? KmsMasterKeyId { get; set; }

        /// <summary>
        /// Version of the Amazon SNS signature used. If the SignatureVersion is 1, Signature is a Base64-encoded SHA1withRSA signature of the Message, MessageId, Type, Timestamp, and TopicArn values. If the SignatureVersion is 2, Signature is a Base64-encoded SHA256withRSA signature of the Message, MessageId, Type, Timestamp, and TopicArn values.
        /// </summary>
        [Input("signatureVersion")]
        public Input<string>? SignatureVersion { get; set; }

        [Input("subscription")]
        private InputList<Inputs.TopicSubscriptionArgs>? _subscription;

        /// <summary>
        /// The SNS subscriptions (endpoints) for this topic.
        /// </summary>
        public InputList<Inputs.TopicSubscriptionArgs> Subscription
        {
            get => _subscription ?? (_subscription = new InputList<Inputs.TopicSubscriptionArgs>());
            set => _subscription = value;
        }

        [Input("tags")]
        private InputList<Inputs.TopicTagArgs>? _tags;
        public InputList<Inputs.TopicTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.TopicTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the topic you want to create. Topic names must include only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. FIFO topic names must end with .fifo.
        /// 
        /// If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the topic name. For more information, see Name Type.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        /// <summary>
        /// Tracing mode of an Amazon SNS topic. By default TracingConfig is set to PassThrough, and the topic passes through the tracing header it receives from an SNS publisher to its subscriptions. If set to Active, SNS will vend X-Ray segment data to topic owner account if the sampled flag in the tracing header is true. Only supported on standard topics.
        /// </summary>
        [Input("tracingConfig")]
        public Input<string>? TracingConfig { get; set; }

        public TopicArgs()
        {
        }
        public static new TopicArgs Empty => new TopicArgs();
    }
}
