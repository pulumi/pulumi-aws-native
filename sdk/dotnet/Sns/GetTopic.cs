// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Sns
{
    public static class GetTopic
    {
        /// <summary>
        /// The ``AWS::SNS::Topic`` resource creates a topic to which notifications can be published.
        ///   One account can create a maximum of 100,000 standard topics and 1,000 FIFO topics. For more information, see [endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/sns.html) in the *General Reference*.
        ///    The structure of ``AUTHPARAMS`` depends on the .signature of the API request. For more information, see [Examples of the complete Signature Version 4 signing process](https://docs.aws.amazon.com/general/latest/gr/sigv4-signed-request-examples.html) in the *General Reference*.
        /// </summary>
        public static Task<GetTopicResult> InvokeAsync(GetTopicArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTopicResult>("aws-native:sns:getTopic", args ?? new GetTopicArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::SNS::Topic`` resource creates a topic to which notifications can be published.
        ///   One account can create a maximum of 100,000 standard topics and 1,000 FIFO topics. For more information, see [endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/sns.html) in the *General Reference*.
        ///    The structure of ``AUTHPARAMS`` depends on the .signature of the API request. For more information, see [Examples of the complete Signature Version 4 signing process](https://docs.aws.amazon.com/general/latest/gr/sigv4-signed-request-examples.html) in the *General Reference*.
        /// </summary>
        public static Output<GetTopicResult> Invoke(GetTopicInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTopicResult>("aws-native:sns:getTopic", args ?? new GetTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopicArgs : global::Pulumi.InvokeArgs
    {
        [Input("topicArn", required: true)]
        public string TopicArn { get; set; } = null!;

        public GetTopicArgs()
        {
        }
        public static new GetTopicArgs Empty => new GetTopicArgs();
    }

    public sealed class GetTopicInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("topicArn", required: true)]
        public Input<string> TopicArn { get; set; } = null!;

        public GetTopicInvokeArgs()
        {
        }
        public static new GetTopicInvokeArgs Empty => new GetTopicInvokeArgs();
    }


    [OutputType]
    public sealed class GetTopicResult
    {
        /// <summary>
        /// The archive policy determines the number of days SNS retains messages. You can set a retention period from 1 to 365 days.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Topic` for more information about the expected schema for this property.
        /// </summary>
        public readonly object? ArchivePolicy;
        /// <summary>
        /// Enables content-based deduplication for FIFO topics.
        ///   +  By default, ``ContentBasedDeduplication`` is set to ``false``. If you create a FIFO topic and this attribute is ``false``, you must specify a value for the ``MessageDeduplicationId`` parameter for the [Publish](https://docs.aws.amazon.com/sns/latest/api/API_Publish.html) action. 
        ///   +  When you set ``ContentBasedDeduplication`` to ``true``, SNS uses a SHA-256 hash to generate the ``MessageDeduplicationId`` using the body of the message (but not the attributes of the message).
        ///  (Optional) To override the generated value, you can specify a value for the the ``MessageDeduplicationId`` parameter for the ``Publish`` action.
        /// </summary>
        public readonly bool? ContentBasedDeduplication;
        /// <summary>
        /// The body of the policy document you want to use for this topic.
        ///  You can only add one policy per topic.
        ///  The policy must be in JSON string format.
        ///  Length Constraints: Maximum length of 30,720.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Topic` for more information about the expected schema for this property.
        /// </summary>
        public readonly object? DataProtectionPolicy;
        public readonly ImmutableArray<Outputs.TopicLoggingConfig> DeliveryStatusLogging;
        /// <summary>
        /// The display name to use for an SNS topic with SMS subscriptions. The display name must be maximum 100 characters long, including hyphens (-), underscores (_), spaces, and tabs.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The ID of an AWS managed customer master key (CMK) for SNS or a custom CMK. For more information, see [Key terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms). For more examples, see ``KeyId`` in the *API Reference*.
        ///  This property applies only to [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).
        /// </summary>
        public readonly string? KmsMasterKeyId;
        /// <summary>
        /// The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS. By default, ``SignatureVersion`` is set to ``1``.
        /// </summary>
        public readonly string? SignatureVersion;
        /// <summary>
        /// The SNS subscriptions (endpoints) for this topic.
        ///   If you specify the ``Subscription`` property in the ``AWS::SNS::Topic`` resource and it creates an associated subscription resource, the associated subscription is not deleted when the ``AWS::SNS::Topic`` resource is deleted.
        /// </summary>
        public readonly ImmutableArray<Outputs.TopicSubscription> Subscription;
        /// <summary>
        /// The list of tags to add to a new topic.
        ///   To be able to tag a topic on creation, you must have the ``sns:CreateTopic`` and ``sns:TagResource`` permissions.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        public readonly string? TopicArn;
        /// <summary>
        /// Tracing mode of an SNS topic. By default ``TracingConfig`` is set to ``PassThrough``, and the topic passes through the tracing header it receives from an SNS publisher to its subscriptions. If set to ``Active``, SNS will vend X-Ray segment data to topic owner account if the sampled flag in the tracing header is true.
        /// </summary>
        public readonly string? TracingConfig;

        [OutputConstructor]
        private GetTopicResult(
            object? archivePolicy,

            bool? contentBasedDeduplication,

            object? dataProtectionPolicy,

            ImmutableArray<Outputs.TopicLoggingConfig> deliveryStatusLogging,

            string? displayName,

            string? kmsMasterKeyId,

            string? signatureVersion,

            ImmutableArray<Outputs.TopicSubscription> subscription,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            string? topicArn,

            string? tracingConfig)
        {
            ArchivePolicy = archivePolicy;
            ContentBasedDeduplication = contentBasedDeduplication;
            DataProtectionPolicy = dataProtectionPolicy;
            DeliveryStatusLogging = deliveryStatusLogging;
            DisplayName = displayName;
            KmsMasterKeyId = kmsMasterKeyId;
            SignatureVersion = signatureVersion;
            Subscription = subscription;
            Tags = tags;
            TopicArn = topicArn;
            TracingConfig = tracingConfig;
        }
    }
}
