// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Organizations
{
    public static class GetOrganization
    {
        /// <summary>
        /// Resource schema for AWS::Organizations::Organization
        /// </summary>
        public static Task<GetOrganizationResult> InvokeAsync(GetOrganizationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationResult>("aws-native:organizations:getOrganization", args ?? new GetOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Organizations::Organization
        /// </summary>
        public static Output<GetOrganizationResult> Invoke(GetOrganizationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationResult>("aws-native:organizations:getOrganization", args ?? new GetOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier (ID) of an organization.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetOrganizationArgs()
        {
        }
        public static new GetOrganizationArgs Empty => new GetOrganizationArgs();
    }

    public sealed class GetOrganizationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier (ID) of an organization.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetOrganizationInvokeArgs()
        {
        }
        public static new GetOrganizationInvokeArgs Empty => new GetOrganizationInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of an organization.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Specifies the feature set supported by the new organization. Each feature set supports different levels of functionality.
        /// </summary>
        public readonly Pulumi.AwsNative.Organizations.OrganizationFeatureSet? FeatureSet;
        /// <summary>
        /// The unique identifier (ID) of an organization.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the account that is designated as the management account for the organization.
        /// </summary>
        public readonly string? ManagementAccountArn;
        /// <summary>
        /// The email address that is associated with the AWS account that is designated as the management account for the organization.
        /// </summary>
        public readonly string? ManagementAccountEmail;
        /// <summary>
        /// The unique identifier (ID) of the management account of an organization.
        /// </summary>
        public readonly string? ManagementAccountId;
        /// <summary>
        /// The unique identifier (ID) for the root.
        /// </summary>
        public readonly string? RootId;

        [OutputConstructor]
        private GetOrganizationResult(
            string? arn,

            Pulumi.AwsNative.Organizations.OrganizationFeatureSet? featureSet,

            string? id,

            string? managementAccountArn,

            string? managementAccountEmail,

            string? managementAccountId,

            string? rootId)
        {
            Arn = arn;
            FeatureSet = featureSet;
            Id = id;
            ManagementAccountArn = managementAccountArn;
            ManagementAccountEmail = managementAccountEmail;
            ManagementAccountId = managementAccountId;
            RootId = rootId;
        }
    }
}
