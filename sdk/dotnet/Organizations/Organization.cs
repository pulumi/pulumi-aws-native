// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Organizations
{
    /// <summary>
    /// Resource schema for AWS::Organizations::Organization
    /// </summary>
    [AwsNativeResourceType("aws-native:organizations:Organization")]
    public partial class Organization : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of an organization.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Specifies the feature set supported by the new organization. Each feature set supports different levels of functionality.
        /// </summary>
        [Output("featureSet")]
        public Output<Pulumi.AwsNative.Organizations.OrganizationFeatureSet?> FeatureSet { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the account that is designated as the management account for the organization.
        /// </summary>
        [Output("managementAccountArn")]
        public Output<string> ManagementAccountArn { get; private set; } = null!;

        /// <summary>
        /// The email address that is associated with the AWS account that is designated as the management account for the organization.
        /// </summary>
        [Output("managementAccountEmail")]
        public Output<string> ManagementAccountEmail { get; private set; } = null!;

        /// <summary>
        /// The unique identifier (ID) of the management account of an organization.
        /// </summary>
        [Output("managementAccountId")]
        public Output<string> ManagementAccountId { get; private set; } = null!;

        /// <summary>
        /// The unique identifier (ID) for the root.
        /// </summary>
        [Output("rootId")]
        public Output<string> RootId { get; private set; } = null!;


        /// <summary>
        /// Create a Organization resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Organization(string name, OrganizationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:organizations:Organization", name, args ?? new OrganizationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Organization(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:organizations:Organization", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Organization resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Organization Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Organization(name, id, options);
        }
    }

    public sealed class OrganizationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the feature set supported by the new organization. Each feature set supports different levels of functionality.
        /// </summary>
        [Input("featureSet")]
        public Input<Pulumi.AwsNative.Organizations.OrganizationFeatureSet>? FeatureSet { get; set; }

        public OrganizationArgs()
        {
        }
        public static new OrganizationArgs Empty => new OrganizationArgs();
    }
}
