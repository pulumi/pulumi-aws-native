// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Organizations
{
    public static class GetOrganizationalUnit
    {
        /// <summary>
        /// You can use organizational units (OUs) to group accounts together to administer as a single unit. This greatly simplifies the management of your accounts. For example, you can attach a policy-based control to an OU, and all accounts within the OU automatically inherit the policy. You can create multiple OUs within a single organization, and you can create OUs within other OUs. Each OU can contain multiple accounts, and you can move accounts from one OU to another. However, OU names must be unique within a parent OU or root.
        /// </summary>
        public static Task<GetOrganizationalUnitResult> InvokeAsync(GetOrganizationalUnitArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationalUnitResult>("aws-native:organizations:getOrganizationalUnit", args ?? new GetOrganizationalUnitArgs(), options.WithDefaults());

        /// <summary>
        /// You can use organizational units (OUs) to group accounts together to administer as a single unit. This greatly simplifies the management of your accounts. For example, you can attach a policy-based control to an OU, and all accounts within the OU automatically inherit the policy. You can create multiple OUs within a single organization, and you can create OUs within other OUs. Each OU can contain multiple accounts, and you can move accounts from one OU to another. However, OU names must be unique within a parent OU or root.
        /// </summary>
        public static Output<GetOrganizationalUnitResult> Invoke(GetOrganizationalUnitInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationalUnitResult>("aws-native:organizations:getOrganizationalUnit", args ?? new GetOrganizationalUnitInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationalUnitArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier (ID) associated with this OU.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetOrganizationalUnitArgs()
        {
        }
        public static new GetOrganizationalUnitArgs Empty => new GetOrganizationalUnitArgs();
    }

    public sealed class GetOrganizationalUnitInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier (ID) associated with this OU.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetOrganizationalUnitInvokeArgs()
        {
        }
        public static new GetOrganizationalUnitInvokeArgs Empty => new GetOrganizationalUnitInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationalUnitResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of this OU.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The unique identifier (ID) associated with this OU.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The friendly name of this OU.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// A list of tags that you want to attach to the newly created OU.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetOrganizationalUnitResult(
            string? arn,

            string? id,

            string? name,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            Id = id;
            Name = name;
            Tags = tags;
        }
    }
}
