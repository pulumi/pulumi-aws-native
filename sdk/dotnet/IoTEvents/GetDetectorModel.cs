// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTEvents
{
    public static class GetDetectorModel
    {
        /// <summary>
        /// The AWS::IoTEvents::DetectorModel resource creates a detector model. You create a *detector model* (a model of your equipment or process) using *states*. For each state, you define conditional (Boolean) logic that evaluates the incoming inputs to detect significant events. When an event is detected, it can change the state or trigger custom-built or predefined actions using other AWS services. You can define additional events that trigger actions when entering or exiting a state and, optionally, when a condition is met. For more information, see [How to Use](https://docs.aws.amazon.com/iotevents/latest/developerguide/how-to-use-iotevents.html) in the *Developer Guide*.
        ///   When you successfully update a detector model (using the ITE console, ITE API or CLI commands, or CFN) all detector instances created by the model are reset to their initial states. (The detector's ``state``, and the values of any variables and timers are reset.)
        ///  When you successfully update a detector model (using the ITE console, ITE API or CLI commands, or CFN) the version number of the detector model is incremented. (A detector model with version number 1 before the update has version number 2 after the update succeeds.)
        ///  If you attempt to update a detector model using CFN and the update does not succeed, the system may, in some cases, restore the original detector model. When this occurs, the detector model's version is incremented twice (for example, from version 1 to version 3) and the detector instances are reset.
        ///  Also, be aware that if you attempt to update several detector models at once using CFN, some updates may succeed and others fail. In this case, the effects on each detector model's detector instances and version number depend on whether the update succeeded or failed, with the results as stated.
        /// </summary>
        public static Task<GetDetectorModelResult> InvokeAsync(GetDetectorModelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDetectorModelResult>("aws-native:iotevents:getDetectorModel", args ?? new GetDetectorModelArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::IoTEvents::DetectorModel resource creates a detector model. You create a *detector model* (a model of your equipment or process) using *states*. For each state, you define conditional (Boolean) logic that evaluates the incoming inputs to detect significant events. When an event is detected, it can change the state or trigger custom-built or predefined actions using other AWS services. You can define additional events that trigger actions when entering or exiting a state and, optionally, when a condition is met. For more information, see [How to Use](https://docs.aws.amazon.com/iotevents/latest/developerguide/how-to-use-iotevents.html) in the *Developer Guide*.
        ///   When you successfully update a detector model (using the ITE console, ITE API or CLI commands, or CFN) all detector instances created by the model are reset to their initial states. (The detector's ``state``, and the values of any variables and timers are reset.)
        ///  When you successfully update a detector model (using the ITE console, ITE API or CLI commands, or CFN) the version number of the detector model is incremented. (A detector model with version number 1 before the update has version number 2 after the update succeeds.)
        ///  If you attempt to update a detector model using CFN and the update does not succeed, the system may, in some cases, restore the original detector model. When this occurs, the detector model's version is incremented twice (for example, from version 1 to version 3) and the detector instances are reset.
        ///  Also, be aware that if you attempt to update several detector models at once using CFN, some updates may succeed and others fail. In this case, the effects on each detector model's detector instances and version number depend on whether the update succeeded or failed, with the results as stated.
        /// </summary>
        public static Output<GetDetectorModelResult> Invoke(GetDetectorModelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDetectorModelResult>("aws-native:iotevents:getDetectorModel", args ?? new GetDetectorModelInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::IoTEvents::DetectorModel resource creates a detector model. You create a *detector model* (a model of your equipment or process) using *states*. For each state, you define conditional (Boolean) logic that evaluates the incoming inputs to detect significant events. When an event is detected, it can change the state or trigger custom-built or predefined actions using other AWS services. You can define additional events that trigger actions when entering or exiting a state and, optionally, when a condition is met. For more information, see [How to Use](https://docs.aws.amazon.com/iotevents/latest/developerguide/how-to-use-iotevents.html) in the *Developer Guide*.
        ///   When you successfully update a detector model (using the ITE console, ITE API or CLI commands, or CFN) all detector instances created by the model are reset to their initial states. (The detector's ``state``, and the values of any variables and timers are reset.)
        ///  When you successfully update a detector model (using the ITE console, ITE API or CLI commands, or CFN) the version number of the detector model is incremented. (A detector model with version number 1 before the update has version number 2 after the update succeeds.)
        ///  If you attempt to update a detector model using CFN and the update does not succeed, the system may, in some cases, restore the original detector model. When this occurs, the detector model's version is incremented twice (for example, from version 1 to version 3) and the detector instances are reset.
        ///  Also, be aware that if you attempt to update several detector models at once using CFN, some updates may succeed and others fail. In this case, the effects on each detector model's detector instances and version number depend on whether the update succeeded or failed, with the results as stated.
        /// </summary>
        public static Output<GetDetectorModelResult> Invoke(GetDetectorModelInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDetectorModelResult>("aws-native:iotevents:getDetectorModel", args ?? new GetDetectorModelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDetectorModelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the detector model.
        /// </summary>
        [Input("detectorModelName", required: true)]
        public string DetectorModelName { get; set; } = null!;

        public GetDetectorModelArgs()
        {
        }
        public static new GetDetectorModelArgs Empty => new GetDetectorModelArgs();
    }

    public sealed class GetDetectorModelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the detector model.
        /// </summary>
        [Input("detectorModelName", required: true)]
        public Input<string> DetectorModelName { get; set; } = null!;

        public GetDetectorModelInvokeArgs()
        {
        }
        public static new GetDetectorModelInvokeArgs Empty => new GetDetectorModelInvokeArgs();
    }


    [OutputType]
    public sealed class GetDetectorModelResult
    {
        /// <summary>
        /// Information that defines how a detector operates.
        /// </summary>
        public readonly Outputs.DetectorModelDefinition? DetectorModelDefinition;
        /// <summary>
        /// A brief description of the detector model.
        /// </summary>
        public readonly string? DetectorModelDescription;
        /// <summary>
        /// Information about the order in which events are evaluated and how actions are executed.
        /// </summary>
        public readonly Pulumi.AwsNative.IoTEvents.DetectorModelEvaluationMethod? EvaluationMethod;
        /// <summary>
        /// The ARN of the role that grants permission to ITE to perform its operations.
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        ///  For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetDetectorModelResult(
            Outputs.DetectorModelDefinition? detectorModelDefinition,

            string? detectorModelDescription,

            Pulumi.AwsNative.IoTEvents.DetectorModelEvaluationMethod? evaluationMethod,

            string? roleArn,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            DetectorModelDefinition = detectorModelDefinition;
            DetectorModelDescription = detectorModelDescription;
            EvaluationMethod = evaluationMethod;
            RoleArn = roleArn;
            Tags = tags;
        }
    }
}
