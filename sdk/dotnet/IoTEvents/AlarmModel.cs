// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTEvents
{
    /// <summary>
    /// The AWS::IoTEvents::AlarmModel resource creates a alarm model. AWS IoT Events alarms help you monitor your data for changes. The data can be metrics that you measure for your equipment and processes. You can create alarms that send notifications when a threshold is breached. Alarms help you detect issues, streamline maintenance, and optimize performance of your equipment and processes.
    /// 
    /// Alarms are instances of alarm models. The alarm model specifies what to detect, when to send notifications, who gets notified, and more. You can also specify one or more supported actions that occur when the alarm state changes. AWS IoT Events routes input attributes derived from your data to the appropriate alarms. If the data that you're monitoring is outside the specified range, the alarm is invoked. You can also acknowledge the alarms or set them to the snooze mode.
    /// </summary>
    [AwsNativeResourceType("aws-native:iotevents:AlarmModel")]
    public partial class AlarmModel : Pulumi.CustomResource
    {
        [Output("alarmCapabilities")]
        public Output<Outputs.AlarmModelAlarmCapabilities?> AlarmCapabilities { get; private set; } = null!;

        [Output("alarmEventActions")]
        public Output<Outputs.AlarmModelAlarmEventActions?> AlarmEventActions { get; private set; } = null!;

        /// <summary>
        /// A brief description of the alarm model.
        /// </summary>
        [Output("alarmModelDescription")]
        public Output<string?> AlarmModelDescription { get; private set; } = null!;

        /// <summary>
        /// The name of the alarm model.
        /// </summary>
        [Output("alarmModelName")]
        public Output<string?> AlarmModelName { get; private set; } = null!;

        [Output("alarmRule")]
        public Output<Outputs.AlarmModelAlarmRule> AlarmRule { get; private set; } = null!;

        /// <summary>
        /// The value used to identify a alarm instance. When a device or system sends input, a new alarm instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding alarm instance based on this identifying information.
        /// 
        /// This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct alarm instance, the device must send a message payload that contains the same attribute-value.
        /// </summary>
        [Output("key")]
        public Output<string?> Key { get; private set; } = null!;

        /// <summary>
        /// The ARN of the role that grants permission to AWS IoT Events to perform its operations.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// A non-negative integer that reflects the severity level of the alarm.
        /// </summary>
        [Output("severity")]
        public Output<int?> Severity { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// 
        /// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.AlarmModelTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a AlarmModel resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlarmModel(string name, AlarmModelArgs args, CustomResourceOptions? options = null)
            : base("aws-native:iotevents:AlarmModel", name, args ?? new AlarmModelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlarmModel(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:iotevents:AlarmModel", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlarmModel resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlarmModel Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AlarmModel(name, id, options);
        }
    }

    public sealed class AlarmModelArgs : Pulumi.ResourceArgs
    {
        [Input("alarmCapabilities")]
        public Input<Inputs.AlarmModelAlarmCapabilitiesArgs>? AlarmCapabilities { get; set; }

        [Input("alarmEventActions")]
        public Input<Inputs.AlarmModelAlarmEventActionsArgs>? AlarmEventActions { get; set; }

        /// <summary>
        /// A brief description of the alarm model.
        /// </summary>
        [Input("alarmModelDescription")]
        public Input<string>? AlarmModelDescription { get; set; }

        /// <summary>
        /// The name of the alarm model.
        /// </summary>
        [Input("alarmModelName")]
        public Input<string>? AlarmModelName { get; set; }

        [Input("alarmRule", required: true)]
        public Input<Inputs.AlarmModelAlarmRuleArgs> AlarmRule { get; set; } = null!;

        /// <summary>
        /// The value used to identify a alarm instance. When a device or system sends input, a new alarm instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding alarm instance based on this identifying information.
        /// 
        /// This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct alarm instance, the device must send a message payload that contains the same attribute-value.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// The ARN of the role that grants permission to AWS IoT Events to perform its operations.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// A non-negative integer that reflects the severity level of the alarm.
        /// </summary>
        [Input("severity")]
        public Input<int>? Severity { get; set; }

        [Input("tags")]
        private InputList<Inputs.AlarmModelTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// 
        /// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        public InputList<Inputs.AlarmModelTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.AlarmModelTagArgs>());
            set => _tags = value;
        }

        public AlarmModelArgs()
        {
        }
    }
}
