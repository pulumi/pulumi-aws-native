// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppStream
{
    public static class GetEntitlement
    {
        /// <summary>
        /// Resource Type definition for AWS::AppStream::Entitlement
        /// </summary>
        public static Task<GetEntitlementResult> InvokeAsync(GetEntitlementArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEntitlementResult>("aws-native:appstream:getEntitlement", args ?? new GetEntitlementArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppStream::Entitlement
        /// </summary>
        public static Output<GetEntitlementResult> Invoke(GetEntitlementInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEntitlementResult>("aws-native:appstream:getEntitlement", args ?? new GetEntitlementInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEntitlementArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("stackName", required: true)]
        public string StackName { get; set; } = null!;

        public GetEntitlementArgs()
        {
        }
    }

    public sealed class GetEntitlementInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("stackName", required: true)]
        public Input<string> StackName { get; set; } = null!;

        public GetEntitlementInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEntitlementResult
    {
        public readonly string? AppVisibility;
        public readonly ImmutableArray<Outputs.EntitlementAttribute> Attributes;
        public readonly string? CreatedTime;
        public readonly string? Description;
        public readonly string? LastModifiedTime;

        [OutputConstructor]
        private GetEntitlementResult(
            string? appVisibility,

            ImmutableArray<Outputs.EntitlementAttribute> attributes,

            string? createdTime,

            string? description,

            string? lastModifiedTime)
        {
            AppVisibility = appVisibility;
            Attributes = attributes;
            CreatedTime = createdTime;
            Description = description;
            LastModifiedTime = lastModifiedTime;
        }
    }
}
