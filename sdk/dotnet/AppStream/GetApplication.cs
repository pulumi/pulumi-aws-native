// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppStream
{
    public static class GetApplication
    {
        /// <summary>
        /// Resource Type definition for AWS::AppStream::Application
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("aws-native:appstream:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppStream::Application
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("aws-native:appstream:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
    }

    public sealed class GetApplicationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        public readonly string? AppBlockArn;
        public readonly string? Arn;
        public readonly ImmutableArray<string> AttributesToDelete;
        public readonly string? CreatedTime;
        public readonly string? Description;
        public readonly string? DisplayName;
        public readonly Outputs.ApplicationS3Location? IconS3Location;
        public readonly string? LaunchParameters;
        public readonly string? LaunchPath;
        public readonly string? WorkingDirectory;

        [OutputConstructor]
        private GetApplicationResult(
            string? appBlockArn,

            string? arn,

            ImmutableArray<string> attributesToDelete,

            string? createdTime,

            string? description,

            string? displayName,

            Outputs.ApplicationS3Location? iconS3Location,

            string? launchParameters,

            string? launchPath,

            string? workingDirectory)
        {
            AppBlockArn = appBlockArn;
            Arn = arn;
            AttributesToDelete = attributesToDelete;
            CreatedTime = createdTime;
            Description = description;
            DisplayName = displayName;
            IconS3Location = iconS3Location;
            LaunchParameters = launchParameters;
            LaunchPath = launchPath;
            WorkingDirectory = workingDirectory;
        }
    }
}
