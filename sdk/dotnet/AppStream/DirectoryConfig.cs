// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppStream
{
    /// <summary>
    /// Resource Type definition for AWS::AppStream::DirectoryConfig
    /// </summary>
    [AwsNativeResourceType("aws-native:appstream:DirectoryConfig")]
    public partial class DirectoryConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
        /// </summary>
        [Output("certificateBasedAuthProperties")]
        public Output<Outputs.DirectoryConfigCertificateBasedAuthProperties?> CertificateBasedAuthProperties { get; private set; } = null!;

        /// <summary>
        /// The fully qualified name of the directory (for example, corp.example.com).
        /// </summary>
        [Output("directoryName")]
        public Output<string> DirectoryName { get; private set; } = null!;

        /// <summary>
        /// The distinguished names of the organizational units for computer accounts.
        /// </summary>
        [Output("organizationalUnitDistinguishedNames")]
        public Output<ImmutableArray<string>> OrganizationalUnitDistinguishedNames { get; private set; } = null!;

        /// <summary>
        /// The credentials for the service account used by the streaming instance to connect to the directory.
        /// </summary>
        [Output("serviceAccountCredentials")]
        public Output<Outputs.DirectoryConfigServiceAccountCredentials> ServiceAccountCredentials { get; private set; } = null!;


        /// <summary>
        /// Create a DirectoryConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DirectoryConfig(string name, DirectoryConfigArgs args, CustomResourceOptions? options = null)
            : base("aws-native:appstream:DirectoryConfig", name, args ?? new DirectoryConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DirectoryConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:appstream:DirectoryConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "directoryName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DirectoryConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DirectoryConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DirectoryConfig(name, id, options);
        }
    }

    public sealed class DirectoryConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
        /// </summary>
        [Input("certificateBasedAuthProperties")]
        public Input<Inputs.DirectoryConfigCertificateBasedAuthPropertiesArgs>? CertificateBasedAuthProperties { get; set; }

        /// <summary>
        /// The fully qualified name of the directory (for example, corp.example.com).
        /// </summary>
        [Input("directoryName", required: true)]
        public Input<string> DirectoryName { get; set; } = null!;

        [Input("organizationalUnitDistinguishedNames", required: true)]
        private InputList<string>? _organizationalUnitDistinguishedNames;

        /// <summary>
        /// The distinguished names of the organizational units for computer accounts.
        /// </summary>
        public InputList<string> OrganizationalUnitDistinguishedNames
        {
            get => _organizationalUnitDistinguishedNames ?? (_organizationalUnitDistinguishedNames = new InputList<string>());
            set => _organizationalUnitDistinguishedNames = value;
        }

        /// <summary>
        /// The credentials for the service account used by the streaming instance to connect to the directory.
        /// </summary>
        [Input("serviceAccountCredentials", required: true)]
        public Input<Inputs.DirectoryConfigServiceAccountCredentialsArgs> ServiceAccountCredentials { get; set; } = null!;

        public DirectoryConfigArgs()
        {
        }
        public static new DirectoryConfigArgs Empty => new DirectoryConfigArgs();
    }
}
