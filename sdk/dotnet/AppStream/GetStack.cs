// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppStream
{
    public static class GetStack
    {
        /// <summary>
        /// Resource Type definition for AWS::AppStream::Stack
        /// </summary>
        public static Task<GetStackResult> InvokeAsync(GetStackArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStackResult>("aws-native:appstream:getStack", args ?? new GetStackArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppStream::Stack
        /// </summary>
        public static Output<GetStackResult> Invoke(GetStackInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetStackResult>("aws-native:appstream:getStack", args ?? new GetStackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStackArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetStackArgs()
        {
        }
        public static new GetStackArgs Empty => new GetStackArgs();
    }

    public sealed class GetStackInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetStackInvokeArgs()
        {
        }
        public static new GetStackInvokeArgs Empty => new GetStackInvokeArgs();
    }


    [OutputType]
    public sealed class GetStackResult
    {
        public readonly ImmutableArray<Outputs.StackAccessEndpoint> AccessEndpoints;
        public readonly Outputs.StackApplicationSettings? ApplicationSettings;
        public readonly ImmutableArray<string> AttributesToDelete;
        public readonly bool? DeleteStorageConnectors;
        public readonly string? Description;
        public readonly string? DisplayName;
        public readonly ImmutableArray<string> EmbedHostDomains;
        public readonly string? FeedbackURL;
        public readonly string? Id;
        public readonly string? RedirectURL;
        public readonly ImmutableArray<Outputs.StackStorageConnector> StorageConnectors;
        public readonly Outputs.StackStreamingExperienceSettings? StreamingExperienceSettings;
        public readonly ImmutableArray<Outputs.StackTag> Tags;
        public readonly ImmutableArray<Outputs.StackUserSetting> UserSettings;

        [OutputConstructor]
        private GetStackResult(
            ImmutableArray<Outputs.StackAccessEndpoint> accessEndpoints,

            Outputs.StackApplicationSettings? applicationSettings,

            ImmutableArray<string> attributesToDelete,

            bool? deleteStorageConnectors,

            string? description,

            string? displayName,

            ImmutableArray<string> embedHostDomains,

            string? feedbackURL,

            string? id,

            string? redirectURL,

            ImmutableArray<Outputs.StackStorageConnector> storageConnectors,

            Outputs.StackStreamingExperienceSettings? streamingExperienceSettings,

            ImmutableArray<Outputs.StackTag> tags,

            ImmutableArray<Outputs.StackUserSetting> userSettings)
        {
            AccessEndpoints = accessEndpoints;
            ApplicationSettings = applicationSettings;
            AttributesToDelete = attributesToDelete;
            DeleteStorageConnectors = deleteStorageConnectors;
            Description = description;
            DisplayName = displayName;
            EmbedHostDomains = embedHostDomains;
            FeedbackURL = feedbackURL;
            Id = id;
            RedirectURL = redirectURL;
            StorageConnectors = storageConnectors;
            StreamingExperienceSettings = streamingExperienceSettings;
            Tags = tags;
            UserSettings = userSettings;
        }
    }
}
