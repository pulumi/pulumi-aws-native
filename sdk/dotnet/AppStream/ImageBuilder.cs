// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppStream
{
    /// <summary>
    /// Resource Type definition for AWS::AppStream::ImageBuilder
    /// </summary>
    [AwsNativeResourceType("aws-native:appstream:ImageBuilder")]
    public partial class ImageBuilder : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of virtual private cloud (VPC) interface endpoint objects. Administrators can connect to the image builder only through the specified endpoints.
        /// </summary>
        [Output("accessEndpoints")]
        public Output<ImmutableArray<Outputs.ImageBuilderAccessEndpoint>> AccessEndpoints { get; private set; } = null!;

        /// <summary>
        /// The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST].
        /// </summary>
        [Output("appstreamAgentVersion")]
        public Output<string?> AppstreamAgentVersion { get; private set; } = null!;

        /// <summary>
        /// The description to display.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The image builder name to display.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain.
        /// </summary>
        [Output("domainJoinInfo")]
        public Output<Outputs.ImageBuilderDomainJoinInfo?> DomainJoinInfo { get; private set; } = null!;

        /// <summary>
        /// Enables or disables default internet access for the image builder.
        /// </summary>
        [Output("enableDefaultInternetAccess")]
        public Output<bool?> EnableDefaultInternetAccess { get; private set; } = null!;

        /// <summary>
        /// The ARN of the IAM role that is applied to the image builder. To assume a role, the image builder calls the AWS Security Token Service `AssumeRole` API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the *appstream_machine_role* credential profile on the instance.
        /// 
        /// For more information, see [Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances](https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html) in the *Amazon AppStream 2.0 Administration Guide* .
        /// </summary>
        [Output("iamRoleArn")]
        public Output<string?> IamRoleArn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the public, private, or shared image to use.
        /// </summary>
        [Output("imageArn")]
        public Output<string?> ImageArn { get; private set; } = null!;

        /// <summary>
        /// The name of the image used to create the image builder.
        /// </summary>
        [Output("imageName")]
        public Output<string?> ImageName { get; private set; } = null!;

        /// <summary>
        /// The instance type to use when launching the image builder. The following instance types are available:
        /// 
        /// - stream.standard.small
        /// - stream.standard.medium
        /// - stream.standard.large
        /// - stream.compute.large
        /// - stream.compute.xlarge
        /// - stream.compute.2xlarge
        /// - stream.compute.4xlarge
        /// - stream.compute.8xlarge
        /// - stream.memory.large
        /// - stream.memory.xlarge
        /// - stream.memory.2xlarge
        /// - stream.memory.4xlarge
        /// - stream.memory.8xlarge
        /// - stream.memory.z1d.large
        /// - stream.memory.z1d.xlarge
        /// - stream.memory.z1d.2xlarge
        /// - stream.memory.z1d.3xlarge
        /// - stream.memory.z1d.6xlarge
        /// - stream.memory.z1d.12xlarge
        /// - stream.graphics-design.large
        /// - stream.graphics-design.xlarge
        /// - stream.graphics-design.2xlarge
        /// - stream.graphics-design.4xlarge
        /// - stream.graphics-desktop.2xlarge
        /// - stream.graphics.g4dn.xlarge
        /// - stream.graphics.g4dn.2xlarge
        /// - stream.graphics.g4dn.4xlarge
        /// - stream.graphics.g4dn.8xlarge
        /// - stream.graphics.g4dn.12xlarge
        /// - stream.graphics.g4dn.16xlarge
        /// - stream.graphics-pro.4xlarge
        /// - stream.graphics-pro.8xlarge
        /// - stream.graphics-pro.16xlarge
        /// - stream.graphics.g5.xlarge
        /// - stream.graphics.g5.2xlarge
        /// - stream.graphics.g5.4xlarge
        /// - stream.graphics.g5.8xlarge
        /// - stream.graphics.g5.16xlarge
        /// - stream.graphics.g5.12xlarge
        /// - stream.graphics.g5.24xlarge
        /// - stream.graphics.g6.xlarge
        /// - stream.graphics.g6.2xlarge
        /// - stream.graphics.g6.4xlarge
        /// - stream.graphics.g6.8xlarge
        /// - stream.graphics.g6.16xlarge
        /// - stream.graphics.g6.12xlarge
        /// - stream.graphics.g6.24xlarge
        /// - stream.graphics.gr6.4xlarge
        /// - stream.graphics.gr6.8xlarge
        /// - stream.graphics.g6f.large
        /// - stream.graphics.g6f.xlarge
        /// - stream.graphics.g6f.2xlarge
        /// - stream.graphics.g6f.4xlarge
        /// - stream.graphics.gr6f.4xlarge
        /// </summary>
        [Output("instanceType")]
        public Output<string> InstanceType { get; private set; } = null!;

        /// <summary>
        /// A unique name for the image builder.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The URL to start an image builder streaming session, returned as a string.
        /// </summary>
        [Output("streamingUrl")]
        public Output<string> StreamingUrl { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The VPC configuration for the image builder. You can specify only one subnet.
        /// </summary>
        [Output("vpcConfig")]
        public Output<Outputs.ImageBuilderVpcConfig?> VpcConfig { get; private set; } = null!;


        /// <summary>
        /// Create a ImageBuilder resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImageBuilder(string name, ImageBuilderArgs args, CustomResourceOptions? options = null)
            : base("aws-native:appstream:ImageBuilder", name, args ?? new ImageBuilderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImageBuilder(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:appstream:ImageBuilder", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImageBuilder resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImageBuilder Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ImageBuilder(name, id, options);
        }
    }

    public sealed class ImageBuilderArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessEndpoints")]
        private InputList<Inputs.ImageBuilderAccessEndpointArgs>? _accessEndpoints;

        /// <summary>
        /// The list of virtual private cloud (VPC) interface endpoint objects. Administrators can connect to the image builder only through the specified endpoints.
        /// </summary>
        public InputList<Inputs.ImageBuilderAccessEndpointArgs> AccessEndpoints
        {
            get => _accessEndpoints ?? (_accessEndpoints = new InputList<Inputs.ImageBuilderAccessEndpointArgs>());
            set => _accessEndpoints = value;
        }

        /// <summary>
        /// The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST].
        /// </summary>
        [Input("appstreamAgentVersion")]
        public Input<string>? AppstreamAgentVersion { get; set; }

        /// <summary>
        /// The description to display.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The image builder name to display.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain.
        /// </summary>
        [Input("domainJoinInfo")]
        public Input<Inputs.ImageBuilderDomainJoinInfoArgs>? DomainJoinInfo { get; set; }

        /// <summary>
        /// Enables or disables default internet access for the image builder.
        /// </summary>
        [Input("enableDefaultInternetAccess")]
        public Input<bool>? EnableDefaultInternetAccess { get; set; }

        /// <summary>
        /// The ARN of the IAM role that is applied to the image builder. To assume a role, the image builder calls the AWS Security Token Service `AssumeRole` API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the *appstream_machine_role* credential profile on the instance.
        /// 
        /// For more information, see [Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances](https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html) in the *Amazon AppStream 2.0 Administration Guide* .
        /// </summary>
        [Input("iamRoleArn")]
        public Input<string>? IamRoleArn { get; set; }

        /// <summary>
        /// The ARN of the public, private, or shared image to use.
        /// </summary>
        [Input("imageArn")]
        public Input<string>? ImageArn { get; set; }

        /// <summary>
        /// The name of the image used to create the image builder.
        /// </summary>
        [Input("imageName")]
        public Input<string>? ImageName { get; set; }

        /// <summary>
        /// The instance type to use when launching the image builder. The following instance types are available:
        /// 
        /// - stream.standard.small
        /// - stream.standard.medium
        /// - stream.standard.large
        /// - stream.compute.large
        /// - stream.compute.xlarge
        /// - stream.compute.2xlarge
        /// - stream.compute.4xlarge
        /// - stream.compute.8xlarge
        /// - stream.memory.large
        /// - stream.memory.xlarge
        /// - stream.memory.2xlarge
        /// - stream.memory.4xlarge
        /// - stream.memory.8xlarge
        /// - stream.memory.z1d.large
        /// - stream.memory.z1d.xlarge
        /// - stream.memory.z1d.2xlarge
        /// - stream.memory.z1d.3xlarge
        /// - stream.memory.z1d.6xlarge
        /// - stream.memory.z1d.12xlarge
        /// - stream.graphics-design.large
        /// - stream.graphics-design.xlarge
        /// - stream.graphics-design.2xlarge
        /// - stream.graphics-design.4xlarge
        /// - stream.graphics-desktop.2xlarge
        /// - stream.graphics.g4dn.xlarge
        /// - stream.graphics.g4dn.2xlarge
        /// - stream.graphics.g4dn.4xlarge
        /// - stream.graphics.g4dn.8xlarge
        /// - stream.graphics.g4dn.12xlarge
        /// - stream.graphics.g4dn.16xlarge
        /// - stream.graphics-pro.4xlarge
        /// - stream.graphics-pro.8xlarge
        /// - stream.graphics-pro.16xlarge
        /// - stream.graphics.g5.xlarge
        /// - stream.graphics.g5.2xlarge
        /// - stream.graphics.g5.4xlarge
        /// - stream.graphics.g5.8xlarge
        /// - stream.graphics.g5.16xlarge
        /// - stream.graphics.g5.12xlarge
        /// - stream.graphics.g5.24xlarge
        /// - stream.graphics.g6.xlarge
        /// - stream.graphics.g6.2xlarge
        /// - stream.graphics.g6.4xlarge
        /// - stream.graphics.g6.8xlarge
        /// - stream.graphics.g6.16xlarge
        /// - stream.graphics.g6.12xlarge
        /// - stream.graphics.g6.24xlarge
        /// - stream.graphics.gr6.4xlarge
        /// - stream.graphics.gr6.8xlarge
        /// - stream.graphics.g6f.large
        /// - stream.graphics.g6f.xlarge
        /// - stream.graphics.g6f.2xlarge
        /// - stream.graphics.g6f.4xlarge
        /// - stream.graphics.gr6f.4xlarge
        /// </summary>
        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// A unique name for the image builder.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The VPC configuration for the image builder. You can specify only one subnet.
        /// </summary>
        [Input("vpcConfig")]
        public Input<Inputs.ImageBuilderVpcConfigArgs>? VpcConfig { get; set; }

        public ImageBuilderArgs()
        {
        }
        public static new ImageBuilderArgs Empty => new ImageBuilderArgs();
    }
}
