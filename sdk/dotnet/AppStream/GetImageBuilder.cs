// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppStream
{
    public static class GetImageBuilder
    {
        /// <summary>
        /// Resource Type definition for AWS::AppStream::ImageBuilder
        /// </summary>
        public static Task<GetImageBuilderResult> InvokeAsync(GetImageBuilderArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetImageBuilderResult>("aws-native:appstream:getImageBuilder", args ?? new GetImageBuilderArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppStream::ImageBuilder
        /// </summary>
        public static Output<GetImageBuilderResult> Invoke(GetImageBuilderInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetImageBuilderResult>("aws-native:appstream:getImageBuilder", args ?? new GetImageBuilderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageBuilderArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetImageBuilderArgs()
        {
        }
    }

    public sealed class GetImageBuilderInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetImageBuilderInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetImageBuilderResult
    {
        public readonly ImmutableArray<Outputs.ImageBuilderAccessEndpoint> AccessEndpoints;
        public readonly string? AppstreamAgentVersion;
        public readonly string? Description;
        public readonly string? DisplayName;
        public readonly Outputs.ImageBuilderDomainJoinInfo? DomainJoinInfo;
        public readonly bool? EnableDefaultInternetAccess;
        public readonly string? IamRoleArn;
        public readonly string? Id;
        public readonly string? ImageArn;
        public readonly string? ImageName;
        public readonly string? InstanceType;
        public readonly string? Name;
        public readonly string? StreamingUrl;
        public readonly ImmutableArray<Outputs.ImageBuilderTag> Tags;
        public readonly Outputs.ImageBuilderVpcConfig? VpcConfig;

        [OutputConstructor]
        private GetImageBuilderResult(
            ImmutableArray<Outputs.ImageBuilderAccessEndpoint> accessEndpoints,

            string? appstreamAgentVersion,

            string? description,

            string? displayName,

            Outputs.ImageBuilderDomainJoinInfo? domainJoinInfo,

            bool? enableDefaultInternetAccess,

            string? iamRoleArn,

            string? id,

            string? imageArn,

            string? imageName,

            string? instanceType,

            string? name,

            string? streamingUrl,

            ImmutableArray<Outputs.ImageBuilderTag> tags,

            Outputs.ImageBuilderVpcConfig? vpcConfig)
        {
            AccessEndpoints = accessEndpoints;
            AppstreamAgentVersion = appstreamAgentVersion;
            Description = description;
            DisplayName = displayName;
            DomainJoinInfo = domainJoinInfo;
            EnableDefaultInternetAccess = enableDefaultInternetAccess;
            IamRoleArn = iamRoleArn;
            Id = id;
            ImageArn = imageArn;
            ImageName = imageName;
            InstanceType = instanceType;
            Name = name;
            StreamingUrl = streamingUrl;
            Tags = tags;
            VpcConfig = vpcConfig;
        }
    }
}
