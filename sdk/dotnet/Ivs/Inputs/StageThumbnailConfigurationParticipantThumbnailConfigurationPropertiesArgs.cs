// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ivs.Inputs
{

    /// <summary>
    /// An object representing a configuration of thumbnails for recorded video from an individual participant.
    /// </summary>
    public sealed class StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Thumbnail recording mode. Default: DISABLED.
        /// </summary>
        [Input("recordingMode")]
        public Input<Pulumi.AwsNative.Ivs.StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode>? RecordingMode { get; set; }

        [Input("storage")]
        private InputList<Pulumi.AwsNative.Ivs.StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem>? _storage;

        /// <summary>
        /// Indicates the format in which thumbnails are recorded. SEQUENTIAL records all generated thumbnails in a serial manner, to the media/thumbnails/high directory. LATEST saves the latest thumbnail in media/latest_thumbnail/high/thumb.jpg and overwrites it at the interval specified by targetIntervalSeconds. You can enable both SEQUENTIAL and LATEST. Default: SEQUENTIAL.
        /// </summary>
        public InputList<Pulumi.AwsNative.Ivs.StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem> Storage
        {
            get => _storage ?? (_storage = new InputList<Pulumi.AwsNative.Ivs.StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem>());
            set => _storage = value;
        }

        /// <summary>
        /// The targeted thumbnail-generation interval in seconds. This is configurable only if recordingMode is INTERVAL. Default: 60.
        /// </summary>
        [Input("targetIntervalSeconds")]
        public Input<int>? TargetIntervalSeconds { get; set; }

        public StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesArgs()
        {
        }
        public static new StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesArgs Empty => new StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesArgs();
    }
}
