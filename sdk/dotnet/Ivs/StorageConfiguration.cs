// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ivs
{
    /// <summary>
    /// Resource Type definition for AWS::IVS::StorageConfiguration
    /// </summary>
    [AwsNativeResourceType("aws-native:ivs:StorageConfiguration")]
    public partial class StorageConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Storage Configuration ARN is automatically generated on creation and assigned as the unique identifier.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Storage Configuration Name.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The S3StorageConfiguration property type describes an S3 location where recorded videos will be stored.
        /// </summary>
        [Output("s3")]
        public Output<Outputs.StorageConfigurationS3StorageConfiguration> S3 { get; private set; } = null!;

        /// <summary>
        /// A list of key-value pairs that contain metadata for the asset model.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a StorageConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageConfiguration(string name, StorageConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ivs:StorageConfiguration", name, args ?? new StorageConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ivs:StorageConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                    "s3",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StorageConfiguration(name, id, options);
        }
    }

    public sealed class StorageConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Storage Configuration Name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The S3StorageConfiguration property type describes an S3 location where recorded videos will be stored.
        /// </summary>
        [Input("s3", required: true)]
        public Input<Inputs.StorageConfigurationS3StorageConfigurationArgs> S3 { get; set; } = null!;

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A list of key-value pairs that contain metadata for the asset model.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public StorageConfigurationArgs()
        {
        }
        public static new StorageConfigurationArgs Empty => new StorageConfigurationArgs();
    }
}
