// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WorkspacesInstances
{
    /// <summary>
    /// Resource Type definition for AWS::WorkspacesInstances::Volume - Manages WorkSpaces Volume resources
    /// </summary>
    [AwsNativeResourceType("aws-native:workspacesinstances:Volume")]
    public partial class Volume : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Availability Zone in which to create the volume
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the volume should be encrypted
        /// </summary>
        [Output("encrypted")]
        public Output<bool?> Encrypted { get; private set; } = null!;

        /// <summary>
        /// The number of I/O operations per second (IOPS)
        /// </summary>
        [Output("iops")]
        public Output<int?> Iops { get; private set; } = null!;

        /// <summary>
        /// The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// The size of the volume, in GiBs
        /// </summary>
        [Output("sizeInGb")]
        public Output<int?> SizeInGb { get; private set; } = null!;

        /// <summary>
        /// The snapshot from which to create the volume
        /// </summary>
        [Output("snapshotId")]
        public Output<string?> SnapshotId { get; private set; } = null!;

        /// <summary>
        /// The tags passed to EBS volume
        /// </summary>
        [Output("tagSpecifications")]
        public Output<ImmutableArray<Outputs.VolumeTagSpecification>> TagSpecifications { get; private set; } = null!;

        /// <summary>
        /// The throughput to provision for a volume, with a maximum of 1,000 MiB/s
        /// </summary>
        [Output("throughput")]
        public Output<int?> Throughput { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the volume
        /// </summary>
        [Output("volumeId")]
        public Output<string> VolumeId { get; private set; } = null!;

        /// <summary>
        /// The volume type
        /// </summary>
        [Output("volumeType")]
        public Output<Pulumi.AwsNative.WorkspacesInstances.VolumeType?> VolumeType { get; private set; } = null!;


        /// <summary>
        /// Create a Volume resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Volume(string name, VolumeArgs args, CustomResourceOptions? options = null)
            : base("aws-native:workspacesinstances:Volume", name, args ?? new VolumeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Volume(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:workspacesinstances:Volume", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "availabilityZone",
                    "encrypted",
                    "iops",
                    "kmsKeyId",
                    "sizeInGb",
                    "snapshotId",
                    "tagSpecifications[*]",
                    "throughput",
                    "volumeType",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Volume resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Volume Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Volume(name, id, options);
        }
    }

    public sealed class VolumeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Availability Zone in which to create the volume
        /// </summary>
        [Input("availabilityZone", required: true)]
        public Input<string> AvailabilityZone { get; set; } = null!;

        /// <summary>
        /// Indicates whether the volume should be encrypted
        /// </summary>
        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        /// <summary>
        /// The number of I/O operations per second (IOPS)
        /// </summary>
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        /// <summary>
        /// The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// The size of the volume, in GiBs
        /// </summary>
        [Input("sizeInGb")]
        public Input<int>? SizeInGb { get; set; }

        /// <summary>
        /// The snapshot from which to create the volume
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        [Input("tagSpecifications")]
        private InputList<Inputs.VolumeTagSpecificationArgs>? _tagSpecifications;

        /// <summary>
        /// The tags passed to EBS volume
        /// </summary>
        public InputList<Inputs.VolumeTagSpecificationArgs> TagSpecifications
        {
            get => _tagSpecifications ?? (_tagSpecifications = new InputList<Inputs.VolumeTagSpecificationArgs>());
            set => _tagSpecifications = value;
        }

        /// <summary>
        /// The throughput to provision for a volume, with a maximum of 1,000 MiB/s
        /// </summary>
        [Input("throughput")]
        public Input<int>? Throughput { get; set; }

        /// <summary>
        /// The volume type
        /// </summary>
        [Input("volumeType")]
        public Input<Pulumi.AwsNative.WorkspacesInstances.VolumeType>? VolumeType { get; set; }

        public VolumeArgs()
        {
        }
        public static new VolumeArgs Empty => new VolumeArgs();
    }
}
