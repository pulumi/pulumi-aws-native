// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WorkspacesInstances.Inputs
{

    public sealed class ManagedInstancePropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("blockDeviceMappings")]
        private InputList<Inputs.WorkspaceInstanceBlockDeviceMappingArgs>? _blockDeviceMappings;
        public InputList<Inputs.WorkspaceInstanceBlockDeviceMappingArgs> BlockDeviceMappings
        {
            get => _blockDeviceMappings ?? (_blockDeviceMappings = new InputList<Inputs.WorkspaceInstanceBlockDeviceMappingArgs>());
            set => _blockDeviceMappings = value;
        }

        [Input("capacityReservationSpecification")]
        public Input<Inputs.WorkspaceInstanceCapacityReservationSpecificationArgs>? CapacityReservationSpecification { get; set; }

        [Input("cpuOptions")]
        public Input<Inputs.WorkspaceInstanceCpuOptionsRequestArgs>? CpuOptions { get; set; }

        [Input("creditSpecification")]
        public Input<Inputs.WorkspaceInstanceCreditSpecificationRequestArgs>? CreditSpecification { get; set; }

        [Input("disableApiStop")]
        public Input<bool>? DisableApiStop { get; set; }

        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        [Input("enablePrimaryIpv6")]
        public Input<bool>? EnablePrimaryIpv6 { get; set; }

        [Input("enclaveOptions")]
        public Input<Inputs.WorkspaceInstanceEnclaveOptionsRequestArgs>? EnclaveOptions { get; set; }

        [Input("hibernationOptions")]
        public Input<Inputs.WorkspaceInstanceHibernationOptionsRequestArgs>? HibernationOptions { get; set; }

        [Input("iamInstanceProfile")]
        public Input<Inputs.WorkspaceInstanceIamInstanceProfileSpecificationArgs>? IamInstanceProfile { get; set; }

        [Input("imageId", required: true)]
        public Input<string> ImageId { get; set; } = null!;

        [Input("instanceMarketOptions")]
        public Input<Inputs.WorkspaceInstanceInstanceMarketOptionsRequestArgs>? InstanceMarketOptions { get; set; }

        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        [Input("ipv6AddressCount")]
        public Input<int>? Ipv6AddressCount { get; set; }

        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        [Input("licenseSpecifications")]
        private InputList<Inputs.WorkspaceInstanceLicenseConfigurationRequestArgs>? _licenseSpecifications;
        public InputList<Inputs.WorkspaceInstanceLicenseConfigurationRequestArgs> LicenseSpecifications
        {
            get => _licenseSpecifications ?? (_licenseSpecifications = new InputList<Inputs.WorkspaceInstanceLicenseConfigurationRequestArgs>());
            set => _licenseSpecifications = value;
        }

        [Input("maintenanceOptions")]
        public Input<Inputs.WorkspaceInstanceInstanceMaintenanceOptionsRequestArgs>? MaintenanceOptions { get; set; }

        [Input("metadataOptions")]
        public Input<Inputs.WorkspaceInstanceInstanceMetadataOptionsRequestArgs>? MetadataOptions { get; set; }

        [Input("monitoring")]
        public Input<Inputs.WorkspaceInstanceRunInstancesMonitoringEnabledArgs>? Monitoring { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.WorkspaceInstanceInstanceNetworkInterfaceSpecificationArgs>? _networkInterfaces;
        public InputList<Inputs.WorkspaceInstanceInstanceNetworkInterfaceSpecificationArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.WorkspaceInstanceInstanceNetworkInterfaceSpecificationArgs>());
            set => _networkInterfaces = value;
        }

        [Input("networkPerformanceOptions")]
        public Input<Inputs.WorkspaceInstanceInstanceNetworkPerformanceOptionsRequestArgs>? NetworkPerformanceOptions { get; set; }

        [Input("placement")]
        public Input<Inputs.WorkspaceInstancePlacementArgs>? Placement { get; set; }

        [Input("privateDnsNameOptions")]
        public Input<Inputs.WorkspaceInstancePrivateDnsNameOptionsRequestArgs>? PrivateDnsNameOptions { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tagSpecifications")]
        private InputList<Inputs.WorkspaceInstanceTagSpecificationArgs>? _tagSpecifications;
        public InputList<Inputs.WorkspaceInstanceTagSpecificationArgs> TagSpecifications
        {
            get => _tagSpecifications ?? (_tagSpecifications = new InputList<Inputs.WorkspaceInstanceTagSpecificationArgs>());
            set => _tagSpecifications = value;
        }

        [Input("userData")]
        public Input<string>? UserData { get; set; }

        public ManagedInstancePropertiesArgs()
        {
        }
        public static new ManagedInstancePropertiesArgs Empty => new ManagedInstancePropertiesArgs();
    }
}
