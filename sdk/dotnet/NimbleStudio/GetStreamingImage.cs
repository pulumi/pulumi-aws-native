// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NimbleStudio
{
    public static class GetStreamingImage
    {
        /// <summary>
        /// Resource Type definition for AWS::NimbleStudio::StreamingImage
        /// </summary>
        public static Task<GetStreamingImageResult> InvokeAsync(GetStreamingImageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamingImageResult>("aws-native:nimblestudio:getStreamingImage", args ?? new GetStreamingImageArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::NimbleStudio::StreamingImage
        /// </summary>
        public static Output<GetStreamingImageResult> Invoke(GetStreamingImageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamingImageResult>("aws-native:nimblestudio:getStreamingImage", args ?? new GetStreamingImageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::NimbleStudio::StreamingImage
        /// </summary>
        public static Output<GetStreamingImageResult> Invoke(GetStreamingImageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamingImageResult>("aws-native:nimblestudio:getStreamingImage", args ?? new GetStreamingImageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamingImageArgs : global::Pulumi.InvokeArgs
    {
        [Input("streamingImageId", required: true)]
        public string StreamingImageId { get; set; } = null!;

        public GetStreamingImageArgs()
        {
        }
        public static new GetStreamingImageArgs Empty => new GetStreamingImageArgs();
    }

    public sealed class GetStreamingImageInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("streamingImageId", required: true)]
        public Input<string> StreamingImageId { get; set; } = null!;

        public GetStreamingImageInvokeArgs()
        {
        }
        public static new GetStreamingImageInvokeArgs Empty => new GetStreamingImageInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamingImageResult
    {
        public readonly string? Description;
        public readonly Outputs.StreamingImageEncryptionConfiguration? EncryptionConfiguration;
        public readonly string? EncryptionConfigurationKeyArn;
        public readonly string? EncryptionConfigurationKeyType;
        public readonly ImmutableArray<string> EulaIds;
        public readonly string? Name;
        public readonly string? Owner;
        public readonly string? Platform;
        public readonly string? StreamingImageId;

        [OutputConstructor]
        private GetStreamingImageResult(
            string? description,

            Outputs.StreamingImageEncryptionConfiguration? encryptionConfiguration,

            string? encryptionConfigurationKeyArn,

            string? encryptionConfigurationKeyType,

            ImmutableArray<string> eulaIds,

            string? name,

            string? owner,

            string? platform,

            string? streamingImageId)
        {
            Description = description;
            EncryptionConfiguration = encryptionConfiguration;
            EncryptionConfigurationKeyArn = encryptionConfigurationKeyArn;
            EncryptionConfigurationKeyType = encryptionConfigurationKeyType;
            EulaIds = eulaIds;
            Name = name;
            Owner = owner;
            Platform = platform;
            StreamingImageId = streamingImageId;
        }
    }
}
