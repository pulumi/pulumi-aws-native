// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NimbleStudio
{
    public static class GetStudio
    {
        /// <summary>
        /// Resource Type definition for AWS::NimbleStudio::Studio
        /// </summary>
        public static Task<GetStudioResult> InvokeAsync(GetStudioArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStudioResult>("aws-native:nimblestudio:getStudio", args ?? new GetStudioArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::NimbleStudio::Studio
        /// </summary>
        public static Output<GetStudioResult> Invoke(GetStudioInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStudioResult>("aws-native:nimblestudio:getStudio", args ?? new GetStudioInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStudioArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the studio resource.
        /// </summary>
        [Input("studioId", required: true)]
        public string StudioId { get; set; } = null!;

        public GetStudioArgs()
        {
        }
        public static new GetStudioArgs Empty => new GetStudioArgs();
    }

    public sealed class GetStudioInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier for the studio resource.
        /// </summary>
        [Input("studioId", required: true)]
        public Input<string> StudioId { get; set; } = null!;

        public GetStudioInvokeArgs()
        {
        }
        public static new GetStudioInvokeArgs Empty => new GetStudioInvokeArgs();
    }


    [OutputType]
    public sealed class GetStudioResult
    {
        /// <summary>
        /// The IAM role that studio admins assume when logging in to the Nimble Studio portal.
        /// </summary>
        public readonly string? AdminRoleArn;
        /// <summary>
        /// A friendly name for the studio.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The AWS Region where the studio resource is located. For example, `us-west-2` .
        /// </summary>
        public readonly string? HomeRegion;
        /// <summary>
        /// The IAM Identity Center application client ID that is used to integrate with IAM Identity Center , which enables IAM Identity Center users to log into the  portal.
        /// </summary>
        public readonly string? SsoClientId;
        /// <summary>
        /// Configuration of the encryption method that is used for the studio.
        /// </summary>
        public readonly Outputs.StudioEncryptionConfiguration? StudioEncryptionConfiguration;
        /// <summary>
        /// The unique identifier for the studio resource.
        /// </summary>
        public readonly string? StudioId;
        /// <summary>
        /// The unique identifier for the studio resource.
        /// </summary>
        public readonly string? StudioUrl;
        /// <summary>
        /// The IAM role that studio users assume when logging in to the Nimble Studio portal.
        /// </summary>
        public readonly string? UserRoleArn;

        [OutputConstructor]
        private GetStudioResult(
            string? adminRoleArn,

            string? displayName,

            string? homeRegion,

            string? ssoClientId,

            Outputs.StudioEncryptionConfiguration? studioEncryptionConfiguration,

            string? studioId,

            string? studioUrl,

            string? userRoleArn)
        {
            AdminRoleArn = adminRoleArn;
            DisplayName = displayName;
            HomeRegion = homeRegion;
            SsoClientId = ssoClientId;
            StudioEncryptionConfiguration = studioEncryptionConfiguration;
            StudioId = studioId;
            StudioUrl = studioUrl;
            UserRoleArn = userRoleArn;
        }
    }
}
