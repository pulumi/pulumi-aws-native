// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Dms.Outputs
{

    /// <summary>
    /// OracleSettings property identifier.
    /// </summary>
    [OutputType]
    public sealed class SettingsPropertiesOracleSettingsProperties
    {
        public readonly string? AsmServer;
        public readonly string? CertificateArn;
        public readonly string DatabaseName;
        public readonly int Port;
        public readonly string? SecretsManagerOracleAsmAccessRoleArn;
        public readonly string? SecretsManagerOracleAsmSecretId;
        public readonly string? SecretsManagerSecurityDbEncryptionAccessRoleArn;
        public readonly string? SecretsManagerSecurityDbEncryptionSecretId;
        public readonly string ServerName;
        public readonly Pulumi.AwsNative.Dms.DataProviderDmsSslModeValue SslMode;

        [OutputConstructor]
        private SettingsPropertiesOracleSettingsProperties(
            string? asmServer,

            string? certificateArn,

            string databaseName,

            int port,

            string? secretsManagerOracleAsmAccessRoleArn,

            string? secretsManagerOracleAsmSecretId,

            string? secretsManagerSecurityDbEncryptionAccessRoleArn,

            string? secretsManagerSecurityDbEncryptionSecretId,

            string serverName,

            Pulumi.AwsNative.Dms.DataProviderDmsSslModeValue sslMode)
        {
            AsmServer = asmServer;
            CertificateArn = certificateArn;
            DatabaseName = databaseName;
            Port = port;
            SecretsManagerOracleAsmAccessRoleArn = secretsManagerOracleAsmAccessRoleArn;
            SecretsManagerOracleAsmSecretId = secretsManagerOracleAsmSecretId;
            SecretsManagerSecurityDbEncryptionAccessRoleArn = secretsManagerSecurityDbEncryptionAccessRoleArn;
            SecretsManagerSecurityDbEncryptionSecretId = secretsManagerSecurityDbEncryptionSecretId;
            ServerName = serverName;
            SslMode = sslMode;
        }
    }
}
