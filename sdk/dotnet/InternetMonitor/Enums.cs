// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.InternetMonitor
{
    [EnumType]
    public readonly struct MonitorConfigState : IEquatable<MonitorConfigState>
    {
        private readonly string _value;

        private MonitorConfigState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static MonitorConfigState Pending { get; } = new MonitorConfigState("PENDING");
        public static MonitorConfigState Active { get; } = new MonitorConfigState("ACTIVE");
        public static MonitorConfigState Inactive { get; } = new MonitorConfigState("INACTIVE");
        public static MonitorConfigState Error { get; } = new MonitorConfigState("ERROR");

        public static bool operator ==(MonitorConfigState left, MonitorConfigState right) => left.Equals(right);
        public static bool operator !=(MonitorConfigState left, MonitorConfigState right) => !left.Equals(right);

        public static explicit operator string(MonitorConfigState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is MonitorConfigState other && Equals(other);
        public bool Equals(MonitorConfigState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct MonitorProcessingStatusCode : IEquatable<MonitorProcessingStatusCode>
    {
        private readonly string _value;

        private MonitorProcessingStatusCode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static MonitorProcessingStatusCode Ok { get; } = new MonitorProcessingStatusCode("OK");
        public static MonitorProcessingStatusCode Inactive { get; } = new MonitorProcessingStatusCode("INACTIVE");
        public static MonitorProcessingStatusCode CollectingData { get; } = new MonitorProcessingStatusCode("COLLECTING_DATA");
        public static MonitorProcessingStatusCode InsufficientData { get; } = new MonitorProcessingStatusCode("INSUFFICIENT_DATA");
        public static MonitorProcessingStatusCode FaultService { get; } = new MonitorProcessingStatusCode("FAULT_SERVICE");
        public static MonitorProcessingStatusCode FaultAccessCloudwatch { get; } = new MonitorProcessingStatusCode("FAULT_ACCESS_CLOUDWATCH");

        public static bool operator ==(MonitorProcessingStatusCode left, MonitorProcessingStatusCode right) => left.Equals(right);
        public static bool operator !=(MonitorProcessingStatusCode left, MonitorProcessingStatusCode right) => !left.Equals(right);

        public static explicit operator string(MonitorProcessingStatusCode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is MonitorProcessingStatusCode other && Equals(other);
        public bool Equals(MonitorProcessingStatusCode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
