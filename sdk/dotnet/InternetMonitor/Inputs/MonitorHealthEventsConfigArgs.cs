// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.InternetMonitor.Inputs
{

    public sealed class MonitorHealthEventsConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local availability issue.
        /// </summary>
        [Input("availabilityLocalHealthEventsConfig")]
        public Input<Inputs.MonitorLocalHealthEventsConfigArgs>? AvailabilityLocalHealthEventsConfig { get; set; }

        /// <summary>
        /// The health event threshold percentage set for availability scores. When the overall availability score is at or below this percentage, Internet Monitor creates a health event.
        /// </summary>
        [Input("availabilityScoreThreshold")]
        public Input<double>? AvailabilityScoreThreshold { get; set; }

        /// <summary>
        /// The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local performance issue.
        /// </summary>
        [Input("performanceLocalHealthEventsConfig")]
        public Input<Inputs.MonitorLocalHealthEventsConfigArgs>? PerformanceLocalHealthEventsConfig { get; set; }

        /// <summary>
        /// The health event threshold percentage set for performance scores. When the overall performance score is at or below this percentage, Internet Monitor creates a health event.
        /// </summary>
        [Input("performanceScoreThreshold")]
        public Input<double>? PerformanceScoreThreshold { get; set; }

        public MonitorHealthEventsConfigArgs()
        {
        }
        public static new MonitorHealthEventsConfigArgs Empty => new MonitorHealthEventsConfigArgs();
    }
}
