// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53
{
    /// <summary>
    /// Resource schema for AWS::Route53::HostedZone.
    /// </summary>
    [AwsNativeResourceType("aws-native:route53:HostedZone")]
    public partial class HostedZone : Pulumi.CustomResource
    {
        [Output("hostedZoneConfig")]
        public Output<Outputs.HostedZoneHostedZoneConfig?> HostedZoneConfig { get; private set; } = null!;

        /// <summary>
        /// Adds, edits, or deletes tags for a health check or a hosted zone.
        /// 
        /// For information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.
        /// </summary>
        [Output("hostedZoneTags")]
        public Output<ImmutableArray<Outputs.HostedZoneHostedZoneTag>> HostedZoneTags { get; private set; } = null!;

        /// <summary>
        /// The name of the domain. Specify a fully qualified domain name, for example, www.example.com. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.
        /// 
        /// If you're creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Route 53, change the name servers for your domain to the set of NameServers that are returned by the Fn::GetAtt intrinsic function.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("nameServers")]
        public Output<ImmutableArray<string>> NameServers { get; private set; } = null!;

        [Output("queryLoggingConfig")]
        public Output<Outputs.HostedZoneQueryLoggingConfig?> QueryLoggingConfig { get; private set; } = null!;

        /// <summary>
        /// A complex type that contains information about the VPCs that are associated with the specified hosted zone.
        /// </summary>
        [Output("vPCs")]
        public Output<ImmutableArray<Outputs.HostedZoneVPC>> VPCs { get; private set; } = null!;


        /// <summary>
        /// Create a HostedZone resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HostedZone(string name, HostedZoneArgs args, CustomResourceOptions? options = null)
            : base("aws-native:route53:HostedZone", name, args ?? new HostedZoneArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HostedZone(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:route53:HostedZone", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HostedZone resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HostedZone Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new HostedZone(name, id, options);
        }
    }

    public sealed class HostedZoneArgs : Pulumi.ResourceArgs
    {
        [Input("hostedZoneConfig")]
        public Input<Inputs.HostedZoneHostedZoneConfigArgs>? HostedZoneConfig { get; set; }

        [Input("hostedZoneTags")]
        private InputList<Inputs.HostedZoneHostedZoneTagArgs>? _hostedZoneTags;

        /// <summary>
        /// Adds, edits, or deletes tags for a health check or a hosted zone.
        /// 
        /// For information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.
        /// </summary>
        public InputList<Inputs.HostedZoneHostedZoneTagArgs> HostedZoneTags
        {
            get => _hostedZoneTags ?? (_hostedZoneTags = new InputList<Inputs.HostedZoneHostedZoneTagArgs>());
            set => _hostedZoneTags = value;
        }

        /// <summary>
        /// The name of the domain. Specify a fully qualified domain name, for example, www.example.com. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.
        /// 
        /// If you're creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Route 53, change the name servers for your domain to the set of NameServers that are returned by the Fn::GetAtt intrinsic function.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("queryLoggingConfig")]
        public Input<Inputs.HostedZoneQueryLoggingConfigArgs>? QueryLoggingConfig { get; set; }

        [Input("vPCs")]
        private InputList<Inputs.HostedZoneVPCArgs>? _vPCs;

        /// <summary>
        /// A complex type that contains information about the VPCs that are associated with the specified hosted zone.
        /// </summary>
        public InputList<Inputs.HostedZoneVPCArgs> VPCs
        {
            get => _vPCs ?? (_vPCs = new InputList<Inputs.HostedZoneVPCArgs>());
            set => _vPCs = value;
        }

        public HostedZoneArgs()
        {
        }
    }
}
