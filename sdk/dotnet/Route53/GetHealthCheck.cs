// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53
{
    public static class GetHealthCheck
    {
        /// <summary>
        /// Resource schema for AWS::Route53::HealthCheck.
        /// </summary>
        public static Task<GetHealthCheckResult> InvokeAsync(GetHealthCheckArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetHealthCheckResult>("aws-native:route53:getHealthCheck", args ?? new GetHealthCheckArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Route53::HealthCheck.
        /// </summary>
        public static Output<GetHealthCheckResult> Invoke(GetHealthCheckInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetHealthCheckResult>("aws-native:route53:getHealthCheck", args ?? new GetHealthCheckInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHealthCheckArgs : Pulumi.InvokeArgs
    {
        [Input("healthCheckId", required: true)]
        public string HealthCheckId { get; set; } = null!;

        public GetHealthCheckArgs()
        {
        }
    }

    public sealed class GetHealthCheckInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("healthCheckId", required: true)]
        public Input<string> HealthCheckId { get; set; } = null!;

        public GetHealthCheckInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetHealthCheckResult
    {
        /// <summary>
        /// A complex type that contains information about the health check.
        /// </summary>
        public readonly Outputs.HealthCheckConfigProperties? HealthCheckConfig;
        public readonly string? HealthCheckId;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.HealthCheckTag> HealthCheckTags;

        [OutputConstructor]
        private GetHealthCheckResult(
            Outputs.HealthCheckConfigProperties? healthCheckConfig,

            string? healthCheckId,

            ImmutableArray<Outputs.HealthCheckTag> healthCheckTags)
        {
            HealthCheckConfig = healthCheckConfig;
            HealthCheckId = healthCheckId;
            HealthCheckTags = healthCheckTags;
        }
    }
}
