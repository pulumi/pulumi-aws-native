// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53
{
    public static class GetRecordSet
    {
        /// <summary>
        /// Resource Type definition for AWS::Route53::RecordSet.
        /// </summary>
        public static Task<GetRecordSetResult> InvokeAsync(GetRecordSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRecordSetResult>("aws-native:route53:getRecordSet", args ?? new GetRecordSetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Route53::RecordSet.
        /// </summary>
        public static Output<GetRecordSetResult> Invoke(GetRecordSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecordSetResult>("aws-native:route53:getRecordSet", args ?? new GetRecordSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRecordSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the hosted zone that you want to create records in.
        /// </summary>
        [Input("hostedZoneId", required: true)]
        public string HostedZoneId { get; set; } = null!;

        /// <summary>
        /// The name of the record that you want to create, update, or delete.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
        /// </summary>
        [Input("setIdentifier", required: true)]
        public string SetIdentifier { get; set; } = null!;

        /// <summary>
        /// The DNS record type.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetRecordSetArgs()
        {
        }
        public static new GetRecordSetArgs Empty => new GetRecordSetArgs();
    }

    public sealed class GetRecordSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the hosted zone that you want to create records in.
        /// </summary>
        [Input("hostedZoneId", required: true)]
        public Input<string> HostedZoneId { get; set; } = null!;

        /// <summary>
        /// The name of the record that you want to create, update, or delete.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
        /// </summary>
        [Input("setIdentifier", required: true)]
        public Input<string> SetIdentifier { get; set; } = null!;

        /// <summary>
        /// The DNS record type.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetRecordSetInvokeArgs()
        {
        }
        public static new GetRecordSetInvokeArgs Empty => new GetRecordSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetRecordSetResult
    {
        /// <summary>
        /// Alias resource record sets only: Information about the AWS resource, such as a CloudFront distribution or an Amazon S3 bucket, that you want to route traffic to.
        /// </summary>
        public readonly Outputs.RecordSetAliasTarget? AliasTarget;
        /// <summary>
        /// The object that is specified in resource record set object when you are linking a resource record set to a CIDR location.
        /// </summary>
        public readonly Outputs.RecordSetCidrRoutingConfig? CidrRoutingConfig;
        /// <summary>
        /// To configure failover, you add the Failover element to two resource record sets. For one resource record set, you specify PRIMARY as the value for Failover; for the other resource record set, you specify SECONDARY. In addition, you include the HealthCheckId element and specify the health check that you want Amazon Route 53 to perform for each resource record set.
        /// </summary>
        public readonly Pulumi.AwsNative.Route53.RecordSetFailover? Failover;
        /// <summary>
        /// A complex type that lets you control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
        /// </summary>
        public readonly Outputs.RecordSetGeoLocation? GeoLocation;
        /// <summary>
        /// If you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the HealthCheckId element and specify the ID of the applicable health check.
        /// </summary>
        public readonly string? HealthCheckId;
        /// <summary>
        /// To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify true for MultiValueAnswer.
        /// </summary>
        public readonly bool? MultiValueAnswer;
        /// <summary>
        /// The name of the record that you want to create, update, or delete.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The Amazon EC2 Region where you created the resource that this resource record set refers to.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// One or more values that correspond with the value that you specified for the Type property.
        /// </summary>
        public readonly ImmutableArray<string> ResourceRecords;
        /// <summary>
        /// An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
        /// </summary>
        public readonly string? SetIdentifier;
        /// <summary>
        /// The resource record cache time to live (TTL), in seconds.
        /// </summary>
        public readonly string? Ttl;
        /// <summary>
        /// The DNS record type.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set. Route 53 calculates the sum of the weights for the resource record sets that have the same combination of DNS name and type. Route 53 then responds to queries based on the ratio of a resource's weight to the total.
        /// </summary>
        public readonly int? Weight;

        [OutputConstructor]
        private GetRecordSetResult(
            Outputs.RecordSetAliasTarget? aliasTarget,

            Outputs.RecordSetCidrRoutingConfig? cidrRoutingConfig,

            Pulumi.AwsNative.Route53.RecordSetFailover? failover,

            Outputs.RecordSetGeoLocation? geoLocation,

            string? healthCheckId,

            bool? multiValueAnswer,

            string? name,

            string? region,

            ImmutableArray<string> resourceRecords,

            string? setIdentifier,

            string? ttl,

            string? type,

            int? weight)
        {
            AliasTarget = aliasTarget;
            CidrRoutingConfig = cidrRoutingConfig;
            Failover = failover;
            GeoLocation = geoLocation;
            HealthCheckId = healthCheckId;
            MultiValueAnswer = multiValueAnswer;
            Name = name;
            Region = region;
            ResourceRecords = resourceRecords;
            SetIdentifier = setIdentifier;
            Ttl = ttl;
            Type = type;
            Weight = weight;
        }
    }
}
