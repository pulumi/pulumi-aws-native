// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53
{
    /// <summary>
    /// Resource Type definition for AWS::Route53::RecordSet.
    /// </summary>
    [AwsNativeResourceType("aws-native:route53:RecordSet")]
    public partial class RecordSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Alias resource record sets only: Information about the AWS resource, such as a CloudFront distribution or an Amazon S3 bucket, that you want to route traffic to.
        /// </summary>
        [Output("aliasTarget")]
        public Output<Outputs.RecordSetAliasTarget?> AliasTarget { get; private set; } = null!;

        /// <summary>
        /// The object that is specified in resource record set object when you are linking a resource record set to a CIDR location.
        /// </summary>
        [Output("cidrRoutingConfig")]
        public Output<Outputs.RecordSetCidrRoutingConfig?> CidrRoutingConfig { get; private set; } = null!;

        /// <summary>
        /// Optional: Any comments you want to include about a change batch request.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// To configure failover, you add the Failover element to two resource record sets. For one resource record set, you specify PRIMARY as the value for Failover; for the other resource record set, you specify SECONDARY. In addition, you include the HealthCheckId element and specify the health check that you want Amazon Route 53 to perform for each resource record set.
        /// </summary>
        [Output("failover")]
        public Output<Pulumi.AwsNative.Route53.RecordSetFailover?> Failover { get; private set; } = null!;

        /// <summary>
        /// A complex type that lets you control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
        /// </summary>
        [Output("geoLocation")]
        public Output<Outputs.RecordSetGeoLocation?> GeoLocation { get; private set; } = null!;

        /// <summary>
        /// If you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the HealthCheckId element and specify the ID of the applicable health check.
        /// </summary>
        [Output("healthCheckId")]
        public Output<string?> HealthCheckId { get; private set; } = null!;

        /// <summary>
        /// The ID of the hosted zone that you want to create records in.
        /// </summary>
        [Output("hostedZoneId")]
        public Output<string?> HostedZoneId { get; private set; } = null!;

        /// <summary>
        /// The name of the hosted zone that you want to create records in. You must include a trailing dot (for example, www.example.com.) as part of the HostedZoneName.
        /// </summary>
        [Output("hostedZoneName")]
        public Output<string?> HostedZoneName { get; private set; } = null!;

        /// <summary>
        /// To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify true for MultiValueAnswer.
        /// </summary>
        [Output("multiValueAnswer")]
        public Output<bool?> MultiValueAnswer { get; private set; } = null!;

        /// <summary>
        /// The name of the record that you want to create, update, or delete.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Amazon EC2 Region where you created the resource that this resource record set refers to.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// One or more values that correspond with the value that you specified for the Type property.
        /// </summary>
        [Output("resourceRecords")]
        public Output<ImmutableArray<string>> ResourceRecords { get; private set; } = null!;

        /// <summary>
        /// An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
        /// </summary>
        [Output("setIdentifier")]
        public Output<string?> SetIdentifier { get; private set; } = null!;

        /// <summary>
        /// The resource record cache time to live (TTL), in seconds.
        /// </summary>
        [Output("ttl")]
        public Output<string?> Ttl { get; private set; } = null!;

        /// <summary>
        /// The DNS record type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set. Route 53 calculates the sum of the weights for the resource record sets that have the same combination of DNS name and type. Route 53 then responds to queries based on the ratio of a resource's weight to the total.
        /// </summary>
        [Output("weight")]
        public Output<int?> Weight { get; private set; } = null!;


        /// <summary>
        /// Create a RecordSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RecordSet(string name, RecordSetArgs args, CustomResourceOptions? options = null)
            : base("aws-native:route53:RecordSet", name, args ?? new RecordSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RecordSet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:route53:RecordSet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "hostedZoneId",
                    "hostedZoneName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RecordSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RecordSet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RecordSet(name, id, options);
        }
    }

    public sealed class RecordSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alias resource record sets only: Information about the AWS resource, such as a CloudFront distribution or an Amazon S3 bucket, that you want to route traffic to.
        /// </summary>
        [Input("aliasTarget")]
        public Input<Inputs.RecordSetAliasTargetArgs>? AliasTarget { get; set; }

        /// <summary>
        /// The object that is specified in resource record set object when you are linking a resource record set to a CIDR location.
        /// </summary>
        [Input("cidrRoutingConfig")]
        public Input<Inputs.RecordSetCidrRoutingConfigArgs>? CidrRoutingConfig { get; set; }

        /// <summary>
        /// Optional: Any comments you want to include about a change batch request.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// To configure failover, you add the Failover element to two resource record sets. For one resource record set, you specify PRIMARY as the value for Failover; for the other resource record set, you specify SECONDARY. In addition, you include the HealthCheckId element and specify the health check that you want Amazon Route 53 to perform for each resource record set.
        /// </summary>
        [Input("failover")]
        public Input<Pulumi.AwsNative.Route53.RecordSetFailover>? Failover { get; set; }

        /// <summary>
        /// A complex type that lets you control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
        /// </summary>
        [Input("geoLocation")]
        public Input<Inputs.RecordSetGeoLocationArgs>? GeoLocation { get; set; }

        /// <summary>
        /// If you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the HealthCheckId element and specify the ID of the applicable health check.
        /// </summary>
        [Input("healthCheckId")]
        public Input<string>? HealthCheckId { get; set; }

        /// <summary>
        /// The ID of the hosted zone that you want to create records in.
        /// </summary>
        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        /// <summary>
        /// The name of the hosted zone that you want to create records in. You must include a trailing dot (for example, www.example.com.) as part of the HostedZoneName.
        /// </summary>
        [Input("hostedZoneName")]
        public Input<string>? HostedZoneName { get; set; }

        /// <summary>
        /// To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify true for MultiValueAnswer.
        /// </summary>
        [Input("multiValueAnswer")]
        public Input<bool>? MultiValueAnswer { get; set; }

        /// <summary>
        /// The name of the record that you want to create, update, or delete.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Amazon EC2 Region where you created the resource that this resource record set refers to.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("resourceRecords")]
        private InputList<string>? _resourceRecords;

        /// <summary>
        /// One or more values that correspond with the value that you specified for the Type property.
        /// </summary>
        public InputList<string> ResourceRecords
        {
            get => _resourceRecords ?? (_resourceRecords = new InputList<string>());
            set => _resourceRecords = value;
        }

        /// <summary>
        /// An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
        /// </summary>
        [Input("setIdentifier")]
        public Input<string>? SetIdentifier { get; set; }

        /// <summary>
        /// The resource record cache time to live (TTL), in seconds.
        /// </summary>
        [Input("ttl")]
        public Input<string>? Ttl { get; set; }

        /// <summary>
        /// The DNS record type.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set. Route 53 calculates the sum of the weights for the resource record sets that have the same combination of DNS name and type. Route 53 then responds to queries based on the ratio of a resource's weight to the total.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public RecordSetArgs()
        {
        }
        public static new RecordSetArgs Empty => new RecordSetArgs();
    }
}
