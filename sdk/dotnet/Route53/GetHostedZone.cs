// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53
{
    public static class GetHostedZone
    {
        /// <summary>
        /// Resource schema for AWS::Route53::HostedZone.
        /// </summary>
        public static Task<GetHostedZoneResult> InvokeAsync(GetHostedZoneArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetHostedZoneResult>("aws-native:route53:getHostedZone", args ?? new GetHostedZoneArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Route53::HostedZone.
        /// </summary>
        public static Output<GetHostedZoneResult> Invoke(GetHostedZoneInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetHostedZoneResult>("aws-native:route53:getHostedZone", args ?? new GetHostedZoneInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostedZoneArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetHostedZoneArgs()
        {
        }
    }

    public sealed class GetHostedZoneInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetHostedZoneInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetHostedZoneResult
    {
        public readonly Outputs.HostedZoneConfig? HostedZoneConfig;
        /// <summary>
        /// Adds, edits, or deletes tags for a health check or a hosted zone.
        /// 
        /// For information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.
        /// </summary>
        public readonly ImmutableArray<Outputs.HostedZoneTag> HostedZoneTags;
        public readonly string? Id;
        public readonly ImmutableArray<string> NameServers;
        public readonly Outputs.HostedZoneQueryLoggingConfig? QueryLoggingConfig;
        /// <summary>
        /// A complex type that contains information about the VPCs that are associated with the specified hosted zone.
        /// </summary>
        public readonly ImmutableArray<Outputs.HostedZoneVPC> VPCs;

        [OutputConstructor]
        private GetHostedZoneResult(
            Outputs.HostedZoneConfig? hostedZoneConfig,

            ImmutableArray<Outputs.HostedZoneTag> hostedZoneTags,

            string? id,

            ImmutableArray<string> nameServers,

            Outputs.HostedZoneQueryLoggingConfig? queryLoggingConfig,

            ImmutableArray<Outputs.HostedZoneVPC> vPCs)
        {
            HostedZoneConfig = hostedZoneConfig;
            HostedZoneTags = hostedZoneTags;
            Id = id;
            NameServers = nameServers;
            QueryLoggingConfig = queryLoggingConfig;
            VPCs = vPCs;
        }
    }
}
