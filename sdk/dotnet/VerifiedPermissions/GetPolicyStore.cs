// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.VerifiedPermissions
{
    public static class GetPolicyStore
    {
        /// <summary>
        /// Definition of AWS::VerifiedPermissions::PolicyStore Resource Type
        /// </summary>
        public static Task<GetPolicyStoreResult> InvokeAsync(GetPolicyStoreArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyStoreResult>("aws-native:verifiedpermissions:getPolicyStore", args ?? new GetPolicyStoreArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::VerifiedPermissions::PolicyStore Resource Type
        /// </summary>
        public static Output<GetPolicyStoreResult> Invoke(GetPolicyStoreInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyStoreResult>("aws-native:verifiedpermissions:getPolicyStore", args ?? new GetPolicyStoreInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyStoreArgs : global::Pulumi.InvokeArgs
    {
        [Input("policyStoreId", required: true)]
        public string PolicyStoreId { get; set; } = null!;

        public GetPolicyStoreArgs()
        {
        }
        public static new GetPolicyStoreArgs Empty => new GetPolicyStoreArgs();
    }

    public sealed class GetPolicyStoreInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("policyStoreId", required: true)]
        public Input<string> PolicyStoreId { get; set; } = null!;

        public GetPolicyStoreInvokeArgs()
        {
        }
        public static new GetPolicyStoreInvokeArgs Empty => new GetPolicyStoreInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyStoreResult
    {
        public readonly string? Arn;
        public readonly string? PolicyStoreId;
        public readonly Outputs.PolicyStoreSchemaDefinition? Schema;
        public readonly Outputs.PolicyStoreValidationSettings? ValidationSettings;

        [OutputConstructor]
        private GetPolicyStoreResult(
            string? arn,

            string? policyStoreId,

            Outputs.PolicyStoreSchemaDefinition? schema,

            Outputs.PolicyStoreValidationSettings? validationSettings)
        {
            Arn = arn;
            PolicyStoreId = policyStoreId;
            Schema = schema;
            ValidationSettings = validationSettings;
        }
    }
}
