// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.VerifiedPermissions
{
    [EnumType]
    public readonly struct IdentitySourceOpenIdIssuer : IEquatable<IdentitySourceOpenIdIssuer>
    {
        private readonly string _value;

        private IdentitySourceOpenIdIssuer(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static IdentitySourceOpenIdIssuer Cognito { get; } = new IdentitySourceOpenIdIssuer("COGNITO");

        public static bool operator ==(IdentitySourceOpenIdIssuer left, IdentitySourceOpenIdIssuer right) => left.Equals(right);
        public static bool operator !=(IdentitySourceOpenIdIssuer left, IdentitySourceOpenIdIssuer right) => !left.Equals(right);

        public static explicit operator string(IdentitySourceOpenIdIssuer value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is IdentitySourceOpenIdIssuer other && Equals(other);
        public bool Equals(IdentitySourceOpenIdIssuer other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct PolicyStoreValidationMode : IEquatable<PolicyStoreValidationMode>
    {
        private readonly string _value;

        private PolicyStoreValidationMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static PolicyStoreValidationMode Off { get; } = new PolicyStoreValidationMode("OFF");
        public static PolicyStoreValidationMode Strict { get; } = new PolicyStoreValidationMode("STRICT");

        public static bool operator ==(PolicyStoreValidationMode left, PolicyStoreValidationMode right) => left.Equals(right);
        public static bool operator !=(PolicyStoreValidationMode left, PolicyStoreValidationMode right) => !left.Equals(right);

        public static explicit operator string(PolicyStoreValidationMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is PolicyStoreValidationMode other && Equals(other);
        public bool Equals(PolicyStoreValidationMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct PolicyType : IEquatable<PolicyType>
    {
        private readonly string _value;

        private PolicyType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static PolicyType Static { get; } = new PolicyType("STATIC");
        public static PolicyType TemplateLinked { get; } = new PolicyType("TEMPLATE_LINKED");

        public static bool operator ==(PolicyType left, PolicyType right) => left.Equals(right);
        public static bool operator !=(PolicyType left, PolicyType right) => !left.Equals(right);

        public static explicit operator string(PolicyType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is PolicyType other && Equals(other);
        public bool Equals(PolicyType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
