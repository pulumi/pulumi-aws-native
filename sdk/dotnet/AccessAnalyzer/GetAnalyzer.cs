// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AccessAnalyzer
{
    public static class GetAnalyzer
    {
        /// <summary>
        /// The AWS::AccessAnalyzer::Analyzer type specifies an analyzer of the user's account
        /// </summary>
        public static Task<GetAnalyzerResult> InvokeAsync(GetAnalyzerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAnalyzerResult>("aws-native:accessanalyzer:getAnalyzer", args ?? new GetAnalyzerArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::AccessAnalyzer::Analyzer type specifies an analyzer of the user's account
        /// </summary>
        public static Output<GetAnalyzerResult> Invoke(GetAnalyzerInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAnalyzerResult>("aws-native:accessanalyzer:getAnalyzer", args ?? new GetAnalyzerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnalyzerArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the analyzer
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetAnalyzerArgs()
        {
        }
    }

    public sealed class GetAnalyzerInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the analyzer
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetAnalyzerInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAnalyzerResult
    {
        public readonly ImmutableArray<Outputs.AnalyzerArchiveRule> ArchiveRules;
        /// <summary>
        /// Amazon Resource Name (ARN) of the analyzer
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalyzerTag> Tags;

        [OutputConstructor]
        private GetAnalyzerResult(
            ImmutableArray<Outputs.AnalyzerArchiveRule> archiveRules,

            string? arn,

            ImmutableArray<Outputs.AnalyzerTag> tags)
        {
            ArchiveRules = archiveRules;
            Arn = arn;
            Tags = tags;
        }
    }
}
