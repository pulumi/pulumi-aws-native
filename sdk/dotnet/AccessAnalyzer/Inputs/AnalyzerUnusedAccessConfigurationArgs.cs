// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AccessAnalyzer.Inputs
{

    /// <summary>
    /// The Configuration for Unused Access Analyzer
    /// </summary>
    public sealed class AnalyzerUnusedAccessConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contains information about rules for the analyzer.
        /// </summary>
        [Input("analysisRule")]
        public Input<Inputs.AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs>? AnalysisRule { get; set; }

        /// <summary>
        /// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 365 days.
        /// </summary>
        [Input("unusedAccessAge")]
        public Input<int>? UnusedAccessAge { get; set; }

        public AnalyzerUnusedAccessConfigurationArgs()
        {
        }
        public static new AnalyzerUnusedAccessConfigurationArgs Empty => new AnalyzerUnusedAccessConfigurationArgs();
    }
}
