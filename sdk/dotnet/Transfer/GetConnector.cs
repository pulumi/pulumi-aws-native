// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Transfer
{
    public static class GetConnector
    {
        /// <summary>
        /// Resource Type definition for AWS::Transfer::Connector
        /// </summary>
        public static Task<GetConnectorResult> InvokeAsync(GetConnectorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectorResult>("aws-native:transfer:getConnector", args ?? new GetConnectorArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Transfer::Connector
        /// </summary>
        public static Output<GetConnectorResult> Invoke(GetConnectorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectorResult>("aws-native:transfer:getConnector", args ?? new GetConnectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the connector.
        /// </summary>
        [Input("connectorId", required: true)]
        public string ConnectorId { get; set; } = null!;

        public GetConnectorArgs()
        {
        }
        public static new GetConnectorArgs Empty => new GetConnectorArgs();
    }

    public sealed class GetConnectorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the connector.
        /// </summary>
        [Input("connectorId", required: true)]
        public Input<string> ConnectorId { get; set; } = null!;

        public GetConnectorInvokeArgs()
        {
        }
        public static new GetConnectorInvokeArgs Empty => new GetConnectorInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectorResult
    {
        /// <summary>
        /// Specifies the access role for the connector.
        /// </summary>
        public readonly string? AccessRole;
        /// <summary>
        /// Specifies the unique Amazon Resource Name (ARN) for the connector.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Configuration for an AS2 connector.
        /// </summary>
        public readonly Outputs.As2ConfigProperties? As2Config;
        /// <summary>
        /// A unique identifier for the connector.
        /// </summary>
        public readonly string? ConnectorId;
        /// <summary>
        /// Specifies the logging role for the connector.
        /// </summary>
        public readonly string? LoggingRole;
        /// <summary>
        /// Configuration for an SFTP connector.
        /// </summary>
        public readonly Outputs.SftpConfigProperties? SftpConfig;
        /// <summary>
        /// Key-value pairs that can be used to group and search for connectors. Tags are metadata attached to connectors for any purpose.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// URL for Connector
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private GetConnectorResult(
            string? accessRole,

            string? arn,

            Outputs.As2ConfigProperties? as2Config,

            string? connectorId,

            string? loggingRole,

            Outputs.SftpConfigProperties? sftpConfig,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            string? url)
        {
            AccessRole = accessRole;
            Arn = arn;
            As2Config = as2Config;
            ConnectorId = connectorId;
            LoggingRole = loggingRole;
            SftpConfig = sftpConfig;
            Tags = tags;
            Url = url;
        }
    }
}
