// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Transfer.Inputs
{

    public sealed class ServerWorkflowDetailsArgs : global::Pulumi.ResourceArgs
    {
        [Input("onPartialUpload")]
        private InputList<Inputs.ServerWorkflowDetailArgs>? _onPartialUpload;

        /// <summary>
        /// A trigger that starts a workflow if a file is only partially uploaded. You can attach a workflow to a server that executes whenever there is a partial upload.
        /// 
        /// A *partial upload* occurs when a file is open when the session disconnects.
        /// 
        /// &gt; `OnPartialUpload` can contain a maximum of one `WorkflowDetail` object.
        /// </summary>
        public InputList<Inputs.ServerWorkflowDetailArgs> OnPartialUpload
        {
            get => _onPartialUpload ?? (_onPartialUpload = new InputList<Inputs.ServerWorkflowDetailArgs>());
            set => _onPartialUpload = value;
        }

        [Input("onUpload")]
        private InputList<Inputs.ServerWorkflowDetailArgs>? _onUpload;

        /// <summary>
        /// A trigger that starts a workflow: the workflow begins to execute after a file is uploaded.
        /// 
        /// To remove an associated workflow from a server, you can provide an empty `OnUpload` object, as in the following example.
        /// 
        /// `aws transfer update-server --server-id s-01234567890abcdef --workflow-details '{"OnUpload":[]}'`
        /// 
        /// &gt; `OnUpload` can contain a maximum of one `WorkflowDetail` object.
        /// </summary>
        public InputList<Inputs.ServerWorkflowDetailArgs> OnUpload
        {
            get => _onUpload ?? (_onUpload = new InputList<Inputs.ServerWorkflowDetailArgs>());
            set => _onUpload = value;
        }

        public ServerWorkflowDetailsArgs()
        {
        }
        public static new ServerWorkflowDetailsArgs Empty => new ServerWorkflowDetailsArgs();
    }
}
