// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Transfer.Outputs
{

    [OutputType]
    public sealed class ServerIdentityProviderDetails
    {
        /// <summary>
        /// The identifier of the AWS Directory Service directory that you want to use as your identity provider.
        /// </summary>
        public readonly string? DirectoryId;
        /// <summary>
        /// The ARN for a Lambda function to use for the Identity provider.
        /// </summary>
        public readonly string? Function;
        /// <summary>
        /// This parameter is only applicable if your `IdentityProviderType` is `API_GATEWAY` . Provides the type of `InvocationRole` used to authenticate the user account.
        /// </summary>
        public readonly string? InvocationRole;
        /// <summary>
        /// For SFTP-enabled servers, and for custom identity providers *only* , you can specify whether to authenticate using a password, SSH key pair, or both.
        /// 
        /// - `PASSWORD` - users must provide their password to connect.
        /// - `PUBLIC_KEY` - users must provide their private key to connect.
        /// - `PUBLIC_KEY_OR_PASSWORD` - users can authenticate with either their password or their key. This is the default value.
        /// - `PUBLIC_KEY_AND_PASSWORD` - users must provide both their private key and their password to connect. The server checks the key first, and then if the key is valid, the system prompts for a password. If the private key provided does not match the public key that is stored, authentication fails.
        /// </summary>
        public readonly Pulumi.AwsNative.Transfer.ServerSftpAuthenticationMethods? SftpAuthenticationMethods;
        /// <summary>
        /// Provides the location of the service endpoint used to authenticate users.
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private ServerIdentityProviderDetails(
            string? directoryId,

            string? function,

            string? invocationRole,

            Pulumi.AwsNative.Transfer.ServerSftpAuthenticationMethods? sftpAuthenticationMethods,

            string? url)
        {
            DirectoryId = directoryId;
            Function = function;
            InvocationRole = invocationRole;
            SftpAuthenticationMethods = sftpAuthenticationMethods;
            Url = url;
        }
    }
}
