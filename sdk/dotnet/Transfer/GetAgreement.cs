// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Transfer
{
    public static class GetAgreement
    {
        /// <summary>
        /// Resource Type definition for AWS::Transfer::Agreement
        /// </summary>
        public static Task<GetAgreementResult> InvokeAsync(GetAgreementArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgreementResult>("aws-native:transfer:getAgreement", args ?? new GetAgreementArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Transfer::Agreement
        /// </summary>
        public static Output<GetAgreementResult> Invoke(GetAgreementInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgreementResult>("aws-native:transfer:getAgreement", args ?? new GetAgreementInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAgreementArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the agreement.
        /// </summary>
        [Input("agreementId", required: true)]
        public string AgreementId { get; set; } = null!;

        /// <summary>
        /// A unique identifier for the server.
        /// </summary>
        [Input("serverId", required: true)]
        public string ServerId { get; set; } = null!;

        public GetAgreementArgs()
        {
        }
        public static new GetAgreementArgs Empty => new GetAgreementArgs();
    }

    public sealed class GetAgreementInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the agreement.
        /// </summary>
        [Input("agreementId", required: true)]
        public Input<string> AgreementId { get; set; } = null!;

        /// <summary>
        /// A unique identifier for the server.
        /// </summary>
        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        public GetAgreementInvokeArgs()
        {
        }
        public static new GetAgreementInvokeArgs Empty => new GetAgreementInvokeArgs();
    }


    [OutputType]
    public sealed class GetAgreementResult
    {
        /// <summary>
        /// Specifies the access role for the agreement.
        /// </summary>
        public readonly string? AccessRole;
        /// <summary>
        /// A unique identifier for the agreement.
        /// </summary>
        public readonly string? AgreementId;
        /// <summary>
        /// Specifies the unique Amazon Resource Name (ARN) for the agreement.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Specifies the base directory for the agreement.
        /// </summary>
        public readonly string? BaseDirectory;
        /// <summary>
        /// A textual description for the agreement.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A unique identifier for the local profile.
        /// </summary>
        public readonly string? LocalProfileId;
        /// <summary>
        /// A unique identifier for the partner profile.
        /// </summary>
        public readonly string? PartnerProfileId;
        /// <summary>
        /// Specifies the status of the agreement.
        /// </summary>
        public readonly Pulumi.AwsNative.Transfer.AgreementStatus? Status;
        /// <summary>
        /// Key-value pairs that can be used to group and search for agreements. Tags are metadata attached to agreements for any purpose.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetAgreementResult(
            string? accessRole,

            string? agreementId,

            string? arn,

            string? baseDirectory,

            string? description,

            string? localProfileId,

            string? partnerProfileId,

            Pulumi.AwsNative.Transfer.AgreementStatus? status,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            AccessRole = accessRole;
            AgreementId = agreementId;
            Arn = arn;
            BaseDirectory = baseDirectory;
            Description = description;
            LocalProfileId = localProfileId;
            PartnerProfileId = partnerProfileId;
            Status = status;
            Tags = tags;
        }
    }
}
