// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EmrServerless
{
    public static class GetApplication
    {
        /// <summary>
        /// Resource schema for AWS::EMRServerless::Application Type
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("aws-native:emrserverless:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::EMRServerless::Application Type
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("aws-native:emrserverless:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::EMRServerless::Application Type
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("aws-native:emrserverless:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the EMR Serverless Application.
        /// </summary>
        [Input("applicationId", required: true)]
        public string ApplicationId { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
        public static new GetApplicationArgs Empty => new GetApplicationArgs();
    }

    public sealed class GetApplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the EMR Serverless Application.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
        public static new GetApplicationInvokeArgs Empty => new GetApplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        /// <summary>
        /// The ID of the EMR Serverless Application.
        /// </summary>
        public readonly string? ApplicationId;
        /// <summary>
        /// The CPU architecture of an application.
        /// </summary>
        public readonly Pulumi.AwsNative.EmrServerless.ApplicationArchitecture? Architecture;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the EMR Serverless Application.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Configuration for Auto Start of Application.
        /// </summary>
        public readonly Outputs.ApplicationAutoStartConfiguration? AutoStartConfiguration;
        /// <summary>
        /// Configuration for Auto Stop of Application.
        /// </summary>
        public readonly Outputs.ApplicationAutoStopConfiguration? AutoStopConfiguration;
        /// <summary>
        /// The IAM IdentityCenter configuration for trusted-identity-propagation on this application. Supported with release labels emr-7.8.0 and above.
        /// </summary>
        public readonly Outputs.ApplicationIdentityCenterConfiguration? IdentityCenterConfiguration;
        /// <summary>
        /// The image configuration applied to all worker types.
        /// </summary>
        public readonly Outputs.ApplicationImageConfigurationInput? ImageConfiguration;
        /// <summary>
        /// Initial capacity initialized when an Application is started.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationInitialCapacityConfigKeyValuePair> InitialCapacity;
        /// <summary>
        /// The interactive configuration object that enables the interactive use cases for an application.
        /// </summary>
        public readonly Outputs.ApplicationInteractiveConfiguration? InteractiveConfiguration;
        /// <summary>
        /// Maximum allowed cumulative resources for an Application. No new resources will be created once the limit is hit.
        /// </summary>
        public readonly Outputs.ApplicationMaximumAllowedResources? MaximumCapacity;
        /// <summary>
        /// A configuration specification to be used when provisioning an application. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file.
        /// </summary>
        public readonly Outputs.ApplicationMonitoringConfiguration? MonitoringConfiguration;
        /// <summary>
        /// Network Configuration for customer VPC connectivity.
        /// </summary>
        public readonly Outputs.ApplicationNetworkConfiguration? NetworkConfiguration;
        /// <summary>
        /// EMR release label.
        /// </summary>
        public readonly string? ReleaseLabel;
        /// <summary>
        /// The [Configuration](https://docs.aws.amazon.com/emr-serverless/latest/APIReference/API_Configuration.html) specifications of an application. Each configuration consists of a classification and properties. You use this parameter when creating or updating an application. To see the runtimeConfiguration object of an application, run the [GetApplication](https://docs.aws.amazon.com/emr-serverless/latest/APIReference/API_GetApplication.html) API operation.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationConfigurationObject> RuntimeConfiguration;
        /// <summary>
        /// The scheduler configuration for batch and streaming jobs running on this application. Supported with release labels emr-7.0.0 and above.
        /// </summary>
        public readonly Outputs.ApplicationSchedulerConfiguration? SchedulerConfiguration;
        /// <summary>
        /// Tag map with key and value
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The key-value pairs that specify worker type to WorkerTypeSpecificationInput. This parameter must contain all valid worker types for a Spark or Hive application. Valid worker types include Driver and Executor for Spark applications and HiveDriver and TezTask for Hive applications. You can either set image details in this parameter for each worker type, or in imageConfiguration for all worker types.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ApplicationWorkerTypeSpecificationInput>? WorkerTypeSpecifications;

        [OutputConstructor]
        private GetApplicationResult(
            string? applicationId,

            Pulumi.AwsNative.EmrServerless.ApplicationArchitecture? architecture,

            string? arn,

            Outputs.ApplicationAutoStartConfiguration? autoStartConfiguration,

            Outputs.ApplicationAutoStopConfiguration? autoStopConfiguration,

            Outputs.ApplicationIdentityCenterConfiguration? identityCenterConfiguration,

            Outputs.ApplicationImageConfigurationInput? imageConfiguration,

            ImmutableArray<Outputs.ApplicationInitialCapacityConfigKeyValuePair> initialCapacity,

            Outputs.ApplicationInteractiveConfiguration? interactiveConfiguration,

            Outputs.ApplicationMaximumAllowedResources? maximumCapacity,

            Outputs.ApplicationMonitoringConfiguration? monitoringConfiguration,

            Outputs.ApplicationNetworkConfiguration? networkConfiguration,

            string? releaseLabel,

            ImmutableArray<Outputs.ApplicationConfigurationObject> runtimeConfiguration,

            Outputs.ApplicationSchedulerConfiguration? schedulerConfiguration,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            ImmutableDictionary<string, Outputs.ApplicationWorkerTypeSpecificationInput>? workerTypeSpecifications)
        {
            ApplicationId = applicationId;
            Architecture = architecture;
            Arn = arn;
            AutoStartConfiguration = autoStartConfiguration;
            AutoStopConfiguration = autoStopConfiguration;
            IdentityCenterConfiguration = identityCenterConfiguration;
            ImageConfiguration = imageConfiguration;
            InitialCapacity = initialCapacity;
            InteractiveConfiguration = interactiveConfiguration;
            MaximumCapacity = maximumCapacity;
            MonitoringConfiguration = monitoringConfiguration;
            NetworkConfiguration = networkConfiguration;
            ReleaseLabel = releaseLabel;
            RuntimeConfiguration = runtimeConfiguration;
            SchedulerConfiguration = schedulerConfiguration;
            Tags = tags;
            WorkerTypeSpecifications = workerTypeSpecifications;
        }
    }
}
