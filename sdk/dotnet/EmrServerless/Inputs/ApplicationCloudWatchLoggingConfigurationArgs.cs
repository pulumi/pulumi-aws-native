// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EmrServerless.Inputs
{

    public sealed class ApplicationCloudWatchLoggingConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set to false, CloudWatch logging will be turned off. Defaults to false.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// KMS key ARN to encrypt the logs stored in given CloudWatch log-group.
        /// </summary>
        [Input("encryptionKeyArn")]
        public Input<string>? EncryptionKeyArn { get; set; }

        /// <summary>
        /// Log-group name to produce log-streams on CloudWatch. If undefined, logs will be produced in a default log-group /aws/emr-serverless
        /// </summary>
        [Input("logGroupName")]
        public Input<string>? LogGroupName { get; set; }

        /// <summary>
        /// Log-stream name prefix by which log-stream names will start in the CloudWatch Log-group.
        /// </summary>
        [Input("logStreamNamePrefix")]
        public Input<string>? LogStreamNamePrefix { get; set; }

        [Input("logTypeMap")]
        private InputList<Inputs.ApplicationLogTypeMapKeyValuePairArgs>? _logTypeMap;

        /// <summary>
        /// The specific log-streams which need to be uploaded to CloudWatch.
        /// </summary>
        public InputList<Inputs.ApplicationLogTypeMapKeyValuePairArgs> LogTypeMap
        {
            get => _logTypeMap ?? (_logTypeMap = new InputList<Inputs.ApplicationLogTypeMapKeyValuePairArgs>());
            set => _logTypeMap = value;
        }

        public ApplicationCloudWatchLoggingConfigurationArgs()
        {
        }
        public static new ApplicationCloudWatchLoggingConfigurationArgs Empty => new ApplicationCloudWatchLoggingConfigurationArgs();
    }
}
