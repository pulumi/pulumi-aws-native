// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTSiteWise
{
    public static class GetPortal
    {
        /// <summary>
        /// Resource schema for AWS::IoTSiteWise::Portal
        /// </summary>
        public static Task<GetPortalResult> InvokeAsync(GetPortalArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPortalResult>("aws-native:iotsitewise:getPortal", args ?? new GetPortalArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::IoTSiteWise::Portal
        /// </summary>
        public static Output<GetPortalResult> Invoke(GetPortalInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPortalResult>("aws-native:iotsitewise:getPortal", args ?? new GetPortalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPortalArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the portal.
        /// </summary>
        [Input("portalId", required: true)]
        public string PortalId { get; set; } = null!;

        public GetPortalArgs()
        {
        }
    }

    public sealed class GetPortalInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the portal.
        /// </summary>
        [Input("portalId", required: true)]
        public Input<string> PortalId { get; set; } = null!;

        public GetPortalInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPortalResult
    {
        /// <summary>
        /// Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range.
        /// </summary>
        public readonly Outputs.AlarmsProperties? Alarms;
        /// <summary>
        /// The email address that sends alarm notifications.
        /// </summary>
        public readonly string? NotificationSenderEmail;
        /// <summary>
        /// The ARN of the portal, which has the following format.
        /// </summary>
        public readonly string? PortalArn;
        /// <summary>
        /// The AWS SSO application generated client ID (used with AWS SSO APIs).
        /// </summary>
        public readonly string? PortalClientId;
        /// <summary>
        /// The AWS administrator's contact email address.
        /// </summary>
        public readonly string? PortalContactEmail;
        /// <summary>
        /// A description for the portal.
        /// </summary>
        public readonly string? PortalDescription;
        /// <summary>
        /// The ID of the portal.
        /// </summary>
        public readonly string? PortalId;
        /// <summary>
        /// A friendly name for the portal.
        /// </summary>
        public readonly string? PortalName;
        /// <summary>
        /// The public root URL for the AWS IoT AWS IoT SiteWise Monitor application portal.
        /// </summary>
        public readonly string? PortalStartUrl;
        /// <summary>
        /// The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf.
        /// </summary>
        public readonly string? RoleArn;

        [OutputConstructor]
        private GetPortalResult(
            Outputs.AlarmsProperties? alarms,

            string? notificationSenderEmail,

            string? portalArn,

            string? portalClientId,

            string? portalContactEmail,

            string? portalDescription,

            string? portalId,

            string? portalName,

            string? portalStartUrl,

            string? roleArn)
        {
            Alarms = alarms;
            NotificationSenderEmail = notificationSenderEmail;
            PortalArn = portalArn;
            PortalClientId = portalClientId;
            PortalContactEmail = portalContactEmail;
            PortalDescription = portalDescription;
            PortalId = portalId;
            PortalName = portalName;
            PortalStartUrl = portalStartUrl;
            RoleArn = roleArn;
        }
    }
}
