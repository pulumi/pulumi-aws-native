// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTSiteWise.Inputs
{

    /// <summary>
    /// Contains a property type, which can be one of attribute, measurement, metric, or transform.
    /// </summary>
    public sealed class AssetModelPropertyTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contains an asset attribute property. For more information, see [Attributes](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#attributes) in the *AWS IoT SiteWise User Guide* .
        /// </summary>
        [Input("attribute")]
        public Input<Inputs.AssetModelAttributeArgs>? Attribute { get; set; }

        /// <summary>
        /// Contains an asset metric property. With metrics, you can calculate aggregate functions, such as an average, maximum, or minimum, as specified through an expression. A metric maps several values to a single value (such as a sum).
        /// 
        /// The maximum number of dependent/cascading variables used in any one metric calculation is 10. Therefore, a *root* metric can have up to 10 cascading metrics in its computational dependency tree. Additionally, a metric can only have a data type of `DOUBLE` and consume properties with data types of `INTEGER` or `DOUBLE` .
        /// 
        /// For more information, see [Metrics](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#metrics) in the *AWS IoT SiteWise User Guide* .
        /// </summary>
        [Input("metric")]
        public Input<Inputs.AssetModelMetricArgs>? Metric { get; set; }

        /// <summary>
        /// Contains an asset transform property. A transform is a one-to-one mapping of a property's data points from one form to another. For example, you can use a transform to convert a Celsius data stream to Fahrenheit by applying the transformation expression to each data point of the Celsius stream. A transform can only have a data type of `DOUBLE` and consume properties with data types of `INTEGER` or `DOUBLE` .
        /// 
        /// For more information, see [Transforms](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#transforms) in the *AWS IoT SiteWise User Guide* .
        /// </summary>
        [Input("transform")]
        public Input<Inputs.AssetModelTransformArgs>? Transform { get; set; }

        /// <summary>
        /// The type of property type, which can be one of `Attribute` , `Measurement` , `Metric` , or `Transform` .
        /// </summary>
        [Input("typeName", required: true)]
        public Input<Pulumi.AwsNative.IoTSiteWise.AssetModelTypeName> TypeName { get; set; } = null!;

        public AssetModelPropertyTypeArgs()
        {
        }
        public static new AssetModelPropertyTypeArgs Empty => new AssetModelPropertyTypeArgs();
    }
}
