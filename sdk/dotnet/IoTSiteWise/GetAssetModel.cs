// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTSiteWise
{
    public static class GetAssetModel
    {
        /// <summary>
        /// Resource schema for AWS::IoTSiteWise::AssetModel
        /// </summary>
        public static Task<GetAssetModelResult> InvokeAsync(GetAssetModelArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAssetModelResult>("aws-native:iotsitewise:getAssetModel", args ?? new GetAssetModelArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::IoTSiteWise::AssetModel
        /// </summary>
        public static Output<GetAssetModelResult> Invoke(GetAssetModelInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAssetModelResult>("aws-native:iotsitewise:getAssetModel", args ?? new GetAssetModelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssetModelArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the asset model.
        /// </summary>
        [Input("assetModelId", required: true)]
        public string AssetModelId { get; set; } = null!;

        public GetAssetModelArgs()
        {
        }
    }

    public sealed class GetAssetModelInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the asset model.
        /// </summary>
        [Input("assetModelId", required: true)]
        public Input<string> AssetModelId { get; set; } = null!;

        public GetAssetModelInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAssetModelResult
    {
        /// <summary>
        /// The ARN of the asset model, which has the following format.
        /// </summary>
        public readonly string? AssetModelArn;
        /// <summary>
        /// The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetModelCompositeModel> AssetModelCompositeModels;
        /// <summary>
        /// A description for the asset model.
        /// </summary>
        public readonly string? AssetModelDescription;
        /// <summary>
        /// The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. You can specify up to 10 hierarchies per asset model.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetModelHierarchy> AssetModelHierarchies;
        /// <summary>
        /// The ID of the asset model.
        /// </summary>
        public readonly string? AssetModelId;
        /// <summary>
        /// A unique, friendly name for the asset model.
        /// </summary>
        public readonly string? AssetModelName;
        /// <summary>
        /// The property definitions of the asset model. You can specify up to 200 properties per asset model.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetModelProperty> AssetModelProperties;
        /// <summary>
        /// A list of key-value pairs that contain metadata for the asset model.
        /// </summary>
        public readonly ImmutableArray<Outputs.AssetModelTag> Tags;

        [OutputConstructor]
        private GetAssetModelResult(
            string? assetModelArn,

            ImmutableArray<Outputs.AssetModelCompositeModel> assetModelCompositeModels,

            string? assetModelDescription,

            ImmutableArray<Outputs.AssetModelHierarchy> assetModelHierarchies,

            string? assetModelId,

            string? assetModelName,

            ImmutableArray<Outputs.AssetModelProperty> assetModelProperties,

            ImmutableArray<Outputs.AssetModelTag> tags)
        {
            AssetModelArn = assetModelArn;
            AssetModelCompositeModels = assetModelCompositeModels;
            AssetModelDescription = assetModelDescription;
            AssetModelHierarchies = assetModelHierarchies;
            AssetModelId = assetModelId;
            AssetModelName = assetModelName;
            AssetModelProperties = assetModelProperties;
            Tags = tags;
        }
    }
}
