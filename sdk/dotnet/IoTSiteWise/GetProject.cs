// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTSiteWise
{
    public static class GetProject
    {
        /// <summary>
        /// Resource schema for AWS::IoTSiteWise::Project
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("aws-native:iotsitewise:getProject", args ?? new GetProjectArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::IoTSiteWise::Project
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetProjectResult>("aws-native:iotsitewise:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetProjectArgs()
        {
        }
    }

    public sealed class GetProjectInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetProjectInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// The IDs of the assets to be associated to the project.
        /// </summary>
        public readonly ImmutableArray<string> AssetIds;
        /// <summary>
        /// The ARN of the project.
        /// </summary>
        public readonly string? ProjectArn;
        /// <summary>
        /// A description for the project.
        /// </summary>
        public readonly string? ProjectDescription;
        /// <summary>
        /// The ID of the project.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// A friendly name for the project.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// A list of key-value pairs that contain metadata for the project.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProjectTag> Tags;

        [OutputConstructor]
        private GetProjectResult(
            ImmutableArray<string> assetIds,

            string? projectArn,

            string? projectDescription,

            string? projectId,

            string? projectName,

            ImmutableArray<Outputs.ProjectTag> tags)
        {
            AssetIds = assetIds;
            ProjectArn = projectArn;
            ProjectDescription = projectDescription;
            ProjectId = projectId;
            ProjectName = projectName;
            Tags = tags;
        }
    }
}
