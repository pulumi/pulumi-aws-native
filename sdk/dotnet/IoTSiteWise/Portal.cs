// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTSiteWise
{
    /// <summary>
    /// Resource schema for AWS::IoTSiteWise::Portal
    /// </summary>
    [AwsNativeResourceType("aws-native:iotsitewise:Portal")]
    public partial class Portal : Pulumi.CustomResource
    {
        /// <summary>
        /// Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range.
        /// </summary>
        [Output("alarms")]
        public Output<Outputs.AlarmsProperties?> Alarms { get; private set; } = null!;

        /// <summary>
        /// The email address that sends alarm notifications.
        /// </summary>
        [Output("notificationSenderEmail")]
        public Output<string?> NotificationSenderEmail { get; private set; } = null!;

        /// <summary>
        /// The ARN of the portal, which has the following format.
        /// </summary>
        [Output("portalArn")]
        public Output<string> PortalArn { get; private set; } = null!;

        /// <summary>
        /// The service to use to authenticate users to the portal. Choose from SSO or IAM. You can't change this value after you create a portal.
        /// </summary>
        [Output("portalAuthMode")]
        public Output<string?> PortalAuthMode { get; private set; } = null!;

        /// <summary>
        /// The AWS SSO application generated client ID (used with AWS SSO APIs).
        /// </summary>
        [Output("portalClientId")]
        public Output<string> PortalClientId { get; private set; } = null!;

        /// <summary>
        /// The AWS administrator's contact email address.
        /// </summary>
        [Output("portalContactEmail")]
        public Output<string> PortalContactEmail { get; private set; } = null!;

        /// <summary>
        /// A description for the portal.
        /// </summary>
        [Output("portalDescription")]
        public Output<string?> PortalDescription { get; private set; } = null!;

        /// <summary>
        /// The ID of the portal.
        /// </summary>
        [Output("portalId")]
        public Output<string> PortalId { get; private set; } = null!;

        /// <summary>
        /// A friendly name for the portal.
        /// </summary>
        [Output("portalName")]
        public Output<string> PortalName { get; private set; } = null!;

        /// <summary>
        /// The public root URL for the AWS IoT AWS IoT SiteWise Monitor application portal.
        /// </summary>
        [Output("portalStartUrl")]
        public Output<string> PortalStartUrl { get; private set; } = null!;

        /// <summary>
        /// The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// A list of key-value pairs that contain metadata for the portal.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.PortalTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Portal resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Portal(string name, PortalArgs args, CustomResourceOptions? options = null)
            : base("aws-native:iotsitewise:Portal", name, args ?? new PortalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Portal(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:iotsitewise:Portal", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Portal resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Portal Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Portal(name, id, options);
        }
    }

    public sealed class PortalArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range.
        /// </summary>
        [Input("alarms")]
        public Input<Inputs.AlarmsPropertiesArgs>? Alarms { get; set; }

        /// <summary>
        /// The email address that sends alarm notifications.
        /// </summary>
        [Input("notificationSenderEmail")]
        public Input<string>? NotificationSenderEmail { get; set; }

        /// <summary>
        /// The service to use to authenticate users to the portal. Choose from SSO or IAM. You can't change this value after you create a portal.
        /// </summary>
        [Input("portalAuthMode")]
        public Input<string>? PortalAuthMode { get; set; }

        /// <summary>
        /// The AWS administrator's contact email address.
        /// </summary>
        [Input("portalContactEmail", required: true)]
        public Input<string> PortalContactEmail { get; set; } = null!;

        /// <summary>
        /// A description for the portal.
        /// </summary>
        [Input("portalDescription")]
        public Input<string>? PortalDescription { get; set; }

        /// <summary>
        /// A friendly name for the portal.
        /// </summary>
        [Input("portalName")]
        public Input<string>? PortalName { get; set; }

        /// <summary>
        /// The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.PortalTagArgs>? _tags;

        /// <summary>
        /// A list of key-value pairs that contain metadata for the portal.
        /// </summary>
        public InputList<Inputs.PortalTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.PortalTagArgs>());
            set => _tags = value;
        }

        public PortalArgs()
        {
        }
    }
}
