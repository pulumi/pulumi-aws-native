// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodePipeline.Outputs
{

    /// <summary>
    /// Represents information about an action declaration.
    /// </summary>
    [OutputType]
    public sealed class PipelineActionDeclaration
    {
        /// <summary>
        /// Specifies the action type and the provider of the action.
        /// </summary>
        public readonly Outputs.PipelineActionTypeId ActionTypeId;
        /// <summary>
        /// The shell commands to run with your compute action in CodePipeline.
        /// </summary>
        public readonly ImmutableArray<string> Commands;
        /// <summary>
        /// The action's configuration. These are key-value pairs that specify input values for an action.
        /// </summary>
        public readonly object? Configuration;
        /// <summary>
        /// The name or ID of the artifact consumed by the action, such as a test or build artifact. While the field is not a required parameter, most actions have an action configuration that requires a specified quantity of input artifacts. To refer to the action configuration specification by action provider, see the [Action structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) in the *AWS CodePipeline User Guide* .
        /// 
        /// &gt; For a CodeBuild action with multiple input artifacts, one of your input sources must be designated the PrimarySource. For more information, see the [CodeBuild action reference page](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodeBuild.html) in the *AWS CodePipeline User Guide* .
        /// </summary>
        public readonly ImmutableArray<Outputs.PipelineInputArtifact> InputArtifacts;
        /// <summary>
        /// The action declaration's name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The variable namespace associated with the action. All variables produced as output by this action fall under this namespace.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// The name or ID of the result of the action declaration, such as a test or build artifact. While the field is not a required parameter, most actions have an action configuration that requires a specified quantity of output artifacts. To refer to the action configuration specification by action provider, see the [Action structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) in the *AWS CodePipeline User Guide* .
        /// </summary>
        public readonly ImmutableArray<Outputs.PipelineOutputArtifact> OutputArtifacts;
        /// <summary>
        /// The list of variables that are to be exported from the compute action.
        /// </summary>
        public readonly ImmutableArray<string> OutputVariables;
        /// <summary>
        /// The action declaration's AWS Region, such as us-east-1.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// The ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// The order in which actions are run.
        /// </summary>
        public readonly int? RunOrder;
        /// <summary>
        /// A timeout duration in minutes that can be applied against the ActionTypeâ€™s default timeout value specified in Quotas for AWS CodePipeline. This attribute is available only to the manual approval ActionType.
        /// </summary>
        public readonly int? TimeoutInMinutes;

        [OutputConstructor]
        private PipelineActionDeclaration(
            Outputs.PipelineActionTypeId actionTypeId,

            ImmutableArray<string> commands,

            object? configuration,

            ImmutableArray<Outputs.PipelineInputArtifact> inputArtifacts,

            string name,

            string? @namespace,

            ImmutableArray<Outputs.PipelineOutputArtifact> outputArtifacts,

            ImmutableArray<string> outputVariables,

            string? region,

            string? roleArn,

            int? runOrder,

            int? timeoutInMinutes)
        {
            ActionTypeId = actionTypeId;
            Commands = commands;
            Configuration = configuration;
            InputArtifacts = inputArtifacts;
            Name = name;
            Namespace = @namespace;
            OutputArtifacts = outputArtifacts;
            OutputVariables = outputVariables;
            Region = region;
            RoleArn = roleArn;
            RunOrder = runOrder;
            TimeoutInMinutes = timeoutInMinutes;
        }
    }
}
