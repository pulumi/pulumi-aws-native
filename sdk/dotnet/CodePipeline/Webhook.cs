// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodePipeline
{
    /// <summary>
    /// Resource Type definition for AWS::CodePipeline::Webhook
    /// </summary>
    [AwsNativeResourceType("aws-native:codepipeline:Webhook")]
    public partial class Webhook : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
        /// </summary>
        [Output("authentication")]
        public Output<Pulumi.AwsNative.CodePipeline.WebhookAuthentication> Authentication { get; private set; } = null!;

        /// <summary>
        /// Properties that configure the authentication applied to incoming webhook trigger requests
        /// </summary>
        [Output("authenticationConfiguration")]
        public Output<Outputs.WebhookAuthConfiguration> AuthenticationConfiguration { get; private set; } = null!;

        /// <summary>
        /// logical id of the webhook
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// A list of rules applied to the body/payload sent in the POST request to a webhook URL
        /// </summary>
        [Output("filters")]
        public Output<ImmutableArray<Outputs.WebhookFilterRule>> Filters { get; private set; } = null!;

        /// <summary>
        /// The name of the webhook
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Configures a connection between the webhook that was created and the external tool with events to be detected.
        /// </summary>
        [Output("registerWithThirdParty")]
        public Output<bool?> RegisterWithThirdParty { get; private set; } = null!;

        /// <summary>
        /// The name of the action in a pipeline you want to connect to the webhook.
        /// </summary>
        [Output("targetAction")]
        public Output<string> TargetAction { get; private set; } = null!;

        /// <summary>
        /// The name of the pipeline you want to connect to the webhook.
        /// </summary>
        [Output("targetPipeline")]
        public Output<string> TargetPipeline { get; private set; } = null!;

        /// <summary>
        /// The version number of the pipeline to be connected to the trigger request.
        /// </summary>
        [Output("targetPipelineVersion")]
        public Output<int?> TargetPipelineVersion { get; private set; } = null!;

        /// <summary>
        /// The webhook URL generated by AWS CodePipeline
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a Webhook resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Webhook(string name, WebhookArgs args, CustomResourceOptions? options = null)
            : base("aws-native:codepipeline:Webhook", name, args ?? new WebhookArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Webhook(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:codepipeline:Webhook", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Webhook resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Webhook Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Webhook(name, id, options);
        }
    }

    public sealed class WebhookArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
        /// </summary>
        [Input("authentication", required: true)]
        public Input<Pulumi.AwsNative.CodePipeline.WebhookAuthentication> Authentication { get; set; } = null!;

        /// <summary>
        /// Properties that configure the authentication applied to incoming webhook trigger requests
        /// </summary>
        [Input("authenticationConfiguration", required: true)]
        public Input<Inputs.WebhookAuthConfigurationArgs> AuthenticationConfiguration { get; set; } = null!;

        [Input("filters", required: true)]
        private InputList<Inputs.WebhookFilterRuleArgs>? _filters;

        /// <summary>
        /// A list of rules applied to the body/payload sent in the POST request to a webhook URL
        /// </summary>
        public InputList<Inputs.WebhookFilterRuleArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.WebhookFilterRuleArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the webhook
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configures a connection between the webhook that was created and the external tool with events to be detected.
        /// </summary>
        [Input("registerWithThirdParty")]
        public Input<bool>? RegisterWithThirdParty { get; set; }

        /// <summary>
        /// The name of the action in a pipeline you want to connect to the webhook.
        /// </summary>
        [Input("targetAction", required: true)]
        public Input<string> TargetAction { get; set; } = null!;

        /// <summary>
        /// The name of the pipeline you want to connect to the webhook.
        /// </summary>
        [Input("targetPipeline", required: true)]
        public Input<string> TargetPipeline { get; set; } = null!;

        /// <summary>
        /// The version number of the pipeline to be connected to the trigger request.
        /// </summary>
        [Input("targetPipelineVersion")]
        public Input<int>? TargetPipelineVersion { get; set; }

        public WebhookArgs()
        {
        }
        public static new WebhookArgs Empty => new WebhookArgs();
    }
}
