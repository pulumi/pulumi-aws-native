// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodePipeline
{
    /// <summary>
    /// The AWS::CodePipeline::Pipeline resource creates a CodePipeline pipeline that describes how software changes go through a release process.
    /// </summary>
    [AwsNativeResourceType("aws-native:codepipeline:Pipeline")]
    public partial class Pipeline : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The S3 bucket where artifacts for the pipeline are stored.
        /// </summary>
        [Output("artifactStore")]
        public Output<Outputs.PipelineArtifactStore?> ArtifactStore { get; private set; } = null!;

        /// <summary>
        /// A mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.
        /// </summary>
        [Output("artifactStores")]
        public Output<ImmutableArray<Outputs.PipelineArtifactStoreMap>> ArtifactStores { get; private set; } = null!;

        /// <summary>
        /// Represents the input of a DisableStageTransition action.
        /// </summary>
        [Output("disableInboundStageTransitions")]
        public Output<ImmutableArray<Outputs.PipelineStageTransition>> DisableInboundStageTransitions { get; private set; } = null!;

        /// <summary>
        /// The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED.
        /// </summary>
        [Output("executionMode")]
        public Output<Pulumi.AwsNative.CodePipeline.PipelineExecutionMode?> ExecutionMode { get; private set; } = null!;

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// CodePipeline provides the following pipeline types, which differ in characteristics and price, so that you can tailor your pipeline features and cost to the needs of your applications.
        /// </summary>
        [Output("pipelineType")]
        public Output<Pulumi.AwsNative.CodePipeline.PipelineType?> PipelineType { get; private set; } = null!;

        /// <summary>
        /// Indicates whether to rerun the CodePipeline pipeline after you update it.
        /// </summary>
        [Output("restartExecutionOnUpdate")]
        public Output<bool?> RestartExecutionOnUpdate { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) for CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// Represents information about a stage and its definition.
        /// </summary>
        [Output("stages")]
        public Output<ImmutableArray<Outputs.PipelineStageDeclaration>> Stages { get; private set; } = null!;

        /// <summary>
        /// Specifies the tags applied to the pipeline.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The trigger configuration specifying a type of event, such as Git tags, that starts the pipeline.
        /// </summary>
        [Output("triggers")]
        public Output<ImmutableArray<Outputs.PipelineTriggerDeclaration>> Triggers { get; private set; } = null!;

        /// <summary>
        /// A list that defines the pipeline variables for a pipeline resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9@\-_]+.
        /// </summary>
        [Output("variables")]
        public Output<ImmutableArray<Outputs.PipelineVariableDeclaration>> Variables { get; private set; } = null!;

        /// <summary>
        /// The version of the pipeline.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Pipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Pipeline(string name, PipelineArgs args, CustomResourceOptions? options = null)
            : base("aws-native:codepipeline:Pipeline", name, args ?? new PipelineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Pipeline(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:codepipeline:Pipeline", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Pipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Pipeline Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Pipeline(name, id, options);
        }
    }

    public sealed class PipelineArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The S3 bucket where artifacts for the pipeline are stored.
        /// </summary>
        [Input("artifactStore")]
        public Input<Inputs.PipelineArtifactStoreArgs>? ArtifactStore { get; set; }

        [Input("artifactStores")]
        private InputList<Inputs.PipelineArtifactStoreMapArgs>? _artifactStores;

        /// <summary>
        /// A mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.
        /// </summary>
        public InputList<Inputs.PipelineArtifactStoreMapArgs> ArtifactStores
        {
            get => _artifactStores ?? (_artifactStores = new InputList<Inputs.PipelineArtifactStoreMapArgs>());
            set => _artifactStores = value;
        }

        [Input("disableInboundStageTransitions")]
        private InputList<Inputs.PipelineStageTransitionArgs>? _disableInboundStageTransitions;

        /// <summary>
        /// Represents the input of a DisableStageTransition action.
        /// </summary>
        public InputList<Inputs.PipelineStageTransitionArgs> DisableInboundStageTransitions
        {
            get => _disableInboundStageTransitions ?? (_disableInboundStageTransitions = new InputList<Inputs.PipelineStageTransitionArgs>());
            set => _disableInboundStageTransitions = value;
        }

        /// <summary>
        /// The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED.
        /// </summary>
        [Input("executionMode")]
        public Input<Pulumi.AwsNative.CodePipeline.PipelineExecutionMode>? ExecutionMode { get; set; }

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// CodePipeline provides the following pipeline types, which differ in characteristics and price, so that you can tailor your pipeline features and cost to the needs of your applications.
        /// </summary>
        [Input("pipelineType")]
        public Input<Pulumi.AwsNative.CodePipeline.PipelineType>? PipelineType { get; set; }

        /// <summary>
        /// Indicates whether to rerun the CodePipeline pipeline after you update it.
        /// </summary>
        [Input("restartExecutionOnUpdate")]
        public Input<bool>? RestartExecutionOnUpdate { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) for CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("stages", required: true)]
        private InputList<Inputs.PipelineStageDeclarationArgs>? _stages;

        /// <summary>
        /// Represents information about a stage and its definition.
        /// </summary>
        public InputList<Inputs.PipelineStageDeclarationArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.PipelineStageDeclarationArgs>());
            set => _stages = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Specifies the tags applied to the pipeline.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        [Input("triggers")]
        private InputList<Inputs.PipelineTriggerDeclarationArgs>? _triggers;

        /// <summary>
        /// The trigger configuration specifying a type of event, such as Git tags, that starts the pipeline.
        /// </summary>
        public InputList<Inputs.PipelineTriggerDeclarationArgs> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<Inputs.PipelineTriggerDeclarationArgs>());
            set => _triggers = value;
        }

        [Input("variables")]
        private InputList<Inputs.PipelineVariableDeclarationArgs>? _variables;

        /// <summary>
        /// A list that defines the pipeline variables for a pipeline resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9@\-_]+.
        /// </summary>
        public InputList<Inputs.PipelineVariableDeclarationArgs> Variables
        {
            get => _variables ?? (_variables = new InputList<Inputs.PipelineVariableDeclarationArgs>());
            set => _variables = value;
        }

        public PipelineArgs()
        {
        }
        public static new PipelineArgs Empty => new PipelineArgs();
    }
}
