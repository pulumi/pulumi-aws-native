// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodePipeline.Inputs
{

    /// <summary>
    /// A type of trigger configuration for Git-based source actions.
    /// </summary>
    public sealed class PipelineGitConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("pullRequest")]
        private InputList<Inputs.PipelineGitPullRequestFilterArgs>? _pullRequest;

        /// <summary>
        /// The field where the repository event that will start the pipeline is specified as pull requests.
        /// </summary>
        public InputList<Inputs.PipelineGitPullRequestFilterArgs> PullRequest
        {
            get => _pullRequest ?? (_pullRequest = new InputList<Inputs.PipelineGitPullRequestFilterArgs>());
            set => _pullRequest = value;
        }

        [Input("push")]
        private InputList<Inputs.PipelineGitPushFilterArgs>? _push;

        /// <summary>
        /// The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details.
        /// </summary>
        public InputList<Inputs.PipelineGitPushFilterArgs> Push
        {
            get => _push ?? (_push = new InputList<Inputs.PipelineGitPushFilterArgs>());
            set => _push = value;
        }

        /// <summary>
        /// The name of the pipeline source action where the trigger configuration, such as Git tags, is specified. The trigger configuration will start the pipeline upon the specified change only.
        /// </summary>
        [Input("sourceActionName", required: true)]
        public Input<string> SourceActionName { get; set; } = null!;

        public PipelineGitConfigurationArgs()
        {
        }
        public static new PipelineGitConfigurationArgs Empty => new PipelineGitConfigurationArgs();
    }
}
