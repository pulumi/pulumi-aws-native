// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodePipeline.Inputs
{

    /// <summary>
    /// Represents information about an action declaration.
    /// </summary>
    public sealed class PipelineActionDeclarationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the action type and the provider of the action.
        /// </summary>
        [Input("actionTypeId", required: true)]
        public Input<Inputs.PipelineActionTypeIdArgs> ActionTypeId { get; set; } = null!;

        [Input("commands")]
        private InputList<string>? _commands;

        /// <summary>
        /// The shell commands to run with your compute action in CodePipeline.
        /// </summary>
        public InputList<string> Commands
        {
            get => _commands ?? (_commands = new InputList<string>());
            set => _commands = value;
        }

        /// <summary>
        /// The action's configuration. These are key-value pairs that specify input values for an action.
        /// </summary>
        [Input("configuration")]
        public Input<object>? Configuration { get; set; }

        [Input("inputArtifacts")]
        private InputList<Inputs.PipelineInputArtifactArgs>? _inputArtifacts;

        /// <summary>
        /// The name or ID of the artifact consumed by the action, such as a test or build artifact. While the field is not a required parameter, most actions have an action configuration that requires a specified quantity of input artifacts. To refer to the action configuration specification by action provider, see the [Action structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) in the *AWS CodePipeline User Guide* .
        /// 
        /// &gt; For a CodeBuild action with multiple input artifacts, one of your input sources must be designated the PrimarySource. For more information, see the [CodeBuild action reference page](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodeBuild.html) in the *AWS CodePipeline User Guide* .
        /// </summary>
        public InputList<Inputs.PipelineInputArtifactArgs> InputArtifacts
        {
            get => _inputArtifacts ?? (_inputArtifacts = new InputList<Inputs.PipelineInputArtifactArgs>());
            set => _inputArtifacts = value;
        }

        /// <summary>
        /// The action declaration's name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The variable namespace associated with the action. All variables produced as output by this action fall under this namespace.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("outputArtifacts")]
        private InputList<Inputs.PipelineOutputArtifactArgs>? _outputArtifacts;

        /// <summary>
        /// The name or ID of the result of the action declaration, such as a test or build artifact. While the field is not a required parameter, most actions have an action configuration that requires a specified quantity of output artifacts. To refer to the action configuration specification by action provider, see the [Action structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) in the *AWS CodePipeline User Guide* .
        /// </summary>
        public InputList<Inputs.PipelineOutputArtifactArgs> OutputArtifacts
        {
            get => _outputArtifacts ?? (_outputArtifacts = new InputList<Inputs.PipelineOutputArtifactArgs>());
            set => _outputArtifacts = value;
        }

        [Input("outputVariables")]
        private InputList<string>? _outputVariables;

        /// <summary>
        /// The list of variables that are to be exported from the compute action.
        /// </summary>
        public InputList<string> OutputVariables
        {
            get => _outputVariables ?? (_outputVariables = new InputList<string>());
            set => _outputVariables = value;
        }

        /// <summary>
        /// The action declaration's AWS Region, such as us-east-1.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// The order in which actions are run.
        /// </summary>
        [Input("runOrder")]
        public Input<int>? RunOrder { get; set; }

        /// <summary>
        /// A timeout duration in minutes that can be applied against the ActionTypeâ€™s default timeout value specified in Quotas for AWS CodePipeline. This attribute is available only to the manual approval ActionType.
        /// </summary>
        [Input("timeoutInMinutes")]
        public Input<int>? TimeoutInMinutes { get; set; }

        public PipelineActionDeclarationArgs()
        {
        }
        public static new PipelineActionDeclarationArgs Empty => new PipelineActionDeclarationArgs();
    }
}
