// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodeDeploy.Outputs
{

    [OutputType]
    public sealed class DeploymentConfigMinimumHealthyHosts
    {
        /// <summary>
        /// The minimum healthy instance type:
        /// 
        /// - HOST_COUNT: The minimum number of healthy instance as an absolute value.
        /// - FLEET_PERCENT: The minimum number of healthy instance as a percentage of the total number of instance in the deployment.
        /// 
        /// In an example of nine instance, if a HOST_COUNT of six is specified, deploy to up to three instances at a time. The deployment is successful if six or more instances are deployed to successfully. Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is specified, deploy to up to five instance at a time. The deployment is successful if four or more instance are deployed to successfully. Otherwise, the deployment fails.
        /// 
        /// &gt; In a call to `GetDeploymentConfig` , CodeDeployDefault.OneAtATime returns a minimum healthy instance type of MOST_CONCURRENCY and a value of 1. This means a deployment to only one instance at a time. (You cannot set the type to MOST_CONCURRENCY, only to HOST_COUNT or FLEET_PERCENT.) In addition, with CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that all instances but one are kept in a healthy state during the deployment. Although this allows one instance at a time to be taken offline for a new deployment, it also means that if the deployment to the last instance fails, the overall deployment is still successful. 
        /// 
        /// For more information, see [AWS CodeDeploy Instance Health](https://docs.aws.amazon.com//codedeploy/latest/userguide/instances-health.html) in the *AWS CodeDeploy User Guide* .
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The minimum healthy instance value.
        /// </summary>
        public readonly int Value;

        [OutputConstructor]
        private DeploymentConfigMinimumHealthyHosts(
            string type,

            int value)
        {
            Type = type;
            Value = value;
        }
    }
}
