// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodeDeploy
{
    public static class GetDeploymentGroup
    {
        /// <summary>
        /// Resource Type definition for AWS::CodeDeploy::DeploymentGroup
        /// </summary>
        public static Task<GetDeploymentGroupResult> InvokeAsync(GetDeploymentGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentGroupResult>("aws-native:codedeploy:getDeploymentGroup", args ?? new GetDeploymentGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::CodeDeploy::DeploymentGroup
        /// </summary>
        public static Output<GetDeploymentGroupResult> Invoke(GetDeploymentGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDeploymentGroupResult>("aws-native:codedeploy:getDeploymentGroup", args ?? new GetDeploymentGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentGroupArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDeploymentGroupArgs()
        {
        }
    }

    public sealed class GetDeploymentGroupInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDeploymentGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDeploymentGroupResult
    {
        public readonly Outputs.DeploymentGroupAlarmConfiguration? AlarmConfiguration;
        public readonly Outputs.DeploymentGroupAutoRollbackConfiguration? AutoRollbackConfiguration;
        public readonly ImmutableArray<string> AutoScalingGroups;
        public readonly Outputs.DeploymentGroupBlueGreenDeploymentConfiguration? BlueGreenDeploymentConfiguration;
        public readonly Outputs.DeploymentGroupDeployment? Deployment;
        public readonly string? DeploymentConfigName;
        public readonly Outputs.DeploymentGroupDeploymentStyle? DeploymentStyle;
        public readonly ImmutableArray<Outputs.DeploymentGroupECSService> ECSServices;
        public readonly ImmutableArray<Outputs.DeploymentGroupEC2TagFilter> Ec2TagFilters;
        public readonly Outputs.DeploymentGroupEC2TagSet? Ec2TagSet;
        public readonly string? Id;
        public readonly Outputs.DeploymentGroupLoadBalancerInfo? LoadBalancerInfo;
        public readonly ImmutableArray<Outputs.DeploymentGroupTagFilter> OnPremisesInstanceTagFilters;
        public readonly Outputs.DeploymentGroupOnPremisesTagSet? OnPremisesTagSet;
        public readonly string? ServiceRoleArn;
        public readonly ImmutableArray<Outputs.DeploymentGroupTriggerConfig> TriggerConfigurations;

        [OutputConstructor]
        private GetDeploymentGroupResult(
            Outputs.DeploymentGroupAlarmConfiguration? alarmConfiguration,

            Outputs.DeploymentGroupAutoRollbackConfiguration? autoRollbackConfiguration,

            ImmutableArray<string> autoScalingGroups,

            Outputs.DeploymentGroupBlueGreenDeploymentConfiguration? blueGreenDeploymentConfiguration,

            Outputs.DeploymentGroupDeployment? deployment,

            string? deploymentConfigName,

            Outputs.DeploymentGroupDeploymentStyle? deploymentStyle,

            ImmutableArray<Outputs.DeploymentGroupECSService> eCSServices,

            ImmutableArray<Outputs.DeploymentGroupEC2TagFilter> ec2TagFilters,

            Outputs.DeploymentGroupEC2TagSet? ec2TagSet,

            string? id,

            Outputs.DeploymentGroupLoadBalancerInfo? loadBalancerInfo,

            ImmutableArray<Outputs.DeploymentGroupTagFilter> onPremisesInstanceTagFilters,

            Outputs.DeploymentGroupOnPremisesTagSet? onPremisesTagSet,

            string? serviceRoleArn,

            ImmutableArray<Outputs.DeploymentGroupTriggerConfig> triggerConfigurations)
        {
            AlarmConfiguration = alarmConfiguration;
            AutoRollbackConfiguration = autoRollbackConfiguration;
            AutoScalingGroups = autoScalingGroups;
            BlueGreenDeploymentConfiguration = blueGreenDeploymentConfiguration;
            Deployment = deployment;
            DeploymentConfigName = deploymentConfigName;
            DeploymentStyle = deploymentStyle;
            ECSServices = eCSServices;
            Ec2TagFilters = ec2TagFilters;
            Ec2TagSet = ec2TagSet;
            Id = id;
            LoadBalancerInfo = loadBalancerInfo;
            OnPremisesInstanceTagFilters = onPremisesInstanceTagFilters;
            OnPremisesTagSet = onPremisesTagSet;
            ServiceRoleArn = serviceRoleArn;
            TriggerConfigurations = triggerConfigurations;
        }
    }
}
