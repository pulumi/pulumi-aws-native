// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.SsmGuiConnect
{
    [EnumType]
    public readonly struct PreferencesIdleConnectionAlertType : IEquatable<PreferencesIdleConnectionAlertType>
    {
        private readonly string _value;

        private PreferencesIdleConnectionAlertType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static PreferencesIdleConnectionAlertType Minutes { get; } = new PreferencesIdleConnectionAlertType("MINUTES");

        public static bool operator ==(PreferencesIdleConnectionAlertType left, PreferencesIdleConnectionAlertType right) => left.Equals(right);
        public static bool operator !=(PreferencesIdleConnectionAlertType left, PreferencesIdleConnectionAlertType right) => !left.Equals(right);

        public static explicit operator string(PreferencesIdleConnectionAlertType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is PreferencesIdleConnectionAlertType other && Equals(other);
        public bool Equals(PreferencesIdleConnectionAlertType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct PreferencesIdleConnectionTimeoutType : IEquatable<PreferencesIdleConnectionTimeoutType>
    {
        private readonly string _value;

        private PreferencesIdleConnectionTimeoutType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static PreferencesIdleConnectionTimeoutType Minutes { get; } = new PreferencesIdleConnectionTimeoutType("MINUTES");

        public static bool operator ==(PreferencesIdleConnectionTimeoutType left, PreferencesIdleConnectionTimeoutType right) => left.Equals(right);
        public static bool operator !=(PreferencesIdleConnectionTimeoutType left, PreferencesIdleConnectionTimeoutType right) => !left.Equals(right);

        public static explicit operator string(PreferencesIdleConnectionTimeoutType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is PreferencesIdleConnectionTimeoutType other && Equals(other);
        public bool Equals(PreferencesIdleConnectionTimeoutType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
