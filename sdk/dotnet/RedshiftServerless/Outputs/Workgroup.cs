// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RedshiftServerless.Outputs
{

    [OutputType]
    public sealed class Workgroup
    {
        public readonly int? BaseCapacity;
        public readonly ImmutableArray<Outputs.WorkgroupConfigParameter> ConfigParameters;
        public readonly string? CreationDate;
        public readonly Outputs.WorkgroupEndpoint? Endpoint;
        public readonly bool? EnhancedVpcRouting;
        public readonly string? NamespaceName;
        public readonly bool? PubliclyAccessible;
        public readonly ImmutableArray<string> SecurityGroupIds;
        public readonly Pulumi.AwsNative.RedshiftServerless.WorkgroupStatus? Status;
        public readonly ImmutableArray<string> SubnetIds;
        public readonly string? WorkgroupArn;
        public readonly string? WorkgroupId;
        public readonly string? WorkgroupName;

        [OutputConstructor]
        private Workgroup(
            int? baseCapacity,

            ImmutableArray<Outputs.WorkgroupConfigParameter> configParameters,

            string? creationDate,

            Outputs.WorkgroupEndpoint? endpoint,

            bool? enhancedVpcRouting,

            string? namespaceName,

            bool? publiclyAccessible,

            ImmutableArray<string> securityGroupIds,

            Pulumi.AwsNative.RedshiftServerless.WorkgroupStatus? status,

            ImmutableArray<string> subnetIds,

            string? workgroupArn,

            string? workgroupId,

            string? workgroupName)
        {
            BaseCapacity = baseCapacity;
            ConfigParameters = configParameters;
            CreationDate = creationDate;
            Endpoint = endpoint;
            EnhancedVpcRouting = enhancedVpcRouting;
            NamespaceName = namespaceName;
            PubliclyAccessible = publiclyAccessible;
            SecurityGroupIds = securityGroupIds;
            Status = status;
            SubnetIds = subnetIds;
            WorkgroupArn = workgroupArn;
            WorkgroupId = workgroupId;
            WorkgroupName = workgroupName;
        }
    }
}
