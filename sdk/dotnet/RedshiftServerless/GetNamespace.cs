// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RedshiftServerless
{
    public static class GetNamespace
    {
        /// <summary>
        /// Definition of AWS::RedshiftServerless::Namespace Resource Type
        /// </summary>
        public static Task<GetNamespaceResult> InvokeAsync(GetNamespaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceResult>("aws-native:redshiftserverless:getNamespace", args ?? new GetNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::RedshiftServerless::Namespace Resource Type
        /// </summary>
        public static Output<GetNamespaceResult> Invoke(GetNamespaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceResult>("aws-native:redshiftserverless:getNamespace", args ?? new GetNamespaceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::RedshiftServerless::Namespace Resource Type
        /// </summary>
        public static Output<GetNamespaceResult> Invoke(GetNamespaceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceResult>("aws-native:redshiftserverless:getNamespace", args ?? new GetNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.
        /// </summary>
        [Input("namespaceName", required: true)]
        public string NamespaceName { get; set; } = null!;

        public GetNamespaceArgs()
        {
        }
        public static new GetNamespaceArgs Empty => new GetNamespaceArgs();
    }

    public sealed class GetNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        public GetNamespaceInvokeArgs()
        {
        }
        public static new GetNamespaceInvokeArgs Empty => new GetNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceResult
    {
        /// <summary>
        /// The ID of the AWS Key Management Service (KMS) key used to encrypt and store the namespace's admin credentials secret. You can only use this parameter if manageAdminPassword is true.
        /// </summary>
        public readonly string? AdminPasswordSecretKmsKeyId;
        /// <summary>
        /// The user name associated with the admin user for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
        /// </summary>
        public readonly string? AdminUsername;
        /// <summary>
        /// The database name associated for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
        /// </summary>
        public readonly string? DbName;
        /// <summary>
        /// The default IAM role ARN for the namespace that is being created.
        /// </summary>
        public readonly string? DefaultIamRoleArn;
        /// <summary>
        /// A list of AWS Identity and Access Management (IAM) roles that can be used by the namespace to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. The Default role limit for each request is 10.
        /// </summary>
        public readonly ImmutableArray<string> IamRoles;
        /// <summary>
        /// The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the namespace.
        /// </summary>
        public readonly string? KmsKeyId;
        /// <summary>
        /// The collection of log types to be exported provided by the customer. Should only be one of the three supported log types: userlog, useractivitylog and connectionlog
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.RedshiftServerless.NamespaceLogExport> LogExports;
        /// <summary>
        /// Definition of Namespace resource.
        /// </summary>
        public readonly Outputs.Namespace? NamespaceValue;
        /// <summary>
        /// The resource policy document that will be attached to the namespace.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::RedshiftServerless::Namespace` for more information about the expected schema for this property.
        /// </summary>
        public readonly object? NamespaceResourcePolicy;
        /// <summary>
        /// The snapshot copy configurations for the namespace.
        /// </summary>
        public readonly ImmutableArray<Outputs.NamespaceSnapshotCopyConfiguration> SnapshotCopyConfigurations;

        [OutputConstructor]
        private GetNamespaceResult(
            string? adminPasswordSecretKmsKeyId,

            string? adminUsername,

            string? dbName,

            string? defaultIamRoleArn,

            ImmutableArray<string> iamRoles,

            string? kmsKeyId,

            ImmutableArray<Pulumi.AwsNative.RedshiftServerless.NamespaceLogExport> logExports,

            Outputs.Namespace? @namespace,

            object? namespaceResourcePolicy,

            ImmutableArray<Outputs.NamespaceSnapshotCopyConfiguration> snapshotCopyConfigurations)
        {
            AdminPasswordSecretKmsKeyId = adminPasswordSecretKmsKeyId;
            AdminUsername = adminUsername;
            DbName = dbName;
            DefaultIamRoleArn = defaultIamRoleArn;
            IamRoles = iamRoles;
            KmsKeyId = kmsKeyId;
            LogExports = logExports;
            NamespaceValue = @namespace;
            NamespaceResourcePolicy = namespaceResourcePolicy;
            SnapshotCopyConfigurations = snapshotCopyConfigurations;
        }
    }
}
