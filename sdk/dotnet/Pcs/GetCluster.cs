// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pcs
{
    public static class GetCluster
    {
        /// <summary>
        /// AWS::PCS::Cluster resource creates an AWS PCS cluster.
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("aws-native:pcs:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// AWS::PCS::Cluster resource creates an AWS PCS cluster.
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws-native:pcs:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// AWS::PCS::Cluster resource creates an AWS PCS cluster.
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws-native:pcs:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique Amazon Resource Name (ARN) of the cluster.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetClusterArgs()
        {
        }
        public static new GetClusterArgs Empty => new GetClusterArgs();
    }

    public sealed class GetClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique Amazon Resource Name (ARN) of the cluster.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetClusterInvokeArgs()
        {
        }
        public static new GetClusterInvokeArgs Empty => new GetClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The unique Amazon Resource Name (ARN) of the cluster.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The list of endpoints available for interaction with the scheduler.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterEndpoint> Endpoints;
        /// <summary>
        /// The list of errors that occurred during cluster provisioning.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterErrorInfo> ErrorInfo;
        /// <summary>
        /// The generated unique ID of the cluster.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The provisioning status of the cluster. The provisioning status doesn't indicate the overall health of the cluster.
        /// </summary>
        public readonly Pulumi.AwsNative.Pcs.ClusterStatus? Status;
        /// <summary>
        /// 1 or more tags added to the resource. Each tag consists of a tag key and tag value. The tag value is optional and can be an empty string.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetClusterResult(
            string? arn,

            ImmutableArray<Outputs.ClusterEndpoint> endpoints,

            ImmutableArray<Outputs.ClusterErrorInfo> errorInfo,

            string? id,

            Pulumi.AwsNative.Pcs.ClusterStatus? status,

            ImmutableDictionary<string, string>? tags)
        {
            Arn = arn;
            Endpoints = endpoints;
            ErrorInfo = errorInfo;
            Id = id;
            Status = status;
            Tags = tags;
        }
    }
}
