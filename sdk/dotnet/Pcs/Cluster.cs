// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pcs
{
    /// <summary>
    /// AWS::PCS::Cluster resource creates an AWS PCS cluster.
    /// </summary>
    [AwsNativeResourceType("aws-native:pcs:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The unique Amazon Resource Name (ARN) of the cluster.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The generated unique ID of the cluster.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// The list of endpoints available for interaction with the scheduler.
        /// </summary>
        [Output("endpoints")]
        public Output<ImmutableArray<Outputs.ClusterEndpoint>> Endpoints { get; private set; } = null!;

        /// <summary>
        /// The list of errors that occurred during cluster provisioning.
        /// </summary>
        [Output("errorInfo")]
        public Output<ImmutableArray<Outputs.ClusterErrorInfo>> ErrorInfo { get; private set; } = null!;

        /// <summary>
        /// The name that identifies the cluster.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The networking configuration for the cluster's control plane.
        /// </summary>
        [Output("networking")]
        public Output<Outputs.NetworkingProperties> Networking { get; private set; } = null!;

        /// <summary>
        /// The cluster management and job scheduling software associated with the cluster.
        /// </summary>
        [Output("scheduler")]
        public Output<Outputs.SchedulerProperties> Scheduler { get; private set; } = null!;

        /// <summary>
        /// The size of the cluster.
        /// </summary>
        [Output("size")]
        public Output<Pulumi.AwsNative.Pcs.ClusterSize> Size { get; private set; } = null!;

        /// <summary>
        /// Additional options related to the Slurm scheduler.
        /// </summary>
        [Output("slurmConfiguration")]
        public Output<Outputs.SlurmConfigurationProperties?> SlurmConfiguration { get; private set; } = null!;

        /// <summary>
        /// The provisioning status of the cluster. The provisioning status doesn't indicate the overall health of the cluster.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Pcs.ClusterStatus> Status { get; private set; } = null!;

        /// <summary>
        /// 1 or more tags added to the resource. Each tag consists of a tag key and tag value. The tag value is optional and can be an empty string.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("aws-native:pcs:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:pcs:Cluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                    "networking",
                    "scheduler",
                    "size",
                    "slurmConfiguration",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name that identifies the cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The networking configuration for the cluster's control plane.
        /// </summary>
        [Input("networking", required: true)]
        public Input<Inputs.NetworkingPropertiesArgs> Networking { get; set; } = null!;

        /// <summary>
        /// The cluster management and job scheduling software associated with the cluster.
        /// </summary>
        [Input("scheduler", required: true)]
        public Input<Inputs.SchedulerPropertiesArgs> Scheduler { get; set; } = null!;

        /// <summary>
        /// The size of the cluster.
        /// </summary>
        [Input("size", required: true)]
        public Input<Pulumi.AwsNative.Pcs.ClusterSize> Size { get; set; } = null!;

        /// <summary>
        /// Additional options related to the Slurm scheduler.
        /// </summary>
        [Input("slurmConfiguration")]
        public Input<Inputs.SlurmConfigurationPropertiesArgs>? SlurmConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// 1 or more tags added to the resource. Each tag consists of a tag key and tag value. The tag value is optional and can be an empty string.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }
}
