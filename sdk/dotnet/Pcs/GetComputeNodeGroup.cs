// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pcs
{
    public static class GetComputeNodeGroup
    {
        /// <summary>
        /// AWS::PCS::ComputeNodeGroup resource creates an AWS PCS compute node group.
        /// </summary>
        public static Task<GetComputeNodeGroupResult> InvokeAsync(GetComputeNodeGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeNodeGroupResult>("aws-native:pcs:getComputeNodeGroup", args ?? new GetComputeNodeGroupArgs(), options.WithDefaults());

        /// <summary>
        /// AWS::PCS::ComputeNodeGroup resource creates an AWS PCS compute node group.
        /// </summary>
        public static Output<GetComputeNodeGroupResult> Invoke(GetComputeNodeGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeNodeGroupResult>("aws-native:pcs:getComputeNodeGroup", args ?? new GetComputeNodeGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// AWS::PCS::ComputeNodeGroup resource creates an AWS PCS compute node group.
        /// </summary>
        public static Output<GetComputeNodeGroupResult> Invoke(GetComputeNodeGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeNodeGroupResult>("aws-native:pcs:getComputeNodeGroup", args ?? new GetComputeNodeGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeNodeGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique Amazon Resource Name (ARN) of the compute node group.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetComputeNodeGroupArgs()
        {
        }
        public static new GetComputeNodeGroupArgs Empty => new GetComputeNodeGroupArgs();
    }

    public sealed class GetComputeNodeGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique Amazon Resource Name (ARN) of the compute node group.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetComputeNodeGroupInvokeArgs()
        {
        }
        public static new GetComputeNodeGroupInvokeArgs Empty => new GetComputeNodeGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeNodeGroupResult
    {
        /// <summary>
        /// The ID of the Amazon Machine Image (AMI) that AWS PCS uses to launch instances. If not provided, AWS PCS uses the AMI ID specified in the custom launch template.
        /// </summary>
        public readonly string? AmiId;
        /// <summary>
        /// The unique Amazon Resource Name (ARN) of the compute node group.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// An Amazon EC2 launch template AWS PCS uses to launch compute nodes.
        /// </summary>
        public readonly Outputs.CustomLaunchTemplateProperties? CustomLaunchTemplate;
        /// <summary>
        /// The list of errors that occurred during compute node group provisioning.
        /// </summary>
        public readonly ImmutableArray<Outputs.ComputeNodeGroupErrorInfo> ErrorInfo;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM instance profile used to pass an IAM role when launching EC2 instances. The role contained in your instance profile must have pcs:RegisterComputeNodeGroupInstance permissions attached to provision instances correctly.
        /// </summary>
        public readonly string? IamInstanceProfileArn;
        /// <summary>
        /// The generated unique ID of the compute node group.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Specifies how EC2 instances are purchased on your behalf. AWS PCS supports On-Demand, Spot and Capacity Block instances. For more information, see Instance purchasing options in the Amazon Elastic Compute Cloud User Guide. If you don't provide this option, it defaults to On-Demand.
        /// </summary>
        public readonly Pulumi.AwsNative.Pcs.ComputeNodeGroupPurchaseOption? PurchaseOption;
        /// <summary>
        /// Specifies the boundaries of the compute node group auto scaling.
        /// </summary>
        public readonly Outputs.ScalingConfigurationProperties? ScalingConfiguration;
        /// <summary>
        /// Additional options related to the Slurm scheduler.
        /// </summary>
        public readonly Outputs.SlurmConfigurationProperties? SlurmConfiguration;
        /// <summary>
        /// Additional configuration when you specify SPOT as the purchase option.
        /// </summary>
        public readonly Outputs.SpotOptionsProperties? SpotOptions;
        /// <summary>
        /// The provisioning status of the compute node group. The provisioning status doesn't indicate the overall health of the compute node group.
        /// </summary>
        public readonly Pulumi.AwsNative.Pcs.ComputeNodeGroupStatus? Status;
        /// <summary>
        /// The list of subnet IDs where instances are provisioned by the compute node group. The subnets must be in the same VPC as the cluster.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// 1 or more tags added to the resource. Each tag consists of a tag key and tag value. The tag value is optional and can be an empty string.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetComputeNodeGroupResult(
            string? amiId,

            string? arn,

            Outputs.CustomLaunchTemplateProperties? customLaunchTemplate,

            ImmutableArray<Outputs.ComputeNodeGroupErrorInfo> errorInfo,

            string? iamInstanceProfileArn,

            string? id,

            Pulumi.AwsNative.Pcs.ComputeNodeGroupPurchaseOption? purchaseOption,

            Outputs.ScalingConfigurationProperties? scalingConfiguration,

            Outputs.SlurmConfigurationProperties? slurmConfiguration,

            Outputs.SpotOptionsProperties? spotOptions,

            Pulumi.AwsNative.Pcs.ComputeNodeGroupStatus? status,

            ImmutableArray<string> subnetIds,

            ImmutableDictionary<string, string>? tags)
        {
            AmiId = amiId;
            Arn = arn;
            CustomLaunchTemplate = customLaunchTemplate;
            ErrorInfo = errorInfo;
            IamInstanceProfileArn = iamInstanceProfileArn;
            Id = id;
            PurchaseOption = purchaseOption;
            ScalingConfiguration = scalingConfiguration;
            SlurmConfiguration = slurmConfiguration;
            SpotOptions = spotOptions;
            Status = status;
            SubnetIds = subnetIds;
            Tags = tags;
        }
    }
}
