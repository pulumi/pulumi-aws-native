// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodeStarConnections
{
    public static class GetSyncConfiguration
    {
        /// <summary>
        /// Schema for AWS::CodeStarConnections::SyncConfiguration resource which is used to enables an AWS resource to be synchronized from a source-provider.
        /// </summary>
        public static Task<GetSyncConfigurationResult> InvokeAsync(GetSyncConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSyncConfigurationResult>("aws-native:codestarconnections:getSyncConfiguration", args ?? new GetSyncConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Schema for AWS::CodeStarConnections::SyncConfiguration resource which is used to enables an AWS resource to be synchronized from a source-provider.
        /// </summary>
        public static Output<GetSyncConfigurationResult> Invoke(GetSyncConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSyncConfigurationResult>("aws-native:codestarconnections:getSyncConfiguration", args ?? new GetSyncConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSyncConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource that is being synchronized to the repository.
        /// </summary>
        [Input("resourceName", required: true)]
        public string ResourceName { get; set; } = null!;

        /// <summary>
        /// The type of resource synchronization service that is to be configured, for example, CFN_STACK_SYNC.
        /// </summary>
        [Input("syncType", required: true)]
        public string SyncType { get; set; } = null!;

        public GetSyncConfigurationArgs()
        {
        }
        public static new GetSyncConfigurationArgs Empty => new GetSyncConfigurationArgs();
    }

    public sealed class GetSyncConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource that is being synchronized to the repository.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// The type of resource synchronization service that is to be configured, for example, CFN_STACK_SYNC.
        /// </summary>
        [Input("syncType", required: true)]
        public Input<string> SyncType { get; set; } = null!;

        public GetSyncConfigurationInvokeArgs()
        {
        }
        public static new GetSyncConfigurationInvokeArgs Empty => new GetSyncConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetSyncConfigurationResult
    {
        /// <summary>
        /// The name of the branch of the repository from which resources are to be synchronized,
        /// </summary>
        public readonly string? Branch;
        /// <summary>
        /// The source provider repository path of the sync configuration file of the respective SyncType.
        /// </summary>
        public readonly string? ConfigFile;
        /// <summary>
        /// the ID of the entity that owns the repository.
        /// </summary>
        public readonly string? OwnerId;
        /// <summary>
        /// The name of the external provider where your third-party code repository is configured.
        /// </summary>
        public readonly string? ProviderType;
        /// <summary>
        /// A UUID that uniquely identifies the RepositoryLink that the SyncConfig is associated with.
        /// </summary>
        public readonly string? RepositoryLinkId;
        /// <summary>
        /// The name of the repository that is being synced to.
        /// </summary>
        public readonly string? RepositoryName;
        /// <summary>
        /// The IAM Role that allows AWS to update CloudFormation stacks based on content in the specified repository.
        /// </summary>
        public readonly string? RoleArn;

        [OutputConstructor]
        private GetSyncConfigurationResult(
            string? branch,

            string? configFile,

            string? ownerId,

            string? providerType,

            string? repositoryLinkId,

            string? repositoryName,

            string? roleArn)
        {
            Branch = branch;
            ConfigFile = configFile;
            OwnerId = ownerId;
            ProviderType = providerType;
            RepositoryLinkId = repositoryLinkId;
            RepositoryName = repositoryName;
            RoleArn = roleArn;
        }
    }
}
