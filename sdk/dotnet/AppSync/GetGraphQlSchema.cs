// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppSync
{
    public static class GetGraphQlSchema
    {
        /// <summary>
        /// Resource Type definition for AWS::AppSync::GraphQLSchema
        /// </summary>
        public static Task<GetGraphQlSchemaResult> InvokeAsync(GetGraphQlSchemaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGraphQlSchemaResult>("aws-native:appsync:getGraphQlSchema", args ?? new GetGraphQlSchemaArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppSync::GraphQLSchema
        /// </summary>
        public static Output<GetGraphQlSchemaResult> Invoke(GetGraphQlSchemaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGraphQlSchemaResult>("aws-native:appsync:getGraphQlSchema", args ?? new GetGraphQlSchemaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGraphQlSchemaArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetGraphQlSchemaArgs()
        {
        }
        public static new GetGraphQlSchemaArgs Empty => new GetGraphQlSchemaArgs();
    }

    public sealed class GetGraphQlSchemaInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetGraphQlSchemaInvokeArgs()
        {
        }
        public static new GetGraphQlSchemaInvokeArgs Empty => new GetGraphQlSchemaInvokeArgs();
    }


    [OutputType]
    public sealed class GetGraphQlSchemaResult
    {
        public readonly string? Definition;
        public readonly string? DefinitionS3Location;
        public readonly string? Id;

        [OutputConstructor]
        private GetGraphQlSchemaResult(
            string? definition,

            string? definitionS3Location,

            string? id)
        {
            Definition = definition;
            DefinitionS3Location = definitionS3Location;
            Id = id;
        }
    }
}
