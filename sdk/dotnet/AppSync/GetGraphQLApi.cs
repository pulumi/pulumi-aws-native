// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppSync
{
    public static class GetGraphQLApi
    {
        /// <summary>
        /// Resource Type definition for AWS::AppSync::GraphQLApi
        /// </summary>
        public static Task<GetGraphQLApiResult> InvokeAsync(GetGraphQLApiArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGraphQLApiResult>("aws-native:appsync:getGraphQLApi", args ?? new GetGraphQLApiArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppSync::GraphQLApi
        /// </summary>
        public static Output<GetGraphQLApiResult> Invoke(GetGraphQLApiInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGraphQLApiResult>("aws-native:appsync:getGraphQLApi", args ?? new GetGraphQLApiInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGraphQLApiArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetGraphQLApiArgs()
        {
        }
    }

    public sealed class GetGraphQLApiInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetGraphQLApiInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGraphQLApiResult
    {
        public readonly Outputs.GraphQLApiAdditionalAuthenticationProviders? AdditionalAuthenticationProviders;
        public readonly string? ApiId;
        public readonly string? Arn;
        public readonly string? AuthenticationType;
        public readonly string? GraphQLUrl;
        public readonly string? Id;
        public readonly Outputs.GraphQLApiLambdaAuthorizerConfig? LambdaAuthorizerConfig;
        public readonly Outputs.GraphQLApiLogConfig? LogConfig;
        public readonly string? Name;
        public readonly Outputs.GraphQLApiOpenIDConnectConfig? OpenIDConnectConfig;
        public readonly Outputs.GraphQLApiTags? Tags;
        public readonly Outputs.GraphQLApiUserPoolConfig? UserPoolConfig;
        public readonly bool? XrayEnabled;

        [OutputConstructor]
        private GetGraphQLApiResult(
            Outputs.GraphQLApiAdditionalAuthenticationProviders? additionalAuthenticationProviders,

            string? apiId,

            string? arn,

            string? authenticationType,

            string? graphQLUrl,

            string? id,

            Outputs.GraphQLApiLambdaAuthorizerConfig? lambdaAuthorizerConfig,

            Outputs.GraphQLApiLogConfig? logConfig,

            string? name,

            Outputs.GraphQLApiOpenIDConnectConfig? openIDConnectConfig,

            Outputs.GraphQLApiTags? tags,

            Outputs.GraphQLApiUserPoolConfig? userPoolConfig,

            bool? xrayEnabled)
        {
            AdditionalAuthenticationProviders = additionalAuthenticationProviders;
            ApiId = apiId;
            Arn = arn;
            AuthenticationType = authenticationType;
            GraphQLUrl = graphQLUrl;
            Id = id;
            LambdaAuthorizerConfig = lambdaAuthorizerConfig;
            LogConfig = logConfig;
            Name = name;
            OpenIDConnectConfig = openIDConnectConfig;
            Tags = tags;
            UserPoolConfig = userPoolConfig;
            XrayEnabled = xrayEnabled;
        }
    }
}
