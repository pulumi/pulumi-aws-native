// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppSync
{
    /// <summary>
    /// Resource Type definition for AWS::AppSync::GraphQLApi
    /// </summary>
    [AwsNativeResourceType("aws-native:appsync:GraphQlApi")]
    public partial class GraphQlApi : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of additional authentication providers for the GraphqlApi API.
        /// </summary>
        [Output("additionalAuthenticationProviders")]
        public Output<ImmutableArray<Outputs.GraphQlApiAdditionalAuthenticationProvider>> AdditionalAuthenticationProviders { get; private set; } = null!;

        /// <summary>
        /// Unique AWS AppSync GraphQL API identifier.
        /// </summary>
        [Output("apiId")]
        public Output<string> ApiId { get; private set; } = null!;

        /// <summary>
        /// The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
        /// </summary>
        [Output("apiType")]
        public Output<string?> ApiType { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the API key
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Security configuration for your GraphQL API
        /// </summary>
        [Output("authenticationType")]
        public Output<string> AuthenticationType { get; private set; } = null!;

        /// <summary>
        /// Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
        /// </summary>
        [Output("enhancedMetricsConfig")]
        public Output<Outputs.GraphQlApiEnhancedMetricsConfig?> EnhancedMetricsConfig { get; private set; } = null!;

        /// <summary>
        /// A map containing the list of resources with their properties and environment variables.
        /// </summary>
        [Output("environmentVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.
        /// </summary>
        [Output("graphQlDns")]
        public Output<string> GraphQlDns { get; private set; } = null!;

        /// <summary>
        /// The GraphQL endpoint ARN.
        /// </summary>
        [Output("graphQlEndpointArn")]
        public Output<string> GraphQlEndpointArn { get; private set; } = null!;

        /// <summary>
        /// The Endpoint URL of your GraphQL API.
        /// </summary>
        [Output("graphQlUrl")]
        public Output<string> GraphQlUrl { get; private set; } = null!;

        /// <summary>
        /// Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
        /// </summary>
        [Output("introspectionConfig")]
        public Output<string?> IntrospectionConfig { get; private set; } = null!;

        /// <summary>
        /// A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
        /// </summary>
        [Output("lambdaAuthorizerConfig")]
        public Output<Outputs.GraphQlApiLambdaAuthorizerConfig?> LambdaAuthorizerConfig { get; private set; } = null!;

        /// <summary>
        /// The Amazon CloudWatch Logs configuration.
        /// </summary>
        [Output("logConfig")]
        public Output<Outputs.GraphQlApiLogConfig?> LogConfig { get; private set; } = null!;

        /// <summary>
        /// The AWS Identity and Access Management service role ARN for a merged API. 
        /// </summary>
        [Output("mergedApiExecutionRoleArn")]
        public Output<string?> MergedApiExecutionRoleArn { get; private set; } = null!;

        /// <summary>
        /// The API name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The OpenID Connect configuration.
        /// </summary>
        [Output("openIdConnectConfig")]
        public Output<Outputs.GraphQlApiOpenIdConnectConfig?> OpenIdConnectConfig { get; private set; } = null!;

        /// <summary>
        /// The owner contact information for an API resource.
        /// </summary>
        [Output("ownerContact")]
        public Output<string?> OwnerContact { get; private set; } = null!;

        /// <summary>
        /// The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
        /// </summary>
        [Output("queryDepthLimit")]
        public Output<int?> QueryDepthLimit { get; private set; } = null!;

        /// <summary>
        /// The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.
        /// </summary>
        [Output("realtimeDns")]
        public Output<string> RealtimeDns { get; private set; } = null!;

        /// <summary>
        /// The GraphQL API real-time endpoint URL.
        /// </summary>
        [Output("realtimeUrl")]
        public Output<string> RealtimeUrl { get; private set; } = null!;

        /// <summary>
        /// The maximum number of resolvers that can be invoked in a single request.
        /// </summary>
        [Output("resolverCountLimit")]
        public Output<int?> ResolverCountLimit { get; private set; } = null!;

        /// <summary>
        /// An arbitrary set of tags (key-value pairs) for this GraphQL API.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
        /// </summary>
        [Output("userPoolConfig")]
        public Output<Outputs.GraphQlApiUserPoolConfig?> UserPoolConfig { get; private set; } = null!;

        /// <summary>
        /// Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
        /// </summary>
        [Output("visibility")]
        public Output<string?> Visibility { get; private set; } = null!;

        /// <summary>
        /// A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
        /// </summary>
        [Output("xrayEnabled")]
        public Output<bool?> XrayEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a GraphQlApi resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GraphQlApi(string name, GraphQlApiArgs args, CustomResourceOptions? options = null)
            : base("aws-native:appsync:GraphQlApi", name, args ?? new GraphQlApiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GraphQlApi(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:appsync:GraphQlApi", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GraphQlApi resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GraphQlApi Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GraphQlApi(name, id, options);
        }
    }

    public sealed class GraphQlApiArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalAuthenticationProviders")]
        private InputList<Inputs.GraphQlApiAdditionalAuthenticationProviderArgs>? _additionalAuthenticationProviders;

        /// <summary>
        /// A list of additional authentication providers for the GraphqlApi API.
        /// </summary>
        public InputList<Inputs.GraphQlApiAdditionalAuthenticationProviderArgs> AdditionalAuthenticationProviders
        {
            get => _additionalAuthenticationProviders ?? (_additionalAuthenticationProviders = new InputList<Inputs.GraphQlApiAdditionalAuthenticationProviderArgs>());
            set => _additionalAuthenticationProviders = value;
        }

        /// <summary>
        /// The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
        /// </summary>
        [Input("apiType")]
        public Input<string>? ApiType { get; set; }

        /// <summary>
        /// Security configuration for your GraphQL API
        /// </summary>
        [Input("authenticationType", required: true)]
        public Input<string> AuthenticationType { get; set; } = null!;

        /// <summary>
        /// Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
        /// </summary>
        [Input("enhancedMetricsConfig")]
        public Input<Inputs.GraphQlApiEnhancedMetricsConfigArgs>? EnhancedMetricsConfig { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// A map containing the list of resources with their properties and environment variables.
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
        /// </summary>
        [Input("introspectionConfig")]
        public Input<string>? IntrospectionConfig { get; set; }

        /// <summary>
        /// A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
        /// </summary>
        [Input("lambdaAuthorizerConfig")]
        public Input<Inputs.GraphQlApiLambdaAuthorizerConfigArgs>? LambdaAuthorizerConfig { get; set; }

        /// <summary>
        /// The Amazon CloudWatch Logs configuration.
        /// </summary>
        [Input("logConfig")]
        public Input<Inputs.GraphQlApiLogConfigArgs>? LogConfig { get; set; }

        /// <summary>
        /// The AWS Identity and Access Management service role ARN for a merged API. 
        /// </summary>
        [Input("mergedApiExecutionRoleArn")]
        public Input<string>? MergedApiExecutionRoleArn { get; set; }

        /// <summary>
        /// The API name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The OpenID Connect configuration.
        /// </summary>
        [Input("openIdConnectConfig")]
        public Input<Inputs.GraphQlApiOpenIdConnectConfigArgs>? OpenIdConnectConfig { get; set; }

        /// <summary>
        /// The owner contact information for an API resource.
        /// </summary>
        [Input("ownerContact")]
        public Input<string>? OwnerContact { get; set; }

        /// <summary>
        /// The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
        /// </summary>
        [Input("queryDepthLimit")]
        public Input<int>? QueryDepthLimit { get; set; }

        /// <summary>
        /// The maximum number of resolvers that can be invoked in a single request.
        /// </summary>
        [Input("resolverCountLimit")]
        public Input<int>? ResolverCountLimit { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An arbitrary set of tags (key-value pairs) for this GraphQL API.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
        /// </summary>
        [Input("userPoolConfig")]
        public Input<Inputs.GraphQlApiUserPoolConfigArgs>? UserPoolConfig { get; set; }

        /// <summary>
        /// Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
        /// </summary>
        [Input("visibility")]
        public Input<string>? Visibility { get; set; }

        /// <summary>
        /// A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
        /// </summary>
        [Input("xrayEnabled")]
        public Input<bool>? XrayEnabled { get; set; }

        public GraphQlApiArgs()
        {
        }
        public static new GraphQlApiArgs Empty => new GraphQlApiArgs();
    }
}
