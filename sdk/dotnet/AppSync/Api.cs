// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppSync
{
    /// <summary>
    /// Resource schema for AppSync Api
    /// </summary>
    [AwsNativeResourceType("aws-native:appsync:Api")]
    public partial class Api : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the AppSync Api
        /// </summary>
        [Output("apiArn")]
        public Output<string> ApiArn { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the AppSync Api generated by the service
        /// </summary>
        [Output("apiId")]
        public Output<string> ApiId { get; private set; } = null!;

        [Output("dns")]
        public Output<Outputs.ApiDnsMap> Dns { get; private set; } = null!;

        /// <summary>
        /// Describes the authorization configuration for connections, message publishing, message subscriptions, and logging for an Event API.
        /// </summary>
        [Output("eventConfig")]
        public Output<Outputs.ApiEventConfig?> EventConfig { get; private set; } = null!;

        /// <summary>
        /// The name of the `Api` .
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The owner contact information for an API resource.
        /// 
        /// This field accepts any string input with a length of 0 - 256 characters.
        /// </summary>
        [Output("ownerContact")]
        public Output<string?> OwnerContact { get; private set; } = null!;

        /// <summary>
        /// A set of tags (key-value pairs) for this API.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Api resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Api(string name, ApiArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:appsync:Api", name, args ?? new ApiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Api(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:appsync:Api", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Api resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Api Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Api(name, id, options);
        }
    }

    public sealed class ApiArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes the authorization configuration for connections, message publishing, message subscriptions, and logging for an Event API.
        /// </summary>
        [Input("eventConfig")]
        public Input<Inputs.ApiEventConfigArgs>? EventConfig { get; set; }

        /// <summary>
        /// The name of the `Api` .
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The owner contact information for an API resource.
        /// 
        /// This field accepts any string input with a length of 0 - 256 characters.
        /// </summary>
        [Input("ownerContact")]
        public Input<string>? OwnerContact { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A set of tags (key-value pairs) for this API.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public ApiArgs()
        {
        }
        public static new ApiArgs Empty => new ApiArgs();
    }
}
