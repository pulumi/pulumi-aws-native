// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppSync
{
    public static class GetGraphQlApi
    {
        /// <summary>
        /// Resource Type definition for AWS::AppSync::GraphQLApi
        /// </summary>
        public static Task<GetGraphQlApiResult> InvokeAsync(GetGraphQlApiArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGraphQlApiResult>("aws-native:appsync:getGraphQlApi", args ?? new GetGraphQlApiArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppSync::GraphQLApi
        /// </summary>
        public static Output<GetGraphQlApiResult> Invoke(GetGraphQlApiInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGraphQlApiResult>("aws-native:appsync:getGraphQlApi", args ?? new GetGraphQlApiInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppSync::GraphQLApi
        /// </summary>
        public static Output<GetGraphQlApiResult> Invoke(GetGraphQlApiInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGraphQlApiResult>("aws-native:appsync:getGraphQlApi", args ?? new GetGraphQlApiInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGraphQlApiArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique AWS AppSync GraphQL API identifier.
        /// </summary>
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        public GetGraphQlApiArgs()
        {
        }
        public static new GetGraphQlApiArgs Empty => new GetGraphQlApiArgs();
    }

    public sealed class GetGraphQlApiInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique AWS AppSync GraphQL API identifier.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        public GetGraphQlApiInvokeArgs()
        {
        }
        public static new GetGraphQlApiInvokeArgs Empty => new GetGraphQlApiInvokeArgs();
    }


    [OutputType]
    public sealed class GetGraphQlApiResult
    {
        /// <summary>
        /// A list of additional authentication providers for the GraphqlApi API.
        /// </summary>
        public readonly ImmutableArray<Outputs.GraphQlApiAdditionalAuthenticationProvider> AdditionalAuthenticationProviders;
        /// <summary>
        /// Unique AWS AppSync GraphQL API identifier.
        /// </summary>
        public readonly string? ApiId;
        /// <summary>
        /// The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
        /// </summary>
        public readonly string? ApiType;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the API key
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Security configuration for your GraphQL API
        /// </summary>
        public readonly string? AuthenticationType;
        /// <summary>
        /// Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
        /// </summary>
        public readonly Outputs.GraphQlApiEnhancedMetricsConfig? EnhancedMetricsConfig;
        /// <summary>
        /// A map containing the list of resources with their properties and environment variables.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EnvironmentVariables;
        /// <summary>
        /// The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.
        /// </summary>
        public readonly string? GraphQlDns;
        /// <summary>
        /// The GraphQL endpoint ARN.
        /// </summary>
        public readonly string? GraphQlEndpointArn;
        /// <summary>
        /// The Endpoint URL of your GraphQL API.
        /// </summary>
        public readonly string? GraphQlUrl;
        /// <summary>
        /// Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
        /// </summary>
        public readonly string? IntrospectionConfig;
        /// <summary>
        /// A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
        /// </summary>
        public readonly Outputs.GraphQlApiLambdaAuthorizerConfig? LambdaAuthorizerConfig;
        /// <summary>
        /// The Amazon CloudWatch Logs configuration.
        /// </summary>
        public readonly Outputs.GraphQlApiLogConfig? LogConfig;
        /// <summary>
        /// The AWS Identity and Access Management service role ARN for a merged API. 
        /// </summary>
        public readonly string? MergedApiExecutionRoleArn;
        /// <summary>
        /// The API name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The OpenID Connect configuration.
        /// </summary>
        public readonly Outputs.GraphQlApiOpenIdConnectConfig? OpenIdConnectConfig;
        /// <summary>
        /// The owner contact information for an API resource.
        /// </summary>
        public readonly string? OwnerContact;
        /// <summary>
        /// The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
        /// </summary>
        public readonly int? QueryDepthLimit;
        /// <summary>
        /// The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.
        /// </summary>
        public readonly string? RealtimeDns;
        /// <summary>
        /// The GraphQL API real-time endpoint URL.
        /// </summary>
        public readonly string? RealtimeUrl;
        /// <summary>
        /// The maximum number of resolvers that can be invoked in a single request.
        /// </summary>
        public readonly int? ResolverCountLimit;
        /// <summary>
        /// An arbitrary set of tags (key-value pairs) for this GraphQL API.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
        /// </summary>
        public readonly Outputs.GraphQlApiUserPoolConfig? UserPoolConfig;
        /// <summary>
        /// Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
        /// </summary>
        public readonly string? Visibility;
        /// <summary>
        /// A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
        /// </summary>
        public readonly bool? XrayEnabled;

        [OutputConstructor]
        private GetGraphQlApiResult(
            ImmutableArray<Outputs.GraphQlApiAdditionalAuthenticationProvider> additionalAuthenticationProviders,

            string? apiId,

            string? apiType,

            string? arn,

            string? authenticationType,

            Outputs.GraphQlApiEnhancedMetricsConfig? enhancedMetricsConfig,

            ImmutableDictionary<string, string>? environmentVariables,

            string? graphQlDns,

            string? graphQlEndpointArn,

            string? graphQlUrl,

            string? introspectionConfig,

            Outputs.GraphQlApiLambdaAuthorizerConfig? lambdaAuthorizerConfig,

            Outputs.GraphQlApiLogConfig? logConfig,

            string? mergedApiExecutionRoleArn,

            string? name,

            Outputs.GraphQlApiOpenIdConnectConfig? openIdConnectConfig,

            string? ownerContact,

            int? queryDepthLimit,

            string? realtimeDns,

            string? realtimeUrl,

            int? resolverCountLimit,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            Outputs.GraphQlApiUserPoolConfig? userPoolConfig,

            string? visibility,

            bool? xrayEnabled)
        {
            AdditionalAuthenticationProviders = additionalAuthenticationProviders;
            ApiId = apiId;
            ApiType = apiType;
            Arn = arn;
            AuthenticationType = authenticationType;
            EnhancedMetricsConfig = enhancedMetricsConfig;
            EnvironmentVariables = environmentVariables;
            GraphQlDns = graphQlDns;
            GraphQlEndpointArn = graphQlEndpointArn;
            GraphQlUrl = graphQlUrl;
            IntrospectionConfig = introspectionConfig;
            LambdaAuthorizerConfig = lambdaAuthorizerConfig;
            LogConfig = logConfig;
            MergedApiExecutionRoleArn = mergedApiExecutionRoleArn;
            Name = name;
            OpenIdConnectConfig = openIdConnectConfig;
            OwnerContact = ownerContact;
            QueryDepthLimit = queryDepthLimit;
            RealtimeDns = realtimeDns;
            RealtimeUrl = realtimeUrl;
            ResolverCountLimit = resolverCountLimit;
            Tags = tags;
            UserPoolConfig = userPoolConfig;
            Visibility = visibility;
            XrayEnabled = xrayEnabled;
        }
    }
}
