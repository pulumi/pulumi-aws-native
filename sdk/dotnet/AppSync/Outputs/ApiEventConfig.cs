// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppSync.Outputs
{

    /// <summary>
    /// The configuration for an Event Api
    /// </summary>
    [OutputType]
    public sealed class ApiEventConfig
    {
        /// <summary>
        /// A list of authorization providers.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApiAuthProvider> AuthProviders;
        /// <summary>
        /// A list of valid authorization modes for the Event API connections.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApiAuthMode> ConnectionAuthModes;
        /// <summary>
        /// A list of valid authorization modes for the Event API publishing.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApiAuthMode> DefaultPublishAuthModes;
        /// <summary>
        /// A list of valid authorization modes for the Event API subscriptions.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApiAuthMode> DefaultSubscribeAuthModes;
        /// <summary>
        /// The CloudWatch Logs configuration for the Event API.
        /// </summary>
        public readonly Outputs.ApiEventLogConfig? LogConfig;

        [OutputConstructor]
        private ApiEventConfig(
            ImmutableArray<Outputs.ApiAuthProvider> authProviders,

            ImmutableArray<Outputs.ApiAuthMode> connectionAuthModes,

            ImmutableArray<Outputs.ApiAuthMode> defaultPublishAuthModes,

            ImmutableArray<Outputs.ApiAuthMode> defaultSubscribeAuthModes,

            Outputs.ApiEventLogConfig? logConfig)
        {
            AuthProviders = authProviders;
            ConnectionAuthModes = connectionAuthModes;
            DefaultPublishAuthModes = defaultPublishAuthModes;
            DefaultSubscribeAuthModes = defaultSubscribeAuthModes;
            LogConfig = logConfig;
        }
    }
}
