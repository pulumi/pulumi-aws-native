// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppSync
{
    public static class GetResolver
    {
        /// <summary>
        /// The ``AWS::AppSync::Resolver`` resource defines the logical GraphQL resolver that you attach to fields in a schema. Request and response templates for resolvers are written in Apache Velocity Template Language (VTL) format. For more information about resolvers, see [Resolver Mapping Template Reference](https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference.html).
        ///   When you submit an update, CFNLong updates resources based on differences between what you submit and the stack's current template. To cause this resource to be updated you must change a property value for this resource in the CFNshort template. Changing the S3 file content without changing a property value will not result in an update operation.
        ///  See [Update Behaviors of Stack Resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html) in the *User Guide*.
        /// </summary>
        public static Task<GetResolverResult> InvokeAsync(GetResolverArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResolverResult>("aws-native:appsync:getResolver", args ?? new GetResolverArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::AppSync::Resolver`` resource defines the logical GraphQL resolver that you attach to fields in a schema. Request and response templates for resolvers are written in Apache Velocity Template Language (VTL) format. For more information about resolvers, see [Resolver Mapping Template Reference](https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference.html).
        ///   When you submit an update, CFNLong updates resources based on differences between what you submit and the stack's current template. To cause this resource to be updated you must change a property value for this resource in the CFNshort template. Changing the S3 file content without changing a property value will not result in an update operation.
        ///  See [Update Behaviors of Stack Resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html) in the *User Guide*.
        /// </summary>
        public static Output<GetResolverResult> Invoke(GetResolverInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResolverResult>("aws-native:appsync:getResolver", args ?? new GetResolverInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResolverArgs : global::Pulumi.InvokeArgs
    {
        [Input("resolverArn", required: true)]
        public string ResolverArn { get; set; } = null!;

        public GetResolverArgs()
        {
        }
        public static new GetResolverArgs Empty => new GetResolverArgs();
    }

    public sealed class GetResolverInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("resolverArn", required: true)]
        public Input<string> ResolverArn { get; set; } = null!;

        public GetResolverInvokeArgs()
        {
        }
        public static new GetResolverInvokeArgs Empty => new GetResolverInvokeArgs();
    }


    [OutputType]
    public sealed class GetResolverResult
    {
        /// <summary>
        /// The caching configuration for the resolver.
        /// </summary>
        public readonly Outputs.ResolverCachingConfig? CachingConfig;
        /// <summary>
        /// The ``resolver`` code that contains the request and response functions. When code is used, the ``runtime`` is required. The runtime value must be ``APPSYNC_JS``.
        /// </summary>
        public readonly string? Code;
        /// <summary>
        /// The resolver data source name.
        /// </summary>
        public readonly string? DataSourceName;
        /// <summary>
        /// The resolver type.
        ///   +   *UNIT*: A UNIT resolver type. A UNIT resolver is the default resolver type. You can use a UNIT resolver to run a GraphQL query against a single data source.
        ///   +   *PIPELINE*: A PIPELINE resolver type. You can use a PIPELINE resolver to invoke a series of ``Function`` objects in a serial manner. You can use a pipeline resolver to run a GraphQL query against multiple data sources.
        /// </summary>
        public readonly string? Kind;
        /// <summary>
        /// The maximum number of resolver request inputs that will be sent to a single LAMlong function in a ``BatchInvoke`` operation.
        /// </summary>
        public readonly int? MaxBatchSize;
        public readonly Pulumi.AwsNative.AppSync.ResolverMetricsConfig? MetricsConfig;
        /// <summary>
        /// Functions linked with the pipeline resolver.
        /// </summary>
        public readonly Outputs.ResolverPipelineConfig? PipelineConfig;
        /// <summary>
        /// The request mapping template.
        ///  Request mapping templates are optional when using a Lambda data source. For all other data sources, a request mapping template is required.
        /// </summary>
        public readonly string? RequestMappingTemplate;
        public readonly string? ResolverArn;
        /// <summary>
        /// The response mapping template.
        /// </summary>
        public readonly string? ResponseMappingTemplate;
        /// <summary>
        /// Describes a runtime used by an APSYlong resolver or APSYlong function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
        /// </summary>
        public readonly Outputs.ResolverAppSyncRuntime? Runtime;
        /// <summary>
        /// The ``SyncConfig`` for a resolver attached to a versioned data source.
        /// </summary>
        public readonly Outputs.ResolverSyncConfig? SyncConfig;

        [OutputConstructor]
        private GetResolverResult(
            Outputs.ResolverCachingConfig? cachingConfig,

            string? code,

            string? dataSourceName,

            string? kind,

            int? maxBatchSize,

            Pulumi.AwsNative.AppSync.ResolverMetricsConfig? metricsConfig,

            Outputs.ResolverPipelineConfig? pipelineConfig,

            string? requestMappingTemplate,

            string? resolverArn,

            string? responseMappingTemplate,

            Outputs.ResolverAppSyncRuntime? runtime,

            Outputs.ResolverSyncConfig? syncConfig)
        {
            CachingConfig = cachingConfig;
            Code = code;
            DataSourceName = dataSourceName;
            Kind = kind;
            MaxBatchSize = maxBatchSize;
            MetricsConfig = metricsConfig;
            PipelineConfig = pipelineConfig;
            RequestMappingTemplate = requestMappingTemplate;
            ResolverArn = resolverArn;
            ResponseMappingTemplate = responseMappingTemplate;
            Runtime = runtime;
            SyncConfig = syncConfig;
        }
    }
}
