// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppSync
{
    public static class GetApiCache
    {
        /// <summary>
        /// Resource Type definition for AWS::AppSync::ApiCache
        /// </summary>
        public static Task<GetApiCacheResult> InvokeAsync(GetApiCacheArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApiCacheResult>("aws-native:appsync:getApiCache", args ?? new GetApiCacheArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppSync::ApiCache
        /// </summary>
        public static Output<GetApiCacheResult> Invoke(GetApiCacheInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetApiCacheResult>("aws-native:appsync:getApiCache", args ?? new GetApiCacheInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiCacheArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetApiCacheArgs()
        {
        }
    }

    public sealed class GetApiCacheInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetApiCacheInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApiCacheResult
    {
        public readonly string? ApiCachingBehavior;
        public readonly bool? AtRestEncryptionEnabled;
        public readonly string? Id;
        public readonly bool? TransitEncryptionEnabled;
        public readonly double? Ttl;
        public readonly string? Type;

        [OutputConstructor]
        private GetApiCacheResult(
            string? apiCachingBehavior,

            bool? atRestEncryptionEnabled,

            string? id,

            bool? transitEncryptionEnabled,

            double? ttl,

            string? type)
        {
            ApiCachingBehavior = apiCachingBehavior;
            AtRestEncryptionEnabled = atRestEncryptionEnabled;
            Id = id;
            TransitEncryptionEnabled = transitEncryptionEnabled;
            Ttl = ttl;
            Type = type;
        }
    }
}
