// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppSync
{
    public static class GetChannelNamespace
    {
        /// <summary>
        /// Resource schema for AppSync ChannelNamespace
        /// </summary>
        public static Task<GetChannelNamespaceResult> InvokeAsync(GetChannelNamespaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetChannelNamespaceResult>("aws-native:appsync:getChannelNamespace", args ?? new GetChannelNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AppSync ChannelNamespace
        /// </summary>
        public static Output<GetChannelNamespaceResult> Invoke(GetChannelNamespaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetChannelNamespaceResult>("aws-native:appsync:getChannelNamespace", args ?? new GetChannelNamespaceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AppSync ChannelNamespace
        /// </summary>
        public static Output<GetChannelNamespaceResult> Invoke(GetChannelNamespaceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetChannelNamespaceResult>("aws-native:appsync:getChannelNamespace", args ?? new GetChannelNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetChannelNamespaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the channel namespace.
        /// </summary>
        [Input("channelNamespaceArn", required: true)]
        public string ChannelNamespaceArn { get; set; } = null!;

        public GetChannelNamespaceArgs()
        {
        }
        public static new GetChannelNamespaceArgs Empty => new GetChannelNamespaceArgs();
    }

    public sealed class GetChannelNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the channel namespace.
        /// </summary>
        [Input("channelNamespaceArn", required: true)]
        public Input<string> ChannelNamespaceArn { get; set; } = null!;

        public GetChannelNamespaceInvokeArgs()
        {
        }
        public static new GetChannelNamespaceInvokeArgs Empty => new GetChannelNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetChannelNamespaceResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the channel namespace.
        /// </summary>
        public readonly string? ChannelNamespaceArn;
        /// <summary>
        /// The event handler functions that run custom business logic to process published events and subscribe requests.
        /// </summary>
        public readonly string? CodeHandlers;
        /// <summary>
        /// List of AuthModes supported for Publish operations.
        /// </summary>
        public readonly ImmutableArray<Outputs.ChannelNamespaceAuthMode> PublishAuthModes;
        /// <summary>
        /// List of AuthModes supported for Subscribe operations.
        /// </summary>
        public readonly ImmutableArray<Outputs.ChannelNamespaceAuthMode> SubscribeAuthModes;
        /// <summary>
        /// A set of tags (key-value pairs) for this channel namespace.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetChannelNamespaceResult(
            string? channelNamespaceArn,

            string? codeHandlers,

            ImmutableArray<Outputs.ChannelNamespaceAuthMode> publishAuthModes,

            ImmutableArray<Outputs.ChannelNamespaceAuthMode> subscribeAuthModes,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            ChannelNamespaceArn = channelNamespaceArn;
            CodeHandlers = codeHandlers;
            PublishAuthModes = publishAuthModes;
            SubscribeAuthModes = subscribeAuthModes;
            Tags = tags;
        }
    }
}
