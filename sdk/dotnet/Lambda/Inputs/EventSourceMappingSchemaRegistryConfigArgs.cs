// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lambda.Inputs
{

    public sealed class EventSourceMappingSchemaRegistryConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessConfigs")]
        private InputList<Inputs.EventSourceMappingSchemaRegistryAccessConfigArgs>? _accessConfigs;

        /// <summary>
        /// An array of access configuration objects that tell Lambda how to authenticate with your schema registry.
        /// </summary>
        public InputList<Inputs.EventSourceMappingSchemaRegistryAccessConfigArgs> AccessConfigs
        {
            get => _accessConfigs ?? (_accessConfigs = new InputList<Inputs.EventSourceMappingSchemaRegistryAccessConfigArgs>());
            set => _accessConfigs = value;
        }

        /// <summary>
        /// The record format that Lambda delivers to your function after schema validation.
        /// 
        /// - Choose `JSON` to have Lambda deliver the record to your function as a standard JSON object.
        /// - Choose `SOURCE` to have Lambda deliver the record to your function in its original source format. Lambda removes all schema metadata, such as the schema ID, before sending the record to your function.
        /// </summary>
        [Input("eventRecordFormat")]
        public Input<Pulumi.AwsNative.Lambda.EventSourceMappingSchemaRegistryConfigEventRecordFormat>? EventRecordFormat { get; set; }

        /// <summary>
        /// The URI for your schema registry. The correct URI format depends on the type of schema registry you're using.
        /// 
        /// - For AWS Glue schema registries, use the ARN of the registry.
        /// - For Confluent schema registries, use the URL of the registry.
        /// </summary>
        [Input("schemaRegistryUri")]
        public Input<string>? SchemaRegistryUri { get; set; }

        [Input("schemaValidationConfigs")]
        private InputList<Inputs.EventSourceMappingSchemaValidationConfigArgs>? _schemaValidationConfigs;

        /// <summary>
        /// An array of schema validation configuration objects, which tell Lambda the message attributes you want to validate and filter using your schema registry.
        /// </summary>
        public InputList<Inputs.EventSourceMappingSchemaValidationConfigArgs> SchemaValidationConfigs
        {
            get => _schemaValidationConfigs ?? (_schemaValidationConfigs = new InputList<Inputs.EventSourceMappingSchemaValidationConfigArgs>());
            set => _schemaValidationConfigs = value;
        }

        public EventSourceMappingSchemaRegistryConfigArgs()
        {
        }
        public static new EventSourceMappingSchemaRegistryConfigArgs Empty => new EventSourceMappingSchemaRegistryConfigArgs();
    }
}
