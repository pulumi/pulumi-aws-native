// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lambda
{
    /// <summary>
    /// The ``AWS::Lambda::EventSourceMapping`` resource creates a mapping between an event source and an LAMlong function. LAM reads items from the event source and triggers the function.
    ///  For details about each event source type, see the following topics. In particular, each of the topics describes the required and optional parameters for the specific event source.
    ///   +   [Configuring a Dynamo DB stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping)
    ///   +   [Configuring a Kinesis stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping)
    ///   +   [Configuring an SQS queue as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource)
    ///   +   [Configuring an MQ broker as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping)
    ///   +   [Configuring MSK as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html)
    ///   +   [Configuring Self-Managed Apache Kafka as an event source](https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html)
    ///   +   [Configuring Amazon DocumentDB as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html)
    /// </summary>
    [AwsNativeResourceType("aws-native:lambda:EventSourceMapping")]
    public partial class EventSourceMapping : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.
        /// </summary>
        [Output("amazonManagedKafkaEventSourceConfig")]
        public Output<Outputs.EventSourceMappingAmazonManagedKafkaEventSourceConfig?> AmazonManagedKafkaEventSourceConfig { get; private set; } = null!;

        /// <summary>
        /// The event source mapping's ID.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).
        ///   +  *Amazon Kinesis* – Default 100. Max 10,000.
        ///   +  *Amazon DynamoDB Streams* – Default 100. Max 10,000.
        ///   +  *Amazon Simple Queue Service* – Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.
        ///   +  *Amazon Managed Streaming for Apache Kafka* – Default 100. Max 10,000.
        ///   +  *Self-managed Apache Kafka* – Default 100. Max 10,000.
        ///   +  *Amazon MQ (ActiveMQ and RabbitMQ)* – Default 100. Max 10,000.
        ///   +  *DocumentDB* – Default 100. Max 10,000.
        /// </summary>
        [Output("batchSize")]
        public Output<int?> BatchSize { get; private set; } = null!;

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) If the function returns an error, split the batch in two and retry. The default value is false.
        ///   When using ``BisectBatchOnFunctionError``, check the ``BatchSize`` parameter in the ``OnFailure`` destination message's metadata. The ``BatchSize`` could be greater than 1 since LAM consolidates failed messages metadata when writing to the ``OnFailure`` destination.
        /// </summary>
        [Output("bisectBatchOnFunctionError")]
        public Output<bool?> BisectBatchOnFunctionError { get; private set; } = null!;

        /// <summary>
        /// (Kinesis, DynamoDB Streams, Amazon MSK, and self-managed Apache Kafka event sources only) A configuration object that specifies the destination of an event after Lambda processes it.
        /// </summary>
        [Output("destinationConfig")]
        public Output<Outputs.EventSourceMappingDestinationConfig?> DestinationConfig { get; private set; } = null!;

        /// <summary>
        /// Specific configuration settings for a DocumentDB event source.
        /// </summary>
        [Output("documentDbEventSourceConfig")]
        public Output<Outputs.EventSourceMappingDocumentDbEventSourceConfig?> DocumentDbEventSourceConfig { get; private set; } = null!;

        /// <summary>
        /// When true, the event source mapping is active. When false, Lambda pauses polling and invocation.
        ///  Default: True
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the event source.
        ///   +  *Amazon Kinesis* – The ARN of the data stream or a stream consumer.
        ///   +  *Amazon DynamoDB Streams* – The ARN of the stream.
        ///   +  *Amazon Simple Queue Service* – The ARN of the queue.
        ///   +  *Amazon Managed Streaming for Apache Kafka* – The ARN of the cluster or the ARN of the VPC connection (for [cross-account event source mappings](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#msk-multi-vpc)).
        ///   +  *Amazon MQ* – The ARN of the broker.
        ///   +  *Amazon DocumentDB* – The ARN of the DocumentDB change stream.
        /// </summary>
        [Output("eventSourceArn")]
        public Output<string?> EventSourceArn { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the event source mapping.
        /// </summary>
        [Output("eventSourceMappingArn")]
        public Output<string> EventSourceMappingArn { get; private set; } = null!;

        /// <summary>
        /// An object that defines the filter criteria that determine whether Lambda should process an event. For more information, see [Lambda event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html).
        /// </summary>
        [Output("filterCriteria")]
        public Output<Outputs.EventSourceMappingFilterCriteria?> FilterCriteria { get; private set; } = null!;

        /// <summary>
        /// The name or ARN of the Lambda function.
        ///   **Name formats**
        ///  +  *Function name* – ``MyFunction``.
        ///   +  *Function ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction``.
        ///   +  *Version or Alias ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD``.
        ///   +  *Partial ARN* – ``123456789012:function:MyFunction``.
        ///   
        ///  The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.
        /// </summary>
        [Output("functionName")]
        public Output<string> FunctionName { get; private set; } = null!;

        /// <summary>
        /// (Kinesis, DynamoDB Streams, and SQS) A list of current response type enums applied to the event source mapping.
        ///  Valid Values: ``ReportBatchItemFailures``
        /// </summary>
        [Output("functionResponseTypes")]
        public Output<ImmutableArray<Pulumi.AwsNative.Lambda.EventSourceMappingFunctionResponseTypesItem>> FunctionResponseTypes { get; private set; } = null!;

        /// <summary>
        /// The ARN of the KMSlong (KMS) customer managed key that Lambda uses to encrypt your function's [filter criteria](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-basics).
        /// </summary>
        [Output("kmsKeyArn")]
        public Output<string?> KmsKeyArn { get; private set; } = null!;

        /// <summary>
        /// The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.
        ///  *Default (, , event sources)*: 0
        ///  *Default (, Kafka, , event sources)*: 500 ms
        ///  *Related setting:* For SQS event sources, when you set ``BatchSize`` to a value greater than 10, you must set ``MaximumBatchingWindowInSeconds`` to at least 1.
        /// </summary>
        [Output("maximumBatchingWindowInSeconds")]
        public Output<int?> MaximumBatchingWindowInSeconds { get; private set; } = null!;

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.
        ///   The minimum valid value for maximum record age is 60s. Although values less than 60 and greater than -1 fall within the parameter's absolute range, they are not allowed
        /// </summary>
        [Output("maximumRecordAgeInSeconds")]
        public Output<int?> MaximumRecordAgeInSeconds { get; private set; } = null!;

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.
        /// </summary>
        [Output("maximumRetryAttempts")]
        public Output<int?> MaximumRetryAttempts { get; private set; } = null!;

        /// <summary>
        /// The metrics configuration for your event source. For more information, see [Event source mapping metrics](https://docs.aws.amazon.com/lambda/latest/dg/monitoring-metrics-types.html#event-source-mapping-metrics).
        /// </summary>
        [Output("metricsConfig")]
        public Output<Outputs.EventSourceMappingMetricsConfig?> MetricsConfig { get; private set; } = null!;

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) The number of batches to process concurrently from each shard. The default value is 1.
        /// </summary>
        [Output("parallelizationFactor")]
        public Output<int?> ParallelizationFactor { get; private set; } = null!;

        /// <summary>
        /// (Amazon MSK and self-managed Apache Kafka only) The provisioned mode configuration for the event source. For more information, see [provisioned mode](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html#invocation-eventsourcemapping-provisioned-mode).
        /// </summary>
        [Output("provisionedPollerConfig")]
        public Output<Outputs.EventSourceMappingProvisionedPollerConfig?> ProvisionedPollerConfig { get; private set; } = null!;

        /// <summary>
        /// (Amazon MQ) The name of the Amazon MQ broker destination queue to consume.
        /// </summary>
        [Output("queues")]
        public Output<ImmutableArray<string>> Queues { get; private set; } = null!;

        /// <summary>
        /// (Amazon SQS only) The scaling configuration for the event source. For more information, see [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency).
        /// </summary>
        [Output("scalingConfig")]
        public Output<Outputs.EventSourceMappingScalingConfig?> ScalingConfig { get; private set; } = null!;

        /// <summary>
        /// The self-managed Apache Kafka cluster for your event source.
        /// </summary>
        [Output("selfManagedEventSource")]
        public Output<Outputs.EventSourceMappingSelfManagedEventSource?> SelfManagedEventSource { get; private set; } = null!;

        /// <summary>
        /// Specific configuration settings for a self-managed Apache Kafka event source.
        /// </summary>
        [Output("selfManagedKafkaEventSourceConfig")]
        public Output<Outputs.EventSourceMappingSelfManagedKafkaEventSourceConfig?> SelfManagedKafkaEventSourceConfig { get; private set; } = null!;

        /// <summary>
        /// An array of the authentication protocol, VPC components, or virtual host to secure and define your event source.
        /// </summary>
        [Output("sourceAccessConfigurations")]
        public Output<ImmutableArray<Outputs.EventSourceMappingSourceAccessConfiguration>> SourceAccessConfigurations { get; private set; } = null!;

        /// <summary>
        /// The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB.
        ///   +  *LATEST* - Read only new records.
        ///   +  *TRIM_HORIZON* - Process all available records.
        ///   +  *AT_TIMESTAMP* - Specify a time from which to start reading records.
        /// </summary>
        [Output("startingPosition")]
        public Output<string?> StartingPosition { get; private set; } = null!;

        /// <summary>
        /// With ``StartingPosition`` set to ``AT_TIMESTAMP``, the time from which to start reading, in Unix time seconds. ``StartingPositionTimestamp`` cannot be in the future.
        /// </summary>
        [Output("startingPositionTimestamp")]
        public Output<double?> StartingPositionTimestamp { get; private set; } = null!;

        /// <summary>
        /// A list of tags to add to the event source mapping.
        ///   You must have the ``lambda:TagResource``, ``lambda:UntagResource``, and ``lambda:ListTags`` permissions for your [principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) to manage the CFN stack. If you don't have these permissions, there might be unexpected behavior with stack-level tags propagating to the resource during resource creation and update.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The name of the Kafka topic.
        /// </summary>
        [Output("topics")]
        public Output<ImmutableArray<string>> Topics { get; private set; } = null!;

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources. A value of 0 seconds indicates no tumbling window.
        /// </summary>
        [Output("tumblingWindowInSeconds")]
        public Output<int?> TumblingWindowInSeconds { get; private set; } = null!;


        /// <summary>
        /// Create a EventSourceMapping resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EventSourceMapping(string name, EventSourceMappingArgs args, CustomResourceOptions? options = null)
            : base("aws-native:lambda:EventSourceMapping", name, args ?? new EventSourceMappingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EventSourceMapping(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:lambda:EventSourceMapping", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "eventSourceArn",
                    "selfManagedEventSource",
                    "startingPosition",
                    "startingPositionTimestamp",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EventSourceMapping resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EventSourceMapping Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new EventSourceMapping(name, id, options);
        }
    }

    public sealed class EventSourceMappingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.
        /// </summary>
        [Input("amazonManagedKafkaEventSourceConfig")]
        public Input<Inputs.EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs>? AmazonManagedKafkaEventSourceConfig { get; set; }

        /// <summary>
        /// The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).
        ///   +  *Amazon Kinesis* – Default 100. Max 10,000.
        ///   +  *Amazon DynamoDB Streams* – Default 100. Max 10,000.
        ///   +  *Amazon Simple Queue Service* – Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.
        ///   +  *Amazon Managed Streaming for Apache Kafka* – Default 100. Max 10,000.
        ///   +  *Self-managed Apache Kafka* – Default 100. Max 10,000.
        ///   +  *Amazon MQ (ActiveMQ and RabbitMQ)* – Default 100. Max 10,000.
        ///   +  *DocumentDB* – Default 100. Max 10,000.
        /// </summary>
        [Input("batchSize")]
        public Input<int>? BatchSize { get; set; }

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) If the function returns an error, split the batch in two and retry. The default value is false.
        ///   When using ``BisectBatchOnFunctionError``, check the ``BatchSize`` parameter in the ``OnFailure`` destination message's metadata. The ``BatchSize`` could be greater than 1 since LAM consolidates failed messages metadata when writing to the ``OnFailure`` destination.
        /// </summary>
        [Input("bisectBatchOnFunctionError")]
        public Input<bool>? BisectBatchOnFunctionError { get; set; }

        /// <summary>
        /// (Kinesis, DynamoDB Streams, Amazon MSK, and self-managed Apache Kafka event sources only) A configuration object that specifies the destination of an event after Lambda processes it.
        /// </summary>
        [Input("destinationConfig")]
        public Input<Inputs.EventSourceMappingDestinationConfigArgs>? DestinationConfig { get; set; }

        /// <summary>
        /// Specific configuration settings for a DocumentDB event source.
        /// </summary>
        [Input("documentDbEventSourceConfig")]
        public Input<Inputs.EventSourceMappingDocumentDbEventSourceConfigArgs>? DocumentDbEventSourceConfig { get; set; }

        /// <summary>
        /// When true, the event source mapping is active. When false, Lambda pauses polling and invocation.
        ///  Default: True
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the event source.
        ///   +  *Amazon Kinesis* – The ARN of the data stream or a stream consumer.
        ///   +  *Amazon DynamoDB Streams* – The ARN of the stream.
        ///   +  *Amazon Simple Queue Service* – The ARN of the queue.
        ///   +  *Amazon Managed Streaming for Apache Kafka* – The ARN of the cluster or the ARN of the VPC connection (for [cross-account event source mappings](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#msk-multi-vpc)).
        ///   +  *Amazon MQ* – The ARN of the broker.
        ///   +  *Amazon DocumentDB* – The ARN of the DocumentDB change stream.
        /// </summary>
        [Input("eventSourceArn")]
        public Input<string>? EventSourceArn { get; set; }

        /// <summary>
        /// An object that defines the filter criteria that determine whether Lambda should process an event. For more information, see [Lambda event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html).
        /// </summary>
        [Input("filterCriteria")]
        public Input<Inputs.EventSourceMappingFilterCriteriaArgs>? FilterCriteria { get; set; }

        /// <summary>
        /// The name or ARN of the Lambda function.
        ///   **Name formats**
        ///  +  *Function name* – ``MyFunction``.
        ///   +  *Function ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction``.
        ///   +  *Version or Alias ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD``.
        ///   +  *Partial ARN* – ``123456789012:function:MyFunction``.
        ///   
        ///  The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.
        /// </summary>
        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        [Input("functionResponseTypes")]
        private InputList<Pulumi.AwsNative.Lambda.EventSourceMappingFunctionResponseTypesItem>? _functionResponseTypes;

        /// <summary>
        /// (Kinesis, DynamoDB Streams, and SQS) A list of current response type enums applied to the event source mapping.
        ///  Valid Values: ``ReportBatchItemFailures``
        /// </summary>
        public InputList<Pulumi.AwsNative.Lambda.EventSourceMappingFunctionResponseTypesItem> FunctionResponseTypes
        {
            get => _functionResponseTypes ?? (_functionResponseTypes = new InputList<Pulumi.AwsNative.Lambda.EventSourceMappingFunctionResponseTypesItem>());
            set => _functionResponseTypes = value;
        }

        /// <summary>
        /// The ARN of the KMSlong (KMS) customer managed key that Lambda uses to encrypt your function's [filter criteria](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-basics).
        /// </summary>
        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        /// <summary>
        /// The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.
        ///  *Default (, , event sources)*: 0
        ///  *Default (, Kafka, , event sources)*: 500 ms
        ///  *Related setting:* For SQS event sources, when you set ``BatchSize`` to a value greater than 10, you must set ``MaximumBatchingWindowInSeconds`` to at least 1.
        /// </summary>
        [Input("maximumBatchingWindowInSeconds")]
        public Input<int>? MaximumBatchingWindowInSeconds { get; set; }

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.
        ///   The minimum valid value for maximum record age is 60s. Although values less than 60 and greater than -1 fall within the parameter's absolute range, they are not allowed
        /// </summary>
        [Input("maximumRecordAgeInSeconds")]
        public Input<int>? MaximumRecordAgeInSeconds { get; set; }

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.
        /// </summary>
        [Input("maximumRetryAttempts")]
        public Input<int>? MaximumRetryAttempts { get; set; }

        /// <summary>
        /// The metrics configuration for your event source. For more information, see [Event source mapping metrics](https://docs.aws.amazon.com/lambda/latest/dg/monitoring-metrics-types.html#event-source-mapping-metrics).
        /// </summary>
        [Input("metricsConfig")]
        public Input<Inputs.EventSourceMappingMetricsConfigArgs>? MetricsConfig { get; set; }

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) The number of batches to process concurrently from each shard. The default value is 1.
        /// </summary>
        [Input("parallelizationFactor")]
        public Input<int>? ParallelizationFactor { get; set; }

        /// <summary>
        /// (Amazon MSK and self-managed Apache Kafka only) The provisioned mode configuration for the event source. For more information, see [provisioned mode](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html#invocation-eventsourcemapping-provisioned-mode).
        /// </summary>
        [Input("provisionedPollerConfig")]
        public Input<Inputs.EventSourceMappingProvisionedPollerConfigArgs>? ProvisionedPollerConfig { get; set; }

        [Input("queues")]
        private InputList<string>? _queues;

        /// <summary>
        /// (Amazon MQ) The name of the Amazon MQ broker destination queue to consume.
        /// </summary>
        public InputList<string> Queues
        {
            get => _queues ?? (_queues = new InputList<string>());
            set => _queues = value;
        }

        /// <summary>
        /// (Amazon SQS only) The scaling configuration for the event source. For more information, see [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency).
        /// </summary>
        [Input("scalingConfig")]
        public Input<Inputs.EventSourceMappingScalingConfigArgs>? ScalingConfig { get; set; }

        /// <summary>
        /// The self-managed Apache Kafka cluster for your event source.
        /// </summary>
        [Input("selfManagedEventSource")]
        public Input<Inputs.EventSourceMappingSelfManagedEventSourceArgs>? SelfManagedEventSource { get; set; }

        /// <summary>
        /// Specific configuration settings for a self-managed Apache Kafka event source.
        /// </summary>
        [Input("selfManagedKafkaEventSourceConfig")]
        public Input<Inputs.EventSourceMappingSelfManagedKafkaEventSourceConfigArgs>? SelfManagedKafkaEventSourceConfig { get; set; }

        [Input("sourceAccessConfigurations")]
        private InputList<Inputs.EventSourceMappingSourceAccessConfigurationArgs>? _sourceAccessConfigurations;

        /// <summary>
        /// An array of the authentication protocol, VPC components, or virtual host to secure and define your event source.
        /// </summary>
        public InputList<Inputs.EventSourceMappingSourceAccessConfigurationArgs> SourceAccessConfigurations
        {
            get => _sourceAccessConfigurations ?? (_sourceAccessConfigurations = new InputList<Inputs.EventSourceMappingSourceAccessConfigurationArgs>());
            set => _sourceAccessConfigurations = value;
        }

        /// <summary>
        /// The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB.
        ///   +  *LATEST* - Read only new records.
        ///   +  *TRIM_HORIZON* - Process all available records.
        ///   +  *AT_TIMESTAMP* - Specify a time from which to start reading records.
        /// </summary>
        [Input("startingPosition")]
        public Input<string>? StartingPosition { get; set; }

        /// <summary>
        /// With ``StartingPosition`` set to ``AT_TIMESTAMP``, the time from which to start reading, in Unix time seconds. ``StartingPositionTimestamp`` cannot be in the future.
        /// </summary>
        [Input("startingPositionTimestamp")]
        public Input<double>? StartingPositionTimestamp { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A list of tags to add to the event source mapping.
        ///   You must have the ``lambda:TagResource``, ``lambda:UntagResource``, and ``lambda:ListTags`` permissions for your [principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) to manage the CFN stack. If you don't have these permissions, there might be unexpected behavior with stack-level tags propagating to the resource during resource creation and update.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        [Input("topics")]
        private InputList<string>? _topics;

        /// <summary>
        /// The name of the Kafka topic.
        /// </summary>
        public InputList<string> Topics
        {
            get => _topics ?? (_topics = new InputList<string>());
            set => _topics = value;
        }

        /// <summary>
        /// (Kinesis and DynamoDB Streams only) The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources. A value of 0 seconds indicates no tumbling window.
        /// </summary>
        [Input("tumblingWindowInSeconds")]
        public Input<int>? TumblingWindowInSeconds { get; set; }

        public EventSourceMappingArgs()
        {
        }
        public static new EventSourceMappingArgs Empty => new EventSourceMappingArgs();
    }
}
