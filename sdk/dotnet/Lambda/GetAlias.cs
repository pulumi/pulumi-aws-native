// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lambda
{
    public static class GetAlias
    {
        /// <summary>
        /// Resource Type definition for AWS::Lambda::Alias
        /// </summary>
        public static Task<GetAliasResult> InvokeAsync(GetAliasArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAliasResult>("aws-native:lambda:getAlias", args ?? new GetAliasArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Lambda::Alias
        /// </summary>
        public static Output<GetAliasResult> Invoke(GetAliasInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAliasResult>("aws-native:lambda:getAlias", args ?? new GetAliasInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAliasArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        public GetAliasArgs()
        {
        }
    }

    public sealed class GetAliasInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetAliasInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAliasResult
    {
        public readonly string? Description;
        public readonly string? FunctionVersion;
        public readonly string? Id;
        public readonly Outputs.AliasProvisionedConcurrencyConfiguration? ProvisionedConcurrencyConfig;
        public readonly Outputs.AliasRoutingConfiguration? RoutingConfig;

        [OutputConstructor]
        private GetAliasResult(
            string? description,

            string? functionVersion,

            string? id,

            Outputs.AliasProvisionedConcurrencyConfiguration? provisionedConcurrencyConfig,

            Outputs.AliasRoutingConfiguration? routingConfig)
        {
            Description = description;
            FunctionVersion = functionVersion;
            Id = id;
            ProvisionedConcurrencyConfig = provisionedConcurrencyConfig;
            RoutingConfig = routingConfig;
        }
    }
}
