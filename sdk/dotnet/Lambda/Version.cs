// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lambda
{
    /// <summary>
    /// Resource Type definition for AWS::Lambda::Version
    /// </summary>
    [AwsNativeResourceType("aws-native:lambda:Version")]
    public partial class Version : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property.
        /// </summary>
        [Output("codeSha256")]
        public Output<string?> CodeSha256 { get; private set; } = null!;

        /// <summary>
        /// A description for the version to override the description in the function configuration. Updates are not supported for this property.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ARN of the version.
        /// </summary>
        [Output("functionArn")]
        public Output<string> FunctionArn { get; private set; } = null!;

        /// <summary>
        /// The name of the Lambda function.
        /// </summary>
        [Output("functionName")]
        public Output<string> FunctionName { get; private set; } = null!;

        /// <summary>
        /// Specifies a provisioned concurrency configuration for a function's version. Updates are not supported for this property.
        /// </summary>
        [Output("provisionedConcurrencyConfig")]
        public Output<Outputs.VersionProvisionedConcurrencyConfiguration?> ProvisionedConcurrencyConfig { get; private set; } = null!;

        /// <summary>
        /// Specifies the runtime management configuration of a function. Displays runtimeVersionArn only for Manual.
        /// </summary>
        [Output("runtimePolicy")]
        public Output<Outputs.VersionRuntimePolicy?> RuntimePolicy { get; private set; } = null!;

        /// <summary>
        /// The version number.
        /// </summary>
        [Output("version")]
        public Output<string> VersionValue { get; private set; } = null!;


        /// <summary>
        /// Create a Version resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Version(string name, VersionArgs args, CustomResourceOptions? options = null)
            : base("aws-native:lambda:Version", name, args ?? new VersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Version(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:lambda:Version", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "codeSha256",
                    "description",
                    "functionName",
                    "provisionedConcurrencyConfig",
                    "runtimePolicy",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Version resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Version Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Version(name, id, options);
        }
    }

    public sealed class VersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property.
        /// </summary>
        [Input("codeSha256")]
        public Input<string>? CodeSha256 { get; set; }

        /// <summary>
        /// A description for the version to override the description in the function configuration. Updates are not supported for this property.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Lambda function.
        /// </summary>
        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        /// <summary>
        /// Specifies a provisioned concurrency configuration for a function's version. Updates are not supported for this property.
        /// </summary>
        [Input("provisionedConcurrencyConfig")]
        public Input<Inputs.VersionProvisionedConcurrencyConfigurationArgs>? ProvisionedConcurrencyConfig { get; set; }

        /// <summary>
        /// Specifies the runtime management configuration of a function. Displays runtimeVersionArn only for Manual.
        /// </summary>
        [Input("runtimePolicy")]
        public Input<Inputs.VersionRuntimePolicyArgs>? RuntimePolicy { get; set; }

        public VersionArgs()
        {
        }
        public static new VersionArgs Empty => new VersionArgs();
    }
}
