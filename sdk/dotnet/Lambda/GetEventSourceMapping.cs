// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lambda
{
    public static class GetEventSourceMapping
    {
        /// <summary>
        /// The ``AWS::Lambda::EventSourceMapping`` resource creates a mapping between an event source and an LAMlong function. LAM reads items from the event source and triggers the function.
        ///  For details about each event source type, see the following topics. In particular, each of the topics describes the required and optional parameters for the specific event source. 
        ///   +   [Configuring a Dynamo DB stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping) 
        ///   +   [Configuring a Kinesis stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping) 
        ///   +   [Configuring an SQS queue as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource) 
        ///   +   [Configuring an MQ broker as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping) 
        ///   +   [Configuring MSK as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html) 
        ///   +   [Configuring Self-Managed Apache Kafka as an event source](https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html) 
        ///   +   [Configuring Amazon DocumentDB as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html)
        /// </summary>
        public static Task<GetEventSourceMappingResult> InvokeAsync(GetEventSourceMappingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventSourceMappingResult>("aws-native:lambda:getEventSourceMapping", args ?? new GetEventSourceMappingArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::Lambda::EventSourceMapping`` resource creates a mapping between an event source and an LAMlong function. LAM reads items from the event source and triggers the function.
        ///  For details about each event source type, see the following topics. In particular, each of the topics describes the required and optional parameters for the specific event source. 
        ///   +   [Configuring a Dynamo DB stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping) 
        ///   +   [Configuring a Kinesis stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping) 
        ///   +   [Configuring an SQS queue as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource) 
        ///   +   [Configuring an MQ broker as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping) 
        ///   +   [Configuring MSK as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html) 
        ///   +   [Configuring Self-Managed Apache Kafka as an event source](https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html) 
        ///   +   [Configuring Amazon DocumentDB as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html)
        /// </summary>
        public static Output<GetEventSourceMappingResult> Invoke(GetEventSourceMappingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventSourceMappingResult>("aws-native:lambda:getEventSourceMapping", args ?? new GetEventSourceMappingInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::Lambda::EventSourceMapping`` resource creates a mapping between an event source and an LAMlong function. LAM reads items from the event source and triggers the function.
        ///  For details about each event source type, see the following topics. In particular, each of the topics describes the required and optional parameters for the specific event source. 
        ///   +   [Configuring a Dynamo DB stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping) 
        ///   +   [Configuring a Kinesis stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping) 
        ///   +   [Configuring an SQS queue as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource) 
        ///   +   [Configuring an MQ broker as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping) 
        ///   +   [Configuring MSK as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html) 
        ///   +   [Configuring Self-Managed Apache Kafka as an event source](https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html) 
        ///   +   [Configuring Amazon DocumentDB as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html)
        /// </summary>
        public static Output<GetEventSourceMappingResult> Invoke(GetEventSourceMappingInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventSourceMappingResult>("aws-native:lambda:getEventSourceMapping", args ?? new GetEventSourceMappingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventSourceMappingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The event source mapping's ID.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetEventSourceMappingArgs()
        {
        }
        public static new GetEventSourceMappingArgs Empty => new GetEventSourceMappingArgs();
    }

    public sealed class GetEventSourceMappingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The event source mapping's ID.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetEventSourceMappingInvokeArgs()
        {
        }
        public static new GetEventSourceMappingInvokeArgs Empty => new GetEventSourceMappingInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventSourceMappingResult
    {
        /// <summary>
        /// The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).
        ///   +   *Amazon Kinesis* – Default 100. Max 10,000.
        ///   +   *Amazon DynamoDB Streams* – Default 100. Max 10,000.
        ///   +   *Amazon Simple Queue Service* – Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.
        ///   +   *Amazon Managed Streaming for Apache Kafka* – Default 100. Max 10,000.
        ///   +   *Self-managed Apache Kafka* – Default 100. Max 10,000.
        ///   +   *Amazon MQ (ActiveMQ and RabbitMQ)* – Default 100. Max 10,000.
        ///   +   *DocumentDB* – Default 100. Max 10,000.
        /// </summary>
        public readonly int? BatchSize;
        /// <summary>
        /// (Kinesis and DynamoDB Streams only) If the function returns an error, split the batch in two and retry. The default value is false.
        ///   When using ``BisectBatchOnFunctionError``, check the ``BatchSize`` parameter in the ``OnFailure`` destination message's metadata. The ``BatchSize`` could be greater than 1 since LAM consolidates failed messages metadata when writing to the ``OnFailure`` destination.
        /// </summary>
        public readonly bool? BisectBatchOnFunctionError;
        /// <summary>
        /// (Kinesis, DynamoDB Streams, Amazon MSK, and self-managed Apache Kafka event sources only) A configuration object that specifies the destination of an event after Lambda processes it.
        /// </summary>
        public readonly Outputs.EventSourceMappingDestinationConfig? DestinationConfig;
        /// <summary>
        /// Specific configuration settings for a DocumentDB event source.
        /// </summary>
        public readonly Outputs.EventSourceMappingDocumentDbEventSourceConfig? DocumentDbEventSourceConfig;
        /// <summary>
        /// When true, the event source mapping is active. When false, Lambda pauses polling and invocation.
        ///  Default: True
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the event source mapping.
        /// </summary>
        public readonly string? EventSourceMappingArn;
        /// <summary>
        /// An object that defines the filter criteria that determine whether Lambda should process an event. For more information, see [Lambda event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html).
        /// </summary>
        public readonly Outputs.EventSourceMappingFilterCriteria? FilterCriteria;
        /// <summary>
        /// The name or ARN of the Lambda function.
        ///   **Name formats**
        ///  +   *Function name* – ``MyFunction``.
        ///   +   *Function ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction``.
        ///   +   *Version or Alias ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD``.
        ///   +   *Partial ARN* – ``123456789012:function:MyFunction``.
        ///   
        ///  The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.
        /// </summary>
        public readonly string? FunctionName;
        /// <summary>
        /// (Kinesis, DynamoDB Streams, and SQS) A list of current response type enums applied to the event source mapping.
        ///  Valid Values: ``ReportBatchItemFailures``
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Lambda.EventSourceMappingFunctionResponseTypesItem> FunctionResponseTypes;
        /// <summary>
        /// The event source mapping's ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The ARN of the KMSlong (KMS) customer managed key that Lambda uses to encrypt your function's [filter criteria](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-basics).
        /// </summary>
        public readonly string? KmsKeyArn;
        /// <summary>
        /// The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.
        ///   *Default (, , event sources)*: 0
        ///   *Default (, Kafka, , event sources)*: 500 ms
        ///   *Related setting:* For SQS event sources, when you set ``BatchSize`` to a value greater than 10, you must set ``MaximumBatchingWindowInSeconds`` to at least 1.
        /// </summary>
        public readonly int? MaximumBatchingWindowInSeconds;
        /// <summary>
        /// (Kinesis and DynamoDB Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.
        ///   The minimum valid value for maximum record age is 60s. Although values less than 60 and greater than -1 fall within the parameter's absolute range, they are not allowed
        /// </summary>
        public readonly int? MaximumRecordAgeInSeconds;
        /// <summary>
        /// (Kinesis and DynamoDB Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.
        /// </summary>
        public readonly int? MaximumRetryAttempts;
        /// <summary>
        /// The metrics configuration for your event source. For more information, see [Event source mapping metrics](https://docs.aws.amazon.com/lambda/latest/dg/monitoring-metrics-types.html#event-source-mapping-metrics).
        /// </summary>
        public readonly Outputs.EventSourceMappingMetricsConfig? MetricsConfig;
        /// <summary>
        /// (Kinesis and DynamoDB Streams only) The number of batches to process concurrently from each shard. The default value is 1.
        /// </summary>
        public readonly int? ParallelizationFactor;
        /// <summary>
        /// (Amazon MSK and self-managed Apache Kafka only) The provisioned mode configuration for the event source. For more information, see [provisioned mode](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html#invocation-eventsourcemapping-provisioned-mode).
        /// </summary>
        public readonly Outputs.EventSourceMappingProvisionedPollerConfig? ProvisionedPollerConfig;
        /// <summary>
        /// (Amazon MQ) The name of the Amazon MQ broker destination queue to consume.
        /// </summary>
        public readonly ImmutableArray<string> Queues;
        /// <summary>
        /// (Amazon SQS only) The scaling configuration for the event source. For more information, see [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency).
        /// </summary>
        public readonly Outputs.EventSourceMappingScalingConfig? ScalingConfig;
        /// <summary>
        /// An array of the authentication protocol, VPC components, or virtual host to secure and define your event source.
        /// </summary>
        public readonly ImmutableArray<Outputs.EventSourceMappingSourceAccessConfiguration> SourceAccessConfigurations;
        /// <summary>
        /// A list of tags to add to the event source mapping.
        ///   You must have the ``lambda:TagResource``, ``lambda:UntagResource``, and ``lambda:ListTags`` permissions for your [principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) to manage the CFN stack. If you don't have these permissions, there might be unexpected behavior with stack-level tags propagating to the resource during resource creation and update.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The name of the Kafka topic.
        /// </summary>
        public readonly ImmutableArray<string> Topics;
        /// <summary>
        /// (Kinesis and DynamoDB Streams only) The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources. A value of 0 seconds indicates no tumbling window.
        /// </summary>
        public readonly int? TumblingWindowInSeconds;

        [OutputConstructor]
        private GetEventSourceMappingResult(
            int? batchSize,

            bool? bisectBatchOnFunctionError,

            Outputs.EventSourceMappingDestinationConfig? destinationConfig,

            Outputs.EventSourceMappingDocumentDbEventSourceConfig? documentDbEventSourceConfig,

            bool? enabled,

            string? eventSourceMappingArn,

            Outputs.EventSourceMappingFilterCriteria? filterCriteria,

            string? functionName,

            ImmutableArray<Pulumi.AwsNative.Lambda.EventSourceMappingFunctionResponseTypesItem> functionResponseTypes,

            string? id,

            string? kmsKeyArn,

            int? maximumBatchingWindowInSeconds,

            int? maximumRecordAgeInSeconds,

            int? maximumRetryAttempts,

            Outputs.EventSourceMappingMetricsConfig? metricsConfig,

            int? parallelizationFactor,

            Outputs.EventSourceMappingProvisionedPollerConfig? provisionedPollerConfig,

            ImmutableArray<string> queues,

            Outputs.EventSourceMappingScalingConfig? scalingConfig,

            ImmutableArray<Outputs.EventSourceMappingSourceAccessConfiguration> sourceAccessConfigurations,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            ImmutableArray<string> topics,

            int? tumblingWindowInSeconds)
        {
            BatchSize = batchSize;
            BisectBatchOnFunctionError = bisectBatchOnFunctionError;
            DestinationConfig = destinationConfig;
            DocumentDbEventSourceConfig = documentDbEventSourceConfig;
            Enabled = enabled;
            EventSourceMappingArn = eventSourceMappingArn;
            FilterCriteria = filterCriteria;
            FunctionName = functionName;
            FunctionResponseTypes = functionResponseTypes;
            Id = id;
            KmsKeyArn = kmsKeyArn;
            MaximumBatchingWindowInSeconds = maximumBatchingWindowInSeconds;
            MaximumRecordAgeInSeconds = maximumRecordAgeInSeconds;
            MaximumRetryAttempts = maximumRetryAttempts;
            MetricsConfig = metricsConfig;
            ParallelizationFactor = parallelizationFactor;
            ProvisionedPollerConfig = provisionedPollerConfig;
            Queues = queues;
            ScalingConfig = scalingConfig;
            SourceAccessConfigurations = sourceAccessConfigurations;
            Tags = tags;
            Topics = topics;
            TumblingWindowInSeconds = tumblingWindowInSeconds;
        }
    }
}
