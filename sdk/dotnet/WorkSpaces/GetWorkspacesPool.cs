// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WorkSpaces
{
    public static class GetWorkspacesPool
    {
        /// <summary>
        /// Resource Type definition for AWS::WorkSpaces::WorkspacesPool
        /// </summary>
        public static Task<GetWorkspacesPoolResult> InvokeAsync(GetWorkspacesPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspacesPoolResult>("aws-native:workspaces:getWorkspacesPool", args ?? new GetWorkspacesPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::WorkSpaces::WorkspacesPool
        /// </summary>
        public static Output<GetWorkspacesPoolResult> Invoke(GetWorkspacesPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspacesPoolResult>("aws-native:workspaces:getWorkspacesPool", args ?? new GetWorkspacesPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspacesPoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("poolId", required: true)]
        public string PoolId { get; set; } = null!;

        public GetWorkspacesPoolArgs()
        {
        }
        public static new GetWorkspacesPoolArgs Empty => new GetWorkspacesPoolArgs();
    }

    public sealed class GetWorkspacesPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("poolId", required: true)]
        public Input<string> PoolId { get; set; } = null!;

        public GetWorkspacesPoolInvokeArgs()
        {
        }
        public static new GetWorkspacesPoolInvokeArgs Empty => new GetWorkspacesPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspacesPoolResult
    {
        public readonly Outputs.WorkspacesPoolApplicationSettings? ApplicationSettings;
        public readonly string? BundleId;
        public readonly Outputs.WorkspacesPoolCapacity? Capacity;
        public readonly string? CreatedAt;
        public readonly string? Description;
        public readonly string? DirectoryId;
        public readonly string? PoolArn;
        public readonly string? PoolId;
        public readonly Outputs.WorkspacesPoolTimeoutSettings? TimeoutSettings;

        [OutputConstructor]
        private GetWorkspacesPoolResult(
            Outputs.WorkspacesPoolApplicationSettings? applicationSettings,

            string? bundleId,

            Outputs.WorkspacesPoolCapacity? capacity,

            string? createdAt,

            string? description,

            string? directoryId,

            string? poolArn,

            string? poolId,

            Outputs.WorkspacesPoolTimeoutSettings? timeoutSettings)
        {
            ApplicationSettings = applicationSettings;
            BundleId = bundleId;
            Capacity = capacity;
            CreatedAt = createdAt;
            Description = description;
            DirectoryId = directoryId;
            PoolArn = poolArn;
            PoolId = poolId;
            TimeoutSettings = timeoutSettings;
        }
    }
}
