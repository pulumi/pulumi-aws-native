// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WorkSpaces
{
    public static class GetWorkspacesPool
    {
        /// <summary>
        /// Resource Type definition for AWS::WorkSpaces::WorkspacesPool
        /// </summary>
        public static Task<GetWorkspacesPoolResult> InvokeAsync(GetWorkspacesPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspacesPoolResult>("aws-native:workspaces:getWorkspacesPool", args ?? new GetWorkspacesPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::WorkSpaces::WorkspacesPool
        /// </summary>
        public static Output<GetWorkspacesPoolResult> Invoke(GetWorkspacesPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspacesPoolResult>("aws-native:workspaces:getWorkspacesPool", args ?? new GetWorkspacesPoolInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::WorkSpaces::WorkspacesPool
        /// </summary>
        public static Output<GetWorkspacesPoolResult> Invoke(GetWorkspacesPoolInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspacesPoolResult>("aws-native:workspaces:getWorkspacesPool", args ?? new GetWorkspacesPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspacesPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the pool.
        /// </summary>
        [Input("poolId", required: true)]
        public string PoolId { get; set; } = null!;

        public GetWorkspacesPoolArgs()
        {
        }
        public static new GetWorkspacesPoolArgs Empty => new GetWorkspacesPoolArgs();
    }

    public sealed class GetWorkspacesPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the pool.
        /// </summary>
        [Input("poolId", required: true)]
        public Input<string> PoolId { get; set; } = null!;

        public GetWorkspacesPoolInvokeArgs()
        {
        }
        public static new GetWorkspacesPoolInvokeArgs Empty => new GetWorkspacesPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspacesPoolResult
    {
        /// <summary>
        /// The persistent application settings for users of the pool.
        /// </summary>
        public readonly Outputs.WorkspacesPoolApplicationSettings? ApplicationSettings;
        /// <summary>
        /// The identifier of the bundle used by the pool.
        /// </summary>
        public readonly string? BundleId;
        /// <summary>
        /// Describes the user capacity for the pool.
        /// </summary>
        public readonly Outputs.WorkspacesPoolCapacity? Capacity;
        /// <summary>
        /// The time the pool was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The description of the pool.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The identifier of the directory used by the pool.
        /// </summary>
        public readonly string? DirectoryId;
        /// <summary>
        /// The Amazon Resource Name (ARN) for the pool.
        /// </summary>
        public readonly string? PoolArn;
        /// <summary>
        /// The identifier of the pool.
        /// </summary>
        public readonly string? PoolId;
        public readonly Pulumi.AwsNative.WorkSpaces.WorkspacesPoolRunningMode? RunningMode;
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The amount of time that a pool session remains active after users disconnect. If they try to reconnect to the pool session after a disconnection or network interruption within this time interval, they are connected to their previous session. Otherwise, they are connected to a new session with a new pool instance.
        /// </summary>
        public readonly Outputs.WorkspacesPoolTimeoutSettings? TimeoutSettings;

        [OutputConstructor]
        private GetWorkspacesPoolResult(
            Outputs.WorkspacesPoolApplicationSettings? applicationSettings,

            string? bundleId,

            Outputs.WorkspacesPoolCapacity? capacity,

            string? createdAt,

            string? description,

            string? directoryId,

            string? poolArn,

            string? poolId,

            Pulumi.AwsNative.WorkSpaces.WorkspacesPoolRunningMode? runningMode,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            Outputs.WorkspacesPoolTimeoutSettings? timeoutSettings)
        {
            ApplicationSettings = applicationSettings;
            BundleId = bundleId;
            Capacity = capacity;
            CreatedAt = createdAt;
            Description = description;
            DirectoryId = directoryId;
            PoolArn = poolArn;
            PoolId = poolId;
            RunningMode = runningMode;
            Tags = tags;
            TimeoutSettings = timeoutSettings;
        }
    }
}
