// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Kinesis
{
    public static class GetStreamConsumer
    {
        /// <summary>
        /// Resource Type definition for AWS::Kinesis::StreamConsumer
        /// </summary>
        public static Task<GetStreamConsumerResult> InvokeAsync(GetStreamConsumerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamConsumerResult>("aws-native:kinesis:getStreamConsumer", args ?? new GetStreamConsumerArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Kinesis::StreamConsumer
        /// </summary>
        public static Output<GetStreamConsumerResult> Invoke(GetStreamConsumerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamConsumerResult>("aws-native:kinesis:getStreamConsumer", args ?? new GetStreamConsumerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Kinesis::StreamConsumer
        /// </summary>
        public static Output<GetStreamConsumerResult> Invoke(GetStreamConsumerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamConsumerResult>("aws-native:kinesis:getStreamConsumer", args ?? new GetStreamConsumerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamConsumerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.
        /// </summary>
        [Input("consumerArn", required: true)]
        public string ConsumerArn { get; set; } = null!;

        public GetStreamConsumerArgs()
        {
        }
        public static new GetStreamConsumerArgs Empty => new GetStreamConsumerArgs();
    }

    public sealed class GetStreamConsumerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.
        /// </summary>
        [Input("consumerArn", required: true)]
        public Input<string> ConsumerArn { get; set; } = null!;

        public GetStreamConsumerInvokeArgs()
        {
        }
        public static new GetStreamConsumerInvokeArgs Empty => new GetStreamConsumerInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamConsumerResult
    {
        /// <summary>
        /// The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.
        /// </summary>
        public readonly string? ConsumerArn;
        /// <summary>
        /// Timestamp when the consumer was created.
        /// </summary>
        public readonly string? ConsumerCreationTimestamp;
        /// <summary>
        /// A consumer can't read data while in the CREATING or DELETING states. Valid Values: CREATING | DELETING | ACTIVE
        /// </summary>
        public readonly string? ConsumerStatus;

        [OutputConstructor]
        private GetStreamConsumerResult(
            string? consumerArn,

            string? consumerCreationTimestamp,

            string? consumerStatus)
        {
            ConsumerArn = consumerArn;
            ConsumerCreationTimestamp = consumerCreationTimestamp;
            ConsumerStatus = consumerStatus;
        }
    }
}
