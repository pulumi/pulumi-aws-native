// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Kinesis
{
    public static class GetStream
    {
        /// <summary>
        /// Resource Type definition for AWS::Kinesis::Stream
        /// </summary>
        public static Task<GetStreamResult> InvokeAsync(GetStreamArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStreamResult>("aws-native:kinesis:getStream", args ?? new GetStreamArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Kinesis::Stream
        /// </summary>
        public static Output<GetStreamResult> Invoke(GetStreamInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetStreamResult>("aws-native:kinesis:getStream", args ?? new GetStreamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kinesis stream.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetStreamArgs()
        {
        }
    }

    public sealed class GetStreamInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Kinesis stream.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetStreamInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetStreamResult
    {
        /// <summary>
        /// The Amazon resource name (ARN) of the Kinesis stream
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The number of hours for the data records that are stored in shards to remain accessible.
        /// </summary>
        public readonly int? RetentionPeriodHours;
        /// <summary>
        /// The number of shards that the stream uses. Required when StreamMode = PROVISIONED is passed.
        /// </summary>
        public readonly int? ShardCount;
        /// <summary>
        /// When specified, enables or updates server-side encryption using an AWS KMS key for a specified stream.
        /// </summary>
        public readonly Outputs.StreamEncryption? StreamEncryption;
        /// <summary>
        /// The mode in which the stream is running.
        /// </summary>
        public readonly Outputs.StreamModeDetails? StreamModeDetails;
        /// <summary>
        /// An arbitrary set of tags (keyâ€“value pairs) to associate with the Kinesis stream.
        /// </summary>
        public readonly ImmutableArray<Outputs.StreamTag> Tags;

        [OutputConstructor]
        private GetStreamResult(
            string? arn,

            int? retentionPeriodHours,

            int? shardCount,

            Outputs.StreamEncryption? streamEncryption,

            Outputs.StreamModeDetails? streamModeDetails,

            ImmutableArray<Outputs.StreamTag> tags)
        {
            Arn = arn;
            RetentionPeriodHours = retentionPeriodHours;
            ShardCount = shardCount;
            StreamEncryption = streamEncryption;
            StreamModeDetails = streamModeDetails;
            Tags = tags;
        }
    }
}
