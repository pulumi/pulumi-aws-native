// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WorkSpacesWeb
{
    /// <summary>
    /// Definition of AWS::WorkSpacesWeb::BrowserSettings Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:workspacesweb:BrowserSettings")]
    public partial class BrowserSettings : global::Pulumi.CustomResource
    {
        [Output("additionalEncryptionContext")]
        public Output<Outputs.BrowserSettingsEncryptionContextMap?> AdditionalEncryptionContext { get; private set; } = null!;

        [Output("associatedPortalArns")]
        public Output<ImmutableArray<string>> AssociatedPortalArns { get; private set; } = null!;

        [Output("browserPolicy")]
        public Output<string?> BrowserPolicy { get; private set; } = null!;

        [Output("browserSettingsArn")]
        public Output<string> BrowserSettingsArn { get; private set; } = null!;

        [Output("customerManagedKey")]
        public Output<string?> CustomerManagedKey { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.BrowserSettingsTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a BrowserSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BrowserSettings(string name, BrowserSettingsArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:workspacesweb:BrowserSettings", name, args ?? new BrowserSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BrowserSettings(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:workspacesweb:BrowserSettings", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BrowserSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BrowserSettings Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BrowserSettings(name, id, options);
        }
    }

    public sealed class BrowserSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalEncryptionContext")]
        public Input<Inputs.BrowserSettingsEncryptionContextMapArgs>? AdditionalEncryptionContext { get; set; }

        [Input("browserPolicy")]
        public Input<string>? BrowserPolicy { get; set; }

        [Input("customerManagedKey")]
        public Input<string>? CustomerManagedKey { get; set; }

        [Input("tags")]
        private InputList<Inputs.BrowserSettingsTagArgs>? _tags;
        public InputList<Inputs.BrowserSettingsTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.BrowserSettingsTagArgs>());
            set => _tags = value;
        }

        public BrowserSettingsArgs()
        {
        }
        public static new BrowserSettingsArgs Empty => new BrowserSettingsArgs();
    }
}
