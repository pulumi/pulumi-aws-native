// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WorkSpacesWeb
{
    public static class GetPortal
    {
        /// <summary>
        /// Definition of AWS::WorkSpacesWeb::Portal Resource Type
        /// </summary>
        public static Task<GetPortalResult> InvokeAsync(GetPortalArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPortalResult>("aws-native:workspacesweb:getPortal", args ?? new GetPortalArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::WorkSpacesWeb::Portal Resource Type
        /// </summary>
        public static Output<GetPortalResult> Invoke(GetPortalInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPortalResult>("aws-native:workspacesweb:getPortal", args ?? new GetPortalInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::WorkSpacesWeb::Portal Resource Type
        /// </summary>
        public static Output<GetPortalResult> Invoke(GetPortalInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPortalResult>("aws-native:workspacesweb:getPortal", args ?? new GetPortalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPortalArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the web portal.
        /// </summary>
        [Input("portalArn", required: true)]
        public string PortalArn { get; set; } = null!;

        public GetPortalArgs()
        {
        }
        public static new GetPortalArgs Empty => new GetPortalArgs();
    }

    public sealed class GetPortalInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the web portal.
        /// </summary>
        [Input("portalArn", required: true)]
        public Input<string> PortalArn { get; set; } = null!;

        public GetPortalInvokeArgs()
        {
        }
        public static new GetPortalInvokeArgs Empty => new GetPortalInvokeArgs();
    }


    [OutputType]
    public sealed class GetPortalResult
    {
        /// <summary>
        /// The type of authentication integration points used when signing into the web portal. Defaults to `Standard` .
        /// 
        /// `Standard` web portals are authenticated directly through your identity provider (IdP). User and group access to your web portal is controlled through your IdP. You need to include an IdP resource in your template to integrate your IdP with your web portal. Completing the configuration for your IdP requires exchanging WorkSpaces Secure Browser’s SP metadata with your IdP’s IdP metadata. If your IdP requires the SP metadata first before returning the IdP metadata, you should follow these steps:
        /// 
        /// 1. Create and deploy a CloudFormation template with a `Standard` portal with no `IdentityProvider` resource.
        /// 
        /// 2. Retrieve the SP metadata using `Fn:GetAtt` , the WorkSpaces Secure Browser console, or by the calling the `GetPortalServiceProviderMetadata` API.
        /// 
        /// 3. Submit the data to your IdP.
        /// 
        /// 4. Add an `IdentityProvider` resource to your CloudFormation template.
        /// 
        /// `IAM Identity Center` web portals are authenticated through AWS IAM Identity Center . They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration) and other identity provider information must be configured in IAM Identity Center . User and group assignment must be done through the WorkSpaces Secure Browser console. These cannot be configured in CloudFormation.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesWeb.PortalAuthenticationType? AuthenticationType;
        /// <summary>
        /// The ARN of the browser settings that is associated with this web portal.
        /// </summary>
        public readonly string? BrowserSettingsArn;
        /// <summary>
        /// The browser that users see when using a streaming session.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesWeb.PortalBrowserType? BrowserType;
        /// <summary>
        /// The creation date of the web portal.
        /// </summary>
        public readonly string? CreationDate;
        /// <summary>
        /// The ARN of the data protection settings.
        /// </summary>
        public readonly string? DataProtectionSettingsArn;
        /// <summary>
        /// The name of the web portal.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The type and resources of the underlying instance.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesWeb.PortalInstanceType? InstanceType;
        /// <summary>
        /// The ARN of the IP access settings that is associated with the web portal.
        /// </summary>
        public readonly string? IpAccessSettingsArn;
        /// <summary>
        /// The maximum number of concurrent sessions for the portal.
        /// </summary>
        public readonly double? MaxConcurrentSessions;
        /// <summary>
        /// The ARN of the network settings that is associated with the web portal.
        /// </summary>
        public readonly string? NetworkSettingsArn;
        /// <summary>
        /// The ARN of the web portal.
        /// </summary>
        public readonly string? PortalArn;
        /// <summary>
        /// The endpoint URL of the web portal that users access in order to start streaming sessions.
        /// </summary>
        public readonly string? PortalEndpoint;
        /// <summary>
        /// The status of the web portal.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesWeb.PortalStatus? PortalStatus;
        /// <summary>
        /// The renderer that is used in streaming sessions.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesWeb.PortalRendererType? RendererType;
        /// <summary>
        /// The SAML metadata of the service provider.
        /// </summary>
        public readonly string? ServiceProviderSamlMetadata;
        /// <summary>
        /// A message that explains why the web portal is in its current status.
        /// </summary>
        public readonly string? StatusReason;
        /// <summary>
        /// The tags to add to the web portal. A tag is a key-value pair.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The ARN of the trust store that is associated with the web portal.
        /// </summary>
        public readonly string? TrustStoreArn;
        /// <summary>
        /// The ARN of the user access logging settings that is associated with the web portal.
        /// </summary>
        public readonly string? UserAccessLoggingSettingsArn;
        /// <summary>
        /// The ARN of the user settings that is associated with the web portal.
        /// </summary>
        public readonly string? UserSettingsArn;

        [OutputConstructor]
        private GetPortalResult(
            Pulumi.AwsNative.WorkSpacesWeb.PortalAuthenticationType? authenticationType,

            string? browserSettingsArn,

            Pulumi.AwsNative.WorkSpacesWeb.PortalBrowserType? browserType,

            string? creationDate,

            string? dataProtectionSettingsArn,

            string? displayName,

            Pulumi.AwsNative.WorkSpacesWeb.PortalInstanceType? instanceType,

            string? ipAccessSettingsArn,

            double? maxConcurrentSessions,

            string? networkSettingsArn,

            string? portalArn,

            string? portalEndpoint,

            Pulumi.AwsNative.WorkSpacesWeb.PortalStatus? portalStatus,

            Pulumi.AwsNative.WorkSpacesWeb.PortalRendererType? rendererType,

            string? serviceProviderSamlMetadata,

            string? statusReason,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            string? trustStoreArn,

            string? userAccessLoggingSettingsArn,

            string? userSettingsArn)
        {
            AuthenticationType = authenticationType;
            BrowserSettingsArn = browserSettingsArn;
            BrowserType = browserType;
            CreationDate = creationDate;
            DataProtectionSettingsArn = dataProtectionSettingsArn;
            DisplayName = displayName;
            InstanceType = instanceType;
            IpAccessSettingsArn = ipAccessSettingsArn;
            MaxConcurrentSessions = maxConcurrentSessions;
            NetworkSettingsArn = networkSettingsArn;
            PortalArn = portalArn;
            PortalEndpoint = portalEndpoint;
            PortalStatus = portalStatus;
            RendererType = rendererType;
            ServiceProviderSamlMetadata = serviceProviderSamlMetadata;
            StatusReason = statusReason;
            Tags = tags;
            TrustStoreArn = trustStoreArn;
            UserAccessLoggingSettingsArn = userAccessLoggingSettingsArn;
            UserSettingsArn = userSettingsArn;
        }
    }
}
