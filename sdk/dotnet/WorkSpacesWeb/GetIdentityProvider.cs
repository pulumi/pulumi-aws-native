// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WorkSpacesWeb
{
    public static class GetIdentityProvider
    {
        /// <summary>
        /// Definition of AWS::WorkSpacesWeb::IdentityProvider Resource Type
        /// </summary>
        public static Task<GetIdentityProviderResult> InvokeAsync(GetIdentityProviderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIdentityProviderResult>("aws-native:workspacesweb:getIdentityProvider", args ?? new GetIdentityProviderArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::WorkSpacesWeb::IdentityProvider Resource Type
        /// </summary>
        public static Output<GetIdentityProviderResult> Invoke(GetIdentityProviderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIdentityProviderResult>("aws-native:workspacesweb:getIdentityProvider", args ?? new GetIdentityProviderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIdentityProviderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the identity provider.
        /// </summary>
        [Input("identityProviderArn", required: true)]
        public string IdentityProviderArn { get; set; } = null!;

        public GetIdentityProviderArgs()
        {
        }
        public static new GetIdentityProviderArgs Empty => new GetIdentityProviderArgs();
    }

    public sealed class GetIdentityProviderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the identity provider.
        /// </summary>
        [Input("identityProviderArn", required: true)]
        public Input<string> IdentityProviderArn { get; set; } = null!;

        public GetIdentityProviderInvokeArgs()
        {
        }
        public static new GetIdentityProviderInvokeArgs Empty => new GetIdentityProviderInvokeArgs();
    }


    [OutputType]
    public sealed class GetIdentityProviderResult
    {
        /// <summary>
        /// The ARN of the identity provider.
        /// </summary>
        public readonly string? IdentityProviderArn;
        /// <summary>
        /// The identity provider details. The following list describes the provider detail keys for each identity provider type.
        /// 
        /// - For Google and Login with Amazon:
        /// 
        /// - `client_id`
        /// - `client_secret`
        /// - `authorize_scopes`
        /// - For Facebook:
        /// 
        /// - `client_id`
        /// - `client_secret`
        /// - `authorize_scopes`
        /// - `api_version`
        /// - For Sign in with Apple:
        /// 
        /// - `client_id`
        /// - `team_id`
        /// - `key_id`
        /// - `private_key`
        /// - `authorize_scopes`
        /// - For OIDC providers:
        /// 
        /// - `client_id`
        /// - `client_secret`
        /// - `attributes_request_method`
        /// - `oidc_issuer`
        /// - `authorize_scopes`
        /// - `authorize_url` *if not available from discovery URL specified by oidc_issuer key*
        /// - `token_url` *if not available from discovery URL specified by oidc_issuer key*
        /// - `attributes_url` *if not available from discovery URL specified by oidc_issuer key*
        /// - `jwks_uri` *if not available from discovery URL specified by oidc_issuer key*
        /// - For SAML providers:
        /// 
        /// - `MetadataFile` OR `MetadataURL`
        /// - `IDPSignout` (boolean) *optional*
        /// - `IDPInit` (boolean) *optional*
        /// - `RequestSigningAlgorithm` (string) *optional* - Only accepts `rsa-sha256`
        /// - `EncryptedResponses` (boolean) *optional*
        /// </summary>
        public readonly ImmutableDictionary<string, string>? IdentityProviderDetails;
        /// <summary>
        /// The identity provider name.
        /// </summary>
        public readonly string? IdentityProviderName;
        /// <summary>
        /// The identity provider type.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesWeb.IdentityProviderType? IdentityProviderType;
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetIdentityProviderResult(
            string? identityProviderArn,

            ImmutableDictionary<string, string>? identityProviderDetails,

            string? identityProviderName,

            Pulumi.AwsNative.WorkSpacesWeb.IdentityProviderType? identityProviderType,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            IdentityProviderArn = identityProviderArn;
            IdentityProviderDetails = identityProviderDetails;
            IdentityProviderName = identityProviderName;
            IdentityProviderType = identityProviderType;
            Tags = tags;
        }
    }
}
