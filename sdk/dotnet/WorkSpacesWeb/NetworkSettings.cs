// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WorkSpacesWeb
{
    /// <summary>
    /// Definition of AWS::WorkSpacesWeb::NetworkSettings Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:workspacesweb:NetworkSettings")]
    public partial class NetworkSettings : global::Pulumi.CustomResource
    {
        [Output("associatedPortalArns")]
        public Output<ImmutableArray<string>> AssociatedPortalArns { get; private set; } = null!;

        [Output("networkSettingsArn")]
        public Output<string> NetworkSettingsArn { get; private set; } = null!;

        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.NetworkSettingsTag>> Tags { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkSettings(string name, NetworkSettingsArgs args, CustomResourceOptions? options = null)
            : base("aws-native:workspacesweb:NetworkSettings", name, args ?? new NetworkSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkSettings(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:workspacesweb:NetworkSettings", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkSettings Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NetworkSettings(name, id, options);
        }
    }

    public sealed class NetworkSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("securityGroupIds", required: true)]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("subnetIds", required: true)]
        private InputList<string>? _subnetIds;
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputList<Inputs.NetworkSettingsTagArgs>? _tags;
        public InputList<Inputs.NetworkSettingsTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.NetworkSettingsTagArgs>());
            set => _tags = value;
        }

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public NetworkSettingsArgs()
        {
        }
        public static new NetworkSettingsArgs Empty => new NetworkSettingsArgs();
    }
}
