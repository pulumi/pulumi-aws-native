// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.Pinpoint
{
    [EnumType]
    public readonly struct InAppTemplateAlignment : IEquatable<InAppTemplateAlignment>
    {
        private readonly string _value;

        private InAppTemplateAlignment(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static InAppTemplateAlignment Left { get; } = new InAppTemplateAlignment("LEFT");
        public static InAppTemplateAlignment Center { get; } = new InAppTemplateAlignment("CENTER");
        public static InAppTemplateAlignment Right { get; } = new InAppTemplateAlignment("RIGHT");

        public static bool operator ==(InAppTemplateAlignment left, InAppTemplateAlignment right) => left.Equals(right);
        public static bool operator !=(InAppTemplateAlignment left, InAppTemplateAlignment right) => !left.Equals(right);

        public static explicit operator string(InAppTemplateAlignment value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is InAppTemplateAlignment other && Equals(other);
        public bool Equals(InAppTemplateAlignment other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct InAppTemplateButtonAction : IEquatable<InAppTemplateButtonAction>
    {
        private readonly string _value;

        private InAppTemplateButtonAction(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static InAppTemplateButtonAction Link { get; } = new InAppTemplateButtonAction("LINK");
        public static InAppTemplateButtonAction DeepLink { get; } = new InAppTemplateButtonAction("DEEP_LINK");
        public static InAppTemplateButtonAction Close { get; } = new InAppTemplateButtonAction("CLOSE");

        public static bool operator ==(InAppTemplateButtonAction left, InAppTemplateButtonAction right) => left.Equals(right);
        public static bool operator !=(InAppTemplateButtonAction left, InAppTemplateButtonAction right) => !left.Equals(right);

        public static explicit operator string(InAppTemplateButtonAction value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is InAppTemplateButtonAction other && Equals(other);
        public bool Equals(InAppTemplateButtonAction other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct InAppTemplateLayout : IEquatable<InAppTemplateLayout>
    {
        private readonly string _value;

        private InAppTemplateLayout(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static InAppTemplateLayout BottomBanner { get; } = new InAppTemplateLayout("BOTTOM_BANNER");
        public static InAppTemplateLayout TopBanner { get; } = new InAppTemplateLayout("TOP_BANNER");
        public static InAppTemplateLayout Overlays { get; } = new InAppTemplateLayout("OVERLAYS");
        public static InAppTemplateLayout MobileFeed { get; } = new InAppTemplateLayout("MOBILE_FEED");
        public static InAppTemplateLayout MiddleBanner { get; } = new InAppTemplateLayout("MIDDLE_BANNER");
        public static InAppTemplateLayout Carousel { get; } = new InAppTemplateLayout("CAROUSEL");

        public static bool operator ==(InAppTemplateLayout left, InAppTemplateLayout right) => left.Equals(right);
        public static bool operator !=(InAppTemplateLayout left, InAppTemplateLayout right) => !left.Equals(right);

        public static explicit operator string(InAppTemplateLayout value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is InAppTemplateLayout other && Equals(other);
        public bool Equals(InAppTemplateLayout other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
