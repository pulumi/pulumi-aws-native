// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pinpoint
{
    /// <summary>
    /// Resource Type definition for AWS::Pinpoint::Campaign
    /// </summary>
    [Obsolete(@"Campaign is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:pinpoint:Campaign")]
    public partial class Campaign : Pulumi.CustomResource
    {
        [Output("additionalTreatments")]
        public Output<ImmutableArray<Outputs.CampaignWriteTreatmentResource>> AdditionalTreatments { get; private set; } = null!;

        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("campaignHook")]
        public Output<Outputs.CampaignHook?> CampaignHook { get; private set; } = null!;

        [Output("campaignId")]
        public Output<string> CampaignId { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("holdoutPercent")]
        public Output<int?> HoldoutPercent { get; private set; } = null!;

        [Output("isPaused")]
        public Output<bool?> IsPaused { get; private set; } = null!;

        [Output("limits")]
        public Output<Outputs.CampaignLimits?> Limits { get; private set; } = null!;

        [Output("messageConfiguration")]
        public Output<Outputs.CampaignMessageConfiguration> MessageConfiguration { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        [Output("schedule")]
        public Output<Outputs.CampaignSchedule> Schedule { get; private set; } = null!;

        [Output("segmentId")]
        public Output<string> SegmentId { get; private set; } = null!;

        [Output("segmentVersion")]
        public Output<int?> SegmentVersion { get; private set; } = null!;

        [Output("tags")]
        public Output<object?> Tags { get; private set; } = null!;

        [Output("treatmentDescription")]
        public Output<string?> TreatmentDescription { get; private set; } = null!;

        [Output("treatmentName")]
        public Output<string?> TreatmentName { get; private set; } = null!;


        /// <summary>
        /// Create a Campaign resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Campaign(string name, CampaignArgs args, CustomResourceOptions? options = null)
            : base("aws-native:pinpoint:Campaign", name, args ?? new CampaignArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Campaign(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:pinpoint:Campaign", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Campaign resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Campaign Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Campaign(name, id, options);
        }
    }

    public sealed class CampaignArgs : Pulumi.ResourceArgs
    {
        [Input("additionalTreatments")]
        private InputList<Inputs.CampaignWriteTreatmentResourceArgs>? _additionalTreatments;
        public InputList<Inputs.CampaignWriteTreatmentResourceArgs> AdditionalTreatments
        {
            get => _additionalTreatments ?? (_additionalTreatments = new InputList<Inputs.CampaignWriteTreatmentResourceArgs>());
            set => _additionalTreatments = value;
        }

        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        [Input("campaignHook")]
        public Input<Inputs.CampaignHookArgs>? CampaignHook { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("holdoutPercent")]
        public Input<int>? HoldoutPercent { get; set; }

        [Input("isPaused")]
        public Input<bool>? IsPaused { get; set; }

        [Input("limits")]
        public Input<Inputs.CampaignLimitsArgs>? Limits { get; set; }

        [Input("messageConfiguration", required: true)]
        public Input<Inputs.CampaignMessageConfigurationArgs> MessageConfiguration { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("priority")]
        public Input<int>? Priority { get; set; }

        [Input("schedule", required: true)]
        public Input<Inputs.CampaignScheduleArgs> Schedule { get; set; } = null!;

        [Input("segmentId", required: true)]
        public Input<string> SegmentId { get; set; } = null!;

        [Input("segmentVersion")]
        public Input<int>? SegmentVersion { get; set; }

        [Input("tags")]
        public Input<object>? Tags { get; set; }

        [Input("treatmentDescription")]
        public Input<string>? TreatmentDescription { get; set; }

        [Input("treatmentName")]
        public Input<string>? TreatmentName { get; set; }

        public CampaignArgs()
        {
        }
    }
}
