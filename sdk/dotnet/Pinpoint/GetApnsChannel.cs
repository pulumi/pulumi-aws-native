// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pinpoint
{
    public static class GetApnsChannel
    {
        /// <summary>
        /// Resource Type definition for AWS::Pinpoint::APNSChannel
        /// </summary>
        public static Task<GetApnsChannelResult> InvokeAsync(GetApnsChannelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApnsChannelResult>("aws-native:pinpoint:getApnsChannel", args ?? new GetApnsChannelArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Pinpoint::APNSChannel
        /// </summary>
        public static Output<GetApnsChannelResult> Invoke(GetApnsChannelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApnsChannelResult>("aws-native:pinpoint:getApnsChannel", args ?? new GetApnsChannelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApnsChannelArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetApnsChannelArgs()
        {
        }
        public static new GetApnsChannelArgs Empty => new GetApnsChannelArgs();
    }

    public sealed class GetApnsChannelInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetApnsChannelInvokeArgs()
        {
        }
        public static new GetApnsChannelInvokeArgs Empty => new GetApnsChannelInvokeArgs();
    }


    [OutputType]
    public sealed class GetApnsChannelResult
    {
        public readonly string? BundleId;
        public readonly string? Certificate;
        public readonly string? DefaultAuthenticationMethod;
        public readonly bool? Enabled;
        public readonly string? Id;
        public readonly string? PrivateKey;
        public readonly string? TeamId;
        public readonly string? TokenKey;
        public readonly string? TokenKeyId;

        [OutputConstructor]
        private GetApnsChannelResult(
            string? bundleId,

            string? certificate,

            string? defaultAuthenticationMethod,

            bool? enabled,

            string? id,

            string? privateKey,

            string? teamId,

            string? tokenKey,

            string? tokenKeyId)
        {
            BundleId = bundleId;
            Certificate = certificate;
            DefaultAuthenticationMethod = defaultAuthenticationMethod;
            Enabled = enabled;
            Id = id;
            PrivateKey = privateKey;
            TeamId = teamId;
            TokenKey = tokenKey;
            TokenKeyId = tokenKeyId;
        }
    }
}
