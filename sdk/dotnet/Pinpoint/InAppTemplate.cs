// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pinpoint
{
    /// <summary>
    /// Resource Type definition for AWS::Pinpoint::InAppTemplate
    /// </summary>
    [AwsNativeResourceType("aws-native:pinpoint:InAppTemplate")]
    public partial class InAppTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the message template.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Specifies the configuration of an in-app message, including its header, body, buttons, colors, and images.
        /// </summary>
        [Output("content")]
        public Output<ImmutableArray<Outputs.InAppTemplateInAppMessageContent>> Content { get; private set; } = null!;

        /// <summary>
        /// Custom data, in the form of key-value pairs, that is included in an in-app messaging payload.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
        /// </summary>
        [Output("customConfig")]
        public Output<object?> CustomConfig { get; private set; } = null!;

        /// <summary>
        /// A string that determines the appearance of the in-app message. You can specify one of the following:
        /// 
        /// - `BOTTOM_BANNER` – a message that appears as a banner at the bottom of the page.
        /// - `TOP_BANNER` – a message that appears as a banner at the top of the page.
        /// - `OVERLAYS` – a message that covers entire screen.
        /// - `MOBILE_FEED` – a message that appears in a window in front of the page.
        /// - `MIDDLE_BANNER` – a message that appears as a banner in the middle of the page.
        /// - `CAROUSEL` – a scrollable layout of up to five unique messages.
        /// </summary>
        [Output("layout")]
        public Output<Pulumi.AwsNative.Pinpoint.InAppTemplateLayout?> Layout { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// 
        /// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
        /// </summary>
        [Output("tags")]
        public Output<object?> Tags { get; private set; } = null!;

        /// <summary>
        /// An optional description of the in-app template.
        /// </summary>
        [Output("templateDescription")]
        public Output<string?> TemplateDescription { get; private set; } = null!;

        /// <summary>
        /// The name of the in-app message template.
        /// </summary>
        [Output("templateName")]
        public Output<string> TemplateName { get; private set; } = null!;


        /// <summary>
        /// Create a InAppTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InAppTemplate(string name, InAppTemplateArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:pinpoint:InAppTemplate", name, args ?? new InAppTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InAppTemplate(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:pinpoint:InAppTemplate", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "templateName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InAppTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InAppTemplate Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new InAppTemplate(name, id, options);
        }
    }

    public sealed class InAppTemplateArgs : global::Pulumi.ResourceArgs
    {
        [Input("content")]
        private InputList<Inputs.InAppTemplateInAppMessageContentArgs>? _content;

        /// <summary>
        /// Specifies the configuration of an in-app message, including its header, body, buttons, colors, and images.
        /// </summary>
        public InputList<Inputs.InAppTemplateInAppMessageContentArgs> Content
        {
            get => _content ?? (_content = new InputList<Inputs.InAppTemplateInAppMessageContentArgs>());
            set => _content = value;
        }

        /// <summary>
        /// Custom data, in the form of key-value pairs, that is included in an in-app messaging payload.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
        /// </summary>
        [Input("customConfig")]
        public Input<object>? CustomConfig { get; set; }

        /// <summary>
        /// A string that determines the appearance of the in-app message. You can specify one of the following:
        /// 
        /// - `BOTTOM_BANNER` – a message that appears as a banner at the bottom of the page.
        /// - `TOP_BANNER` – a message that appears as a banner at the top of the page.
        /// - `OVERLAYS` – a message that covers entire screen.
        /// - `MOBILE_FEED` – a message that appears in a window in front of the page.
        /// - `MIDDLE_BANNER` – a message that appears as a banner in the middle of the page.
        /// - `CAROUSEL` – a scrollable layout of up to five unique messages.
        /// </summary>
        [Input("layout")]
        public Input<Pulumi.AwsNative.Pinpoint.InAppTemplateLayout>? Layout { get; set; }

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// 
        /// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
        /// </summary>
        [Input("tags")]
        public Input<object>? Tags { get; set; }

        /// <summary>
        /// An optional description of the in-app template.
        /// </summary>
        [Input("templateDescription")]
        public Input<string>? TemplateDescription { get; set; }

        /// <summary>
        /// The name of the in-app message template.
        /// </summary>
        [Input("templateName")]
        public Input<string>? TemplateName { get; set; }

        public InAppTemplateArgs()
        {
        }
        public static new InAppTemplateArgs Empty => new InAppTemplateArgs();
    }
}
