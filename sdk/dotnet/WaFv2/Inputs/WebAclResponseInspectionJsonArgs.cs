// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WaFv2.Inputs
{

    /// <summary>
    /// Response JSON that indicate success or failure of a login request
    /// </summary>
    public sealed class WebAclResponseInspectionJsonArgs : global::Pulumi.ResourceArgs
    {
        [Input("failureValues", required: true)]
        private InputList<string>? _failureValues;

        /// <summary>
        /// Values for the specified identifier in the response JSON that indicate a failed login or account creation attempt. To be counted as a failure, the value must be an exact match, including case. Each value must be unique among the success and failure values.
        /// 
        /// JSON example: `"FailureValues": [ "False", "Failed" ]`
        /// </summary>
        public InputList<string> FailureValues
        {
            get => _failureValues ?? (_failureValues = new InputList<string>());
            set => _failureValues = value;
        }

        /// <summary>
        /// The identifier for the value to match against in the JSON. The identifier must be an exact match, including case.
        /// 
        /// JSON examples: `"Identifier": [ "/login/success" ]` and `"Identifier": [ "/sign-up/success" ]`
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        [Input("successValues", required: true)]
        private InputList<string>? _successValues;

        /// <summary>
        /// Values for the specified identifier in the response JSON that indicate a successful login or account creation attempt. To be counted as a success, the value must be an exact match, including case. Each value must be unique among the success and failure values.
        /// 
        /// JSON example: `"SuccessValues": [ "True", "Succeeded" ]`
        /// </summary>
        public InputList<string> SuccessValues
        {
            get => _successValues ?? (_successValues = new InputList<string>());
            set => _successValues = value;
        }

        public WebAclResponseInspectionJsonArgs()
        {
        }
        public static new WebAclResponseInspectionJsonArgs Empty => new WebAclResponseInspectionJsonArgs();
    }
}
