// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WaFv2.Inputs
{

    /// <summary>
    /// Rule of RuleGroup that contains condition and action.
    /// </summary>
    public sealed class RuleGroupRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action that AWS WAF should take on a web request when it matches the rule statement. Settings at the web ACL level can override the rule action setting.
        /// </summary>
        [Input("action")]
        public Input<Inputs.RuleGroupRuleActionArgs>? Action { get; set; }

        /// <summary>
        /// Specifies how AWS WAF should handle `CAPTCHA` evaluations. If you don't specify this, AWS WAF uses the `CAPTCHA` configuration that's defined for the web ACL.
        /// </summary>
        [Input("captchaConfig")]
        public Input<Inputs.RuleGroupCaptchaConfigArgs>? CaptchaConfig { get; set; }

        /// <summary>
        /// Specifies how AWS WAF should handle `Challenge` evaluations. If you don't specify this, AWS WAF uses the challenge configuration that's defined for the web ACL.
        /// </summary>
        [Input("challengeConfig")]
        public Input<Inputs.RuleGroupChallengeConfigArgs>? ChallengeConfig { get; set; }

        /// <summary>
        /// The name of the rule.
        /// 
        /// If you change the name of a `Rule` after you create it and you want the rule's metric name to reflect the change, update the metric name in the rule's `VisibilityConfig` settings. AWS WAF doesn't automatically update the metric name when you update the rule name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// If you define more than one `Rule` in a `WebACL` , AWS WAF evaluates each request against the `Rules` in order based on the value of `Priority` . AWS WAF processes rules with lower priority first. The priorities don't need to be consecutive, but they must all be different.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        [Input("ruleLabels")]
        private InputList<Inputs.RuleGroupLabelArgs>? _ruleLabels;

        /// <summary>
        /// Collection of Rule Labels.
        /// </summary>
        public InputList<Inputs.RuleGroupLabelArgs> RuleLabels
        {
            get => _ruleLabels ?? (_ruleLabels = new InputList<Inputs.RuleGroupLabelArgs>());
            set => _ruleLabels = value;
        }

        /// <summary>
        /// The AWS WAF processing statement for the rule, for example `ByteMatchStatement` or `SizeConstraintStatement` .
        /// </summary>
        [Input("statement", required: true)]
        public Input<Inputs.RuleGroupStatementArgs> Statement { get; set; } = null!;

        /// <summary>
        /// Defines and enables Amazon CloudWatch metrics and web request sample collection.
        /// 
        /// If you change the name of a `Rule` after you create it and you want the rule's metric name to reflect the change, update the metric name as well. AWS WAF doesn't automatically update the metric name.
        /// </summary>
        [Input("visibilityConfig", required: true)]
        public Input<Inputs.RuleGroupVisibilityConfigArgs> VisibilityConfig { get; set; } = null!;

        public RuleGroupRuleArgs()
        {
        }
        public static new RuleGroupRuleArgs Empty => new RuleGroupRuleArgs();
    }
}
