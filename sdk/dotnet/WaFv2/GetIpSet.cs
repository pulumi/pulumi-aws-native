// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WaFv2
{
    public static class GetIpSet
    {
        /// <summary>
        /// Contains a list of IP addresses. This can be either IPV4 or IPV6. The list will be mutually
        /// </summary>
        public static Task<GetIpSetResult> InvokeAsync(GetIpSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpSetResult>("aws-native:wafv2:getIpSet", args ?? new GetIpSetArgs(), options.WithDefaults());

        /// <summary>
        /// Contains a list of IP addresses. This can be either IPV4 or IPV6. The list will be mutually
        /// </summary>
        public static Output<GetIpSetResult> Invoke(GetIpSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpSetResult>("aws-native:wafv2:getIpSet", args ?? new GetIpSetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Contains a list of IP addresses. This can be either IPV4 or IPV6. The list will be mutually
        /// </summary>
        public static Output<GetIpSetResult> Invoke(GetIpSetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpSetResult>("aws-native:wafv2:getIpSet", args ?? new GetIpSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the IP set.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The name of the IP set. You cannot change the name of an `IPSet` after you create it.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AWS AppSync GraphQL API, an Amazon Cognito user pool, an AWS App Runner service, or an AWS Verified Access instance. Valid Values are `CLOUDFRONT` and `REGIONAL` .
        /// 
        /// &gt; For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .
        /// </summary>
        [Input("scope", required: true)]
        public Pulumi.AwsNative.WaFv2.IpSetScope Scope { get; set; }

        public GetIpSetArgs()
        {
        }
        public static new GetIpSetArgs Empty => new GetIpSetArgs();
    }

    public sealed class GetIpSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the IP set.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The name of the IP set. You cannot change the name of an `IPSet` after you create it.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AWS AppSync GraphQL API, an Amazon Cognito user pool, an AWS App Runner service, or an AWS Verified Access instance. Valid Values are `CLOUDFRONT` and `REGIONAL` .
        /// 
        /// &gt; For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` .
        /// </summary>
        [Input("scope", required: true)]
        public Input<Pulumi.AwsNative.WaFv2.IpSetScope> Scope { get; set; } = null!;

        public GetIpSetInvokeArgs()
        {
        }
        public static new GetIpSetInvokeArgs Empty => new GetIpSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpSetResult
    {
        /// <summary>
        /// List of IPAddresses.
        /// </summary>
        public readonly ImmutableArray<string> Addresses;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IP set.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// A description of the IP set that helps with identification.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The ID of the IP set.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The version of the IP addresses, either `IPV4` or `IPV6` .
        /// </summary>
        public readonly Pulumi.AwsNative.WaFv2.IpSetIpAddressVersion? IpAddressVersion;
        /// <summary>
        /// Key:value pairs associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as "environment") and the tag value represents a specific value within that category (such as "test," "development," or "production"). You can add up to 50 tags to each AWS resource.
        /// 
        /// &gt; To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetIpSetResult(
            ImmutableArray<string> addresses,

            string? arn,

            string? description,

            string? id,

            Pulumi.AwsNative.WaFv2.IpSetIpAddressVersion? ipAddressVersion,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Addresses = addresses;
            Arn = arn;
            Description = description;
            Id = id;
            IpAddressVersion = ipAddressVersion;
            Tags = tags;
        }
    }
}
