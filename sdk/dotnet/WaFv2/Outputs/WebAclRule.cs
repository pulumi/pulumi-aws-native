// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WaFv2.Outputs
{

    /// <summary>
    /// Rule of WebACL that contains condition and action.
    /// </summary>
    [OutputType]
    public sealed class WebAclRule
    {
        /// <summary>
        /// The action that AWS WAF should take on a web request when it matches a rule's statement. Settings at the web ACL level can override the rule action setting.
        /// </summary>
        public readonly Outputs.WebAclRuleAction? Action;
        /// <summary>
        /// Specifies how AWS WAF should handle `CAPTCHA` evaluations for rules that don't have their own `CaptchaConfig` settings. If you don't specify this, AWS WAF uses its default settings for `CaptchaConfig` .
        /// </summary>
        public readonly Outputs.WebAclCaptchaConfig? CaptchaConfig;
        /// <summary>
        /// Specifies how AWS WAF should handle `Challenge` evaluations. This is available at the web ACL level and in each rule.
        /// </summary>
        public readonly Outputs.WebAclChallengeConfig? ChallengeConfig;
        /// <summary>
        /// The name of the rule.
        /// 
        /// If you change the name of a `Rule` after you create it and you want the rule's metric name to reflect the change, update the metric name in the rule's `VisibilityConfig` settings. AWS WAF doesn't automatically update the metric name when you update the rule name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The action to use in the place of the action that results from the rule group evaluation. Set the override action to none to leave the result of the rule group alone. Set it to count to override the result to count only.
        /// 
        /// You can only use this for rule statements that reference a rule group, like `RuleGroupReferenceStatement` and `ManagedRuleGroupStatement` .
        /// 
        /// &gt; This option is usually set to none. It does not affect how the rules in the rule group are evaluated. If you want the rules in the rule group to only count matches, do not use this and instead use the rule action override option, with `Count` action, in your rule group reference statement settings.
        /// </summary>
        public readonly Outputs.WebAclOverrideAction? OverrideAction;
        /// <summary>
        /// If you define more than one `Rule` in a `WebACL` , AWS WAF evaluates each request against the `Rules` in order based on the value of `Priority` . AWS WAF processes rules with lower priority first. The priorities don't need to be consecutive, but they must all be different.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Collection of Rule Labels.
        /// </summary>
        public readonly ImmutableArray<Outputs.WebAclLabel> RuleLabels;
        /// <summary>
        /// The processing guidance for a rule, used by AWS WAF to determine whether a web request matches the rule.
        /// </summary>
        public readonly Outputs.WebAclStatement Statement;
        /// <summary>
        /// Defines and enables Amazon CloudWatch metrics and web request sample collection.
        /// </summary>
        public readonly Outputs.WebAclVisibilityConfig VisibilityConfig;

        [OutputConstructor]
        private WebAclRule(
            Outputs.WebAclRuleAction? action,

            Outputs.WebAclCaptchaConfig? captchaConfig,

            Outputs.WebAclChallengeConfig? challengeConfig,

            string name,

            Outputs.WebAclOverrideAction? overrideAction,

            int priority,

            ImmutableArray<Outputs.WebAclLabel> ruleLabels,

            Outputs.WebAclStatement statement,

            Outputs.WebAclVisibilityConfig visibilityConfig)
        {
            Action = action;
            CaptchaConfig = captchaConfig;
            ChallengeConfig = challengeConfig;
            Name = name;
            OverrideAction = overrideAction;
            Priority = priority;
            RuleLabels = ruleLabels;
            Statement = statement;
            VisibilityConfig = visibilityConfig;
        }
    }
}
