// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WaFv2.Outputs
{

    /// <summary>
    /// Rule of WebACL that contains condition and action.
    /// </summary>
    [OutputType]
    public sealed class WebAclRule
    {
        /// <summary>
        /// The action that AWS WAF should take on a web request when it matches the rule's statement. Settings at the web ACL level can override the rule action setting.
        /// 
        /// This is used only for rules whose statements don't reference a rule group. Rule statements that reference a rule group are `RuleGroupReferenceStatement` and `ManagedRuleGroupStatement` .
        /// 
        /// You must set either this `Action` setting or the rule's `OverrideAction` , but not both:
        /// 
        /// - If the rule statement doesn't reference a rule group, you must set this rule action setting and you must not set the rule's override action setting.
        /// - If the rule statement references a rule group, you must not set this action setting, because the actions are already set on the rules inside the rule group. You must set the rule's override action setting to indicate specifically whether to override the actions that are set on the rules in the rule group.
        /// </summary>
        public readonly Outputs.WebAclRuleAction? Action;
        /// <summary>
        /// Specifies how AWS WAF should handle `CAPTCHA` evaluations. If you don't specify this, AWS WAF uses the `CAPTCHA` configuration that's defined for the web ACL.
        /// </summary>
        public readonly Outputs.WebAclCaptchaConfig? CaptchaConfig;
        /// <summary>
        /// Specifies how AWS WAF should handle `Challenge` evaluations. If you don't specify this, AWS WAF uses the challenge configuration that's defined for the web ACL.
        /// </summary>
        public readonly Outputs.WebAclChallengeConfig? ChallengeConfig;
        /// <summary>
        /// The name of the rule.
        /// 
        /// If you change the name of a `Rule` after you create it and you want the rule's metric name to reflect the change, update the metric name in the rule's `VisibilityConfig` settings. AWS WAF doesn't automatically update the metric name when you update the rule name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The override action to apply to the rules in a rule group, instead of the individual rule action settings. This is used only for rules whose statements reference a rule group. Rule statements that reference a rule group are `RuleGroupReferenceStatement` and `ManagedRuleGroupStatement` .
        /// 
        /// Set the override action to none to leave the rule group rule actions in effect. Set it to count to only count matches, regardless of the rule action settings.
        /// 
        /// You must set either this `OverrideAction` setting or the `Action` setting, but not both:
        /// 
        /// - If the rule statement references a rule group, you must set this override action setting and you must not set the rule's action setting.
        /// - If the rule statement doesn't reference a rule group, you must set the rule action setting and you must not set the rule's override action setting.
        /// </summary>
        public readonly Outputs.WebAclOverrideAction? OverrideAction;
        /// <summary>
        /// If you define more than one `Rule` in a `WebACL` , AWS WAF evaluates each request against the `Rules` in order based on the value of `Priority` . AWS WAF processes rules with lower priority first. The priorities don't need to be consecutive, but they must all be different.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Collection of Rule Labels.
        /// </summary>
        public readonly ImmutableArray<Outputs.WebAclLabel> RuleLabels;
        /// <summary>
        /// The AWS WAF processing statement for the rule, for example `ByteMatchStatement` or `SizeConstraintStatement` .
        /// </summary>
        public readonly Outputs.WebAclStatement Statement;
        /// <summary>
        /// Defines and enables Amazon CloudWatch metrics and web request sample collection.
        /// 
        /// If you change the name of a `Rule` after you create it and you want the rule's metric name to reflect the change, update the metric name as well. AWS WAF doesn't automatically update the metric name.
        /// </summary>
        public readonly Outputs.WebAclVisibilityConfig VisibilityConfig;

        [OutputConstructor]
        private WebAclRule(
            Outputs.WebAclRuleAction? action,

            Outputs.WebAclCaptchaConfig? captchaConfig,

            Outputs.WebAclChallengeConfig? challengeConfig,

            string name,

            Outputs.WebAclOverrideAction? overrideAction,

            int priority,

            ImmutableArray<Outputs.WebAclLabel> ruleLabels,

            Outputs.WebAclStatement statement,

            Outputs.WebAclVisibilityConfig visibilityConfig)
        {
            Action = action;
            CaptchaConfig = captchaConfig;
            ChallengeConfig = challengeConfig;
            Name = name;
            OverrideAction = overrideAction;
            Priority = priority;
            RuleLabels = ruleLabels;
            Statement = statement;
            VisibilityConfig = visibilityConfig;
        }
    }
}
