// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WaFv2
{
    public static class GetWebAcl
    {
        /// <summary>
        /// Contains the Rules that identify the requests that you want to allow, block, or count. In a WebACL, you also specify a default action (ALLOW or BLOCK), and the action for each Rule that you add to a WebACL, for example, block requests from specified IP addresses or block requests from specified referrers. You also associate the WebACL with a CloudFront distribution to identify the requests that you want AWS WAF to filter. If you add more than one Rule to a WebACL, a request needs to match only one of the specifications to be allowed, blocked, or counted.
        /// </summary>
        public static Task<GetWebAclResult> InvokeAsync(GetWebAclArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWebAclResult>("aws-native:wafv2:getWebAcl", args ?? new GetWebAclArgs(), options.WithDefaults());

        /// <summary>
        /// Contains the Rules that identify the requests that you want to allow, block, or count. In a WebACL, you also specify a default action (ALLOW or BLOCK), and the action for each Rule that you add to a WebACL, for example, block requests from specified IP addresses or block requests from specified referrers. You also associate the WebACL with a CloudFront distribution to identify the requests that you want AWS WAF to filter. If you add more than one Rule to a WebACL, a request needs to match only one of the specifications to be allowed, blocked, or counted.
        /// </summary>
        public static Output<GetWebAclResult> Invoke(GetWebAclInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebAclResult>("aws-native:wafv2:getWebAcl", args ?? new GetWebAclInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Contains the Rules that identify the requests that you want to allow, block, or count. In a WebACL, you also specify a default action (ALLOW or BLOCK), and the action for each Rule that you add to a WebACL, for example, block requests from specified IP addresses or block requests from specified referrers. You also associate the WebACL with a CloudFront distribution to identify the requests that you want AWS WAF to filter. If you add more than one Rule to a WebACL, a request needs to match only one of the specifications to be allowed, blocked, or counted.
        /// </summary>
        public static Output<GetWebAclResult> Invoke(GetWebAclInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebAclResult>("aws-native:wafv2:getWebAcl", args ?? new GetWebAclInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebAclArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the web ACL.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The name of the web ACL. You cannot change the name of a web ACL after you create it.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies whether this is for an Amazon CloudFront distribution or for a regional application. For an AWS Amplify application, use `CLOUDFRONT` . A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AWS AppSync GraphQL API, an Amazon Cognito user pool, an AWS App Runner service, or an AWS Verified Access instance. Valid Values are `CLOUDFRONT` and `REGIONAL` .
        /// 
        /// &gt; For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` . 
        /// 
        /// For information about how to define the association of the web ACL with your resource, see `WebACLAssociation` .
        /// </summary>
        [Input("scope", required: true)]
        public Pulumi.AwsNative.WaFv2.WebAclScope Scope { get; set; }

        public GetWebAclArgs()
        {
        }
        public static new GetWebAclArgs Empty => new GetWebAclArgs();
    }

    public sealed class GetWebAclInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the web ACL.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The name of the web ACL. You cannot change the name of a web ACL after you create it.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies whether this is for an Amazon CloudFront distribution or for a regional application. For an AWS Amplify application, use `CLOUDFRONT` . A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AWS AppSync GraphQL API, an Amazon Cognito user pool, an AWS App Runner service, or an AWS Verified Access instance. Valid Values are `CLOUDFRONT` and `REGIONAL` .
        /// 
        /// &gt; For `CLOUDFRONT` , you must create your WAFv2 resources in the US East (N. Virginia) Region, `us-east-1` . 
        /// 
        /// For information about how to define the association of the web ACL with your resource, see `WebACLAssociation` .
        /// </summary>
        [Input("scope", required: true)]
        public Input<Pulumi.AwsNative.WaFv2.WebAclScope> Scope { get; set; } = null!;

        public GetWebAclInvokeArgs()
        {
        }
        public static new GetWebAclInvokeArgs Empty => new GetWebAclInvokeArgs();
    }


    [OutputType]
    public sealed class GetWebAclResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the web ACL.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Specifies custom configurations for the associations between the web ACL and protected resources.
        /// 
        /// Use this to customize the maximum size of the request body that your protected resources forward to AWS WAF for inspection. You can customize this setting for CloudFront, API Gateway, Amazon Cognito, App Runner, or Verified Access resources. The default setting is 16 KB (16,384 bytes).
        /// 
        /// &gt; You are charged additional fees when your protected resources forward body sizes that are larger than the default. For more information, see [AWS WAF Pricing](https://docs.aws.amazon.com/waf/pricing/) . 
        /// 
        /// For Application Load Balancer and AWS AppSync , the limit is fixed at 8 KB (8,192 bytes).
        /// </summary>
        public readonly Outputs.WebAclAssociationConfig? AssociationConfig;
        /// <summary>
        /// The web ACL capacity units (WCUs) currently being used by this web ACL.
        /// 
        /// AWS WAF uses WCUs to calculate and control the operating resources that are used to run your rules, rule groups, and web ACLs. AWS WAF calculates capacity differently for each rule type, to reflect the relative cost of each rule. Simple rules that cost little to run use fewer WCUs than more complex rules that use more processing power. Rule group capacity is fixed at creation, which helps users plan their web ACL WCU usage when they use a rule group. The WCU limit for web ACLs is 1,500.
        /// </summary>
        public readonly int? Capacity;
        /// <summary>
        /// Specifies how AWS WAF should handle `CAPTCHA` evaluations for rules that don't have their own `CaptchaConfig` settings. If you don't specify this, AWS WAF uses its default settings for `CaptchaConfig` .
        /// </summary>
        public readonly Outputs.WebAclCaptchaConfig? CaptchaConfig;
        /// <summary>
        /// Specifies how AWS WAF should handle challenge evaluations for rules that don't have their own `ChallengeConfig` settings. If you don't specify this, AWS WAF uses its default settings for `ChallengeConfig` .
        /// </summary>
        public readonly Outputs.WebAclChallengeConfig? ChallengeConfig;
        /// <summary>
        /// A map of custom response keys and content bodies. When you create a rule with a block action, you can send a custom response to the web request. You define these for the web ACL, and then use them in the rules and default actions that you define in the web ACL.
        /// 
        /// For information about customizing web requests and responses, see [Customizing web requests and responses in AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html) in the *AWS WAF Developer Guide* .
        /// 
        /// For information about the limits on count and size for custom request and response settings, see [AWS WAF quotas](https://docs.aws.amazon.com/waf/latest/developerguide/limits.html) in the *AWS WAF Developer Guide* .
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.WebAclCustomResponseBody>? CustomResponseBodies;
        /// <summary>
        /// Collection of dataProtects.
        /// </summary>
        public readonly Outputs.WebAclDataProtectionConfig? DataProtectionConfig;
        /// <summary>
        /// The action to perform if none of the `Rules` contained in the `WebACL` match.
        /// </summary>
        public readonly Outputs.WebAclDefaultAction? DefaultAction;
        /// <summary>
        /// A description of the web ACL that helps with identification.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The ID of the web ACL.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The label namespace prefix for this web ACL. All labels added by rules in this web ACL have this prefix.
        /// 
        /// The syntax for the label namespace prefix for a web ACL is the following: `awswaf:&lt;account ID&gt;:webacl:&lt;web ACL name&gt;:`
        /// 
        /// When a rule with a label matches a web request, AWS WAF adds the fully qualified label to the request. A fully qualified label is made up of the label namespace from the rule group or web ACL where the rule is defined and the label from the rule, separated by a colon.
        /// </summary>
        public readonly string? LabelNamespace;
        /// <summary>
        /// Configures the level of DDoS protection that applies to web ACLs associated with Application Load Balancers.
        /// </summary>
        public readonly Outputs.WebAclOnSourceDDoSProtectionConfig? OnSourceDDoSProtectionConfig;
        /// <summary>
        /// Collection of Rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.WebAclRule> Rules;
        /// <summary>
        /// Key:value pairs associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as "environment") and the tag value represents a specific value within that category (such as "test," "development," or "production"). You can add up to 50 tags to each AWS resource.
        /// 
        /// &gt; To modify tags on existing resources, use the AWS WAF APIs or command line interface. With AWS CloudFormation , you can only add tags to AWS WAF resources during resource creation.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// Specifies the domains that AWS WAF should accept in a web request token. This enables the use of tokens across multiple protected websites. When AWS WAF provides a token, it uses the domain of the AWS resource that the web ACL is protecting. If you don't specify a list of token domains, AWS WAF accepts tokens only for the domain of the protected resource. With a token domain list, AWS WAF accepts the resource's host domain plus all domains in the token domain list, including their prefixed subdomains.
        /// </summary>
        public readonly ImmutableArray<string> TokenDomains;
        /// <summary>
        /// Defines and enables Amazon CloudWatch metrics and web request sample collection.
        /// </summary>
        public readonly Outputs.WebAclVisibilityConfig? VisibilityConfig;

        [OutputConstructor]
        private GetWebAclResult(
            string? arn,

            Outputs.WebAclAssociationConfig? associationConfig,

            int? capacity,

            Outputs.WebAclCaptchaConfig? captchaConfig,

            Outputs.WebAclChallengeConfig? challengeConfig,

            ImmutableDictionary<string, Outputs.WebAclCustomResponseBody>? customResponseBodies,

            Outputs.WebAclDataProtectionConfig? dataProtectionConfig,

            Outputs.WebAclDefaultAction? defaultAction,

            string? description,

            string? id,

            string? labelNamespace,

            Outputs.WebAclOnSourceDDoSProtectionConfig? onSourceDDoSProtectionConfig,

            ImmutableArray<Outputs.WebAclRule> rules,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            ImmutableArray<string> tokenDomains,

            Outputs.WebAclVisibilityConfig? visibilityConfig)
        {
            Arn = arn;
            AssociationConfig = associationConfig;
            Capacity = capacity;
            CaptchaConfig = captchaConfig;
            ChallengeConfig = challengeConfig;
            CustomResponseBodies = customResponseBodies;
            DataProtectionConfig = dataProtectionConfig;
            DefaultAction = defaultAction;
            Description = description;
            Id = id;
            LabelNamespace = labelNamespace;
            OnSourceDDoSProtectionConfig = onSourceDDoSProtectionConfig;
            Rules = rules;
            Tags = tags;
            TokenDomains = tokenDomains;
            VisibilityConfig = visibilityConfig;
        }
    }
}
