// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WaFv2
{
    public static class GetWebAcl
    {
        /// <summary>
        /// Contains the Rules that identify the requests that you want to allow, block, or count. In a WebACL, you also specify a default action (ALLOW or BLOCK), and the action for each Rule that you add to a WebACL, for example, block requests from specified IP addresses or block requests from specified referrers. You also associate the WebACL with a CloudFront distribution to identify the requests that you want AWS WAF to filter. If you add more than one Rule to a WebACL, a request needs to match only one of the specifications to be allowed, blocked, or counted.
        /// </summary>
        public static Task<GetWebAclResult> InvokeAsync(GetWebAclArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWebAclResult>("aws-native:wafv2:getWebAcl", args ?? new GetWebAclArgs(), options.WithDefaults());

        /// <summary>
        /// Contains the Rules that identify the requests that you want to allow, block, or count. In a WebACL, you also specify a default action (ALLOW or BLOCK), and the action for each Rule that you add to a WebACL, for example, block requests from specified IP addresses or block requests from specified referrers. You also associate the WebACL with a CloudFront distribution to identify the requests that you want AWS WAF to filter. If you add more than one Rule to a WebACL, a request needs to match only one of the specifications to be allowed, blocked, or counted.
        /// </summary>
        public static Output<GetWebAclResult> Invoke(GetWebAclInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebAclResult>("aws-native:wafv2:getWebAcl", args ?? new GetWebAclInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebAclArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("scope", required: true)]
        public Pulumi.AwsNative.WaFv2.WebAclScope Scope { get; set; }

        public GetWebAclArgs()
        {
        }
        public static new GetWebAclArgs Empty => new GetWebAclArgs();
    }

    public sealed class GetWebAclInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("scope", required: true)]
        public Input<Pulumi.AwsNative.WaFv2.WebAclScope> Scope { get; set; } = null!;

        public GetWebAclInvokeArgs()
        {
        }
        public static new GetWebAclInvokeArgs Empty => new GetWebAclInvokeArgs();
    }


    [OutputType]
    public sealed class GetWebAclResult
    {
        public readonly string? Arn;
        public readonly Outputs.WebAclAssociationConfig? AssociationConfig;
        public readonly int? Capacity;
        public readonly Outputs.WebAclCaptchaConfig? CaptchaConfig;
        public readonly Outputs.WebAclChallengeConfig? ChallengeConfig;
        public readonly ImmutableDictionary<string, Outputs.WebAclCustomResponseBody>? CustomResponseBodies;
        public readonly Outputs.WebAclDefaultAction? DefaultAction;
        public readonly string? Description;
        public readonly string? Id;
        public readonly string? LabelNamespace;
        /// <summary>
        /// Collection of Rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.WebAclRule> Rules;
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        public readonly ImmutableArray<string> TokenDomains;
        public readonly Outputs.WebAclVisibilityConfig? VisibilityConfig;

        [OutputConstructor]
        private GetWebAclResult(
            string? arn,

            Outputs.WebAclAssociationConfig? associationConfig,

            int? capacity,

            Outputs.WebAclCaptchaConfig? captchaConfig,

            Outputs.WebAclChallengeConfig? challengeConfig,

            ImmutableDictionary<string, Outputs.WebAclCustomResponseBody>? customResponseBodies,

            Outputs.WebAclDefaultAction? defaultAction,

            string? description,

            string? id,

            string? labelNamespace,

            ImmutableArray<Outputs.WebAclRule> rules,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            ImmutableArray<string> tokenDomains,

            Outputs.WebAclVisibilityConfig? visibilityConfig)
        {
            Arn = arn;
            AssociationConfig = associationConfig;
            Capacity = capacity;
            CaptchaConfig = captchaConfig;
            ChallengeConfig = challengeConfig;
            CustomResponseBodies = customResponseBodies;
            DefaultAction = defaultAction;
            Description = description;
            Id = id;
            LabelNamespace = labelNamespace;
            Rules = rules;
            Tags = tags;
            TokenDomains = tokenDomains;
            VisibilityConfig = visibilityConfig;
        }
    }
}
