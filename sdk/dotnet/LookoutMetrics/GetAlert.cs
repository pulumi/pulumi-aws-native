// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.LookoutMetrics
{
    public static class GetAlert
    {
        /// <summary>
        /// Resource Type definition for AWS::LookoutMetrics::Alert
        /// </summary>
        public static Task<GetAlertResult> InvokeAsync(GetAlertArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlertResult>("aws-native:lookoutmetrics:getAlert", args ?? new GetAlertArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::LookoutMetrics::Alert
        /// </summary>
        public static Output<GetAlertResult> Invoke(GetAlertInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertResult>("aws-native:lookoutmetrics:getAlert", args ?? new GetAlertInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlertArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN assigned to the alert.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetAlertArgs()
        {
        }
        public static new GetAlertArgs Empty => new GetAlertArgs();
    }

    public sealed class GetAlertInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN assigned to the alert.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetAlertInvokeArgs()
        {
        }
        public static new GetAlertInvokeArgs Empty => new GetAlertInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlertResult
    {
        /// <summary>
        /// ARN assigned to the alert.
        /// </summary>
        public readonly string? Arn;

        [OutputConstructor]
        private GetAlertResult(string? arn)
        {
            Arn = arn;
        }
    }
}
