// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.LookoutMetrics.Outputs
{

    [OutputType]
    public sealed class AnomalyDetectorCsvFormatDescriptor
    {
        /// <summary>
        /// The character set in which the source CSV file is written.
        /// </summary>
        public readonly string? Charset;
        /// <summary>
        /// Whether or not the source CSV file contains a header.
        /// </summary>
        public readonly bool? ContainsHeader;
        /// <summary>
        /// The character used to delimit the source CSV file.
        /// </summary>
        public readonly string? Delimiter;
        /// <summary>
        /// The level of compression of the source CSV file.
        /// </summary>
        public readonly Pulumi.AwsNative.LookoutMetrics.AnomalyDetectorCsvFormatDescriptorFileCompression? FileCompression;
        /// <summary>
        /// A list of the source CSV file's headers, if any.
        /// </summary>
        public readonly ImmutableArray<string> HeaderList;
        /// <summary>
        /// The character used as a quote character.
        /// </summary>
        public readonly string? QuoteSymbol;

        [OutputConstructor]
        private AnomalyDetectorCsvFormatDescriptor(
            string? charset,

            bool? containsHeader,

            string? delimiter,

            Pulumi.AwsNative.LookoutMetrics.AnomalyDetectorCsvFormatDescriptorFileCompression? fileCompression,

            ImmutableArray<string> headerList,

            string? quoteSymbol)
        {
            Charset = charset;
            ContainsHeader = containsHeader;
            Delimiter = delimiter;
            FileCompression = fileCompression;
            HeaderList = headerList;
            QuoteSymbol = quoteSymbol;
        }
    }
}
