// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityLake
{
    /// <summary>
    /// Resource Type definition for AWS::SecurityLake::AwsLogSource
    /// </summary>
    [AwsNativeResourceType("aws-native:securitylake:AwsLogSource")]
    public partial class AwsLogSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// AWS account where you want to collect logs from.
        /// </summary>
        [Output("accounts")]
        public Output<ImmutableArray<string>> Accounts { get; private set; } = null!;

        /// <summary>
        /// The ARN for the data lake.
        /// </summary>
        [Output("dataLakeArn")]
        public Output<string> DataLakeArn { get; private set; } = null!;

        /// <summary>
        /// The name for a AWS source. This must be a Regionally unique value.
        /// </summary>
        [Output("sourceName")]
        public Output<string> SourceName { get; private set; } = null!;

        /// <summary>
        /// The version for a AWS source. This must be a Regionally unique value.
        /// </summary>
        [Output("sourceVersion")]
        public Output<string> SourceVersion { get; private set; } = null!;


        /// <summary>
        /// Create a AwsLogSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AwsLogSource(string name, AwsLogSourceArgs args, CustomResourceOptions? options = null)
            : base("aws-native:securitylake:AwsLogSource", name, args ?? new AwsLogSourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AwsLogSource(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securitylake:AwsLogSource", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "dataLakeArn",
                    "sourceName",
                    "sourceVersion",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AwsLogSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AwsLogSource Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AwsLogSource(name, id, options);
        }
    }

    public sealed class AwsLogSourceArgs : global::Pulumi.ResourceArgs
    {
        [Input("accounts")]
        private InputList<string>? _accounts;

        /// <summary>
        /// AWS account where you want to collect logs from.
        /// </summary>
        public InputList<string> Accounts
        {
            get => _accounts ?? (_accounts = new InputList<string>());
            set => _accounts = value;
        }

        /// <summary>
        /// The ARN for the data lake.
        /// </summary>
        [Input("dataLakeArn", required: true)]
        public Input<string> DataLakeArn { get; set; } = null!;

        /// <summary>
        /// The name for a AWS source. This must be a Regionally unique value.
        /// </summary>
        [Input("sourceName")]
        public Input<string>? SourceName { get; set; }

        /// <summary>
        /// The version for a AWS source. This must be a Regionally unique value.
        /// </summary>
        [Input("sourceVersion", required: true)]
        public Input<string> SourceVersion { get; set; } = null!;

        public AwsLogSourceArgs()
        {
        }
        public static new AwsLogSourceArgs Empty => new AwsLogSourceArgs();
    }
}
