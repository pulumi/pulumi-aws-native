// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityLake
{
    /// <summary>
    /// Resource Type definition for AWS::SecurityLake::Subscriber
    /// </summary>
    [AwsNativeResourceType("aws-native:securitylake:Subscriber")]
    public partial class Subscriber : global::Pulumi.CustomResource
    {
        [Output("accessTypes")]
        public Output<ImmutableArray<Pulumi.AwsNative.SecurityLake.SubscriberAccessTypesItem>> AccessTypes { get; private set; } = null!;

        /// <summary>
        /// The ARN for the data lake.
        /// </summary>
        [Output("dataLakeArn")]
        public Output<string> DataLakeArn { get; private set; } = null!;

        [Output("resourceShareArn")]
        public Output<string> ResourceShareArn { get; private set; } = null!;

        [Output("resourceShareName")]
        public Output<string> ResourceShareName { get; private set; } = null!;

        [Output("s3BucketArn")]
        public Output<string> S3BucketArn { get; private set; } = null!;

        /// <summary>
        /// The supported AWS services from which logs and events are collected.
        /// </summary>
        [Output("sources")]
        public Output<ImmutableArray<Union<Outputs.SubscriberSource0Properties, Outputs.SubscriberSource1Properties>>> Sources { get; private set; } = null!;

        [Output("subscriberArn")]
        public Output<string> SubscriberArn { get; private set; } = null!;

        /// <summary>
        /// The description for your subscriber account in Security Lake.
        /// </summary>
        [Output("subscriberDescription")]
        public Output<string?> SubscriberDescription { get; private set; } = null!;

        /// <summary>
        /// The AWS identity used to access your data.
        /// </summary>
        [Output("subscriberIdentity")]
        public Output<Outputs.SubscriberIdentityProperties> SubscriberIdentity { get; private set; } = null!;

        /// <summary>
        /// The name of your Security Lake subscriber account.
        /// </summary>
        [Output("subscriberName")]
        public Output<string> SubscriberName { get; private set; } = null!;

        [Output("subscriberRoleArn")]
        public Output<string> SubscriberRoleArn { get; private set; } = null!;

        /// <summary>
        /// An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Subscriber resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Subscriber(string name, SubscriberArgs args, CustomResourceOptions? options = null)
            : base("aws-native:securitylake:Subscriber", name, args ?? new SubscriberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Subscriber(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securitylake:Subscriber", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "dataLakeArn",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Subscriber resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Subscriber Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Subscriber(name, id, options);
        }
    }

    public sealed class SubscriberArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessTypes", required: true)]
        private InputList<Pulumi.AwsNative.SecurityLake.SubscriberAccessTypesItem>? _accessTypes;
        public InputList<Pulumi.AwsNative.SecurityLake.SubscriberAccessTypesItem> AccessTypes
        {
            get => _accessTypes ?? (_accessTypes = new InputList<Pulumi.AwsNative.SecurityLake.SubscriberAccessTypesItem>());
            set => _accessTypes = value;
        }

        /// <summary>
        /// The ARN for the data lake.
        /// </summary>
        [Input("dataLakeArn", required: true)]
        public Input<string> DataLakeArn { get; set; } = null!;

        [Input("sources", required: true)]
        private InputList<Union<Inputs.SubscriberSource0PropertiesArgs, Inputs.SubscriberSource1PropertiesArgs>>? _sources;

        /// <summary>
        /// The supported AWS services from which logs and events are collected.
        /// </summary>
        public InputList<Union<Inputs.SubscriberSource0PropertiesArgs, Inputs.SubscriberSource1PropertiesArgs>> Sources
        {
            get => _sources ?? (_sources = new InputList<Union<Inputs.SubscriberSource0PropertiesArgs, Inputs.SubscriberSource1PropertiesArgs>>());
            set => _sources = value;
        }

        /// <summary>
        /// The description for your subscriber account in Security Lake.
        /// </summary>
        [Input("subscriberDescription")]
        public Input<string>? SubscriberDescription { get; set; }

        /// <summary>
        /// The AWS identity used to access your data.
        /// </summary>
        [Input("subscriberIdentity", required: true)]
        public Input<Inputs.SubscriberIdentityPropertiesArgs> SubscriberIdentity { get; set; } = null!;

        /// <summary>
        /// The name of your Security Lake subscriber account.
        /// </summary>
        [Input("subscriberName")]
        public Input<string>? SubscriberName { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public SubscriberArgs()
        {
        }
        public static new SubscriberArgs Empty => new SubscriberArgs();
    }
}
