// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityLake
{
    /// <summary>
    /// Resource Type definition for AWS::SecurityLake::DataLake
    /// </summary>
    [AwsNativeResourceType("aws-native:securitylake:DataLake")]
    public partial class DataLake : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) created by you to provide to the subscriber.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Provides encryption details of the Amazon Security Lake object. The AWS shared responsibility model applies to data protection in Amazon Security Lake . As described in this model, AWS is responsible for protecting the global infrastructure that runs all of the AWS Cloud. You are responsible for maintaining control over your content that is hosted on this infrastructure. For more details, see [Data protection](https://docs.aws.amazon.com//security-lake/latest/userguide/data-protection.html) in the Amazon Security Lake User Guide.
        /// </summary>
        [Output("encryptionConfiguration")]
        public Output<Outputs.DataLakeEncryptionConfiguration?> EncryptionConfiguration { get; private set; } = null!;

        /// <summary>
        /// Provides lifecycle details of Amazon Security Lake object. To manage your data so that it is stored cost effectively, you can configure retention settings for the data. You can specify your preferred Amazon S3 storage class and the time period for Amazon S3 objects to stay in that storage class before they transition to a different storage class or expire. For more information about Amazon S3 Lifecycle configurations, see [Managing your storage lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html) in the *Amazon Simple Storage Service User Guide* .
        /// 
        /// In Security Lake , you specify retention settings at the Region level. For example, you might choose to transition all S3 objects in a specific AWS Region to the `S3 Standard-IA` storage class 30 days after they're written to the data lake. The default Amazon S3 storage class is S3 Standard.
        /// 
        /// &gt; Security Lake doesn't support Amazon S3 Object Lock. When the data lake buckets are created, S3 Object Lock is disabled by default. Enabling S3 Object Lock with default retention mode interrupts the delivery of normalized log data to the data lake.
        /// </summary>
        [Output("lifecycleConfiguration")]
        public Output<Outputs.DataLakeLifecycleConfiguration?> LifecycleConfiguration { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) used to index AWS Glue table partitions that are generated by the ingestion and normalization of AWS log sources and custom sources.
        /// </summary>
        [Output("metaStoreManagerRoleArn")]
        public Output<string?> MetaStoreManagerRoleArn { get; private set; } = null!;

        /// <summary>
        /// Provides replication configuration details for objects stored in the Amazon Security Lake data lake.
        /// </summary>
        [Output("replicationConfiguration")]
        public Output<Outputs.DataLakeReplicationConfiguration?> ReplicationConfiguration { get; private set; } = null!;

        /// <summary>
        /// The ARN for the Amazon Security Lake Amazon S3 bucket.
        /// </summary>
        [Output("s3BucketArn")]
        public Output<string> S3BucketArn { get; private set; } = null!;

        /// <summary>
        /// A *tag* is a label that you can define and associate with AWS resources, including certain types of Amazon Security Lake resources. Tags can help you identify, categorize, and manage resources in different ways, such as by owner, environment, or other criteria. You can associate tags with the following types of Security Lake resources: subscribers, and the data lake configuration for your AWS account in individual AWS Regions .
        /// 
        /// A resource can have up to 50 tags. Each tag consists of a required *tag key* and an associated *tag value* . A *tag key* is a general label that acts as a category for a more specific tag value. Each tag key must be unique and it can have only one tag value. A *tag value* acts as a descriptor for a tag key. Tag keys and values are case sensitive. They can contain letters, numbers, spaces, or the following symbols: _ . : / = + @ -
        /// 
        /// For more information, see [Tagging Amazon Security Lake resources](https://docs.aws.amazon.com//security-lake/latest/userguide/tagging-resources.html) in the *Amazon Security Lake User Guide* .
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DataLake resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataLake(string name, DataLakeArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:securitylake:DataLake", name, args ?? new DataLakeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataLake(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securitylake:DataLake", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataLake resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataLake Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DataLake(name, id, options);
        }
    }

    public sealed class DataLakeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Provides encryption details of the Amazon Security Lake object. The AWS shared responsibility model applies to data protection in Amazon Security Lake . As described in this model, AWS is responsible for protecting the global infrastructure that runs all of the AWS Cloud. You are responsible for maintaining control over your content that is hosted on this infrastructure. For more details, see [Data protection](https://docs.aws.amazon.com//security-lake/latest/userguide/data-protection.html) in the Amazon Security Lake User Guide.
        /// </summary>
        [Input("encryptionConfiguration")]
        public Input<Inputs.DataLakeEncryptionConfigurationArgs>? EncryptionConfiguration { get; set; }

        /// <summary>
        /// Provides lifecycle details of Amazon Security Lake object. To manage your data so that it is stored cost effectively, you can configure retention settings for the data. You can specify your preferred Amazon S3 storage class and the time period for Amazon S3 objects to stay in that storage class before they transition to a different storage class or expire. For more information about Amazon S3 Lifecycle configurations, see [Managing your storage lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html) in the *Amazon Simple Storage Service User Guide* .
        /// 
        /// In Security Lake , you specify retention settings at the Region level. For example, you might choose to transition all S3 objects in a specific AWS Region to the `S3 Standard-IA` storage class 30 days after they're written to the data lake. The default Amazon S3 storage class is S3 Standard.
        /// 
        /// &gt; Security Lake doesn't support Amazon S3 Object Lock. When the data lake buckets are created, S3 Object Lock is disabled by default. Enabling S3 Object Lock with default retention mode interrupts the delivery of normalized log data to the data lake.
        /// </summary>
        [Input("lifecycleConfiguration")]
        public Input<Inputs.DataLakeLifecycleConfigurationArgs>? LifecycleConfiguration { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) used to index AWS Glue table partitions that are generated by the ingestion and normalization of AWS log sources and custom sources.
        /// </summary>
        [Input("metaStoreManagerRoleArn")]
        public Input<string>? MetaStoreManagerRoleArn { get; set; }

        /// <summary>
        /// Provides replication configuration details for objects stored in the Amazon Security Lake data lake.
        /// </summary>
        [Input("replicationConfiguration")]
        public Input<Inputs.DataLakeReplicationConfigurationArgs>? ReplicationConfiguration { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A *tag* is a label that you can define and associate with AWS resources, including certain types of Amazon Security Lake resources. Tags can help you identify, categorize, and manage resources in different ways, such as by owner, environment, or other criteria. You can associate tags with the following types of Security Lake resources: subscribers, and the data lake configuration for your AWS account in individual AWS Regions .
        /// 
        /// A resource can have up to 50 tags. Each tag consists of a required *tag key* and an associated *tag value* . A *tag key* is a general label that acts as a category for a more specific tag value. Each tag key must be unique and it can have only one tag value. A *tag value* acts as a descriptor for a tag key. Tag keys and values are case sensitive. They can contain letters, numbers, spaces, or the following symbols: _ . : / = + @ -
        /// 
        /// For more information, see [Tagging Amazon Security Lake resources](https://docs.aws.amazon.com//security-lake/latest/userguide/tagging-resources.html) in the *Amazon Security Lake User Guide* .
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public DataLakeArgs()
        {
        }
        public static new DataLakeArgs Empty => new DataLakeArgs();
    }
}
