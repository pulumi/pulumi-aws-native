// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Amplify
{
    /// <summary>
    /// The AWS::Amplify::Domain resource allows you to connect a custom domain to your app.
    /// </summary>
    [AwsNativeResourceType("aws-native:amplify:Domain")]
    public partial class Domain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The unique ID for an Amplify app.
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// ARN for the Domain Association.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Sets the branch patterns for automatic subdomain creation.
        /// </summary>
        [Output("autoSubDomainCreationPatterns")]
        public Output<ImmutableArray<string>> AutoSubDomainCreationPatterns { get; private set; } = null!;

        /// <summary>
        /// The required AWS Identity and Access Management (IAMlong) service role for the Amazon Resource Name (ARN) for automatically creating subdomains.
        /// </summary>
        [Output("autoSubDomainIamRole")]
        public Output<string?> AutoSubDomainIamRole { get; private set; } = null!;

        /// <summary>
        /// Describes the SSL/TLS certificate for the domain association. This can be your own custom certificate or the default certificate that Amplify provisions for you.
        /// 
        /// If you are updating your domain to use a different certificate, `Certificate` points to the new certificate that is being created instead of the current active certificate. Otherwise, `Certificate` points to the current active certificate.
        /// </summary>
        [Output("certificate")]
        public Output<Outputs.DomainCertificate> Certificate { get; private set; } = null!;

        /// <summary>
        /// DNS Record for certificate verification.
        /// </summary>
        [Output("certificateRecord")]
        public Output<string> CertificateRecord { get; private set; } = null!;

        /// <summary>
        /// The type of SSL/TLS certificate to use for your custom domain. If a certificate type isn't specified, Amplify uses the default `AMPLIFY_MANAGED` certificate.
        /// </summary>
        [Output("certificateSettings")]
        public Output<Outputs.DomainCertificateSettings?> CertificateSettings { get; private set; } = null!;

        /// <summary>
        /// The domain name for the domain association.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// Status for the Domain Association.
        /// </summary>
        [Output("domainStatus")]
        public Output<string> DomainStatus { get; private set; } = null!;

        /// <summary>
        /// Enables the automated creation of subdomains for branches.
        /// </summary>
        [Output("enableAutoSubDomain")]
        public Output<bool?> EnableAutoSubDomain { get; private set; } = null!;

        /// <summary>
        /// Reason for the current status of the domain.
        /// </summary>
        [Output("statusReason")]
        public Output<string> StatusReason { get; private set; } = null!;

        /// <summary>
        /// The SubDomainSetting property type enables you to connect a subdomain (for example, example.exampledomain.com) to a specific branch.
        /// </summary>
        [Output("subDomainSettings")]
        public Output<ImmutableArray<Outputs.DomainSubDomainSetting>> SubDomainSettings { get; private set; } = null!;

        /// <summary>
        /// The status of the domain update operation that is currently in progress. The following list describes the valid update states.
        /// 
        /// - **REQUESTING_CERTIFICATE** - The certificate is in the process of being updated.
        /// - **PENDING_VERIFICATION** - Indicates that an Amplify managed certificate is in the process of being verified. This occurs during the creation of a custom domain or when a custom domain is updated to use a managed certificate.
        /// - **IMPORTING_CUSTOM_CERTIFICATE** - Indicates that an Amplify custom certificate is in the process of being imported. This occurs during the creation of a custom domain or when a custom domain is updated to use a custom certificate.
        /// - **PENDING_DEPLOYMENT** - Indicates that the subdomain or certificate changes are being propagated.
        /// - **AWAITING_APP_CNAME** - Amplify is waiting for CNAME records corresponding to subdomains to be propagated. If your custom domain is on RouteÂ 53, Amplify handles this for you automatically. For more information about custom domains, see [Setting up custom domains](https://docs.aws.amazon.com/amplify/latest/userguide/custom-domains.html) in the *Amplify Hosting User Guide* .
        /// - **UPDATE_COMPLETE** - The certificate has been associated with a domain.
        /// - **UPDATE_FAILED** - The certificate has failed to be provisioned or associated, and there is no existing active certificate to roll back to.
        /// </summary>
        [Output("updateStatus")]
        public Output<string> UpdateStatus { get; private set; } = null!;


        /// <summary>
        /// Create a Domain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Domain(string name, DomainArgs args, CustomResourceOptions? options = null)
            : base("aws-native:amplify:Domain", name, args ?? new DomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Domain(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:amplify:Domain", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "appId",
                    "domainName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Domain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Domain Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Domain(name, id, options);
        }
    }

    public sealed class DomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique ID for an Amplify app.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("autoSubDomainCreationPatterns")]
        private InputList<string>? _autoSubDomainCreationPatterns;

        /// <summary>
        /// Sets the branch patterns for automatic subdomain creation.
        /// </summary>
        public InputList<string> AutoSubDomainCreationPatterns
        {
            get => _autoSubDomainCreationPatterns ?? (_autoSubDomainCreationPatterns = new InputList<string>());
            set => _autoSubDomainCreationPatterns = value;
        }

        /// <summary>
        /// The required AWS Identity and Access Management (IAMlong) service role for the Amazon Resource Name (ARN) for automatically creating subdomains.
        /// </summary>
        [Input("autoSubDomainIamRole")]
        public Input<string>? AutoSubDomainIamRole { get; set; }

        /// <summary>
        /// The type of SSL/TLS certificate to use for your custom domain. If a certificate type isn't specified, Amplify uses the default `AMPLIFY_MANAGED` certificate.
        /// </summary>
        [Input("certificateSettings")]
        public Input<Inputs.DomainCertificateSettingsArgs>? CertificateSettings { get; set; }

        /// <summary>
        /// The domain name for the domain association.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Enables the automated creation of subdomains for branches.
        /// </summary>
        [Input("enableAutoSubDomain")]
        public Input<bool>? EnableAutoSubDomain { get; set; }

        [Input("subDomainSettings", required: true)]
        private InputList<Inputs.DomainSubDomainSettingArgs>? _subDomainSettings;

        /// <summary>
        /// The SubDomainSetting property type enables you to connect a subdomain (for example, example.exampledomain.com) to a specific branch.
        /// </summary>
        public InputList<Inputs.DomainSubDomainSettingArgs> SubDomainSettings
        {
            get => _subDomainSettings ?? (_subDomainSettings = new InputList<Inputs.DomainSubDomainSettingArgs>());
            set => _subDomainSettings = value;
        }

        public DomainArgs()
        {
        }
        public static new DomainArgs Empty => new DomainArgs();
    }
}
