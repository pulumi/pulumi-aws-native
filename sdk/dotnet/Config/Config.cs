// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.AwsNative
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("aws-native");

        private static readonly __Value<string?> _accessKey = new __Value<string?>(() => __config.Get("accessKey"));
        /// <summary>
        /// The access key for API operations. You can retrieve this from the ‘Security &amp; Credentials’ section of the AWS console.
        /// </summary>
        public static string? AccessKey
        {
            get => _accessKey.Get();
            set => _accessKey.Set(value);
        }

        private static readonly __Value<ImmutableArray<string>> _allowedAccountIds = new __Value<ImmutableArray<string>>(() => __config.GetObject<ImmutableArray<string>>("allowedAccountIds"));
        /// <summary>
        /// List of allowed AWS account IDs to prevent you from mistakenly using an incorrect one. Conflicts with `forbiddenAccountIds`.
        /// </summary>
        public static ImmutableArray<string> AllowedAccountIds
        {
            get => _allowedAccountIds.Get();
            set => _allowedAccountIds.Set(value);
        }

        private static readonly __Value<Pulumi.AwsNative.Config.Types.AssumeRole?> _assumeRole = new __Value<Pulumi.AwsNative.Config.Types.AssumeRole?>(() => __config.GetObject<Pulumi.AwsNative.Config.Types.AssumeRole>("assumeRole"));
        /// <summary>
        /// Configuration for retrieving temporary credentials from the STS service.
        /// </summary>
        public static Pulumi.AwsNative.Config.Types.AssumeRole? AssumeRole
        {
            get => _assumeRole.Get();
            set => _assumeRole.Set(value);
        }

        private static readonly __Value<Pulumi.AwsNative.Config.Types.DefaultTags?> _defaultTags = new __Value<Pulumi.AwsNative.Config.Types.DefaultTags?>(() => __config.GetObject<Pulumi.AwsNative.Config.Types.DefaultTags>("defaultTags"));
        /// <summary>
        /// Configuration block with resource tag settings to apply across all resources handled by this provider. This is designed to replace redundant per-resource `tags` configurations. Provider tags can be overridden with new values, but not excluded from specific resources. To override provider tag values, use the `tags` argument within a resource to configure new tag values for matching keys.
        /// </summary>
        public static Pulumi.AwsNative.Config.Types.DefaultTags? DefaultTags
        {
            get => _defaultTags.Get();
            set => _defaultTags.Set(value);
        }

        private static readonly __Value<Pulumi.AwsNative.Config.Types.Endpoints?> _endpoints = new __Value<Pulumi.AwsNative.Config.Types.Endpoints?>(() => __config.GetObject<Pulumi.AwsNative.Config.Types.Endpoints>("endpoints"));
        /// <summary>
        /// Configuration block for customizing service endpoints.
        /// </summary>
        public static Pulumi.AwsNative.Config.Types.Endpoints? Endpoints
        {
            get => _endpoints.Get();
            set => _endpoints.Set(value);
        }

        private static readonly __Value<ImmutableArray<string>> _forbiddenAccountIds = new __Value<ImmutableArray<string>>(() => __config.GetObject<ImmutableArray<string>>("forbiddenAccountIds"));
        /// <summary>
        /// List of forbidden AWS account IDs to prevent you from mistakenly using the wrong one (and potentially end up destroying a live environment). Conflicts with `allowedAccountIds`.
        /// </summary>
        public static ImmutableArray<string> ForbiddenAccountIds
        {
            get => _forbiddenAccountIds.Get();
            set => _forbiddenAccountIds.Set(value);
        }

        private static readonly __Value<Pulumi.AwsNative.Config.Types.IgnoreTags?> _ignoreTags = new __Value<Pulumi.AwsNative.Config.Types.IgnoreTags?>(() => __config.GetObject<Pulumi.AwsNative.Config.Types.IgnoreTags>("ignoreTags"));
        /// <summary>
        /// Configuration block with resource tag settings to ignore across all resources handled by this provider (except any individual service tag resources such as `ec2.Tag`) for situations where external systems are managing certain resource tags.
        /// </summary>
        public static Pulumi.AwsNative.Config.Types.IgnoreTags? IgnoreTags
        {
            get => _ignoreTags.Get();
            set => _ignoreTags.Set(value);
        }

        private static readonly __Value<bool?> _insecure = new __Value<bool?>(() => __config.GetBoolean("insecure"));
        /// <summary>
        /// Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`.
        /// </summary>
        public static bool? Insecure
        {
            get => _insecure.Get();
            set => _insecure.Set(value);
        }

        private static readonly __Value<int?> _maxRetries = new __Value<int?>(() => __config.GetInt32("maxRetries"));
        /// <summary>
        /// The maximum number of times an AWS API request is being executed. If the API request still fails, an error is thrown.
        /// </summary>
        public static int? MaxRetries
        {
            get => _maxRetries.Get();
            set => _maxRetries.Set(value);
        }

        private static readonly __Value<string?> _profile = new __Value<string?>(() => __config.Get("profile"));
        /// <summary>
        /// The profile for API operations. If not set, the default profile created with `aws configure` will be used.
        /// </summary>
        public static string? Profile
        {
            get => _profile.Get();
            set => _profile.Set(value);
        }

        private static readonly __Value<string?> _region = new __Value<string?>(() => __config.Get("region"));
        /// <summary>
        /// The region where AWS operations will take place. Examples are `us-east-1`, `us-west-2`, etc.
        /// </summary>
        public static string? Region
        {
            get => _region.Get();
            set => _region.Set(value);
        }

        private static readonly __Value<string?> _roleArn = new __Value<string?>(() => __config.Get("roleArn"));
        /// <summary>
        /// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role for Cloud Control API to use when performing this resource operation. Note, this is a unique feature for server side security enforcement, not to be confused with assumeRole, which is used to obtain temporary client credentials. If you do not specify a role, Cloud Control API uses a temporary session created using your AWS user credentials instead.
        /// </summary>
        public static string? RoleArn
        {
            get => _roleArn.Get();
            set => _roleArn.Set(value);
        }

        private static readonly __Value<bool?> _s3ForcePathStyle = new __Value<bool?>(() => __config.GetBoolean("s3ForcePathStyle"));
        /// <summary>
        /// Set this to true to force the request to use path-style addressing, i.e., `http://s3.amazonaws.com/BUCKET/KEY`. By default, the S3 client will use virtual hosted bucket addressing when possible (`http://BUCKET.s3.amazonaws.com/KEY`). Specific to the Amazon S3 service.
        /// </summary>
        public static bool? S3ForcePathStyle
        {
            get => _s3ForcePathStyle.Get();
            set => _s3ForcePathStyle.Set(value);
        }

        private static readonly __Value<string?> _secretKey = new __Value<string?>(() => __config.Get("secretKey"));
        /// <summary>
        /// The secret key for API operations. You can retrieve this from the 'Security &amp; Credentials' section of the AWS console.
        /// </summary>
        public static string? SecretKey
        {
            get => _secretKey.Get();
            set => _secretKey.Set(value);
        }

        private static readonly __Value<string?> _sharedCredentialsFile = new __Value<string?>(() => __config.Get("sharedCredentialsFile"));
        /// <summary>
        /// The path to the shared credentials file. If not set this defaults to `~/.aws/credentials`.
        /// </summary>
        public static string? SharedCredentialsFile
        {
            get => _sharedCredentialsFile.Get();
            set => _sharedCredentialsFile.Set(value);
        }

        private static readonly __Value<bool?> _skipCredentialsValidation = new __Value<bool?>(() => __config.GetBoolean("skipCredentialsValidation") ?? true);
        /// <summary>
        /// Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS available/implemented.
        /// </summary>
        public static bool? SkipCredentialsValidation
        {
            get => _skipCredentialsValidation.Get();
            set => _skipCredentialsValidation.Set(value);
        }

        private static readonly __Value<bool?> _skipGetEc2Platforms = new __Value<bool?>(() => __config.GetBoolean("skipGetEc2Platforms") ?? true);
        /// <summary>
        /// Skip getting the supported EC2 platforms. Used by users that don't have `ec2:DescribeAccountAttributes` permissions.
        /// </summary>
        public static bool? SkipGetEc2Platforms
        {
            get => _skipGetEc2Platforms.Get();
            set => _skipGetEc2Platforms.Set(value);
        }

        private static readonly __Value<bool?> _skipMetadataApiCheck = new __Value<bool?>(() => __config.GetBoolean("skipMetadataApiCheck") ?? true);
        /// <summary>
        /// Skip the AWS Metadata API check. Useful for AWS API implementations that do not have a metadata API endpoint. Setting to true prevents Pulumi from authenticating via the Metadata API. You may need to use other authentication methods like static credentials, configuration variables, or environment variables.
        /// </summary>
        public static bool? SkipMetadataApiCheck
        {
            get => _skipMetadataApiCheck.Get();
            set => _skipMetadataApiCheck.Set(value);
        }

        private static readonly __Value<bool?> _skipRegionValidation = new __Value<bool?>(() => __config.GetBoolean("skipRegionValidation") ?? true);
        /// <summary>
        /// Skip static validation of region name. Used by users of alternative AWS-like APIs or users with access to regions that are not public.
        /// </summary>
        public static bool? SkipRegionValidation
        {
            get => _skipRegionValidation.Get();
            set => _skipRegionValidation.Set(value);
        }

        private static readonly __Value<bool?> _skipRequestingAccountId = new __Value<bool?>(() => __config.GetBoolean("skipRequestingAccountId"));
        /// <summary>
        /// Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.
        /// </summary>
        public static bool? SkipRequestingAccountId
        {
            get => _skipRequestingAccountId.Get();
            set => _skipRequestingAccountId.Set(value);
        }

        private static readonly __Value<string?> _token = new __Value<string?>(() => __config.Get("token"));
        /// <summary>
        /// Session token for validating temporary credentials. Typically provided after successful identity federation or Multi-Factor Authentication (MFA) login. With MFA login, this is the session token provided afterward, not the 6 digit MFA code used to get temporary credentials.
        /// </summary>
        public static string? Token
        {
            get => _token.Get();
            set => _token.Set(value);
        }

        public static class Types
        {

             public class AssumeRole
             {
            /// <summary>
            /// Number of seconds to restrict the assume role session duration.
            /// </summary>
                public int? DurationSeconds { get; set; }
            /// <summary>
            /// External identifier to use when assuming the role.
            /// </summary>
                public string? ExternalId { get; set; } = null!;
            /// <summary>
            /// IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
            /// </summary>
                public string? Policy { get; set; } = null!;
            /// <summary>
            /// Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
            /// </summary>
                public ImmutableArray<string> PolicyArns { get; set; }
            /// <summary>
            /// Amazon Resource Name (ARN) of the IAM Role to assume.
            /// </summary>
                public string? RoleArn { get; set; } = null!;
            /// <summary>
            /// Session name to use when assuming the role.
            /// </summary>
                public string? SessionName { get; set; } = null!;
            /// <summary>
            /// Map of assume role session tags.
            /// </summary>
                public ImmutableDictionary<string, string>? Tags { get; set; } = null!;
            /// <summary>
            /// A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
            /// </summary>
                public ImmutableArray<string> TransitiveTagKeys { get; set; }
            }

             public class DefaultTags
             {
            /// <summary>
            /// A group of tags to set across all resources.
            /// </summary>
                public ImmutableDictionary<string, string>? Tags { get; set; } = null!;
            }

             public class Endpoints
             {
            /// <summary>
            /// Override the default endpoint for AWS CloudControl
            /// </summary>
                public string? Cloudcontrol { get; set; } = null!;
            /// <summary>
            /// Override the default endpoint for AWS CloudFormation
            /// </summary>
                public string? Cloudformation { get; set; } = null!;
            /// <summary>
            /// Override the default endpoint for AWS Elastic Compute Cloud (EC2)
            /// </summary>
                public string? Ec2 { get; set; } = null!;
            /// <summary>
            /// Override the default endpoint for AWS Systems Manager
            /// </summary>
                public string? Ssm { get; set; } = null!;
            /// <summary>
            /// Override the default endpoint for AWS Security Token Service (STS)
            /// </summary>
                public string? Sts { get; set; } = null!;
            }

             public class IgnoreTags
             {
            /// <summary>
            /// List of exact resource tag keys to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning the tag in any `tags` attributes and displaying any configuration difference for the tag value. If any resource configuration still has this tag key configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
            /// </summary>
                public ImmutableArray<string> KeyPrefixes { get; set; }
            /// <summary>
            /// List of resource tag key prefixes to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning any tag key matching the prefixes in any `tags` attributes and displaying any configuration difference for those tag values. If any resource configuration still has a tag matching one of the prefixes configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
            /// </summary>
                public ImmutableArray<string> Keys { get; set; }
            }
        }
    }
}
