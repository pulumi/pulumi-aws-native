// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ArcRegionSwitch.Outputs
{

    [OutputType]
    public sealed class PlanEksResourceScalingConfiguration
    {
        public readonly object? CapacityMonitoringApproach;
        public readonly ImmutableArray<Outputs.PlanEksCluster> EksClusters;
        public readonly Outputs.PlanKubernetesResourceType KubernetesResourceType;
        public readonly ImmutableArray<ImmutableDictionary<string, object>> ScalingResources;
        public readonly double? TargetPercent;
        public readonly double? TimeoutMinutes;
        public readonly Outputs.PlanEksResourceScalingUngraceful? Ungraceful;

        [OutputConstructor]
        private PlanEksResourceScalingConfiguration(
            object? capacityMonitoringApproach,

            ImmutableArray<Outputs.PlanEksCluster> eksClusters,

            Outputs.PlanKubernetesResourceType kubernetesResourceType,

            ImmutableArray<ImmutableDictionary<string, object>> scalingResources,

            double? targetPercent,

            double? timeoutMinutes,

            Outputs.PlanEksResourceScalingUngraceful? ungraceful)
        {
            CapacityMonitoringApproach = capacityMonitoringApproach;
            EksClusters = eksClusters;
            KubernetesResourceType = kubernetesResourceType;
            ScalingResources = scalingResources;
            TargetPercent = targetPercent;
            TimeoutMinutes = timeoutMinutes;
            Ungraceful = ungraceful;
        }
    }
}
