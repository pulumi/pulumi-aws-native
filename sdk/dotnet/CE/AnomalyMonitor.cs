// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CE
{
    /// <summary>
    /// AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. You can use Cost Anomaly Detection by creating monitor.
    /// </summary>
    [Obsolete(@"AnomalyMonitor is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:ce:AnomalyMonitor")]
    public partial class AnomalyMonitor : Pulumi.CustomResource
    {
        /// <summary>
        /// The date when the monitor was created. 
        /// </summary>
        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        /// <summary>
        /// The value for evaluated dimensions.
        /// </summary>
        [Output("dimensionalValueCount")]
        public Output<int> DimensionalValueCount { get; private set; } = null!;

        /// <summary>
        /// The date when the monitor last evaluated for anomalies.
        /// </summary>
        [Output("lastEvaluatedDate")]
        public Output<string> LastEvaluatedDate { get; private set; } = null!;

        /// <summary>
        /// The date when the monitor was last updated.
        /// </summary>
        [Output("lastUpdatedDate")]
        public Output<string> LastUpdatedDate { get; private set; } = null!;

        [Output("monitorArn")]
        public Output<string> MonitorArn { get; private set; } = null!;

        /// <summary>
        /// The dimensions to evaluate
        /// </summary>
        [Output("monitorDimension")]
        public Output<Pulumi.AwsNative.CE.AnomalyMonitorMonitorDimension?> MonitorDimension { get; private set; } = null!;

        /// <summary>
        /// The name of the monitor.
        /// </summary>
        [Output("monitorName")]
        public Output<string> MonitorName { get; private set; } = null!;

        [Output("monitorSpecification")]
        public Output<string?> MonitorSpecification { get; private set; } = null!;

        [Output("monitorType")]
        public Output<Pulumi.AwsNative.CE.AnomalyMonitorMonitorType> MonitorType { get; private set; } = null!;


        /// <summary>
        /// Create a AnomalyMonitor resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AnomalyMonitor(string name, AnomalyMonitorArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ce:AnomalyMonitor", name, args ?? new AnomalyMonitorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AnomalyMonitor(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ce:AnomalyMonitor", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AnomalyMonitor resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AnomalyMonitor Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AnomalyMonitor(name, id, options);
        }
    }

    public sealed class AnomalyMonitorArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The dimensions to evaluate
        /// </summary>
        [Input("monitorDimension")]
        public Input<Pulumi.AwsNative.CE.AnomalyMonitorMonitorDimension>? MonitorDimension { get; set; }

        /// <summary>
        /// The name of the monitor.
        /// </summary>
        [Input("monitorName", required: true)]
        public Input<string> MonitorName { get; set; } = null!;

        [Input("monitorSpecification")]
        public Input<string>? MonitorSpecification { get; set; }

        [Input("monitorType", required: true)]
        public Input<Pulumi.AwsNative.CE.AnomalyMonitorMonitorType> MonitorType { get; set; } = null!;

        public AnomalyMonitorArgs()
        {
        }
    }
}
