// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DocDbElastic
{
    /// <summary>
    /// The AWS::DocDBElastic::Cluster Amazon DocumentDB (with MongoDB compatibility) Elastic Scale resource describes a Cluster
    /// </summary>
    [AwsNativeResourceType("aws-native:docdbelastic:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Amazon DocumentDB elastic clusters administrator.
        /// 
        /// *Constraints* :
        /// 
        /// - Must be from 1 to 63 letters or numbers.
        /// - The first character must be a letter.
        /// - Cannot be a reserved word.
        /// </summary>
        [Output("adminUserName")]
        public Output<string> AdminUserName { get; private set; } = null!;

        /// <summary>
        /// The password for the Elastic DocumentDB cluster administrator and can contain any printable ASCII characters.
        /// 
        /// *Constraints* :
        /// 
        /// - Must contain from 8 to 100 characters.
        /// - Cannot contain a forward slash (/), double quote ("), or the "at" symbol (@).
        /// - A valid `AdminUserName` entry is also required.
        /// </summary>
        [Output("adminUserPassword")]
        public Output<string?> AdminUserPassword { get; private set; } = null!;

        /// <summary>
        /// The authentication type used to determine where to fetch the password used for accessing the elastic cluster. Valid types are `PLAIN_TEXT` or `SECRET_ARN` .
        /// </summary>
        [Output("authType")]
        public Output<string> AuthType { get; private set; } = null!;

        /// <summary>
        /// The number of days for which automatic snapshots are retained.
        /// </summary>
        [Output("backupRetentionPeriod")]
        public Output<int?> BackupRetentionPeriod { get; private set; } = null!;

        [Output("clusterArn")]
        public Output<string> ClusterArn { get; private set; } = null!;

        /// <summary>
        /// The URL used to connect to the elastic cluster.
        /// </summary>
        [Output("clusterEndpoint")]
        public Output<string> ClusterEndpoint { get; private set; } = null!;

        /// <summary>
        /// The name of the new elastic cluster. This parameter is stored as a lowercase string.
        /// 
        /// *Constraints* :
        /// 
        /// - Must contain from 1 to 63 letters, numbers, or hyphens.
        /// - The first character must be a letter.
        /// - Cannot end with a hyphen or contain two consecutive hyphens.
        /// 
        /// *Example* : `my-cluster`
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// The KMS key identifier to use to encrypt the new elastic cluster.
        /// 
        /// The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a cluster using the same Amazon account that owns this KMS encryption key, you can use the KMS key alias instead of the ARN as the KMS encryption key.
        /// 
        /// If an encryption key is not specified, Amazon DocumentDB uses the default encryption key that KMS creates for your account. Your account has a different default encryption key for each Amazon Region.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// The daily time range during which automated backups are created if automated backups are enabled, as determined by `backupRetentionPeriod` .
        /// </summary>
        [Output("preferredBackupWindow")]
        public Output<string?> PreferredBackupWindow { get; private set; } = null!;

        /// <summary>
        /// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        /// 
        /// *Format* : `ddd:hh24:mi-ddd:hh24:mi`
        /// 
        /// *Default* : a 30-minute window selected at random from an 8-hour block of time for each AWS Region , occurring on a random day of the week.
        /// 
        /// *Valid days* : Mon, Tue, Wed, Thu, Fri, Sat, Sun
        /// 
        /// *Constraints* : Minimum 30-minute window.
        /// </summary>
        [Output("preferredMaintenanceWindow")]
        public Output<string?> PreferredMaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// The number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64.
        /// </summary>
        [Output("shardCapacity")]
        public Output<int> ShardCapacity { get; private set; } = null!;

        /// <summary>
        /// The number of shards assigned to the elastic cluster. Maximum is 32.
        /// </summary>
        [Output("shardCount")]
        public Output<int> ShardCount { get; private set; } = null!;

        /// <summary>
        /// The number of replica instances applying to all shards in the cluster. A `shardInstanceCount` value of 1 means there is one writer instance, and any additional instances are replicas that can be used for reads and to improve availability.
        /// </summary>
        [Output("shardInstanceCount")]
        public Output<int?> ShardInstanceCount { get; private set; } = null!;

        /// <summary>
        /// The Amazon EC2 subnet IDs for the new elastic cluster.
        /// </summary>
        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        /// <summary>
        /// The tags to be assigned to the new elastic cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// A list of EC2 VPC security groups to associate with the new elastic cluster.
        /// </summary>
        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("aws-native:docdbelastic:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:docdbelastic:Cluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "adminUserName",
                    "authType",
                    "clusterName",
                    "kmsKeyId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Amazon DocumentDB elastic clusters administrator.
        /// 
        /// *Constraints* :
        /// 
        /// - Must be from 1 to 63 letters or numbers.
        /// - The first character must be a letter.
        /// - Cannot be a reserved word.
        /// </summary>
        [Input("adminUserName", required: true)]
        public Input<string> AdminUserName { get; set; } = null!;

        /// <summary>
        /// The password for the Elastic DocumentDB cluster administrator and can contain any printable ASCII characters.
        /// 
        /// *Constraints* :
        /// 
        /// - Must contain from 8 to 100 characters.
        /// - Cannot contain a forward slash (/), double quote ("), or the "at" symbol (@).
        /// - A valid `AdminUserName` entry is also required.
        /// </summary>
        [Input("adminUserPassword")]
        public Input<string>? AdminUserPassword { get; set; }

        /// <summary>
        /// The authentication type used to determine where to fetch the password used for accessing the elastic cluster. Valid types are `PLAIN_TEXT` or `SECRET_ARN` .
        /// </summary>
        [Input("authType", required: true)]
        public Input<string> AuthType { get; set; } = null!;

        /// <summary>
        /// The number of days for which automatic snapshots are retained.
        /// </summary>
        [Input("backupRetentionPeriod")]
        public Input<int>? BackupRetentionPeriod { get; set; }

        /// <summary>
        /// The name of the new elastic cluster. This parameter is stored as a lowercase string.
        /// 
        /// *Constraints* :
        /// 
        /// - Must contain from 1 to 63 letters, numbers, or hyphens.
        /// - The first character must be a letter.
        /// - Cannot end with a hyphen or contain two consecutive hyphens.
        /// 
        /// *Example* : `my-cluster`
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The KMS key identifier to use to encrypt the new elastic cluster.
        /// 
        /// The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a cluster using the same Amazon account that owns this KMS encryption key, you can use the KMS key alias instead of the ARN as the KMS encryption key.
        /// 
        /// If an encryption key is not specified, Amazon DocumentDB uses the default encryption key that KMS creates for your account. Your account has a different default encryption key for each Amazon Region.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// The daily time range during which automated backups are created if automated backups are enabled, as determined by `backupRetentionPeriod` .
        /// </summary>
        [Input("preferredBackupWindow")]
        public Input<string>? PreferredBackupWindow { get; set; }

        /// <summary>
        /// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        /// 
        /// *Format* : `ddd:hh24:mi-ddd:hh24:mi`
        /// 
        /// *Default* : a 30-minute window selected at random from an 8-hour block of time for each AWS Region , occurring on a random day of the week.
        /// 
        /// *Valid days* : Mon, Tue, Wed, Thu, Fri, Sat, Sun
        /// 
        /// *Constraints* : Minimum 30-minute window.
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        /// <summary>
        /// The number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64.
        /// </summary>
        [Input("shardCapacity", required: true)]
        public Input<int> ShardCapacity { get; set; } = null!;

        /// <summary>
        /// The number of shards assigned to the elastic cluster. Maximum is 32.
        /// </summary>
        [Input("shardCount", required: true)]
        public Input<int> ShardCount { get; set; } = null!;

        /// <summary>
        /// The number of replica instances applying to all shards in the cluster. A `shardInstanceCount` value of 1 means there is one writer instance, and any additional instances are replicas that can be used for reads and to improve availability.
        /// </summary>
        [Input("shardInstanceCount")]
        public Input<int>? ShardInstanceCount { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// The Amazon EC2 subnet IDs for the new elastic cluster.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// The tags to be assigned to the new elastic cluster.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;

        /// <summary>
        /// A list of EC2 VPC security groups to associate with the new elastic cluster.
        /// </summary>
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }
}
