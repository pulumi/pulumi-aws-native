// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CustomerProfiles
{
    public static class GetSegmentDefinition
    {
        /// <summary>
        /// A segment definition resource of Amazon Connect Customer Profiles
        /// </summary>
        public static Task<GetSegmentDefinitionResult> InvokeAsync(GetSegmentDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSegmentDefinitionResult>("aws-native:customerprofiles:getSegmentDefinition", args ?? new GetSegmentDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// A segment definition resource of Amazon Connect Customer Profiles
        /// </summary>
        public static Output<GetSegmentDefinitionResult> Invoke(GetSegmentDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSegmentDefinitionResult>("aws-native:customerprofiles:getSegmentDefinition", args ?? new GetSegmentDefinitionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// A segment definition resource of Amazon Connect Customer Profiles
        /// </summary>
        public static Output<GetSegmentDefinitionResult> Invoke(GetSegmentDefinitionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSegmentDefinitionResult>("aws-native:customerprofiles:getSegmentDefinition", args ?? new GetSegmentDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSegmentDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique name of the domain.
        /// </summary>
        [Input("domainName", required: true)]
        public string DomainName { get; set; } = null!;

        /// <summary>
        /// The unique name of the segment definition.
        /// </summary>
        [Input("segmentDefinitionName", required: true)]
        public string SegmentDefinitionName { get; set; } = null!;

        public GetSegmentDefinitionArgs()
        {
        }
        public static new GetSegmentDefinitionArgs Empty => new GetSegmentDefinitionArgs();
    }

    public sealed class GetSegmentDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique name of the domain.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// The unique name of the segment definition.
        /// </summary>
        [Input("segmentDefinitionName", required: true)]
        public Input<string> SegmentDefinitionName { get; set; } = null!;

        public GetSegmentDefinitionInvokeArgs()
        {
        }
        public static new GetSegmentDefinitionInvokeArgs Empty => new GetSegmentDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSegmentDefinitionResult
    {
        /// <summary>
        /// The time of this segment definition got created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The description of the segment definition.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the segment definition.
        /// </summary>
        public readonly string? SegmentDefinitionArn;
        /// <summary>
        /// The tags used to organize, track, or control access for this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetSegmentDefinitionResult(
            string? createdAt,

            string? description,

            string? segmentDefinitionArn,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            CreatedAt = createdAt;
            Description = description;
            SegmentDefinitionArn = segmentDefinitionArn;
            Tags = tags;
        }
    }
}
