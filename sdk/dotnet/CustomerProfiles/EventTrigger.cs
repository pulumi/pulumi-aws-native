// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CustomerProfiles
{
    /// <summary>
    /// An event trigger resource of Amazon Connect Customer Profiles
    /// </summary>
    [AwsNativeResourceType("aws-native:customerprofiles:EventTrigger")]
    public partial class EventTrigger : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp of when the event trigger was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The description of the event trigger.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The unique name of the domain.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// A list of conditions that determine when an event should trigger the destination.
        /// </summary>
        [Output("eventTriggerConditions")]
        public Output<ImmutableArray<Outputs.EventTriggerCondition>> EventTriggerConditions { get; private set; } = null!;

        /// <summary>
        /// Defines limits controlling whether an event triggers the destination, based on ingestion latency and the number of invocations per profile over specific time periods.
        /// </summary>
        [Output("eventTriggerLimits")]
        public Output<Outputs.EventTriggerLimits?> EventTriggerLimits { get; private set; } = null!;

        /// <summary>
        /// The unique name of the event trigger.
        /// </summary>
        [Output("eventTriggerName")]
        public Output<string> EventTriggerName { get; private set; } = null!;

        /// <summary>
        /// The timestamp of when the event trigger was most recently updated.
        /// </summary>
        [Output("lastUpdatedAt")]
        public Output<string> LastUpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The unique name of the object type.
        /// </summary>
        [Output("objectTypeName")]
        public Output<string> ObjectTypeName { get; private set; } = null!;

        /// <summary>
        /// The destination is triggered only for profiles that meet the criteria of a segment definition.
        /// </summary>
        [Output("segmentFilter")]
        public Output<string?> SegmentFilter { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a EventTrigger resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EventTrigger(string name, EventTriggerArgs args, CustomResourceOptions? options = null)
            : base("aws-native:customerprofiles:EventTrigger", name, args ?? new EventTriggerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EventTrigger(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:customerprofiles:EventTrigger", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "domainName",
                    "eventTriggerName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EventTrigger resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EventTrigger Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new EventTrigger(name, id, options);
        }
    }

    public sealed class EventTriggerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the event trigger.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique name of the domain.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        [Input("eventTriggerConditions", required: true)]
        private InputList<Inputs.EventTriggerConditionArgs>? _eventTriggerConditions;

        /// <summary>
        /// A list of conditions that determine when an event should trigger the destination.
        /// </summary>
        public InputList<Inputs.EventTriggerConditionArgs> EventTriggerConditions
        {
            get => _eventTriggerConditions ?? (_eventTriggerConditions = new InputList<Inputs.EventTriggerConditionArgs>());
            set => _eventTriggerConditions = value;
        }

        /// <summary>
        /// Defines limits controlling whether an event triggers the destination, based on ingestion latency and the number of invocations per profile over specific time periods.
        /// </summary>
        [Input("eventTriggerLimits")]
        public Input<Inputs.EventTriggerLimitsArgs>? EventTriggerLimits { get; set; }

        /// <summary>
        /// The unique name of the event trigger.
        /// </summary>
        [Input("eventTriggerName")]
        public Input<string>? EventTriggerName { get; set; }

        /// <summary>
        /// The unique name of the object type.
        /// </summary>
        [Input("objectTypeName", required: true)]
        public Input<string> ObjectTypeName { get; set; } = null!;

        /// <summary>
        /// The destination is triggered only for profiles that meet the criteria of a segment definition.
        /// </summary>
        [Input("segmentFilter")]
        public Input<string>? SegmentFilter { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public EventTriggerArgs()
        {
        }
        public static new EventTriggerArgs Empty => new EventTriggerArgs();
    }
}
