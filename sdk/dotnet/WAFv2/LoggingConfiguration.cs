// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WAFv2
{
    /// <summary>
    /// A WAFv2 Logging Configuration Resource Provider
    /// </summary>
    [AwsNativeResourceType("aws-native:wafv2:LoggingConfiguration")]
    public partial class LoggingConfiguration : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
        /// </summary>
        [Output("logDestinationConfigs")]
        public Output<ImmutableArray<string>> LogDestinationConfigs { get; private set; } = null!;

        /// <summary>
        /// Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
        /// </summary>
        [Output("loggingFilter")]
        public Output<Outputs.LoggingFilterProperties?> LoggingFilter { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration.
        /// </summary>
        [Output("managedByFirewallManager")]
        public Output<bool> ManagedByFirewallManager { get; private set; } = null!;

        /// <summary>
        /// The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
        /// </summary>
        [Output("redactedFields")]
        public Output<ImmutableArray<Outputs.LoggingConfigurationFieldToMatch>> RedactedFields { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
        /// </summary>
        [Output("resourceArn")]
        public Output<string> ResourceArn { get; private set; } = null!;


        /// <summary>
        /// Create a LoggingConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoggingConfiguration(string name, LoggingConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:wafv2:LoggingConfiguration", name, args ?? new LoggingConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoggingConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:wafv2:LoggingConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoggingConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoggingConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LoggingConfiguration(name, id, options);
        }
    }

    public sealed class LoggingConfigurationArgs : Pulumi.ResourceArgs
    {
        [Input("logDestinationConfigs", required: true)]
        private InputList<string>? _logDestinationConfigs;

        /// <summary>
        /// The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
        /// </summary>
        public InputList<string> LogDestinationConfigs
        {
            get => _logDestinationConfigs ?? (_logDestinationConfigs = new InputList<string>());
            set => _logDestinationConfigs = value;
        }

        /// <summary>
        /// Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
        /// </summary>
        [Input("loggingFilter")]
        public Input<Inputs.LoggingFilterPropertiesArgs>? LoggingFilter { get; set; }

        [Input("redactedFields")]
        private InputList<Inputs.LoggingConfigurationFieldToMatchArgs>? _redactedFields;

        /// <summary>
        /// The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
        /// </summary>
        public InputList<Inputs.LoggingConfigurationFieldToMatchArgs> RedactedFields
        {
            get => _redactedFields ?? (_redactedFields = new InputList<Inputs.LoggingConfigurationFieldToMatchArgs>());
            set => _redactedFields = value;
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
        /// </summary>
        [Input("resourceArn", required: true)]
        public Input<string> ResourceArn { get; set; } = null!;

        public LoggingConfigurationArgs()
        {
        }
    }
}
