// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GreengrassV2.Inputs
{

    public sealed class ComponentVersionLambdaContainerParamsArgs : global::Pulumi.ResourceArgs
    {
        [Input("devices")]
        private InputList<Inputs.ComponentVersionLambdaDeviceMountArgs>? _devices;

        /// <summary>
        /// Contains information about a device that Linux processes in a container can access.
        /// </summary>
        public InputList<Inputs.ComponentVersionLambdaDeviceMountArgs> Devices
        {
            get => _devices ?? (_devices = new InputList<Inputs.ComponentVersionLambdaDeviceMountArgs>());
            set => _devices = value;
        }

        /// <summary>
        /// The memory size of the container, expressed in kilobytes.
        /// 
        /// Default: `16384` (16 MB)
        /// </summary>
        [Input("memorySizeInKb")]
        public Input<int>? MemorySizeInKb { get; set; }

        /// <summary>
        /// Whether or not the container can read information from the device's `/sys` folder.
        /// 
        /// Default: `false`
        /// </summary>
        [Input("mountRoSysfs")]
        public Input<bool>? MountRoSysfs { get; set; }

        [Input("volumes")]
        private InputList<Inputs.ComponentVersionLambdaVolumeMountArgs>? _volumes;

        /// <summary>
        /// Contains information about a volume that Linux processes in a container can access. When you define a volume, the AWS IoT Greengrass Core software mounts the source files to the destination inside the container.
        /// </summary>
        public InputList<Inputs.ComponentVersionLambdaVolumeMountArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.ComponentVersionLambdaVolumeMountArgs>());
            set => _volumes = value;
        }

        public ComponentVersionLambdaContainerParamsArgs()
        {
        }
        public static new ComponentVersionLambdaContainerParamsArgs Empty => new ComponentVersionLambdaContainerParamsArgs();
    }
}
