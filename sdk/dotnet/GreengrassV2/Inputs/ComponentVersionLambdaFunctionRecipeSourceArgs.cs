// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GreengrassV2.Inputs
{

    public sealed class ComponentVersionLambdaFunctionRecipeSourceArgs : global::Pulumi.ResourceArgs
    {
        [Input("componentDependencies")]
        private InputMap<Inputs.ComponentVersionComponentDependencyRequirementArgs>? _componentDependencies;

        /// <summary>
        /// The component versions on which this Lambda function component depends.
        /// </summary>
        public InputMap<Inputs.ComponentVersionComponentDependencyRequirementArgs> ComponentDependencies
        {
            get => _componentDependencies ?? (_componentDependencies = new InputMap<Inputs.ComponentVersionComponentDependencyRequirementArgs>());
            set => _componentDependencies = value;
        }

        /// <summary>
        /// The system and runtime parameters for the Lambda function as it runs on the AWS IoT Greengrass core device.
        /// </summary>
        [Input("componentLambdaParameters")]
        public Input<Inputs.ComponentVersionLambdaExecutionParametersArgs>? ComponentLambdaParameters { get; set; }

        /// <summary>
        /// The name of the component.
        /// 
        /// Defaults to the name of the Lambda function.
        /// </summary>
        [Input("componentName")]
        public Input<string>? ComponentName { get; set; }

        [Input("componentPlatforms")]
        private InputList<Inputs.ComponentVersionComponentPlatformArgs>? _componentPlatforms;

        /// <summary>
        /// The platforms that the component version supports.
        /// </summary>
        public InputList<Inputs.ComponentVersionComponentPlatformArgs> ComponentPlatforms
        {
            get => _componentPlatforms ?? (_componentPlatforms = new InputList<Inputs.ComponentVersionComponentPlatformArgs>());
            set => _componentPlatforms = value;
        }

        /// <summary>
        /// The version of the component.
        /// 
        /// Defaults to the version of the Lambda function as a semantic version. For example, if your function version is `3` , the component version becomes `3.0.0` .
        /// </summary>
        [Input("componentVersion")]
        public Input<string>? ComponentVersion { get; set; }

        /// <summary>
        /// The ARN of the Lambda function. The ARN must include the version of the function to import. You can't use version aliases like `$LATEST` .
        /// </summary>
        [Input("lambdaArn")]
        public Input<string>? LambdaArn { get; set; }

        public ComponentVersionLambdaFunctionRecipeSourceArgs()
        {
        }
        public static new ComponentVersionLambdaFunctionRecipeSourceArgs Empty => new ComponentVersionLambdaFunctionRecipeSourceArgs();
    }
}
