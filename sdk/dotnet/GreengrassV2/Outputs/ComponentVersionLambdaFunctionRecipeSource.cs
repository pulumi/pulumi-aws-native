// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GreengrassV2.Outputs
{

    [OutputType]
    public sealed class ComponentVersionLambdaFunctionRecipeSource
    {
        /// <summary>
        /// The component versions on which this Lambda function component depends.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ComponentVersionComponentDependencyRequirement>? ComponentDependencies;
        /// <summary>
        /// The system and runtime parameters for the Lambda function as it runs on the AWS IoT Greengrass core device.
        /// </summary>
        public readonly Outputs.ComponentVersionLambdaExecutionParameters? ComponentLambdaParameters;
        /// <summary>
        /// The name of the component.
        /// 
        /// Defaults to the name of the Lambda function.
        /// </summary>
        public readonly string? ComponentName;
        /// <summary>
        /// The platforms that the component version supports.
        /// </summary>
        public readonly ImmutableArray<Outputs.ComponentVersionComponentPlatform> ComponentPlatforms;
        /// <summary>
        /// The version of the component.
        /// 
        /// Defaults to the version of the Lambda function as a semantic version. For example, if your function version is `3` , the component version becomes `3.0.0` .
        /// </summary>
        public readonly string? ComponentVersion;
        /// <summary>
        /// The ARN of the Lambda function. The ARN must include the version of the function to import. You can't use version aliases like `$LATEST` .
        /// </summary>
        public readonly string? LambdaArn;

        [OutputConstructor]
        private ComponentVersionLambdaFunctionRecipeSource(
            ImmutableDictionary<string, Outputs.ComponentVersionComponentDependencyRequirement>? componentDependencies,

            Outputs.ComponentVersionLambdaExecutionParameters? componentLambdaParameters,

            string? componentName,

            ImmutableArray<Outputs.ComponentVersionComponentPlatform> componentPlatforms,

            string? componentVersion,

            string? lambdaArn)
        {
            ComponentDependencies = componentDependencies;
            ComponentLambdaParameters = componentLambdaParameters;
            ComponentName = componentName;
            ComponentPlatforms = componentPlatforms;
            ComponentVersion = componentVersion;
            LambdaArn = lambdaArn;
        }
    }
}
