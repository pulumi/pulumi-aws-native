// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GreengrassV2.Outputs
{

    [OutputType]
    public sealed class ComponentVersionLambdaExecutionParameters
    {
        public readonly object? EnvironmentVariables;
        public readonly ImmutableArray<Outputs.ComponentVersionLambdaEventSource> EventSources;
        public readonly ImmutableArray<string> ExecArgs;
        public readonly string? InputPayloadEncodingType;
        public readonly Outputs.ComponentVersionLambdaLinuxProcessParams? LinuxProcessParams;
        public readonly int? MaxIdleTimeInSeconds;
        public readonly int? MaxInstancesCount;
        public readonly int? MaxQueueSize;
        public readonly bool? Pinned;
        public readonly int? StatusTimeoutInSeconds;
        public readonly int? TimeoutInSeconds;

        [OutputConstructor]
        private ComponentVersionLambdaExecutionParameters(
            object? environmentVariables,

            ImmutableArray<Outputs.ComponentVersionLambdaEventSource> eventSources,

            ImmutableArray<string> execArgs,

            string? inputPayloadEncodingType,

            Outputs.ComponentVersionLambdaLinuxProcessParams? linuxProcessParams,

            int? maxIdleTimeInSeconds,

            int? maxInstancesCount,

            int? maxQueueSize,

            bool? pinned,

            int? statusTimeoutInSeconds,

            int? timeoutInSeconds)
        {
            EnvironmentVariables = environmentVariables;
            EventSources = eventSources;
            ExecArgs = execArgs;
            InputPayloadEncodingType = inputPayloadEncodingType;
            LinuxProcessParams = linuxProcessParams;
            MaxIdleTimeInSeconds = maxIdleTimeInSeconds;
            MaxInstancesCount = maxInstancesCount;
            MaxQueueSize = maxQueueSize;
            Pinned = pinned;
            StatusTimeoutInSeconds = statusTimeoutInSeconds;
            TimeoutInSeconds = timeoutInSeconds;
        }
    }
}
