// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker.Outputs
{

    /// <summary>
    /// Overview about the model.
    /// </summary>
    [OutputType]
    public sealed class ModelCardModelOverview
    {
        /// <summary>
        /// Algorithm used to solve the problem.
        /// </summary>
        public readonly string? AlgorithmType;
        /// <summary>
        /// Overview about the inference.
        /// </summary>
        public readonly Outputs.ModelCardModelOverviewInferenceEnvironmentProperties? InferenceEnvironment;
        /// <summary>
        /// Location of the model artifact.
        /// </summary>
        public readonly ImmutableArray<string> ModelArtifact;
        /// <summary>
        /// Creator of model.
        /// </summary>
        public readonly string? ModelCreator;
        /// <summary>
        /// description of model.
        /// </summary>
        public readonly string? ModelDescription;
        /// <summary>
        /// SageMaker Model Arn or Non SageMaker Model id.
        /// </summary>
        public readonly string? ModelId;
        /// <summary>
        /// Name of the model.
        /// </summary>
        public readonly string? ModelName;
        /// <summary>
        /// Owner of model.
        /// </summary>
        public readonly string? ModelOwner;
        /// <summary>
        /// Version of the model.
        /// </summary>
        public readonly double? ModelVersion;
        /// <summary>
        /// Problem being solved with the model.
        /// </summary>
        public readonly string? ProblemType;

        [OutputConstructor]
        private ModelCardModelOverview(
            string? algorithmType,

            Outputs.ModelCardModelOverviewInferenceEnvironmentProperties? inferenceEnvironment,

            ImmutableArray<string> modelArtifact,

            string? modelCreator,

            string? modelDescription,

            string? modelId,

            string? modelName,

            string? modelOwner,

            double? modelVersion,

            string? problemType)
        {
            AlgorithmType = algorithmType;
            InferenceEnvironment = inferenceEnvironment;
            ModelArtifact = modelArtifact;
            ModelCreator = modelCreator;
            ModelDescription = modelDescription;
            ModelId = modelId;
            ModelName = modelName;
            ModelOwner = modelOwner;
            ModelVersion = modelVersion;
            ProblemType = problemType;
        }
    }
}
