// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker.Outputs
{

    /// <summary>
    /// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
    /// </summary>
    [OutputType]
    public sealed class ProcessingJobNetworkConfig
    {
        /// <summary>
        /// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
        /// </summary>
        public readonly bool? EnableInterContainerTrafficEncryption;
        /// <summary>
        /// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
        /// </summary>
        public readonly bool? EnableNetworkIsolation;
        /// <summary>
        /// Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC. For more information, see [Give SageMaker Access to Resources in your Amazon VPC](https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html) .
        /// </summary>
        public readonly Outputs.ProcessingJobVpcConfig? VpcConfig;

        [OutputConstructor]
        private ProcessingJobNetworkConfig(
            bool? enableInterContainerTrafficEncryption,

            bool? enableNetworkIsolation,

            Outputs.ProcessingJobVpcConfig? vpcConfig)
        {
            EnableInterContainerTrafficEncryption = enableInterContainerTrafficEncryption;
            EnableNetworkIsolation = enableNetworkIsolation;
            VpcConfig = vpcConfig;
        }
    }
}
