// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker
{
    public static class GetDeviceFleet
    {
        /// <summary>
        /// Resource schema for AWS::SageMaker::DeviceFleet
        /// </summary>
        public static Task<GetDeviceFleetResult> InvokeAsync(GetDeviceFleetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDeviceFleetResult>("aws-native:sagemaker:getDeviceFleet", args ?? new GetDeviceFleetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::SageMaker::DeviceFleet
        /// </summary>
        public static Output<GetDeviceFleetResult> Invoke(GetDeviceFleetInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDeviceFleetResult>("aws-native:sagemaker:getDeviceFleet", args ?? new GetDeviceFleetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeviceFleetArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the edge device fleet
        /// </summary>
        [Input("deviceFleetName", required: true)]
        public string DeviceFleetName { get; set; } = null!;

        public GetDeviceFleetArgs()
        {
        }
    }

    public sealed class GetDeviceFleetInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the edge device fleet
        /// </summary>
        [Input("deviceFleetName", required: true)]
        public Input<string> DeviceFleetName { get; set; } = null!;

        public GetDeviceFleetInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDeviceFleetResult
    {
        /// <summary>
        /// Description for the edge device fleet
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// S3 bucket and an ecryption key id (if available) to store outputs for the fleet
        /// </summary>
        public readonly Outputs.DeviceFleetEdgeOutputConfig? OutputConfig;
        /// <summary>
        /// Role associated with the device fleet
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// Associate tags with the resource
        /// </summary>
        public readonly ImmutableArray<Outputs.DeviceFleetTag> Tags;

        [OutputConstructor]
        private GetDeviceFleetResult(
            string? description,

            Outputs.DeviceFleetEdgeOutputConfig? outputConfig,

            string? roleArn,

            ImmutableArray<Outputs.DeviceFleetTag> tags)
        {
            Description = description;
            OutputConfig = outputConfig;
            RoleArn = roleArn;
            Tags = tags;
        }
    }
}
