// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker
{
    public static class GetModelPackage
    {
        /// <summary>
        /// Resource Type definition for AWS::SageMaker::ModelPackage
        /// </summary>
        public static Task<GetModelPackageResult> InvokeAsync(GetModelPackageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelPackageResult>("aws-native:sagemaker:getModelPackage", args ?? new GetModelPackageArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SageMaker::ModelPackage
        /// </summary>
        public static Output<GetModelPackageResult> Invoke(GetModelPackageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelPackageResult>("aws-native:sagemaker:getModelPackage", args ?? new GetModelPackageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelPackageArgs : global::Pulumi.InvokeArgs
    {
        [Input("modelPackageArn", required: true)]
        public string ModelPackageArn { get; set; } = null!;

        public GetModelPackageArgs()
        {
        }
        public static new GetModelPackageArgs Empty => new GetModelPackageArgs();
    }

    public sealed class GetModelPackageInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("modelPackageArn", required: true)]
        public Input<string> ModelPackageArn { get; set; } = null!;

        public GetModelPackageInvokeArgs()
        {
        }
        public static new GetModelPackageInvokeArgs Empty => new GetModelPackageInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelPackageResult
    {
        public readonly ImmutableArray<Outputs.ModelPackageAdditionalInferenceSpecificationDefinition> AdditionalInferenceSpecifications;
        public readonly string? ApprovalDescription;
        public readonly bool? CertifyForMarketplace;
        public readonly string? CreationTime;
        public readonly Outputs.ModelPackageCustomerMetadataProperties? CustomerMetadataProperties;
        public readonly string? LastModifiedTime;
        public readonly Pulumi.AwsNative.SageMaker.ModelPackageModelApprovalStatus? ModelApprovalStatus;
        public readonly string? ModelPackageArn;
        public readonly string? ModelPackageName;
        public readonly Pulumi.AwsNative.SageMaker.ModelPackageStatus? ModelPackageStatus;
        public readonly Outputs.ModelPackageStatusDetails? ModelPackageStatusDetails;
        public readonly int? ModelPackageVersion;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.ModelPackageTag> Tags;

        [OutputConstructor]
        private GetModelPackageResult(
            ImmutableArray<Outputs.ModelPackageAdditionalInferenceSpecificationDefinition> additionalInferenceSpecifications,

            string? approvalDescription,

            bool? certifyForMarketplace,

            string? creationTime,

            Outputs.ModelPackageCustomerMetadataProperties? customerMetadataProperties,

            string? lastModifiedTime,

            Pulumi.AwsNative.SageMaker.ModelPackageModelApprovalStatus? modelApprovalStatus,

            string? modelPackageArn,

            string? modelPackageName,

            Pulumi.AwsNative.SageMaker.ModelPackageStatus? modelPackageStatus,

            Outputs.ModelPackageStatusDetails? modelPackageStatusDetails,

            int? modelPackageVersion,

            ImmutableArray<Outputs.ModelPackageTag> tags)
        {
            AdditionalInferenceSpecifications = additionalInferenceSpecifications;
            ApprovalDescription = approvalDescription;
            CertifyForMarketplace = certifyForMarketplace;
            CreationTime = creationTime;
            CustomerMetadataProperties = customerMetadataProperties;
            LastModifiedTime = lastModifiedTime;
            ModelApprovalStatus = modelApprovalStatus;
            ModelPackageArn = modelPackageArn;
            ModelPackageName = modelPackageName;
            ModelPackageStatus = modelPackageStatus;
            ModelPackageStatusDetails = modelPackageStatusDetails;
            ModelPackageVersion = modelPackageVersion;
            Tags = tags;
        }
    }
}
