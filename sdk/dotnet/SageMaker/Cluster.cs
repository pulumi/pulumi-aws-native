// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker
{
    /// <summary>
    /// Resource Type definition for AWS::SageMaker::Cluster
    /// </summary>
    [AwsNativeResourceType("aws-native:sagemaker:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        [Output("autoScaling")]
        public Output<Outputs.ClusterAutoScalingConfig?> AutoScaling { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the HyperPod Cluster.
        /// </summary>
        [Output("clusterArn")]
        public Output<string> ClusterArn { get; private set; } = null!;

        /// <summary>
        /// The name of the HyperPod Cluster.
        /// </summary>
        [Output("clusterName")]
        public Output<string?> ClusterName { get; private set; } = null!;

        /// <summary>
        /// The cluster role for the autoscaler to assume.
        /// </summary>
        [Output("clusterRole")]
        public Output<string?> ClusterRole { get; private set; } = null!;

        /// <summary>
        /// The status of the HyperPod Cluster.
        /// </summary>
        [Output("clusterStatus")]
        public Output<Pulumi.AwsNative.SageMaker.ClusterStatus> ClusterStatus { get; private set; } = null!;

        /// <summary>
        /// The time at which the HyperPod cluster was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The failure message of the HyperPod Cluster.
        /// </summary>
        [Output("failureMessage")]
        public Output<string> FailureMessage { get; private set; } = null!;

        /// <summary>
        /// The instance groups of the SageMaker HyperPod cluster. To delete an instance group, remove it from the array.
        /// </summary>
        [Output("instanceGroups")]
        public Output<ImmutableArray<Outputs.ClusterInstanceGroup>> InstanceGroups { get; private set; } = null!;

        /// <summary>
        /// Determines the scaling strategy for the SageMaker HyperPod cluster. When set to 'Continuous', enables continuous scaling which dynamically manages node provisioning. If the parameter is omitted, uses the standard scaling approach in previous release.
        /// </summary>
        [Output("nodeProvisioningMode")]
        public Output<Pulumi.AwsNative.SageMaker.ClusterNodeProvisioningMode?> NodeProvisioningMode { get; private set; } = null!;

        /// <summary>
        /// If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.
        /// </summary>
        [Output("nodeRecovery")]
        public Output<Pulumi.AwsNative.SageMaker.ClusterNodeRecovery?> NodeRecovery { get; private set; } = null!;

        /// <summary>
        /// The orchestrator type for the SageMaker HyperPod cluster. Currently, `'eks'` is the only available option.
        /// </summary>
        [Output("orchestrator")]
        public Output<Outputs.ClusterOrchestrator?> Orchestrator { get; private set; } = null!;

        [Output("restrictedInstanceGroups")]
        public Output<ImmutableArray<Outputs.ClusterRestrictedInstanceGroup>> RestrictedInstanceGroups { get; private set; } = null!;

        /// <summary>
        /// Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        [Output("tieredStorageConfig")]
        public Output<Outputs.ClusterTieredStorageConfig?> TieredStorageConfig { get; private set; } = null!;

        /// <summary>
        /// Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC. For more information, see [Give SageMaker Access to Resources in your Amazon VPC](https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html) .
        /// </summary>
        [Output("vpcConfig")]
        public Output<Outputs.ClusterVpcConfig?> VpcConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:sagemaker:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:sagemaker:Cluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "clusterName",
                    "instanceGroups[*].executionRole",
                    "instanceGroups[*].instanceGroupName",
                    "instanceGroups[*].instanceType",
                    "instanceGroups[*].overrideVpcConfig",
                    "instanceGroups[*].threadsPerCore",
                    "orchestrator",
                    "restrictedInstanceGroups[*].executionRole",
                    "restrictedInstanceGroups[*].instanceGroupName",
                    "restrictedInstanceGroups[*].instanceType",
                    "restrictedInstanceGroups[*].overrideVpcConfig",
                    "restrictedInstanceGroups[*].threadsPerCore",
                    "vpcConfig",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoScaling")]
        public Input<Inputs.ClusterAutoScalingConfigArgs>? AutoScaling { get; set; }

        /// <summary>
        /// The name of the HyperPod Cluster.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The cluster role for the autoscaler to assume.
        /// </summary>
        [Input("clusterRole")]
        public Input<string>? ClusterRole { get; set; }

        [Input("instanceGroups")]
        private InputList<Inputs.ClusterInstanceGroupArgs>? _instanceGroups;

        /// <summary>
        /// The instance groups of the SageMaker HyperPod cluster. To delete an instance group, remove it from the array.
        /// </summary>
        public InputList<Inputs.ClusterInstanceGroupArgs> InstanceGroups
        {
            get => _instanceGroups ?? (_instanceGroups = new InputList<Inputs.ClusterInstanceGroupArgs>());
            set => _instanceGroups = value;
        }

        /// <summary>
        /// Determines the scaling strategy for the SageMaker HyperPod cluster. When set to 'Continuous', enables continuous scaling which dynamically manages node provisioning. If the parameter is omitted, uses the standard scaling approach in previous release.
        /// </summary>
        [Input("nodeProvisioningMode")]
        public Input<Pulumi.AwsNative.SageMaker.ClusterNodeProvisioningMode>? NodeProvisioningMode { get; set; }

        /// <summary>
        /// If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.
        /// </summary>
        [Input("nodeRecovery")]
        public Input<Pulumi.AwsNative.SageMaker.ClusterNodeRecovery>? NodeRecovery { get; set; }

        /// <summary>
        /// The orchestrator type for the SageMaker HyperPod cluster. Currently, `'eks'` is the only available option.
        /// </summary>
        [Input("orchestrator")]
        public Input<Inputs.ClusterOrchestratorArgs>? Orchestrator { get; set; }

        [Input("restrictedInstanceGroups")]
        private InputList<Inputs.ClusterRestrictedInstanceGroupArgs>? _restrictedInstanceGroups;
        public InputList<Inputs.ClusterRestrictedInstanceGroupArgs> RestrictedInstanceGroups
        {
            get => _restrictedInstanceGroups ?? (_restrictedInstanceGroups = new InputList<Inputs.ClusterRestrictedInstanceGroupArgs>());
            set => _restrictedInstanceGroups = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        [Input("tieredStorageConfig")]
        public Input<Inputs.ClusterTieredStorageConfigArgs>? TieredStorageConfig { get; set; }

        /// <summary>
        /// Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC. For more information, see [Give SageMaker Access to Resources in your Amazon VPC](https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html) .
        /// </summary>
        [Input("vpcConfig")]
        public Input<Inputs.ClusterVpcConfigArgs>? VpcConfig { get; set; }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }
}
