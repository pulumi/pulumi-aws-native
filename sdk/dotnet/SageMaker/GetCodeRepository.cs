// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker
{
    public static class GetCodeRepository
    {
        /// <summary>
        /// Resource Type definition for AWS::SageMaker::CodeRepository
        /// </summary>
        public static Task<GetCodeRepositoryResult> InvokeAsync(GetCodeRepositoryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCodeRepositoryResult>("aws-native:sagemaker:getCodeRepository", args ?? new GetCodeRepositoryArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SageMaker::CodeRepository
        /// </summary>
        public static Output<GetCodeRepositoryResult> Invoke(GetCodeRepositoryInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCodeRepositoryResult>("aws-native:sagemaker:getCodeRepository", args ?? new GetCodeRepositoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCodeRepositoryArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetCodeRepositoryArgs()
        {
        }
    }

    public sealed class GetCodeRepositoryInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetCodeRepositoryInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCodeRepositoryResult
    {
        public readonly Outputs.CodeRepositoryGitConfig? GitConfig;
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.CodeRepositoryTag> Tags;

        [OutputConstructor]
        private GetCodeRepositoryResult(
            Outputs.CodeRepositoryGitConfig? gitConfig,

            string? id,

            ImmutableArray<Outputs.CodeRepositoryTag> tags)
        {
            GitConfig = gitConfig;
            Id = id;
            Tags = tags;
        }
    }
}
