// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker.Inputs
{

    /// <summary>
    /// Provisioned ServiceCatalog  Details
    /// </summary>
    public sealed class ServiceCatalogProvisionedProductDetailsPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the provisioned product.
        /// </summary>
        [Input("provisionedProductId")]
        public Input<string>? ProvisionedProductId { get; set; }

        /// <summary>
        /// The current status of the product.
        /// 
        /// - `AVAILABLE` - Stable state, ready to perform any operation. The most recent operation succeeded and completed.
        /// - `UNDER_CHANGE` - Transitive state. Operations performed might not have valid results. Wait for an AVAILABLE status before performing operations.
        /// - `TAINTED` - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.
        /// - `ERROR` - An unexpected error occurred. The provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.
        /// - `PLAN_IN_PROGRESS` - Transitive state. The plan operations were performed to provision a new product, but resources have not yet been created. After reviewing the list of resources to be created, execute the plan. Wait for an AVAILABLE status before performing operations.
        /// </summary>
        [Input("provisionedProductStatusMessage")]
        public Input<string>? ProvisionedProductStatusMessage { get; set; }

        public ServiceCatalogProvisionedProductDetailsPropertiesArgs()
        {
        }
        public static new ServiceCatalogProvisionedProductDetailsPropertiesArgs Empty => new ServiceCatalogProvisionedProductDetailsPropertiesArgs();
    }
}
