// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker.Inputs
{

    /// <summary>
    /// Describes the Docker container for the model package.
    /// </summary>
    public sealed class ModelPackageContainerDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DNS host name for the Docker container.
        /// </summary>
        [Input("containerHostname")]
        public Input<string>? ContainerHostname { get; set; }

        /// <summary>
        /// The environment variables to set in the Docker container. Each key and value in the `Environment` string to string map can have length of up to 1024. We support up to 16 entries in the map.
        /// </summary>
        [Input("environment")]
        public Input<Inputs.ModelPackageEnvironmentArgs>? Environment { get; set; }

        /// <summary>
        /// The machine learning framework of the model package container image.
        /// </summary>
        [Input("framework")]
        public Input<string>? Framework { get; set; }

        /// <summary>
        /// The framework version of the Model Package Container Image.
        /// </summary>
        [Input("frameworkVersion")]
        public Input<string>? FrameworkVersion { get; set; }

        /// <summary>
        /// The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
        /// </summary>
        [Input("image", required: true)]
        public Input<string> Image { get; set; } = null!;

        /// <summary>
        /// An MD5 hash of the training algorithm that identifies the Docker image used for training.
        /// </summary>
        [Input("imageDigest")]
        public Input<string>? ImageDigest { get; set; }

        /// <summary>
        /// A structure with Model Input details.
        /// </summary>
        [Input("modelDataUrl")]
        public Input<string>? ModelDataUrl { get; set; }

        /// <summary>
        /// A structure with Model Input details.
        /// </summary>
        [Input("modelInput")]
        public Input<Inputs.ModelPackageContainerDefinitionModelInputPropertiesArgs>? ModelInput { get; set; }

        /// <summary>
        /// The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
        /// </summary>
        [Input("nearestModelName")]
        public Input<string>? NearestModelName { get; set; }

        public ModelPackageContainerDefinitionArgs()
        {
        }
        public static new ModelPackageContainerDefinitionArgs Empty => new ModelPackageContainerDefinitionArgs();
    }
}
