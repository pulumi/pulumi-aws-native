// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker.Inputs
{

    /// <summary>
    /// A collection of Domain settings.
    /// </summary>
    public sealed class DomainSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A collection of settings that configure the domain's Docker interaction.
        /// </summary>
        [Input("dockerSettings")]
        public Input<Inputs.DomainDockerSettingsArgs>? DockerSettings { get; set; }

        /// <summary>
        /// The configuration for attaching a SageMaker user profile name to the execution role as a sts:SourceIdentity key.
        /// </summary>
        [Input("executionRoleIdentityConfig")]
        public Input<Pulumi.AwsNative.SageMaker.DomainSettingsExecutionRoleIdentityConfig>? ExecutionRoleIdentityConfig { get; set; }

        /// <summary>
        /// The IP address type for the domain. Specify `ipv4` for IPv4-only connectivity or `dualstack` for both IPv4 and IPv6 connectivity. When you specify `dualstack` , the subnet must support IPv6 CIDR blocks. If not specified, defaults to `ipv4` .
        /// </summary>
        [Input("ipAddressType")]
        public Input<Pulumi.AwsNative.SageMaker.DomainIpAddressType>? IpAddressType { get; set; }

        /// <summary>
        /// A collection of settings that configure the `RStudioServerPro` Domain-level app.
        /// </summary>
        [Input("rStudioServerProDomainSettings")]
        public Input<Inputs.DomainRStudioServerProDomainSettingsArgs>? RStudioServerProDomainSettings { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// The settings that apply to an SageMaker AI domain when you use it in Amazon SageMaker Unified Studio.
        /// </summary>
        [Input("unifiedStudioSettings")]
        public Input<Inputs.DomainUnifiedStudioSettingsArgs>? UnifiedStudioSettings { get; set; }

        public DomainSettingsArgs()
        {
        }
        public static new DomainSettingsArgs Empty => new DomainSettingsArgs();
    }
}
