// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker.Inputs
{

    /// <summary>
    /// The content of the model card.
    /// </summary>
    public sealed class ModelCardContentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Additional information about the model.
        /// </summary>
        [Input("additionalInformation")]
        public Input<Inputs.ModelCardAdditionalInformationArgs>? AdditionalInformation { get; set; }

        /// <summary>
        /// Information about how the model supports business goals.
        /// </summary>
        [Input("businessDetails")]
        public Input<Inputs.ModelCardBusinessDetailsArgs>? BusinessDetails { get; set; }

        [Input("evaluationDetails")]
        private InputList<Inputs.ModelCardEvaluationDetailArgs>? _evaluationDetails;

        /// <summary>
        /// An overview about the model's evaluation.
        /// </summary>
        public InputList<Inputs.ModelCardEvaluationDetailArgs> EvaluationDetails
        {
            get => _evaluationDetails ?? (_evaluationDetails = new InputList<Inputs.ModelCardEvaluationDetailArgs>());
            set => _evaluationDetails = value;
        }

        /// <summary>
        /// The intended uses of a model.
        /// </summary>
        [Input("intendedUses")]
        public Input<Inputs.ModelCardIntendedUsesArgs>? IntendedUses { get; set; }

        /// <summary>
        /// An overview about the model.
        /// </summary>
        [Input("modelOverview")]
        public Input<Inputs.ModelCardModelOverviewArgs>? ModelOverview { get; set; }

        [Input("modelPackageDetails")]
        public Input<Inputs.ModelCardModelPackageDetailsArgs>? ModelPackageDetails { get; set; }

        /// <summary>
        /// The training details of the model
        /// </summary>
        [Input("trainingDetails")]
        public Input<Inputs.ModelCardTrainingDetailsArgs>? TrainingDetails { get; set; }

        public ModelCardContentArgs()
        {
        }
        public static new ModelCardContentArgs Empty => new ModelCardContentArgs();
    }
}
