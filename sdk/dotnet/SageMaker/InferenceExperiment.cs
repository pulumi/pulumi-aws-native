// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker
{
    /// <summary>
    /// Resource Type definition for AWS::SageMaker::InferenceExperiment
    /// </summary>
    [AwsNativeResourceType("aws-native:sagemaker:InferenceExperiment")]
    public partial class InferenceExperiment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the inference experiment.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The timestamp at which you created the inference experiment.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        [Output("dataStorageConfig")]
        public Output<Outputs.InferenceExperimentDataStorageConfig?> DataStorageConfig { get; private set; } = null!;

        /// <summary>
        /// The description of the inference experiment.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The desired state of the experiment after starting or stopping operation.
        /// </summary>
        [Output("desiredState")]
        public Output<Pulumi.AwsNative.SageMaker.InferenceExperimentDesiredState?> DesiredState { get; private set; } = null!;

        [Output("endpointMetadata")]
        public Output<Outputs.InferenceExperimentEndpointMetadata> EndpointMetadata { get; private set; } = null!;

        [Output("endpointName")]
        public Output<string> EndpointName { get; private set; } = null!;

        /// <summary>
        /// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
        /// </summary>
        [Output("kmsKey")]
        public Output<string?> KmsKey { get; private set; } = null!;

        /// <summary>
        /// The timestamp at which you last modified the inference experiment.
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// An array of ModelVariantConfig objects. Each ModelVariantConfig object in the array describes the infrastructure configuration for the corresponding variant.
        /// </summary>
        [Output("modelVariants")]
        public Output<ImmutableArray<Outputs.InferenceExperimentModelVariantConfig>> ModelVariants { get; private set; } = null!;

        /// <summary>
        /// The name for the inference experiment.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to access model artifacts and container images, and manage Amazon SageMaker Inference endpoints for model deployment.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("schedule")]
        public Output<Outputs.InferenceExperimentSchedule?> Schedule { get; private set; } = null!;

        [Output("shadowModeConfig")]
        public Output<Outputs.InferenceExperimentShadowModeConfig?> ShadowModeConfig { get; private set; } = null!;

        /// <summary>
        /// The status of the inference experiment.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.SageMaker.InferenceExperimentStatus> Status { get; private set; } = null!;

        /// <summary>
        /// The error message or client-specified reason from the StopInferenceExperiment API, that explains the status of the inference experiment.
        /// </summary>
        [Output("statusReason")]
        public Output<string?> StatusReason { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.InferenceExperimentTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the inference experiment that you want to run.
        /// </summary>
        [Output("type")]
        public Output<Pulumi.AwsNative.SageMaker.InferenceExperimentType> Type { get; private set; } = null!;


        /// <summary>
        /// Create a InferenceExperiment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InferenceExperiment(string name, InferenceExperimentArgs args, CustomResourceOptions? options = null)
            : base("aws-native:sagemaker:InferenceExperiment", name, args ?? new InferenceExperimentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InferenceExperiment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:sagemaker:InferenceExperiment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InferenceExperiment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InferenceExperiment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new InferenceExperiment(name, id, options);
        }
    }

    public sealed class InferenceExperimentArgs : global::Pulumi.ResourceArgs
    {
        [Input("dataStorageConfig")]
        public Input<Inputs.InferenceExperimentDataStorageConfigArgs>? DataStorageConfig { get; set; }

        /// <summary>
        /// The description of the inference experiment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The desired state of the experiment after starting or stopping operation.
        /// </summary>
        [Input("desiredState")]
        public Input<Pulumi.AwsNative.SageMaker.InferenceExperimentDesiredState>? DesiredState { get; set; }

        [Input("endpointName", required: true)]
        public Input<string> EndpointName { get; set; } = null!;

        /// <summary>
        /// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
        /// </summary>
        [Input("kmsKey")]
        public Input<string>? KmsKey { get; set; }

        [Input("modelVariants", required: true)]
        private InputList<Inputs.InferenceExperimentModelVariantConfigArgs>? _modelVariants;

        /// <summary>
        /// An array of ModelVariantConfig objects. Each ModelVariantConfig object in the array describes the infrastructure configuration for the corresponding variant.
        /// </summary>
        public InputList<Inputs.InferenceExperimentModelVariantConfigArgs> ModelVariants
        {
            get => _modelVariants ?? (_modelVariants = new InputList<Inputs.InferenceExperimentModelVariantConfigArgs>());
            set => _modelVariants = value;
        }

        /// <summary>
        /// The name for the inference experiment.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to access model artifacts and container images, and manage Amazon SageMaker Inference endpoints for model deployment.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("schedule")]
        public Input<Inputs.InferenceExperimentScheduleArgs>? Schedule { get; set; }

        [Input("shadowModeConfig")]
        public Input<Inputs.InferenceExperimentShadowModeConfigArgs>? ShadowModeConfig { get; set; }

        /// <summary>
        /// The error message or client-specified reason from the StopInferenceExperiment API, that explains the status of the inference experiment.
        /// </summary>
        [Input("statusReason")]
        public Input<string>? StatusReason { get; set; }

        [Input("tags")]
        private InputList<Inputs.InferenceExperimentTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.InferenceExperimentTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.InferenceExperimentTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of the inference experiment that you want to run.
        /// </summary>
        [Input("type", required: true)]
        public Input<Pulumi.AwsNative.SageMaker.InferenceExperimentType> Type { get; set; } = null!;

        public InferenceExperimentArgs()
        {
        }
        public static new InferenceExperimentArgs Empty => new InferenceExperimentArgs();
    }
}
