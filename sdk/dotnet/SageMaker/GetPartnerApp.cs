// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker
{
    public static class GetPartnerApp
    {
        /// <summary>
        /// Resource Type definition for AWS::SageMaker::PartnerApp
        /// </summary>
        public static Task<GetPartnerAppResult> InvokeAsync(GetPartnerAppArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPartnerAppResult>("aws-native:sagemaker:getPartnerApp", args ?? new GetPartnerAppArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SageMaker::PartnerApp
        /// </summary>
        public static Output<GetPartnerAppResult> Invoke(GetPartnerAppInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPartnerAppResult>("aws-native:sagemaker:getPartnerApp", args ?? new GetPartnerAppInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SageMaker::PartnerApp
        /// </summary>
        public static Output<GetPartnerAppResult> Invoke(GetPartnerAppInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPartnerAppResult>("aws-native:sagemaker:getPartnerApp", args ?? new GetPartnerAppInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPartnerAppArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the created PartnerApp.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetPartnerAppArgs()
        {
        }
        public static new GetPartnerAppArgs Empty => new GetPartnerAppArgs();
    }

    public sealed class GetPartnerAppInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the created PartnerApp.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetPartnerAppInvokeArgs()
        {
        }
        public static new GetPartnerAppInvokeArgs Empty => new GetPartnerAppInvokeArgs();
    }


    [OutputType]
    public sealed class GetPartnerAppResult
    {
        /// <summary>
        /// A collection of settings that specify the maintenance schedule for the PartnerApp.
        /// </summary>
        public readonly Outputs.PartnerAppConfig? ApplicationConfig;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the created PartnerApp.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The AppServerUrl based on app and account-info.
        /// </summary>
        public readonly string? BaseUrl;
        /// <summary>
        /// Enables IAM Session based Identity for PartnerApp.
        /// </summary>
        public readonly bool? EnableIamSessionBasedIdentity;
        /// <summary>
        /// A collection of settings that specify the maintenance schedule for the PartnerApp.
        /// </summary>
        public readonly Outputs.PartnerAppMaintenanceConfig? MaintenanceConfig;
        /// <summary>
        /// A list of tags to apply to the PartnerApp.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The tier of the PartnerApp.
        /// </summary>
        public readonly string? Tier;

        [OutputConstructor]
        private GetPartnerAppResult(
            Outputs.PartnerAppConfig? applicationConfig,

            string? arn,

            string? baseUrl,

            bool? enableIamSessionBasedIdentity,

            Outputs.PartnerAppMaintenanceConfig? maintenanceConfig,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            string? tier)
        {
            ApplicationConfig = applicationConfig;
            Arn = arn;
            BaseUrl = baseUrl;
            EnableIamSessionBasedIdentity = enableIamSessionBasedIdentity;
            MaintenanceConfig = maintenanceConfig;
            Tags = tags;
            Tier = tier;
        }
    }
}
