// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker
{
    public static class GetCluster
    {
        /// <summary>
        /// Resource Type definition for AWS::SageMaker::Cluster
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("aws-native:sagemaker:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SageMaker::Cluster
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws-native:sagemaker:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SageMaker::Cluster
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws-native:sagemaker:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the HyperPod Cluster.
        /// </summary>
        [Input("clusterArn", required: true)]
        public string ClusterArn { get; set; } = null!;

        public GetClusterArgs()
        {
        }
        public static new GetClusterArgs Empty => new GetClusterArgs();
    }

    public sealed class GetClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the HyperPod Cluster.
        /// </summary>
        [Input("clusterArn", required: true)]
        public Input<string> ClusterArn { get; set; } = null!;

        public GetClusterInvokeArgs()
        {
        }
        public static new GetClusterInvokeArgs Empty => new GetClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the HyperPod Cluster.
        /// </summary>
        public readonly string? ClusterArn;
        /// <summary>
        /// The status of the HyperPod Cluster.
        /// </summary>
        public readonly Pulumi.AwsNative.SageMaker.ClusterStatus? ClusterStatus;
        /// <summary>
        /// The time at which the HyperPod cluster was created.
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// The failure message of the HyperPod Cluster.
        /// </summary>
        public readonly string? FailureMessage;
        /// <summary>
        /// The instance groups of the SageMaker HyperPod cluster. To delete an instance group, remove it from the array.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterInstanceGroup> InstanceGroups;
        /// <summary>
        /// If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.
        /// </summary>
        public readonly Pulumi.AwsNative.SageMaker.ClusterNodeRecovery? NodeRecovery;
        public readonly ImmutableArray<Outputs.ClusterRestrictedInstanceGroup> RestrictedInstanceGroups;
        /// <summary>
        /// Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetClusterResult(
            string? clusterArn,

            Pulumi.AwsNative.SageMaker.ClusterStatus? clusterStatus,

            string? creationTime,

            string? failureMessage,

            ImmutableArray<Outputs.ClusterInstanceGroup> instanceGroups,

            Pulumi.AwsNative.SageMaker.ClusterNodeRecovery? nodeRecovery,

            ImmutableArray<Outputs.ClusterRestrictedInstanceGroup> restrictedInstanceGroups,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            ClusterArn = clusterArn;
            ClusterStatus = clusterStatus;
            CreationTime = creationTime;
            FailureMessage = failureMessage;
            InstanceGroups = instanceGroups;
            NodeRecovery = nodeRecovery;
            RestrictedInstanceGroups = restrictedInstanceGroups;
            Tags = tags;
        }
    }
}
