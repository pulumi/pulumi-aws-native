// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SageMaker
{
    /// <summary>
    /// Resource Type definition for AWS::SageMaker::ModelPackage
    /// </summary>
    [AwsNativeResourceType("aws-native:sagemaker:ModelPackage")]
    public partial class ModelPackage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An array of additional Inference Specification objects.
        /// </summary>
        [Output("additionalInferenceSpecifications")]
        public Output<ImmutableArray<Outputs.ModelPackageAdditionalInferenceSpecificationDefinition>> AdditionalInferenceSpecifications { get; private set; } = null!;

        /// <summary>
        /// An array of additional Inference Specification objects to be added to the existing array. The total number of additional Inference Specification objects cannot exceed 15. Each additional Inference Specification object specifies artifacts based on this model package that can be used on inference endpoints. Generally used with SageMaker Neo to store the compiled artifacts.
        /// </summary>
        [Output("additionalInferenceSpecificationsToAdd")]
        public Output<ImmutableArray<Outputs.ModelPackageAdditionalInferenceSpecificationDefinition>> AdditionalInferenceSpecificationsToAdd { get; private set; } = null!;

        /// <summary>
        /// A description provided when the model approval is set.
        /// </summary>
        [Output("approvalDescription")]
        public Output<string?> ApprovalDescription { get; private set; } = null!;

        /// <summary>
        /// Whether the model package is to be certified to be listed on AWS Marketplace. For information about listing model packages on AWS Marketplace, see [List Your Algorithm or Model Package on AWS Marketplace](https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-mkt-list.html) .
        /// </summary>
        [Output("certifyForMarketplace")]
        public Output<bool?> CertifyForMarketplace { get; private set; } = null!;

        /// <summary>
        /// A unique token that guarantees that the call to this API is idempotent.
        /// </summary>
        [Output("clientToken")]
        public Output<string?> ClientToken { get; private set; } = null!;

        /// <summary>
        /// The time that the model package was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The metadata properties for the model package.
        /// </summary>
        [Output("customerMetadataProperties")]
        public Output<Outputs.ModelPackageCustomerMetadataProperties?> CustomerMetadataProperties { get; private set; } = null!;

        /// <summary>
        /// The machine learning domain of your model package and its components. Common machine learning domains include computer vision and natural language processing.
        /// </summary>
        [Output("domain")]
        public Output<string?> Domain { get; private set; } = null!;

        /// <summary>
        /// Represents the drift check baselines that can be used when the model monitor is set using the model package.
        /// </summary>
        [Output("driftCheckBaselines")]
        public Output<Outputs.ModelPackageDriftCheckBaselines?> DriftCheckBaselines { get; private set; } = null!;

        /// <summary>
        /// Defines how to perform inference generation after a training job is run.
        /// </summary>
        [Output("inferenceSpecification")]
        public Output<Outputs.ModelPackageInferenceSpecification?> InferenceSpecification { get; private set; } = null!;

        /// <summary>
        /// The last time the model package was modified.
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string?> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// Metadata properties of the tracking entity, trial, or trial component.
        /// </summary>
        [Output("metadataProperties")]
        public Output<Outputs.ModelPackageMetadataProperties?> MetadataProperties { get; private set; } = null!;

        /// <summary>
        /// The approval status of the model. This can be one of the following values.
        /// 
        /// - `APPROVED` - The model is approved
        /// - `REJECTED` - The model is rejected.
        /// - `PENDING_MANUAL_APPROVAL` - The model is waiting for manual approval.
        /// </summary>
        [Output("modelApprovalStatus")]
        public Output<Pulumi.AwsNative.SageMaker.ModelPackageModelApprovalStatus?> ModelApprovalStatus { get; private set; } = null!;

        [Output("modelCard")]
        public Output<Outputs.ModelPackageModelCard?> ModelCard { get; private set; } = null!;

        /// <summary>
        /// Metrics for the model.
        /// </summary>
        [Output("modelMetrics")]
        public Output<Outputs.ModelPackageModelMetrics?> ModelMetrics { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the model package.
        /// </summary>
        [Output("modelPackageArn")]
        public Output<string> ModelPackageArn { get; private set; } = null!;

        /// <summary>
        /// The description of the model package.
        /// </summary>
        [Output("modelPackageDescription")]
        public Output<string?> ModelPackageDescription { get; private set; } = null!;

        /// <summary>
        /// The model group to which the model belongs.
        /// </summary>
        [Output("modelPackageGroupName")]
        public Output<string?> ModelPackageGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the model.
        /// </summary>
        [Output("modelPackageName")]
        public Output<string?> ModelPackageName { get; private set; } = null!;

        /// <summary>
        /// The status of the model package. This can be one of the following values.
        /// 
        /// - `PENDING` - The model package creation is pending.
        /// - `IN_PROGRESS` - The model package is in the process of being created.
        /// - `COMPLETED` - The model package was successfully created.
        /// - `FAILED` - The model package creation failed.
        /// - `DELETING` - The model package is in the process of being deleted.
        /// </summary>
        [Output("modelPackageStatus")]
        public Output<Pulumi.AwsNative.SageMaker.ModelPackageStatus> ModelPackageStatus { get; private set; } = null!;

        /// <summary>
        /// Specifies the validation and image scan statuses of the model package.
        /// </summary>
        [Output("modelPackageStatusDetails")]
        public Output<Outputs.ModelPackageStatusDetails?> ModelPackageStatusDetails { get; private set; } = null!;

        /// <summary>
        /// The version number of a versioned model.
        /// </summary>
        [Output("modelPackageVersion")]
        public Output<int?> ModelPackageVersion { get; private set; } = null!;

        /// <summary>
        /// The Amazon Simple Storage Service path where the sample payload are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
        /// </summary>
        [Output("samplePayloadUrl")]
        public Output<string?> SamplePayloadUrl { get; private set; } = null!;

        [Output("securityConfig")]
        public Output<Outputs.ModelPackageSecurityConfig?> SecurityConfig { get; private set; } = null!;

        /// <summary>
        /// Indicates if you want to skip model validation.
        /// </summary>
        [Output("skipModelValidation")]
        public Output<Pulumi.AwsNative.SageMaker.ModelPackageSkipModelValidation?> SkipModelValidation { get; private set; } = null!;

        /// <summary>
        /// A list of algorithms that were used to create a model package.
        /// </summary>
        [Output("sourceAlgorithmSpecification")]
        public Output<Outputs.ModelPackageSourceAlgorithmSpecification?> SourceAlgorithmSpecification { get; private set; } = null!;

        [Output("sourceUri")]
        public Output<string?> SourceUri { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The machine learning task your model package accomplishes. Common machine learning tasks include object detection and image classification.
        /// </summary>
        [Output("task")]
        public Output<string?> Task { get; private set; } = null!;

        /// <summary>
        /// Specifies batch transform jobs that SageMaker runs to validate your model package.
        /// </summary>
        [Output("validationSpecification")]
        public Output<Outputs.ModelPackageValidationSpecification?> ValidationSpecification { get; private set; } = null!;


        /// <summary>
        /// Create a ModelPackage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ModelPackage(string name, ModelPackageArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:sagemaker:ModelPackage", name, args ?? new ModelPackageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ModelPackage(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:sagemaker:ModelPackage", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "clientToken",
                    "domain",
                    "driftCheckBaselines",
                    "inferenceSpecification",
                    "metadataProperties",
                    "modelMetrics",
                    "modelPackageDescription",
                    "modelPackageGroupName",
                    "samplePayloadUrl",
                    "securityConfig",
                    "sourceAlgorithmSpecification",
                    "task",
                    "validationSpecification",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ModelPackage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ModelPackage Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ModelPackage(name, id, options);
        }
    }

    public sealed class ModelPackageArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalInferenceSpecifications")]
        private InputList<Inputs.ModelPackageAdditionalInferenceSpecificationDefinitionArgs>? _additionalInferenceSpecifications;

        /// <summary>
        /// An array of additional Inference Specification objects.
        /// </summary>
        public InputList<Inputs.ModelPackageAdditionalInferenceSpecificationDefinitionArgs> AdditionalInferenceSpecifications
        {
            get => _additionalInferenceSpecifications ?? (_additionalInferenceSpecifications = new InputList<Inputs.ModelPackageAdditionalInferenceSpecificationDefinitionArgs>());
            set => _additionalInferenceSpecifications = value;
        }

        [Input("additionalInferenceSpecificationsToAdd")]
        private InputList<Inputs.ModelPackageAdditionalInferenceSpecificationDefinitionArgs>? _additionalInferenceSpecificationsToAdd;

        /// <summary>
        /// An array of additional Inference Specification objects to be added to the existing array. The total number of additional Inference Specification objects cannot exceed 15. Each additional Inference Specification object specifies artifacts based on this model package that can be used on inference endpoints. Generally used with SageMaker Neo to store the compiled artifacts.
        /// </summary>
        public InputList<Inputs.ModelPackageAdditionalInferenceSpecificationDefinitionArgs> AdditionalInferenceSpecificationsToAdd
        {
            get => _additionalInferenceSpecificationsToAdd ?? (_additionalInferenceSpecificationsToAdd = new InputList<Inputs.ModelPackageAdditionalInferenceSpecificationDefinitionArgs>());
            set => _additionalInferenceSpecificationsToAdd = value;
        }

        /// <summary>
        /// A description provided when the model approval is set.
        /// </summary>
        [Input("approvalDescription")]
        public Input<string>? ApprovalDescription { get; set; }

        /// <summary>
        /// Whether the model package is to be certified to be listed on AWS Marketplace. For information about listing model packages on AWS Marketplace, see [List Your Algorithm or Model Package on AWS Marketplace](https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-mkt-list.html) .
        /// </summary>
        [Input("certifyForMarketplace")]
        public Input<bool>? CertifyForMarketplace { get; set; }

        /// <summary>
        /// A unique token that guarantees that the call to this API is idempotent.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// The metadata properties for the model package.
        /// </summary>
        [Input("customerMetadataProperties")]
        public Input<Inputs.ModelPackageCustomerMetadataPropertiesArgs>? CustomerMetadataProperties { get; set; }

        /// <summary>
        /// The machine learning domain of your model package and its components. Common machine learning domains include computer vision and natural language processing.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Represents the drift check baselines that can be used when the model monitor is set using the model package.
        /// </summary>
        [Input("driftCheckBaselines")]
        public Input<Inputs.ModelPackageDriftCheckBaselinesArgs>? DriftCheckBaselines { get; set; }

        /// <summary>
        /// Defines how to perform inference generation after a training job is run.
        /// </summary>
        [Input("inferenceSpecification")]
        public Input<Inputs.ModelPackageInferenceSpecificationArgs>? InferenceSpecification { get; set; }

        /// <summary>
        /// The last time the model package was modified.
        /// </summary>
        [Input("lastModifiedTime")]
        public Input<string>? LastModifiedTime { get; set; }

        /// <summary>
        /// Metadata properties of the tracking entity, trial, or trial component.
        /// </summary>
        [Input("metadataProperties")]
        public Input<Inputs.ModelPackageMetadataPropertiesArgs>? MetadataProperties { get; set; }

        /// <summary>
        /// The approval status of the model. This can be one of the following values.
        /// 
        /// - `APPROVED` - The model is approved
        /// - `REJECTED` - The model is rejected.
        /// - `PENDING_MANUAL_APPROVAL` - The model is waiting for manual approval.
        /// </summary>
        [Input("modelApprovalStatus")]
        public Input<Pulumi.AwsNative.SageMaker.ModelPackageModelApprovalStatus>? ModelApprovalStatus { get; set; }

        [Input("modelCard")]
        public Input<Inputs.ModelPackageModelCardArgs>? ModelCard { get; set; }

        /// <summary>
        /// Metrics for the model.
        /// </summary>
        [Input("modelMetrics")]
        public Input<Inputs.ModelPackageModelMetricsArgs>? ModelMetrics { get; set; }

        /// <summary>
        /// The description of the model package.
        /// </summary>
        [Input("modelPackageDescription")]
        public Input<string>? ModelPackageDescription { get; set; }

        /// <summary>
        /// The model group to which the model belongs.
        /// </summary>
        [Input("modelPackageGroupName")]
        public Input<string>? ModelPackageGroupName { get; set; }

        /// <summary>
        /// The name of the model.
        /// </summary>
        [Input("modelPackageName")]
        public Input<string>? ModelPackageName { get; set; }

        /// <summary>
        /// Specifies the validation and image scan statuses of the model package.
        /// </summary>
        [Input("modelPackageStatusDetails")]
        public Input<Inputs.ModelPackageStatusDetailsArgs>? ModelPackageStatusDetails { get; set; }

        /// <summary>
        /// The version number of a versioned model.
        /// </summary>
        [Input("modelPackageVersion")]
        public Input<int>? ModelPackageVersion { get; set; }

        /// <summary>
        /// The Amazon Simple Storage Service path where the sample payload are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
        /// </summary>
        [Input("samplePayloadUrl")]
        public Input<string>? SamplePayloadUrl { get; set; }

        [Input("securityConfig")]
        public Input<Inputs.ModelPackageSecurityConfigArgs>? SecurityConfig { get; set; }

        /// <summary>
        /// Indicates if you want to skip model validation.
        /// </summary>
        [Input("skipModelValidation")]
        public Input<Pulumi.AwsNative.SageMaker.ModelPackageSkipModelValidation>? SkipModelValidation { get; set; }

        /// <summary>
        /// A list of algorithms that were used to create a model package.
        /// </summary>
        [Input("sourceAlgorithmSpecification")]
        public Input<Inputs.ModelPackageSourceAlgorithmSpecificationArgs>? SourceAlgorithmSpecification { get; set; }

        [Input("sourceUri")]
        public Input<string>? SourceUri { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The machine learning task your model package accomplishes. Common machine learning tasks include object detection and image classification.
        /// </summary>
        [Input("task")]
        public Input<string>? Task { get; set; }

        /// <summary>
        /// Specifies batch transform jobs that SageMaker runs to validate your model package.
        /// </summary>
        [Input("validationSpecification")]
        public Input<Inputs.ModelPackageValidationSpecificationArgs>? ValidationSpecification { get; set; }

        public ModelPackageArgs()
        {
        }
        public static new ModelPackageArgs Empty => new ModelPackageArgs();
    }
}
