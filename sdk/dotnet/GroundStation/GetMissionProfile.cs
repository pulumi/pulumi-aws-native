// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GroundStation
{
    public static class GetMissionProfile
    {
        /// <summary>
        /// AWS Ground Station Mission Profile resource type for CloudFormation.
        /// </summary>
        public static Task<GetMissionProfileResult> InvokeAsync(GetMissionProfileArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMissionProfileResult>("aws-native:groundstation:getMissionProfile", args ?? new GetMissionProfileArgs(), options.WithDefaults());

        /// <summary>
        /// AWS Ground Station Mission Profile resource type for CloudFormation.
        /// </summary>
        public static Output<GetMissionProfileResult> Invoke(GetMissionProfileInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMissionProfileResult>("aws-native:groundstation:getMissionProfile", args ?? new GetMissionProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMissionProfileArgs : Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetMissionProfileArgs()
        {
        }
    }

    public sealed class GetMissionProfileInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetMissionProfileInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMissionProfileResult
    {
        public readonly string? Arn;
        /// <summary>
        /// Post-pass time needed after the contact.
        /// </summary>
        public readonly int? ContactPostPassDurationSeconds;
        /// <summary>
        /// Pre-pass time needed before the contact.
        /// </summary>
        public readonly int? ContactPrePassDurationSeconds;
        public readonly ImmutableArray<Outputs.MissionProfileDataflowEdge> DataflowEdges;
        public readonly string? Id;
        /// <summary>
        /// Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
        /// </summary>
        public readonly int? MinimumViableContactDurationSeconds;
        /// <summary>
        /// A name used to identify a mission profile.
        /// </summary>
        public readonly string? Name;
        public readonly string? Region;
        public readonly ImmutableArray<Outputs.MissionProfileTag> Tags;
        public readonly string? TrackingConfigArn;

        [OutputConstructor]
        private GetMissionProfileResult(
            string? arn,

            int? contactPostPassDurationSeconds,

            int? contactPrePassDurationSeconds,

            ImmutableArray<Outputs.MissionProfileDataflowEdge> dataflowEdges,

            string? id,

            int? minimumViableContactDurationSeconds,

            string? name,

            string? region,

            ImmutableArray<Outputs.MissionProfileTag> tags,

            string? trackingConfigArn)
        {
            Arn = arn;
            ContactPostPassDurationSeconds = contactPostPassDurationSeconds;
            ContactPrePassDurationSeconds = contactPrePassDurationSeconds;
            DataflowEdges = dataflowEdges;
            Id = id;
            MinimumViableContactDurationSeconds = minimumViableContactDurationSeconds;
            Name = name;
            Region = region;
            Tags = tags;
            TrackingConfigArn = trackingConfigArn;
        }
    }
}
