// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ses
{
    /// <summary>
    /// Resource schema for AWS::SES::ConfigurationSet.
    /// 
    /// ## Example Usage
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var configSetName = config.Require("configSetName");
    ///     var configSet = new AwsNative.Ses.ConfigurationSet("configSet", new()
    ///     {
    ///         Name = configSetName,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var configSetName = config.Require("configSetName");
    ///     var configSet = new AwsNative.Ses.ConfigurationSet("configSet", new()
    ///     {
    ///         Name = configSetName,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var configSetName = config.Require("configSetName");
    ///     var eventDestinationName = config.Require("eventDestinationName");
    ///     var eventType1 = config.Require("eventType1");
    ///     var eventType2 = config.Require("eventType2");
    ///     var eventType3 = config.Require("eventType3");
    ///     var dimensionName1 = config.Require("dimensionName1");
    ///     var dimensionValueSource1 = config.Require("dimensionValueSource1");
    ///     var defaultDimensionValue1 = config.Require("defaultDimensionValue1");
    ///     var dimensionName2 = config.Require("dimensionName2");
    ///     var dimensionValueSource2 = config.Require("dimensionValueSource2");
    ///     var defaultDimensionValue2 = config.Require("defaultDimensionValue2");
    ///     var configSet = new AwsNative.Ses.ConfigurationSet("configSet", new()
    ///     {
    ///         Name = configSetName,
    ///     });
    /// 
    ///     var cwEventDestination = new AwsNative.Ses.ConfigurationSetEventDestination("cwEventDestination", new()
    ///     {
    ///         ConfigurationSetName = configSet.Id,
    ///         EventDestination = new AwsNative.Ses.Inputs.ConfigurationSetEventDestinationEventDestinationArgs
    ///         {
    ///             Name = eventDestinationName,
    ///             Enabled = true,
    ///             MatchingEventTypes = new[]
    ///             {
    ///                 eventType1,
    ///                 eventType2,
    ///                 eventType3,
    ///             },
    ///             CloudWatchDestination = new AwsNative.Ses.Inputs.ConfigurationSetEventDestinationCloudWatchDestinationArgs
    ///             {
    ///                 DimensionConfigurations = new[]
    ///                 {
    ///                     new AwsNative.Ses.Inputs.ConfigurationSetEventDestinationDimensionConfigurationArgs
    ///                     {
    ///                         DimensionName = dimensionName1,
    ///                         DimensionValueSource = dimensionValueSource1,
    ///                         DefaultDimensionValue = defaultDimensionValue1,
    ///                     },
    ///                     new AwsNative.Ses.Inputs.ConfigurationSetEventDestinationDimensionConfigurationArgs
    ///                     {
    ///                         DimensionName = dimensionName2,
    ///                         DimensionValueSource = dimensionValueSource2,
    ///                         DefaultDimensionValue = defaultDimensionValue2,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var configSetName = config.Require("configSetName");
    ///     var eventDestinationName = config.Require("eventDestinationName");
    ///     var eventType1 = config.Require("eventType1");
    ///     var eventType2 = config.Require("eventType2");
    ///     var eventType3 = config.Require("eventType3");
    ///     var dimensionName1 = config.Require("dimensionName1");
    ///     var dimensionValueSource1 = config.Require("dimensionValueSource1");
    ///     var defaultDimensionValue1 = config.Require("defaultDimensionValue1");
    ///     var dimensionName2 = config.Require("dimensionName2");
    ///     var dimensionValueSource2 = config.Require("dimensionValueSource2");
    ///     var defaultDimensionValue2 = config.Require("defaultDimensionValue2");
    ///     var configSet = new AwsNative.Ses.ConfigurationSet("configSet", new()
    ///     {
    ///         Name = configSetName,
    ///     });
    /// 
    ///     var cwEventDestination = new AwsNative.Ses.ConfigurationSetEventDestination("cwEventDestination", new()
    ///     {
    ///         ConfigurationSetName = configSet.Id,
    ///         EventDestination = new AwsNative.Ses.Inputs.ConfigurationSetEventDestinationEventDestinationArgs
    ///         {
    ///             Name = eventDestinationName,
    ///             Enabled = true,
    ///             MatchingEventTypes = new[]
    ///             {
    ///                 eventType1,
    ///                 eventType2,
    ///                 eventType3,
    ///             },
    ///             CloudWatchDestination = new AwsNative.Ses.Inputs.ConfigurationSetEventDestinationCloudWatchDestinationArgs
    ///             {
    ///                 DimensionConfigurations = new[]
    ///                 {
    ///                     new AwsNative.Ses.Inputs.ConfigurationSetEventDestinationDimensionConfigurationArgs
    ///                     {
    ///                         DimensionName = dimensionName1,
    ///                         DimensionValueSource = dimensionValueSource1,
    ///                         DefaultDimensionValue = defaultDimensionValue1,
    ///                     },
    ///                     new AwsNative.Ses.Inputs.ConfigurationSetEventDestinationDimensionConfigurationArgs
    ///                     {
    ///                         DimensionName = dimensionName2,
    ///                         DimensionValueSource = dimensionValueSource2,
    ///                         DefaultDimensionValue = defaultDimensionValue2,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// </summary>
    [AwsNativeResourceType("aws-native:ses:ConfigurationSet")]
    public partial class ConfigurationSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of the dedicated IP pool to associate with the configuration set and whether messages that use the configuration set are required to use Transport Layer Security (TLS).
        /// </summary>
        [Output("deliveryOptions")]
        public Output<Outputs.ConfigurationSetDeliveryOptions?> DeliveryOptions { get; private set; } = null!;

        /// <summary>
        /// The name of the configuration set.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
        /// </summary>
        [Output("reputationOptions")]
        public Output<Outputs.ConfigurationSetReputationOptions?> ReputationOptions { get; private set; } = null!;

        /// <summary>
        /// An object that defines whether or not Amazon SES can send email that you send using the configuration set.
        /// </summary>
        [Output("sendingOptions")]
        public Output<Outputs.ConfigurationSetSendingOptions?> SendingOptions { get; private set; } = null!;

        /// <summary>
        /// An object that contains information about the suppression list preferences for your account.
        /// </summary>
        [Output("suppressionOptions")]
        public Output<Outputs.ConfigurationSetSuppressionOptions?> SuppressionOptions { get; private set; } = null!;

        /// <summary>
        /// An object that defines the open and click tracking options for emails that you send using the configuration set.
        /// </summary>
        [Output("trackingOptions")]
        public Output<Outputs.ConfigurationSetTrackingOptions?> TrackingOptions { get; private set; } = null!;

        /// <summary>
        /// The Virtual Deliverability Manager (VDM) options that apply to the configuration set.
        /// </summary>
        [Output("vdmOptions")]
        public Output<Outputs.ConfigurationSetVdmOptions?> VdmOptions { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationSet(string name, ConfigurationSetArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:ses:ConfigurationSet", name, args ?? new ConfigurationSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationSet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ses:ConfigurationSet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationSet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ConfigurationSet(name, id, options);
        }
    }

    public sealed class ConfigurationSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the dedicated IP pool to associate with the configuration set and whether messages that use the configuration set are required to use Transport Layer Security (TLS).
        /// </summary>
        [Input("deliveryOptions")]
        public Input<Inputs.ConfigurationSetDeliveryOptionsArgs>? DeliveryOptions { get; set; }

        /// <summary>
        /// The name of the configuration set.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
        /// </summary>
        [Input("reputationOptions")]
        public Input<Inputs.ConfigurationSetReputationOptionsArgs>? ReputationOptions { get; set; }

        /// <summary>
        /// An object that defines whether or not Amazon SES can send email that you send using the configuration set.
        /// </summary>
        [Input("sendingOptions")]
        public Input<Inputs.ConfigurationSetSendingOptionsArgs>? SendingOptions { get; set; }

        /// <summary>
        /// An object that contains information about the suppression list preferences for your account.
        /// </summary>
        [Input("suppressionOptions")]
        public Input<Inputs.ConfigurationSetSuppressionOptionsArgs>? SuppressionOptions { get; set; }

        /// <summary>
        /// An object that defines the open and click tracking options for emails that you send using the configuration set.
        /// </summary>
        [Input("trackingOptions")]
        public Input<Inputs.ConfigurationSetTrackingOptionsArgs>? TrackingOptions { get; set; }

        /// <summary>
        /// The Virtual Deliverability Manager (VDM) options that apply to the configuration set.
        /// </summary>
        [Input("vdmOptions")]
        public Input<Inputs.ConfigurationSetVdmOptionsArgs>? VdmOptions { get; set; }

        public ConfigurationSetArgs()
        {
        }
        public static new ConfigurationSetArgs Empty => new ConfigurationSetArgs();
    }
}
