// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ses
{
    public static class GetEmailIdentity
    {
        /// <summary>
        /// Resource Type definition for AWS::SES::EmailIdentity
        /// </summary>
        public static Task<GetEmailIdentityResult> InvokeAsync(GetEmailIdentityArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEmailIdentityResult>("aws-native:ses:getEmailIdentity", args ?? new GetEmailIdentityArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SES::EmailIdentity
        /// </summary>
        public static Output<GetEmailIdentityResult> Invoke(GetEmailIdentityInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailIdentityResult>("aws-native:ses:getEmailIdentity", args ?? new GetEmailIdentityInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEmailIdentityArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email address or domain to verify.
        /// </summary>
        [Input("emailIdentity", required: true)]
        public string EmailIdentityValue { get; set; } = null!;

        public GetEmailIdentityArgs()
        {
        }
        public static new GetEmailIdentityArgs Empty => new GetEmailIdentityArgs();
    }

    public sealed class GetEmailIdentityInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email address or domain to verify.
        /// </summary>
        [Input("emailIdentity", required: true)]
        public Input<string> EmailIdentity { get; set; } = null!;

        public GetEmailIdentityInvokeArgs()
        {
        }
        public static new GetEmailIdentityInvokeArgs Empty => new GetEmailIdentityInvokeArgs();
    }


    [OutputType]
    public sealed class GetEmailIdentityResult
    {
        /// <summary>
        /// Used to associate a configuration set with an email identity.
        /// </summary>
        public readonly Outputs.EmailIdentityConfigurationSetAttributes? ConfigurationSetAttributes;
        /// <summary>
        /// Used to enable or disable DKIM authentication for an email identity.
        /// </summary>
        public readonly Outputs.EmailIdentityDkimAttributes? DkimAttributes;
        /// <summary>
        /// The host name for the first token that you have to add to the DNS configuration for your domain.
        /// </summary>
        public readonly string? DkimDnsTokenName1;
        /// <summary>
        /// The host name for the second token that you have to add to the DNS configuration for your domain.
        /// </summary>
        public readonly string? DkimDnsTokenName2;
        /// <summary>
        /// The host name for the third token that you have to add to the DNS configuration for your domain.
        /// </summary>
        public readonly string? DkimDnsTokenName3;
        /// <summary>
        /// The record value for the first token that you have to add to the DNS configuration for your domain.
        /// </summary>
        public readonly string? DkimDnsTokenValue1;
        /// <summary>
        /// The record value for the second token that you have to add to the DNS configuration for your domain.
        /// </summary>
        public readonly string? DkimDnsTokenValue2;
        /// <summary>
        /// The record value for the third token that you have to add to the DNS configuration for your domain.
        /// </summary>
        public readonly string? DkimDnsTokenValue3;
        /// <summary>
        /// Used to configure or change the DKIM authentication settings for an email domain identity. You can use this operation to do any of the following:
        /// 
        /// - Update the signing attributes for an identity that uses Bring Your Own DKIM (BYODKIM).
        /// - Update the key length that should be used for Easy DKIM.
        /// - Change from using no DKIM authentication to using Easy DKIM.
        /// - Change from using no DKIM authentication to using BYODKIM.
        /// - Change from using Easy DKIM to using BYODKIM.
        /// - Change from using BYODKIM to using Easy DKIM.
        /// </summary>
        public readonly Outputs.EmailIdentityDkimSigningAttributes? DkimSigningAttributes;
        /// <summary>
        /// Used to enable or disable feedback forwarding for an identity. This setting determines what happens when an identity is used to send an email that results in a bounce or complaint event.
        /// </summary>
        public readonly Outputs.EmailIdentityFeedbackAttributes? FeedbackAttributes;
        /// <summary>
        /// Used to enable or disable the custom Mail-From domain configuration for an email identity.
        /// </summary>
        public readonly Outputs.EmailIdentityMailFromAttributes? MailFromAttributes;

        [OutputConstructor]
        private GetEmailIdentityResult(
            Outputs.EmailIdentityConfigurationSetAttributes? configurationSetAttributes,

            Outputs.EmailIdentityDkimAttributes? dkimAttributes,

            string? dkimDnsTokenName1,

            string? dkimDnsTokenName2,

            string? dkimDnsTokenName3,

            string? dkimDnsTokenValue1,

            string? dkimDnsTokenValue2,

            string? dkimDnsTokenValue3,

            Outputs.EmailIdentityDkimSigningAttributes? dkimSigningAttributes,

            Outputs.EmailIdentityFeedbackAttributes? feedbackAttributes,

            Outputs.EmailIdentityMailFromAttributes? mailFromAttributes)
        {
            ConfigurationSetAttributes = configurationSetAttributes;
            DkimAttributes = dkimAttributes;
            DkimDnsTokenName1 = dkimDnsTokenName1;
            DkimDnsTokenName2 = dkimDnsTokenName2;
            DkimDnsTokenName3 = dkimDnsTokenName3;
            DkimDnsTokenValue1 = dkimDnsTokenValue1;
            DkimDnsTokenValue2 = dkimDnsTokenValue2;
            DkimDnsTokenValue3 = dkimDnsTokenValue3;
            DkimSigningAttributes = dkimSigningAttributes;
            FeedbackAttributes = feedbackAttributes;
            MailFromAttributes = mailFromAttributes;
        }
    }
}
