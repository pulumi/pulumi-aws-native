// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.FraudDetector.Outputs
{

    [OutputType]
    public sealed class DetectorOutcome
    {
        /// <summary>
        /// The outcome ARN.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The time when the outcome was created.
        /// </summary>
        public readonly string? CreatedTime;
        /// <summary>
        /// The description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Indicates whether the resource is defined within this CloudFormation template and impacts the create, update, and delete behavior of the stack. If the value is `true` , CloudFormation will create/update/delete the resource when creating/updating/deleting the stack. If the value is `false` , CloudFormation will validate that the object exists and then use it within the resource without making changes to the object.
        /// 
        /// For example, when creating `AWS::FraudDetector::Detector` you must define at least two variables. You can set `Inline=true` for these variables and CloudFormation will create/update/delete the variables as part of stack operations. However, if you set `Inline=false` , CloudFormation will associate the variables to your detector but not execute any changes to the variables.
        /// </summary>
        public readonly bool? Inline;
        /// <summary>
        /// The time when the outcome was last updated.
        /// </summary>
        public readonly string? LastUpdatedTime;
        /// <summary>
        /// The outcome name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Tags associated with this outcome.
        /// </summary>
        public readonly ImmutableArray<Outputs.DetectorTag> Tags;

        [OutputConstructor]
        private DetectorOutcome(
            string? arn,

            string? createdTime,

            string? description,

            bool? inline,

            string? lastUpdatedTime,

            string? name,

            ImmutableArray<Outputs.DetectorTag> tags)
        {
            Arn = arn;
            CreatedTime = createdTime;
            Description = description;
            Inline = inline;
            LastUpdatedTime = lastUpdatedTime;
            Name = name;
            Tags = tags;
        }
    }
}
