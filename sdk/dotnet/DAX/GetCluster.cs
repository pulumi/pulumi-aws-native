// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DAX
{
    public static class GetCluster
    {
        /// <summary>
        /// Resource Type definition for AWS::DAX::Cluster
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("aws-native:dax:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::DAX::Cluster
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws-native:dax:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetClusterArgs()
        {
        }
    }

    public sealed class GetClusterInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetClusterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        public readonly string? Arn;
        public readonly ImmutableArray<string> AvailabilityZones;
        public readonly string? ClusterDiscoveryEndpoint;
        public readonly string? ClusterDiscoveryEndpointURL;
        public readonly string? Description;
        public readonly string? Id;
        public readonly string? NotificationTopicARN;
        public readonly string? ParameterGroupName;
        public readonly string? PreferredMaintenanceWindow;
        public readonly int? ReplicationFactor;
        public readonly ImmutableArray<string> SecurityGroupIds;
        public readonly object? Tags;

        [OutputConstructor]
        private GetClusterResult(
            string? arn,

            ImmutableArray<string> availabilityZones,

            string? clusterDiscoveryEndpoint,

            string? clusterDiscoveryEndpointURL,

            string? description,

            string? id,

            string? notificationTopicARN,

            string? parameterGroupName,

            string? preferredMaintenanceWindow,

            int? replicationFactor,

            ImmutableArray<string> securityGroupIds,

            object? tags)
        {
            Arn = arn;
            AvailabilityZones = availabilityZones;
            ClusterDiscoveryEndpoint = clusterDiscoveryEndpoint;
            ClusterDiscoveryEndpointURL = clusterDiscoveryEndpointURL;
            Description = description;
            Id = id;
            NotificationTopicARN = notificationTopicARN;
            ParameterGroupName = parameterGroupName;
            PreferredMaintenanceWindow = preferredMaintenanceWindow;
            ReplicationFactor = replicationFactor;
            SecurityGroupIds = securityGroupIds;
            Tags = tags;
        }
    }
}
