// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RolesAnywhere.Outputs
{

    [OutputType]
    public sealed class TrustAnchorNotificationSetting
    {
        /// <summary>
        /// The specified channel of notification. IAM Roles Anywhere uses CloudWatch metrics, EventBridge, and AWS Health Dashboard to notify for an event.
        /// 
        /// &gt; In the absence of a specific channel, IAM Roles Anywhere applies this setting to 'ALL' channels.
        /// </summary>
        public readonly Pulumi.AwsNative.RolesAnywhere.TrustAnchorNotificationChannel? Channel;
        /// <summary>
        /// Indicates whether the notification setting is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The event to which this notification setting is applied.
        /// </summary>
        public readonly Pulumi.AwsNative.RolesAnywhere.TrustAnchorNotificationEvent Event;
        /// <summary>
        /// The number of days before a notification event. This value is required for a notification setting that is enabled.
        /// </summary>
        public readonly double? Threshold;

        [OutputConstructor]
        private TrustAnchorNotificationSetting(
            Pulumi.AwsNative.RolesAnywhere.TrustAnchorNotificationChannel? channel,

            bool enabled,

            Pulumi.AwsNative.RolesAnywhere.TrustAnchorNotificationEvent @event,

            double? threshold)
        {
            Channel = channel;
            Enabled = enabled;
            Event = @event;
            Threshold = threshold;
        }
    }
}
