// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RolesAnywhere
{
    /// <summary>
    /// Definition of AWS::RolesAnywhere::CRL Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:rolesanywhere:CRL")]
    public partial class CRL : global::Pulumi.CustomResource
    {
        [Output("crlData")]
        public Output<string?> CrlData { get; private set; } = null!;

        [Output("crlId")]
        public Output<string> CrlId { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.CRLTag>> Tags { get; private set; } = null!;

        [Output("trustAnchorArn")]
        public Output<string?> TrustAnchorArn { get; private set; } = null!;


        /// <summary>
        /// Create a CRL resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CRL(string name, CRLArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:rolesanywhere:CRL", name, args ?? new CRLArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CRL(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:rolesanywhere:CRL", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CRL resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CRL Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CRL(name, id, options);
        }
    }

    public sealed class CRLArgs : global::Pulumi.ResourceArgs
    {
        [Input("crlData")]
        public Input<string>? CrlData { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<Inputs.CRLTagArgs>? _tags;
        public InputList<Inputs.CRLTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CRLTagArgs>());
            set => _tags = value;
        }

        [Input("trustAnchorArn")]
        public Input<string>? TrustAnchorArn { get; set; }

        public CRLArgs()
        {
        }
        public static new CRLArgs Empty => new CRLArgs();
    }
}
