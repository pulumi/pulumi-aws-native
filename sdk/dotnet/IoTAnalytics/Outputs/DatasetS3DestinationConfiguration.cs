// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTAnalytics.Outputs
{

    [OutputType]
    public sealed class DatasetS3DestinationConfiguration
    {
        /// <summary>
        /// The name of the S3 bucket to which dataset contents are delivered.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// Configuration information for coordination with AWS Glue , a fully managed extract, transform and load (ETL) service.
        /// </summary>
        public readonly Outputs.DatasetGlueConfiguration? GlueConfiguration;
        /// <summary>
        /// The key of the dataset contents object in an S3 bucket. Each object has a key that is a unique identifier. Each object has exactly one key.
        /// 
        /// You can create a unique key with the following options:
        /// 
        /// - Use `!{iotanalytics:scheduleTime}` to insert the time of a scheduled SQL query run.
        /// - Use `!{iotanalytics:versionId}` to insert a unique hash that identifies a dataset content.
        /// - Use `!{iotanalytics:creationTime}` to insert the creation time of a dataset content.
        /// 
        /// The following example creates a unique key for a CSV file: `dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv`
        /// 
        /// &gt; If you don't use `!{iotanalytics:versionId}` to specify the key, you might get duplicate keys. For example, you might have two dataset contents with the same `scheduleTime` but different `versionId` s. This means that one dataset content overwrites the other.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 and AWS Glue resources.
        /// </summary>
        public readonly string RoleArn;

        [OutputConstructor]
        private DatasetS3DestinationConfiguration(
            string bucket,

            Outputs.DatasetGlueConfiguration? glueConfiguration,

            string key,

            string roleArn)
        {
            Bucket = bucket;
            GlueConfiguration = glueConfiguration;
            Key = key;
            RoleArn = roleArn;
        }
    }
}
