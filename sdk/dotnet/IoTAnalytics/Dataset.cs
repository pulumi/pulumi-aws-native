// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTAnalytics
{
    /// <summary>
    /// Resource Type definition for AWS::IoTAnalytics::Dataset
    /// 
    /// ## Example Usage
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dataset = new AwsNative.IoTAnalytics.Dataset("dataset", new()
    ///     {
    ///         DatasetName = "SimpleSQLDataset",
    ///         Actions = new[]
    ///         {
    ///             new AwsNative.IoTAnalytics.Inputs.DatasetActionArgs
    ///             {
    ///                 ActionName = "SqlAction",
    ///                 QueryAction = new AwsNative.IoTAnalytics.Inputs.DatasetQueryActionArgs
    ///                 {
    ///                     SqlQuery = "select * from Datastore",
    ///                 },
    ///             },
    ///         },
    ///         Triggers = new[]
    ///         {
    ///             new AwsNative.IoTAnalytics.Inputs.DatasetTriggerArgs
    ///             {
    ///                 Schedule = new AwsNative.IoTAnalytics.Inputs.DatasetScheduleArgs
    ///                 {
    ///                     ScheduleExpression = "cron(0 12 * * ? *)",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dataset = new AwsNative.IoTAnalytics.Dataset("dataset", new()
    ///     {
    ///         DatasetName = "SimpleSQLDataset",
    ///         Actions = new[]
    ///         {
    ///             new AwsNative.IoTAnalytics.Inputs.DatasetActionArgs
    ///             {
    ///                 ActionName = "SqlAction",
    ///                 QueryAction = new AwsNative.IoTAnalytics.Inputs.DatasetQueryActionArgs
    ///                 {
    ///                     SqlQuery = "select * from Datastore",
    ///                 },
    ///             },
    ///         },
    ///         Triggers = new[]
    ///         {
    ///             new AwsNative.IoTAnalytics.Inputs.DatasetTriggerArgs
    ///             {
    ///                 Schedule = new AwsNative.IoTAnalytics.Inputs.DatasetScheduleArgs
    ///                 {
    ///                     ScheduleExpression = "cron(0 12 * * ? *)",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dataset = new AwsNative.IoTAnalytics.Dataset("dataset", new()
    ///     {
    ///         DatasetName = "ComplexSQLDataset",
    ///         Actions = new[]
    ///         {
    ///             new AwsNative.IoTAnalytics.Inputs.DatasetActionArgs
    ///             {
    ///                 ActionName = "SqlAction",
    ///                 QueryAction = new AwsNative.IoTAnalytics.Inputs.DatasetQueryActionArgs
    ///                 {
    ///                     SqlQuery = "select * from Datastore",
    ///                     Filters = new[]
    ///                     {
    ///                         new AwsNative.IoTAnalytics.Inputs.DatasetFilterArgs
    ///                         {
    ///                             DeltaTime = new AwsNative.IoTAnalytics.Inputs.DatasetDeltaTimeArgs
    ///                             {
    ///                                 OffsetSeconds = 1,
    ///                                 TimeExpression = "timestamp",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Triggers = new[]
    ///         {
    ///             new AwsNative.IoTAnalytics.Inputs.DatasetTriggerArgs
    ///             {
    ///                 Schedule = new AwsNative.IoTAnalytics.Inputs.DatasetScheduleArgs
    ///                 {
    ///                     ScheduleExpression = "cron(0 12 * * ? *)",
    ///                 },
    ///             },
    ///         },
    ///         RetentionPeriod = new AwsNative.IoTAnalytics.Inputs.DatasetRetentionPeriodArgs
    ///         {
    ///             Unlimited = false,
    ///             NumberOfDays = 10,
    ///         },
    ///         Tags = new[]
    ///         {
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "keyname1",
    ///                 Value = "value1",
    ///             },
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "keyname2",
    ///                 Value = "value2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dataset = new AwsNative.IoTAnalytics.Dataset("dataset", new()
    ///     {
    ///         DatasetName = "ComplexSQLDataset",
    ///         Actions = new[]
    ///         {
    ///             new AwsNative.IoTAnalytics.Inputs.DatasetActionArgs
    ///             {
    ///                 ActionName = "SqlAction",
    ///                 QueryAction = new AwsNative.IoTAnalytics.Inputs.DatasetQueryActionArgs
    ///                 {
    ///                     SqlQuery = "select * from Datastore",
    ///                     Filters = new[]
    ///                     {
    ///                         new AwsNative.IoTAnalytics.Inputs.DatasetFilterArgs
    ///                         {
    ///                             DeltaTime = new AwsNative.IoTAnalytics.Inputs.DatasetDeltaTimeArgs
    ///                             {
    ///                                 OffsetSeconds = 1,
    ///                                 TimeExpression = "timestamp",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Triggers = new[]
    ///         {
    ///             new AwsNative.IoTAnalytics.Inputs.DatasetTriggerArgs
    ///             {
    ///                 Schedule = new AwsNative.IoTAnalytics.Inputs.DatasetScheduleArgs
    ///                 {
    ///                     ScheduleExpression = "cron(0 12 * * ? *)",
    ///                 },
    ///             },
    ///         },
    ///         RetentionPeriod = new AwsNative.IoTAnalytics.Inputs.DatasetRetentionPeriodArgs
    ///         {
    ///             Unlimited = false,
    ///             NumberOfDays = 10,
    ///         },
    ///         Tags = new[]
    ///         {
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "keyname1",
    ///                 Value = "value1",
    ///             },
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "keyname2",
    ///                 Value = "value2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// </summary>
    [AwsNativeResourceType("aws-native:iotanalytics:Dataset")]
    public partial class Dataset : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The `DatasetAction` objects that automatically create the dataset contents.
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<Outputs.DatasetAction>> Actions { get; private set; } = null!;

        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// When dataset contents are created they are delivered to destinations specified here.
        /// </summary>
        [Output("contentDeliveryRules")]
        public Output<ImmutableArray<Outputs.DatasetContentDeliveryRule>> ContentDeliveryRules { get; private set; } = null!;

        /// <summary>
        /// The name of the dataset.
        /// </summary>
        [Output("datasetName")]
        public Output<string?> DatasetName { get; private set; } = null!;

        /// <summary>
        /// A list of data rules that send notifications to CloudWatch, when data arrives late. To specify `lateDataRules` , the dataset must use a [DeltaTimer](https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeltaTime.html) filter.
        /// </summary>
        [Output("lateDataRules")]
        public Output<ImmutableArray<Outputs.DatasetLateDataRule>> LateDataRules { get; private set; } = null!;

        /// <summary>
        /// Optional. How long, in days, message data is kept for the dataset.
        /// </summary>
        [Output("retentionPeriod")]
        public Output<Outputs.DatasetRetentionPeriod?> RetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// Metadata which can be used to manage the data set.
        /// 
        /// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The `DatasetTrigger` objects that specify when the dataset is automatically updated.
        /// </summary>
        [Output("triggers")]
        public Output<ImmutableArray<Outputs.DatasetTrigger>> Triggers { get; private set; } = null!;

        /// <summary>
        /// Optional. How many versions of dataset contents are kept. If not specified or set to null, only the latest version plus the latest succeeded version (if they are different) are kept for the time period specified by the `retentionPeriod` parameter. For more information, see [Keeping Multiple Versions of AWS IoT Analytics datasets](https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions) in the *AWS IoT Analytics User Guide* .
        /// </summary>
        [Output("versioningConfiguration")]
        public Output<Outputs.DatasetVersioningConfiguration?> VersioningConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a Dataset resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Dataset(string name, DatasetArgs args, CustomResourceOptions? options = null)
            : base("aws-native:iotanalytics:Dataset", name, args ?? new DatasetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Dataset(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:iotanalytics:Dataset", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "datasetName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Dataset resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Dataset Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Dataset(name, id, options);
        }
    }

    public sealed class DatasetArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions", required: true)]
        private InputList<Inputs.DatasetActionArgs>? _actions;

        /// <summary>
        /// The `DatasetAction` objects that automatically create the dataset contents.
        /// </summary>
        public InputList<Inputs.DatasetActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.DatasetActionArgs>());
            set => _actions = value;
        }

        [Input("contentDeliveryRules")]
        private InputList<Inputs.DatasetContentDeliveryRuleArgs>? _contentDeliveryRules;

        /// <summary>
        /// When dataset contents are created they are delivered to destinations specified here.
        /// </summary>
        public InputList<Inputs.DatasetContentDeliveryRuleArgs> ContentDeliveryRules
        {
            get => _contentDeliveryRules ?? (_contentDeliveryRules = new InputList<Inputs.DatasetContentDeliveryRuleArgs>());
            set => _contentDeliveryRules = value;
        }

        /// <summary>
        /// The name of the dataset.
        /// </summary>
        [Input("datasetName")]
        public Input<string>? DatasetName { get; set; }

        [Input("lateDataRules")]
        private InputList<Inputs.DatasetLateDataRuleArgs>? _lateDataRules;

        /// <summary>
        /// A list of data rules that send notifications to CloudWatch, when data arrives late. To specify `lateDataRules` , the dataset must use a [DeltaTimer](https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeltaTime.html) filter.
        /// </summary>
        public InputList<Inputs.DatasetLateDataRuleArgs> LateDataRules
        {
            get => _lateDataRules ?? (_lateDataRules = new InputList<Inputs.DatasetLateDataRuleArgs>());
            set => _lateDataRules = value;
        }

        /// <summary>
        /// Optional. How long, in days, message data is kept for the dataset.
        /// </summary>
        [Input("retentionPeriod")]
        public Input<Inputs.DatasetRetentionPeriodArgs>? RetentionPeriod { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Metadata which can be used to manage the data set.
        /// 
        /// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        [Input("triggers")]
        private InputList<Inputs.DatasetTriggerArgs>? _triggers;

        /// <summary>
        /// The `DatasetTrigger` objects that specify when the dataset is automatically updated.
        /// </summary>
        public InputList<Inputs.DatasetTriggerArgs> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<Inputs.DatasetTriggerArgs>());
            set => _triggers = value;
        }

        /// <summary>
        /// Optional. How many versions of dataset contents are kept. If not specified or set to null, only the latest version plus the latest succeeded version (if they are different) are kept for the time period specified by the `retentionPeriod` parameter. For more information, see [Keeping Multiple Versions of AWS IoT Analytics datasets](https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions) in the *AWS IoT Analytics User Guide* .
        /// </summary>
        [Input("versioningConfiguration")]
        public Input<Inputs.DatasetVersioningConfigurationArgs>? VersioningConfiguration { get; set; }

        public DatasetArgs()
        {
        }
        public static new DatasetArgs Empty => new DatasetArgs();
    }
}
