// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTAnalytics
{
    public static class GetDataset
    {
        /// <summary>
        /// Resource Type definition for AWS::IoTAnalytics::Dataset
        /// </summary>
        public static Task<GetDatasetResult> InvokeAsync(GetDatasetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatasetResult>("aws-native:iotanalytics:getDataset", args ?? new GetDatasetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::IoTAnalytics::Dataset
        /// </summary>
        public static Output<GetDatasetResult> Invoke(GetDatasetInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDatasetResult>("aws-native:iotanalytics:getDataset", args ?? new GetDatasetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatasetArgs : Pulumi.InvokeArgs
    {
        [Input("datasetName", required: true)]
        public string DatasetName { get; set; } = null!;

        public GetDatasetArgs()
        {
        }
    }

    public sealed class GetDatasetInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("datasetName", required: true)]
        public Input<string> DatasetName { get; set; } = null!;

        public GetDatasetInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatasetResult
    {
        public readonly ImmutableArray<Outputs.DatasetAction> Actions;
        public readonly ImmutableArray<Outputs.DatasetContentDeliveryRule> ContentDeliveryRules;
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.DatasetLateDataRule> LateDataRules;
        public readonly Outputs.DatasetRetentionPeriod? RetentionPeriod;
        public readonly ImmutableArray<Outputs.DatasetTag> Tags;
        public readonly ImmutableArray<Outputs.DatasetTrigger> Triggers;
        public readonly Outputs.DatasetVersioningConfiguration? VersioningConfiguration;

        [OutputConstructor]
        private GetDatasetResult(
            ImmutableArray<Outputs.DatasetAction> actions,

            ImmutableArray<Outputs.DatasetContentDeliveryRule> contentDeliveryRules,

            string? id,

            ImmutableArray<Outputs.DatasetLateDataRule> lateDataRules,

            Outputs.DatasetRetentionPeriod? retentionPeriod,

            ImmutableArray<Outputs.DatasetTag> tags,

            ImmutableArray<Outputs.DatasetTrigger> triggers,

            Outputs.DatasetVersioningConfiguration? versioningConfiguration)
        {
            Actions = actions;
            ContentDeliveryRules = contentDeliveryRules;
            Id = id;
            LateDataRules = lateDataRules;
            RetentionPeriod = retentionPeriod;
            Tags = tags;
            Triggers = triggers;
            VersioningConfiguration = versioningConfiguration;
        }
    }
}
