// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppConfig
{
    public static class GetExtension
    {
        /// <summary>
        /// Resource Type definition for AWS::AppConfig::Extension
        /// </summary>
        public static Task<GetExtensionResult> InvokeAsync(GetExtensionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExtensionResult>("aws-native:appconfig:getExtension", args ?? new GetExtensionArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppConfig::Extension
        /// </summary>
        public static Output<GetExtensionResult> Invoke(GetExtensionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExtensionResult>("aws-native:appconfig:getExtension", args ?? new GetExtensionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppConfig::Extension
        /// </summary>
        public static Output<GetExtensionResult> Invoke(GetExtensionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetExtensionResult>("aws-native:appconfig:getExtension", args ?? new GetExtensionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExtensionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The system-generated ID of the extension.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetExtensionArgs()
        {
        }
        public static new GetExtensionArgs Empty => new GetExtensionArgs();
    }

    public sealed class GetExtensionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The system-generated ID of the extension.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetExtensionInvokeArgs()
        {
        }
        public static new GetExtensionInvokeArgs Empty => new GetExtensionInvokeArgs();
    }


    [OutputType]
    public sealed class GetExtensionResult
    {
        /// <summary>
        /// The actions defined in the extension.
        /// </summary>
        public readonly ImmutableDictionary<string, ImmutableArray<Outputs.ExtensionAction>>? Actions;
        /// <summary>
        /// The system-generated Amazon Resource Name (ARN) for the extension.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Description of the extension.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The system-generated ID of the extension.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The parameters accepted by the extension. You specify parameter values when you associate the extension to an AWS AppConfig resource by using the `CreateExtensionAssociation` API action. For AWS Lambda extension actions, these parameters are included in the Lambda request object.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.ExtensionParameter>? Parameters;
        /// <summary>
        /// An array of key-value tags to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The extension version number.
        /// </summary>
        public readonly int? VersionNumber;

        [OutputConstructor]
        private GetExtensionResult(
            ImmutableDictionary<string, ImmutableArray<Outputs.ExtensionAction>>? actions,

            string? arn,

            string? description,

            string? id,

            ImmutableDictionary<string, Outputs.ExtensionParameter>? parameters,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            int? versionNumber)
        {
            Actions = actions;
            Arn = arn;
            Description = description;
            Id = id;
            Parameters = parameters;
            Tags = tags;
            VersionNumber = versionNumber;
        }
    }
}
