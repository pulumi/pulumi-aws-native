// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppConfig
{
    /// <summary>
    /// Resource Type definition for AWS::AppConfig::Deployment
    /// </summary>
    [AwsNativeResourceType("aws-native:appconfig:Deployment")]
    public partial class Deployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The application ID.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// The configuration profile ID.
        /// </summary>
        [Output("configurationProfileId")]
        public Output<string> ConfigurationProfileId { get; private set; } = null!;

        /// <summary>
        /// The configuration version to deploy. If deploying an AWS AppConfig hosted configuration version, you can specify either the version number or version label. For all other configurations, you must specify the version number.
        /// </summary>
        [Output("configurationVersion")]
        public Output<string> ConfigurationVersion { get; private set; } = null!;

        /// <summary>
        /// The sequence number of the deployment.
        /// </summary>
        [Output("deploymentNumber")]
        public Output<string> DeploymentNumber { get; private set; } = null!;

        /// <summary>
        /// The deployment strategy ID.
        /// </summary>
        [Output("deploymentStrategyId")]
        public Output<string> DeploymentStrategyId { get; private set; } = null!;

        /// <summary>
        /// A description of the deployment.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A map of dynamic extension parameter names to values to pass to associated extensions with `PRE_START_DEPLOYMENT` actions.
        /// </summary>
        [Output("dynamicExtensionParameters")]
        public Output<ImmutableArray<Outputs.DeploymentDynamicExtensionParameters>> DynamicExtensionParameters { get; private set; } = null!;

        /// <summary>
        /// The environment ID.
        /// </summary>
        [Output("environmentId")]
        public Output<string> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// The AWS Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.
        /// </summary>
        [Output("kmsKeyIdentifier")]
        public Output<string?> KmsKeyIdentifier { get; private set; } = null!;

        /// <summary>
        /// The state of the deployment.
        /// </summary>
        [Output("state")]
        public Output<Pulumi.AwsNative.AppConfig.DeploymentState> State { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.CreateOnlyTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Deployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Deployment(string name, DeploymentArgs args, CustomResourceOptions? options = null)
            : base("aws-native:appconfig:Deployment", name, args ?? new DeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Deployment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:appconfig:Deployment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "applicationId",
                    "configurationProfileId",
                    "configurationVersion",
                    "deploymentStrategyId",
                    "description",
                    "dynamicExtensionParameters[*]",
                    "environmentId",
                    "kmsKeyIdentifier",
                    "tags[*]",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Deployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Deployment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Deployment(name, id, options);
        }
    }

    public sealed class DeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application ID.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// The configuration profile ID.
        /// </summary>
        [Input("configurationProfileId", required: true)]
        public Input<string> ConfigurationProfileId { get; set; } = null!;

        /// <summary>
        /// The configuration version to deploy. If deploying an AWS AppConfig hosted configuration version, you can specify either the version number or version label. For all other configurations, you must specify the version number.
        /// </summary>
        [Input("configurationVersion", required: true)]
        public Input<string> ConfigurationVersion { get; set; } = null!;

        /// <summary>
        /// The deployment strategy ID.
        /// </summary>
        [Input("deploymentStrategyId", required: true)]
        public Input<string> DeploymentStrategyId { get; set; } = null!;

        /// <summary>
        /// A description of the deployment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dynamicExtensionParameters")]
        private InputList<Inputs.DeploymentDynamicExtensionParametersArgs>? _dynamicExtensionParameters;

        /// <summary>
        /// A map of dynamic extension parameter names to values to pass to associated extensions with `PRE_START_DEPLOYMENT` actions.
        /// </summary>
        public InputList<Inputs.DeploymentDynamicExtensionParametersArgs> DynamicExtensionParameters
        {
            get => _dynamicExtensionParameters ?? (_dynamicExtensionParameters = new InputList<Inputs.DeploymentDynamicExtensionParametersArgs>());
            set => _dynamicExtensionParameters = value;
        }

        /// <summary>
        /// The environment ID.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        /// <summary>
        /// The AWS Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.
        /// </summary>
        [Input("kmsKeyIdentifier")]
        public Input<string>? KmsKeyIdentifier { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs>());
            set => _tags = value;
        }

        public DeploymentArgs()
        {
        }
        public static new DeploymentArgs Empty => new DeploymentArgs();
    }
}
