// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Scheduler.Inputs
{

    /// <summary>
    /// The schedule target.
    /// </summary>
    public sealed class ScheduleTargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the target.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        [Input("deadLetterConfig")]
        public Input<Inputs.ScheduleDeadLetterConfigArgs>? DeadLetterConfig { get; set; }

        [Input("ecsParameters")]
        public Input<Inputs.ScheduleEcsParametersArgs>? EcsParameters { get; set; }

        [Input("eventBridgeParameters")]
        public Input<Inputs.ScheduleEventBridgeParametersArgs>? EventBridgeParameters { get; set; }

        /// <summary>
        /// The text, or well-formed JSON, passed to the target. If you are configuring a templated Lambda, AWS Step Functions, or Amazon EventBridge target, the input must be a well-formed JSON. For all other target types, a JSON is not required. If you do not specify anything for this field, EventBridge Scheduler delivers a default notification to the target.
        /// </summary>
        [Input("input")]
        public Input<string>? Input { get; set; }

        [Input("kinesisParameters")]
        public Input<Inputs.ScheduleKinesisParametersArgs>? KinesisParameters { get; set; }

        [Input("retryPolicy")]
        public Input<Inputs.ScheduleRetryPolicyArgs>? RetryPolicy { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the schedule is triggered.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("sageMakerPipelineParameters")]
        public Input<Inputs.ScheduleSageMakerPipelineParametersArgs>? SageMakerPipelineParameters { get; set; }

        [Input("sqsParameters")]
        public Input<Inputs.ScheduleSqsParametersArgs>? SqsParameters { get; set; }

        public ScheduleTargetArgs()
        {
        }
        public static new ScheduleTargetArgs Empty => new ScheduleTargetArgs();
    }
}
