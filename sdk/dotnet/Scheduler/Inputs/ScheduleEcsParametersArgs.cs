// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Scheduler.Inputs
{

    /// <summary>
    /// The custom parameters to be used when the target is an Amazon ECS task.
    /// </summary>
    public sealed class ScheduleEcsParametersArgs : global::Pulumi.ResourceArgs
    {
        [Input("capacityProviderStrategy")]
        private InputList<Inputs.ScheduleCapacityProviderStrategyItemArgs>? _capacityProviderStrategy;

        /// <summary>
        /// The capacity provider strategy to use for the task.
        /// </summary>
        public InputList<Inputs.ScheduleCapacityProviderStrategyItemArgs> CapacityProviderStrategy
        {
            get => _capacityProviderStrategy ?? (_capacityProviderStrategy = new InputList<Inputs.ScheduleCapacityProviderStrategyItemArgs>());
            set => _capacityProviderStrategy = value;
        }

        /// <summary>
        /// Specifies whether to enable Amazon ECS managed tags for the task. For more information, see Tagging Your Amazon ECS Resources in the Amazon Elastic Container Service Developer Guide.
        /// </summary>
        [Input("enableEcsManagedTags")]
        public Input<bool>? EnableEcsManagedTags { get; set; }

        /// <summary>
        /// Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.
        /// </summary>
        [Input("enableExecuteCommand")]
        public Input<bool>? EnableExecuteCommand { get; set; }

        /// <summary>
        /// Specifies an ECS task group for the task. The maximum length is 255 characters.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("launchType")]
        public Input<Pulumi.AwsNative.Scheduler.ScheduleLaunchType>? LaunchType { get; set; }

        [Input("networkConfiguration")]
        public Input<Inputs.ScheduleNetworkConfigurationArgs>? NetworkConfiguration { get; set; }

        [Input("placementConstraints")]
        private InputList<Inputs.SchedulePlacementConstraintArgs>? _placementConstraints;

        /// <summary>
        /// An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime).
        /// </summary>
        public InputList<Inputs.SchedulePlacementConstraintArgs> PlacementConstraints
        {
            get => _placementConstraints ?? (_placementConstraints = new InputList<Inputs.SchedulePlacementConstraintArgs>());
            set => _placementConstraints = value;
        }

        [Input("placementStrategy")]
        private InputList<Inputs.SchedulePlacementStrategyArgs>? _placementStrategy;

        /// <summary>
        /// The placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.
        /// </summary>
        public InputList<Inputs.SchedulePlacementStrategyArgs> PlacementStrategy
        {
            get => _placementStrategy ?? (_placementStrategy = new InputList<Inputs.SchedulePlacementStrategyArgs>());
            set => _placementStrategy = value;
        }

        /// <summary>
        /// Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0.
        /// </summary>
        [Input("platformVersion")]
        public Input<string>? PlatformVersion { get; set; }

        [Input("propagateTags")]
        public Input<Pulumi.AwsNative.Scheduler.SchedulePropagateTags>? PropagateTags { get; set; }

        /// <summary>
        /// The reference ID to use for the task.
        /// </summary>
        [Input("referenceId")]
        public Input<string>? ReferenceId { get; set; }

        [Input("tags")]
        private InputList<ImmutableDictionary<string, string>>? _tags;

        /// <summary>
        /// The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. To learn more, see RunTask in the Amazon ECS API Reference.
        /// </summary>
        public InputList<ImmutableDictionary<string, string>> Tags
        {
            get => _tags ?? (_tags = new InputList<ImmutableDictionary<string, string>>());
            set => _tags = value;
        }

        /// <summary>
        /// The number of tasks to create based on TaskDefinition. The default is 1.
        /// </summary>
        [Input("taskCount")]
        public Input<double>? TaskCount { get; set; }

        /// <summary>
        /// The ARN of the task definition to use if the event target is an Amazon ECS task.
        /// </summary>
        [Input("taskDefinitionArn", required: true)]
        public Input<string> TaskDefinitionArn { get; set; } = null!;

        public ScheduleEcsParametersArgs()
        {
        }
        public static new ScheduleEcsParametersArgs Empty => new ScheduleEcsParametersArgs();
    }
}
