// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.KinesisFirehose.Outputs
{

    [OutputType]
    public sealed class DeliveryStreamSplunkDestinationConfiguration
    {
        /// <summary>
        /// The buffering options. If no value is specified, the default values for Splunk are used.
        /// </summary>
        public readonly Outputs.DeliveryStreamSplunkBufferingHints? BufferingHints;
        /// <summary>
        /// The Amazon CloudWatch logging options for your Firehose stream.
        /// </summary>
        public readonly Outputs.DeliveryStreamCloudWatchLoggingOptions? CloudWatchLoggingOptions;
        /// <summary>
        /// The amount of time that Firehose waits to receive an acknowledgment from Splunk after it sends it data. At the end of the timeout period, Firehose either tries to send the data again or considers it an error, based on your retry settings.
        /// </summary>
        public readonly int? HecAcknowledgmentTimeoutInSeconds;
        /// <summary>
        /// The HTTP Event Collector (HEC) endpoint to which Firehose sends your data.
        /// </summary>
        public readonly string HecEndpoint;
        /// <summary>
        /// This type can be either `Raw` or `Event` .
        /// </summary>
        public readonly Pulumi.AwsNative.KinesisFirehose.DeliveryStreamSplunkDestinationConfigurationHecEndpointType HecEndpointType;
        /// <summary>
        /// This is a GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
        /// </summary>
        public readonly string? HecToken;
        /// <summary>
        /// The data processing configuration.
        /// </summary>
        public readonly Outputs.DeliveryStreamProcessingConfiguration? ProcessingConfiguration;
        /// <summary>
        /// The retry behavior in case Firehose is unable to deliver data to Splunk, or if it doesn't receive an acknowledgment of receipt from Splunk.
        /// </summary>
        public readonly Outputs.DeliveryStreamSplunkRetryOptions? RetryOptions;
        /// <summary>
        /// Defines how documents should be delivered to Amazon S3. When set to `FailedEventsOnly` , Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to `AllEvents` , Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. The default value is `FailedEventsOnly` .
        /// 
        /// You can update this backup mode from `FailedEventsOnly` to `AllEvents` . You can't update it from `AllEvents` to `FailedEventsOnly` .
        /// </summary>
        public readonly string? S3BackupMode;
        /// <summary>
        /// The configuration for the backup Amazon S3 location.
        /// </summary>
        public readonly Outputs.DeliveryStreamS3DestinationConfiguration S3Configuration;
        /// <summary>
        /// The configuration that defines how you access secrets for Splunk.
        /// </summary>
        public readonly Outputs.DeliveryStreamSecretsManagerConfiguration? SecretsManagerConfiguration;

        [OutputConstructor]
        private DeliveryStreamSplunkDestinationConfiguration(
            Outputs.DeliveryStreamSplunkBufferingHints? bufferingHints,

            Outputs.DeliveryStreamCloudWatchLoggingOptions? cloudWatchLoggingOptions,

            int? hecAcknowledgmentTimeoutInSeconds,

            string hecEndpoint,

            Pulumi.AwsNative.KinesisFirehose.DeliveryStreamSplunkDestinationConfigurationHecEndpointType hecEndpointType,

            string? hecToken,

            Outputs.DeliveryStreamProcessingConfiguration? processingConfiguration,

            Outputs.DeliveryStreamSplunkRetryOptions? retryOptions,

            string? s3BackupMode,

            Outputs.DeliveryStreamS3DestinationConfiguration s3Configuration,

            Outputs.DeliveryStreamSecretsManagerConfiguration? secretsManagerConfiguration)
        {
            BufferingHints = bufferingHints;
            CloudWatchLoggingOptions = cloudWatchLoggingOptions;
            HecAcknowledgmentTimeoutInSeconds = hecAcknowledgmentTimeoutInSeconds;
            HecEndpoint = hecEndpoint;
            HecEndpointType = hecEndpointType;
            HecToken = hecToken;
            ProcessingConfiguration = processingConfiguration;
            RetryOptions = retryOptions;
            S3BackupMode = s3BackupMode;
            S3Configuration = s3Configuration;
            SecretsManagerConfiguration = secretsManagerConfiguration;
        }
    }
}
