// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.KinesisFirehose.Outputs
{

    [OutputType]
    public sealed class DeliveryStreamSnowflakeDestinationConfiguration
    {
        /// <summary>
        /// URL for accessing your Snowflake account. This URL must include your [account identifier](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-account-identifier) . Note that the protocol (https://) and port number are optional.
        /// </summary>
        public readonly string AccountUrl;
        /// <summary>
        /// Describes the buffering to perform before delivering data to the Snowflake destination. If you do not specify any value, Firehose uses the default values.
        /// </summary>
        public readonly Outputs.DeliveryStreamSnowflakeBufferingHints? BufferingHints;
        public readonly Outputs.DeliveryStreamCloudWatchLoggingOptions? CloudWatchLoggingOptions;
        /// <summary>
        /// The name of the record content column.
        /// </summary>
        public readonly string? ContentColumnName;
        /// <summary>
        /// Choose to load JSON keys mapped to table column names or choose to split the JSON payload where content is mapped to a record content column and source metadata is mapped to a record metadata column.
        /// </summary>
        public readonly Pulumi.AwsNative.KinesisFirehose.DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOption? DataLoadingOption;
        /// <summary>
        /// All data in Snowflake is maintained in databases.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// Passphrase to decrypt the private key when the key is encrypted. For information, see [Using Key Pair Authentication &amp; Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
        /// </summary>
        public readonly string? KeyPassphrase;
        /// <summary>
        /// Specify a column name in the table, where the metadata information has to be loaded. When you enable this field, you will see the following column in the snowflake table, which differs based on the source type.
        /// 
        /// For Direct PUT as source
        /// 
        /// `{ "firehoseDeliveryStreamName" : "streamname", "IngestionTime" : "timestamp" }`
        /// 
        /// For Kinesis Data Stream as source
        /// 
        /// `"kinesisStreamName" : "streamname", "kinesisShardId" : "Id", "kinesisPartitionKey" : "key", "kinesisSequenceNumber" : "1234", "subsequenceNumber" : "2334", "IngestionTime" : "timestamp" }`
        /// </summary>
        public readonly string? MetaDataColumnName;
        /// <summary>
        /// The private key used to encrypt your Snowflake client. For information, see [Using Key Pair Authentication &amp; Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
        /// </summary>
        public readonly string? PrivateKey;
        public readonly Outputs.DeliveryStreamProcessingConfiguration? ProcessingConfiguration;
        /// <summary>
        /// The time period where Firehose will retry sending data to the chosen HTTP endpoint.
        /// </summary>
        public readonly Outputs.DeliveryStreamSnowflakeRetryOptions? RetryOptions;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Snowflake role
        /// </summary>
        public readonly string RoleArn;
        /// <summary>
        /// Choose an S3 backup mode
        /// </summary>
        public readonly Pulumi.AwsNative.KinesisFirehose.DeliveryStreamSnowflakeDestinationConfigurationS3BackupMode? S3BackupMode;
        public readonly Outputs.DeliveryStreamS3DestinationConfiguration S3Configuration;
        /// <summary>
        /// Each database consists of one or more schemas, which are logical groupings of database objects, such as tables and views
        /// </summary>
        public readonly string Schema;
        /// <summary>
        /// The configuration that defines how you access secrets for Snowflake.
        /// </summary>
        public readonly Outputs.DeliveryStreamSecretsManagerConfiguration? SecretsManagerConfiguration;
        /// <summary>
        /// Optionally configure a Snowflake role. Otherwise the default user role will be used.
        /// </summary>
        public readonly Outputs.DeliveryStreamSnowflakeRoleConfiguration? SnowflakeRoleConfiguration;
        /// <summary>
        /// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-&lt;[id]&gt;. For more information, see [Amazon PrivateLink &amp; Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
        /// </summary>
        public readonly Outputs.DeliveryStreamSnowflakeVpcConfiguration? SnowflakeVpcConfiguration;
        /// <summary>
        /// All data in Snowflake is stored in database tables, logically structured as collections of columns and rows.
        /// </summary>
        public readonly string Table;
        /// <summary>
        /// User login name for the Snowflake account.
        /// </summary>
        public readonly string? User;

        [OutputConstructor]
        private DeliveryStreamSnowflakeDestinationConfiguration(
            string accountUrl,

            Outputs.DeliveryStreamSnowflakeBufferingHints? bufferingHints,

            Outputs.DeliveryStreamCloudWatchLoggingOptions? cloudWatchLoggingOptions,

            string? contentColumnName,

            Pulumi.AwsNative.KinesisFirehose.DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOption? dataLoadingOption,

            string database,

            string? keyPassphrase,

            string? metaDataColumnName,

            string? privateKey,

            Outputs.DeliveryStreamProcessingConfiguration? processingConfiguration,

            Outputs.DeliveryStreamSnowflakeRetryOptions? retryOptions,

            string roleArn,

            Pulumi.AwsNative.KinesisFirehose.DeliveryStreamSnowflakeDestinationConfigurationS3BackupMode? s3BackupMode,

            Outputs.DeliveryStreamS3DestinationConfiguration s3Configuration,

            string schema,

            Outputs.DeliveryStreamSecretsManagerConfiguration? secretsManagerConfiguration,

            Outputs.DeliveryStreamSnowflakeRoleConfiguration? snowflakeRoleConfiguration,

            Outputs.DeliveryStreamSnowflakeVpcConfiguration? snowflakeVpcConfiguration,

            string table,

            string? user)
        {
            AccountUrl = accountUrl;
            BufferingHints = bufferingHints;
            CloudWatchLoggingOptions = cloudWatchLoggingOptions;
            ContentColumnName = contentColumnName;
            DataLoadingOption = dataLoadingOption;
            Database = database;
            KeyPassphrase = keyPassphrase;
            MetaDataColumnName = metaDataColumnName;
            PrivateKey = privateKey;
            ProcessingConfiguration = processingConfiguration;
            RetryOptions = retryOptions;
            RoleArn = roleArn;
            S3BackupMode = s3BackupMode;
            S3Configuration = s3Configuration;
            Schema = schema;
            SecretsManagerConfiguration = secretsManagerConfiguration;
            SnowflakeRoleConfiguration = snowflakeRoleConfiguration;
            SnowflakeVpcConfiguration = snowflakeVpcConfiguration;
            Table = table;
            User = user;
        }
    }
}
