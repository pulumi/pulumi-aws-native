// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.KinesisFirehose.Outputs
{

    [OutputType]
    public sealed class DeliveryStreamHttpEndpointDestinationConfiguration
    {
        /// <summary>
        /// The `BufferingHints` property type specifies how Amazon Kinesis Data Firehose (Kinesis Data Firehose) buffers incoming data before delivering it to the destination. The first buffer condition that is satisfied triggers Kinesis Data Firehose to deliver the data.
        /// </summary>
        public readonly Outputs.DeliveryStreamBufferingHints? BufferingHints;
        /// <summary>
        /// The `CloudWatchLoggingOptions` property type specifies Amazon CloudWatch Logs (CloudWatch Logs) logging options that Amazon Kinesis Data Firehose (Kinesis Data Firehose) uses for the delivery stream.
        /// </summary>
        public readonly Outputs.DeliveryStreamCloudWatchLoggingOptions? CloudWatchLoggingOptions;
        /// <summary>
        /// Describes the configuration of the HTTP endpoint to which Kinesis Firehose delivers data. Kinesis Firehose supports any custom HTTP endpoint or HTTP endpoints owned by supported third-party service providers, including Datadog, MongoDB, and New Relic.
        /// </summary>
        public readonly Outputs.DeliveryStreamHttpEndpointConfiguration EndpointConfiguration;
        /// <summary>
        /// The `ProcessingConfiguration` property configures data processing for an Amazon Kinesis Data Firehose delivery stream.
        /// </summary>
        public readonly Outputs.DeliveryStreamProcessingConfiguration? ProcessingConfiguration;
        /// <summary>
        /// The configuration of the HTTP endpoint request. Kinesis Firehose supports any custom HTTP endpoint or HTTP endpoints owned by supported third-party service providers, including Datadog, MongoDB, and New Relic.
        /// </summary>
        public readonly Outputs.DeliveryStreamHttpEndpointRequestConfiguration? RequestConfiguration;
        /// <summary>
        /// Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment of receipt from the specified HTTP endpoint destination. Kinesis Firehose supports any custom HTTP endpoint or HTTP endpoints owned by supported third-party service providers, including Datadog, MongoDB, and New Relic.
        /// </summary>
        public readonly Outputs.DeliveryStreamRetryOptions? RetryOptions;
        /// <summary>
        /// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs.
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// Describes the S3 bucket backup options for the data that Kinesis Data Firehose delivers to the HTTP endpoint destination. You can back up all documents (AllData) or only the documents that Kinesis Data Firehose could not deliver to the specified HTTP endpoint destination (FailedDataOnly).
        /// </summary>
        public readonly string? S3BackupMode;
        /// <summary>
        /// The `S3DestinationConfiguration` property type specifies an Amazon Simple Storage Service (Amazon S3) destination to which Amazon Kinesis Data Firehose (Kinesis Data Firehose) delivers data.
        /// </summary>
        public readonly Outputs.DeliveryStreamS3DestinationConfiguration S3Configuration;

        [OutputConstructor]
        private DeliveryStreamHttpEndpointDestinationConfiguration(
            Outputs.DeliveryStreamBufferingHints? bufferingHints,

            Outputs.DeliveryStreamCloudWatchLoggingOptions? cloudWatchLoggingOptions,

            Outputs.DeliveryStreamHttpEndpointConfiguration endpointConfiguration,

            Outputs.DeliveryStreamProcessingConfiguration? processingConfiguration,

            Outputs.DeliveryStreamHttpEndpointRequestConfiguration? requestConfiguration,

            Outputs.DeliveryStreamRetryOptions? retryOptions,

            string? roleArn,

            string? s3BackupMode,

            Outputs.DeliveryStreamS3DestinationConfiguration s3Configuration)
        {
            BufferingHints = bufferingHints;
            CloudWatchLoggingOptions = cloudWatchLoggingOptions;
            EndpointConfiguration = endpointConfiguration;
            ProcessingConfiguration = processingConfiguration;
            RequestConfiguration = requestConfiguration;
            RetryOptions = retryOptions;
            RoleArn = roleArn;
            S3BackupMode = s3BackupMode;
            S3Configuration = s3Configuration;
        }
    }
}
