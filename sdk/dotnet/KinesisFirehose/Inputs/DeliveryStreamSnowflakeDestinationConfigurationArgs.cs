// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.KinesisFirehose.Inputs
{

    public sealed class DeliveryStreamSnowflakeDestinationConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// URL for accessing your Snowflake account. This URL must include your [account identifier](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-account-identifier) . Note that the protocol (https://) and port number are optional.
        /// </summary>
        [Input("accountUrl", required: true)]
        public Input<string> AccountUrl { get; set; } = null!;

        /// <summary>
        /// Describes the buffering to perform before delivering data to the Snowflake destination. If you do not specify any value, Firehose uses the default values.
        /// </summary>
        [Input("bufferingHints")]
        public Input<Inputs.DeliveryStreamSnowflakeBufferingHintsArgs>? BufferingHints { get; set; }

        [Input("cloudWatchLoggingOptions")]
        public Input<Inputs.DeliveryStreamCloudWatchLoggingOptionsArgs>? CloudWatchLoggingOptions { get; set; }

        /// <summary>
        /// The name of the record content column.
        /// </summary>
        [Input("contentColumnName")]
        public Input<string>? ContentColumnName { get; set; }

        /// <summary>
        /// Choose to load JSON keys mapped to table column names or choose to split the JSON payload where content is mapped to a record content column and source metadata is mapped to a record metadata column.
        /// </summary>
        [Input("dataLoadingOption")]
        public Input<Pulumi.AwsNative.KinesisFirehose.DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOption>? DataLoadingOption { get; set; }

        /// <summary>
        /// All data in Snowflake is maintained in databases.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// Passphrase to decrypt the private key when the key is encrypted. For information, see [Using Key Pair Authentication &amp; Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
        /// </summary>
        [Input("keyPassphrase")]
        public Input<string>? KeyPassphrase { get; set; }

        /// <summary>
        /// Specify a column name in the table, where the metadata information has to be loaded. When you enable this field, you will see the following column in the snowflake table, which differs based on the source type.
        /// 
        /// For Direct PUT as source
        /// 
        /// `{ "firehoseDeliveryStreamName" : "streamname", "IngestionTime" : "timestamp" }`
        /// 
        /// For Kinesis Data Stream as source
        /// 
        /// `"kinesisStreamName" : "streamname", "kinesisShardId" : "Id", "kinesisPartitionKey" : "key", "kinesisSequenceNumber" : "1234", "subsequenceNumber" : "2334", "IngestionTime" : "timestamp" }`
        /// </summary>
        [Input("metaDataColumnName")]
        public Input<string>? MetaDataColumnName { get; set; }

        /// <summary>
        /// The private key used to encrypt your Snowflake client. For information, see [Using Key Pair Authentication &amp; Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
        /// </summary>
        [Input("privateKey")]
        public Input<string>? PrivateKey { get; set; }

        [Input("processingConfiguration")]
        public Input<Inputs.DeliveryStreamProcessingConfigurationArgs>? ProcessingConfiguration { get; set; }

        /// <summary>
        /// The time period where Firehose will retry sending data to the chosen HTTP endpoint.
        /// </summary>
        [Input("retryOptions")]
        public Input<Inputs.DeliveryStreamSnowflakeRetryOptionsArgs>? RetryOptions { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Snowflake role
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// Choose an S3 backup mode
        /// </summary>
        [Input("s3BackupMode")]
        public Input<Pulumi.AwsNative.KinesisFirehose.DeliveryStreamSnowflakeDestinationConfigurationS3BackupMode>? S3BackupMode { get; set; }

        [Input("s3Configuration", required: true)]
        public Input<Inputs.DeliveryStreamS3DestinationConfigurationArgs> S3Configuration { get; set; } = null!;

        /// <summary>
        /// Each database consists of one or more schemas, which are logical groupings of database objects, such as tables and views
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        /// <summary>
        /// The configuration that defines how you access secrets for Snowflake.
        /// </summary>
        [Input("secretsManagerConfiguration")]
        public Input<Inputs.DeliveryStreamSecretsManagerConfigurationArgs>? SecretsManagerConfiguration { get; set; }

        /// <summary>
        /// Optionally configure a Snowflake role. Otherwise the default user role will be used.
        /// </summary>
        [Input("snowflakeRoleConfiguration")]
        public Input<Inputs.DeliveryStreamSnowflakeRoleConfigurationArgs>? SnowflakeRoleConfiguration { get; set; }

        /// <summary>
        /// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-&lt;[id]&gt;. For more information, see [Amazon PrivateLink &amp; Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
        /// </summary>
        [Input("snowflakeVpcConfiguration")]
        public Input<Inputs.DeliveryStreamSnowflakeVpcConfigurationArgs>? SnowflakeVpcConfiguration { get; set; }

        /// <summary>
        /// All data in Snowflake is stored in database tables, logically structured as collections of columns and rows.
        /// </summary>
        [Input("table", required: true)]
        public Input<string> Table { get; set; } = null!;

        /// <summary>
        /// User login name for the Snowflake account.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public DeliveryStreamSnowflakeDestinationConfigurationArgs()
        {
        }
        public static new DeliveryStreamSnowflakeDestinationConfigurationArgs Empty => new DeliveryStreamSnowflakeDestinationConfigurationArgs();
    }
}
