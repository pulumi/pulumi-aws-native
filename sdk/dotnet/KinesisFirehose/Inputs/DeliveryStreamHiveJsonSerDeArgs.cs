// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.KinesisFirehose.Inputs
{

    public sealed class DeliveryStreamHiveJsonSerDeArgs : global::Pulumi.ResourceArgs
    {
        [Input("timestampFormats")]
        private InputList<string>? _timestampFormats;

        /// <summary>
        /// Indicates how you want Firehose to parse the date and timestamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://docs.aws.amazon.com/https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html) . You can also use the special value `millis` to parse timestamps in epoch milliseconds. If you don't specify a format, Firehose uses `java.sql.Timestamp::valueOf` by default.
        /// </summary>
        public InputList<string> TimestampFormats
        {
            get => _timestampFormats ?? (_timestampFormats = new InputList<string>());
            set => _timestampFormats = value;
        }

        public DeliveryStreamHiveJsonSerDeArgs()
        {
        }
        public static new DeliveryStreamHiveJsonSerDeArgs Empty => new DeliveryStreamHiveJsonSerDeArgs();
    }
}
