// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.KinesisFirehose
{
    public static class GetDeliveryStream
    {
        /// <summary>
        /// Resource Type definition for AWS::KinesisFirehose::DeliveryStream
        /// </summary>
        public static Task<GetDeliveryStreamResult> InvokeAsync(GetDeliveryStreamArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeliveryStreamResult>("aws-native:kinesisfirehose:getDeliveryStream", args ?? new GetDeliveryStreamArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::KinesisFirehose::DeliveryStream
        /// </summary>
        public static Output<GetDeliveryStreamResult> Invoke(GetDeliveryStreamInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeliveryStreamResult>("aws-native:kinesisfirehose:getDeliveryStream", args ?? new GetDeliveryStreamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeliveryStreamArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the delivery stream.
        /// </summary>
        [Input("deliveryStreamName", required: true)]
        public string DeliveryStreamName { get; set; } = null!;

        public GetDeliveryStreamArgs()
        {
        }
        public static new GetDeliveryStreamArgs Empty => new GetDeliveryStreamArgs();
    }

    public sealed class GetDeliveryStreamInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the delivery stream.
        /// </summary>
        [Input("deliveryStreamName", required: true)]
        public Input<string> DeliveryStreamName { get; set; } = null!;

        public GetDeliveryStreamInvokeArgs()
        {
        }
        public static new GetDeliveryStreamInvokeArgs Empty => new GetDeliveryStreamInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeliveryStreamResult
    {
        /// <summary>
        /// Describes the configuration of a destination in the Serverless offering for Amazon OpenSearch Service.
        /// </summary>
        public readonly Outputs.DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration? AmazonOpenSearchServerlessDestinationConfiguration;
        /// <summary>
        /// The destination in Amazon OpenSearch Service. You can specify only one destination.
        /// </summary>
        public readonly Outputs.DeliveryStreamAmazonopensearchserviceDestinationConfiguration? AmazonopensearchserviceDestinationConfiguration;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the delivery stream, such as `arn:aws:firehose:us-east-2:123456789012:deliverystream/delivery-stream-name` .
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE).
        /// </summary>
        public readonly Outputs.DeliveryStreamEncryptionConfigurationInput? DeliveryStreamEncryptionConfigurationInput;
        /// <summary>
        /// An Amazon ES destination for the delivery stream.
        /// 
        /// Conditional. You must specify only one destination configuration.
        /// 
        /// If you change the delivery stream destination from an Amazon ES destination to an Amazon S3 or Amazon Redshift destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
        /// </summary>
        public readonly Outputs.DeliveryStreamElasticsearchDestinationConfiguration? ElasticsearchDestinationConfiguration;
        /// <summary>
        /// An Amazon S3 destination for the delivery stream.
        /// 
        /// Conditional. You must specify only one destination configuration.
        /// 
        /// If you change the delivery stream destination from an Amazon Extended S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
        /// </summary>
        public readonly Outputs.DeliveryStreamExtendedS3DestinationConfiguration? ExtendedS3DestinationConfiguration;
        /// <summary>
        /// Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination. You can specify only one destination.
        /// </summary>
        public readonly Outputs.DeliveryStreamHttpEndpointDestinationConfiguration? HttpEndpointDestinationConfiguration;
        /// <summary>
        /// An Amazon Redshift destination for the delivery stream.
        /// 
        /// Conditional. You must specify only one destination configuration.
        /// 
        /// If you change the delivery stream destination from an Amazon Redshift destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
        /// </summary>
        public readonly Outputs.DeliveryStreamRedshiftDestinationConfiguration? RedshiftDestinationConfiguration;
        /// <summary>
        /// The `S3DestinationConfiguration` property type specifies an Amazon Simple Storage Service (Amazon S3) destination to which Amazon Kinesis Data Firehose (Kinesis Data Firehose) delivers data.
        /// 
        /// Conditional. You must specify only one destination configuration.
        /// 
        /// If you change the delivery stream destination from an Amazon S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
        /// </summary>
        public readonly Outputs.DeliveryStreamS3DestinationConfiguration? S3DestinationConfiguration;
        /// <summary>
        /// Configure Snowflake destination
        /// </summary>
        public readonly Outputs.DeliveryStreamSnowflakeDestinationConfiguration? SnowflakeDestinationConfiguration;
        /// <summary>
        /// The configuration of a destination in Splunk for the delivery stream.
        /// </summary>
        public readonly Outputs.DeliveryStreamSplunkDestinationConfiguration? SplunkDestinationConfiguration;
        /// <summary>
        /// A set of tags to assign to the delivery stream. A tag is a key-value pair that you can define and assign to AWS resources. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the delivery stream. For more information about tags, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide.
        /// 
        /// You can specify up to 50 tags when creating a delivery stream.
        /// 
        /// If you specify tags in the `CreateDeliveryStream` action, Amazon Data Firehose performs an additional authorization on the `firehose:TagDeliveryStream` action to verify if users have permissions to create tags. If you do not provide this permission, requests to create new Firehose delivery streams with IAM resource tags will fail with an `AccessDeniedException` such as following.
        /// 
        /// *AccessDeniedException*
        /// 
        /// User: arn:aws:sts::x:assumed-role/x/x is not authorized to perform: firehose:TagDeliveryStream on resource: arn:aws:firehose:us-east-1:x:deliverystream/x with an explicit deny in an identity-based policy.
        /// 
        /// For an example IAM policy, see [Tag example.](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CreateDeliveryStream.html#API_CreateDeliveryStream_Examples)
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetDeliveryStreamResult(
            Outputs.DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration? amazonOpenSearchServerlessDestinationConfiguration,

            Outputs.DeliveryStreamAmazonopensearchserviceDestinationConfiguration? amazonopensearchserviceDestinationConfiguration,

            string? arn,

            Outputs.DeliveryStreamEncryptionConfigurationInput? deliveryStreamEncryptionConfigurationInput,

            Outputs.DeliveryStreamElasticsearchDestinationConfiguration? elasticsearchDestinationConfiguration,

            Outputs.DeliveryStreamExtendedS3DestinationConfiguration? extendedS3DestinationConfiguration,

            Outputs.DeliveryStreamHttpEndpointDestinationConfiguration? httpEndpointDestinationConfiguration,

            Outputs.DeliveryStreamRedshiftDestinationConfiguration? redshiftDestinationConfiguration,

            Outputs.DeliveryStreamS3DestinationConfiguration? s3DestinationConfiguration,

            Outputs.DeliveryStreamSnowflakeDestinationConfiguration? snowflakeDestinationConfiguration,

            Outputs.DeliveryStreamSplunkDestinationConfiguration? splunkDestinationConfiguration,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            AmazonOpenSearchServerlessDestinationConfiguration = amazonOpenSearchServerlessDestinationConfiguration;
            AmazonopensearchserviceDestinationConfiguration = amazonopensearchserviceDestinationConfiguration;
            Arn = arn;
            DeliveryStreamEncryptionConfigurationInput = deliveryStreamEncryptionConfigurationInput;
            ElasticsearchDestinationConfiguration = elasticsearchDestinationConfiguration;
            ExtendedS3DestinationConfiguration = extendedS3DestinationConfiguration;
            HttpEndpointDestinationConfiguration = httpEndpointDestinationConfiguration;
            RedshiftDestinationConfiguration = redshiftDestinationConfiguration;
            S3DestinationConfiguration = s3DestinationConfiguration;
            SnowflakeDestinationConfiguration = snowflakeDestinationConfiguration;
            SplunkDestinationConfiguration = splunkDestinationConfiguration;
            Tags = tags;
        }
    }
}
