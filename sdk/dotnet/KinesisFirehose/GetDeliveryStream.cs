// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.KinesisFirehose
{
    public static class GetDeliveryStream
    {
        /// <summary>
        /// Resource Type definition for AWS::KinesisFirehose::DeliveryStream
        /// </summary>
        public static Task<GetDeliveryStreamResult> InvokeAsync(GetDeliveryStreamArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDeliveryStreamResult>("aws-native:kinesisfirehose:getDeliveryStream", args ?? new GetDeliveryStreamArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::KinesisFirehose::DeliveryStream
        /// </summary>
        public static Output<GetDeliveryStreamResult> Invoke(GetDeliveryStreamInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDeliveryStreamResult>("aws-native:kinesisfirehose:getDeliveryStream", args ?? new GetDeliveryStreamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeliveryStreamArgs : Pulumi.InvokeArgs
    {
        [Input("deliveryStreamName", required: true)]
        public string DeliveryStreamName { get; set; } = null!;

        public GetDeliveryStreamArgs()
        {
        }
    }

    public sealed class GetDeliveryStreamInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("deliveryStreamName", required: true)]
        public Input<string> DeliveryStreamName { get; set; } = null!;

        public GetDeliveryStreamInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDeliveryStreamResult
    {
        public readonly Outputs.DeliveryStreamAmazonopensearchserviceDestinationConfiguration? AmazonopensearchserviceDestinationConfiguration;
        public readonly string? Arn;
        public readonly Outputs.DeliveryStreamEncryptionConfigurationInput? DeliveryStreamEncryptionConfigurationInput;
        public readonly Outputs.DeliveryStreamElasticsearchDestinationConfiguration? ElasticsearchDestinationConfiguration;
        public readonly Outputs.DeliveryStreamExtendedS3DestinationConfiguration? ExtendedS3DestinationConfiguration;
        public readonly Outputs.DeliveryStreamHttpEndpointDestinationConfiguration? HttpEndpointDestinationConfiguration;
        public readonly Outputs.DeliveryStreamRedshiftDestinationConfiguration? RedshiftDestinationConfiguration;
        public readonly Outputs.DeliveryStreamS3DestinationConfiguration? S3DestinationConfiguration;
        public readonly Outputs.DeliveryStreamSplunkDestinationConfiguration? SplunkDestinationConfiguration;
        public readonly ImmutableArray<Outputs.DeliveryStreamTag> Tags;

        [OutputConstructor]
        private GetDeliveryStreamResult(
            Outputs.DeliveryStreamAmazonopensearchserviceDestinationConfiguration? amazonopensearchserviceDestinationConfiguration,

            string? arn,

            Outputs.DeliveryStreamEncryptionConfigurationInput? deliveryStreamEncryptionConfigurationInput,

            Outputs.DeliveryStreamElasticsearchDestinationConfiguration? elasticsearchDestinationConfiguration,

            Outputs.DeliveryStreamExtendedS3DestinationConfiguration? extendedS3DestinationConfiguration,

            Outputs.DeliveryStreamHttpEndpointDestinationConfiguration? httpEndpointDestinationConfiguration,

            Outputs.DeliveryStreamRedshiftDestinationConfiguration? redshiftDestinationConfiguration,

            Outputs.DeliveryStreamS3DestinationConfiguration? s3DestinationConfiguration,

            Outputs.DeliveryStreamSplunkDestinationConfiguration? splunkDestinationConfiguration,

            ImmutableArray<Outputs.DeliveryStreamTag> tags)
        {
            AmazonopensearchserviceDestinationConfiguration = amazonopensearchserviceDestinationConfiguration;
            Arn = arn;
            DeliveryStreamEncryptionConfigurationInput = deliveryStreamEncryptionConfigurationInput;
            ElasticsearchDestinationConfiguration = elasticsearchDestinationConfiguration;
            ExtendedS3DestinationConfiguration = extendedS3DestinationConfiguration;
            HttpEndpointDestinationConfiguration = httpEndpointDestinationConfiguration;
            RedshiftDestinationConfiguration = redshiftDestinationConfiguration;
            S3DestinationConfiguration = s3DestinationConfiguration;
            SplunkDestinationConfiguration = splunkDestinationConfiguration;
            Tags = tags;
        }
    }
}
