// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.KafkaConnect
{
    /// <summary>
    /// Resource Type definition for AWS::KafkaConnect::Connector
    /// </summary>
    [AwsNativeResourceType("aws-native:kafkaconnect:Connector")]
    public partial class Connector : Pulumi.CustomResource
    {
        [Output("capacity")]
        public Output<Outputs.ConnectorCapacity> Capacity { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name for the created Connector.
        /// </summary>
        [Output("connectorArn")]
        public Output<string> ConnectorArn { get; private set; } = null!;

        /// <summary>
        /// The configuration for the connector.
        /// </summary>
        [Output("connectorConfiguration")]
        public Output<object> ConnectorConfiguration { get; private set; } = null!;

        /// <summary>
        /// A summary description of the connector.
        /// </summary>
        [Output("connectorDescription")]
        public Output<string?> ConnectorDescription { get; private set; } = null!;

        /// <summary>
        /// The name of the connector.
        /// </summary>
        [Output("connectorName")]
        public Output<string> ConnectorName { get; private set; } = null!;

        [Output("kafkaCluster")]
        public Output<Outputs.ConnectorKafkaCluster> KafkaCluster { get; private set; } = null!;

        [Output("kafkaClusterClientAuthentication")]
        public Output<Outputs.ConnectorKafkaClusterClientAuthentication> KafkaClusterClientAuthentication { get; private set; } = null!;

        [Output("kafkaClusterEncryptionInTransit")]
        public Output<Outputs.ConnectorKafkaClusterEncryptionInTransit> KafkaClusterEncryptionInTransit { get; private set; } = null!;

        /// <summary>
        /// The version of Kafka Connect. It has to be compatible with both the Kafka cluster's version and the plugins.
        /// </summary>
        [Output("kafkaConnectVersion")]
        public Output<string> KafkaConnectVersion { get; private set; } = null!;

        [Output("logDelivery")]
        public Output<Outputs.ConnectorLogDelivery?> LogDelivery { get; private set; } = null!;

        /// <summary>
        /// List of plugins to use with the connector.
        /// </summary>
        [Output("plugins")]
        public Output<ImmutableArray<Outputs.ConnectorPlugin>> Plugins { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon S3 objects and other external resources.
        /// </summary>
        [Output("serviceExecutionRoleArn")]
        public Output<string> ServiceExecutionRoleArn { get; private set; } = null!;

        [Output("workerConfiguration")]
        public Output<Outputs.ConnectorWorkerConfiguration?> WorkerConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a Connector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Connector(string name, ConnectorArgs args, CustomResourceOptions? options = null)
            : base("aws-native:kafkaconnect:Connector", name, args ?? new ConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Connector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:kafkaconnect:Connector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Connector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Connector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Connector(name, id, options);
        }
    }

    public sealed class ConnectorArgs : Pulumi.ResourceArgs
    {
        [Input("capacity", required: true)]
        public Input<Inputs.ConnectorCapacityArgs> Capacity { get; set; } = null!;

        /// <summary>
        /// The configuration for the connector.
        /// </summary>
        [Input("connectorConfiguration", required: true)]
        public Input<object> ConnectorConfiguration { get; set; } = null!;

        /// <summary>
        /// A summary description of the connector.
        /// </summary>
        [Input("connectorDescription")]
        public Input<string>? ConnectorDescription { get; set; }

        /// <summary>
        /// The name of the connector.
        /// </summary>
        [Input("connectorName")]
        public Input<string>? ConnectorName { get; set; }

        [Input("kafkaCluster", required: true)]
        public Input<Inputs.ConnectorKafkaClusterArgs> KafkaCluster { get; set; } = null!;

        [Input("kafkaClusterClientAuthentication", required: true)]
        public Input<Inputs.ConnectorKafkaClusterClientAuthenticationArgs> KafkaClusterClientAuthentication { get; set; } = null!;

        [Input("kafkaClusterEncryptionInTransit", required: true)]
        public Input<Inputs.ConnectorKafkaClusterEncryptionInTransitArgs> KafkaClusterEncryptionInTransit { get; set; } = null!;

        /// <summary>
        /// The version of Kafka Connect. It has to be compatible with both the Kafka cluster's version and the plugins.
        /// </summary>
        [Input("kafkaConnectVersion", required: true)]
        public Input<string> KafkaConnectVersion { get; set; } = null!;

        [Input("logDelivery")]
        public Input<Inputs.ConnectorLogDeliveryArgs>? LogDelivery { get; set; }

        [Input("plugins", required: true)]
        private InputList<Inputs.ConnectorPluginArgs>? _plugins;

        /// <summary>
        /// List of plugins to use with the connector.
        /// </summary>
        public InputList<Inputs.ConnectorPluginArgs> Plugins
        {
            get => _plugins ?? (_plugins = new InputList<Inputs.ConnectorPluginArgs>());
            set => _plugins = value;
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon S3 objects and other external resources.
        /// </summary>
        [Input("serviceExecutionRoleArn", required: true)]
        public Input<string> ServiceExecutionRoleArn { get; set; } = null!;

        [Input("workerConfiguration")]
        public Input<Inputs.ConnectorWorkerConfigurationArgs>? WorkerConfiguration { get; set; }

        public ConnectorArgs()
        {
        }
    }
}
