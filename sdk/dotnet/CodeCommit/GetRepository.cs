// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodeCommit
{
    public static class GetRepository
    {
        /// <summary>
        /// Resource Type definition for AWS::CodeCommit::Repository
        /// </summary>
        public static Task<GetRepositoryResult> InvokeAsync(GetRepositoryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRepositoryResult>("aws-native:codecommit:getRepository", args ?? new GetRepositoryArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::CodeCommit::Repository
        /// </summary>
        public static Output<GetRepositoryResult> Invoke(GetRepositoryInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRepositoryResult>("aws-native:codecommit:getRepository", args ?? new GetRepositoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRepositoryArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRepositoryArgs()
        {
        }
    }

    public sealed class GetRepositoryInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRepositoryInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRepositoryResult
    {
        public readonly string? Arn;
        public readonly string? CloneUrlHttp;
        public readonly string? CloneUrlSsh;
        public readonly Outputs.RepositoryCode? Code;
        public readonly string? Id;
        public readonly string? Name;
        public readonly string? RepositoryDescription;
        public readonly string? RepositoryName;
        public readonly ImmutableArray<Outputs.RepositoryTag> Tags;
        public readonly ImmutableArray<Outputs.RepositoryTrigger> Triggers;

        [OutputConstructor]
        private GetRepositoryResult(
            string? arn,

            string? cloneUrlHttp,

            string? cloneUrlSsh,

            Outputs.RepositoryCode? code,

            string? id,

            string? name,

            string? repositoryDescription,

            string? repositoryName,

            ImmutableArray<Outputs.RepositoryTag> tags,

            ImmutableArray<Outputs.RepositoryTrigger> triggers)
        {
            Arn = arn;
            CloneUrlHttp = cloneUrlHttp;
            CloneUrlSsh = cloneUrlSsh;
            Code = code;
            Id = id;
            Name = name;
            RepositoryDescription = repositoryDescription;
            RepositoryName = repositoryName;
            Tags = tags;
            Triggers = triggers;
        }
    }
}
