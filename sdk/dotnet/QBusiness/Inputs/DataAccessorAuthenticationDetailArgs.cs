// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QBusiness.Inputs
{

    public sealed class DataAccessorAuthenticationDetailArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The specific authentication configuration based on the authentication type.
        /// </summary>
        [Input("authenticationConfiguration")]
        public Input<Inputs.DataAccessorAuthenticationConfigurationPropertiesArgs>? AuthenticationConfiguration { get; set; }

        /// <summary>
        /// The type of authentication to use for the data accessor. This determines how the ISV authenticates when accessing data. You can use one of two authentication types:
        /// 
        /// - `AWS_IAM_IDC_TTI` - Authentication using IAM Identity Center Trusted Token Issuer (TTI). This authentication type allows the ISV to use a trusted token issuer to generate tokens for accessing the data.
        /// - `AWS_IAM_IDC_AUTH_CODE` - Authentication using IAM Identity Center authorization code flow. This authentication type uses the standard OAuth 2.0 authorization code flow for authentication.
        /// </summary>
        [Input("authenticationType", required: true)]
        public Input<Pulumi.AwsNative.QBusiness.DataAccessorAuthenticationType> AuthenticationType { get; set; } = null!;

        [Input("externalIds")]
        private InputList<string>? _externalIds;

        /// <summary>
        /// A list of external identifiers associated with this authentication configuration. These are used to correlate the data accessor with external systems.
        /// </summary>
        public InputList<string> ExternalIds
        {
            get => _externalIds ?? (_externalIds = new InputList<string>());
            set => _externalIds = value;
        }

        public DataAccessorAuthenticationDetailArgs()
        {
        }
        public static new DataAccessorAuthenticationDetailArgs Empty => new DataAccessorAuthenticationDetailArgs();
    }
}
