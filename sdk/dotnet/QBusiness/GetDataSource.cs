// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QBusiness
{
    public static class GetDataSource
    {
        /// <summary>
        /// Definition of AWS::QBusiness::DataSource Resource Type
        /// </summary>
        public static Task<GetDataSourceResult> InvokeAsync(GetDataSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataSourceResult>("aws-native:qbusiness:getDataSource", args ?? new GetDataSourceArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::QBusiness::DataSource Resource Type
        /// </summary>
        public static Output<GetDataSourceResult> Invoke(GetDataSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceResult>("aws-native:qbusiness:getDataSource", args ?? new GetDataSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataSourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationId", required: true)]
        public string ApplicationId { get; set; } = null!;

        [Input("dataSourceId", required: true)]
        public string DataSourceId { get; set; } = null!;

        [Input("indexId", required: true)]
        public string IndexId { get; set; } = null!;

        public GetDataSourceArgs()
        {
        }
        public static new GetDataSourceArgs Empty => new GetDataSourceArgs();
    }

    public sealed class GetDataSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        [Input("dataSourceId", required: true)]
        public Input<string> DataSourceId { get; set; } = null!;

        [Input("indexId", required: true)]
        public Input<string> IndexId { get; set; } = null!;

        public GetDataSourceInvokeArgs()
        {
        }
        public static new GetDataSourceInvokeArgs Empty => new GetDataSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataSourceResult
    {
        /// <summary>
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::QBusiness::DataSource` for more information about the expected schema for this property.
        /// </summary>
        public readonly object? Configuration;
        public readonly string? CreatedAt;
        public readonly string? DataSourceArn;
        public readonly string? DataSourceId;
        public readonly string? Description;
        public readonly string? DisplayName;
        public readonly Outputs.DataSourceDocumentEnrichmentConfiguration? DocumentEnrichmentConfiguration;
        public readonly string? RoleArn;
        public readonly Pulumi.AwsNative.QBusiness.DataSourceStatus? Status;
        public readonly string? SyncSchedule;
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        public readonly string? Type;
        public readonly string? UpdatedAt;
        public readonly Outputs.DataSourceVpcConfiguration? VpcConfiguration;

        [OutputConstructor]
        private GetDataSourceResult(
            object? configuration,

            string? createdAt,

            string? dataSourceArn,

            string? dataSourceId,

            string? description,

            string? displayName,

            Outputs.DataSourceDocumentEnrichmentConfiguration? documentEnrichmentConfiguration,

            string? roleArn,

            Pulumi.AwsNative.QBusiness.DataSourceStatus? status,

            string? syncSchedule,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            string? type,

            string? updatedAt,

            Outputs.DataSourceVpcConfiguration? vpcConfiguration)
        {
            Configuration = configuration;
            CreatedAt = createdAt;
            DataSourceArn = dataSourceArn;
            DataSourceId = dataSourceId;
            Description = description;
            DisplayName = displayName;
            DocumentEnrichmentConfiguration = documentEnrichmentConfiguration;
            RoleArn = roleArn;
            Status = status;
            SyncSchedule = syncSchedule;
            Tags = tags;
            Type = type;
            UpdatedAt = updatedAt;
            VpcConfiguration = vpcConfiguration;
        }
    }
}
