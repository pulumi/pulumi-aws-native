// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ServiceCatalog
{
    public static class GetStackSetConstraint
    {
        /// <summary>
        /// Resource Type definition for AWS::ServiceCatalog::StackSetConstraint
        /// </summary>
        public static Task<GetStackSetConstraintResult> InvokeAsync(GetStackSetConstraintArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStackSetConstraintResult>("aws-native:servicecatalog:getStackSetConstraint", args ?? new GetStackSetConstraintArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ServiceCatalog::StackSetConstraint
        /// </summary>
        public static Output<GetStackSetConstraintResult> Invoke(GetStackSetConstraintInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetStackSetConstraintResult>("aws-native:servicecatalog:getStackSetConstraint", args ?? new GetStackSetConstraintInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStackSetConstraintArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetStackSetConstraintArgs()
        {
        }
    }

    public sealed class GetStackSetConstraintInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetStackSetConstraintInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetStackSetConstraintResult
    {
        public readonly string? AcceptLanguage;
        public readonly ImmutableArray<string> AccountList;
        public readonly string? AdminRole;
        public readonly string? Description;
        public readonly string? ExecutionRole;
        public readonly string? Id;
        public readonly ImmutableArray<string> RegionList;
        public readonly string? StackInstanceControl;

        [OutputConstructor]
        private GetStackSetConstraintResult(
            string? acceptLanguage,

            ImmutableArray<string> accountList,

            string? adminRole,

            string? description,

            string? executionRole,

            string? id,

            ImmutableArray<string> regionList,

            string? stackInstanceControl)
        {
            AcceptLanguage = acceptLanguage;
            AccountList = accountList;
            AdminRole = adminRole;
            Description = description;
            ExecutionRole = executionRole;
            Id = id;
            RegionList = regionList;
            StackInstanceControl = stackInstanceControl;
        }
    }
}
