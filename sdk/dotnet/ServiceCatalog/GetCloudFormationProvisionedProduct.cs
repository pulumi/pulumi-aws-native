// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ServiceCatalog
{
    public static class GetCloudFormationProvisionedProduct
    {
        /// <summary>
        /// Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
        /// </summary>
        public static Task<GetCloudFormationProvisionedProductResult> InvokeAsync(GetCloudFormationProvisionedProductArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudFormationProvisionedProductResult>("aws-native:servicecatalog:getCloudFormationProvisionedProduct", args ?? new GetCloudFormationProvisionedProductArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
        /// </summary>
        public static Output<GetCloudFormationProvisionedProductResult> Invoke(GetCloudFormationProvisionedProductInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudFormationProvisionedProductResult>("aws-native:servicecatalog:getCloudFormationProvisionedProduct", args ?? new GetCloudFormationProvisionedProductInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudFormationProvisionedProductArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the provisioned product.
        /// </summary>
        [Input("provisionedProductId", required: true)]
        public string ProvisionedProductId { get; set; } = null!;

        public GetCloudFormationProvisionedProductArgs()
        {
        }
        public static new GetCloudFormationProvisionedProductArgs Empty => new GetCloudFormationProvisionedProductArgs();
    }

    public sealed class GetCloudFormationProvisionedProductInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the provisioned product.
        /// </summary>
        [Input("provisionedProductId", required: true)]
        public Input<string> ProvisionedProductId { get; set; } = null!;

        public GetCloudFormationProvisionedProductInvokeArgs()
        {
        }
        public static new GetCloudFormationProvisionedProductInvokeArgs Empty => new GetCloudFormationProvisionedProductInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudFormationProvisionedProductResult
    {
        /// <summary>
        /// The language code.
        /// 
        /// - `jp` - Japanese
        /// - `zh` - Chinese
        /// </summary>
        public readonly Pulumi.AwsNative.ServiceCatalog.CloudFormationProvisionedProductAcceptLanguage? AcceptLanguage;
        public readonly string? CloudformationStackArn;
        /// <summary>
        /// List of key-value pair outputs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Outputs;
        /// <summary>
        /// The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use [ListLaunchPaths](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ListLaunchPaths.html) .
        /// 
        /// &gt; You must provide the name or ID, but not both.
        /// </summary>
        public readonly string? PathId;
        /// <summary>
        /// The name of the path. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use [ListLaunchPaths](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ListLaunchPaths.html) .
        /// 
        /// &gt; You must provide the name or ID, but not both.
        /// </summary>
        public readonly string? PathName;
        /// <summary>
        /// The product identifier.
        /// 
        /// &gt; You must specify either the ID or the name of the product, but not both.
        /// </summary>
        public readonly string? ProductId;
        /// <summary>
        /// The name of the Service Catalog product.
        /// 
        /// Each time a stack is created or updated, if `ProductName` is provided it will successfully resolve to `ProductId` as long as only one product exists in the account or Region with that `ProductName` .
        /// 
        /// &gt; You must specify either the name or the ID of the product, but not both.
        /// </summary>
        public readonly string? ProductName;
        /// <summary>
        /// The ID of the provisioned product.
        /// </summary>
        public readonly string? ProvisionedProductId;
        /// <summary>
        /// The identifier of the provisioning artifact (also known as a version).
        /// 
        /// &gt; You must specify either the ID or the name of the provisioning artifact, but not both.
        /// </summary>
        public readonly string? ProvisioningArtifactId;
        /// <summary>
        /// The name of the provisioning artifact (also known as a version) for the product. This name must be unique for the product.
        /// 
        /// &gt; You must specify either the name or the ID of the provisioning artifact, but not both. You must also specify either the name or the ID of the product, but not both.
        /// </summary>
        public readonly string? ProvisioningArtifactName;
        /// <summary>
        /// Information about a parameter used to provision a product.
        /// </summary>
        public readonly ImmutableArray<Outputs.CloudFormationProvisionedProductProvisioningParameter> ProvisioningParameters;
        /// <summary>
        /// The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product type
        /// 
        /// One or more AWS accounts that will have access to the provisioned product.
        /// 
        /// Applicable only to a `CFN_STACKSET` provisioned product type.
        /// 
        /// The AWS accounts specified should be within the list of accounts in the `STACKSET` constraint. To get the list of accounts in the `STACKSET` constraint, use the `DescribeProvisioningParameters` operation.
        /// 
        /// If no values are specified, the default value is all accounts from the `STACKSET` constraint.
        /// </summary>
        public readonly Outputs.CloudFormationProvisionedProductProvisioningPreferences? ProvisioningPreferences;
        /// <summary>
        /// The ID of the record, such as `rec-rjeatvy434trk` .
        /// </summary>
        public readonly string? RecordId;
        /// <summary>
        /// Information about a tag. A tag is a key-value pair. Tags are propagated to the resources created when provisioning a product.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetCloudFormationProvisionedProductResult(
            Pulumi.AwsNative.ServiceCatalog.CloudFormationProvisionedProductAcceptLanguage? acceptLanguage,

            string? cloudformationStackArn,

            ImmutableDictionary<string, string>? outputs,

            string? pathId,

            string? pathName,

            string? productId,

            string? productName,

            string? provisionedProductId,

            string? provisioningArtifactId,

            string? provisioningArtifactName,

            ImmutableArray<Outputs.CloudFormationProvisionedProductProvisioningParameter> provisioningParameters,

            Outputs.CloudFormationProvisionedProductProvisioningPreferences? provisioningPreferences,

            string? recordId,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            AcceptLanguage = acceptLanguage;
            CloudformationStackArn = cloudformationStackArn;
            Outputs = outputs;
            PathId = pathId;
            PathName = pathName;
            ProductId = productId;
            ProductName = productName;
            ProvisionedProductId = provisionedProductId;
            ProvisioningArtifactId = provisioningArtifactId;
            ProvisioningArtifactName = provisioningArtifactName;
            ProvisioningParameters = provisioningParameters;
            ProvisioningPreferences = provisioningPreferences;
            RecordId = recordId;
            Tags = tags;
        }
    }
}
