// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ServiceCatalog
{
    public static class GetCloudFormationProvisionedProduct
    {
        /// <summary>
        /// Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
        /// </summary>
        public static Task<GetCloudFormationProvisionedProductResult> InvokeAsync(GetCloudFormationProvisionedProductArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCloudFormationProvisionedProductResult>("aws-native:servicecatalog:getCloudFormationProvisionedProduct", args ?? new GetCloudFormationProvisionedProductArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
        /// </summary>
        public static Output<GetCloudFormationProvisionedProductResult> Invoke(GetCloudFormationProvisionedProductInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCloudFormationProvisionedProductResult>("aws-native:servicecatalog:getCloudFormationProvisionedProduct", args ?? new GetCloudFormationProvisionedProductInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudFormationProvisionedProductArgs : Pulumi.InvokeArgs
    {
        [Input("provisionedProductId", required: true)]
        public string ProvisionedProductId { get; set; } = null!;

        public GetCloudFormationProvisionedProductArgs()
        {
        }
    }

    public sealed class GetCloudFormationProvisionedProductInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("provisionedProductId", required: true)]
        public Input<string> ProvisionedProductId { get; set; } = null!;

        public GetCloudFormationProvisionedProductInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCloudFormationProvisionedProductResult
    {
        public readonly Pulumi.AwsNative.ServiceCatalog.CloudFormationProvisionedProductAcceptLanguage? AcceptLanguage;
        public readonly string? CloudformationStackArn;
        /// <summary>
        /// List of key-value pair outputs.
        /// </summary>
        public readonly object? Outputs;
        public readonly string? PathId;
        public readonly string? PathName;
        public readonly string? ProductId;
        public readonly string? ProductName;
        public readonly string? ProvisionedProductId;
        public readonly string? ProvisioningArtifactId;
        public readonly string? ProvisioningArtifactName;
        public readonly ImmutableArray<Outputs.CloudFormationProvisionedProductProvisioningParameter> ProvisioningParameters;
        public readonly Outputs.CloudFormationProvisionedProductProvisioningPreferences? ProvisioningPreferences;
        public readonly string? RecordId;
        public readonly ImmutableArray<Outputs.CloudFormationProvisionedProductTag> Tags;

        [OutputConstructor]
        private GetCloudFormationProvisionedProductResult(
            Pulumi.AwsNative.ServiceCatalog.CloudFormationProvisionedProductAcceptLanguage? acceptLanguage,

            string? cloudformationStackArn,

            object? outputs,

            string? pathId,

            string? pathName,

            string? productId,

            string? productName,

            string? provisionedProductId,

            string? provisioningArtifactId,

            string? provisioningArtifactName,

            ImmutableArray<Outputs.CloudFormationProvisionedProductProvisioningParameter> provisioningParameters,

            Outputs.CloudFormationProvisionedProductProvisioningPreferences? provisioningPreferences,

            string? recordId,

            ImmutableArray<Outputs.CloudFormationProvisionedProductTag> tags)
        {
            AcceptLanguage = acceptLanguage;
            CloudformationStackArn = cloudformationStackArn;
            Outputs = outputs;
            PathId = pathId;
            PathName = pathName;
            ProductId = productId;
            ProductName = productName;
            ProvisionedProductId = provisionedProductId;
            ProvisioningArtifactId = provisioningArtifactId;
            ProvisioningArtifactName = provisioningArtifactName;
            ProvisioningParameters = provisioningParameters;
            ProvisioningPreferences = provisioningPreferences;
            RecordId = recordId;
            Tags = tags;
        }
    }
}
