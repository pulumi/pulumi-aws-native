// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ServiceCatalog
{
    public static class GetPortfolioPrincipalAssociation
    {
        /// <summary>
        /// Resource Type definition for AWS::ServiceCatalog::PortfolioPrincipalAssociation
        /// </summary>
        public static Task<GetPortfolioPrincipalAssociationResult> InvokeAsync(GetPortfolioPrincipalAssociationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPortfolioPrincipalAssociationResult>("aws-native:servicecatalog:getPortfolioPrincipalAssociation", args ?? new GetPortfolioPrincipalAssociationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ServiceCatalog::PortfolioPrincipalAssociation
        /// </summary>
        public static Output<GetPortfolioPrincipalAssociationResult> Invoke(GetPortfolioPrincipalAssociationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPortfolioPrincipalAssociationResult>("aws-native:servicecatalog:getPortfolioPrincipalAssociation", args ?? new GetPortfolioPrincipalAssociationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPortfolioPrincipalAssociationArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetPortfolioPrincipalAssociationArgs()
        {
        }
    }

    public sealed class GetPortfolioPrincipalAssociationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetPortfolioPrincipalAssociationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPortfolioPrincipalAssociationResult
    {
        public readonly string? Id;

        [OutputConstructor]
        private GetPortfolioPrincipalAssociationResult(string? id)
        {
            Id = id;
        }
    }
}
