// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.FSx.Outputs
{

    [OutputType]
    public sealed class VolumeOntapConfiguration
    {
        public readonly Outputs.VolumeAggregateConfiguration? AggregateConfiguration;
        public readonly string? CopyTagsToBackups;
        public readonly string? JunctionPath;
        public readonly string? OntapVolumeType;
        public readonly string? SecurityStyle;
        public readonly string? SizeInBytes;
        public readonly string? SizeInMegabytes;
        public readonly Outputs.VolumeSnaplockConfiguration? SnaplockConfiguration;
        public readonly string? SnapshotPolicy;
        public readonly string? StorageEfficiencyEnabled;
        public readonly string StorageVirtualMachineId;
        public readonly Outputs.VolumeTieringPolicy? TieringPolicy;
        public readonly string? VolumeStyle;

        [OutputConstructor]
        private VolumeOntapConfiguration(
            Outputs.VolumeAggregateConfiguration? aggregateConfiguration,

            string? copyTagsToBackups,

            string? junctionPath,

            string? ontapVolumeType,

            string? securityStyle,

            string? sizeInBytes,

            string? sizeInMegabytes,

            Outputs.VolumeSnaplockConfiguration? snaplockConfiguration,

            string? snapshotPolicy,

            string? storageEfficiencyEnabled,

            string storageVirtualMachineId,

            Outputs.VolumeTieringPolicy? tieringPolicy,

            string? volumeStyle)
        {
            AggregateConfiguration = aggregateConfiguration;
            CopyTagsToBackups = copyTagsToBackups;
            JunctionPath = junctionPath;
            OntapVolumeType = ontapVolumeType;
            SecurityStyle = securityStyle;
            SizeInBytes = sizeInBytes;
            SizeInMegabytes = sizeInMegabytes;
            SnaplockConfiguration = snaplockConfiguration;
            SnapshotPolicy = snapshotPolicy;
            StorageEfficiencyEnabled = storageEfficiencyEnabled;
            StorageVirtualMachineId = storageVirtualMachineId;
            TieringPolicy = tieringPolicy;
            VolumeStyle = volumeStyle;
        }
    }
}
