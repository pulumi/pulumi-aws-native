// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SES
{
    public static class GetEmailIdentity
    {
        /// <summary>
        /// Resource Type definition for AWS::SES::EmailIdentity
        /// </summary>
        public static Task<GetEmailIdentityResult> InvokeAsync(GetEmailIdentityArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEmailIdentityResult>("aws-native:ses:getEmailIdentity", args ?? new GetEmailIdentityArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SES::EmailIdentity
        /// </summary>
        public static Output<GetEmailIdentityResult> Invoke(GetEmailIdentityInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmailIdentityResult>("aws-native:ses:getEmailIdentity", args ?? new GetEmailIdentityInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEmailIdentityArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email address or domain to verify.
        /// </summary>
        [Input("emailIdentity", required: true)]
        public string EmailIdentityValue { get; set; } = null!;

        public GetEmailIdentityArgs()
        {
        }
        public static new GetEmailIdentityArgs Empty => new GetEmailIdentityArgs();
    }

    public sealed class GetEmailIdentityInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email address or domain to verify.
        /// </summary>
        [Input("emailIdentity", required: true)]
        public Input<string> EmailIdentity { get; set; } = null!;

        public GetEmailIdentityInvokeArgs()
        {
        }
        public static new GetEmailIdentityInvokeArgs Empty => new GetEmailIdentityInvokeArgs();
    }


    [OutputType]
    public sealed class GetEmailIdentityResult
    {
        public readonly Outputs.EmailIdentityConfigurationSetAttributes? ConfigurationSetAttributes;
        public readonly Outputs.EmailIdentityDkimAttributes? DkimAttributes;
        public readonly string? DkimDNSTokenName1;
        public readonly string? DkimDNSTokenName2;
        public readonly string? DkimDNSTokenName3;
        public readonly string? DkimDNSTokenValue1;
        public readonly string? DkimDNSTokenValue2;
        public readonly string? DkimDNSTokenValue3;
        public readonly Outputs.EmailIdentityDkimSigningAttributes? DkimSigningAttributes;
        public readonly Outputs.EmailIdentityFeedbackAttributes? FeedbackAttributes;
        public readonly Outputs.EmailIdentityMailFromAttributes? MailFromAttributes;

        [OutputConstructor]
        private GetEmailIdentityResult(
            Outputs.EmailIdentityConfigurationSetAttributes? configurationSetAttributes,

            Outputs.EmailIdentityDkimAttributes? dkimAttributes,

            string? dkimDNSTokenName1,

            string? dkimDNSTokenName2,

            string? dkimDNSTokenName3,

            string? dkimDNSTokenValue1,

            string? dkimDNSTokenValue2,

            string? dkimDNSTokenValue3,

            Outputs.EmailIdentityDkimSigningAttributes? dkimSigningAttributes,

            Outputs.EmailIdentityFeedbackAttributes? feedbackAttributes,

            Outputs.EmailIdentityMailFromAttributes? mailFromAttributes)
        {
            ConfigurationSetAttributes = configurationSetAttributes;
            DkimAttributes = dkimAttributes;
            DkimDNSTokenName1 = dkimDNSTokenName1;
            DkimDNSTokenName2 = dkimDNSTokenName2;
            DkimDNSTokenName3 = dkimDNSTokenName3;
            DkimDNSTokenValue1 = dkimDNSTokenValue1;
            DkimDNSTokenValue2 = dkimDNSTokenValue2;
            DkimDNSTokenValue3 = dkimDNSTokenValue3;
            DkimSigningAttributes = dkimSigningAttributes;
            FeedbackAttributes = feedbackAttributes;
            MailFromAttributes = mailFromAttributes;
        }
    }
}
