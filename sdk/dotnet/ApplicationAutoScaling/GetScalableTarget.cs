// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationAutoScaling
{
    public static class GetScalableTarget
    {
        /// <summary>
        /// Resource Type definition for AWS::ApplicationAutoScaling::ScalableTarget
        /// </summary>
        public static Task<GetScalableTargetResult> InvokeAsync(GetScalableTargetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScalableTargetResult>("aws-native:applicationautoscaling:getScalableTarget", args ?? new GetScalableTargetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApplicationAutoScaling::ScalableTarget
        /// </summary>
        public static Output<GetScalableTargetResult> Invoke(GetScalableTargetInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetScalableTargetResult>("aws-native:applicationautoscaling:getScalableTarget", args ?? new GetScalableTargetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScalableTargetArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetScalableTargetArgs()
        {
        }
    }

    public sealed class GetScalableTargetInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetScalableTargetInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScalableTargetResult
    {
        public readonly string? Id;
        public readonly int? MaxCapacity;
        public readonly int? MinCapacity;
        public readonly string? RoleARN;
        public readonly ImmutableArray<Outputs.ScalableTargetScheduledAction> ScheduledActions;
        public readonly Outputs.ScalableTargetSuspendedState? SuspendedState;

        [OutputConstructor]
        private GetScalableTargetResult(
            string? id,

            int? maxCapacity,

            int? minCapacity,

            string? roleARN,

            ImmutableArray<Outputs.ScalableTargetScheduledAction> scheduledActions,

            Outputs.ScalableTargetSuspendedState? suspendedState)
        {
            Id = id;
            MaxCapacity = maxCapacity;
            MinCapacity = minCapacity;
            RoleARN = roleARN;
            ScheduledActions = scheduledActions;
            SuspendedState = suspendedState;
        }
    }
}
