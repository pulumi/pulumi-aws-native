// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationAutoScaling
{
    public static class GetScalableTarget
    {
        /// <summary>
        /// Resource Type definition for AWS::ApplicationAutoScaling::ScalableTarget
        /// </summary>
        public static Task<GetScalableTargetResult> InvokeAsync(GetScalableTargetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScalableTargetResult>("aws-native:applicationautoscaling:getScalableTarget", args ?? new GetScalableTargetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApplicationAutoScaling::ScalableTarget
        /// </summary>
        public static Output<GetScalableTargetResult> Invoke(GetScalableTargetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScalableTargetResult>("aws-native:applicationautoscaling:getScalableTarget", args ?? new GetScalableTargetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScalableTargetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the resource associated with the scalable target
        /// </summary>
        [Input("resourceId", required: true)]
        public string ResourceId { get; set; } = null!;

        /// <summary>
        /// The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property
        /// </summary>
        [Input("scalableDimension", required: true)]
        public string ScalableDimension { get; set; } = null!;

        /// <summary>
        /// The namespace of the AWS service that provides the resource, or a custom-resource
        /// </summary>
        [Input("serviceNamespace", required: true)]
        public string ServiceNamespace { get; set; } = null!;

        public GetScalableTargetArgs()
        {
        }
        public static new GetScalableTargetArgs Empty => new GetScalableTargetArgs();
    }

    public sealed class GetScalableTargetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the resource associated with the scalable target
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property
        /// </summary>
        [Input("scalableDimension", required: true)]
        public Input<string> ScalableDimension { get; set; } = null!;

        /// <summary>
        /// The namespace of the AWS service that provides the resource, or a custom-resource
        /// </summary>
        [Input("serviceNamespace", required: true)]
        public Input<string> ServiceNamespace { get; set; } = null!;

        public GetScalableTargetInvokeArgs()
        {
        }
        public static new GetScalableTargetInvokeArgs Empty => new GetScalableTargetInvokeArgs();
    }


    [OutputType]
    public sealed class GetScalableTargetResult
    {
        /// <summary>
        /// This value can be returned by using the Ref function. Ref returns the Cloudformation generated ID of the resource in format - ResourceId|ScalableDimension|ServiceNamespace
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The maximum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
        /// </summary>
        public readonly int? MaxCapacity;
        /// <summary>
        /// The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
        /// </summary>
        public readonly int? MinCapacity;
        /// <summary>
        /// The scheduled actions for the scalable target. Duplicates aren't allowed.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScalableTargetScheduledAction> ScheduledActions;
        /// <summary>
        /// An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities.
        /// </summary>
        public readonly Outputs.ScalableTargetSuspendedState? SuspendedState;

        [OutputConstructor]
        private GetScalableTargetResult(
            string? id,

            int? maxCapacity,

            int? minCapacity,

            ImmutableArray<Outputs.ScalableTargetScheduledAction> scheduledActions,

            Outputs.ScalableTargetSuspendedState? suspendedState)
        {
            Id = id;
            MaxCapacity = maxCapacity;
            MinCapacity = minCapacity;
            ScheduledActions = scheduledActions;
            SuspendedState = suspendedState;
        }
    }
}
