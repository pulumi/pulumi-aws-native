// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationAutoScaling
{
    /// <summary>
    /// Resource Type definition for AWS::ApplicationAutoScaling::ScalableTarget
    /// </summary>
    [AwsNativeResourceType("aws-native:applicationautoscaling:ScalableTarget")]
    public partial class ScalableTarget : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This value can be returned by using the Ref function. Ref returns the Cloudformation generated ID of the resource in format - ResourceId|ScalableDimension|ServiceNamespace
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// The maximum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
        /// </summary>
        [Output("maxCapacity")]
        public Output<int> MaxCapacity { get; private set; } = null!;

        /// <summary>
        /// The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
        /// </summary>
        [Output("minCapacity")]
        public Output<int> MinCapacity { get; private set; } = null!;

        /// <summary>
        /// The identifier of the resource associated with the scalable target
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf. 
        /// </summary>
        [Output("roleArn")]
        public Output<string?> RoleArn { get; private set; } = null!;

        /// <summary>
        /// The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property
        /// </summary>
        [Output("scalableDimension")]
        public Output<string> ScalableDimension { get; private set; } = null!;

        /// <summary>
        /// The scheduled actions for the scalable target. Duplicates aren't allowed.
        /// </summary>
        [Output("scheduledActions")]
        public Output<ImmutableArray<Outputs.ScalableTargetScheduledAction>> ScheduledActions { get; private set; } = null!;

        /// <summary>
        /// The namespace of the AWS service that provides the resource, or a custom-resource
        /// </summary>
        [Output("serviceNamespace")]
        public Output<string> ServiceNamespace { get; private set; } = null!;

        /// <summary>
        /// An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities.
        /// </summary>
        [Output("suspendedState")]
        public Output<Outputs.ScalableTargetSuspendedState?> SuspendedState { get; private set; } = null!;


        /// <summary>
        /// Create a ScalableTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScalableTarget(string name, ScalableTargetArgs args, CustomResourceOptions? options = null)
            : base("aws-native:applicationautoscaling:ScalableTarget", name, args ?? new ScalableTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScalableTarget(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:applicationautoscaling:ScalableTarget", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "resourceId",
                    "scalableDimension",
                    "serviceNamespace",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScalableTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScalableTarget Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ScalableTarget(name, id, options);
        }
    }

    public sealed class ScalableTargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
        /// </summary>
        [Input("maxCapacity", required: true)]
        public Input<int> MaxCapacity { get; set; } = null!;

        /// <summary>
        /// The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
        /// </summary>
        [Input("minCapacity", required: true)]
        public Input<int> MinCapacity { get; set; } = null!;

        /// <summary>
        /// The identifier of the resource associated with the scalable target
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf. 
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property
        /// </summary>
        [Input("scalableDimension", required: true)]
        public Input<string> ScalableDimension { get; set; } = null!;

        [Input("scheduledActions")]
        private InputList<Inputs.ScalableTargetScheduledActionArgs>? _scheduledActions;

        /// <summary>
        /// The scheduled actions for the scalable target. Duplicates aren't allowed.
        /// </summary>
        public InputList<Inputs.ScalableTargetScheduledActionArgs> ScheduledActions
        {
            get => _scheduledActions ?? (_scheduledActions = new InputList<Inputs.ScalableTargetScheduledActionArgs>());
            set => _scheduledActions = value;
        }

        /// <summary>
        /// The namespace of the AWS service that provides the resource, or a custom-resource
        /// </summary>
        [Input("serviceNamespace", required: true)]
        public Input<string> ServiceNamespace { get; set; } = null!;

        /// <summary>
        /// An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities.
        /// </summary>
        [Input("suspendedState")]
        public Input<Inputs.ScalableTargetSuspendedStateArgs>? SuspendedState { get; set; }

        public ScalableTargetArgs()
        {
        }
        public static new ScalableTargetArgs Empty => new ScalableTargetArgs();
    }
}
