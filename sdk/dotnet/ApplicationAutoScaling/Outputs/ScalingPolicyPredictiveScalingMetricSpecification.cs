// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApplicationAutoScaling.Outputs
{

    /// <summary>
    /// This structure specifies the metrics and target utilization settings for a predictive scaling policy. 
    ///  You must specify either a metric pair, or a load metric and a scaling metric individually. Specifying a metric pair instead of individual metrics provides a simpler way to configure metrics for a scaling policy. You choose the metric pair, and the policy automatically knows the correct sum and average statistics to use for the load metric and the scaling metric.
    /// </summary>
    [OutputType]
    public sealed class ScalingPolicyPredictiveScalingMetricSpecification
    {
        /// <summary>
        /// The customized capacity metric specification.
        /// </summary>
        public readonly Outputs.ScalingPolicyPredictiveScalingCustomizedCapacityMetric? CustomizedCapacityMetricSpecification;
        /// <summary>
        /// The customized load metric specification.
        /// </summary>
        public readonly Outputs.ScalingPolicyPredictiveScalingCustomizedLoadMetric? CustomizedLoadMetricSpecification;
        /// <summary>
        /// The customized scaling metric specification.
        /// </summary>
        public readonly Outputs.ScalingPolicyPredictiveScalingCustomizedScalingMetric? CustomizedScalingMetricSpecification;
        /// <summary>
        /// The predefined load metric specification.
        /// </summary>
        public readonly Outputs.ScalingPolicyPredictiveScalingPredefinedLoadMetric? PredefinedLoadMetricSpecification;
        /// <summary>
        /// The predefined metric pair specification that determines the appropriate scaling metric and load metric to use.
        /// </summary>
        public readonly Outputs.ScalingPolicyPredictiveScalingPredefinedMetricPair? PredefinedMetricPairSpecification;
        /// <summary>
        /// The predefined scaling metric specification.
        /// </summary>
        public readonly Outputs.ScalingPolicyPredictiveScalingPredefinedScalingMetric? PredefinedScalingMetricSpecification;
        /// <summary>
        /// Specifies the target utilization.
        /// </summary>
        public readonly double TargetValue;

        [OutputConstructor]
        private ScalingPolicyPredictiveScalingMetricSpecification(
            Outputs.ScalingPolicyPredictiveScalingCustomizedCapacityMetric? customizedCapacityMetricSpecification,

            Outputs.ScalingPolicyPredictiveScalingCustomizedLoadMetric? customizedLoadMetricSpecification,

            Outputs.ScalingPolicyPredictiveScalingCustomizedScalingMetric? customizedScalingMetricSpecification,

            Outputs.ScalingPolicyPredictiveScalingPredefinedLoadMetric? predefinedLoadMetricSpecification,

            Outputs.ScalingPolicyPredictiveScalingPredefinedMetricPair? predefinedMetricPairSpecification,

            Outputs.ScalingPolicyPredictiveScalingPredefinedScalingMetric? predefinedScalingMetricSpecification,

            double targetValue)
        {
            CustomizedCapacityMetricSpecification = customizedCapacityMetricSpecification;
            CustomizedLoadMetricSpecification = customizedLoadMetricSpecification;
            CustomizedScalingMetricSpecification = customizedScalingMetricSpecification;
            PredefinedLoadMetricSpecification = predefinedLoadMetricSpecification;
            PredefinedMetricPairSpecification = predefinedMetricPairSpecification;
            PredefinedScalingMetricSpecification = predefinedScalingMetricSpecification;
            TargetValue = targetValue;
        }
    }
}
