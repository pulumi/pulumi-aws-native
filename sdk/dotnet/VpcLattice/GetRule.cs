// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.VpcLattice
{
    public static class GetRule
    {
        /// <summary>
        /// A unit of configuration defining how Mercury routes incoming requests for a Service to its Target Groups
        /// </summary>
        public static Task<GetRuleResult> InvokeAsync(GetRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRuleResult>("aws-native:vpclattice:getRule", args ?? new GetRuleArgs(), options.WithDefaults());

        /// <summary>
        /// A unit of configuration defining how Mercury routes incoming requests for a Service to its Target Groups
        /// </summary>
        public static Output<GetRuleResult> Invoke(GetRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleResult>("aws-native:vpclattice:getRule", args ?? new GetRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetRuleArgs()
        {
        }
        public static new GetRuleArgs Empty => new GetRuleArgs();
    }

    public sealed class GetRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetRuleInvokeArgs()
        {
        }
        public static new GetRuleInvokeArgs Empty => new GetRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRuleResult
    {
        public readonly Outputs.RuleAction? Action;
        public readonly string? Arn;
        public readonly string? Id;
        public readonly Outputs.RuleMatch? Match;
        public readonly int? Priority;
        public readonly ImmutableArray<Outputs.RuleTag> Tags;

        [OutputConstructor]
        private GetRuleResult(
            Outputs.RuleAction? action,

            string? arn,

            string? id,

            Outputs.RuleMatch? match,

            int? priority,

            ImmutableArray<Outputs.RuleTag> tags)
        {
            Action = action;
            Arn = arn;
            Id = id;
            Match = match;
            Priority = priority;
            Tags = tags;
        }
    }
}
