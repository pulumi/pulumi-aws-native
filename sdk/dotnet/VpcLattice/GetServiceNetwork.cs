// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.VpcLattice
{
    public static class GetServiceNetwork
    {
        /// <summary>
        /// A service network is a logical boundary for a collection of services. You can associate services and VPCs with a service network.
        /// </summary>
        public static Task<GetServiceNetworkResult> InvokeAsync(GetServiceNetworkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceNetworkResult>("aws-native:vpclattice:getServiceNetwork", args ?? new GetServiceNetworkArgs(), options.WithDefaults());

        /// <summary>
        /// A service network is a logical boundary for a collection of services. You can associate services and VPCs with a service network.
        /// </summary>
        public static Output<GetServiceNetworkResult> Invoke(GetServiceNetworkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceNetworkResult>("aws-native:vpclattice:getServiceNetwork", args ?? new GetServiceNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceNetworkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the service network.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetServiceNetworkArgs()
        {
        }
        public static new GetServiceNetworkArgs Empty => new GetServiceNetworkArgs();
    }

    public sealed class GetServiceNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the service network.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetServiceNetworkInvokeArgs()
        {
        }
        public static new GetServiceNetworkInvokeArgs Empty => new GetServiceNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceNetworkResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the service network.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The type of IAM policy.
        /// 
        /// - `NONE` : The resource does not use an IAM policy. This is the default.
        /// - `AWS_IAM` : The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.
        /// </summary>
        public readonly Pulumi.AwsNative.VpcLattice.ServiceNetworkAuthType? AuthType;
        /// <summary>
        /// The date and time that the service network was created, specified in ISO-8601 format.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The ID of the service network.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The date and time of the last update, specified in ISO-8601 format.
        /// </summary>
        public readonly string? LastUpdatedAt;
        public readonly Outputs.ServiceNetworkSharingConfig? SharingConfig;
        /// <summary>
        /// The tags for the service network.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetServiceNetworkResult(
            string? arn,

            Pulumi.AwsNative.VpcLattice.ServiceNetworkAuthType? authType,

            string? createdAt,

            string? id,

            string? lastUpdatedAt,

            Outputs.ServiceNetworkSharingConfig? sharingConfig,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            AuthType = authType;
            CreatedAt = createdAt;
            Id = id;
            LastUpdatedAt = lastUpdatedAt;
            SharingConfig = sharingConfig;
            Tags = tags;
        }
    }
}
