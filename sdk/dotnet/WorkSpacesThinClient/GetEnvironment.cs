// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WorkSpacesThinClient
{
    public static class GetEnvironment
    {
        /// <summary>
        /// Resource type definition for AWS::WorkSpacesThinClient::Environment.
        /// </summary>
        public static Task<GetEnvironmentResult> InvokeAsync(GetEnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentResult>("aws-native:workspacesthinclient:getEnvironment", args ?? new GetEnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// Resource type definition for AWS::WorkSpacesThinClient::Environment.
        /// </summary>
        public static Output<GetEnvironmentResult> Invoke(GetEnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentResult>("aws-native:workspacesthinclient:getEnvironment", args ?? new GetEnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier of the environment.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetEnvironmentArgs()
        {
        }
        public static new GetEnvironmentArgs Empty => new GetEnvironmentArgs();
    }

    public sealed class GetEnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier of the environment.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetEnvironmentInvokeArgs()
        {
        }
        public static new GetEnvironmentInvokeArgs Empty => new GetEnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnvironmentResult
    {
        /// <summary>
        /// Activation code for devices associated with environment.
        /// </summary>
        public readonly string? ActivationCode;
        /// <summary>
        /// The environment ARN.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The timestamp in unix epoch format when environment was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The ID of the software set to apply.
        /// </summary>
        public readonly string? DesiredSoftwareSetId;
        /// <summary>
        /// The URL for the identity provider login (only for environments that use AppStream 2.0).
        /// </summary>
        public readonly string? DesktopEndpoint;
        /// <summary>
        /// The type of VDI.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesThinClient.EnvironmentDesktopType? DesktopType;
        /// <summary>
        /// Unique identifier of the environment.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A specification for a time window to apply software updates.
        /// </summary>
        public readonly Outputs.EnvironmentMaintenanceWindow? MaintenanceWindow;
        /// <summary>
        /// The name of the environment.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The ID of the software set that is pending to be installed.
        /// </summary>
        public readonly string? PendingSoftwareSetId;
        /// <summary>
        /// The version of the software set that is pending to be installed.
        /// </summary>
        public readonly string? PendingSoftwareSetVersion;
        /// <summary>
        /// Number of devices registered to the environment.
        /// </summary>
        public readonly int? RegisteredDevicesCount;
        /// <summary>
        /// Describes if the software currently installed on all devices in the environment is a supported version.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesThinClient.EnvironmentSoftwareSetComplianceStatus? SoftwareSetComplianceStatus;
        /// <summary>
        /// An option to define which software updates to apply.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesThinClient.EnvironmentSoftwareSetUpdateMode? SoftwareSetUpdateMode;
        /// <summary>
        /// An option to define if software updates should be applied within a maintenance window.
        /// </summary>
        public readonly Pulumi.AwsNative.WorkSpacesThinClient.EnvironmentSoftwareSetUpdateSchedule? SoftwareSetUpdateSchedule;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.EnvironmentTag> Tags;
        /// <summary>
        /// The timestamp in unix epoch format when environment was last updated.
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetEnvironmentResult(
            string? activationCode,

            string? arn,

            string? createdAt,

            string? desiredSoftwareSetId,

            string? desktopEndpoint,

            Pulumi.AwsNative.WorkSpacesThinClient.EnvironmentDesktopType? desktopType,

            string? id,

            Outputs.EnvironmentMaintenanceWindow? maintenanceWindow,

            string? name,

            string? pendingSoftwareSetId,

            string? pendingSoftwareSetVersion,

            int? registeredDevicesCount,

            Pulumi.AwsNative.WorkSpacesThinClient.EnvironmentSoftwareSetComplianceStatus? softwareSetComplianceStatus,

            Pulumi.AwsNative.WorkSpacesThinClient.EnvironmentSoftwareSetUpdateMode? softwareSetUpdateMode,

            Pulumi.AwsNative.WorkSpacesThinClient.EnvironmentSoftwareSetUpdateSchedule? softwareSetUpdateSchedule,

            ImmutableArray<Outputs.EnvironmentTag> tags,

            string? updatedAt)
        {
            ActivationCode = activationCode;
            Arn = arn;
            CreatedAt = createdAt;
            DesiredSoftwareSetId = desiredSoftwareSetId;
            DesktopEndpoint = desktopEndpoint;
            DesktopType = desktopType;
            Id = id;
            MaintenanceWindow = maintenanceWindow;
            Name = name;
            PendingSoftwareSetId = pendingSoftwareSetId;
            PendingSoftwareSetVersion = pendingSoftwareSetVersion;
            RegisteredDevicesCount = registeredDevicesCount;
            SoftwareSetComplianceStatus = softwareSetComplianceStatus;
            SoftwareSetUpdateMode = softwareSetUpdateMode;
            SoftwareSetUpdateSchedule = softwareSetUpdateSchedule;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
