// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    public static class GetApplicationInferenceProfile
    {
        /// <summary>
        /// Definition of AWS::Bedrock::ApplicationInferenceProfile Resource Type
        /// </summary>
        public static Task<GetApplicationInferenceProfileResult> InvokeAsync(GetApplicationInferenceProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationInferenceProfileResult>("aws-native:bedrock:getApplicationInferenceProfile", args ?? new GetApplicationInferenceProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Bedrock::ApplicationInferenceProfile Resource Type
        /// </summary>
        public static Output<GetApplicationInferenceProfileResult> Invoke(GetApplicationInferenceProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationInferenceProfileResult>("aws-native:bedrock:getApplicationInferenceProfile", args ?? new GetApplicationInferenceProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationInferenceProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
        /// </summary>
        [Input("inferenceProfileIdentifier", required: true)]
        public string InferenceProfileIdentifier { get; set; } = null!;

        public GetApplicationInferenceProfileArgs()
        {
        }
        public static new GetApplicationInferenceProfileArgs Empty => new GetApplicationInferenceProfileArgs();
    }

    public sealed class GetApplicationInferenceProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
        /// </summary>
        [Input("inferenceProfileIdentifier", required: true)]
        public Input<string> InferenceProfileIdentifier { get; set; } = null!;

        public GetApplicationInferenceProfileInvokeArgs()
        {
        }
        public static new GetApplicationInferenceProfileInvokeArgs Empty => new GetApplicationInferenceProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationInferenceProfileResult
    {
        /// <summary>
        /// Time Stamp
        /// </summary>
        public readonly string? CreatedAt;
        public readonly string? InferenceProfileArn;
        public readonly string? InferenceProfileId;
        /// <summary>
        /// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
        /// </summary>
        public readonly string? InferenceProfileIdentifier;
        /// <summary>
        /// List of model configuration
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationInferenceProfileInferenceProfileModel> Models;
        public readonly Pulumi.AwsNative.Bedrock.ApplicationInferenceProfileInferenceProfileStatus? Status;
        /// <summary>
        /// List of Tags
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        public readonly Pulumi.AwsNative.Bedrock.ApplicationInferenceProfileInferenceProfileType? Type;
        /// <summary>
        /// Time Stamp
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetApplicationInferenceProfileResult(
            string? createdAt,

            string? inferenceProfileArn,

            string? inferenceProfileId,

            string? inferenceProfileIdentifier,

            ImmutableArray<Outputs.ApplicationInferenceProfileInferenceProfileModel> models,

            Pulumi.AwsNative.Bedrock.ApplicationInferenceProfileInferenceProfileStatus? status,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            Pulumi.AwsNative.Bedrock.ApplicationInferenceProfileInferenceProfileType? type,

            string? updatedAt)
        {
            CreatedAt = createdAt;
            InferenceProfileArn = inferenceProfileArn;
            InferenceProfileId = inferenceProfileId;
            InferenceProfileIdentifier = inferenceProfileIdentifier;
            Models = models;
            Status = status;
            Tags = tags;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
