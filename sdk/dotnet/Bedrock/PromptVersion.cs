// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    /// <summary>
    /// Definition of AWS::Bedrock::PromptVersion Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:bedrock:PromptVersion")]
    public partial class PromptVersion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of a prompt version resource
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Time Stamp.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// A KMS key ARN
        /// </summary>
        [Output("customerEncryptionKeyArn")]
        public Output<string> CustomerEncryptionKeyArn { get; private set; } = null!;

        /// <summary>
        /// Name for a variant.
        /// </summary>
        [Output("defaultVariant")]
        public Output<string> DefaultVariant { get; private set; } = null!;

        /// <summary>
        /// Description for a prompt version resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name for a prompt resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ARN of a prompt resource possibly with a version
        /// </summary>
        [Output("promptArn")]
        public Output<string> PromptArn { get; private set; } = null!;

        /// <summary>
        /// Identifier for a Prompt
        /// </summary>
        [Output("promptId")]
        public Output<string> PromptId { get; private set; } = null!;

        /// <summary>
        /// A map of tags attached to the prompt version and their values.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Time Stamp.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// List of prompt variants
        /// </summary>
        [Output("variants")]
        public Output<ImmutableArray<Outputs.PromptVersionPromptVariant>> Variants { get; private set; } = null!;

        /// <summary>
        /// Version.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a PromptVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PromptVersion(string name, PromptVersionArgs args, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:PromptVersion", name, args ?? new PromptVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PromptVersion(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:PromptVersion", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "description",
                    "promptArn",
                    "tags.*",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PromptVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PromptVersion Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PromptVersion(name, id, options);
        }
    }

    public sealed class PromptVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description for a prompt version resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// ARN of a prompt resource possibly with a version
        /// </summary>
        [Input("promptArn", required: true)]
        public Input<string> PromptArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags attached to the prompt version and their values.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public PromptVersionArgs()
        {
        }
        public static new PromptVersionArgs Empty => new PromptVersionArgs();
    }
}
