// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    public static class GetKnowledgeBase
    {
        /// <summary>
        /// Definition of AWS::Bedrock::KnowledgeBase Resource Type
        /// </summary>
        public static Task<GetKnowledgeBaseResult> InvokeAsync(GetKnowledgeBaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKnowledgeBaseResult>("aws-native:bedrock:getKnowledgeBase", args ?? new GetKnowledgeBaseArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Bedrock::KnowledgeBase Resource Type
        /// </summary>
        public static Output<GetKnowledgeBaseResult> Invoke(GetKnowledgeBaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKnowledgeBaseResult>("aws-native:bedrock:getKnowledgeBase", args ?? new GetKnowledgeBaseInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Bedrock::KnowledgeBase Resource Type
        /// </summary>
        public static Output<GetKnowledgeBaseResult> Invoke(GetKnowledgeBaseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKnowledgeBaseResult>("aws-native:bedrock:getKnowledgeBase", args ?? new GetKnowledgeBaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKnowledgeBaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the knowledge base.
        /// </summary>
        [Input("knowledgeBaseId", required: true)]
        public string KnowledgeBaseId { get; set; } = null!;

        public GetKnowledgeBaseArgs()
        {
        }
        public static new GetKnowledgeBaseArgs Empty => new GetKnowledgeBaseArgs();
    }

    public sealed class GetKnowledgeBaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the knowledge base.
        /// </summary>
        [Input("knowledgeBaseId", required: true)]
        public Input<string> KnowledgeBaseId { get; set; } = null!;

        public GetKnowledgeBaseInvokeArgs()
        {
        }
        public static new GetKnowledgeBaseInvokeArgs Empty => new GetKnowledgeBaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetKnowledgeBaseResult
    {
        /// <summary>
        /// The time at which the knowledge base was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// Description of the Resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A list of reasons that the API operation on the knowledge base failed.
        /// </summary>
        public readonly ImmutableArray<string> FailureReasons;
        /// <summary>
        /// The ARN of the knowledge base.
        /// </summary>
        public readonly string? KnowledgeBaseArn;
        /// <summary>
        /// Contains details about the embeddings configuration of the knowledge base.
        /// </summary>
        public readonly Outputs.KnowledgeBaseConfiguration? KnowledgeBaseConfiguration;
        /// <summary>
        /// The unique identifier of the knowledge base.
        /// </summary>
        public readonly string? KnowledgeBaseId;
        /// <summary>
        /// The name of the knowledge base.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// The status of the knowledge base.
        /// </summary>
        public readonly Pulumi.AwsNative.Bedrock.KnowledgeBaseStatus? Status;
        /// <summary>
        /// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
        /// 
        /// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
        /// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The time at which the knowledge base was last updated.
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetKnowledgeBaseResult(
            string? createdAt,

            string? description,

            ImmutableArray<string> failureReasons,

            string? knowledgeBaseArn,

            Outputs.KnowledgeBaseConfiguration? knowledgeBaseConfiguration,

            string? knowledgeBaseId,

            string? name,

            string? roleArn,

            Pulumi.AwsNative.Bedrock.KnowledgeBaseStatus? status,

            ImmutableDictionary<string, string>? tags,

            string? updatedAt)
        {
            CreatedAt = createdAt;
            Description = description;
            FailureReasons = failureReasons;
            KnowledgeBaseArn = knowledgeBaseArn;
            KnowledgeBaseConfiguration = knowledgeBaseConfiguration;
            KnowledgeBaseId = knowledgeBaseId;
            Name = name;
            RoleArn = roleArn;
            Status = status;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
