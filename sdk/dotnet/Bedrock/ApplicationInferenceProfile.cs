// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    /// <summary>
    /// Definition of AWS::Bedrock::ApplicationInferenceProfile Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:bedrock:ApplicationInferenceProfile")]
    public partial class ApplicationInferenceProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time Stamp
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Description of the inference profile
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("inferenceProfileArn")]
        public Output<string> InferenceProfileArn { get; private set; } = null!;

        [Output("inferenceProfileId")]
        public Output<string> InferenceProfileId { get; private set; } = null!;

        /// <summary>
        /// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
        /// </summary>
        [Output("inferenceProfileIdentifier")]
        public Output<string> InferenceProfileIdentifier { get; private set; } = null!;

        [Output("inferenceProfileName")]
        public Output<string> InferenceProfileName { get; private set; } = null!;

        [Output("modelSource")]
        public Output<Outputs.ApplicationInferenceProfileInferenceProfileModelSourceProperties?> ModelSource { get; private set; } = null!;

        /// <summary>
        /// List of model configuration
        /// </summary>
        [Output("models")]
        public Output<ImmutableArray<Outputs.ApplicationInferenceProfileInferenceProfileModel>> Models { get; private set; } = null!;

        [Output("status")]
        public Output<Pulumi.AwsNative.Bedrock.ApplicationInferenceProfileInferenceProfileStatus> Status { get; private set; } = null!;

        /// <summary>
        /// List of Tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        [Output("type")]
        public Output<Pulumi.AwsNative.Bedrock.ApplicationInferenceProfileInferenceProfileType> Type { get; private set; } = null!;

        /// <summary>
        /// Time Stamp
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationInferenceProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationInferenceProfile(string name, ApplicationInferenceProfileArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:ApplicationInferenceProfile", name, args ?? new ApplicationInferenceProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationInferenceProfile(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:ApplicationInferenceProfile", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "description",
                    "inferenceProfileName",
                    "modelSource",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationInferenceProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationInferenceProfile Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ApplicationInferenceProfile(name, id, options);
        }
    }

    public sealed class ApplicationInferenceProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the inference profile
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("inferenceProfileName")]
        public Input<string>? InferenceProfileName { get; set; }

        [Input("modelSource")]
        public Input<Inputs.ApplicationInferenceProfileInferenceProfileModelSourcePropertiesArgs>? ModelSource { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// List of Tags
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public ApplicationInferenceProfileArgs()
        {
        }
        public static new ApplicationInferenceProfileArgs Empty => new ApplicationInferenceProfileArgs();
    }
}
