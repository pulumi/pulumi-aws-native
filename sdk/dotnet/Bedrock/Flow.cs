// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    /// <summary>
    /// Definition of AWS::Bedrock::Flow Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:bedrock:Flow")]
    public partial class Flow : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Arn representation of the Flow
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Identifier for a Flow
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// Time Stamp.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// A KMS key ARN
        /// </summary>
        [Output("customerEncryptionKeyArn")]
        public Output<string?> CustomerEncryptionKeyArn { get; private set; } = null!;

        [Output("definition")]
        public Output<Outputs.FlowDefinition?> Definition { get; private set; } = null!;

        /// <summary>
        /// An Amazon S3 location.
        /// </summary>
        [Output("definitionS3Location")]
        public Output<Outputs.FlowS3Location?> DefinitionS3Location { get; private set; } = null!;

        /// <summary>
        /// A JSON string containing a Definition with the same schema as the Definition property of this resource
        /// </summary>
        [Output("definitionString")]
        public Output<string?> DefinitionString { get; private set; } = null!;

        [Output("definitionSubstitutions")]
        public Output<ImmutableDictionary<string, object>?> DefinitionSubstitutions { get; private set; } = null!;

        /// <summary>
        /// Description of the flow
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// ARN of a IAM role
        /// </summary>
        [Output("executionRoleArn")]
        public Output<string> ExecutionRoleArn { get; private set; } = null!;

        /// <summary>
        /// Name for the flow
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The status of the flow. The following statuses are possible:
        /// 
        /// - NotPrepared – The flow has been created or updated, but hasn't been prepared. If you just created the flow, you can't test it. If you updated the flow, the `DRAFT` version won't contain the latest changes for testing. Send a [PrepareFlow](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PrepareFlow.html) request to package the latest changes into the `DRAFT` version.
        /// - Preparing – The flow is being prepared so that the `DRAFT` version contains the latest changes for testing.
        /// - Prepared – The flow is prepared and the `DRAFT` version contains the latest changes for testing.
        /// - Failed – The last API operation that you invoked on the flow failed. Send a [GetFlow](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_GetFlow.html) request and check the error message in the `validations` field.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Bedrock.FlowStatus> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("testAliasTags")]
        public Output<ImmutableDictionary<string, string>?> TestAliasTags { get; private set; } = null!;

        /// <summary>
        /// Time Stamp.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// Draft Version.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Flow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Flow(string name, FlowArgs args, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:Flow", name, args ?? new FlowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Flow(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:Flow", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Flow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Flow Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Flow(name, id, options);
        }
    }

    public sealed class FlowArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A KMS key ARN
        /// </summary>
        [Input("customerEncryptionKeyArn")]
        public Input<string>? CustomerEncryptionKeyArn { get; set; }

        [Input("definition")]
        public Input<Inputs.FlowDefinitionArgs>? Definition { get; set; }

        /// <summary>
        /// An Amazon S3 location.
        /// </summary>
        [Input("definitionS3Location")]
        public Input<Inputs.FlowS3LocationArgs>? DefinitionS3Location { get; set; }

        /// <summary>
        /// A JSON string containing a Definition with the same schema as the Definition property of this resource
        /// </summary>
        [Input("definitionString")]
        public Input<string>? DefinitionString { get; set; }

        [Input("definitionSubstitutions")]
        private InputMap<object>? _definitionSubstitutions;
        public InputMap<object> DefinitionSubstitutions
        {
            get => _definitionSubstitutions ?? (_definitionSubstitutions = new InputMap<object>());
            set => _definitionSubstitutions = value;
        }

        /// <summary>
        /// Description of the flow
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// ARN of a IAM role
        /// </summary>
        [Input("executionRoleArn", required: true)]
        public Input<string> ExecutionRoleArn { get; set; } = null!;

        /// <summary>
        /// Name for the flow
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("testAliasTags")]
        private InputMap<string>? _testAliasTags;
        public InputMap<string> TestAliasTags
        {
            get => _testAliasTags ?? (_testAliasTags = new InputMap<string>());
            set => _testAliasTags = value;
        }

        public FlowArgs()
        {
        }
        public static new FlowArgs Empty => new FlowArgs();
    }
}
