// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    public static class GetDataSource
    {
        /// <summary>
        /// Definition of AWS::Bedrock::DataSource Resource Type
        /// </summary>
        public static Task<GetDataSourceResult> InvokeAsync(GetDataSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataSourceResult>("aws-native:bedrock:getDataSource", args ?? new GetDataSourceArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Bedrock::DataSource Resource Type
        /// </summary>
        public static Output<GetDataSourceResult> Invoke(GetDataSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceResult>("aws-native:bedrock:getDataSource", args ?? new GetDataSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier for a resource.
        /// </summary>
        [Input("dataSourceId", required: true)]
        public string DataSourceId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the knowledge base to which to add the data source.
        /// </summary>
        [Input("knowledgeBaseId", required: true)]
        public string KnowledgeBaseId { get; set; } = null!;

        public GetDataSourceArgs()
        {
        }
        public static new GetDataSourceArgs Empty => new GetDataSourceArgs();
    }

    public sealed class GetDataSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier for a resource.
        /// </summary>
        [Input("dataSourceId", required: true)]
        public Input<string> DataSourceId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the knowledge base to which to add the data source.
        /// </summary>
        [Input("knowledgeBaseId", required: true)]
        public Input<string> KnowledgeBaseId { get; set; } = null!;

        public GetDataSourceInvokeArgs()
        {
        }
        public static new GetDataSourceInvokeArgs Empty => new GetDataSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataSourceResult
    {
        /// <summary>
        /// The time at which the data source was created.
        /// </summary>
        public readonly string? CreatedAt;
        public readonly Outputs.DataSourceConfiguration? DataSourceConfiguration;
        /// <summary>
        /// Identifier for a resource.
        /// </summary>
        public readonly string? DataSourceId;
        public readonly Pulumi.AwsNative.Bedrock.DataSourceStatus? DataSourceStatus;
        /// <summary>
        /// Description of the Resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The name of the data source.
        /// </summary>
        public readonly string? Name;
        public readonly Outputs.DataSourceServerSideEncryptionConfiguration? ServerSideEncryptionConfiguration;
        /// <summary>
        /// The time at which the knowledge base was last updated.
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetDataSourceResult(
            string? createdAt,

            Outputs.DataSourceConfiguration? dataSourceConfiguration,

            string? dataSourceId,

            Pulumi.AwsNative.Bedrock.DataSourceStatus? dataSourceStatus,

            string? description,

            string? name,

            Outputs.DataSourceServerSideEncryptionConfiguration? serverSideEncryptionConfiguration,

            string? updatedAt)
        {
            CreatedAt = createdAt;
            DataSourceConfiguration = dataSourceConfiguration;
            DataSourceId = dataSourceId;
            DataSourceStatus = dataSourceStatus;
            Description = description;
            Name = name;
            ServerSideEncryptionConfiguration = serverSideEncryptionConfiguration;
            UpdatedAt = updatedAt;
        }
    }
}
