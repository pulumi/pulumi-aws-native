// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    public static class GetIntelligentPromptRouter
    {
        /// <summary>
        /// Definition of AWS::Bedrock::IntelligentPromptRouter Resource Type
        /// </summary>
        public static Task<GetIntelligentPromptRouterResult> InvokeAsync(GetIntelligentPromptRouterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIntelligentPromptRouterResult>("aws-native:bedrock:getIntelligentPromptRouter", args ?? new GetIntelligentPromptRouterArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Bedrock::IntelligentPromptRouter Resource Type
        /// </summary>
        public static Output<GetIntelligentPromptRouterResult> Invoke(GetIntelligentPromptRouterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIntelligentPromptRouterResult>("aws-native:bedrock:getIntelligentPromptRouter", args ?? new GetIntelligentPromptRouterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Bedrock::IntelligentPromptRouter Resource Type
        /// </summary>
        public static Output<GetIntelligentPromptRouterResult> Invoke(GetIntelligentPromptRouterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIntelligentPromptRouterResult>("aws-native:bedrock:getIntelligentPromptRouter", args ?? new GetIntelligentPromptRouterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIntelligentPromptRouterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Arn of the Prompt Router.
        /// </summary>
        [Input("promptRouterArn", required: true)]
        public string PromptRouterArn { get; set; } = null!;

        public GetIntelligentPromptRouterArgs()
        {
        }
        public static new GetIntelligentPromptRouterArgs Empty => new GetIntelligentPromptRouterArgs();
    }

    public sealed class GetIntelligentPromptRouterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Arn of the Prompt Router.
        /// </summary>
        [Input("promptRouterArn", required: true)]
        public Input<string> PromptRouterArn { get; set; } = null!;

        public GetIntelligentPromptRouterInvokeArgs()
        {
        }
        public static new GetIntelligentPromptRouterInvokeArgs Empty => new GetIntelligentPromptRouterInvokeArgs();
    }


    [OutputType]
    public sealed class GetIntelligentPromptRouterResult
    {
        /// <summary>
        /// Time Stamp
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// Arn of the Prompt Router.
        /// </summary>
        public readonly string? PromptRouterArn;
        public readonly Pulumi.AwsNative.Bedrock.IntelligentPromptRouterPromptRouterStatus? Status;
        /// <summary>
        /// List of Tags
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        public readonly Pulumi.AwsNative.Bedrock.IntelligentPromptRouterPromptRouterType? Type;
        /// <summary>
        /// Time Stamp
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetIntelligentPromptRouterResult(
            string? createdAt,

            string? promptRouterArn,

            Pulumi.AwsNative.Bedrock.IntelligentPromptRouterPromptRouterStatus? status,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            Pulumi.AwsNative.Bedrock.IntelligentPromptRouterPromptRouterType? type,

            string? updatedAt)
        {
            CreatedAt = createdAt;
            PromptRouterArn = promptRouterArn;
            Status = status;
            Tags = tags;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
