// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    /// <summary>
    /// Definition of AWS::Bedrock::AgentAlias Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:bedrock:AgentAlias")]
    public partial class AgentAlias : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Arn representation of the Agent Alias.
        /// </summary>
        [Output("agentAliasArn")]
        public Output<string> AgentAliasArn { get; private set; } = null!;

        /// <summary>
        /// The list of history events for an alias for an Agent.
        /// </summary>
        [Output("agentAliasHistoryEvents")]
        public Output<ImmutableArray<Outputs.AgentAliasHistoryEvent>> AgentAliasHistoryEvents { get; private set; } = null!;

        /// <summary>
        /// Id for an Agent Alias generated at the server side.
        /// </summary>
        [Output("agentAliasId")]
        public Output<string> AgentAliasId { get; private set; } = null!;

        /// <summary>
        /// Name for a resource.
        /// </summary>
        [Output("agentAliasName")]
        public Output<string> AgentAliasName { get; private set; } = null!;

        /// <summary>
        /// The status of the alias of the agent and whether it is ready for use. The following statuses are possible:
        /// 
        /// - CREATING – The agent alias is being created.
        /// - PREPARED – The agent alias is finished being created or updated and is ready to be invoked.
        /// - FAILED – The agent alias API operation failed.
        /// - UPDATING – The agent alias is being updated.
        /// - DELETING – The agent alias is being deleted.
        /// </summary>
        [Output("agentAliasStatus")]
        public Output<Pulumi.AwsNative.Bedrock.AgentAliasStatus> AgentAliasStatus { get; private set; } = null!;

        /// <summary>
        /// Identifier for a resource.
        /// </summary>
        [Output("agentId")]
        public Output<string> AgentId { get; private set; } = null!;

        /// <summary>
        /// Time Stamp.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Description of the Resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Routing configuration for an Agent alias.
        /// </summary>
        [Output("routingConfiguration")]
        public Output<ImmutableArray<Outputs.AgentAliasRoutingConfigurationListItem>> RoutingConfiguration { get; private set; } = null!;

        /// <summary>
        /// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
        /// 
        /// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
        /// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Time Stamp.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a AgentAlias resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AgentAlias(string name, AgentAliasArgs args, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:AgentAlias", name, args ?? new AgentAliasArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AgentAlias(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:AgentAlias", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "agentId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AgentAlias resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AgentAlias Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AgentAlias(name, id, options);
        }
    }

    public sealed class AgentAliasArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name for a resource.
        /// </summary>
        [Input("agentAliasName")]
        public Input<string>? AgentAliasName { get; set; }

        /// <summary>
        /// Identifier for a resource.
        /// </summary>
        [Input("agentId", required: true)]
        public Input<string> AgentId { get; set; } = null!;

        /// <summary>
        /// Description of the Resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("routingConfiguration")]
        private InputList<Inputs.AgentAliasRoutingConfigurationListItemArgs>? _routingConfiguration;

        /// <summary>
        /// Routing configuration for an Agent alias.
        /// </summary>
        public InputList<Inputs.AgentAliasRoutingConfigurationListItemArgs> RoutingConfiguration
        {
            get => _routingConfiguration ?? (_routingConfiguration = new InputList<Inputs.AgentAliasRoutingConfigurationListItemArgs>());
            set => _routingConfiguration = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
        /// 
        /// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
        /// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AgentAliasArgs()
        {
        }
        public static new AgentAliasArgs Empty => new AgentAliasArgs();
    }
}
