// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    /// <summary>
    /// Definition of AWS::Bedrock::KnowledgeBase Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:bedrock:KnowledgeBase")]
    public partial class KnowledgeBase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time at which the knowledge base was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Description of the Resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A list of reasons that the API operation on the knowledge base failed.
        /// </summary>
        [Output("failureReasons")]
        public Output<ImmutableArray<string>> FailureReasons { get; private set; } = null!;

        /// <summary>
        /// The ARN of the knowledge base.
        /// </summary>
        [Output("knowledgeBaseArn")]
        public Output<string> KnowledgeBaseArn { get; private set; } = null!;

        /// <summary>
        /// Contains details about the embeddings configuration of the knowledge base.
        /// </summary>
        [Output("knowledgeBaseConfiguration")]
        public Output<Outputs.KnowledgeBaseConfiguration> KnowledgeBaseConfiguration { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the knowledge base.
        /// </summary>
        [Output("knowledgeBaseId")]
        public Output<string> KnowledgeBaseId { get; private set; } = null!;

        /// <summary>
        /// The name of the knowledge base.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// The status of the knowledge base.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Bedrock.KnowledgeBaseStatus> Status { get; private set; } = null!;

        /// <summary>
        /// Contains details about the storage configuration of the knowledge base.
        /// </summary>
        [Output("storageConfiguration")]
        public Output<Outputs.KnowledgeBaseStorageConfiguration?> StorageConfiguration { get; private set; } = null!;

        /// <summary>
        /// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
        /// 
        /// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
        /// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The time at which the knowledge base was last updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a KnowledgeBase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KnowledgeBase(string name, KnowledgeBaseArgs args, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:KnowledgeBase", name, args ?? new KnowledgeBaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KnowledgeBase(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:bedrock:KnowledgeBase", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "knowledgeBaseConfiguration.kendraKnowledgeBaseConfiguration",
                    "knowledgeBaseConfiguration.sqlKnowledgeBaseConfiguration.redshiftConfiguration.queryEngineConfiguration",
                    "knowledgeBaseConfiguration.sqlKnowledgeBaseConfiguration.redshiftConfiguration.storageConfigurations[*]",
                    "knowledgeBaseConfiguration.sqlKnowledgeBaseConfiguration.type",
                    "knowledgeBaseConfiguration.type",
                    "knowledgeBaseConfiguration.vectorKnowledgeBaseConfiguration",
                    "storageConfiguration",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KnowledgeBase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KnowledgeBase Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new KnowledgeBase(name, id, options);
        }
    }

    public sealed class KnowledgeBaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the Resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Contains details about the embeddings configuration of the knowledge base.
        /// </summary>
        [Input("knowledgeBaseConfiguration", required: true)]
        public Input<Inputs.KnowledgeBaseConfigurationArgs> KnowledgeBaseConfiguration { get; set; } = null!;

        /// <summary>
        /// The name of the knowledge base.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// Contains details about the storage configuration of the knowledge base.
        /// </summary>
        [Input("storageConfiguration")]
        public Input<Inputs.KnowledgeBaseStorageConfigurationArgs>? StorageConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
        /// 
        /// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
        /// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public KnowledgeBaseArgs()
        {
        }
        public static new KnowledgeBaseArgs Empty => new KnowledgeBaseArgs();
    }
}
