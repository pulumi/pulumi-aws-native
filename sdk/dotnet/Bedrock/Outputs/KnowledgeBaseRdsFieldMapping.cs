// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock.Outputs
{

    /// <summary>
    /// Contains the names of the fields to which to map information about the vector store.
    /// </summary>
    [OutputType]
    public sealed class KnowledgeBaseRdsFieldMapping
    {
        /// <summary>
        /// The name of the field in which Amazon Bedrock stores custom metadata about the vector store.
        /// </summary>
        public readonly string? CustomMetadataField;
        /// <summary>
        /// The name of the field in which Amazon Bedrock stores metadata about the vector store.
        /// </summary>
        public readonly string MetadataField;
        /// <summary>
        /// The name of the field in which Amazon Bedrock stores the ID for each entry.
        /// </summary>
        public readonly string PrimaryKeyField;
        /// <summary>
        /// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
        /// </summary>
        public readonly string TextField;
        /// <summary>
        /// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
        /// </summary>
        public readonly string VectorField;

        [OutputConstructor]
        private KnowledgeBaseRdsFieldMapping(
            string? customMetadataField,

            string metadataField,

            string primaryKeyField,

            string textField,

            string vectorField)
        {
            CustomMetadataField = customMetadataField;
            MetadataField = metadataField;
            PrimaryKeyField = primaryKeyField;
            TextField = textField;
            VectorField = vectorField;
        }
    }
}
