// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock.Outputs
{

    /// <summary>
    /// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
    /// </summary>
    [OutputType]
    public sealed class DataSourceChunkingConfiguration
    {
        /// <summary>
        /// Knowledge base can split your source data into chunks. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for `NONE` , then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
        /// 
        /// - `FIXED_SIZE` – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the `fixedSizeChunkingConfiguration` .
        /// - `HIERARCHICAL` – Split documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.
        /// - `SEMANTIC` – Split documents into chunks based on groups of similar content derived with natural language processing.
        /// - `NONE` – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.
        /// </summary>
        public readonly Pulumi.AwsNative.Bedrock.DataSourceChunkingStrategy ChunkingStrategy;
        /// <summary>
        /// Configurations for when you choose fixed-size chunking. If you set the `chunkingStrategy` as `NONE` , exclude this field.
        /// </summary>
        public readonly Outputs.DataSourceFixedSizeChunkingConfiguration? FixedSizeChunkingConfiguration;

        [OutputConstructor]
        private DataSourceChunkingConfiguration(
            Pulumi.AwsNative.Bedrock.DataSourceChunkingStrategy chunkingStrategy,

            Outputs.DataSourceFixedSizeChunkingConfiguration? fixedSizeChunkingConfiguration)
        {
            ChunkingStrategy = chunkingStrategy;
            FixedSizeChunkingConfiguration = fixedSizeChunkingConfiguration;
        }
    }
}
