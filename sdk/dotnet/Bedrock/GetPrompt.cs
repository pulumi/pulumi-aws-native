// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Bedrock
{
    public static class GetPrompt
    {
        /// <summary>
        /// Definition of AWS::Bedrock::Prompt Resource Type
        /// </summary>
        public static Task<GetPromptResult> InvokeAsync(GetPromptArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPromptResult>("aws-native:bedrock:getPrompt", args ?? new GetPromptArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Bedrock::Prompt Resource Type
        /// </summary>
        public static Output<GetPromptResult> Invoke(GetPromptInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPromptResult>("aws-native:bedrock:getPrompt", args ?? new GetPromptInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Bedrock::Prompt Resource Type
        /// </summary>
        public static Output<GetPromptResult> Invoke(GetPromptInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPromptResult>("aws-native:bedrock:getPrompt", args ?? new GetPromptInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPromptArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of a prompt resource possibly with a version
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetPromptArgs()
        {
        }
        public static new GetPromptArgs Empty => new GetPromptArgs();
    }

    public sealed class GetPromptInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of a prompt resource possibly with a version
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetPromptInvokeArgs()
        {
        }
        public static new GetPromptInvokeArgs Empty => new GetPromptInvokeArgs();
    }


    [OutputType]
    public sealed class GetPromptResult
    {
        /// <summary>
        /// ARN of a prompt resource possibly with a version
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Time Stamp.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// A KMS key ARN
        /// </summary>
        public readonly string? CustomerEncryptionKeyArn;
        /// <summary>
        /// Name for a variant.
        /// </summary>
        public readonly string? DefaultVariant;
        /// <summary>
        /// Name for a prompt resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Identifier for a Prompt
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Name for a prompt resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
        /// 
        /// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
        /// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Time Stamp.
        /// </summary>
        public readonly string? UpdatedAt;
        /// <summary>
        /// List of prompt variants
        /// </summary>
        public readonly ImmutableArray<Outputs.PromptVariant> Variants;
        /// <summary>
        /// Draft Version.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetPromptResult(
            string? arn,

            string? createdAt,

            string? customerEncryptionKeyArn,

            string? defaultVariant,

            string? description,

            string? id,

            string? name,

            ImmutableDictionary<string, string>? tags,

            string? updatedAt,

            ImmutableArray<Outputs.PromptVariant> variants,

            string? version)
        {
            Arn = arn;
            CreatedAt = createdAt;
            CustomerEncryptionKeyArn = customerEncryptionKeyArn;
            DefaultVariant = defaultVariant;
            Description = description;
            Id = id;
            Name = name;
            Tags = tags;
            UpdatedAt = updatedAt;
            Variants = variants;
            Version = version;
        }
    }
}
