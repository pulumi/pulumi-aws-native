// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SsmQuickSetup
{
    public static class GetLifecycleAutomation
    {
        /// <summary>
        /// Resource Type definition for AWS::SSMQuickSetup::LifecycleAutomation that executes SSM Automation documents in response to CloudFormation lifecycle events.
        /// </summary>
        public static Task<GetLifecycleAutomationResult> InvokeAsync(GetLifecycleAutomationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLifecycleAutomationResult>("aws-native:ssmquicksetup:getLifecycleAutomation", args ?? new GetLifecycleAutomationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SSMQuickSetup::LifecycleAutomation that executes SSM Automation documents in response to CloudFormation lifecycle events.
        /// </summary>
        public static Output<GetLifecycleAutomationResult> Invoke(GetLifecycleAutomationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLifecycleAutomationResult>("aws-native:ssmquicksetup:getLifecycleAutomation", args ?? new GetLifecycleAutomationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SSMQuickSetup::LifecycleAutomation that executes SSM Automation documents in response to CloudFormation lifecycle events.
        /// </summary>
        public static Output<GetLifecycleAutomationResult> Invoke(GetLifecycleAutomationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLifecycleAutomationResult>("aws-native:ssmquicksetup:getLifecycleAutomation", args ?? new GetLifecycleAutomationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLifecycleAutomationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id from the association that is returned when creating the association
        /// </summary>
        [Input("associationId", required: true)]
        public string AssociationId { get; set; } = null!;

        public GetLifecycleAutomationArgs()
        {
        }
        public static new GetLifecycleAutomationArgs Empty => new GetLifecycleAutomationArgs();
    }

    public sealed class GetLifecycleAutomationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id from the association that is returned when creating the association
        /// </summary>
        [Input("associationId", required: true)]
        public Input<string> AssociationId { get; set; } = null!;

        public GetLifecycleAutomationInvokeArgs()
        {
        }
        public static new GetLifecycleAutomationInvokeArgs Empty => new GetLifecycleAutomationInvokeArgs();
    }


    [OutputType]
    public sealed class GetLifecycleAutomationResult
    {
        /// <summary>
        /// The id from the association that is returned when creating the association
        /// </summary>
        public readonly string? AssociationId;
        /// <summary>
        /// The name of the Automation document to execute
        /// </summary>
        public readonly string? AutomationDocument;
        public readonly ImmutableDictionary<string, object>? AutomationParameters;
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetLifecycleAutomationResult(
            string? associationId,

            string? automationDocument,

            ImmutableDictionary<string, object>? automationParameters,

            ImmutableDictionary<string, string>? tags)
        {
            AssociationId = associationId;
            AutomationDocument = automationDocument;
            AutomationParameters = automationParameters;
            Tags = tags;
        }
    }
}
