// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SsmQuickSetup
{
    /// <summary>
    /// Resource Type definition for AWS::SSMQuickSetup::LifecycleAutomation that executes SSM Automation documents in response to CloudFormation lifecycle events.
    /// </summary>
    [AwsNativeResourceType("aws-native:ssmquicksetup:LifecycleAutomation")]
    public partial class LifecycleAutomation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The id from the association that is returned when creating the association
        /// </summary>
        [Output("associationId")]
        public Output<string> AssociationId { get; private set; } = null!;

        /// <summary>
        /// The name of the Automation document to execute
        /// </summary>
        [Output("automationDocument")]
        public Output<string> AutomationDocument { get; private set; } = null!;

        [Output("automationParameters")]
        public Output<ImmutableDictionary<string, object>> AutomationParameters { get; private set; } = null!;

        /// <summary>
        /// A unique identifier used for generating a unique logical ID for the custom resource
        /// </summary>
        [Output("resourceKey")]
        public Output<string> ResourceKey { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a LifecycleAutomation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LifecycleAutomation(string name, LifecycleAutomationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ssmquicksetup:LifecycleAutomation", name, args ?? new LifecycleAutomationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LifecycleAutomation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ssmquicksetup:LifecycleAutomation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "resourceKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LifecycleAutomation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LifecycleAutomation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LifecycleAutomation(name, id, options);
        }
    }

    public sealed class LifecycleAutomationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Automation document to execute
        /// </summary>
        [Input("automationDocument", required: true)]
        public Input<string> AutomationDocument { get; set; } = null!;

        [Input("automationParameters", required: true)]
        private InputMap<object>? _automationParameters;
        public InputMap<object> AutomationParameters
        {
            get => _automationParameters ?? (_automationParameters = new InputMap<object>());
            set => _automationParameters = value;
        }

        /// <summary>
        /// A unique identifier used for generating a unique logical ID for the custom resource
        /// </summary>
        [Input("resourceKey", required: true)]
        public Input<string> ResourceKey { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LifecycleAutomationArgs()
        {
        }
        public static new LifecycleAutomationArgs Empty => new LifecycleAutomationArgs();
    }
}
