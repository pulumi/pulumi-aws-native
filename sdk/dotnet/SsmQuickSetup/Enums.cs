// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.SsmQuickSetup
{
    [EnumType]
    public readonly struct ConfigurationManagerStatus : IEquatable<ConfigurationManagerStatus>
    {
        private readonly string _value;

        private ConfigurationManagerStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ConfigurationManagerStatus Initializing { get; } = new ConfigurationManagerStatus("INITIALIZING");
        public static ConfigurationManagerStatus Deploying { get; } = new ConfigurationManagerStatus("DEPLOYING");
        public static ConfigurationManagerStatus Succeeded { get; } = new ConfigurationManagerStatus("SUCCEEDED");
        public static ConfigurationManagerStatus Deleting { get; } = new ConfigurationManagerStatus("DELETING");
        public static ConfigurationManagerStatus Stopping { get; } = new ConfigurationManagerStatus("STOPPING");
        public static ConfigurationManagerStatus Failed { get; } = new ConfigurationManagerStatus("FAILED");
        public static ConfigurationManagerStatus Stopped { get; } = new ConfigurationManagerStatus("STOPPED");
        public static ConfigurationManagerStatus DeleteFailed { get; } = new ConfigurationManagerStatus("DELETE_FAILED");
        public static ConfigurationManagerStatus StopFailed { get; } = new ConfigurationManagerStatus("STOP_FAILED");
        public static ConfigurationManagerStatus None { get; } = new ConfigurationManagerStatus("NONE");

        public static bool operator ==(ConfigurationManagerStatus left, ConfigurationManagerStatus right) => left.Equals(right);
        public static bool operator !=(ConfigurationManagerStatus left, ConfigurationManagerStatus right) => !left.Equals(right);

        public static explicit operator string(ConfigurationManagerStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ConfigurationManagerStatus other && Equals(other);
        public bool Equals(ConfigurationManagerStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ConfigurationManagerStatusType : IEquatable<ConfigurationManagerStatusType>
    {
        private readonly string _value;

        private ConfigurationManagerStatusType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ConfigurationManagerStatusType Deployment { get; } = new ConfigurationManagerStatusType("Deployment");
        public static ConfigurationManagerStatusType AsyncExecutions { get; } = new ConfigurationManagerStatusType("AsyncExecutions");

        public static bool operator ==(ConfigurationManagerStatusType left, ConfigurationManagerStatusType right) => left.Equals(right);
        public static bool operator !=(ConfigurationManagerStatusType left, ConfigurationManagerStatusType right) => !left.Equals(right);

        public static explicit operator string(ConfigurationManagerStatusType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ConfigurationManagerStatusType other && Equals(other);
        public bool Equals(ConfigurationManagerStatusType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
