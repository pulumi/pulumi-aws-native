// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SsmQuickSetup
{
    public static class GetConfigurationManager
    {
        /// <summary>
        /// Definition of AWS::SSMQuickSetup::ConfigurationManager Resource Type
        /// </summary>
        public static Task<GetConfigurationManagerResult> InvokeAsync(GetConfigurationManagerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationManagerResult>("aws-native:ssmquicksetup:getConfigurationManager", args ?? new GetConfigurationManagerArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::SSMQuickSetup::ConfigurationManager Resource Type
        /// </summary>
        public static Output<GetConfigurationManagerResult> Invoke(GetConfigurationManagerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationManagerResult>("aws-native:ssmquicksetup:getConfigurationManager", args ?? new GetConfigurationManagerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationManagerArgs : global::Pulumi.InvokeArgs
    {
        [Input("managerArn", required: true)]
        public string ManagerArn { get; set; } = null!;

        public GetConfigurationManagerArgs()
        {
        }
        public static new GetConfigurationManagerArgs Empty => new GetConfigurationManagerArgs();
    }

    public sealed class GetConfigurationManagerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("managerArn", required: true)]
        public Input<string> ManagerArn { get; set; } = null!;

        public GetConfigurationManagerInvokeArgs()
        {
        }
        public static new GetConfigurationManagerInvokeArgs Empty => new GetConfigurationManagerInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigurationManagerResult
    {
        public readonly ImmutableArray<Outputs.ConfigurationManagerConfigurationDefinition> ConfigurationDefinitions;
        public readonly string? CreatedAt;
        public readonly string? Description;
        public readonly string? LastModifiedAt;
        public readonly string? ManagerArn;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.ConfigurationManagerStatusSummary> StatusSummaries;
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetConfigurationManagerResult(
            ImmutableArray<Outputs.ConfigurationManagerConfigurationDefinition> configurationDefinitions,

            string? createdAt,

            string? description,

            string? lastModifiedAt,

            string? managerArn,

            string? name,

            ImmutableArray<Outputs.ConfigurationManagerStatusSummary> statusSummaries,

            ImmutableDictionary<string, string>? tags)
        {
            ConfigurationDefinitions = configurationDefinitions;
            CreatedAt = createdAt;
            Description = description;
            LastModifiedAt = lastModifiedAt;
            ManagerArn = managerArn;
            Name = name;
            StatusSummaries = statusSummaries;
            Tags = tags;
        }
    }
}
