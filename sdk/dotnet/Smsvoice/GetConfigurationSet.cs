// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Smsvoice
{
    public static class GetConfigurationSet
    {
        /// <summary>
        /// Resource Type definition for AWS::SMSVOICE::ConfigurationSet
        /// </summary>
        public static Task<GetConfigurationSetResult> InvokeAsync(GetConfigurationSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationSetResult>("aws-native:smsvoice:getConfigurationSet", args ?? new GetConfigurationSetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SMSVOICE::ConfigurationSet
        /// </summary>
        public static Output<GetConfigurationSetResult> Invoke(GetConfigurationSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationSetResult>("aws-native:smsvoice:getConfigurationSet", args ?? new GetConfigurationSetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SMSVOICE::ConfigurationSet
        /// </summary>
        public static Output<GetConfigurationSetResult> Invoke(GetConfigurationSetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationSetResult>("aws-native:smsvoice:getConfigurationSet", args ?? new GetConfigurationSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name to use for the configuration set.
        /// </summary>
        [Input("configurationSetName", required: true)]
        public string ConfigurationSetName { get; set; } = null!;

        public GetConfigurationSetArgs()
        {
        }
        public static new GetConfigurationSetArgs Empty => new GetConfigurationSetArgs();
    }

    public sealed class GetConfigurationSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name to use for the configuration set.
        /// </summary>
        [Input("configurationSetName", required: true)]
        public Input<string> ConfigurationSetName { get; set; } = null!;

        public GetConfigurationSetInvokeArgs()
        {
        }
        public static new GetConfigurationSetInvokeArgs Empty => new GetConfigurationSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigurationSetResult
    {
        public readonly string? Arn;
        /// <summary>
        /// The default sender ID to set for the ConfigurationSet.
        /// </summary>
        public readonly string? DefaultSenderId;
        /// <summary>
        /// An event destination is a location where you send message events.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConfigurationSetEventDestination> EventDestinations;
        /// <summary>
        /// Set to true to enable message feedback.
        /// </summary>
        public readonly bool? MessageFeedbackEnabled;
        /// <summary>
        /// The unique identifier for the protect configuration to be associated to the configuration set.
        /// </summary>
        public readonly string? ProtectConfigurationId;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetConfigurationSetResult(
            string? arn,

            string? defaultSenderId,

            ImmutableArray<Outputs.ConfigurationSetEventDestination> eventDestinations,

            bool? messageFeedbackEnabled,

            string? protectConfigurationId,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            DefaultSenderId = defaultSenderId;
            EventDestinations = eventDestinations;
            MessageFeedbackEnabled = messageFeedbackEnabled;
            ProtectConfigurationId = protectConfigurationId;
            Tags = tags;
        }
    }
}
