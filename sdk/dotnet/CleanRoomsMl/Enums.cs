// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.CleanRoomsMl
{
    [EnumType]
    public readonly struct TrainingDatasetColumnType : IEquatable<TrainingDatasetColumnType>
    {
        private readonly string _value;

        private TrainingDatasetColumnType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TrainingDatasetColumnType UserId { get; } = new TrainingDatasetColumnType("USER_ID");
        public static TrainingDatasetColumnType ItemId { get; } = new TrainingDatasetColumnType("ITEM_ID");
        public static TrainingDatasetColumnType Timestamp { get; } = new TrainingDatasetColumnType("TIMESTAMP");
        public static TrainingDatasetColumnType CategoricalFeature { get; } = new TrainingDatasetColumnType("CATEGORICAL_FEATURE");
        public static TrainingDatasetColumnType NumericalFeature { get; } = new TrainingDatasetColumnType("NUMERICAL_FEATURE");

        public static bool operator ==(TrainingDatasetColumnType left, TrainingDatasetColumnType right) => left.Equals(right);
        public static bool operator !=(TrainingDatasetColumnType left, TrainingDatasetColumnType right) => !left.Equals(right);

        public static explicit operator string(TrainingDatasetColumnType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TrainingDatasetColumnType other && Equals(other);
        public bool Equals(TrainingDatasetColumnType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct TrainingDatasetDatasetType : IEquatable<TrainingDatasetDatasetType>
    {
        private readonly string _value;

        private TrainingDatasetDatasetType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TrainingDatasetDatasetType Interactions { get; } = new TrainingDatasetDatasetType("INTERACTIONS");

        public static bool operator ==(TrainingDatasetDatasetType left, TrainingDatasetDatasetType right) => left.Equals(right);
        public static bool operator !=(TrainingDatasetDatasetType left, TrainingDatasetDatasetType right) => !left.Equals(right);

        public static explicit operator string(TrainingDatasetDatasetType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TrainingDatasetDatasetType other && Equals(other);
        public bool Equals(TrainingDatasetDatasetType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct TrainingDatasetStatus : IEquatable<TrainingDatasetStatus>
    {
        private readonly string _value;

        private TrainingDatasetStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TrainingDatasetStatus Active { get; } = new TrainingDatasetStatus("ACTIVE");

        public static bool operator ==(TrainingDatasetStatus left, TrainingDatasetStatus right) => left.Equals(right);
        public static bool operator !=(TrainingDatasetStatus left, TrainingDatasetStatus right) => !left.Equals(right);

        public static explicit operator string(TrainingDatasetStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TrainingDatasetStatus other && Equals(other);
        public bool Equals(TrainingDatasetStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
