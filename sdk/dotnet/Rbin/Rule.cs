// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Rbin
{
    /// <summary>
    /// Resource Type definition for AWS::Rbin::Rule
    /// </summary>
    [AwsNativeResourceType("aws-native:rbin:Rule")]
    public partial class Rule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Rule Arn is unique for each rule.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The description of the retention rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Information about the exclude resource tags used to identify resources that are excluded by the retention rule.
        /// </summary>
        [Output("excludeResourceTags")]
        public Output<ImmutableArray<Outputs.RuleResourceTag>> ExcludeResourceTags { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the retention rule.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// Information about the retention rule lock configuration.
        /// </summary>
        [Output("lockConfiguration")]
        public Output<Outputs.RuleUnlockDelay?> LockConfiguration { get; private set; } = null!;

        /// <summary>
        /// The lock state for the retention rule.
        /// </summary>
        [Output("lockState")]
        public Output<string> LockState { get; private set; } = null!;

        /// <summary>
        /// Information about the resource tags used to identify resources that are retained by the retention rule.
        /// </summary>
        [Output("resourceTags")]
        public Output<ImmutableArray<Outputs.RuleResourceTag>> ResourceTags { get; private set; } = null!;

        /// <summary>
        /// The resource type retained by the retention rule.
        /// </summary>
        [Output("resourceType")]
        public Output<Pulumi.AwsNative.Rbin.RuleResourceType> ResourceType { get; private set; } = null!;

        /// <summary>
        /// Information about the retention period for which the retention rule is to retain resources.
        /// </summary>
        [Output("retentionPeriod")]
        public Output<Outputs.RuleRetentionPeriod> RetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// The state of the retention rule. Only retention rules that are in the available state retain resources.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// Information about the tags assigned to the retention rule.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Rule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Rule(string name, RuleArgs args, CustomResourceOptions? options = null)
            : base("aws-native:rbin:Rule", name, args ?? new RuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Rule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:rbin:Rule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "resourceType",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Rule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Rule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Rule(name, id, options);
        }
    }

    public sealed class RuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the retention rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("excludeResourceTags")]
        private InputList<Inputs.RuleResourceTagArgs>? _excludeResourceTags;

        /// <summary>
        /// Information about the exclude resource tags used to identify resources that are excluded by the retention rule.
        /// </summary>
        public InputList<Inputs.RuleResourceTagArgs> ExcludeResourceTags
        {
            get => _excludeResourceTags ?? (_excludeResourceTags = new InputList<Inputs.RuleResourceTagArgs>());
            set => _excludeResourceTags = value;
        }

        /// <summary>
        /// Information about the retention rule lock configuration.
        /// </summary>
        [Input("lockConfiguration")]
        public Input<Inputs.RuleUnlockDelayArgs>? LockConfiguration { get; set; }

        [Input("resourceTags")]
        private InputList<Inputs.RuleResourceTagArgs>? _resourceTags;

        /// <summary>
        /// Information about the resource tags used to identify resources that are retained by the retention rule.
        /// </summary>
        public InputList<Inputs.RuleResourceTagArgs> ResourceTags
        {
            get => _resourceTags ?? (_resourceTags = new InputList<Inputs.RuleResourceTagArgs>());
            set => _resourceTags = value;
        }

        /// <summary>
        /// The resource type retained by the retention rule.
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<Pulumi.AwsNative.Rbin.RuleResourceType> ResourceType { get; set; } = null!;

        /// <summary>
        /// Information about the retention period for which the retention rule is to retain resources.
        /// </summary>
        [Input("retentionPeriod", required: true)]
        public Input<Inputs.RuleRetentionPeriodArgs> RetentionPeriod { get; set; } = null!;

        /// <summary>
        /// The state of the retention rule. Only retention rules that are in the available state retain resources.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Information about the tags assigned to the retention rule.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public RuleArgs()
        {
        }
        public static new RuleArgs Empty => new RuleArgs();
    }
}
