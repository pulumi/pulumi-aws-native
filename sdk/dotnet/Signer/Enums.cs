// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.Signer
{
    [EnumType]
    public readonly struct SigningProfilePlatformId : IEquatable<SigningProfilePlatformId>
    {
        private readonly string _value;

        private SigningProfilePlatformId(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static SigningProfilePlatformId AWSLambdaSHA384ECDSA { get; } = new SigningProfilePlatformId("AWSLambda-SHA384-ECDSA");

        public static bool operator ==(SigningProfilePlatformId left, SigningProfilePlatformId right) => left.Equals(right);
        public static bool operator !=(SigningProfilePlatformId left, SigningProfilePlatformId right) => !left.Equals(right);

        public static explicit operator string(SigningProfilePlatformId value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SigningProfilePlatformId other && Equals(other);
        public bool Equals(SigningProfilePlatformId other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct SigningProfileSignatureValidityPeriodType : IEquatable<SigningProfileSignatureValidityPeriodType>
    {
        private readonly string _value;

        private SigningProfileSignatureValidityPeriodType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static SigningProfileSignatureValidityPeriodType Days { get; } = new SigningProfileSignatureValidityPeriodType("DAYS");
        public static SigningProfileSignatureValidityPeriodType Months { get; } = new SigningProfileSignatureValidityPeriodType("MONTHS");
        public static SigningProfileSignatureValidityPeriodType Years { get; } = new SigningProfileSignatureValidityPeriodType("YEARS");

        public static bool operator ==(SigningProfileSignatureValidityPeriodType left, SigningProfileSignatureValidityPeriodType right) => left.Equals(right);
        public static bool operator !=(SigningProfileSignatureValidityPeriodType left, SigningProfileSignatureValidityPeriodType right) => !left.Equals(right);

        public static explicit operator string(SigningProfileSignatureValidityPeriodType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SigningProfileSignatureValidityPeriodType other && Equals(other);
        public bool Equals(SigningProfileSignatureValidityPeriodType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
