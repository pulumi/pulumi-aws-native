// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MemoryDb
{
    public static class GetMultiRegionCluster
    {
        /// <summary>
        /// The AWS::MemoryDB::Multi Region Cluster resource creates an Amazon MemoryDB Multi Region Cluster.
        /// </summary>
        public static Task<GetMultiRegionClusterResult> InvokeAsync(GetMultiRegionClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMultiRegionClusterResult>("aws-native:memorydb:getMultiRegionCluster", args ?? new GetMultiRegionClusterArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::MemoryDB::Multi Region Cluster resource creates an Amazon MemoryDB Multi Region Cluster.
        /// </summary>
        public static Output<GetMultiRegionClusterResult> Invoke(GetMultiRegionClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMultiRegionClusterResult>("aws-native:memorydb:getMultiRegionCluster", args ?? new GetMultiRegionClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::MemoryDB::Multi Region Cluster resource creates an Amazon MemoryDB Multi Region Cluster.
        /// </summary>
        public static Output<GetMultiRegionClusterResult> Invoke(GetMultiRegionClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMultiRegionClusterResult>("aws-native:memorydb:getMultiRegionCluster", args ?? new GetMultiRegionClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMultiRegionClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Global Datastore, it is generated by MemoryDB adding a prefix to MultiRegionClusterNameSuffix.
        /// </summary>
        [Input("multiRegionClusterName", required: true)]
        public string MultiRegionClusterName { get; set; } = null!;

        public GetMultiRegionClusterArgs()
        {
        }
        public static new GetMultiRegionClusterArgs Empty => new GetMultiRegionClusterArgs();
    }

    public sealed class GetMultiRegionClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Global Datastore, it is generated by MemoryDB adding a prefix to MultiRegionClusterNameSuffix.
        /// </summary>
        [Input("multiRegionClusterName", required: true)]
        public Input<string> MultiRegionClusterName { get; set; } = null!;

        public GetMultiRegionClusterInvokeArgs()
        {
        }
        public static new GetMultiRegionClusterInvokeArgs Empty => new GetMultiRegionClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetMultiRegionClusterResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the multi region cluster.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Description of the multi region cluster.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The engine type used by the multi region cluster.
        /// </summary>
        public readonly string? Engine;
        /// <summary>
        /// The name of the Global Datastore, it is generated by MemoryDB adding a prefix to MultiRegionClusterNameSuffix.
        /// </summary>
        public readonly string? MultiRegionClusterName;
        /// <summary>
        /// The compute and memory capacity of the nodes in the multi region cluster.
        /// </summary>
        public readonly string? NodeType;
        /// <summary>
        /// The number of shards the multi region cluster will contain.
        /// </summary>
        public readonly int? NumShards;
        /// <summary>
        /// The status of the multi region cluster. For example, Available, Updating, Creating.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// An array of key-value pairs to apply to this multi region cluster.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetMultiRegionClusterResult(
            string? arn,

            string? description,

            string? engine,

            string? multiRegionClusterName,

            string? nodeType,

            int? numShards,

            string? status,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            Description = description;
            Engine = engine;
            MultiRegionClusterName = multiRegionClusterName;
            NodeType = nodeType;
            NumShards = numShards;
            Status = status;
            Tags = tags;
        }
    }
}
