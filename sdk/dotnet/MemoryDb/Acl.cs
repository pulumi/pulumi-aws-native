// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MemoryDb
{
    /// <summary>
    /// Resource Type definition for AWS::MemoryDB::ACL
    /// </summary>
    [AwsNativeResourceType("aws-native:memorydb:Acl")]
    public partial class Acl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the acl.
        /// </summary>
        [Output("aclName")]
        public Output<string> AclName { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the acl.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Indicates acl status. Can be "creating", "active", "modifying", "deleting".
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.AclTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// List of users associated to this acl.
        /// </summary>
        [Output("userNames")]
        public Output<ImmutableArray<string>> UserNames { get; private set; } = null!;


        /// <summary>
        /// Create a Acl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Acl(string name, AclArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:memorydb:Acl", name, args ?? new AclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Acl(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:memorydb:Acl", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Acl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Acl Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Acl(name, id, options);
        }
    }

    public sealed class AclArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the acl.
        /// </summary>
        [Input("aclName")]
        public Input<string>? AclName { get; set; }

        [Input("tags")]
        private InputList<Inputs.AclTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this cluster.
        /// </summary>
        public InputList<Inputs.AclTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.AclTagArgs>());
            set => _tags = value;
        }

        [Input("userNames")]
        private InputList<string>? _userNames;

        /// <summary>
        /// List of users associated to this acl.
        /// </summary>
        public InputList<string> UserNames
        {
            get => _userNames ?? (_userNames = new InputList<string>());
            set => _userNames = value;
        }

        public AclArgs()
        {
        }
        public static new AclArgs Empty => new AclArgs();
    }
}
