// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GuardDuty
{
    public static class GetFilter
    {
        /// <summary>
        /// Resource Type definition for AWS::GuardDuty::Filter
        /// </summary>
        public static Task<GetFilterResult> InvokeAsync(GetFilterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFilterResult>("aws-native:guardduty:getFilter", args ?? new GetFilterArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::GuardDuty::Filter
        /// </summary>
        public static Output<GetFilterResult> Invoke(GetFilterInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFilterResult>("aws-native:guardduty:getFilter", args ?? new GetFilterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFilterArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetFilterArgs()
        {
        }
        public static new GetFilterArgs Empty => new GetFilterArgs();
    }

    public sealed class GetFilterInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetFilterInvokeArgs()
        {
        }
        public static new GetFilterInvokeArgs Empty => new GetFilterInvokeArgs();
    }


    [OutputType]
    public sealed class GetFilterResult
    {
        public readonly string? Action;
        public readonly string? Description;
        public readonly Outputs.FilterFindingCriteria? FindingCriteria;
        public readonly string? Id;
        public readonly int? Rank;

        [OutputConstructor]
        private GetFilterResult(
            string? action,

            string? description,

            Outputs.FilterFindingCriteria? findingCriteria,

            string? id,

            int? rank)
        {
            Action = action;
            Description = description;
            FindingCriteria = findingCriteria;
            Id = id;
            Rank = rank;
        }
    }
}
