// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GuardDuty
{
    /// <summary>
    /// Resource Type definition for AWS::GuardDuty::PublishingDestination.
    /// </summary>
    [AwsNativeResourceType("aws-native:guardduty:PublishingDestination")]
    public partial class PublishingDestination : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the publishing destination.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings.
        /// </summary>
        [Output("destinationProperties")]
        public Output<Outputs.PublishingDestinationCfnDestinationProperties> DestinationProperties { get; private set; } = null!;

        /// <summary>
        /// The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported.
        /// </summary>
        [Output("destinationType")]
        public Output<string> DestinationType { get; private set; } = null!;

        /// <summary>
        /// The ID of the GuardDuty detector associated with the publishing destination.
        /// </summary>
        [Output("detectorId")]
        public Output<string> DetectorId { get; private set; } = null!;

        /// <summary>
        /// The time, in epoch millisecond format, at which GuardDuty was first unable to publish findings to the destination.
        /// </summary>
        [Output("publishingFailureStartTimestamp")]
        public Output<string> PublishingFailureStartTimestamp { get; private set; } = null!;

        /// <summary>
        /// The status of the publishing destination.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Describes a tag.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a PublishingDestination resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PublishingDestination(string name, PublishingDestinationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:guardduty:PublishingDestination", name, args ?? new PublishingDestinationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PublishingDestination(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:guardduty:PublishingDestination", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "detectorId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PublishingDestination resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PublishingDestination Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PublishingDestination(name, id, options);
        }
    }

    public sealed class PublishingDestinationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings.
        /// </summary>
        [Input("destinationProperties", required: true)]
        public Input<Inputs.PublishingDestinationCfnDestinationPropertiesArgs> DestinationProperties { get; set; } = null!;

        /// <summary>
        /// The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported.
        /// </summary>
        [Input("destinationType", required: true)]
        public Input<string> DestinationType { get; set; } = null!;

        /// <summary>
        /// The ID of the GuardDuty detector associated with the publishing destination.
        /// </summary>
        [Input("detectorId", required: true)]
        public Input<string> DetectorId { get; set; } = null!;

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Describes a tag.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public PublishingDestinationArgs()
        {
        }
        public static new PublishingDestinationArgs Empty => new PublishingDestinationArgs();
    }
}
