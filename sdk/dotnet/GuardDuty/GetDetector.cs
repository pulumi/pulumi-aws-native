// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GuardDuty
{
    public static class GetDetector
    {
        /// <summary>
        /// Resource Type definition for AWS::GuardDuty::Detector
        /// </summary>
        public static Task<GetDetectorResult> InvokeAsync(GetDetectorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDetectorResult>("aws-native:guardduty:getDetector", args ?? new GetDetectorArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::GuardDuty::Detector
        /// </summary>
        public static Output<GetDetectorResult> Invoke(GetDetectorInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDetectorResult>("aws-native:guardduty:getDetector", args ?? new GetDetectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDetectorArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDetectorArgs()
        {
        }
    }

    public sealed class GetDetectorInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDetectorInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDetectorResult
    {
        public readonly Outputs.DetectorCFNDataSourceConfigurations? DataSources;
        public readonly bool? Enable;
        public readonly string? FindingPublishingFrequency;
        public readonly string? Id;

        [OutputConstructor]
        private GetDetectorResult(
            Outputs.DetectorCFNDataSourceConfigurations? dataSources,

            bool? enable,

            string? findingPublishingFrequency,

            string? id)
        {
            DataSources = dataSources;
            Enable = enable;
            FindingPublishingFrequency = findingPublishingFrequency;
            Id = id;
        }
    }
}
