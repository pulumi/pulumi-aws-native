// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GuardDuty
{
    public static class GetThreatIntelSet
    {
        /// <summary>
        /// Resource Type definition for AWS::GuardDuty::ThreatIntelSet
        /// </summary>
        public static Task<GetThreatIntelSetResult> InvokeAsync(GetThreatIntelSetArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetThreatIntelSetResult>("aws-native:guardduty:getThreatIntelSet", args ?? new GetThreatIntelSetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::GuardDuty::ThreatIntelSet
        /// </summary>
        public static Output<GetThreatIntelSetResult> Invoke(GetThreatIntelSetInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetThreatIntelSetResult>("aws-native:guardduty:getThreatIntelSet", args ?? new GetThreatIntelSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetThreatIntelSetArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        public GetThreatIntelSetArgs()
        {
        }
    }

    public sealed class GetThreatIntelSetInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetThreatIntelSetInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetThreatIntelSetResult
    {
        public readonly bool? Activate;
        public readonly string? Id;
        public readonly string? Location;
        public readonly string? Name;

        [OutputConstructor]
        private GetThreatIntelSetResult(
            bool? activate,

            string? id,

            string? location,

            string? name)
        {
            Activate = activate;
            Id = id;
            Location = location;
            Name = name;
        }
    }
}
