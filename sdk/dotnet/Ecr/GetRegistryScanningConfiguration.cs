// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ecr
{
    public static class GetRegistryScanningConfiguration
    {
        /// <summary>
        /// The scanning configuration for a private registry.
        /// </summary>
        public static Task<GetRegistryScanningConfigurationResult> InvokeAsync(GetRegistryScanningConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegistryScanningConfigurationResult>("aws-native:ecr:getRegistryScanningConfiguration", args ?? new GetRegistryScanningConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// The scanning configuration for a private registry.
        /// </summary>
        public static Output<GetRegistryScanningConfigurationResult> Invoke(GetRegistryScanningConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegistryScanningConfigurationResult>("aws-native:ecr:getRegistryScanningConfiguration", args ?? new GetRegistryScanningConfigurationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The scanning configuration for a private registry.
        /// </summary>
        public static Output<GetRegistryScanningConfigurationResult> Invoke(GetRegistryScanningConfigurationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegistryScanningConfigurationResult>("aws-native:ecr:getRegistryScanningConfiguration", args ?? new GetRegistryScanningConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegistryScanningConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account ID of the destination registry.
        /// </summary>
        [Input("registryId", required: true)]
        public string RegistryId { get; set; } = null!;

        public GetRegistryScanningConfigurationArgs()
        {
        }
        public static new GetRegistryScanningConfigurationArgs Empty => new GetRegistryScanningConfigurationArgs();
    }

    public sealed class GetRegistryScanningConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account ID of the destination registry.
        /// </summary>
        [Input("registryId", required: true)]
        public Input<string> RegistryId { get; set; } = null!;

        public GetRegistryScanningConfigurationInvokeArgs()
        {
        }
        public static new GetRegistryScanningConfigurationInvokeArgs Empty => new GetRegistryScanningConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegistryScanningConfigurationResult
    {
        /// <summary>
        /// The account ID of the destination registry.
        /// </summary>
        public readonly string? RegistryId;
        /// <summary>
        /// The scanning rules associated with the registry.
        /// </summary>
        public readonly ImmutableArray<Outputs.RegistryScanningConfigurationScanningRule> Rules;
        /// <summary>
        /// The type of scanning configured for the registry.
        /// </summary>
        public readonly Pulumi.AwsNative.Ecr.RegistryScanningConfigurationScanType? ScanType;

        [OutputConstructor]
        private GetRegistryScanningConfigurationResult(
            string? registryId,

            ImmutableArray<Outputs.RegistryScanningConfigurationScanningRule> rules,

            Pulumi.AwsNative.Ecr.RegistryScanningConfigurationScanType? scanType)
        {
            RegistryId = registryId;
            Rules = rules;
            ScanType = scanType;
        }
    }
}
