// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53RecoveryReadiness
{
    /// <summary>
    /// Schema for the AWS Route53 Recovery Readiness ResourceSet Resource and API.
    /// </summary>
    [AwsNativeResourceType("aws-native:route53recoveryreadiness:ResourceSet")]
    public partial class ResourceSet : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the resource set.
        /// </summary>
        [Output("resourceSetArn")]
        public Output<string> ResourceSetArn { get; private set; } = null!;

        /// <summary>
        /// The name of the resource set to create.
        /// </summary>
        [Output("resourceSetName")]
        public Output<string> ResourceSetName { get; private set; } = null!;

        /// <summary>
        /// The resource type of the resources in the resource set. Enter one of the following values for resource type: 
        /// 
        /// AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
        /// </summary>
        [Output("resourceSetType")]
        public Output<string> ResourceSetType { get; private set; } = null!;

        /// <summary>
        /// A list of resource objects in the resource set.
        /// </summary>
        [Output("resources")]
        public Output<ImmutableArray<Outputs.ResourceSetResource>> Resources { get; private set; } = null!;

        /// <summary>
        /// A tag to associate with the parameters for a resource set.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.ResourceSetTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a ResourceSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourceSet(string name, ResourceSetArgs args, CustomResourceOptions? options = null)
            : base("aws-native:route53recoveryreadiness:ResourceSet", name, args ?? new ResourceSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResourceSet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:route53recoveryreadiness:ResourceSet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourceSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourceSet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ResourceSet(name, id, options);
        }
    }

    public sealed class ResourceSetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the resource set to create.
        /// </summary>
        [Input("resourceSetName", required: true)]
        public Input<string> ResourceSetName { get; set; } = null!;

        /// <summary>
        /// The resource type of the resources in the resource set. Enter one of the following values for resource type: 
        /// 
        /// AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
        /// </summary>
        [Input("resourceSetType", required: true)]
        public Input<string> ResourceSetType { get; set; } = null!;

        [Input("resources", required: true)]
        private InputList<Inputs.ResourceSetResourceArgs>? _resources;

        /// <summary>
        /// A list of resource objects in the resource set.
        /// </summary>
        public InputList<Inputs.ResourceSetResourceArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.ResourceSetResourceArgs>());
            set => _resources = value;
        }

        [Input("tags")]
        private InputList<Inputs.ResourceSetTagArgs>? _tags;

        /// <summary>
        /// A tag to associate with the parameters for a resource set.
        /// </summary>
        public InputList<Inputs.ResourceSetTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ResourceSetTagArgs>());
            set => _tags = value;
        }

        public ResourceSetArgs()
        {
        }
    }
}
