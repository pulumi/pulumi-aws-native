// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Msk
{
    /// <summary>
    /// Resource Type definition for AWS::MSK::Replicator
    /// </summary>
    [AwsNativeResourceType("aws-native:msk:Replicator")]
    public partial class Replicator : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The current version of the MSK replicator.
        /// </summary>
        [Output("currentVersion")]
        public Output<string?> CurrentVersion { get; private set; } = null!;

        /// <summary>
        /// A summary description of the replicator.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of Kafka clusters which are targets of the replicator.
        /// </summary>
        [Output("kafkaClusters")]
        public Output<ImmutableArray<Outputs.ReplicatorKafkaCluster>> KafkaClusters { get; private set; } = null!;

        /// <summary>
        /// A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
        /// </summary>
        [Output("replicationInfoList")]
        public Output<ImmutableArray<Outputs.ReplicatorReplicationInfo>> ReplicationInfoList { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name for the created replicator.
        /// </summary>
        [Output("replicatorArn")]
        public Output<string> ReplicatorArn { get; private set; } = null!;

        /// <summary>
        /// The name of the replicator.
        /// </summary>
        [Output("replicatorName")]
        public Output<string> ReplicatorName { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role used by the replicator to access external resources.
        /// </summary>
        [Output("serviceExecutionRoleArn")]
        public Output<string> ServiceExecutionRoleArn { get; private set; } = null!;

        /// <summary>
        /// A collection of tags associated with a resource
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.ReplicatorTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Replicator resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Replicator(string name, ReplicatorArgs args, CustomResourceOptions? options = null)
            : base("aws-native:msk:Replicator", name, args ?? new ReplicatorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Replicator(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:msk:Replicator", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "description",
                    "kafkaClusters[*]",
                    "replicatorName",
                    "serviceExecutionRoleArn",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Replicator resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Replicator Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Replicator(name, id, options);
        }
    }

    public sealed class ReplicatorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The current version of the MSK replicator.
        /// </summary>
        [Input("currentVersion")]
        public Input<string>? CurrentVersion { get; set; }

        /// <summary>
        /// A summary description of the replicator.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("kafkaClusters", required: true)]
        private InputList<Inputs.ReplicatorKafkaClusterArgs>? _kafkaClusters;

        /// <summary>
        /// Specifies a list of Kafka clusters which are targets of the replicator.
        /// </summary>
        public InputList<Inputs.ReplicatorKafkaClusterArgs> KafkaClusters
        {
            get => _kafkaClusters ?? (_kafkaClusters = new InputList<Inputs.ReplicatorKafkaClusterArgs>());
            set => _kafkaClusters = value;
        }

        [Input("replicationInfoList", required: true)]
        private InputList<Inputs.ReplicatorReplicationInfoArgs>? _replicationInfoList;

        /// <summary>
        /// A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
        /// </summary>
        public InputList<Inputs.ReplicatorReplicationInfoArgs> ReplicationInfoList
        {
            get => _replicationInfoList ?? (_replicationInfoList = new InputList<Inputs.ReplicatorReplicationInfoArgs>());
            set => _replicationInfoList = value;
        }

        /// <summary>
        /// The name of the replicator.
        /// </summary>
        [Input("replicatorName")]
        public Input<string>? ReplicatorName { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role used by the replicator to access external resources.
        /// </summary>
        [Input("serviceExecutionRoleArn", required: true)]
        public Input<string> ServiceExecutionRoleArn { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.ReplicatorTagArgs>? _tags;

        /// <summary>
        /// A collection of tags associated with a resource
        /// </summary>
        public InputList<Inputs.ReplicatorTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ReplicatorTagArgs>());
            set => _tags = value;
        }

        public ReplicatorArgs()
        {
        }
        public static new ReplicatorArgs Empty => new ReplicatorArgs();
    }
}
