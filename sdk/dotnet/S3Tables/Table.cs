// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3Tables
{
    /// <summary>
    /// Resource Type definition for AWS::S3Tables::Table
    /// </summary>
    [AwsNativeResourceType("aws-native:s3tables:Table")]
    public partial class Table : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Contains details about the compaction settings for an Iceberg table.
        /// </summary>
        [Output("compaction")]
        public Output<Outputs.TableCompaction?> Compaction { get; private set; } = null!;

        /// <summary>
        /// Contains details about the metadata for an Iceberg table.
        /// </summary>
        [Output("icebergMetadata")]
        public Output<Outputs.TableIcebergMetadata?> IcebergMetadata { get; private set; } = null!;

        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// The format of the table.
        /// </summary>
        [Output("openTableFormat")]
        public Output<Pulumi.AwsNative.S3Tables.TableOpenTableFormat> OpenTableFormat { get; private set; } = null!;

        /// <summary>
        /// Contains details about the Iceberg snapshot management settings for the table.
        /// </summary>
        [Output("snapshotManagement")]
        public Output<Outputs.TableSnapshotManagement?> SnapshotManagement { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the table.
        /// </summary>
        [Output("tableArn")]
        public Output<string> TableArn { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the table bucket to create the table in.
        /// </summary>
        [Output("tableBucketArn")]
        public Output<string> TableBucketArn { get; private set; } = null!;

        /// <summary>
        /// The name for the table.
        /// </summary>
        [Output("tableName")]
        public Output<string> TableName { get; private set; } = null!;

        /// <summary>
        /// The version token of the table.
        /// </summary>
        [Output("versionToken")]
        public Output<string> VersionToken { get; private set; } = null!;

        /// <summary>
        /// The warehouse location of the table.
        /// </summary>
        [Output("warehouseLocation")]
        public Output<string> WarehouseLocation { get; private set; } = null!;

        /// <summary>
        /// Indicates that you don't want to specify a schema for the table. This property is mutually exclusive to `IcebergMetadata` , and its only possible value is `Yes` .
        /// </summary>
        [Output("withoutMetadata")]
        public Output<Pulumi.AwsNative.S3Tables.TableWithoutMetadata?> WithoutMetadata { get; private set; } = null!;


        /// <summary>
        /// Create a Table resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Table(string name, TableArgs args, CustomResourceOptions? options = null)
            : base("aws-native:s3tables:Table", name, args ?? new TableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Table(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:s3tables:Table", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "icebergMetadata",
                    "openTableFormat",
                    "tableBucketArn",
                    "withoutMetadata",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Table resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Table Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Table(name, id, options);
        }
    }

    public sealed class TableArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contains details about the compaction settings for an Iceberg table.
        /// </summary>
        [Input("compaction")]
        public Input<Inputs.TableCompactionArgs>? Compaction { get; set; }

        /// <summary>
        /// Contains details about the metadata for an Iceberg table.
        /// </summary>
        [Input("icebergMetadata")]
        public Input<Inputs.TableIcebergMetadataArgs>? IcebergMetadata { get; set; }

        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// The format of the table.
        /// </summary>
        [Input("openTableFormat", required: true)]
        public Input<Pulumi.AwsNative.S3Tables.TableOpenTableFormat> OpenTableFormat { get; set; } = null!;

        /// <summary>
        /// Contains details about the Iceberg snapshot management settings for the table.
        /// </summary>
        [Input("snapshotManagement")]
        public Input<Inputs.TableSnapshotManagementArgs>? SnapshotManagement { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the table bucket to create the table in.
        /// </summary>
        [Input("tableBucketArn", required: true)]
        public Input<string> TableBucketArn { get; set; } = null!;

        /// <summary>
        /// The name for the table.
        /// </summary>
        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        /// <summary>
        /// Indicates that you don't want to specify a schema for the table. This property is mutually exclusive to `IcebergMetadata` , and its only possible value is `Yes` .
        /// </summary>
        [Input("withoutMetadata")]
        public Input<Pulumi.AwsNative.S3Tables.TableWithoutMetadata>? WithoutMetadata { get; set; }

        public TableArgs()
        {
        }
        public static new TableArgs Empty => new TableArgs();
    }
}
