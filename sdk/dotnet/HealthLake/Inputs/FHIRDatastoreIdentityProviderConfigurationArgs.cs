// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.HealthLake.Inputs
{

    /// <summary>
    /// The identity provider configuration for the datastore
    /// </summary>
    public sealed class FHIRDatastoreIdentityProviderConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Type of Authorization Strategy. The two types of supported Authorization strategies are SMART_ON_FHIR_V1 and AWS_AUTH.
        /// </summary>
        [Input("authorizationStrategy", required: true)]
        public Input<Pulumi.AwsNative.HealthLake.FHIRDatastoreIdentityProviderConfigurationAuthorizationStrategy> AuthorizationStrategy { get; set; } = null!;

        /// <summary>
        /// Flag to indicate if fine-grained authorization will be enabled for the datastore
        /// </summary>
        [Input("fineGrainedAuthorizationEnabled")]
        public Input<bool>? FineGrainedAuthorizationEnabled { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Lambda function that will be used to decode the access token created by the authorization server.
        /// </summary>
        [Input("idpLambdaArn")]
        public Input<string>? IdpLambdaArn { get; set; }

        /// <summary>
        /// The JSON metadata elements for identity provider configuration.
        /// </summary>
        [Input("metadata")]
        public Input<string>? Metadata { get; set; }

        public FHIRDatastoreIdentityProviderConfigurationArgs()
        {
        }
        public static new FHIRDatastoreIdentityProviderConfigurationArgs Empty => new FHIRDatastoreIdentityProviderConfigurationArgs();
    }
}
