// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.HealthLake
{
    /// <summary>
    /// HealthLake FHIR Datastore
    /// </summary>
    [AwsNativeResourceType("aws-native:healthlake:FhirDatastore")]
    public partial class FhirDatastore : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<Outputs.FhirDatastoreCreatedAt> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The Data Store ARN is generated during the creation of the Data Store and can be found in the output from the initial Data Store creation request.
        /// </summary>
        [Output("datastoreArn")]
        public Output<string> DatastoreArn { get; private set; } = null!;

        /// <summary>
        /// The endpoint for the created Data Store.
        /// </summary>
        [Output("datastoreEndpoint")]
        public Output<string> DatastoreEndpoint { get; private set; } = null!;

        /// <summary>
        /// The Amazon generated Data Store id. This id is in the output from the initial Data Store creation call.
        /// </summary>
        [Output("datastoreId")]
        public Output<string> DatastoreId { get; private set; } = null!;

        /// <summary>
        /// The data store name (user-generated).
        /// </summary>
        [Output("datastoreName")]
        public Output<string?> DatastoreName { get; private set; } = null!;

        /// <summary>
        /// The status of the FHIR Data Store. Possible statuses are ‘CREATING’, ‘ACTIVE’, ‘DELETING’, ‘DELETED’.
        /// </summary>
        [Output("datastoreStatus")]
        public Output<Pulumi.AwsNative.HealthLake.FhirDatastoreDatastoreStatus> DatastoreStatus { get; private set; } = null!;

        /// <summary>
        /// The FHIR release version supported by the data store. Current support is for version `R4` .
        /// </summary>
        [Output("datastoreTypeVersion")]
        public Output<Pulumi.AwsNative.HealthLake.FhirDatastoreDatastoreTypeVersion> DatastoreTypeVersion { get; private set; } = null!;

        /// <summary>
        /// The identity provider configuration selected when the data store was created.
        /// </summary>
        [Output("identityProviderConfiguration")]
        public Output<Outputs.FhirDatastoreIdentityProviderConfiguration?> IdentityProviderConfiguration { get; private set; } = null!;

        /// <summary>
        /// The preloaded Synthea data configuration for the data store.
        /// </summary>
        [Output("preloadDataConfig")]
        public Output<Outputs.FhirDatastorePreloadDataConfig?> PreloadDataConfig { get; private set; } = null!;

        /// <summary>
        /// The server-side encryption key configuration for a customer-provided encryption key specified for creating a data store.
        /// </summary>
        [Output("sseConfiguration")]
        public Output<Outputs.FhirDatastoreSseConfiguration?> SseConfiguration { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// 
        /// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a FhirDatastore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FhirDatastore(string name, FhirDatastoreArgs args, CustomResourceOptions? options = null)
            : base("aws-native:healthlake:FhirDatastore", name, args ?? new FhirDatastoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FhirDatastore(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:healthlake:FhirDatastore", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "datastoreName",
                    "datastoreTypeVersion",
                    "identityProviderConfiguration",
                    "preloadDataConfig",
                    "sseConfiguration",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FhirDatastore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FhirDatastore Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FhirDatastore(name, id, options);
        }
    }

    public sealed class FhirDatastoreArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The data store name (user-generated).
        /// </summary>
        [Input("datastoreName")]
        public Input<string>? DatastoreName { get; set; }

        /// <summary>
        /// The FHIR release version supported by the data store. Current support is for version `R4` .
        /// </summary>
        [Input("datastoreTypeVersion", required: true)]
        public Input<Pulumi.AwsNative.HealthLake.FhirDatastoreDatastoreTypeVersion> DatastoreTypeVersion { get; set; } = null!;

        /// <summary>
        /// The identity provider configuration selected when the data store was created.
        /// </summary>
        [Input("identityProviderConfiguration")]
        public Input<Inputs.FhirDatastoreIdentityProviderConfigurationArgs>? IdentityProviderConfiguration { get; set; }

        /// <summary>
        /// The preloaded Synthea data configuration for the data store.
        /// </summary>
        [Input("preloadDataConfig")]
        public Input<Inputs.FhirDatastorePreloadDataConfigArgs>? PreloadDataConfig { get; set; }

        /// <summary>
        /// The server-side encryption key configuration for a customer-provided encryption key specified for creating a data store.
        /// </summary>
        [Input("sseConfiguration")]
        public Input<Inputs.FhirDatastoreSseConfigurationArgs>? SseConfiguration { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// 
        /// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public FhirDatastoreArgs()
        {
        }
        public static new FhirDatastoreArgs Empty => new FhirDatastoreArgs();
    }
}
