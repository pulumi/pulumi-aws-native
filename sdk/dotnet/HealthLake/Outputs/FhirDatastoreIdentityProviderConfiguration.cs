// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.HealthLake.Outputs
{

    /// <summary>
    /// The identity provider configuration for the datastore
    /// </summary>
    [OutputType]
    public sealed class FhirDatastoreIdentityProviderConfiguration
    {
        /// <summary>
        /// Type of Authorization Strategy. The two types of supported Authorization strategies are SMART_ON_FHIR_V1 and AWS_AUTH.
        /// </summary>
        public readonly Pulumi.AwsNative.HealthLake.FhirDatastoreIdentityProviderConfigurationAuthorizationStrategy AuthorizationStrategy;
        /// <summary>
        /// Flag to indicate if fine-grained authorization will be enabled for the datastore
        /// </summary>
        public readonly bool? FineGrainedAuthorizationEnabled;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Lambda function that will be used to decode the access token created by the authorization server.
        /// </summary>
        public readonly string? IdpLambdaArn;
        /// <summary>
        /// The JSON metadata elements for identity provider configuration.
        /// </summary>
        public readonly string? Metadata;

        [OutputConstructor]
        private FhirDatastoreIdentityProviderConfiguration(
            Pulumi.AwsNative.HealthLake.FhirDatastoreIdentityProviderConfigurationAuthorizationStrategy authorizationStrategy,

            bool? fineGrainedAuthorizationEnabled,

            string? idpLambdaArn,

            string? metadata)
        {
            AuthorizationStrategy = authorizationStrategy;
            FineGrainedAuthorizationEnabled = fineGrainedAuthorizationEnabled;
            IdpLambdaArn = idpLambdaArn;
            Metadata = metadata;
        }
    }
}
