// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class TemplateFilledMapVisualArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.TemplateVisualCustomActionArgs>? _actions;

        /// <summary>
        /// The list of custom actions that are configured for a visual.
        /// </summary>
        public InputList<Inputs.TemplateVisualCustomActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.TemplateVisualCustomActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// The configuration for a `FilledMapVisual` .
        /// </summary>
        [Input("chartConfiguration")]
        public Input<Inputs.TemplateFilledMapConfigurationArgs>? ChartConfiguration { get; set; }

        [Input("columnHierarchies")]
        private InputList<Inputs.TemplateColumnHierarchyArgs>? _columnHierarchies;

        /// <summary>
        /// The column hierarchy that is used during drill-downs and drill-ups.
        /// </summary>
        public InputList<Inputs.TemplateColumnHierarchyArgs> ColumnHierarchies
        {
            get => _columnHierarchies ?? (_columnHierarchies = new InputList<Inputs.TemplateColumnHierarchyArgs>());
            set => _columnHierarchies = value;
        }

        /// <summary>
        /// The conditional formatting of a `FilledMapVisual` .
        /// </summary>
        [Input("conditionalFormatting")]
        public Input<Inputs.TemplateFilledMapConditionalFormattingArgs>? ConditionalFormatting { get; set; }

        /// <summary>
        /// The subtitle label options for a visual.
        /// </summary>
        [Input("subtitle")]
        public Input<Inputs.TemplateVisualSubtitleLabelOptionsArgs>? Subtitle { get; set; }

        /// <summary>
        /// The title label options for a visual.
        /// </summary>
        [Input("title")]
        public Input<Inputs.TemplateVisualTitleLabelOptionsArgs>? Title { get; set; }

        /// <summary>
        /// The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers..
        /// </summary>
        [Input("visualId", required: true)]
        public Input<string> VisualId { get; set; } = null!;

        public TemplateFilledMapVisualArgs()
        {
        }
        public static new TemplateFilledMapVisualArgs Empty => new TemplateFilledMapVisualArgs();
    }
}
