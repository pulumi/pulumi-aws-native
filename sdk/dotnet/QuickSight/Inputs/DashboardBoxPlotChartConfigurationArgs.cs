// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class DashboardBoxPlotChartConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The box plot chart options for a box plot visual
        /// </summary>
        [Input("boxPlotOptions")]
        public Input<Inputs.DashboardBoxPlotOptionsArgs>? BoxPlotOptions { get; set; }

        /// <summary>
        /// The label display options (grid line, range, scale, axis step) of a box plot category.
        /// </summary>
        [Input("categoryAxis")]
        public Input<Inputs.DashboardAxisDisplayOptionsArgs>? CategoryAxis { get; set; }

        /// <summary>
        /// The label options (label text, label visibility and sort Icon visibility) of a box plot category.
        /// </summary>
        [Input("categoryLabelOptions")]
        public Input<Inputs.DashboardChartAxisLabelOptionsArgs>? CategoryLabelOptions { get; set; }

        /// <summary>
        /// The field wells of the visual.
        /// </summary>
        [Input("fieldWells")]
        public Input<Inputs.DashboardBoxPlotFieldWellsArgs>? FieldWells { get; set; }

        [Input("interactions")]
        public Input<Inputs.DashboardVisualInteractionOptionsArgs>? Interactions { get; set; }

        [Input("legend")]
        public Input<Inputs.DashboardLegendOptionsArgs>? Legend { get; set; }

        /// <summary>
        /// The label display options (grid line, range, scale, axis step) of a box plot category.
        /// </summary>
        [Input("primaryYAxisDisplayOptions")]
        public Input<Inputs.DashboardAxisDisplayOptionsArgs>? PrimaryYAxisDisplayOptions { get; set; }

        /// <summary>
        /// The label options (label text, label visibility and sort icon visibility) of a box plot value.
        /// </summary>
        [Input("primaryYAxisLabelOptions")]
        public Input<Inputs.DashboardChartAxisLabelOptionsArgs>? PrimaryYAxisLabelOptions { get; set; }

        [Input("referenceLines")]
        private InputList<Inputs.DashboardReferenceLineArgs>? _referenceLines;

        /// <summary>
        /// The reference line setup of the visual.
        /// </summary>
        public InputList<Inputs.DashboardReferenceLineArgs> ReferenceLines
        {
            get => _referenceLines ?? (_referenceLines = new InputList<Inputs.DashboardReferenceLineArgs>());
            set => _referenceLines = value;
        }

        /// <summary>
        /// The sort configuration of a `BoxPlotVisual` .
        /// </summary>
        [Input("sortConfiguration")]
        public Input<Inputs.DashboardBoxPlotSortConfigurationArgs>? SortConfiguration { get; set; }

        /// <summary>
        /// The tooltip display setup of the visual.
        /// </summary>
        [Input("tooltip")]
        public Input<Inputs.DashboardTooltipOptionsArgs>? Tooltip { get; set; }

        /// <summary>
        /// The palette (chart color) display setup of the visual.
        /// </summary>
        [Input("visualPalette")]
        public Input<Inputs.DashboardVisualPaletteArgs>? VisualPalette { get; set; }

        public DashboardBoxPlotChartConfigurationArgs()
        {
        }
        public static new DashboardBoxPlotChartConfigurationArgs Empty => new DashboardBoxPlotChartConfigurationArgs();
    }
}
