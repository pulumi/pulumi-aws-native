// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class TemplateSubtotalOptionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The custom label string for the subtotal cells.
        /// </summary>
        [Input("customLabel")]
        public Input<string>? CustomLabel { get; set; }

        /// <summary>
        /// The field level (all, custom, last) for the subtotal cells.
        /// </summary>
        [Input("fieldLevel")]
        public Input<Pulumi.AwsNative.QuickSight.TemplatePivotTableSubtotalLevel>? FieldLevel { get; set; }

        [Input("fieldLevelOptions")]
        private InputList<Inputs.TemplatePivotTableFieldSubtotalOptionsArgs>? _fieldLevelOptions;

        /// <summary>
        /// The optional configuration of subtotal cells.
        /// </summary>
        public InputList<Inputs.TemplatePivotTableFieldSubtotalOptionsArgs> FieldLevelOptions
        {
            get => _fieldLevelOptions ?? (_fieldLevelOptions = new InputList<Inputs.TemplatePivotTableFieldSubtotalOptionsArgs>());
            set => _fieldLevelOptions = value;
        }

        /// <summary>
        /// The cell styling options for the subtotals of header cells.
        /// </summary>
        [Input("metricHeaderCellStyle")]
        public Input<Inputs.TemplateTableCellStyleArgs>? MetricHeaderCellStyle { get; set; }

        [Input("styleTargets")]
        private InputList<Inputs.TemplateTableStyleTargetArgs>? _styleTargets;

        /// <summary>
        /// The style targets options for subtotals.
        /// </summary>
        public InputList<Inputs.TemplateTableStyleTargetArgs> StyleTargets
        {
            get => _styleTargets ?? (_styleTargets = new InputList<Inputs.TemplateTableStyleTargetArgs>());
            set => _styleTargets = value;
        }

        /// <summary>
        /// The cell styling options for the subtotal cells.
        /// </summary>
        [Input("totalCellStyle")]
        public Input<Inputs.TemplateTableCellStyleArgs>? TotalCellStyle { get; set; }

        /// <summary>
        /// The visibility configuration for the subtotal cells.
        /// </summary>
        [Input("totalsVisibility")]
        public Input<object>? TotalsVisibility { get; set; }

        /// <summary>
        /// The cell styling options for the subtotals of value cells.
        /// </summary>
        [Input("valueCellStyle")]
        public Input<Inputs.TemplateTableCellStyleArgs>? ValueCellStyle { get; set; }

        public TemplateSubtotalOptionsArgs()
        {
        }
        public static new TemplateSubtotalOptionsArgs Empty => new TemplateSubtotalOptionsArgs();
    }
}
