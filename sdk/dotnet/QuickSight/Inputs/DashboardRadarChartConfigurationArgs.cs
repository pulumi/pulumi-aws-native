// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class DashboardRadarChartConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines the visibility of the colors of alternatign bands in a radar chart.
        /// </summary>
        [Input("alternateBandColorsVisibility")]
        public Input<Pulumi.AwsNative.QuickSight.DashboardVisibility>? AlternateBandColorsVisibility { get; set; }

        /// <summary>
        /// The color of the even-numbered alternate bands of a radar chart.
        /// </summary>
        [Input("alternateBandEvenColor")]
        public Input<string>? AlternateBandEvenColor { get; set; }

        /// <summary>
        /// The color of the odd-numbered alternate bands of a radar chart.
        /// </summary>
        [Input("alternateBandOddColor")]
        public Input<string>? AlternateBandOddColor { get; set; }

        /// <summary>
        /// The axis behavior options of a radar chart.
        /// </summary>
        [Input("axesRangeScale")]
        public Input<Pulumi.AwsNative.QuickSight.DashboardRadarChartAxesRangeScale>? AxesRangeScale { get; set; }

        /// <summary>
        /// The base sreies settings of a radar chart.
        /// </summary>
        [Input("baseSeriesSettings")]
        public Input<Inputs.DashboardRadarChartSeriesSettingsArgs>? BaseSeriesSettings { get; set; }

        /// <summary>
        /// The category axis of a radar chart.
        /// </summary>
        [Input("categoryAxis")]
        public Input<Inputs.DashboardAxisDisplayOptionsArgs>? CategoryAxis { get; set; }

        /// <summary>
        /// The category label options of a radar chart.
        /// </summary>
        [Input("categoryLabelOptions")]
        public Input<Inputs.DashboardChartAxisLabelOptionsArgs>? CategoryLabelOptions { get; set; }

        /// <summary>
        /// The color axis of a radar chart.
        /// </summary>
        [Input("colorAxis")]
        public Input<Inputs.DashboardAxisDisplayOptionsArgs>? ColorAxis { get; set; }

        /// <summary>
        /// The color label options of a radar chart.
        /// </summary>
        [Input("colorLabelOptions")]
        public Input<Inputs.DashboardChartAxisLabelOptionsArgs>? ColorLabelOptions { get; set; }

        /// <summary>
        /// The field well configuration of a `RadarChartVisual` .
        /// </summary>
        [Input("fieldWells")]
        public Input<Inputs.DashboardRadarChartFieldWellsArgs>? FieldWells { get; set; }

        [Input("interactions")]
        public Input<Inputs.DashboardVisualInteractionOptionsArgs>? Interactions { get; set; }

        /// <summary>
        /// The legend display setup of the visual.
        /// </summary>
        [Input("legend")]
        public Input<Inputs.DashboardLegendOptionsArgs>? Legend { get; set; }

        /// <summary>
        /// The shape of the radar chart.
        /// </summary>
        [Input("shape")]
        public Input<Pulumi.AwsNative.QuickSight.DashboardRadarChartShape>? Shape { get; set; }

        /// <summary>
        /// The sort configuration of a `RadarChartVisual` .
        /// </summary>
        [Input("sortConfiguration")]
        public Input<Inputs.DashboardRadarChartSortConfigurationArgs>? SortConfiguration { get; set; }

        /// <summary>
        /// The start angle of a radar chart's axis.
        /// </summary>
        [Input("startAngle")]
        public Input<double>? StartAngle { get; set; }

        /// <summary>
        /// The palette (chart color) display setup of the visual.
        /// </summary>
        [Input("visualPalette")]
        public Input<Inputs.DashboardVisualPaletteArgs>? VisualPalette { get; set; }

        public DashboardRadarChartConfigurationArgs()
        {
        }
        public static new DashboardRadarChartConfigurationArgs Empty => new DashboardRadarChartConfigurationArgs();
    }
}
