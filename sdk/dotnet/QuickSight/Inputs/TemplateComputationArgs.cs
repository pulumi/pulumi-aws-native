// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class TemplateComputationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The forecast computation configuration.
        /// </summary>
        [Input("forecast")]
        public Input<Inputs.TemplateForecastComputationArgs>? Forecast { get; set; }

        /// <summary>
        /// The growth rate computation configuration.
        /// </summary>
        [Input("growthRate")]
        public Input<Inputs.TemplateGrowthRateComputationArgs>? GrowthRate { get; set; }

        /// <summary>
        /// The maximum and minimum computation configuration.
        /// </summary>
        [Input("maximumMinimum")]
        public Input<Inputs.TemplateMaximumMinimumComputationArgs>? MaximumMinimum { get; set; }

        /// <summary>
        /// The metric comparison computation configuration.
        /// </summary>
        [Input("metricComparison")]
        public Input<Inputs.TemplateMetricComparisonComputationArgs>? MetricComparison { get; set; }

        /// <summary>
        /// The period over period computation configuration.
        /// </summary>
        [Input("periodOverPeriod")]
        public Input<Inputs.TemplatePeriodOverPeriodComputationArgs>? PeriodOverPeriod { get; set; }

        /// <summary>
        /// The period to date computation configuration.
        /// </summary>
        [Input("periodToDate")]
        public Input<Inputs.TemplatePeriodToDateComputationArgs>? PeriodToDate { get; set; }

        /// <summary>
        /// The top movers and bottom movers computation setup.
        /// </summary>
        [Input("topBottomMovers")]
        public Input<Inputs.TemplateTopBottomMoversComputationArgs>? TopBottomMovers { get; set; }

        /// <summary>
        /// The top ranked and bottom ranked computation configuration.
        /// </summary>
        [Input("topBottomRanked")]
        public Input<Inputs.TemplateTopBottomRankedComputationArgs>? TopBottomRanked { get; set; }

        /// <summary>
        /// The total aggregation computation configuration.
        /// </summary>
        [Input("totalAggregation")]
        public Input<Inputs.TemplateTotalAggregationComputationArgs>? TotalAggregation { get; set; }

        /// <summary>
        /// The unique values computation configuration.
        /// </summary>
        [Input("uniqueValues")]
        public Input<Inputs.TemplateUniqueValuesComputationArgs>? UniqueValues { get; set; }

        public TemplateComputationArgs()
        {
        }
        public static new TemplateComputationArgs Empty => new TemplateComputationArgs();
    }
}
