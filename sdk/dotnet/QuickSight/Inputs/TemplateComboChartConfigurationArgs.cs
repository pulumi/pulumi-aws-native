// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class TemplateComboChartConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The options that determine if visual data labels are displayed.
        /// 
        /// The data label options for a bar in a combo chart.
        /// </summary>
        [Input("barDataLabels")]
        public Input<Inputs.TemplateDataLabelOptionsArgs>? BarDataLabels { get; set; }

        /// <summary>
        /// Determines the bar arrangement in a combo chart. The following are valid values in this structure:
        /// 
        /// - `CLUSTERED` : For clustered bar combo charts.
        /// - `STACKED` : For stacked bar combo charts.
        /// - `STACKED_PERCENT` : Do not use. If you use this value, the operation returns a validation error.
        /// </summary>
        [Input("barsArrangement")]
        public Input<Pulumi.AwsNative.QuickSight.TemplateBarsArrangement>? BarsArrangement { get; set; }

        /// <summary>
        /// The category axis of a combo chart.
        /// </summary>
        [Input("categoryAxis")]
        public Input<Inputs.TemplateAxisDisplayOptionsArgs>? CategoryAxis { get; set; }

        /// <summary>
        /// The label options (label text, label visibility, and sort icon visibility) of a combo chart category (group/color) field well.
        /// </summary>
        [Input("categoryLabelOptions")]
        public Input<Inputs.TemplateChartAxisLabelOptionsArgs>? CategoryLabelOptions { get; set; }

        /// <summary>
        /// The label options (label text, label visibility, and sort icon visibility) of a combo chart's color field well.
        /// </summary>
        [Input("colorLabelOptions")]
        public Input<Inputs.TemplateChartAxisLabelOptionsArgs>? ColorLabelOptions { get; set; }

        /// <summary>
        /// The field wells of the visual.
        /// </summary>
        [Input("fieldWells")]
        public Input<Inputs.TemplateComboChartFieldWellsArgs>? FieldWells { get; set; }

        /// <summary>
        /// The legend display setup of the visual.
        /// </summary>
        [Input("legend")]
        public Input<Inputs.TemplateLegendOptionsArgs>? Legend { get; set; }

        /// <summary>
        /// The options that determine if visual data labels are displayed.
        /// 
        /// The data label options for a line in a combo chart.
        /// </summary>
        [Input("lineDataLabels")]
        public Input<Inputs.TemplateDataLabelOptionsArgs>? LineDataLabels { get; set; }

        /// <summary>
        /// The label display options (grid line, range, scale, and axis step) of a combo chart's primary y-axis (bar) field well.
        /// </summary>
        [Input("primaryYAxisDisplayOptions")]
        public Input<Inputs.TemplateAxisDisplayOptionsArgs>? PrimaryYAxisDisplayOptions { get; set; }

        /// <summary>
        /// The label options (label text, label visibility, and sort icon visibility) of a combo chart's primary y-axis (bar) field well.
        /// </summary>
        [Input("primaryYAxisLabelOptions")]
        public Input<Inputs.TemplateChartAxisLabelOptionsArgs>? PrimaryYAxisLabelOptions { get; set; }

        [Input("referenceLines")]
        private InputList<Inputs.TemplateReferenceLineArgs>? _referenceLines;

        /// <summary>
        /// The reference line setup of the visual.
        /// </summary>
        public InputList<Inputs.TemplateReferenceLineArgs> ReferenceLines
        {
            get => _referenceLines ?? (_referenceLines = new InputList<Inputs.TemplateReferenceLineArgs>());
            set => _referenceLines = value;
        }

        /// <summary>
        /// The label display options (grid line, range, scale, axis step) of a combo chart's secondary y-axis (line) field well.
        /// </summary>
        [Input("secondaryYAxisDisplayOptions")]
        public Input<Inputs.TemplateAxisDisplayOptionsArgs>? SecondaryYAxisDisplayOptions { get; set; }

        /// <summary>
        /// The label options (label text, label visibility, and sort icon visibility) of a combo chart's secondary y-axis(line) field well.
        /// </summary>
        [Input("secondaryYAxisLabelOptions")]
        public Input<Inputs.TemplateChartAxisLabelOptionsArgs>? SecondaryYAxisLabelOptions { get; set; }

        [Input("singleAxisOptions")]
        public Input<Inputs.TemplateSingleAxisOptionsArgs>? SingleAxisOptions { get; set; }

        /// <summary>
        /// The sort configuration of a `ComboChartVisual` .
        /// </summary>
        [Input("sortConfiguration")]
        public Input<Inputs.TemplateComboChartSortConfigurationArgs>? SortConfiguration { get; set; }

        /// <summary>
        /// The legend display setup of the visual.
        /// </summary>
        [Input("tooltip")]
        public Input<Inputs.TemplateTooltipOptionsArgs>? Tooltip { get; set; }

        /// <summary>
        /// The palette (chart color) display setup of the visual.
        /// </summary>
        [Input("visualPalette")]
        public Input<Inputs.TemplateVisualPaletteArgs>? VisualPalette { get; set; }

        public TemplateComboChartConfigurationArgs()
        {
        }
        public static new TemplateComboChartConfigurationArgs Empty => new TemplateComboChartConfigurationArgs();
    }
}
