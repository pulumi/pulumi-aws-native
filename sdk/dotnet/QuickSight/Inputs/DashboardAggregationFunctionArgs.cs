// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class DashboardAggregationFunctionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Aggregation for attributes.
        /// </summary>
        [Input("attributeAggregationFunction")]
        public Input<Inputs.DashboardAttributeAggregationFunctionArgs>? AttributeAggregationFunction { get; set; }

        /// <summary>
        /// Aggregation for categorical values.
        /// 
        /// - `COUNT` : Aggregate by the total number of values, including duplicates.
        /// - `DISTINCT_COUNT` : Aggregate by the total number of distinct values.
        /// </summary>
        [Input("categoricalAggregationFunction")]
        public Input<Pulumi.AwsNative.QuickSight.DashboardCategoricalAggregationFunction>? CategoricalAggregationFunction { get; set; }

        /// <summary>
        /// Aggregation for date values.
        /// 
        /// - `COUNT` : Aggregate by the total number of values, including duplicates.
        /// - `DISTINCT_COUNT` : Aggregate by the total number of distinct values.
        /// - `MIN` : Select the smallest date value.
        /// - `MAX` : Select the largest date value.
        /// </summary>
        [Input("dateAggregationFunction")]
        public Input<Pulumi.AwsNative.QuickSight.DashboardDateAggregationFunction>? DateAggregationFunction { get; set; }

        /// <summary>
        /// Aggregation for numerical values.
        /// </summary>
        [Input("numericalAggregationFunction")]
        public Input<Inputs.DashboardNumericalAggregationFunctionArgs>? NumericalAggregationFunction { get; set; }

        public DashboardAggregationFunctionArgs()
        {
        }
        public static new DashboardAggregationFunctionArgs Empty => new DashboardAggregationFunctionArgs();
    }
}
