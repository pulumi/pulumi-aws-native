// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    /// <summary>
    /// &lt;p&gt;S3 parameters.&lt;/p&gt;
    /// </summary>
    public sealed class DataSourceS3ParametersArgs : global::Pulumi.ResourceArgs
    {
        [Input("manifestFileLocation", required: true)]
        public Input<Inputs.DataSourceManifestFileLocationArgs> ManifestFileLocation { get; set; } = null!;

        /// <summary>
        /// &lt;p&gt;Use the &lt;code&gt;RoleArn&lt;/code&gt; structure to override an account-wide role for a specific S3 data source. For example, say an account administrator has turned off all S3 access with an account-wide role. The administrator can then use &lt;code&gt;RoleArn&lt;/code&gt; to bypass the account-wide role and allow S3 access for the single S3 data source that is specified in the structure, even if the account-wide role forbidding S3 access is still active.&lt;/p&gt;
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        public DataSourceS3ParametersArgs()
        {
        }
        public static new DataSourceS3ParametersArgs Empty => new DataSourceS3ParametersArgs();
    }
}
