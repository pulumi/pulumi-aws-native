// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class AnalysisTableConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The field options of a table visual.
        /// </summary>
        [Input("fieldOptions")]
        public Input<Inputs.AnalysisTableFieldOptionsArgs>? FieldOptions { get; set; }

        /// <summary>
        /// The field wells for a table visual.
        /// 
        /// This is a union type structure. For this structure to be valid, only one of the attributes can be defined.
        /// </summary>
        [Input("fieldWells")]
        public Input<Inputs.AnalysisTableFieldWellsArgs>? FieldWells { get; set; }

        /// <summary>
        /// The paginated report options for a table visual.
        /// </summary>
        [Input("paginatedReportOptions")]
        public Input<Inputs.AnalysisTablePaginatedReportOptionsArgs>? PaginatedReportOptions { get; set; }

        /// <summary>
        /// The sort configuration for a `TableVisual` .
        /// </summary>
        [Input("sortConfiguration")]
        public Input<Inputs.AnalysisTableSortConfigurationArgs>? SortConfiguration { get; set; }

        [Input("tableInlineVisualizations")]
        private InputList<Inputs.AnalysisTableInlineVisualizationArgs>? _tableInlineVisualizations;

        /// <summary>
        /// The inline visualization of a specific type to display within a chart.
        /// </summary>
        public InputList<Inputs.AnalysisTableInlineVisualizationArgs> TableInlineVisualizations
        {
            get => _tableInlineVisualizations ?? (_tableInlineVisualizations = new InputList<Inputs.AnalysisTableInlineVisualizationArgs>());
            set => _tableInlineVisualizations = value;
        }

        /// <summary>
        /// The table options for a table visual.
        /// </summary>
        [Input("tableOptions")]
        public Input<Inputs.AnalysisTableOptionsArgs>? TableOptions { get; set; }

        /// <summary>
        /// The total options for a table visual.
        /// </summary>
        [Input("totalOptions")]
        public Input<Inputs.AnalysisTotalOptionsArgs>? TotalOptions { get; set; }

        public AnalysisTableConfigurationArgs()
        {
        }
        public static new AnalysisTableConfigurationArgs Empty => new AnalysisTableConfigurationArgs();
    }
}
