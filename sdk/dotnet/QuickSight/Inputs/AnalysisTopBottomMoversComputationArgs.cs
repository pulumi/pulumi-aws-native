// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class AnalysisTopBottomMoversComputationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The category field that is used in a computation.
        /// </summary>
        [Input("category")]
        public Input<Inputs.AnalysisDimensionFieldArgs>? Category { get; set; }

        /// <summary>
        /// The ID for a computation.
        /// </summary>
        [Input("computationId", required: true)]
        public Input<string> ComputationId { get; set; } = null!;

        /// <summary>
        /// The mover size setup of the top and bottom movers computation.
        /// </summary>
        [Input("moverSize")]
        public Input<double>? MoverSize { get; set; }

        /// <summary>
        /// The name of a computation.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The sort order setup of the top and bottom movers computation.
        /// </summary>
        [Input("sortOrder")]
        public Input<Pulumi.AwsNative.QuickSight.AnalysisTopBottomSortOrder>? SortOrder { get; set; }

        /// <summary>
        /// The time field that is used in a computation.
        /// </summary>
        [Input("time")]
        public Input<Inputs.AnalysisDimensionFieldArgs>? Time { get; set; }

        /// <summary>
        /// The computation type. Choose from the following options:
        /// 
        /// - TOP: Top movers computation.
        /// - BOTTOM: Bottom movers computation.
        /// </summary>
        [Input("type", required: true)]
        public Input<Pulumi.AwsNative.QuickSight.AnalysisTopBottomComputationType> Type { get; set; } = null!;

        /// <summary>
        /// The value field that is used in a computation.
        /// </summary>
        [Input("value")]
        public Input<Inputs.AnalysisMeasureFieldArgs>? Value { get; set; }

        public AnalysisTopBottomMoversComputationArgs()
        {
        }
        public static new AnalysisTopBottomMoversComputationArgs Empty => new AnalysisTopBottomMoversComputationArgs();
    }
}
