// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class AnalysisHistogramConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The options that determine the presentation of histogram bins.
        /// </summary>
        [Input("binOptions")]
        public Input<Inputs.AnalysisHistogramBinOptionsArgs>? BinOptions { get; set; }

        /// <summary>
        /// The data label configuration of a histogram.
        /// </summary>
        [Input("dataLabels")]
        public Input<Inputs.AnalysisDataLabelOptionsArgs>? DataLabels { get; set; }

        /// <summary>
        /// The field well configuration of a histogram.
        /// </summary>
        [Input("fieldWells")]
        public Input<Inputs.AnalysisHistogramFieldWellsArgs>? FieldWells { get; set; }

        /// <summary>
        /// The general visual interactions setup for a visual.
        /// </summary>
        [Input("interactions")]
        public Input<Inputs.AnalysisVisualInteractionOptionsArgs>? Interactions { get; set; }

        /// <summary>
        /// The tooltip configuration of a histogram.
        /// </summary>
        [Input("tooltip")]
        public Input<Inputs.AnalysisTooltipOptionsArgs>? Tooltip { get; set; }

        /// <summary>
        /// The visual palette configuration of a histogram.
        /// </summary>
        [Input("visualPalette")]
        public Input<Inputs.AnalysisVisualPaletteArgs>? VisualPalette { get; set; }

        /// <summary>
        /// The options that determine the presentation of the x-axis.
        /// </summary>
        [Input("xAxisDisplayOptions")]
        public Input<Inputs.AnalysisAxisDisplayOptionsArgs>? XAxisDisplayOptions { get; set; }

        /// <summary>
        /// The options that determine the presentation of the x-axis label.
        /// </summary>
        [Input("xAxisLabelOptions")]
        public Input<Inputs.AnalysisChartAxisLabelOptionsArgs>? XAxisLabelOptions { get; set; }

        /// <summary>
        /// The options that determine the presentation of the y-axis.
        /// </summary>
        [Input("yAxisDisplayOptions")]
        public Input<Inputs.AnalysisAxisDisplayOptionsArgs>? YAxisDisplayOptions { get; set; }

        public AnalysisHistogramConfigurationArgs()
        {
        }
        public static new AnalysisHistogramConfigurationArgs Empty => new AnalysisHistogramConfigurationArgs();
    }
}
