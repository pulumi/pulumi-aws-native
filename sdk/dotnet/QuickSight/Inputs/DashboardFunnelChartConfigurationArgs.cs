// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class DashboardFunnelChartConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The label options for an axis on a chart.
        /// </summary>
        [Input("categoryLabelOptions")]
        public Input<Inputs.DashboardChartAxisLabelOptionsArgs>? CategoryLabelOptions { get; set; }

        /// <summary>
        /// The options that determine the presentation of the data labels.
        /// </summary>
        [Input("dataLabelOptions")]
        public Input<Inputs.DashboardFunnelChartDataLabelOptionsArgs>? DataLabelOptions { get; set; }

        /// <summary>
        /// The field well configuration of a `FunnelChartVisual` .
        /// 
        /// This is a union type structure. For this structure to be valid, only one of the attributes can be defined.
        /// </summary>
        [Input("fieldWells")]
        public Input<Inputs.DashboardFunnelChartFieldWellsArgs>? FieldWells { get; set; }

        /// <summary>
        /// The sort configuration of a `FunnelChartVisual` .
        /// </summary>
        [Input("sortConfiguration")]
        public Input<Inputs.DashboardFunnelChartSortConfigurationArgs>? SortConfiguration { get; set; }

        /// <summary>
        /// The display options for the visual tooltip.
        /// </summary>
        [Input("tooltip")]
        public Input<Inputs.DashboardTooltipOptionsArgs>? Tooltip { get; set; }

        /// <summary>
        /// The label options for an axis on a chart.
        /// </summary>
        [Input("valueLabelOptions")]
        public Input<Inputs.DashboardChartAxisLabelOptionsArgs>? ValueLabelOptions { get; set; }

        /// <summary>
        /// The visual display options for the visual palette.
        /// </summary>
        [Input("visualPalette")]
        public Input<Inputs.DashboardVisualPaletteArgs>? VisualPalette { get; set; }

        public DashboardFunnelChartConfigurationArgs()
        {
        }
        public static new DashboardFunnelChartConfigurationArgs Empty => new DashboardFunnelChartConfigurationArgs();
    }
}
