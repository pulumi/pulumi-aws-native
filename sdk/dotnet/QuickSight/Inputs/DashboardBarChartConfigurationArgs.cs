// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class DashboardBarChartConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("barsArrangement")]
        public Input<Pulumi.AwsNative.QuickSight.DashboardBarsArrangement>? BarsArrangement { get; set; }

        [Input("categoryAxis")]
        public Input<Inputs.DashboardAxisDisplayOptionsArgs>? CategoryAxis { get; set; }

        [Input("categoryLabelOptions")]
        public Input<Inputs.DashboardChartAxisLabelOptionsArgs>? CategoryLabelOptions { get; set; }

        [Input("colorLabelOptions")]
        public Input<Inputs.DashboardChartAxisLabelOptionsArgs>? ColorLabelOptions { get; set; }

        [Input("contributionAnalysisDefaults")]
        private InputList<Inputs.DashboardContributionAnalysisDefaultArgs>? _contributionAnalysisDefaults;
        public InputList<Inputs.DashboardContributionAnalysisDefaultArgs> ContributionAnalysisDefaults
        {
            get => _contributionAnalysisDefaults ?? (_contributionAnalysisDefaults = new InputList<Inputs.DashboardContributionAnalysisDefaultArgs>());
            set => _contributionAnalysisDefaults = value;
        }

        [Input("dataLabels")]
        public Input<Inputs.DashboardDataLabelOptionsArgs>? DataLabels { get; set; }

        [Input("fieldWells")]
        public Input<Inputs.DashboardBarChartFieldWellsArgs>? FieldWells { get; set; }

        [Input("legend")]
        public Input<Inputs.DashboardLegendOptionsArgs>? Legend { get; set; }

        [Input("orientation")]
        public Input<Pulumi.AwsNative.QuickSight.DashboardBarChartOrientation>? Orientation { get; set; }

        [Input("referenceLines")]
        private InputList<Inputs.DashboardReferenceLineArgs>? _referenceLines;
        public InputList<Inputs.DashboardReferenceLineArgs> ReferenceLines
        {
            get => _referenceLines ?? (_referenceLines = new InputList<Inputs.DashboardReferenceLineArgs>());
            set => _referenceLines = value;
        }

        [Input("smallMultiplesOptions")]
        public Input<Inputs.DashboardSmallMultiplesOptionsArgs>? SmallMultiplesOptions { get; set; }

        [Input("sortConfiguration")]
        public Input<Inputs.DashboardBarChartSortConfigurationArgs>? SortConfiguration { get; set; }

        [Input("tooltip")]
        public Input<Inputs.DashboardTooltipOptionsArgs>? Tooltip { get; set; }

        [Input("valueAxis")]
        public Input<Inputs.DashboardAxisDisplayOptionsArgs>? ValueAxis { get; set; }

        [Input("valueLabelOptions")]
        public Input<Inputs.DashboardChartAxisLabelOptionsArgs>? ValueLabelOptions { get; set; }

        [Input("visualPalette")]
        public Input<Inputs.DashboardVisualPaletteArgs>? VisualPalette { get; set; }

        public DashboardBarChartConfigurationArgs()
        {
        }
        public static new DashboardBarChartConfigurationArgs Empty => new DashboardBarChartConfigurationArgs();
    }
}
