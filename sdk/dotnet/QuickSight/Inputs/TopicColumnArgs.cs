// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class TopicColumnArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of aggregation that is performed on the column data when it's queried.
        /// </summary>
        [Input("aggregation")]
        public Input<Pulumi.AwsNative.QuickSight.TopicDefaultAggregation>? Aggregation { get; set; }

        [Input("allowedAggregations")]
        private InputList<Pulumi.AwsNative.QuickSight.TopicAuthorSpecifiedAggregation>? _allowedAggregations;

        /// <summary>
        /// The list of aggregation types that are allowed for the column. Valid values for this structure are `COUNT` , `DISTINCT_COUNT` , `MIN` , `MAX` , `MEDIAN` , `SUM` , `AVERAGE` , `STDEV` , `STDEVP` , `VAR` , `VARP` , and `PERCENTILE` .
        /// </summary>
        public InputList<Pulumi.AwsNative.QuickSight.TopicAuthorSpecifiedAggregation> AllowedAggregations
        {
            get => _allowedAggregations ?? (_allowedAggregations = new InputList<Pulumi.AwsNative.QuickSight.TopicAuthorSpecifiedAggregation>());
            set => _allowedAggregations = value;
        }

        [Input("cellValueSynonyms")]
        private InputList<Inputs.TopicCellValueSynonymArgs>? _cellValueSynonyms;

        /// <summary>
        /// The other names or aliases for the column cell value.
        /// </summary>
        public InputList<Inputs.TopicCellValueSynonymArgs> CellValueSynonyms
        {
            get => _cellValueSynonyms ?? (_cellValueSynonyms = new InputList<Inputs.TopicCellValueSynonymArgs>());
            set => _cellValueSynonyms = value;
        }

        /// <summary>
        /// The role of the column in the data. Valid values are `DIMENSION` and `MEASURE` .
        /// </summary>
        [Input("columnDataRole")]
        public Input<Pulumi.AwsNative.QuickSight.TopicColumnDataRole>? ColumnDataRole { get; set; }

        /// <summary>
        /// A description of the column and its contents.
        /// </summary>
        [Input("columnDescription")]
        public Input<string>? ColumnDescription { get; set; }

        /// <summary>
        /// A user-friendly name for the column.
        /// </summary>
        [Input("columnFriendlyName")]
        public Input<string>? ColumnFriendlyName { get; set; }

        /// <summary>
        /// The name of the column.
        /// </summary>
        [Input("columnName", required: true)]
        public Input<string> ColumnName { get; set; } = null!;

        [Input("columnSynonyms")]
        private InputList<string>? _columnSynonyms;

        /// <summary>
        /// The other names or aliases for the column.
        /// </summary>
        public InputList<string> ColumnSynonyms
        {
            get => _columnSynonyms ?? (_columnSynonyms = new InputList<string>());
            set => _columnSynonyms = value;
        }

        /// <summary>
        /// The order in which data is displayed for the column when it's used in a comparative context.
        /// </summary>
        [Input("comparativeOrder")]
        public Input<Inputs.TopicComparativeOrderArgs>? ComparativeOrder { get; set; }

        /// <summary>
        /// The default formatting used for values in the column.
        /// </summary>
        [Input("defaultFormatting")]
        public Input<Inputs.TopicDefaultFormattingArgs>? DefaultFormatting { get; set; }

        /// <summary>
        /// A Boolean value that indicates whether the column shows in the autocomplete functionality.
        /// </summary>
        [Input("disableIndexing")]
        public Input<bool>? DisableIndexing { get; set; }

        /// <summary>
        /// A Boolean value that indicates whether the column is included in the query results.
        /// </summary>
        [Input("isIncludedInTopic")]
        public Input<bool>? IsIncludedInTopic { get; set; }

        /// <summary>
        /// A Boolean value that indicates whether to aggregate the column data when it's used in a filter context.
        /// </summary>
        [Input("neverAggregateInFilter")]
        public Input<bool>? NeverAggregateInFilter { get; set; }

        /// <summary>
        /// The non additive value for the column.
        /// </summary>
        [Input("nonAdditive")]
        public Input<bool>? NonAdditive { get; set; }

        [Input("notAllowedAggregations")]
        private InputList<Pulumi.AwsNative.QuickSight.TopicAuthorSpecifiedAggregation>? _notAllowedAggregations;

        /// <summary>
        /// The list of aggregation types that are not allowed for the column. Valid values for this structure are `COUNT` , `DISTINCT_COUNT` , `MIN` , `MAX` , `MEDIAN` , `SUM` , `AVERAGE` , `STDEV` , `STDEVP` , `VAR` , `VARP` , and `PERCENTILE` .
        /// </summary>
        public InputList<Pulumi.AwsNative.QuickSight.TopicAuthorSpecifiedAggregation> NotAllowedAggregations
        {
            get => _notAllowedAggregations ?? (_notAllowedAggregations = new InputList<Pulumi.AwsNative.QuickSight.TopicAuthorSpecifiedAggregation>());
            set => _notAllowedAggregations = value;
        }

        /// <summary>
        /// The semantic type of data contained in the column.
        /// </summary>
        [Input("semanticType")]
        public Input<Inputs.TopicSemanticTypeArgs>? SemanticType { get; set; }

        /// <summary>
        /// The level of time precision that is used to aggregate `DateTime` values.
        /// </summary>
        [Input("timeGranularity")]
        public Input<Pulumi.AwsNative.QuickSight.TopicTimeGranularity>? TimeGranularity { get; set; }

        public TopicColumnArgs()
        {
        }
        public static new TopicColumnArgs Empty => new TopicColumnArgs();
    }
}
