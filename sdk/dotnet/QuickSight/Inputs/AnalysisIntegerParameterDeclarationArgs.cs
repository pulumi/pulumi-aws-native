// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class AnalysisIntegerParameterDeclarationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default values of a parameter. If the parameter is a single-value parameter, a maximum of one default value can be provided.
        /// </summary>
        [Input("defaultValues")]
        public Input<Inputs.AnalysisIntegerDefaultValuesArgs>? DefaultValues { get; set; }

        [Input("mappedDataSetParameters")]
        private InputList<Inputs.AnalysisMappedDataSetParameterArgs>? _mappedDataSetParameters;
        public InputList<Inputs.AnalysisMappedDataSetParameterArgs> MappedDataSetParameters
        {
            get => _mappedDataSetParameters ?? (_mappedDataSetParameters = new InputList<Inputs.AnalysisMappedDataSetParameterArgs>());
            set => _mappedDataSetParameters = value;
        }

        /// <summary>
        /// The name of the parameter that is being declared.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The value type determines whether the parameter is a single-value or multi-value parameter.
        /// </summary>
        [Input("parameterValueType", required: true)]
        public Input<Pulumi.AwsNative.QuickSight.AnalysisParameterValueType> ParameterValueType { get; set; } = null!;

        /// <summary>
        /// A parameter declaration for the `Integer` data type.
        /// </summary>
        [Input("valueWhenUnset")]
        public Input<Inputs.AnalysisIntegerValueWhenUnsetConfigurationArgs>? ValueWhenUnset { get; set; }

        public AnalysisIntegerParameterDeclarationArgs()
        {
        }
        public static new AnalysisIntegerParameterDeclarationArgs Empty => new AnalysisIntegerParameterDeclarationArgs();
    }
}
