// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class TemplateFunnelChartConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The label options of the categories that are displayed in a `FunnelChartVisual` .
        /// </summary>
        [Input("categoryLabelOptions")]
        public Input<Inputs.TemplateChartAxisLabelOptionsArgs>? CategoryLabelOptions { get; set; }

        /// <summary>
        /// The options that determine the presentation of the data labels.
        /// </summary>
        [Input("dataLabelOptions")]
        public Input<Inputs.TemplateFunnelChartDataLabelOptionsArgs>? DataLabelOptions { get; set; }

        /// <summary>
        /// The field well configuration of a `FunnelChartVisual` .
        /// </summary>
        [Input("fieldWells")]
        public Input<Inputs.TemplateFunnelChartFieldWellsArgs>? FieldWells { get; set; }

        /// <summary>
        /// The sort configuration of a `FunnelChartVisual` .
        /// </summary>
        [Input("sortConfiguration")]
        public Input<Inputs.TemplateFunnelChartSortConfigurationArgs>? SortConfiguration { get; set; }

        /// <summary>
        /// The tooltip configuration of a `FunnelChartVisual` .
        /// </summary>
        [Input("tooltip")]
        public Input<Inputs.TemplateTooltipOptionsArgs>? Tooltip { get; set; }

        /// <summary>
        /// The label options for the values that are displayed in a `FunnelChartVisual` .
        /// </summary>
        [Input("valueLabelOptions")]
        public Input<Inputs.TemplateChartAxisLabelOptionsArgs>? ValueLabelOptions { get; set; }

        /// <summary>
        /// The visual palette configuration of a `FunnelChartVisual` .
        /// </summary>
        [Input("visualPalette")]
        public Input<Inputs.TemplateVisualPaletteArgs>? VisualPalette { get; set; }

        public TemplateFunnelChartConfigurationArgs()
        {
        }
        public static new TemplateFunnelChartConfigurationArgs Empty => new TemplateFunnelChartConfigurationArgs();
    }
}
