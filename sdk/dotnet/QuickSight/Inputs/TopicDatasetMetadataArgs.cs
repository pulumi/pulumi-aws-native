// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class TopicDatasetMetadataArgs : global::Pulumi.ResourceArgs
    {
        [Input("calculatedFields")]
        private InputList<Inputs.TopicCalculatedFieldArgs>? _calculatedFields;

        /// <summary>
        /// A structure that represents a calculated field.
        /// </summary>
        public InputList<Inputs.TopicCalculatedFieldArgs> CalculatedFields
        {
            get => _calculatedFields ?? (_calculatedFields = new InputList<Inputs.TopicCalculatedFieldArgs>());
            set => _calculatedFields = value;
        }

        [Input("columns")]
        private InputList<Inputs.TopicColumnArgs>? _columns;

        /// <summary>
        /// Represents a column in a dataset.
        /// </summary>
        public InputList<Inputs.TopicColumnArgs> Columns
        {
            get => _columns ?? (_columns = new InputList<Inputs.TopicColumnArgs>());
            set => _columns = value;
        }

        /// <summary>
        /// The definition of a data aggregation.
        /// </summary>
        [Input("dataAggregation")]
        public Input<Inputs.TopicDataAggregationArgs>? DataAggregation { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the dataset.
        /// </summary>
        [Input("datasetArn", required: true)]
        public Input<string> DatasetArn { get; set; } = null!;

        /// <summary>
        /// The description of the dataset.
        /// </summary>
        [Input("datasetDescription")]
        public Input<string>? DatasetDescription { get; set; }

        /// <summary>
        /// The name of the dataset.
        /// </summary>
        [Input("datasetName")]
        public Input<string>? DatasetName { get; set; }

        [Input("filters")]
        private InputList<Inputs.TopicFilterArgs>? _filters;

        /// <summary>
        /// A structure that represents a filter used to select items for a topic.
        /// </summary>
        public InputList<Inputs.TopicFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.TopicFilterArgs>());
            set => _filters = value;
        }

        [Input("namedEntities")]
        private InputList<Inputs.TopicNamedEntityArgs>? _namedEntities;

        /// <summary>
        /// A structure that represents a named entity.
        /// </summary>
        public InputList<Inputs.TopicNamedEntityArgs> NamedEntities
        {
            get => _namedEntities ?? (_namedEntities = new InputList<Inputs.TopicNamedEntityArgs>());
            set => _namedEntities = value;
        }

        public TopicDatasetMetadataArgs()
        {
        }
        public static new TopicDatasetMetadataArgs Empty => new TopicDatasetMetadataArgs();
    }
}
