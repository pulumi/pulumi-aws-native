// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Inputs
{

    public sealed class TemplateTreeMapConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The label options (label text, label visibility) for the colors displayed in a tree map.
        /// </summary>
        [Input("colorLabelOptions")]
        public Input<Inputs.TemplateChartAxisLabelOptionsArgs>? ColorLabelOptions { get; set; }

        /// <summary>
        /// The color options (gradient color, point of divergence) of a tree map.
        /// </summary>
        [Input("colorScale")]
        public Input<Inputs.TemplateColorScaleArgs>? ColorScale { get; set; }

        /// <summary>
        /// The options that determine if visual data labels are displayed.
        /// </summary>
        [Input("dataLabels")]
        public Input<Inputs.TemplateDataLabelOptionsArgs>? DataLabels { get; set; }

        /// <summary>
        /// The field wells of the visual.
        /// </summary>
        [Input("fieldWells")]
        public Input<Inputs.TemplateTreeMapFieldWellsArgs>? FieldWells { get; set; }

        /// <summary>
        /// The label options (label text, label visibility) of the groups that are displayed in a tree map.
        /// </summary>
        [Input("groupLabelOptions")]
        public Input<Inputs.TemplateChartAxisLabelOptionsArgs>? GroupLabelOptions { get; set; }

        /// <summary>
        /// The legend display setup of the visual.
        /// </summary>
        [Input("legend")]
        public Input<Inputs.TemplateLegendOptionsArgs>? Legend { get; set; }

        /// <summary>
        /// The label options (label text, label visibility) of the sizes that are displayed in a tree map.
        /// </summary>
        [Input("sizeLabelOptions")]
        public Input<Inputs.TemplateChartAxisLabelOptionsArgs>? SizeLabelOptions { get; set; }

        /// <summary>
        /// The sort configuration of a tree map.
        /// </summary>
        [Input("sortConfiguration")]
        public Input<Inputs.TemplateTreeMapSortConfigurationArgs>? SortConfiguration { get; set; }

        /// <summary>
        /// The tooltip display setup of the visual.
        /// </summary>
        [Input("tooltip")]
        public Input<Inputs.TemplateTooltipOptionsArgs>? Tooltip { get; set; }

        public TemplateTreeMapConfigurationArgs()
        {
        }
        public static new TemplateTreeMapConfigurationArgs Empty => new TemplateTreeMapConfigurationArgs();
    }
}
