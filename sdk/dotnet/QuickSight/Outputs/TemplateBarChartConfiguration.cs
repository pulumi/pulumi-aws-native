// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class TemplateBarChartConfiguration
    {
        /// <summary>
        /// Determines the arrangement of the bars. The orientation and arrangement of bars determine the type of bar that is used in the visual.
        /// </summary>
        public readonly Pulumi.AwsNative.QuickSight.TemplateBarsArrangement? BarsArrangement;
        /// <summary>
        /// The label display options (grid line, range, scale, axis step) for bar chart category.
        /// </summary>
        public readonly Outputs.TemplateAxisDisplayOptions? CategoryAxis;
        /// <summary>
        /// The label options (label text, label visibility and sort icon visibility) for a bar chart.
        /// </summary>
        public readonly Outputs.TemplateChartAxisLabelOptions? CategoryLabelOptions;
        /// <summary>
        /// The label options (label text, label visibility and sort icon visibility) for a color that is used in a bar chart.
        /// </summary>
        public readonly Outputs.TemplateChartAxisLabelOptions? ColorLabelOptions;
        /// <summary>
        /// The contribution analysis (anomaly configuration) setup of the visual.
        /// </summary>
        public readonly ImmutableArray<Outputs.TemplateContributionAnalysisDefault> ContributionAnalysisDefaults;
        /// <summary>
        /// The options that determine if visual data labels are displayed.
        /// </summary>
        public readonly Outputs.TemplateDataLabelOptions? DataLabels;
        /// <summary>
        /// The field wells of the visual.
        /// </summary>
        public readonly Outputs.TemplateBarChartFieldWells? FieldWells;
        public readonly Outputs.TemplateVisualInteractionOptions? Interactions;
        /// <summary>
        /// The legend display setup of the visual.
        /// </summary>
        public readonly Outputs.TemplateLegendOptions? Legend;
        /// <summary>
        /// The orientation of the bars in a bar chart visual. There are two valid values in this structure:
        /// 
        /// - `HORIZONTAL` : Used for charts that have horizontal bars. Visuals that use this value are horizontal bar charts, horizontal stacked bar charts, and horizontal stacked 100% bar charts.
        /// - `VERTICAL` : Used for charts that have vertical bars. Visuals that use this value are vertical bar charts, vertical stacked bar charts, and vertical stacked 100% bar charts.
        /// </summary>
        public readonly Pulumi.AwsNative.QuickSight.TemplateBarChartOrientation? Orientation;
        /// <summary>
        /// The reference line setup of the visual.
        /// </summary>
        public readonly ImmutableArray<Outputs.TemplateReferenceLine> ReferenceLines;
        /// <summary>
        /// The small multiples setup for the visual.
        /// </summary>
        public readonly Outputs.TemplateSmallMultiplesOptions? SmallMultiplesOptions;
        /// <summary>
        /// The sort configuration of a `BarChartVisual` .
        /// </summary>
        public readonly Outputs.TemplateBarChartSortConfiguration? SortConfiguration;
        /// <summary>
        /// The tooltip display setup of the visual.
        /// </summary>
        public readonly Outputs.TemplateTooltipOptions? Tooltip;
        /// <summary>
        /// The label display options (grid line, range, scale, axis step) for a bar chart value.
        /// </summary>
        public readonly Outputs.TemplateAxisDisplayOptions? ValueAxis;
        /// <summary>
        /// The label options (label text, label visibility and sort icon visibility) for a bar chart value.
        /// </summary>
        public readonly Outputs.TemplateChartAxisLabelOptions? ValueLabelOptions;
        /// <summary>
        /// The palette (chart color) display setup of the visual.
        /// </summary>
        public readonly Outputs.TemplateVisualPalette? VisualPalette;

        [OutputConstructor]
        private TemplateBarChartConfiguration(
            Pulumi.AwsNative.QuickSight.TemplateBarsArrangement? barsArrangement,

            Outputs.TemplateAxisDisplayOptions? categoryAxis,

            Outputs.TemplateChartAxisLabelOptions? categoryLabelOptions,

            Outputs.TemplateChartAxisLabelOptions? colorLabelOptions,

            ImmutableArray<Outputs.TemplateContributionAnalysisDefault> contributionAnalysisDefaults,

            Outputs.TemplateDataLabelOptions? dataLabels,

            Outputs.TemplateBarChartFieldWells? fieldWells,

            Outputs.TemplateVisualInteractionOptions? interactions,

            Outputs.TemplateLegendOptions? legend,

            Pulumi.AwsNative.QuickSight.TemplateBarChartOrientation? orientation,

            ImmutableArray<Outputs.TemplateReferenceLine> referenceLines,

            Outputs.TemplateSmallMultiplesOptions? smallMultiplesOptions,

            Outputs.TemplateBarChartSortConfiguration? sortConfiguration,

            Outputs.TemplateTooltipOptions? tooltip,

            Outputs.TemplateAxisDisplayOptions? valueAxis,

            Outputs.TemplateChartAxisLabelOptions? valueLabelOptions,

            Outputs.TemplateVisualPalette? visualPalette)
        {
            BarsArrangement = barsArrangement;
            CategoryAxis = categoryAxis;
            CategoryLabelOptions = categoryLabelOptions;
            ColorLabelOptions = colorLabelOptions;
            ContributionAnalysisDefaults = contributionAnalysisDefaults;
            DataLabels = dataLabels;
            FieldWells = fieldWells;
            Interactions = interactions;
            Legend = legend;
            Orientation = orientation;
            ReferenceLines = referenceLines;
            SmallMultiplesOptions = smallMultiplesOptions;
            SortConfiguration = sortConfiguration;
            Tooltip = tooltip;
            ValueAxis = valueAxis;
            ValueLabelOptions = valueLabelOptions;
            VisualPalette = visualPalette;
        }
    }
}
