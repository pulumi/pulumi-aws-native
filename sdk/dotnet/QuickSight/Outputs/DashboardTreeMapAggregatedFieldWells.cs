// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class DashboardTreeMapAggregatedFieldWells
    {
        /// <summary>
        /// The color field well of a tree map. Values are grouped by aggregations based on group by fields.
        /// </summary>
        public readonly ImmutableArray<Outputs.DashboardMeasureField> Colors;
        /// <summary>
        /// The group by field well of a tree map. Values are grouped based on group by fields.
        /// </summary>
        public readonly ImmutableArray<Outputs.DashboardDimensionField> Groups;
        /// <summary>
        /// The size field well of a tree map. Values are aggregated based on group by fields.
        /// </summary>
        public readonly ImmutableArray<Outputs.DashboardMeasureField> Sizes;

        [OutputConstructor]
        private DashboardTreeMapAggregatedFieldWells(
            ImmutableArray<Outputs.DashboardMeasureField> colors,

            ImmutableArray<Outputs.DashboardDimensionField> groups,

            ImmutableArray<Outputs.DashboardMeasureField> sizes)
        {
            Colors = colors;
            Groups = groups;
            Sizes = sizes;
        }
    }
}
