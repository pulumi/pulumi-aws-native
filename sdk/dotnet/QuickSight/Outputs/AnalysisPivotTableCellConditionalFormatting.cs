// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class AnalysisPivotTableCellConditionalFormatting
    {
        /// <summary>
        /// The field ID of the cell for conditional formatting.
        /// </summary>
        public readonly string FieldId;
        /// <summary>
        /// The scope of the cell for conditional formatting.
        /// </summary>
        public readonly Outputs.AnalysisPivotTableConditionalFormattingScope? Scope;
        /// <summary>
        /// The scope of the cell for conditional formatting.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisPivotTableConditionalFormattingScope> Scopes;
        /// <summary>
        /// The conditional formatting for the text.
        /// </summary>
        public readonly Outputs.AnalysisTextConditionalFormat? TextFormat;

        [OutputConstructor]
        private AnalysisPivotTableCellConditionalFormatting(
            string fieldId,

            Outputs.AnalysisPivotTableConditionalFormattingScope? scope,

            ImmutableArray<Outputs.AnalysisPivotTableConditionalFormattingScope> scopes,

            Outputs.AnalysisTextConditionalFormat? textFormat)
        {
            FieldId = fieldId;
            Scope = scope;
            Scopes = scopes;
            TextFormat = textFormat;
        }
    }
}
