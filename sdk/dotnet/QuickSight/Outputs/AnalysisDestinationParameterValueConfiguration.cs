// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class AnalysisDestinationParameterValueConfiguration
    {
        /// <summary>
        /// The configuration of custom values for the destination parameter in `DestinationParameterValueConfiguration` .
        /// </summary>
        public readonly Outputs.AnalysisCustomValuesConfiguration? CustomValuesConfiguration;
        /// <summary>
        /// The configuration that selects all options.
        /// </summary>
        public readonly Pulumi.AwsNative.QuickSight.AnalysisSelectAllValueOptions? SelectAllValueOptions;
        /// <summary>
        /// A column of a data set.
        /// </summary>
        public readonly Outputs.AnalysisColumnIdentifier? SourceColumn;
        /// <summary>
        /// The source field ID of the destination parameter.
        /// </summary>
        public readonly string? SourceField;
        /// <summary>
        /// The source parameter name of the destination parameter.
        /// </summary>
        public readonly string? SourceParameterName;

        [OutputConstructor]
        private AnalysisDestinationParameterValueConfiguration(
            Outputs.AnalysisCustomValuesConfiguration? customValuesConfiguration,

            Pulumi.AwsNative.QuickSight.AnalysisSelectAllValueOptions? selectAllValueOptions,

            Outputs.AnalysisColumnIdentifier? sourceColumn,

            string? sourceField,

            string? sourceParameterName)
        {
            CustomValuesConfiguration = customValuesConfiguration;
            SelectAllValueOptions = selectAllValueOptions;
            SourceColumn = sourceColumn;
            SourceField = sourceField;
            SourceParameterName = sourceParameterName;
        }
    }
}
