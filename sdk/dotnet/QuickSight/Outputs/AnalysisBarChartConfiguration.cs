// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class AnalysisBarChartConfiguration
    {
        /// <summary>
        /// Determines the arrangement of the bars. The orientation and arrangement of bars determine the type of bar that is used in the visual.
        /// </summary>
        public readonly Pulumi.AwsNative.QuickSight.AnalysisBarsArrangement? BarsArrangement;
        /// <summary>
        /// The label display options (grid line, range, scale, axis step) for bar chart category.
        /// </summary>
        public readonly Outputs.AnalysisAxisDisplayOptions? CategoryAxis;
        /// <summary>
        /// The label options (label text, label visibility and sort icon visibility) for a bar chart.
        /// </summary>
        public readonly Outputs.AnalysisChartAxisLabelOptions? CategoryLabelOptions;
        /// <summary>
        /// The label options (label text, label visibility and sort icon visibility) for a color that is used in a bar chart.
        /// </summary>
        public readonly Outputs.AnalysisChartAxisLabelOptions? ColorLabelOptions;
        /// <summary>
        /// The contribution analysis (anomaly configuration) setup of the visual.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisContributionAnalysisDefault> ContributionAnalysisDefaults;
        /// <summary>
        /// The options that determine if visual data labels are displayed.
        /// </summary>
        public readonly Outputs.AnalysisDataLabelOptions? DataLabels;
        /// <summary>
        /// The field wells of the visual.
        /// </summary>
        public readonly Outputs.AnalysisBarChartFieldWells? FieldWells;
        /// <summary>
        /// The legend display setup of the visual.
        /// </summary>
        public readonly Outputs.AnalysisLegendOptions? Legend;
        /// <summary>
        /// The orientation of the bars in a bar chart visual. There are two valid values in this structure:
        /// 
        /// - `HORIZONTAL` : Used for charts that have horizontal bars. Visuals that use this value are horizontal bar charts, horizontal stacked bar charts, and horizontal stacked 100% bar charts.
        /// - `VERTICAL` : Used for charts that have vertical bars. Visuals that use this value are vertical bar charts, vertical stacked bar charts, and vertical stacked 100% bar charts.
        /// </summary>
        public readonly Pulumi.AwsNative.QuickSight.AnalysisBarChartOrientation? Orientation;
        /// <summary>
        /// The reference line setup of the visual.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisReferenceLine> ReferenceLines;
        /// <summary>
        /// The small multiples setup for the visual.
        /// </summary>
        public readonly Outputs.AnalysisSmallMultiplesOptions? SmallMultiplesOptions;
        /// <summary>
        /// The sort configuration of a `BarChartVisual` .
        /// </summary>
        public readonly Outputs.AnalysisBarChartSortConfiguration? SortConfiguration;
        /// <summary>
        /// The tooltip display setup of the visual.
        /// </summary>
        public readonly Outputs.AnalysisTooltipOptions? Tooltip;
        /// <summary>
        /// The label display options (grid line, range, scale, axis step) for a bar chart value.
        /// </summary>
        public readonly Outputs.AnalysisAxisDisplayOptions? ValueAxis;
        /// <summary>
        /// The label options (label text, label visibility and sort icon visibility) for a bar chart value.
        /// </summary>
        public readonly Outputs.AnalysisChartAxisLabelOptions? ValueLabelOptions;
        /// <summary>
        /// The palette (chart color) display setup of the visual.
        /// </summary>
        public readonly Outputs.AnalysisVisualPalette? VisualPalette;

        [OutputConstructor]
        private AnalysisBarChartConfiguration(
            Pulumi.AwsNative.QuickSight.AnalysisBarsArrangement? barsArrangement,

            Outputs.AnalysisAxisDisplayOptions? categoryAxis,

            Outputs.AnalysisChartAxisLabelOptions? categoryLabelOptions,

            Outputs.AnalysisChartAxisLabelOptions? colorLabelOptions,

            ImmutableArray<Outputs.AnalysisContributionAnalysisDefault> contributionAnalysisDefaults,

            Outputs.AnalysisDataLabelOptions? dataLabels,

            Outputs.AnalysisBarChartFieldWells? fieldWells,

            Outputs.AnalysisLegendOptions? legend,

            Pulumi.AwsNative.QuickSight.AnalysisBarChartOrientation? orientation,

            ImmutableArray<Outputs.AnalysisReferenceLine> referenceLines,

            Outputs.AnalysisSmallMultiplesOptions? smallMultiplesOptions,

            Outputs.AnalysisBarChartSortConfiguration? sortConfiguration,

            Outputs.AnalysisTooltipOptions? tooltip,

            Outputs.AnalysisAxisDisplayOptions? valueAxis,

            Outputs.AnalysisChartAxisLabelOptions? valueLabelOptions,

            Outputs.AnalysisVisualPalette? visualPalette)
        {
            BarsArrangement = barsArrangement;
            CategoryAxis = categoryAxis;
            CategoryLabelOptions = categoryLabelOptions;
            ColorLabelOptions = colorLabelOptions;
            ContributionAnalysisDefaults = contributionAnalysisDefaults;
            DataLabels = dataLabels;
            FieldWells = fieldWells;
            Legend = legend;
            Orientation = orientation;
            ReferenceLines = referenceLines;
            SmallMultiplesOptions = smallMultiplesOptions;
            SortConfiguration = sortConfiguration;
            Tooltip = tooltip;
            ValueAxis = valueAxis;
            ValueLabelOptions = valueLabelOptions;
            VisualPalette = visualPalette;
        }
    }
}
