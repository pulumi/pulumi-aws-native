// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class AnalysisGeospatialLayerItem
    {
        public readonly ImmutableArray<Outputs.AnalysisLayerCustomAction> Actions;
        public readonly Outputs.AnalysisGeospatialDataSourceItem? DataSource;
        public readonly Outputs.AnalysisGeospatialLayerJoinDefinition? JoinDefinition;
        public readonly string? Label;
        public readonly Outputs.AnalysisGeospatialLayerDefinition? LayerDefinition;
        public readonly string LayerId;
        public readonly Pulumi.AwsNative.QuickSight.AnalysisGeospatialLayerType? LayerType;
        public readonly Outputs.AnalysisTooltipOptions? Tooltip;
        public readonly Pulumi.AwsNative.QuickSight.AnalysisVisibility? Visibility;

        [OutputConstructor]
        private AnalysisGeospatialLayerItem(
            ImmutableArray<Outputs.AnalysisLayerCustomAction> actions,

            Outputs.AnalysisGeospatialDataSourceItem? dataSource,

            Outputs.AnalysisGeospatialLayerJoinDefinition? joinDefinition,

            string? label,

            Outputs.AnalysisGeospatialLayerDefinition? layerDefinition,

            string layerId,

            Pulumi.AwsNative.QuickSight.AnalysisGeospatialLayerType? layerType,

            Outputs.AnalysisTooltipOptions? tooltip,

            Pulumi.AwsNative.QuickSight.AnalysisVisibility? visibility)
        {
            Actions = actions;
            DataSource = dataSource;
            JoinDefinition = joinDefinition;
            Label = label;
            LayerDefinition = layerDefinition;
            LayerId = layerId;
            LayerType = layerType;
            Tooltip = tooltip;
            Visibility = visibility;
        }
    }
}
