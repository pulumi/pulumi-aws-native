// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class AnalysisDataLabelType
    {
        /// <summary>
        /// The option that specifies individual data values for labels.
        /// </summary>
        public readonly Outputs.AnalysisDataPathLabelType? DataPathLabelType;
        /// <summary>
        /// Determines the label configuration for the entire field.
        /// </summary>
        public readonly Outputs.AnalysisFieldLabelType? FieldLabelType;
        /// <summary>
        /// Determines the label configuration for the maximum value in a visual.
        /// </summary>
        public readonly Outputs.AnalysisMaximumLabelType? MaximumLabelType;
        /// <summary>
        /// Determines the label configuration for the minimum value in a visual.
        /// </summary>
        public readonly Outputs.AnalysisMinimumLabelType? MinimumLabelType;
        /// <summary>
        /// Determines the label configuration for range end value in a visual.
        /// </summary>
        public readonly Outputs.AnalysisRangeEndsLabelType? RangeEndsLabelType;

        [OutputConstructor]
        private AnalysisDataLabelType(
            Outputs.AnalysisDataPathLabelType? dataPathLabelType,

            Outputs.AnalysisFieldLabelType? fieldLabelType,

            Outputs.AnalysisMaximumLabelType? maximumLabelType,

            Outputs.AnalysisMinimumLabelType? minimumLabelType,

            Outputs.AnalysisRangeEndsLabelType? rangeEndsLabelType)
        {
            DataPathLabelType = dataPathLabelType;
            FieldLabelType = fieldLabelType;
            MaximumLabelType = maximumLabelType;
            MinimumLabelType = minimumLabelType;
            RangeEndsLabelType = rangeEndsLabelType;
        }
    }
}
