// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class AnalysisComputation
    {
        /// <summary>
        /// The forecast computation configuration.
        /// </summary>
        public readonly Outputs.AnalysisForecastComputation? Forecast;
        /// <summary>
        /// The growth rate computation configuration.
        /// </summary>
        public readonly Outputs.AnalysisGrowthRateComputation? GrowthRate;
        /// <summary>
        /// The maximum and minimum computation configuration.
        /// </summary>
        public readonly Outputs.AnalysisMaximumMinimumComputation? MaximumMinimum;
        /// <summary>
        /// The metric comparison computation configuration.
        /// </summary>
        public readonly Outputs.AnalysisMetricComparisonComputation? MetricComparison;
        /// <summary>
        /// The period over period computation configuration.
        /// </summary>
        public readonly Outputs.AnalysisPeriodOverPeriodComputation? PeriodOverPeriod;
        /// <summary>
        /// The period to date computation configuration.
        /// </summary>
        public readonly Outputs.AnalysisPeriodToDateComputation? PeriodToDate;
        /// <summary>
        /// The top movers and bottom movers computation setup.
        /// </summary>
        public readonly Outputs.AnalysisTopBottomMoversComputation? TopBottomMovers;
        /// <summary>
        /// The top ranked and bottom ranked computation configuration.
        /// </summary>
        public readonly Outputs.AnalysisTopBottomRankedComputation? TopBottomRanked;
        /// <summary>
        /// The total aggregation computation configuration.
        /// </summary>
        public readonly Outputs.AnalysisTotalAggregationComputation? TotalAggregation;
        /// <summary>
        /// The unique values computation configuration.
        /// </summary>
        public readonly Outputs.AnalysisUniqueValuesComputation? UniqueValues;

        [OutputConstructor]
        private AnalysisComputation(
            Outputs.AnalysisForecastComputation? forecast,

            Outputs.AnalysisGrowthRateComputation? growthRate,

            Outputs.AnalysisMaximumMinimumComputation? maximumMinimum,

            Outputs.AnalysisMetricComparisonComputation? metricComparison,

            Outputs.AnalysisPeriodOverPeriodComputation? periodOverPeriod,

            Outputs.AnalysisPeriodToDateComputation? periodToDate,

            Outputs.AnalysisTopBottomMoversComputation? topBottomMovers,

            Outputs.AnalysisTopBottomRankedComputation? topBottomRanked,

            Outputs.AnalysisTotalAggregationComputation? totalAggregation,

            Outputs.AnalysisUniqueValuesComputation? uniqueValues)
        {
            Forecast = forecast;
            GrowthRate = growthRate;
            MaximumMinimum = maximumMinimum;
            MetricComparison = metricComparison;
            PeriodOverPeriod = periodOverPeriod;
            PeriodToDate = periodToDate;
            TopBottomMovers = topBottomMovers;
            TopBottomRanked = topBottomRanked;
            TotalAggregation = totalAggregation;
            UniqueValues = uniqueValues;
        }
    }
}
