// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class DashboardComputation
    {
        /// <summary>
        /// The forecast computation configuration.
        /// </summary>
        public readonly Outputs.DashboardForecastComputation? Forecast;
        /// <summary>
        /// The growth rate computation configuration.
        /// </summary>
        public readonly Outputs.DashboardGrowthRateComputation? GrowthRate;
        /// <summary>
        /// The maximum and minimum computation configuration.
        /// </summary>
        public readonly Outputs.DashboardMaximumMinimumComputation? MaximumMinimum;
        /// <summary>
        /// The metric comparison computation configuration.
        /// </summary>
        public readonly Outputs.DashboardMetricComparisonComputation? MetricComparison;
        /// <summary>
        /// The period over period computation configuration.
        /// </summary>
        public readonly Outputs.DashboardPeriodOverPeriodComputation? PeriodOverPeriod;
        /// <summary>
        /// The period to `DataSetIdentifier` computation configuration.
        /// </summary>
        public readonly Outputs.DashboardPeriodToDateComputation? PeriodToDate;
        /// <summary>
        /// The top movers and bottom movers computation configuration.
        /// </summary>
        public readonly Outputs.DashboardTopBottomMoversComputation? TopBottomMovers;
        /// <summary>
        /// The top ranked and bottom ranked computation configuration.
        /// </summary>
        public readonly Outputs.DashboardTopBottomRankedComputation? TopBottomRanked;
        /// <summary>
        /// The total aggregation computation configuration.
        /// </summary>
        public readonly Outputs.DashboardTotalAggregationComputation? TotalAggregation;
        /// <summary>
        /// The unique values computation configuration.
        /// </summary>
        public readonly Outputs.DashboardUniqueValuesComputation? UniqueValues;

        [OutputConstructor]
        private DashboardComputation(
            Outputs.DashboardForecastComputation? forecast,

            Outputs.DashboardGrowthRateComputation? growthRate,

            Outputs.DashboardMaximumMinimumComputation? maximumMinimum,

            Outputs.DashboardMetricComparisonComputation? metricComparison,

            Outputs.DashboardPeriodOverPeriodComputation? periodOverPeriod,

            Outputs.DashboardPeriodToDateComputation? periodToDate,

            Outputs.DashboardTopBottomMoversComputation? topBottomMovers,

            Outputs.DashboardTopBottomRankedComputation? topBottomRanked,

            Outputs.DashboardTotalAggregationComputation? totalAggregation,

            Outputs.DashboardUniqueValuesComputation? uniqueValues)
        {
            Forecast = forecast;
            GrowthRate = growthRate;
            MaximumMinimum = maximumMinimum;
            MetricComparison = metricComparison;
            PeriodOverPeriod = periodOverPeriod;
            PeriodToDate = periodToDate;
            TopBottomMovers = topBottomMovers;
            TopBottomRanked = topBottomRanked;
            TotalAggregation = totalAggregation;
            UniqueValues = uniqueValues;
        }
    }
}
