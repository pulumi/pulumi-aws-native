// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class AnalysisLayerCustomAction
    {
        /// <summary>
        /// A list of `LayerCustomActionOperations` .
        /// 
        /// This is a union type structure. For this structure to be valid, only one of the attributes can be defined.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisLayerCustomActionOperation> ActionOperations;
        /// <summary>
        /// The ID of the custom action.
        /// </summary>
        public readonly string CustomActionId;
        /// <summary>
        /// The name of the custom action.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of the `LayerCustomAction` .
        /// </summary>
        public readonly Pulumi.AwsNative.QuickSight.AnalysisWidgetStatus? Status;
        /// <summary>
        /// The trigger of the `LayerCustomAction` .
        /// 
        /// Valid values are defined as follows:
        /// 
        /// - `DATA_POINT_CLICK` : Initiates a custom action by a left pointer click on a data point.
        /// - `DATA_POINT_MENU` : Initiates a custom action by right pointer click from the menu.
        /// </summary>
        public readonly Pulumi.AwsNative.QuickSight.AnalysisLayerCustomActionTrigger Trigger;

        [OutputConstructor]
        private AnalysisLayerCustomAction(
            ImmutableArray<Outputs.AnalysisLayerCustomActionOperation> actionOperations,

            string customActionId,

            string name,

            Pulumi.AwsNative.QuickSight.AnalysisWidgetStatus? status,

            Pulumi.AwsNative.QuickSight.AnalysisLayerCustomActionTrigger trigger)
        {
            ActionOperations = actionOperations;
            CustomActionId = customActionId;
            Name = name;
            Status = status;
            Trigger = trigger;
        }
    }
}
