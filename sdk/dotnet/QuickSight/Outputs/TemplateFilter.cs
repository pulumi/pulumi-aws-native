// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class TemplateFilter
    {
        /// <summary>
        /// A `CategoryFilter` filters text values.
        /// 
        /// For more information, see [Adding text filters](https://docs.aws.amazon.com/quicksight/latest/user/add-a-text-filter-data-prep.html) in the *Amazon QuickSight User Guide* .
        /// </summary>
        public readonly Outputs.TemplateCategoryFilter? CategoryFilter;
        /// <summary>
        /// A `NestedFilter` filters data with a subset of data that is defined by the nested inner filter.
        /// </summary>
        public readonly Outputs.TemplateNestedFilter? NestedFilter;
        /// <summary>
        /// A `NumericEqualityFilter` filters numeric values that equal or do not equal a given numeric value.
        /// </summary>
        public readonly Outputs.TemplateNumericEqualityFilter? NumericEqualityFilter;
        /// <summary>
        /// A `NumericRangeFilter` filters numeric values that are either inside or outside a given numeric range.
        /// </summary>
        public readonly Outputs.TemplateNumericRangeFilter? NumericRangeFilter;
        /// <summary>
        /// A `RelativeDatesFilter` filters date values that are relative to a given date.
        /// </summary>
        public readonly Outputs.TemplateRelativeDatesFilter? RelativeDatesFilter;
        /// <summary>
        /// A `TimeEqualityFilter` filters date-time values that equal or do not equal a given date/time value.
        /// </summary>
        public readonly Outputs.TemplateTimeEqualityFilter? TimeEqualityFilter;
        /// <summary>
        /// A `TimeRangeFilter` filters date-time values that are either inside or outside a given date/time range.
        /// </summary>
        public readonly Outputs.TemplateTimeRangeFilter? TimeRangeFilter;
        /// <summary>
        /// A `TopBottomFilter` filters data to the top or bottom values for a given column.
        /// </summary>
        public readonly Outputs.TemplateTopBottomFilter? TopBottomFilter;

        [OutputConstructor]
        private TemplateFilter(
            Outputs.TemplateCategoryFilter? categoryFilter,

            Outputs.TemplateNestedFilter? nestedFilter,

            Outputs.TemplateNumericEqualityFilter? numericEqualityFilter,

            Outputs.TemplateNumericRangeFilter? numericRangeFilter,

            Outputs.TemplateRelativeDatesFilter? relativeDatesFilter,

            Outputs.TemplateTimeEqualityFilter? timeEqualityFilter,

            Outputs.TemplateTimeRangeFilter? timeRangeFilter,

            Outputs.TemplateTopBottomFilter? topBottomFilter)
        {
            CategoryFilter = categoryFilter;
            NestedFilter = nestedFilter;
            NumericEqualityFilter = numericEqualityFilter;
            NumericRangeFilter = numericRangeFilter;
            RelativeDatesFilter = relativeDatesFilter;
            TimeEqualityFilter = timeEqualityFilter;
            TimeRangeFilter = timeRangeFilter;
            TopBottomFilter = topBottomFilter;
        }
    }
}
