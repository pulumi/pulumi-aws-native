// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class AnalysisDefinition
    {
        public readonly Outputs.AnalysisDefaults? AnalysisDefaults;
        /// <summary>
        /// An array of calculated field definitions for the analysis.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisCalculatedField> CalculatedFields;
        /// <summary>
        /// An array of analysis-level column configurations. Column configurations can be used to set default formatting for a column to be used throughout an analysis.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisColumnConfiguration> ColumnConfigurations;
        /// <summary>
        /// An array of dataset identifier declarations. This mapping allows the usage of dataset identifiers instead of dataset ARNs throughout analysis sub-structures.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisDataSetIdentifierDeclaration> DataSetIdentifierDeclarations;
        /// <summary>
        /// Filter definitions for an analysis.
        /// 
        /// For more information, see [Filtering Data in Amazon QuickSight](https://docs.aws.amazon.com/quicksight/latest/user/adding-a-filter.html) in the *Amazon QuickSight User Guide* .
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisFilterGroup> FilterGroups;
        /// <summary>
        /// An array of option definitions for an analysis.
        /// </summary>
        public readonly Outputs.AnalysisAssetOptions? Options;
        /// <summary>
        /// An array of parameter declarations for an analysis.
        /// 
        /// Parameters are named variables that can transfer a value for use by an action or an object.
        /// 
        /// For more information, see [Parameters in Amazon QuickSight](https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html) in the *Amazon QuickSight User Guide* .
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisParameterDeclaration> ParameterDeclarations;
        public readonly Outputs.AnalysisQueryExecutionOptions? QueryExecutionOptions;
        /// <summary>
        /// An array of sheet definitions for an analysis. Each `SheetDefinition` provides detailed information about a sheet within this analysis.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnalysisSheetDefinition> Sheets;
        public readonly ImmutableArray<Outputs.AnalysisStaticFile> StaticFiles;

        [OutputConstructor]
        private AnalysisDefinition(
            Outputs.AnalysisDefaults? analysisDefaults,

            ImmutableArray<Outputs.AnalysisCalculatedField> calculatedFields,

            ImmutableArray<Outputs.AnalysisColumnConfiguration> columnConfigurations,

            ImmutableArray<Outputs.AnalysisDataSetIdentifierDeclaration> dataSetIdentifierDeclarations,

            ImmutableArray<Outputs.AnalysisFilterGroup> filterGroups,

            Outputs.AnalysisAssetOptions? options,

            ImmutableArray<Outputs.AnalysisParameterDeclaration> parameterDeclarations,

            Outputs.AnalysisQueryExecutionOptions? queryExecutionOptions,

            ImmutableArray<Outputs.AnalysisSheetDefinition> sheets,

            ImmutableArray<Outputs.AnalysisStaticFile> staticFiles)
        {
            AnalysisDefaults = analysisDefaults;
            CalculatedFields = calculatedFields;
            ColumnConfigurations = columnConfigurations;
            DataSetIdentifierDeclarations = dataSetIdentifierDeclarations;
            FilterGroups = filterGroups;
            Options = options;
            ParameterDeclarations = parameterDeclarations;
            QueryExecutionOptions = queryExecutionOptions;
            Sheets = sheets;
            StaticFiles = staticFiles;
        }
    }
}
