// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight.Outputs
{

    [OutputType]
    public sealed class TopicNamedEntity
    {
        /// <summary>
        /// A structure that represents a named entity.
        /// </summary>
        public readonly ImmutableArray<Outputs.TopicNamedEntityDefinition> Definition;
        /// <summary>
        /// The description of the named entity.
        /// </summary>
        public readonly string? EntityDescription;
        /// <summary>
        /// The name of the named entity.
        /// </summary>
        public readonly string EntityName;
        /// <summary>
        /// The other names or aliases for the named entity.
        /// </summary>
        public readonly ImmutableArray<string> EntitySynonyms;
        /// <summary>
        /// A structure that represents a semantic entity type.
        /// </summary>
        public readonly Outputs.TopicSemanticEntityType? SemanticEntityType;

        [OutputConstructor]
        private TopicNamedEntity(
            ImmutableArray<Outputs.TopicNamedEntityDefinition> definition,

            string? entityDescription,

            string entityName,

            ImmutableArray<string> entitySynonyms,

            Outputs.TopicSemanticEntityType? semanticEntityType)
        {
            Definition = definition;
            EntityDescription = entityDescription;
            EntityName = entityName;
            EntitySynonyms = entitySynonyms;
            SemanticEntityType = semanticEntityType;
        }
    }
}
