// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight
{
    public static class GetAnalysis
    {
        /// <summary>
        /// Definition of the AWS::QuickSight::Analysis Resource Type.
        /// </summary>
        public static Task<GetAnalysisResult> InvokeAsync(GetAnalysisArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAnalysisResult>("aws-native:quicksight:getAnalysis", args ?? new GetAnalysisArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of the AWS::QuickSight::Analysis Resource Type.
        /// </summary>
        public static Output<GetAnalysisResult> Invoke(GetAnalysisInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAnalysisResult>("aws-native:quicksight:getAnalysis", args ?? new GetAnalysisInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnalysisArgs : global::Pulumi.InvokeArgs
    {
        [Input("analysisId", required: true)]
        public string AnalysisId { get; set; } = null!;

        [Input("awsAccountId", required: true)]
        public string AwsAccountId { get; set; } = null!;

        public GetAnalysisArgs()
        {
        }
        public static new GetAnalysisArgs Empty => new GetAnalysisArgs();
    }

    public sealed class GetAnalysisInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("analysisId", required: true)]
        public Input<string> AnalysisId { get; set; } = null!;

        [Input("awsAccountId", required: true)]
        public Input<string> AwsAccountId { get; set; } = null!;

        public GetAnalysisInvokeArgs()
        {
        }
        public static new GetAnalysisInvokeArgs Empty => new GetAnalysisInvokeArgs();
    }


    [OutputType]
    public sealed class GetAnalysisResult
    {
        public readonly string? Arn;
        public readonly string? CreatedTime;
        public readonly ImmutableArray<string> DataSetArns;
        public readonly ImmutableArray<Outputs.AnalysisError> Errors;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.AnalysisResourcePermission> Permissions;
        public readonly ImmutableArray<Outputs.AnalysisTag> Tags;
        public readonly string? ThemeArn;

        [OutputConstructor]
        private GetAnalysisResult(
            string? arn,

            string? createdTime,

            ImmutableArray<string> dataSetArns,

            ImmutableArray<Outputs.AnalysisError> errors,

            string? name,

            ImmutableArray<Outputs.AnalysisResourcePermission> permissions,

            ImmutableArray<Outputs.AnalysisTag> tags,

            string? themeArn)
        {
            Arn = arn;
            CreatedTime = createdTime;
            DataSetArns = dataSetArns;
            Errors = errors;
            Name = name;
            Permissions = permissions;
            Tags = tags;
            ThemeArn = themeArn;
        }
    }
}
