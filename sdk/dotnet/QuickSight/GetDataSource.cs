// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.QuickSight
{
    public static class GetDataSource
    {
        /// <summary>
        /// Definition of the AWS::QuickSight::DataSource Resource Type.
        /// </summary>
        public static Task<GetDataSourceResult> InvokeAsync(GetDataSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataSourceResult>("aws-native:quicksight:getDataSource", args ?? new GetDataSourceArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of the AWS::QuickSight::DataSource Resource Type.
        /// </summary>
        public static Output<GetDataSourceResult> Invoke(GetDataSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceResult>("aws-native:quicksight:getDataSource", args ?? new GetDataSourceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of the AWS::QuickSight::DataSource Resource Type.
        /// </summary>
        public static Output<GetDataSourceResult> Invoke(GetDataSourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceResult>("aws-native:quicksight:getDataSource", args ?? new GetDataSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The AWS account ID.
        /// </summary>
        [Input("awsAccountId", required: true)]
        public string AwsAccountId { get; set; } = null!;

        /// <summary>
        /// An ID for the data source. This ID is unique per AWS Region for each AWS account.
        /// </summary>
        [Input("dataSourceId", required: true)]
        public string DataSourceId { get; set; } = null!;

        public GetDataSourceArgs()
        {
        }
        public static new GetDataSourceArgs Empty => new GetDataSourceArgs();
    }

    public sealed class GetDataSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The AWS account ID.
        /// </summary>
        [Input("awsAccountId", required: true)]
        public Input<string> AwsAccountId { get; set; } = null!;

        /// <summary>
        /// An ID for the data source. This ID is unique per AWS Region for each AWS account.
        /// </summary>
        [Input("dataSourceId", required: true)]
        public Input<string> DataSourceId { get; set; } = null!;

        public GetDataSourceInvokeArgs()
        {
        }
        public static new GetDataSourceInvokeArgs Empty => new GetDataSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataSourceResult
    {
        /// <summary>
        /// &lt;p&gt;A set of alternate data source parameters that you want to share for the credentials
        ///             stored with this data source. The credentials are applied in tandem with the data source
        ///             parameters when you copy a data source by using a create or update request. The API
        ///             operation compares the &lt;code&gt;DataSourceParameters&lt;/code&gt; structure that's in the request
        ///             with the structures in the &lt;code&gt;AlternateDataSourceParameters&lt;/code&gt; allow list. If the
        ///             structures are an exact match, the request is allowed to use the credentials from this
        ///             existing data source. If the &lt;code&gt;AlternateDataSourceParameters&lt;/code&gt; list is null,
        ///             the &lt;code&gt;Credentials&lt;/code&gt; originally used with this &lt;code&gt;DataSourceParameters&lt;/code&gt;
        ///             are automatically allowed.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.DataSourceParameters> AlternateDataSourceParameters;
        /// <summary>
        /// &lt;p&gt;The Amazon Resource Name (ARN) of the data source.&lt;/p&gt;
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// &lt;p&gt;The time that this data source was created.&lt;/p&gt;
        /// </summary>
        public readonly string? CreatedTime;
        /// <summary>
        /// The parameters that Amazon Quick Sight uses to connect to your underlying source.
        /// </summary>
        public readonly Outputs.DataSourceParameters? DataSourceParameters;
        /// <summary>
        /// Error information from the last update or the creation of the data source.
        /// </summary>
        public readonly Outputs.DataSourceErrorInfo? ErrorInfo;
        /// <summary>
        /// &lt;p&gt;The last time that this data source was updated.&lt;/p&gt;
        /// </summary>
        public readonly string? LastUpdatedTime;
        /// <summary>
        /// A display name for the data source.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// A list of resource permissions on the data source.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataSourceResourcePermission> Permissions;
        /// <summary>
        /// Secure Socket Layer (SSL) properties that apply when Amazon Quick Sight connects to your underlying source.
        /// </summary>
        public readonly Outputs.DataSourceSslProperties? SslProperties;
        /// <summary>
        /// The HTTP status of the request.
        /// </summary>
        public readonly Pulumi.AwsNative.QuickSight.DataSourceResourceStatus? Status;
        /// <summary>
        /// Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// Use this parameter only when you want Amazon Quick Sight to use a VPC connection when connecting to your underlying source.
        /// </summary>
        public readonly Outputs.DataSourceVpcConnectionProperties? VpcConnectionProperties;

        [OutputConstructor]
        private GetDataSourceResult(
            ImmutableArray<Outputs.DataSourceParameters> alternateDataSourceParameters,

            string? arn,

            string? createdTime,

            Outputs.DataSourceParameters? dataSourceParameters,

            Outputs.DataSourceErrorInfo? errorInfo,

            string? lastUpdatedTime,

            string? name,

            ImmutableArray<Outputs.DataSourceResourcePermission> permissions,

            Outputs.DataSourceSslProperties? sslProperties,

            Pulumi.AwsNative.QuickSight.DataSourceResourceStatus? status,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            Outputs.DataSourceVpcConnectionProperties? vpcConnectionProperties)
        {
            AlternateDataSourceParameters = alternateDataSourceParameters;
            Arn = arn;
            CreatedTime = createdTime;
            DataSourceParameters = dataSourceParameters;
            ErrorInfo = errorInfo;
            LastUpdatedTime = lastUpdatedTime;
            Name = name;
            Permissions = permissions;
            SslProperties = sslProperties;
            Status = status;
            Tags = tags;
            VpcConnectionProperties = vpcConnectionProperties;
        }
    }
}
