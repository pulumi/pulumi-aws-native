// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53Resolver
{
    /// <summary>
    /// Resource schema for AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.
    /// </summary>
    [AwsNativeResourceType("aws-native:route53resolver:ResolverQueryLoggingConfigAssociation")]
    public partial class ResolverQueryLoggingConfigAssociation : Pulumi.CustomResource
    {
        /// <summary>
        /// Rfc3339TimeString
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// ResolverQueryLogConfigAssociationError
        /// </summary>
        [Output("error")]
        public Output<Pulumi.AwsNative.Route53Resolver.ResolverQueryLoggingConfigAssociationError> Error { get; private set; } = null!;

        /// <summary>
        /// ResolverQueryLogConfigAssociationErrorMessage
        /// </summary>
        [Output("errorMessage")]
        public Output<string> ErrorMessage { get; private set; } = null!;

        /// <summary>
        /// ResolverQueryLogConfigId
        /// </summary>
        [Output("resolverQueryLogConfigId")]
        public Output<string?> ResolverQueryLogConfigId { get; private set; } = null!;

        /// <summary>
        /// ResourceId
        /// </summary>
        [Output("resourceId")]
        public Output<string?> ResourceId { get; private set; } = null!;

        /// <summary>
        /// ResolverQueryLogConfigAssociationStatus
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Route53Resolver.ResolverQueryLoggingConfigAssociationStatus> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ResolverQueryLoggingConfigAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResolverQueryLoggingConfigAssociation(string name, ResolverQueryLoggingConfigAssociationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:route53resolver:ResolverQueryLoggingConfigAssociation", name, args ?? new ResolverQueryLoggingConfigAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResolverQueryLoggingConfigAssociation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:route53resolver:ResolverQueryLoggingConfigAssociation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResolverQueryLoggingConfigAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResolverQueryLoggingConfigAssociation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ResolverQueryLoggingConfigAssociation(name, id, options);
        }
    }

    public sealed class ResolverQueryLoggingConfigAssociationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ResolverQueryLogConfigId
        /// </summary>
        [Input("resolverQueryLogConfigId")]
        public Input<string>? ResolverQueryLogConfigId { get; set; }

        /// <summary>
        /// ResourceId
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public ResolverQueryLoggingConfigAssociationArgs()
        {
        }
    }
}
