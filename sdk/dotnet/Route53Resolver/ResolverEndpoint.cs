// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53Resolver
{
    /// <summary>
    /// Resource type definition for AWS::Route53Resolver::ResolverEndpoint
    /// </summary>
    [AwsNativeResourceType("aws-native:route53resolver:ResolverEndpoint")]
    public partial class ResolverEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the resolver endpoint, such as arn:aws:route53resolver:us-east-1:123456789012:resolver-endpoint/resolver-endpoint-a1bzhi.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:
        /// - INBOUND: allows DNS queries to your VPC from your network 
        /// - OUTBOUND: allows DNS queries from your VPC to your network 
        /// - INBOUND_DELEGATION: allows DNS queries to your VPC from your network with authoritative answers from private hosted zones
        /// </summary>
        [Output("direction")]
        public Output<string> Direction { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC that you want to create the resolver endpoint in.
        /// </summary>
        [Output("hostVpcId")]
        public Output<string> HostVpcId { get; private set; } = null!;

        /// <summary>
        /// The number of IP addresses that the resolver endpoint can use for DNS queries.
        /// </summary>
        [Output("ipAddressCount")]
        public Output<string> IpAddressCount { get; private set; } = null!;

        /// <summary>
        /// The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.
        /// </summary>
        [Output("ipAddresses")]
        public Output<ImmutableArray<Outputs.ResolverEndpointIpAddressRequest>> IpAddresses { get; private set; } = null!;

        /// <summary>
        /// A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The ARN (Amazon Resource Name) for the Outpost.
        /// </summary>
        [Output("outpostArn")]
        public Output<string?> OutpostArn { get; private set; } = null!;

        /// <summary>
        /// The Amazon EC2 instance type.
        /// </summary>
        [Output("preferredInstanceType")]
        public Output<string?> PreferredInstanceType { get; private set; } = null!;

        /// <summary>
        /// Protocols used for the endpoint. DoH-FIPS is applicable for inbound endpoints only.
        /// </summary>
        [Output("protocols")]
        public Output<ImmutableArray<string>> Protocols { get; private set; } = null!;

        /// <summary>
        /// The ID of the resolver endpoint.
        /// </summary>
        [Output("resolverEndpointId")]
        public Output<string> ResolverEndpointId { get; private set; } = null!;

        /// <summary>
        /// The Resolver endpoint IP address type.
        /// </summary>
        [Output("resolverEndpointType")]
        public Output<Pulumi.AwsNative.Route53Resolver.ResolverEndpointType?> ResolverEndpointType { get; private set; } = null!;

        /// <summary>
        /// The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.
        /// </summary>
        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a ResolverEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResolverEndpoint(string name, ResolverEndpointArgs args, CustomResourceOptions? options = null)
            : base("aws-native:route53resolver:ResolverEndpoint", name, args ?? new ResolverEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResolverEndpoint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:route53resolver:ResolverEndpoint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "direction",
                    "outpostArn",
                    "preferredInstanceType",
                    "securityGroupIds[*]",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResolverEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResolverEndpoint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ResolverEndpoint(name, id, options);
        }
    }

    public sealed class ResolverEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:
        /// - INBOUND: allows DNS queries to your VPC from your network 
        /// - OUTBOUND: allows DNS queries from your VPC to your network 
        /// - INBOUND_DELEGATION: allows DNS queries to your VPC from your network with authoritative answers from private hosted zones
        /// </summary>
        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        [Input("ipAddresses", required: true)]
        private InputList<Inputs.ResolverEndpointIpAddressRequestArgs>? _ipAddresses;

        /// <summary>
        /// The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.
        /// </summary>
        public InputList<Inputs.ResolverEndpointIpAddressRequestArgs> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<Inputs.ResolverEndpointIpAddressRequestArgs>());
            set => _ipAddresses = value;
        }

        /// <summary>
        /// A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ARN (Amazon Resource Name) for the Outpost.
        /// </summary>
        [Input("outpostArn")]
        public Input<string>? OutpostArn { get; set; }

        /// <summary>
        /// The Amazon EC2 instance type.
        /// </summary>
        [Input("preferredInstanceType")]
        public Input<string>? PreferredInstanceType { get; set; }

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// Protocols used for the endpoint. DoH-FIPS is applicable for inbound endpoints only.
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        /// <summary>
        /// The Resolver endpoint IP address type.
        /// </summary>
        [Input("resolverEndpointType")]
        public Input<Pulumi.AwsNative.Route53Resolver.ResolverEndpointType>? ResolverEndpointType { get; set; }

        [Input("securityGroupIds", required: true)]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public ResolverEndpointArgs()
        {
        }
        public static new ResolverEndpointArgs Empty => new ResolverEndpointArgs();
    }
}
