// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53Resolver
{
    /// <summary>
    /// Resource Type definition for AWS::Route53Resolver::ResolverEndpoint
    /// </summary>
    [Obsolete(@"ResolverEndpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:route53resolver:ResolverEndpoint")]
    public partial class ResolverEndpoint : Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("direction")]
        public Output<string> Direction { get; private set; } = null!;

        [Output("hostVPCId")]
        public Output<string> HostVPCId { get; private set; } = null!;

        [Output("ipAddressCount")]
        public Output<string> IpAddressCount { get; private set; } = null!;

        [Output("ipAddresses")]
        public Output<ImmutableArray<Outputs.ResolverEndpointIpAddressRequest>> IpAddresses { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("resolverEndpointId")]
        public Output<string> ResolverEndpointId { get; private set; } = null!;

        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.ResolverEndpointTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a ResolverEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResolverEndpoint(string name, ResolverEndpointArgs args, CustomResourceOptions? options = null)
            : base("aws-native:route53resolver:ResolverEndpoint", name, args ?? new ResolverEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResolverEndpoint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:route53resolver:ResolverEndpoint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResolverEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResolverEndpoint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ResolverEndpoint(name, id, options);
        }
    }

    public sealed class ResolverEndpointArgs : Pulumi.ResourceArgs
    {
        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        [Input("ipAddresses", required: true)]
        private InputList<Inputs.ResolverEndpointIpAddressRequestArgs>? _ipAddresses;
        public InputList<Inputs.ResolverEndpointIpAddressRequestArgs> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<Inputs.ResolverEndpointIpAddressRequestArgs>());
            set => _ipAddresses = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("securityGroupIds", required: true)]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("tags")]
        private InputList<Inputs.ResolverEndpointTagArgs>? _tags;
        public InputList<Inputs.ResolverEndpointTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ResolverEndpointTagArgs>());
            set => _tags = value;
        }

        public ResolverEndpointArgs()
        {
        }
    }
}
