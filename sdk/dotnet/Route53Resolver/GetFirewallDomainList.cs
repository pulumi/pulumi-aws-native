// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53Resolver
{
    public static class GetFirewallDomainList
    {
        /// <summary>
        /// Resource schema for AWS::Route53Resolver::FirewallDomainList.
        /// </summary>
        public static Task<GetFirewallDomainListResult> InvokeAsync(GetFirewallDomainListArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFirewallDomainListResult>("aws-native:route53resolver:getFirewallDomainList", args ?? new GetFirewallDomainListArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Route53Resolver::FirewallDomainList.
        /// </summary>
        public static Output<GetFirewallDomainListResult> Invoke(GetFirewallDomainListInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFirewallDomainListResult>("aws-native:route53resolver:getFirewallDomainList", args ?? new GetFirewallDomainListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallDomainListArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ResourceId
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetFirewallDomainListArgs()
        {
        }
    }

    public sealed class GetFirewallDomainListInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ResourceId
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetFirewallDomainListInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFirewallDomainListResult
    {
        /// <summary>
        /// Arn
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Rfc3339TimeString
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// The id of the creator request.
        /// </summary>
        public readonly string? CreatorRequestId;
        /// <summary>
        /// Count
        /// </summary>
        public readonly int? DomainCount;
        /// <summary>
        /// ResourceId
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// ServicePrincipal
        /// </summary>
        public readonly string? ManagedOwnerName;
        /// <summary>
        /// Rfc3339TimeString
        /// </summary>
        public readonly string? ModificationTime;
        /// <summary>
        /// ResolverFirewallDomainList, possible values are COMPLETE, DELETING, UPDATING, COMPLETE_IMPORT_FAILED, IMPORTING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
        /// </summary>
        public readonly Pulumi.AwsNative.Route53Resolver.FirewallDomainListStatus? Status;
        /// <summary>
        /// FirewallDomainListAssociationStatus
        /// </summary>
        public readonly string? StatusMessage;
        /// <summary>
        /// Tags
        /// </summary>
        public readonly ImmutableArray<Outputs.FirewallDomainListTag> Tags;

        [OutputConstructor]
        private GetFirewallDomainListResult(
            string? arn,

            string? creationTime,

            string? creatorRequestId,

            int? domainCount,

            string? id,

            string? managedOwnerName,

            string? modificationTime,

            Pulumi.AwsNative.Route53Resolver.FirewallDomainListStatus? status,

            string? statusMessage,

            ImmutableArray<Outputs.FirewallDomainListTag> tags)
        {
            Arn = arn;
            CreationTime = creationTime;
            CreatorRequestId = creatorRequestId;
            DomainCount = domainCount;
            Id = id;
            ManagedOwnerName = managedOwnerName;
            ModificationTime = modificationTime;
            Status = status;
            StatusMessage = statusMessage;
            Tags = tags;
        }
    }
}
