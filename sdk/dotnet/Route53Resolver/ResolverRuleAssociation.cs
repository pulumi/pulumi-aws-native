// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53Resolver
{
    /// <summary>
    /// Resource Type definition for AWS::Route53Resolver::ResolverRuleAssociation
    /// </summary>
    [Obsolete(@"ResolverRuleAssociation is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:route53resolver:ResolverRuleAssociation")]
    public partial class ResolverRuleAssociation : Pulumi.CustomResource
    {
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("resolverRuleAssociationId")]
        public Output<string> ResolverRuleAssociationId { get; private set; } = null!;

        [Output("resolverRuleId")]
        public Output<string> ResolverRuleId { get; private set; } = null!;

        [Output("vPCId")]
        public Output<string> VPCId { get; private set; } = null!;


        /// <summary>
        /// Create a ResolverRuleAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResolverRuleAssociation(string name, ResolverRuleAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:route53resolver:ResolverRuleAssociation", name, args ?? new ResolverRuleAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResolverRuleAssociation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:route53resolver:ResolverRuleAssociation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResolverRuleAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResolverRuleAssociation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ResolverRuleAssociation(name, id, options);
        }
    }

    public sealed class ResolverRuleAssociationArgs : Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resolverRuleId", required: true)]
        public Input<string> ResolverRuleId { get; set; } = null!;

        [Input("vPCId", required: true)]
        public Input<string> VPCId { get; set; } = null!;

        public ResolverRuleAssociationArgs()
        {
        }
    }
}
