// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ECS
{
    public static class GetCluster
    {
        /// <summary>
        /// Create an Elastic Container Service (ECS) cluster.
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("aws-native:ecs:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Create an Elastic Container Service (ECS) cluster.
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws-native:ecs:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        public GetClusterArgs()
        {
        }
    }

    public sealed class GetClusterInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        public GetClusterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon ECS cluster, such as arn:aws:ecs:us-east-2:123456789012:cluster/MyECSCluster.
        /// </summary>
        public readonly string? Arn;
        public readonly ImmutableArray<string> CapacityProviders;
        public readonly ImmutableArray<Outputs.ClusterSettings> ClusterSettings;
        public readonly Outputs.ClusterConfiguration? Configuration;
        public readonly ImmutableArray<Outputs.ClusterCapacityProviderStrategyItem> DefaultCapacityProviderStrategy;
        public readonly ImmutableArray<Outputs.ClusterTag> Tags;

        [OutputConstructor]
        private GetClusterResult(
            string? arn,

            ImmutableArray<string> capacityProviders,

            ImmutableArray<Outputs.ClusterSettings> clusterSettings,

            Outputs.ClusterConfiguration? configuration,

            ImmutableArray<Outputs.ClusterCapacityProviderStrategyItem> defaultCapacityProviderStrategy,

            ImmutableArray<Outputs.ClusterTag> tags)
        {
            Arn = arn;
            CapacityProviders = capacityProviders;
            ClusterSettings = clusterSettings;
            Configuration = configuration;
            DefaultCapacityProviderStrategy = defaultCapacityProviderStrategy;
            Tags = tags;
        }
    }
}
