// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppFlow.Outputs
{

    [OutputType]
    public sealed class ConnectorProfileCustomConnectorProfileCredentials
    {
        /// <summary>
        /// The API key credentials required for API key authentication.
        /// </summary>
        public readonly Outputs.ConnectorProfileApiKeyCredentials? ApiKey;
        /// <summary>
        /// The authentication type that the custom connector uses for authenticating while creating a connector profile.
        /// </summary>
        public readonly Pulumi.AwsNative.AppFlow.ConnectorProfileAuthenticationType AuthenticationType;
        /// <summary>
        /// The basic auth credentials required for basic authentication.
        /// </summary>
        public readonly Outputs.ConnectorProfileBasicAuthCredentials? Basic;
        /// <summary>
        /// The custom credentials required for custom authentication.
        /// </summary>
        public readonly Outputs.ConnectorProfileCustomAuthCredentials? Custom;
        /// <summary>
        /// The OAuth 2.0 credentials required for OAuth 2.0 authentication.
        /// </summary>
        public readonly Outputs.ConnectorProfileOAuth2Credentials? Oauth2;

        [OutputConstructor]
        private ConnectorProfileCustomConnectorProfileCredentials(
            Outputs.ConnectorProfileApiKeyCredentials? apiKey,

            Pulumi.AwsNative.AppFlow.ConnectorProfileAuthenticationType authenticationType,

            Outputs.ConnectorProfileBasicAuthCredentials? basic,

            Outputs.ConnectorProfileCustomAuthCredentials? custom,

            Outputs.ConnectorProfileOAuth2Credentials? oauth2)
        {
            ApiKey = apiKey;
            AuthenticationType = authenticationType;
            Basic = basic;
            Custom = custom;
            Oauth2 = oauth2;
        }
    }
}
