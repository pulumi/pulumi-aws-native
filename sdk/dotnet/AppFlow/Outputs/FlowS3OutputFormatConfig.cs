// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppFlow.Outputs
{

    [OutputType]
    public sealed class FlowS3OutputFormatConfig
    {
        /// <summary>
        /// The aggregation settings that you can use to customize the output format of your flow data.
        /// </summary>
        public readonly Outputs.FlowAggregationConfig? AggregationConfig;
        /// <summary>
        /// Indicates the file type that Amazon AppFlow places in the Amazon S3 bucket.
        /// </summary>
        public readonly Pulumi.AwsNative.AppFlow.FlowFileType? FileType;
        /// <summary>
        /// Specifies elements that Amazon AppFlow includes in the file and folder names in the flow destination.
        /// </summary>
        public readonly Outputs.FlowPrefixConfig? PrefixConfig;
        /// <summary>
        /// If your file output format is Parquet, use this parameter to set whether Amazon AppFlow preserves the data types in your source data when it writes the output to Amazon S3.
        /// 
        /// - `true` : Amazon AppFlow preserves the data types when it writes to Amazon S3. For example, an integer or `1` in your source data is still an integer in your output.
        /// - `false` : Amazon AppFlow converts all of the source data into strings when it writes to Amazon S3. For example, an integer of `1` in your source data becomes the string `"1"` in the output.
        /// </summary>
        public readonly bool? PreserveSourceDataTyping;

        [OutputConstructor]
        private FlowS3OutputFormatConfig(
            Outputs.FlowAggregationConfig? aggregationConfig,

            Pulumi.AwsNative.AppFlow.FlowFileType? fileType,

            Outputs.FlowPrefixConfig? prefixConfig,

            bool? preserveSourceDataTyping)
        {
            AggregationConfig = aggregationConfig;
            FileType = fileType;
            PrefixConfig = prefixConfig;
            PreserveSourceDataTyping = preserveSourceDataTyping;
        }
    }
}
