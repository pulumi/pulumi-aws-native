// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppFlow
{
    /// <summary>
    /// Resource schema for AWS::AppFlow::Flow.
    /// </summary>
    [AwsNativeResourceType("aws-native:appflow:Flow")]
    public partial class Flow : Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the flow.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// List of Destination connectors of the flow.
        /// </summary>
        [Output("destinationFlowConfigList")]
        public Output<ImmutableArray<Outputs.FlowDestinationFlowConfig>> DestinationFlowConfigList { get; private set; } = null!;

        /// <summary>
        /// ARN identifier of the flow.
        /// </summary>
        [Output("flowArn")]
        public Output<string> FlowArn { get; private set; } = null!;

        /// <summary>
        /// Name of the flow.
        /// </summary>
        [Output("flowName")]
        public Output<string> FlowName { get; private set; } = null!;

        /// <summary>
        /// The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
        /// </summary>
        [Output("kMSArn")]
        public Output<string?> KMSArn { get; private set; } = null!;

        /// <summary>
        /// Configurations of Source connector of the flow.
        /// </summary>
        [Output("sourceFlowConfig")]
        public Output<Outputs.FlowSourceFlowConfig> SourceFlowConfig { get; private set; } = null!;

        /// <summary>
        /// List of Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.FlowTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// List of tasks for the flow.
        /// </summary>
        [Output("tasks")]
        public Output<ImmutableArray<Outputs.FlowTask>> Tasks { get; private set; } = null!;

        /// <summary>
        /// Trigger settings of the flow.
        /// </summary>
        [Output("triggerConfig")]
        public Output<Outputs.FlowTriggerConfig> TriggerConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Flow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Flow(string name, FlowArgs args, CustomResourceOptions? options = null)
            : base("aws-native:appflow:Flow", name, args ?? new FlowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Flow(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:appflow:Flow", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Flow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Flow Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Flow(name, id, options);
        }
    }

    public sealed class FlowArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the flow.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationFlowConfigList", required: true)]
        private InputList<Inputs.FlowDestinationFlowConfigArgs>? _destinationFlowConfigList;

        /// <summary>
        /// List of Destination connectors of the flow.
        /// </summary>
        public InputList<Inputs.FlowDestinationFlowConfigArgs> DestinationFlowConfigList
        {
            get => _destinationFlowConfigList ?? (_destinationFlowConfigList = new InputList<Inputs.FlowDestinationFlowConfigArgs>());
            set => _destinationFlowConfigList = value;
        }

        /// <summary>
        /// Name of the flow.
        /// </summary>
        [Input("flowName", required: true)]
        public Input<string> FlowName { get; set; } = null!;

        /// <summary>
        /// The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
        /// </summary>
        [Input("kMSArn")]
        public Input<string>? KMSArn { get; set; }

        /// <summary>
        /// Configurations of Source connector of the flow.
        /// </summary>
        [Input("sourceFlowConfig", required: true)]
        public Input<Inputs.FlowSourceFlowConfigArgs> SourceFlowConfig { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.FlowTagArgs>? _tags;

        /// <summary>
        /// List of Tags.
        /// </summary>
        public InputList<Inputs.FlowTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.FlowTagArgs>());
            set => _tags = value;
        }

        [Input("tasks", required: true)]
        private InputList<Inputs.FlowTaskArgs>? _tasks;

        /// <summary>
        /// List of tasks for the flow.
        /// </summary>
        public InputList<Inputs.FlowTaskArgs> Tasks
        {
            get => _tasks ?? (_tasks = new InputList<Inputs.FlowTaskArgs>());
            set => _tasks = value;
        }

        /// <summary>
        /// Trigger settings of the flow.
        /// </summary>
        [Input("triggerConfig", required: true)]
        public Input<Inputs.FlowTriggerConfigArgs> TriggerConfig { get; set; } = null!;

        public FlowArgs()
        {
        }
    }
}
