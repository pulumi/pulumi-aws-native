// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppFlow.Inputs
{

    public sealed class FlowS3OutputFormatConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The aggregation settings that you can use to customize the output format of your flow data.
        /// </summary>
        [Input("aggregationConfig")]
        public Input<Inputs.FlowAggregationConfigArgs>? AggregationConfig { get; set; }

        /// <summary>
        /// Indicates the file type that Amazon AppFlow places in the Amazon S3 bucket.
        /// </summary>
        [Input("fileType")]
        public Input<Pulumi.AwsNative.AppFlow.FlowFileType>? FileType { get; set; }

        /// <summary>
        /// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date.
        /// </summary>
        [Input("prefixConfig")]
        public Input<Inputs.FlowPrefixConfigArgs>? PrefixConfig { get; set; }

        /// <summary>
        /// If your file output format is Parquet, use this parameter to set whether Amazon AppFlow preserves the data types in your source data when it writes the output to Amazon S3.
        /// 
        /// - `true` : Amazon AppFlow preserves the data types when it writes to Amazon S3. For example, an integer or `1` in your source data is still an integer in your output.
        /// - `false` : Amazon AppFlow converts all of the source data into strings when it writes to Amazon S3. For example, an integer of `1` in your source data becomes the string `"1"` in the output.
        /// </summary>
        [Input("preserveSourceDataTyping")]
        public Input<bool>? PreserveSourceDataTyping { get; set; }

        public FlowS3OutputFormatConfigArgs()
        {
        }
        public static new FlowS3OutputFormatConfigArgs Empty => new FlowS3OutputFormatConfigArgs();
    }
}
