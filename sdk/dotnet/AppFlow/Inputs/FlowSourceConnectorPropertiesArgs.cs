// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppFlow.Inputs
{

    /// <summary>
    /// Source connector details required to query a connector
    /// </summary>
    public sealed class FlowSourceConnectorPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the information that is required for querying Amplitude.
        /// </summary>
        [Input("amplitude")]
        public Input<Inputs.FlowAmplitudeSourcePropertiesArgs>? Amplitude { get; set; }

        /// <summary>
        /// The properties that are applied when the custom connector is being used as a source.
        /// </summary>
        [Input("customConnector")]
        public Input<Inputs.FlowCustomConnectorSourcePropertiesArgs>? CustomConnector { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Datadog.
        /// </summary>
        [Input("datadog")]
        public Input<Inputs.FlowDatadogSourcePropertiesArgs>? Datadog { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Dynatrace.
        /// </summary>
        [Input("dynatrace")]
        public Input<Inputs.FlowDynatraceSourcePropertiesArgs>? Dynatrace { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Google Analytics.
        /// </summary>
        [Input("googleAnalytics")]
        public Input<Inputs.FlowGoogleAnalyticsSourcePropertiesArgs>? GoogleAnalytics { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Infor Nexus.
        /// </summary>
        [Input("inforNexus")]
        public Input<Inputs.FlowInforNexusSourcePropertiesArgs>? InforNexus { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Marketo.
        /// </summary>
        [Input("marketo")]
        public Input<Inputs.FlowMarketoSourcePropertiesArgs>? Marketo { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Salesforce Pardot.
        /// </summary>
        [Input("pardot")]
        public Input<Inputs.FlowPardotSourcePropertiesArgs>? Pardot { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Amazon S3.
        /// </summary>
        [Input("s3")]
        public Input<Inputs.FlowS3SourcePropertiesArgs>? S3 { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Salesforce.
        /// </summary>
        [Input("salesforce")]
        public Input<Inputs.FlowSalesforceSourcePropertiesArgs>? Salesforce { get; set; }

        /// <summary>
        /// The properties that are applied when using SAPOData as a flow source.
        /// </summary>
        [Input("sapoData")]
        public Input<Inputs.FlowSapoDataSourcePropertiesArgs>? SapoData { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying ServiceNow.
        /// </summary>
        [Input("serviceNow")]
        public Input<Inputs.FlowServiceNowSourcePropertiesArgs>? ServiceNow { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Singular.
        /// </summary>
        [Input("singular")]
        public Input<Inputs.FlowSingularSourcePropertiesArgs>? Singular { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Slack.
        /// </summary>
        [Input("slack")]
        public Input<Inputs.FlowSlackSourcePropertiesArgs>? Slack { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Trend Micro.
        /// </summary>
        [Input("trendmicro")]
        public Input<Inputs.FlowTrendmicroSourcePropertiesArgs>? Trendmicro { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Veeva.
        /// </summary>
        [Input("veeva")]
        public Input<Inputs.FlowVeevaSourcePropertiesArgs>? Veeva { get; set; }

        /// <summary>
        /// Specifies the information that is required for querying Zendesk.
        /// </summary>
        [Input("zendesk")]
        public Input<Inputs.FlowZendeskSourcePropertiesArgs>? Zendesk { get; set; }

        public FlowSourceConnectorPropertiesArgs()
        {
        }
        public static new FlowSourceConnectorPropertiesArgs Empty => new FlowSourceConnectorPropertiesArgs();
    }
}
