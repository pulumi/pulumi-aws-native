// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Efs
{
    public static class GetMountTarget
    {
        /// <summary>
        /// The ``AWS::EFS::MountTarget`` resource is an Amazon EFS resource that creates a mount target for an EFS file system. You can then mount the file system on Amazon EC2 instances or other resources by using the mount target.
        /// </summary>
        public static Task<GetMountTargetResult> InvokeAsync(GetMountTargetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMountTargetResult>("aws-native:efs:getMountTarget", args ?? new GetMountTargetArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::EFS::MountTarget`` resource is an Amazon EFS resource that creates a mount target for an EFS file system. You can then mount the file system on Amazon EC2 instances or other resources by using the mount target.
        /// </summary>
        public static Output<GetMountTargetResult> Invoke(GetMountTargetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMountTargetResult>("aws-native:efs:getMountTarget", args ?? new GetMountTargetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::EFS::MountTarget`` resource is an Amazon EFS resource that creates a mount target for an EFS file system. You can then mount the file system on Amazon EC2 instances or other resources by using the mount target.
        /// </summary>
        public static Output<GetMountTargetResult> Invoke(GetMountTargetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMountTargetResult>("aws-native:efs:getMountTarget", args ?? new GetMountTargetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMountTargetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Amazon EFS file system that the mount target provides access to.
        /// 
        /// Example: `fs-0123456789111222a`
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetMountTargetArgs()
        {
        }
        public static new GetMountTargetArgs Empty => new GetMountTargetArgs();
    }

    public sealed class GetMountTargetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Amazon EFS file system that the mount target provides access to.
        /// 
        /// Example: `fs-0123456789111222a`
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetMountTargetInvokeArgs()
        {
        }
        public static new GetMountTargetInvokeArgs Empty => new GetMountTargetInvokeArgs();
    }


    [OutputType]
    public sealed class GetMountTargetResult
    {
        /// <summary>
        /// The ID of the Amazon EFS file system that the mount target provides access to.
        /// 
        /// Example: `fs-0123456789111222a`
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// VPC security group IDs, of the form ``sg-xxxxxxxx``. These must be for the same VPC as the subnet specified. The maximum number of security groups depends on account quota. For more information, see [Amazon VPC Quotas](https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html) in the *Amazon VPC User Guide* (see the *Security Groups* table). If you don't specify a security group, then Amazon EFS uses the default security group for the subnet's VPC.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroups;

        [OutputConstructor]
        private GetMountTargetResult(
            string? id,

            ImmutableArray<string> securityGroups)
        {
            Id = id;
            SecurityGroups = securityGroups;
        }
    }
}
