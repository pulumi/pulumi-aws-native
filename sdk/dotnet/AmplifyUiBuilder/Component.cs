// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmplifyUiBuilder
{
    /// <summary>
    /// Definition of AWS::AmplifyUIBuilder::Component Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:amplifyuibuilder:Component")]
    public partial class Component : global::Pulumi.CustomResource
    {
        [Output("appId")]
        public Output<string?> AppId { get; private set; } = null!;

        [Output("bindingProperties")]
        public Output<ImmutableDictionary<string, Outputs.ComponentBindingPropertiesValue>?> BindingProperties { get; private set; } = null!;

        [Output("children")]
        public Output<ImmutableArray<Outputs.ComponentChild>> Children { get; private set; } = null!;

        [Output("collectionProperties")]
        public Output<ImmutableDictionary<string, Outputs.ComponentDataConfiguration>?> CollectionProperties { get; private set; } = null!;

        [Output("componentType")]
        public Output<string?> ComponentType { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("environmentName")]
        public Output<string?> EnvironmentName { get; private set; } = null!;

        [Output("events")]
        public Output<ImmutableDictionary<string, Outputs.ComponentEvent>?> Events { get; private set; } = null!;

        [Output("modifiedAt")]
        public Output<string> ModifiedAt { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("overrides")]
        public Output<ImmutableDictionary<string, object>?> Overrides { get; private set; } = null!;

        [Output("properties")]
        public Output<ImmutableDictionary<string, Outputs.ComponentProperty>?> Properties { get; private set; } = null!;

        [Output("schemaVersion")]
        public Output<string?> SchemaVersion { get; private set; } = null!;

        [Output("sourceId")]
        public Output<string?> SourceId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("variants")]
        public Output<ImmutableArray<Outputs.ComponentVariant>> Variants { get; private set; } = null!;


        /// <summary>
        /// Create a Component resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Component(string name, ComponentArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:amplifyuibuilder:Component", name, args ?? new ComponentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Component(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:amplifyuibuilder:Component", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "appId",
                    "environmentName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Component resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Component Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Component(name, id, options);
        }
    }

    public sealed class ComponentArgs : global::Pulumi.ResourceArgs
    {
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        [Input("bindingProperties")]
        private InputMap<Inputs.ComponentBindingPropertiesValueArgs>? _bindingProperties;
        public InputMap<Inputs.ComponentBindingPropertiesValueArgs> BindingProperties
        {
            get => _bindingProperties ?? (_bindingProperties = new InputMap<Inputs.ComponentBindingPropertiesValueArgs>());
            set => _bindingProperties = value;
        }

        [Input("children")]
        private InputList<Inputs.ComponentChildArgs>? _children;
        public InputList<Inputs.ComponentChildArgs> Children
        {
            get => _children ?? (_children = new InputList<Inputs.ComponentChildArgs>());
            set => _children = value;
        }

        [Input("collectionProperties")]
        private InputMap<Inputs.ComponentDataConfigurationArgs>? _collectionProperties;
        public InputMap<Inputs.ComponentDataConfigurationArgs> CollectionProperties
        {
            get => _collectionProperties ?? (_collectionProperties = new InputMap<Inputs.ComponentDataConfigurationArgs>());
            set => _collectionProperties = value;
        }

        [Input("componentType")]
        public Input<string>? ComponentType { get; set; }

        [Input("environmentName")]
        public Input<string>? EnvironmentName { get; set; }

        [Input("events")]
        private InputMap<Inputs.ComponentEventArgs>? _events;
        public InputMap<Inputs.ComponentEventArgs> Events
        {
            get => _events ?? (_events = new InputMap<Inputs.ComponentEventArgs>());
            set => _events = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("overrides")]
        private InputMap<object>? _overrides;
        public InputMap<object> Overrides
        {
            get => _overrides ?? (_overrides = new InputMap<object>());
            set => _overrides = value;
        }

        [Input("properties")]
        private InputMap<Inputs.ComponentPropertyArgs>? _properties;
        public InputMap<Inputs.ComponentPropertyArgs> Properties
        {
            get => _properties ?? (_properties = new InputMap<Inputs.ComponentPropertyArgs>());
            set => _properties = value;
        }

        [Input("schemaVersion")]
        public Input<string>? SchemaVersion { get; set; }

        [Input("sourceId")]
        public Input<string>? SourceId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("variants")]
        private InputList<Inputs.ComponentVariantArgs>? _variants;
        public InputList<Inputs.ComponentVariantArgs> Variants
        {
            get => _variants ?? (_variants = new InputList<Inputs.ComponentVariantArgs>());
            set => _variants = value;
        }

        public ComponentArgs()
        {
        }
        public static new ComponentArgs Empty => new ComponentArgs();
    }
}
