// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmplifyUiBuilder
{
    public static class GetForm
    {
        /// <summary>
        /// Definition of AWS::AmplifyUIBuilder::Form Resource Type
        /// </summary>
        public static Task<GetFormResult> InvokeAsync(GetFormArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFormResult>("aws-native:amplifyuibuilder:getForm", args ?? new GetFormArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::AmplifyUIBuilder::Form Resource Type
        /// </summary>
        public static Output<GetFormResult> Invoke(GetFormInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFormResult>("aws-native:amplifyuibuilder:getForm", args ?? new GetFormInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFormArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID of the Amplify app associated with the form.
        /// </summary>
        [Input("appId", required: true)]
        public string AppId { get; set; } = null!;

        /// <summary>
        /// The name of the backend environment that is a part of the Amplify app.
        /// </summary>
        [Input("environmentName", required: true)]
        public string EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The ID for the form.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetFormArgs()
        {
        }
        public static new GetFormArgs Empty => new GetFormArgs();
    }

    public sealed class GetFormInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID of the Amplify app associated with the form.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// The name of the backend environment that is a part of the Amplify app.
        /// </summary>
        [Input("environmentName", required: true)]
        public Input<string> EnvironmentName { get; set; } = null!;

        /// <summary>
        /// The ID for the form.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetFormInvokeArgs()
        {
        }
        public static new GetFormInvokeArgs Empty => new GetFormInvokeArgs();
    }


    [OutputType]
    public sealed class GetFormResult
    {
        /// <summary>
        /// The `FormCTA` property specifies the call to action button configuration for the form.
        /// </summary>
        public readonly Outputs.FormCta? Cta;
        /// <summary>
        /// The `FormDataTypeConfig` property specifies the data type configuration for the data source associated with a form.
        /// </summary>
        public readonly Outputs.FormDataTypeConfig? DataType;
        /// <summary>
        /// The configuration information for the form's fields.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.FormFieldConfig>? Fields;
        /// <summary>
        /// Specifies whether to perform a create or update action on the form.
        /// </summary>
        public readonly Pulumi.AwsNative.AmplifyUiBuilder.FormActionType? FormActionType;
        /// <summary>
        /// The ID for the form.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Specifies an icon or decoration to display on the form.
        /// </summary>
        public readonly Pulumi.AwsNative.AmplifyUiBuilder.FormLabelDecorator? LabelDecorator;
        /// <summary>
        /// The name of the form.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The schema version of the form.
        /// </summary>
        public readonly string? SchemaVersion;
        /// <summary>
        /// The configuration information for the visual helper elements for the form. These elements are not associated with any data.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.FormSectionalElement>? SectionalElements;
        /// <summary>
        /// The `FormStyle` property specifies the configuration for the form's style.
        /// </summary>
        public readonly Outputs.FormStyle? Style;
        /// <summary>
        /// One or more key-value pairs to use when tagging the form data.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetFormResult(
            Outputs.FormCta? cta,

            Outputs.FormDataTypeConfig? dataType,

            ImmutableDictionary<string, Outputs.FormFieldConfig>? fields,

            Pulumi.AwsNative.AmplifyUiBuilder.FormActionType? formActionType,

            string? id,

            Pulumi.AwsNative.AmplifyUiBuilder.FormLabelDecorator? labelDecorator,

            string? name,

            string? schemaVersion,

            ImmutableDictionary<string, Outputs.FormSectionalElement>? sectionalElements,

            Outputs.FormStyle? style,

            ImmutableDictionary<string, string>? tags)
        {
            Cta = cta;
            DataType = dataType;
            Fields = fields;
            FormActionType = formActionType;
            Id = id;
            LabelDecorator = labelDecorator;
            Name = name;
            SchemaVersion = schemaVersion;
            SectionalElements = sectionalElements;
            Style = style;
            Tags = tags;
        }
    }
}
