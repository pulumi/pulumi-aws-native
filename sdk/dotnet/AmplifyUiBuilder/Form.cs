// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmplifyUiBuilder
{
    /// <summary>
    /// Definition of AWS::AmplifyUIBuilder::Form Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:amplifyuibuilder:Form")]
    public partial class Form : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The unique ID of the Amplify app associated with the form.
        /// </summary>
        [Output("appId")]
        public Output<string?> AppId { get; private set; } = null!;

        /// <summary>
        /// The ID for the form.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// The `FormCTA` object that stores the call to action configuration for the form.
        /// </summary>
        [Output("cta")]
        public Output<Outputs.FormCta?> Cta { get; private set; } = null!;

        /// <summary>
        /// The type of data source to use to create the form.
        /// </summary>
        [Output("dataType")]
        public Output<Outputs.FormDataTypeConfig?> DataType { get; private set; } = null!;

        /// <summary>
        /// The name of the backend environment that is a part of the Amplify app.
        /// </summary>
        [Output("environmentName")]
        public Output<string?> EnvironmentName { get; private set; } = null!;

        /// <summary>
        /// The configuration information for the form's fields.
        /// </summary>
        [Output("fields")]
        public Output<ImmutableDictionary<string, Outputs.FormFieldConfig>?> Fields { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to perform a create or update action on the form.
        /// </summary>
        [Output("formActionType")]
        public Output<Pulumi.AwsNative.AmplifyUiBuilder.FormActionType?> FormActionType { get; private set; } = null!;

        /// <summary>
        /// Specifies an icon or decoration to display on the form.
        /// </summary>
        [Output("labelDecorator")]
        public Output<Pulumi.AwsNative.AmplifyUiBuilder.FormLabelDecorator?> LabelDecorator { get; private set; } = null!;

        /// <summary>
        /// The name of the form.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The schema version of the form.
        /// </summary>
        [Output("schemaVersion")]
        public Output<string?> SchemaVersion { get; private set; } = null!;

        /// <summary>
        /// The configuration information for the visual helper elements for the form. These elements are not associated with any data.
        /// </summary>
        [Output("sectionalElements")]
        public Output<ImmutableDictionary<string, Outputs.FormSectionalElement>?> SectionalElements { get; private set; } = null!;

        /// <summary>
        /// The configuration for the form's style.
        /// </summary>
        [Output("style")]
        public Output<Outputs.FormStyle?> Style { get; private set; } = null!;

        /// <summary>
        /// One or more key-value pairs to use when tagging the form data.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Form resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Form(string name, FormArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:amplifyuibuilder:Form", name, args ?? new FormArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Form(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:amplifyuibuilder:Form", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "appId",
                    "environmentName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Form resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Form Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Form(name, id, options);
        }
    }

    public sealed class FormArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique ID of the Amplify app associated with the form.
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// The `FormCTA` object that stores the call to action configuration for the form.
        /// </summary>
        [Input("cta")]
        public Input<Inputs.FormCtaArgs>? Cta { get; set; }

        /// <summary>
        /// The type of data source to use to create the form.
        /// </summary>
        [Input("dataType")]
        public Input<Inputs.FormDataTypeConfigArgs>? DataType { get; set; }

        /// <summary>
        /// The name of the backend environment that is a part of the Amplify app.
        /// </summary>
        [Input("environmentName")]
        public Input<string>? EnvironmentName { get; set; }

        [Input("fields")]
        private InputMap<Inputs.FormFieldConfigArgs>? _fields;

        /// <summary>
        /// The configuration information for the form's fields.
        /// </summary>
        public InputMap<Inputs.FormFieldConfigArgs> Fields
        {
            get => _fields ?? (_fields = new InputMap<Inputs.FormFieldConfigArgs>());
            set => _fields = value;
        }

        /// <summary>
        /// Specifies whether to perform a create or update action on the form.
        /// </summary>
        [Input("formActionType")]
        public Input<Pulumi.AwsNative.AmplifyUiBuilder.FormActionType>? FormActionType { get; set; }

        /// <summary>
        /// Specifies an icon or decoration to display on the form.
        /// </summary>
        [Input("labelDecorator")]
        public Input<Pulumi.AwsNative.AmplifyUiBuilder.FormLabelDecorator>? LabelDecorator { get; set; }

        /// <summary>
        /// The name of the form.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The schema version of the form.
        /// </summary>
        [Input("schemaVersion")]
        public Input<string>? SchemaVersion { get; set; }

        [Input("sectionalElements")]
        private InputMap<Inputs.FormSectionalElementArgs>? _sectionalElements;

        /// <summary>
        /// The configuration information for the visual helper elements for the form. These elements are not associated with any data.
        /// </summary>
        public InputMap<Inputs.FormSectionalElementArgs> SectionalElements
        {
            get => _sectionalElements ?? (_sectionalElements = new InputMap<Inputs.FormSectionalElementArgs>());
            set => _sectionalElements = value;
        }

        /// <summary>
        /// The configuration for the form's style.
        /// </summary>
        [Input("style")]
        public Input<Inputs.FormStyleArgs>? Style { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// One or more key-value pairs to use when tagging the form data.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public FormArgs()
        {
        }
        public static new FormArgs Empty => new FormArgs();
    }
}
