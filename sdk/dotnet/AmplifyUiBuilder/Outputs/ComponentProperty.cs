// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmplifyUiBuilder.Outputs
{

    [OutputType]
    public sealed class ComponentProperty
    {
        public readonly Outputs.ComponentPropertyBindingProperties? BindingProperties;
        public readonly ImmutableDictionary<string, Outputs.ComponentFormBindingElement>? Bindings;
        public readonly Outputs.ComponentPropertyBindingProperties? CollectionBindingProperties;
        public readonly string? ComponentName;
        public readonly ImmutableArray<Outputs.ComponentProperty> Concat;
        public readonly Outputs.ComponentConditionProperty? Condition;
        public readonly bool? Configured;
        public readonly string? DefaultValue;
        public readonly string? Event;
        public readonly string? ImportedValue;
        public readonly string? Model;
        public readonly string? Property;
        public readonly string? Type;
        public readonly string? UserAttribute;
        public readonly string? Value;

        [OutputConstructor]
        private ComponentProperty(
            Outputs.ComponentPropertyBindingProperties? bindingProperties,

            ImmutableDictionary<string, Outputs.ComponentFormBindingElement>? bindings,

            Outputs.ComponentPropertyBindingProperties? collectionBindingProperties,

            string? componentName,

            ImmutableArray<Outputs.ComponentProperty> concat,

            Outputs.ComponentConditionProperty? condition,

            bool? configured,

            string? defaultValue,

            string? @event,

            string? importedValue,

            string? model,

            string? property,

            string? type,

            string? userAttribute,

            string? value)
        {
            BindingProperties = bindingProperties;
            Bindings = bindings;
            CollectionBindingProperties = collectionBindingProperties;
            ComponentName = componentName;
            Concat = concat;
            Condition = condition;
            Configured = configured;
            DefaultValue = defaultValue;
            Event = @event;
            ImportedValue = importedValue;
            Model = model;
            Property = property;
            Type = type;
            UserAttribute = userAttribute;
            Value = value;
        }
    }
}
