// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmplifyUiBuilder.Outputs
{

    [OutputType]
    public sealed class ComponentPredicate
    {
        /// <summary>
        /// A list of predicates to combine logically.
        /// </summary>
        public readonly ImmutableArray<Outputs.ComponentPredicate> And;
        /// <summary>
        /// The field to query.
        /// </summary>
        public readonly string? Field;
        /// <summary>
        /// The value to use when performing the evaluation.
        /// </summary>
        public readonly string? Operand;
        /// <summary>
        /// The type of value to use when performing the evaluation.
        /// </summary>
        public readonly string? OperandType;
        /// <summary>
        /// The operator to use to perform the evaluation.
        /// </summary>
        public readonly string? Operator;
        /// <summary>
        /// A list of predicates to combine logically.
        /// </summary>
        public readonly ImmutableArray<Outputs.ComponentPredicate> Or;

        [OutputConstructor]
        private ComponentPredicate(
            ImmutableArray<Outputs.ComponentPredicate> and,

            string? field,

            string? operand,

            string? operandType,

            string? @operator,

            ImmutableArray<Outputs.ComponentPredicate> or)
        {
            And = and;
            Field = field;
            Operand = operand;
            OperandType = operandType;
            Operator = @operator;
            Or = or;
        }
    }
}
