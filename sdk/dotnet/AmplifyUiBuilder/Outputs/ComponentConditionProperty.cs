// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmplifyUiBuilder.Outputs
{

    [OutputType]
    public sealed class ComponentConditionProperty
    {
        /// <summary>
        /// The value to assign to the property if the condition is not met.
        /// </summary>
        public readonly Outputs.ComponentProperty? Else;
        /// <summary>
        /// The name of a field. Specify this when the property is a data model.
        /// </summary>
        public readonly string? Field;
        /// <summary>
        /// The value of the property to evaluate.
        /// </summary>
        public readonly string? Operand;
        /// <summary>
        /// The type of the property to evaluate.
        /// </summary>
        public readonly string? OperandType;
        /// <summary>
        /// The operator to use to perform the evaluation, such as `eq` to represent equals.
        /// </summary>
        public readonly string? Operator;
        /// <summary>
        /// The name of the conditional property.
        /// </summary>
        public readonly string? Property;
        /// <summary>
        /// The value to assign to the property if the condition is met.
        /// </summary>
        public readonly Outputs.ComponentProperty? Then;

        [OutputConstructor]
        private ComponentConditionProperty(
            Outputs.ComponentProperty? @else,

            string? field,

            string? operand,

            string? operandType,

            string? @operator,

            string? property,

            Outputs.ComponentProperty? then)
        {
            Else = @else;
            Field = field;
            Operand = operand;
            OperandType = operandType;
            Operator = @operator;
            Property = property;
            Then = then;
        }
    }
}
