// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmplifyUiBuilder.Inputs
{

    public sealed class FormFileUploaderFieldConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("acceptedFileTypes", required: true)]
        private InputList<string>? _acceptedFileTypes;

        /// <summary>
        /// The file types that are allowed to be uploaded by the file uploader. Provide this information in an array of strings specifying the valid file extensions.
        /// </summary>
        public InputList<string> AcceptedFileTypes
        {
            get => _acceptedFileTypes ?? (_acceptedFileTypes = new InputList<string>());
            set => _acceptedFileTypes = value;
        }

        /// <summary>
        /// The access level to assign to the uploaded files in the Amazon S3 bucket where they are stored. The valid values for this property are `private` , `protected` , or `public` . For detailed information about the permissions associated with each access level, see [File access levels](https://docs.aws.amazon.com/https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/) in the *Amplify documentation* .
        /// </summary>
        [Input("accessLevel", required: true)]
        public Input<Pulumi.AwsNative.AmplifyUiBuilder.FormStorageAccessLevel> AccessLevel { get; set; } = null!;

        /// <summary>
        /// Allows the file upload operation to be paused and resumed. The default value is `false` .
        /// 
        /// When `isResumable` is set to `true` , the file uploader uses a multipart upload to break the files into chunks before upload. The progress of the upload isn't continuous, because the file uploader uploads a chunk at a time.
        /// </summary>
        [Input("isResumable")]
        public Input<bool>? IsResumable { get; set; }

        /// <summary>
        /// Specifies the maximum number of files that can be selected to upload. The default value is an unlimited number of files.
        /// </summary>
        [Input("maxFileCount")]
        public Input<double>? MaxFileCount { get; set; }

        /// <summary>
        /// The maximum file size in bytes that the file uploader will accept. The default value is an unlimited file size.
        /// </summary>
        [Input("maxSize")]
        public Input<double>? MaxSize { get; set; }

        /// <summary>
        /// Specifies whether to display or hide the image preview after selecting a file for upload. The default value is `true` to display the image preview.
        /// </summary>
        [Input("showThumbnails")]
        public Input<bool>? ShowThumbnails { get; set; }

        public FormFileUploaderFieldConfigArgs()
        {
        }
        public static new FormFileUploaderFieldConfigArgs Empty => new FormFileUploaderFieldConfigArgs();
    }
}
