// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmplifyUiBuilder.Inputs
{

    public sealed class ComponentPropertyArgs : global::Pulumi.ResourceArgs
    {
        [Input("bindingProperties")]
        public Input<Inputs.ComponentPropertyBindingPropertiesArgs>? BindingProperties { get; set; }

        [Input("bindings")]
        private InputMap<Inputs.ComponentFormBindingElementArgs>? _bindings;
        public InputMap<Inputs.ComponentFormBindingElementArgs> Bindings
        {
            get => _bindings ?? (_bindings = new InputMap<Inputs.ComponentFormBindingElementArgs>());
            set => _bindings = value;
        }

        [Input("collectionBindingProperties")]
        public Input<Inputs.ComponentPropertyBindingPropertiesArgs>? CollectionBindingProperties { get; set; }

        [Input("componentName")]
        public Input<string>? ComponentName { get; set; }

        [Input("concat")]
        private InputList<Inputs.ComponentPropertyArgs>? _concat;
        public InputList<Inputs.ComponentPropertyArgs> Concat
        {
            get => _concat ?? (_concat = new InputList<Inputs.ComponentPropertyArgs>());
            set => _concat = value;
        }

        [Input("condition")]
        public Input<Inputs.ComponentConditionPropertyArgs>? Condition { get; set; }

        [Input("configured")]
        public Input<bool>? Configured { get; set; }

        [Input("defaultValue")]
        public Input<string>? DefaultValue { get; set; }

        [Input("event")]
        public Input<string>? Event { get; set; }

        [Input("importedValue")]
        public Input<string>? ImportedValue { get; set; }

        [Input("model")]
        public Input<string>? Model { get; set; }

        [Input("property")]
        public Input<string>? Property { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("userAttribute")]
        public Input<string>? UserAttribute { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ComponentPropertyArgs()
        {
        }
        public static new ComponentPropertyArgs Empty => new ComponentPropertyArgs();
    }
}
