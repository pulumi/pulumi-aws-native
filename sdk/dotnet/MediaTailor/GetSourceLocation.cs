// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaTailor
{
    public static class GetSourceLocation
    {
        /// <summary>
        /// Definition of AWS::MediaTailor::SourceLocation Resource Type
        /// </summary>
        public static Task<GetSourceLocationResult> InvokeAsync(GetSourceLocationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSourceLocationResult>("aws-native:mediatailor:getSourceLocation", args ?? new GetSourceLocationArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::MediaTailor::SourceLocation Resource Type
        /// </summary>
        public static Output<GetSourceLocationResult> Invoke(GetSourceLocationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSourceLocationResult>("aws-native:mediatailor:getSourceLocation", args ?? new GetSourceLocationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSourceLocationArgs : global::Pulumi.InvokeArgs
    {
        [Input("sourceLocationName", required: true)]
        public string SourceLocationName { get; set; } = null!;

        public GetSourceLocationArgs()
        {
        }
        public static new GetSourceLocationArgs Empty => new GetSourceLocationArgs();
    }

    public sealed class GetSourceLocationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("sourceLocationName", required: true)]
        public Input<string> SourceLocationName { get; set; } = null!;

        public GetSourceLocationInvokeArgs()
        {
        }
        public static new GetSourceLocationInvokeArgs Empty => new GetSourceLocationInvokeArgs();
    }


    [OutputType]
    public sealed class GetSourceLocationResult
    {
        public readonly Outputs.SourceLocationAccessConfiguration? AccessConfiguration;
        /// <summary>
        /// &lt;p&gt;The ARN of the source location.&lt;/p&gt;
        /// </summary>
        public readonly string? Arn;
        public readonly Outputs.SourceLocationDefaultSegmentDeliveryConfiguration? DefaultSegmentDeliveryConfiguration;
        public readonly Outputs.SourceLocationHttpConfiguration? HttpConfiguration;
        /// <summary>
        /// &lt;p&gt;A list of the segment delivery configurations associated with this resource.&lt;/p&gt;
        /// </summary>
        public readonly ImmutableArray<Outputs.SourceLocationSegmentDeliveryConfiguration> SegmentDeliveryConfigurations;
        /// <summary>
        /// The tags to assign to the source location.
        /// </summary>
        public readonly ImmutableArray<Outputs.SourceLocationTag> Tags;

        [OutputConstructor]
        private GetSourceLocationResult(
            Outputs.SourceLocationAccessConfiguration? accessConfiguration,

            string? arn,

            Outputs.SourceLocationDefaultSegmentDeliveryConfiguration? defaultSegmentDeliveryConfiguration,

            Outputs.SourceLocationHttpConfiguration? httpConfiguration,

            ImmutableArray<Outputs.SourceLocationSegmentDeliveryConfiguration> segmentDeliveryConfigurations,

            ImmutableArray<Outputs.SourceLocationTag> tags)
        {
            AccessConfiguration = accessConfiguration;
            Arn = arn;
            DefaultSegmentDeliveryConfiguration = defaultSegmentDeliveryConfiguration;
            HttpConfiguration = httpConfiguration;
            SegmentDeliveryConfigurations = segmentDeliveryConfigurations;
            Tags = tags;
        }
    }
}
