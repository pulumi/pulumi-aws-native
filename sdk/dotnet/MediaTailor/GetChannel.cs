// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaTailor
{
    public static class GetChannel
    {
        /// <summary>
        /// Definition of AWS::MediaTailor::Channel Resource Type
        /// </summary>
        public static Task<GetChannelResult> InvokeAsync(GetChannelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetChannelResult>("aws-native:mediatailor:getChannel", args ?? new GetChannelArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::MediaTailor::Channel Resource Type
        /// </summary>
        public static Output<GetChannelResult> Invoke(GetChannelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetChannelResult>("aws-native:mediatailor:getChannel", args ?? new GetChannelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetChannelArgs : global::Pulumi.InvokeArgs
    {
        [Input("channelName", required: true)]
        public string ChannelName { get; set; } = null!;

        public GetChannelArgs()
        {
        }
        public static new GetChannelArgs Empty => new GetChannelArgs();
    }

    public sealed class GetChannelInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("channelName", required: true)]
        public Input<string> ChannelName { get; set; } = null!;

        public GetChannelInvokeArgs()
        {
        }
        public static new GetChannelInvokeArgs Empty => new GetChannelInvokeArgs();
    }


    [OutputType]
    public sealed class GetChannelResult
    {
        /// <summary>
        /// &lt;p&gt;The ARN of the channel.&lt;/p&gt;
        /// </summary>
        public readonly string? Arn;
        public readonly Outputs.ChannelSlateSource? FillerSlate;
        public readonly Outputs.ChannelLogConfigurationForChannel? LogConfiguration;
        public readonly Pulumi.AwsNative.MediaTailor.ChannelPlaybackMode? PlaybackMode;
        /// <summary>
        /// The tags to assign to the channel.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        public readonly Outputs.ChannelTimeShiftConfiguration? TimeShiftConfiguration;

        [OutputConstructor]
        private GetChannelResult(
            string? arn,

            Outputs.ChannelSlateSource? fillerSlate,

            Outputs.ChannelLogConfigurationForChannel? logConfiguration,

            Pulumi.AwsNative.MediaTailor.ChannelPlaybackMode? playbackMode,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            Outputs.ChannelTimeShiftConfiguration? timeShiftConfiguration)
        {
            Arn = arn;
            FillerSlate = fillerSlate;
            LogConfiguration = logConfiguration;
            PlaybackMode = playbackMode;
            Tags = tags;
            TimeShiftConfiguration = timeShiftConfiguration;
        }
    }
}
