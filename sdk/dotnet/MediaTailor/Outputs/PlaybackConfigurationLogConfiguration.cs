// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaTailor.Outputs
{

    [OutputType]
    public sealed class PlaybackConfigurationLogConfiguration
    {
        /// <summary>
        /// The event types that MediaTailor emits in logs for interactions with the ADS.
        /// </summary>
        public readonly Outputs.PlaybackConfigurationAdsInteractionLog? AdsInteractionLog;
        /// <summary>
        /// The method used for collecting logs from AWS Elemental MediaTailor. To configure MediaTailor to send logs directly to Amazon CloudWatch Logs, choose LEGACY_CLOUDWATCH. To configure MediaTailor to send logs to CloudWatch, which then vends the logs to your destination of choice, choose VENDED_LOGS. Supported destinations are CloudWatch Logs log group, Amazon S3 bucket, and Amazon Data Firehose stream. To use vended logs, you must configure the delivery destination in Amazon CloudWatch
        /// </summary>
        public readonly ImmutableArray<string> EnabledLoggingStrategies;
        /// <summary>
        /// The event types that MediaTailor emits in logs for interactions with the origin server.
        /// </summary>
        public readonly Outputs.PlaybackConfigurationManifestServiceInteractionLog? ManifestServiceInteractionLog;
        /// <summary>
        /// The percentage of session logs that MediaTailor sends to your CloudWatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to 60, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the debug log mode.
        /// </summary>
        public readonly int PercentEnabled;

        [OutputConstructor]
        private PlaybackConfigurationLogConfiguration(
            Outputs.PlaybackConfigurationAdsInteractionLog? adsInteractionLog,

            ImmutableArray<string> enabledLoggingStrategies,

            Outputs.PlaybackConfigurationManifestServiceInteractionLog? manifestServiceInteractionLog,

            int percentEnabled)
        {
            AdsInteractionLog = adsInteractionLog;
            EnabledLoggingStrategies = enabledLoggingStrategies;
            ManifestServiceInteractionLog = manifestServiceInteractionLog;
            PercentEnabled = percentEnabled;
        }
    }
}
