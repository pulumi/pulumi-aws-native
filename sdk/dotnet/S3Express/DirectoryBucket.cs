// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3Express
{
    /// <summary>
    /// Resource Type definition for AWS::S3Express::DirectoryBucket.
    /// </summary>
    [AwsNativeResourceType("aws-native:s3express:DirectoryBucket")]
    public partial class DirectoryBucket : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Returns the Amazon Resource Name (ARN) of the specified bucket.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az1--x-s3'). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
        /// </summary>
        [Output("bucketName")]
        public Output<string?> BucketName { get; private set; } = null!;

        /// <summary>
        /// Specifies the number of Availability Zone that's used for redundancy for the bucket.
        /// </summary>
        [Output("dataRedundancy")]
        public Output<Pulumi.AwsNative.S3Express.DirectoryBucketDataRedundancy> DataRedundancy { get; private set; } = null!;

        /// <summary>
        /// Specifies the AZ ID of the Availability Zone where the directory bucket will be created. An example AZ ID value is 'use1-az5'.
        /// </summary>
        [Output("locationName")]
        public Output<string> LocationName { get; private set; } = null!;


        /// <summary>
        /// Create a DirectoryBucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DirectoryBucket(string name, DirectoryBucketArgs args, CustomResourceOptions? options = null)
            : base("aws-native:s3express:DirectoryBucket", name, args ?? new DirectoryBucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DirectoryBucket(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:s3express:DirectoryBucket", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "bucketName",
                    "dataRedundancy",
                    "locationName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DirectoryBucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DirectoryBucket Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DirectoryBucket(name, id, options);
        }
    }

    public sealed class DirectoryBucketArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az1--x-s3'). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// Specifies the number of Availability Zone that's used for redundancy for the bucket.
        /// </summary>
        [Input("dataRedundancy", required: true)]
        public Input<Pulumi.AwsNative.S3Express.DirectoryBucketDataRedundancy> DataRedundancy { get; set; } = null!;

        /// <summary>
        /// Specifies the AZ ID of the Availability Zone where the directory bucket will be created. An example AZ ID value is 'use1-az5'.
        /// </summary>
        [Input("locationName", required: true)]
        public Input<string> LocationName { get; set; } = null!;

        public DirectoryBucketArgs()
        {
        }
        public static new DirectoryBucketArgs Empty => new DirectoryBucketArgs();
    }
}
