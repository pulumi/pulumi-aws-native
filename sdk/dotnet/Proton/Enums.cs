// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.Proton
{
    [EnumType]
    public readonly struct EnvironmentAccountConnectionStatus : IEquatable<EnvironmentAccountConnectionStatus>
    {
        private readonly string _value;

        private EnvironmentAccountConnectionStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnvironmentAccountConnectionStatus Pending { get; } = new EnvironmentAccountConnectionStatus("PENDING");
        public static EnvironmentAccountConnectionStatus Connected { get; } = new EnvironmentAccountConnectionStatus("CONNECTED");
        public static EnvironmentAccountConnectionStatus Rejected { get; } = new EnvironmentAccountConnectionStatus("REJECTED");

        public static bool operator ==(EnvironmentAccountConnectionStatus left, EnvironmentAccountConnectionStatus right) => left.Equals(right);
        public static bool operator !=(EnvironmentAccountConnectionStatus left, EnvironmentAccountConnectionStatus right) => !left.Equals(right);

        public static explicit operator string(EnvironmentAccountConnectionStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnvironmentAccountConnectionStatus other && Equals(other);
        public bool Equals(EnvironmentAccountConnectionStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnvironmentTemplateProvisioning : IEquatable<EnvironmentTemplateProvisioning>
    {
        private readonly string _value;

        private EnvironmentTemplateProvisioning(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnvironmentTemplateProvisioning CustomerManaged { get; } = new EnvironmentTemplateProvisioning("CUSTOMER_MANAGED");

        public static bool operator ==(EnvironmentTemplateProvisioning left, EnvironmentTemplateProvisioning right) => left.Equals(right);
        public static bool operator !=(EnvironmentTemplateProvisioning left, EnvironmentTemplateProvisioning right) => !left.Equals(right);

        public static explicit operator string(EnvironmentTemplateProvisioning value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnvironmentTemplateProvisioning other && Equals(other);
        public bool Equals(EnvironmentTemplateProvisioning other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ServiceTemplateProvisioning : IEquatable<ServiceTemplateProvisioning>
    {
        private readonly string _value;

        private ServiceTemplateProvisioning(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ServiceTemplateProvisioning CustomerManaged { get; } = new ServiceTemplateProvisioning("CUSTOMER_MANAGED");

        public static bool operator ==(ServiceTemplateProvisioning left, ServiceTemplateProvisioning right) => left.Equals(right);
        public static bool operator !=(ServiceTemplateProvisioning left, ServiceTemplateProvisioning right) => !left.Equals(right);

        public static explicit operator string(ServiceTemplateProvisioning value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ServiceTemplateProvisioning other && Equals(other);
        public bool Equals(ServiceTemplateProvisioning other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
