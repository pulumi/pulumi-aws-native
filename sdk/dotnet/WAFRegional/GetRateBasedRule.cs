// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.WAFRegional
{
    public static class GetRateBasedRule
    {
        /// <summary>
        /// Resource Type definition for AWS::WAFRegional::RateBasedRule
        /// </summary>
        public static Task<GetRateBasedRuleResult> InvokeAsync(GetRateBasedRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRateBasedRuleResult>("aws-native:wafregional:getRateBasedRule", args ?? new GetRateBasedRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::WAFRegional::RateBasedRule
        /// </summary>
        public static Output<GetRateBasedRuleResult> Invoke(GetRateBasedRuleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRateBasedRuleResult>("aws-native:wafregional:getRateBasedRule", args ?? new GetRateBasedRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRateBasedRuleArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRateBasedRuleArgs()
        {
        }
    }

    public sealed class GetRateBasedRuleInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRateBasedRuleInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRateBasedRuleResult
    {
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.RateBasedRulePredicate> MatchPredicates;
        public readonly int? RateLimit;

        [OutputConstructor]
        private GetRateBasedRuleResult(
            string? id,

            ImmutableArray<Outputs.RateBasedRulePredicate> matchPredicates,

            int? rateLimit)
        {
            Id = id;
            MatchPredicates = matchPredicates;
            RateLimit = rateLimit;
        }
    }
}
