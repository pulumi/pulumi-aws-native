// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.Fis
{
    /// <summary>
    /// The account targeting setting for the experiment template.
    /// </summary>
    [EnumType]
    public readonly struct ExperimentTemplateExperimentOptionsAccountTargeting : IEquatable<ExperimentTemplateExperimentOptionsAccountTargeting>
    {
        private readonly string _value;

        private ExperimentTemplateExperimentOptionsAccountTargeting(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ExperimentTemplateExperimentOptionsAccountTargeting MultiAccount { get; } = new ExperimentTemplateExperimentOptionsAccountTargeting("multi-account");
        public static ExperimentTemplateExperimentOptionsAccountTargeting SingleAccount { get; } = new ExperimentTemplateExperimentOptionsAccountTargeting("single-account");

        public static bool operator ==(ExperimentTemplateExperimentOptionsAccountTargeting left, ExperimentTemplateExperimentOptionsAccountTargeting right) => left.Equals(right);
        public static bool operator !=(ExperimentTemplateExperimentOptionsAccountTargeting left, ExperimentTemplateExperimentOptionsAccountTargeting right) => !left.Equals(right);

        public static explicit operator string(ExperimentTemplateExperimentOptionsAccountTargeting value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ExperimentTemplateExperimentOptionsAccountTargeting other && Equals(other);
        public bool Equals(ExperimentTemplateExperimentOptionsAccountTargeting other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The target resolution failure mode for the experiment template.
    /// </summary>
    [EnumType]
    public readonly struct ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode : IEquatable<ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode>
    {
        private readonly string _value;

        private ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode Fail { get; } = new ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode("fail");
        public static ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode Skip { get; } = new ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode("skip");

        public static bool operator ==(ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode left, ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode right) => left.Equals(right);
        public static bool operator !=(ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode left, ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode right) => !left.Equals(right);

        public static explicit operator string(ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode other && Equals(other);
        public bool Equals(ExperimentTemplateExperimentOptionsEmptyTargetResolutionMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
