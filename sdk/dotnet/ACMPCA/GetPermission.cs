// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ACMPCA
{
    public static class GetPermission
    {
        /// <summary>
        /// Permission set on private certificate authority
        /// </summary>
        public static Task<GetPermissionResult> InvokeAsync(GetPermissionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPermissionResult>("aws-native:acmpca:getPermission", args ?? new GetPermissionArgs(), options.WithDefaults());

        /// <summary>
        /// Permission set on private certificate authority
        /// </summary>
        public static Output<GetPermissionResult> Invoke(GetPermissionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPermissionResult>("aws-native:acmpca:getPermission", args ?? new GetPermissionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPermissionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Private Certificate Authority that grants the permission.
        /// </summary>
        [Input("certificateAuthorityArn", required: true)]
        public string CertificateAuthorityArn { get; set; } = null!;

        /// <summary>
        /// The AWS service or identity that receives the permission. At this time, the only valid principal is acm.amazonaws.com.
        /// </summary>
        [Input("principal", required: true)]
        public string Principal { get; set; } = null!;

        public GetPermissionArgs()
        {
        }
    }

    public sealed class GetPermissionInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Private Certificate Authority that grants the permission.
        /// </summary>
        [Input("certificateAuthorityArn", required: true)]
        public Input<string> CertificateAuthorityArn { get; set; } = null!;

        /// <summary>
        /// The AWS service or identity that receives the permission. At this time, the only valid principal is acm.amazonaws.com.
        /// </summary>
        [Input("principal", required: true)]
        public Input<string> Principal { get; set; } = null!;

        public GetPermissionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPermissionResult
    {
        [OutputConstructor]
        private GetPermissionResult()
        {
        }
    }
}
