// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ACMPCA
{
    public static class GetCertificateAuthorityActivation
    {
        /// <summary>
        /// Used to install the certificate authority certificate and update the certificate authority status.
        /// </summary>
        public static Task<GetCertificateAuthorityActivationResult> InvokeAsync(GetCertificateAuthorityActivationArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCertificateAuthorityActivationResult>("aws-native:acmpca:getCertificateAuthorityActivation", args ?? new GetCertificateAuthorityActivationArgs(), options.WithDefaults());

        /// <summary>
        /// Used to install the certificate authority certificate and update the certificate authority status.
        /// </summary>
        public static Output<GetCertificateAuthorityActivationResult> Invoke(GetCertificateAuthorityActivationInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCertificateAuthorityActivationResult>("aws-native:acmpca:getCertificateAuthorityActivation", args ?? new GetCertificateAuthorityActivationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateAuthorityActivationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Arn of the Certificate Authority.
        /// </summary>
        [Input("certificateAuthorityArn")]
        public string? CertificateAuthorityArn { get; set; }

        public GetCertificateAuthorityActivationArgs()
        {
        }
    }

    public sealed class GetCertificateAuthorityActivationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Arn of the Certificate Authority.
        /// </summary>
        [Input("certificateAuthorityArn")]
        public Input<string>? CertificateAuthorityArn { get; set; }

        public GetCertificateAuthorityActivationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCertificateAuthorityActivationResult
    {
        /// <summary>
        /// The complete certificate chain, including the Certificate Authority certificate.
        /// </summary>
        public readonly string? CompleteCertificateChain;
        /// <summary>
        /// The status of the Certificate Authority.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetCertificateAuthorityActivationResult(
            string? completeCertificateChain,

            string? status)
        {
            CompleteCertificateChain = completeCertificateChain;
            Status = status;
        }
    }
}
