// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElasticLoadBalancingV2
{
    public static class GetListener
    {
        /// <summary>
        /// Specifies a listener for an Application Load Balancer, Network Load Balancer, or Gateway Load Balancer.
        /// </summary>
        public static Task<GetListenerResult> InvokeAsync(GetListenerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetListenerResult>("aws-native:elasticloadbalancingv2:getListener", args ?? new GetListenerArgs(), options.WithDefaults());

        /// <summary>
        /// Specifies a listener for an Application Load Balancer, Network Load Balancer, or Gateway Load Balancer.
        /// </summary>
        public static Output<GetListenerResult> Invoke(GetListenerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetListenerResult>("aws-native:elasticloadbalancingv2:getListener", args ?? new GetListenerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetListenerArgs : global::Pulumi.InvokeArgs
    {
        [Input("listenerArn", required: true)]
        public string ListenerArn { get; set; } = null!;

        public GetListenerArgs()
        {
        }
        public static new GetListenerArgs Empty => new GetListenerArgs();
    }

    public sealed class GetListenerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("listenerArn", required: true)]
        public Input<string> ListenerArn { get; set; } = null!;

        public GetListenerInvokeArgs()
        {
        }
        public static new GetListenerInvokeArgs Empty => new GetListenerInvokeArgs();
    }


    [OutputType]
    public sealed class GetListenerResult
    {
        /// <summary>
        /// [TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy.
        /// </summary>
        public readonly ImmutableArray<string> AlpnPolicy;
        /// <summary>
        /// The default SSL server certificate for a secure listener. You must provide exactly one certificate if the listener protocol is HTTPS or TLS.
        ///  To create a certificate list for a secure listener, use [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html).
        /// </summary>
        public readonly ImmutableArray<Outputs.ListenerCertificate> Certificates;
        /// <summary>
        /// The actions for the default rule. You cannot define a condition for a default rule.
        ///  To create additional rules for an Application Load Balancer, use [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html).
        /// </summary>
        public readonly ImmutableArray<Outputs.ListenerAction> DefaultActions;
        public readonly string? ListenerArn;
        /// <summary>
        /// The mutual authentication configuration information.
        /// </summary>
        public readonly Outputs.ListenerMutualAuthentication? MutualAuthentication;
        /// <summary>
        /// The port on which the load balancer is listening. You cannot specify a port for a Gateway Load Balancer.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You canâ€™t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You cannot specify a protocol for a Gateway Load Balancer.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// [HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported.
        ///  For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies) in the *Application Load Balancers Guide* and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies) in the *Network Load Balancers Guide*.
        /// </summary>
        public readonly string? SslPolicy;

        [OutputConstructor]
        private GetListenerResult(
            ImmutableArray<string> alpnPolicy,

            ImmutableArray<Outputs.ListenerCertificate> certificates,

            ImmutableArray<Outputs.ListenerAction> defaultActions,

            string? listenerArn,

            Outputs.ListenerMutualAuthentication? mutualAuthentication,

            int? port,

            string? protocol,

            string? sslPolicy)
        {
            AlpnPolicy = alpnPolicy;
            Certificates = certificates;
            DefaultActions = defaultActions;
            ListenerArn = listenerArn;
            MutualAuthentication = mutualAuthentication;
            Port = port;
            Protocol = protocol;
            SslPolicy = sslPolicy;
        }
    }
}
