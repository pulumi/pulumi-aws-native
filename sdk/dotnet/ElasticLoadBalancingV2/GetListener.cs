// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElasticLoadBalancingV2
{
    public static class GetListener
    {
        /// <summary>
        /// Resource Type definition for AWS::ElasticLoadBalancingV2::Listener
        /// </summary>
        public static Task<GetListenerResult> InvokeAsync(GetListenerArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetListenerResult>("aws-native:elasticloadbalancingv2:getListener", args ?? new GetListenerArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ElasticLoadBalancingV2::Listener
        /// </summary>
        public static Output<GetListenerResult> Invoke(GetListenerInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetListenerResult>("aws-native:elasticloadbalancingv2:getListener", args ?? new GetListenerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetListenerArgs : Pulumi.InvokeArgs
    {
        [Input("listenerArn")]
        public string? ListenerArn { get; set; }

        public GetListenerArgs()
        {
        }
    }

    public sealed class GetListenerInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("listenerArn")]
        public Input<string>? ListenerArn { get; set; }

        public GetListenerInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetListenerResult
    {
        public readonly ImmutableArray<string> AlpnPolicy;
        public readonly ImmutableArray<Outputs.ListenerCertificate> Certificates;
        public readonly ImmutableArray<Outputs.ListenerAction> DefaultActions;
        public readonly string? ListenerArn;
        public readonly int? Port;
        public readonly string? Protocol;
        public readonly string? SslPolicy;

        [OutputConstructor]
        private GetListenerResult(
            ImmutableArray<string> alpnPolicy,

            ImmutableArray<Outputs.ListenerCertificate> certificates,

            ImmutableArray<Outputs.ListenerAction> defaultActions,

            string? listenerArn,

            int? port,

            string? protocol,

            string? sslPolicy)
        {
            AlpnPolicy = alpnPolicy;
            Certificates = certificates;
            DefaultActions = defaultActions;
            ListenerArn = listenerArn;
            Port = port;
            Protocol = protocol;
            SslPolicy = sslPolicy;
        }
    }
}
