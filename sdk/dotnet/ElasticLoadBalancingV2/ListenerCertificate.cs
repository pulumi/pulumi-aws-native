// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElasticLoadBalancingV2
{
    /// <summary>
    /// Resource Type definition for AWS::ElasticLoadBalancingV2::ListenerCertificate
    /// </summary>
    [Obsolete(@"ListenerCertificate is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:elasticloadbalancingv2:ListenerCertificate")]
    public partial class ListenerCertificate : Pulumi.CustomResource
    {
        [Output("certificates")]
        public Output<ImmutableArray<Outputs.ListenerCertificateCertificate>> Certificates { get; private set; } = null!;

        [Output("listenerArn")]
        public Output<string> ListenerArn { get; private set; } = null!;


        /// <summary>
        /// Create a ListenerCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ListenerCertificate(string name, ListenerCertificateArgs args, CustomResourceOptions? options = null)
            : base("aws-native:elasticloadbalancingv2:ListenerCertificate", name, args ?? new ListenerCertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ListenerCertificate(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:elasticloadbalancingv2:ListenerCertificate", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ListenerCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ListenerCertificate Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ListenerCertificate(name, id, options);
        }
    }

    public sealed class ListenerCertificateArgs : Pulumi.ResourceArgs
    {
        [Input("certificates", required: true)]
        private InputList<Inputs.ListenerCertificateCertificateArgs>? _certificates;
        public InputList<Inputs.ListenerCertificateCertificateArgs> Certificates
        {
            get => _certificates ?? (_certificates = new InputList<Inputs.ListenerCertificateCertificateArgs>());
            set => _certificates = value;
        }

        [Input("listenerArn", required: true)]
        public Input<string> ListenerArn { get; set; } = null!;

        public ListenerCertificateArgs()
        {
        }
    }
}
