// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElasticLoadBalancingV2
{
    public static class GetLoadBalancer
    {
        /// <summary>
        /// Resource Type definition for AWS::ElasticLoadBalancingV2::LoadBalancer
        /// </summary>
        public static Task<GetLoadBalancerResult> InvokeAsync(GetLoadBalancerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLoadBalancerResult>("aws-native:elasticloadbalancingv2:getLoadBalancer", args ?? new GetLoadBalancerArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ElasticLoadBalancingV2::LoadBalancer
        /// </summary>
        public static Output<GetLoadBalancerResult> Invoke(GetLoadBalancerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadBalancerResult>("aws-native:elasticloadbalancingv2:getLoadBalancer", args ?? new GetLoadBalancerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoadBalancerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the load balancer.
        /// </summary>
        [Input("loadBalancerArn", required: true)]
        public string LoadBalancerArn { get; set; } = null!;

        public GetLoadBalancerArgs()
        {
        }
        public static new GetLoadBalancerArgs Empty => new GetLoadBalancerArgs();
    }

    public sealed class GetLoadBalancerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the load balancer.
        /// </summary>
        [Input("loadBalancerArn", required: true)]
        public Input<string> LoadBalancerArn { get; set; } = null!;

        public GetLoadBalancerInvokeArgs()
        {
        }
        public static new GetLoadBalancerInvokeArgs Empty => new GetLoadBalancerInvokeArgs();
    }


    [OutputType]
    public sealed class GetLoadBalancerResult
    {
        /// <summary>
        /// The ID of the Amazon Route 53 hosted zone associated with the load balancer.
        /// </summary>
        public readonly string? CanonicalHostedZoneId;
        /// <summary>
        /// The public DNS name of the load balancer.
        /// </summary>
        public readonly string? DnsName;
        /// <summary>
        /// Indicates whether to evaluate inbound security group rules for traffic sent to a Network Load Balancer through PrivateLink
        /// </summary>
        public readonly string? EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic;
        /// <summary>
        /// The type of IP addresses used by the subnets for your load balancer. The possible values are ipv4 (for IPv4 addresses) and dualstack (for IPv4 and IPv6 addresses).
        /// </summary>
        public readonly string? IpAddressType;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the load balancer.
        /// </summary>
        public readonly string? LoadBalancerArn;
        /// <summary>
        /// The load balancer attributes.
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadBalancerAttribute> LoadBalancerAttributes;
        /// <summary>
        /// The full name of the load balancer.
        /// </summary>
        public readonly string? LoadBalancerFullName;
        /// <summary>
        /// The name of the load balancer.
        /// </summary>
        public readonly string? LoadBalancerName;
        /// <summary>
        /// The IDs of the security groups for the load balancer.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroups;
        /// <summary>
        /// The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both.
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadBalancerSubnetMapping> SubnetMappings;
        /// <summary>
        /// The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both. To specify an Elastic IP address, specify subnet mappings instead of subnets.
        /// </summary>
        public readonly ImmutableArray<string> Subnets;
        /// <summary>
        /// The tags to assign to the load balancer.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetLoadBalancerResult(
            string? canonicalHostedZoneId,

            string? dnsName,

            string? enforceSecurityGroupInboundRulesOnPrivateLinkTraffic,

            string? ipAddressType,

            string? loadBalancerArn,

            ImmutableArray<Outputs.LoadBalancerAttribute> loadBalancerAttributes,

            string? loadBalancerFullName,

            string? loadBalancerName,

            ImmutableArray<string> securityGroups,

            ImmutableArray<Outputs.LoadBalancerSubnetMapping> subnetMappings,

            ImmutableArray<string> subnets,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            CanonicalHostedZoneId = canonicalHostedZoneId;
            DnsName = dnsName;
            EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic = enforceSecurityGroupInboundRulesOnPrivateLinkTraffic;
            IpAddressType = ipAddressType;
            LoadBalancerArn = loadBalancerArn;
            LoadBalancerAttributes = loadBalancerAttributes;
            LoadBalancerFullName = loadBalancerFullName;
            LoadBalancerName = loadBalancerName;
            SecurityGroups = securityGroups;
            SubnetMappings = subnetMappings;
            Subnets = subnets;
            Tags = tags;
        }
    }
}
