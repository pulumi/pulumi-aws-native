// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElasticLoadBalancingV2
{
    public static class GetLoadBalancer
    {
        /// <summary>
        /// Specifies an Application Load Balancer, a Network Load Balancer, or a Gateway Load Balancer.
        /// </summary>
        public static Task<GetLoadBalancerResult> InvokeAsync(GetLoadBalancerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLoadBalancerResult>("aws-native:elasticloadbalancingv2:getLoadBalancer", args ?? new GetLoadBalancerArgs(), options.WithDefaults());

        /// <summary>
        /// Specifies an Application Load Balancer, a Network Load Balancer, or a Gateway Load Balancer.
        /// </summary>
        public static Output<GetLoadBalancerResult> Invoke(GetLoadBalancerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadBalancerResult>("aws-native:elasticloadbalancingv2:getLoadBalancer", args ?? new GetLoadBalancerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoadBalancerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the load balancer.
        /// </summary>
        [Input("loadBalancerArn", required: true)]
        public string LoadBalancerArn { get; set; } = null!;

        public GetLoadBalancerArgs()
        {
        }
        public static new GetLoadBalancerArgs Empty => new GetLoadBalancerArgs();
    }

    public sealed class GetLoadBalancerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the load balancer.
        /// </summary>
        [Input("loadBalancerArn", required: true)]
        public Input<string> LoadBalancerArn { get; set; } = null!;

        public GetLoadBalancerInvokeArgs()
        {
        }
        public static new GetLoadBalancerInvokeArgs Empty => new GetLoadBalancerInvokeArgs();
    }


    [OutputType]
    public sealed class GetLoadBalancerResult
    {
        /// <summary>
        /// The ID of the Amazon Route 53 hosted zone associated with the load balancer. For example, `Z2P70J7EXAMPLE` .
        /// </summary>
        public readonly string? CanonicalHostedZoneId;
        /// <summary>
        /// The DNS name for the load balancer. For example, `my-load-balancer-424835706.us-west-2.elb.amazonaws.com` .
        /// </summary>
        public readonly string? DnsName;
        /// <summary>
        /// [Network Load Balancers with UDP listeners] Indicates whether to use an IPv6 prefix from each subnet for source NAT. The IP address type must be ``dualstack``. The default value is ``off``.
        /// </summary>
        public readonly string? EnablePrefixForIpv6SourceNat;
        /// <summary>
        /// Indicates whether to evaluate inbound security group rules for traffic sent to a Network Load Balancer through privatelink.
        /// </summary>
        public readonly string? EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic;
        /// <summary>
        /// The IP address type. Internal load balancers must use ``ipv4``.
        ///  [Application Load Balancers] The possible values are ``ipv4`` (IPv4 addresses), ``dualstack`` (IPv4 and IPv6 addresses), and ``dualstack-without-public-ipv4`` (public IPv6 addresses and private IPv4 and IPv6 addresses).
        ///  Application Load Balancer authentication supports IPv4 addresses only when connecting to an Identity Provider (IdP) or Amazon Cognito endpoint. Without a public IPv4 address the load balancer can't complete the authentication process, resulting in HTTP 500 errors.
        ///  [Network Load Balancers and Gateway Load Balancers] The possible values are ``ipv4`` (IPv4 addresses) and ``dualstack`` (IPv4 and IPv6 addresses).
        /// </summary>
        public readonly string? IpAddressType;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the load balancer.
        /// </summary>
        public readonly string? LoadBalancerArn;
        /// <summary>
        /// The load balancer attributes.
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadBalancerAttribute> LoadBalancerAttributes;
        /// <summary>
        /// The full name of the load balancer. For example, `app/my-load-balancer/50dc6c495c0c9188` .
        /// </summary>
        public readonly string? LoadBalancerFullName;
        /// <summary>
        /// The name of the load balancer. For example, `my-load-balancer` .
        /// </summary>
        public readonly string? LoadBalancerName;
        /// <summary>
        /// The minimum capacity for a load balancer.
        /// </summary>
        public readonly Outputs.LoadBalancerMinimumLoadBalancerCapacity? MinimumLoadBalancerCapacity;
        /// <summary>
        /// [Application Load Balancers and Network Load Balancers] The IDs of the security groups for the load balancer.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroups;
        /// <summary>
        /// The IDs of the subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both.
        ///  [Application Load Balancers] You must specify subnets from at least two Availability Zones. You can't specify Elastic IP addresses for your subnets.
        ///  [Application Load Balancers on Outposts] You must specify one Outpost subnet.
        ///  [Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones.
        ///  [Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet if you need static IP addresses for your internet-facing load balancer. For internal load balancers, you can specify one private IP address per subnet from the IPv4 range of the subnet. For internet-facing load balancer, you can specify one IPv6 address per subnet.
        ///  [Gateway Load Balancers] You can specify subnets from one or more Availability Zones. You can't specify Elastic IP addresses for your subnets.
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadBalancerSubnetMapping> SubnetMappings;
        /// <summary>
        /// The IDs of the subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both. To specify an Elastic IP address, specify subnet mappings instead of subnets.
        ///  [Application Load Balancers] You must specify subnets from at least two Availability Zones.
        ///  [Application Load Balancers on Outposts] You must specify one Outpost subnet.
        ///  [Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones.
        ///  [Network Load Balancers and Gateway Load Balancers] You can specify subnets from one or more Availability Zones.
        /// </summary>
        public readonly ImmutableArray<string> Subnets;
        /// <summary>
        /// The tags to assign to the load balancer.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetLoadBalancerResult(
            string? canonicalHostedZoneId,

            string? dnsName,

            string? enablePrefixForIpv6SourceNat,

            string? enforceSecurityGroupInboundRulesOnPrivateLinkTraffic,

            string? ipAddressType,

            string? loadBalancerArn,

            ImmutableArray<Outputs.LoadBalancerAttribute> loadBalancerAttributes,

            string? loadBalancerFullName,

            string? loadBalancerName,

            Outputs.LoadBalancerMinimumLoadBalancerCapacity? minimumLoadBalancerCapacity,

            ImmutableArray<string> securityGroups,

            ImmutableArray<Outputs.LoadBalancerSubnetMapping> subnetMappings,

            ImmutableArray<string> subnets,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            CanonicalHostedZoneId = canonicalHostedZoneId;
            DnsName = dnsName;
            EnablePrefixForIpv6SourceNat = enablePrefixForIpv6SourceNat;
            EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic = enforceSecurityGroupInboundRulesOnPrivateLinkTraffic;
            IpAddressType = ipAddressType;
            LoadBalancerArn = loadBalancerArn;
            LoadBalancerAttributes = loadBalancerAttributes;
            LoadBalancerFullName = loadBalancerFullName;
            LoadBalancerName = loadBalancerName;
            MinimumLoadBalancerCapacity = minimumLoadBalancerCapacity;
            SecurityGroups = securityGroups;
            SubnetMappings = subnetMappings;
            Subnets = subnets;
            Tags = tags;
        }
    }
}
