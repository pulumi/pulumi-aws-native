// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElasticLoadBalancingV2.Outputs
{

    /// <summary>
    /// Information about a query string condition.
    ///  The query string component of a URI starts after the first '?' character and is terminated by either a '#' character or the end of the URI. A typical query string contains key/value pairs separated by '&amp;' characters. The allowed characters are specified by RFC 3986. Any character can be percentage encoded.
    /// </summary>
    [OutputType]
    public sealed class ListenerRuleQueryStringConfig
    {
        /// <summary>
        /// The key/value pairs or values to find in the query string. The maximum size of each string is 128 characters. The comparison is case insensitive. The following wildcard characters are supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, you must escape these characters in ``Values`` using a '\' character.
        ///  If you specify multiple key/value pairs or values, the condition is satisfied if one of them is found in the query string.
        /// </summary>
        public readonly ImmutableArray<Outputs.ListenerRuleQueryStringKeyValue> Values;

        [OutputConstructor]
        private ListenerRuleQueryStringConfig(ImmutableArray<Outputs.ListenerRuleQueryStringKeyValue> values)
        {
            Values = values;
        }
    }
}
