// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElasticLoadBalancingV2
{
    public static class GetListenerRule
    {
        /// <summary>
        /// Resource Type definition for AWS::ElasticLoadBalancingV2::ListenerRule
        /// </summary>
        public static Task<GetListenerRuleResult> InvokeAsync(GetListenerRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetListenerRuleResult>("aws-native:elasticloadbalancingv2:getListenerRule", args ?? new GetListenerRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ElasticLoadBalancingV2::ListenerRule
        /// </summary>
        public static Output<GetListenerRuleResult> Invoke(GetListenerRuleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetListenerRuleResult>("aws-native:elasticloadbalancingv2:getListenerRule", args ?? new GetListenerRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetListenerRuleArgs : Pulumi.InvokeArgs
    {
        [Input("ruleArn", required: true)]
        public string RuleArn { get; set; } = null!;

        public GetListenerRuleArgs()
        {
        }
    }

    public sealed class GetListenerRuleInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("ruleArn", required: true)]
        public Input<string> RuleArn { get; set; } = null!;

        public GetListenerRuleInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetListenerRuleResult
    {
        public readonly ImmutableArray<Outputs.ListenerRuleAction> Actions;
        public readonly ImmutableArray<Outputs.ListenerRuleRuleCondition> Conditions;
        public readonly bool? IsDefault;
        public readonly int? Priority;
        public readonly string? RuleArn;

        [OutputConstructor]
        private GetListenerRuleResult(
            ImmutableArray<Outputs.ListenerRuleAction> actions,

            ImmutableArray<Outputs.ListenerRuleRuleCondition> conditions,

            bool? isDefault,

            int? priority,

            string? ruleArn)
        {
            Actions = actions;
            Conditions = conditions;
            IsDefault = isDefault;
            Priority = priority;
            RuleArn = ruleArn;
        }
    }
}
