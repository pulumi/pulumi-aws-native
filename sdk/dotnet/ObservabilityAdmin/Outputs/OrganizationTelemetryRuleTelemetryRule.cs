// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ObservabilityAdmin.Outputs
{

    /// <summary>
    /// The telemetry rule
    /// </summary>
    [OutputType]
    public sealed class OrganizationTelemetryRuleTelemetryRule
    {
        /// <summary>
        /// Configuration specifying where and how the telemetry data should be delivered.
        /// </summary>
        public readonly Outputs.OrganizationTelemetryRuleTelemetryDestinationConfiguration? DestinationConfiguration;
        /// <summary>
        /// The type of AWS resource to configure telemetry for (e.g., "AWS::EC2::VPC").
        /// </summary>
        public readonly Pulumi.AwsNative.ObservabilityAdmin.OrganizationTelemetryRuleResourceType ResourceType;
        /// <summary>
        /// The organizational scope to which the rule applies, specified using accounts or organizational units.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// Criteria for selecting which resources the rule applies to, such as resource tags.
        /// </summary>
        public readonly string? SelectionCriteria;
        /// <summary>
        /// The type of telemetry to collect (Logs, Metrics, or Traces).
        /// </summary>
        public readonly Pulumi.AwsNative.ObservabilityAdmin.OrganizationTelemetryRuleTelemetryType TelemetryType;

        [OutputConstructor]
        private OrganizationTelemetryRuleTelemetryRule(
            Outputs.OrganizationTelemetryRuleTelemetryDestinationConfiguration? destinationConfiguration,

            Pulumi.AwsNative.ObservabilityAdmin.OrganizationTelemetryRuleResourceType resourceType,

            string? scope,

            string? selectionCriteria,

            Pulumi.AwsNative.ObservabilityAdmin.OrganizationTelemetryRuleTelemetryType telemetryType)
        {
            DestinationConfiguration = destinationConfiguration;
            ResourceType = resourceType;
            Scope = scope;
            SelectionCriteria = selectionCriteria;
            TelemetryType = telemetryType;
        }
    }
}
