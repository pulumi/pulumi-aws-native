// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ObservabilityAdmin.Outputs
{

    [OutputType]
    public sealed class OrganizationCentralizationRuleLogsEncryptionConfiguration
    {
        /// <summary>
        /// Conflict resolution strategy for centralization if the encryption strategy is set to CUSTOMER_MANAGED and the destination log group is encrypted with an AWS_OWNED KMS Key. ALLOW lets centralization go through while SKIP prevents centralization into the destination log group.
        /// </summary>
        public readonly Pulumi.AwsNative.ObservabilityAdmin.OrganizationCentralizationRuleLogsEncryptionConfigurationEncryptionConflictResolutionStrategy? EncryptionConflictResolutionStrategy;
        /// <summary>
        /// Configuration that determines the encryption strategy of the destination log groups. CUSTOMER_MANAGED uses the configured KmsKeyArn to encrypt newly created destination log groups.
        /// </summary>
        public readonly Pulumi.AwsNative.ObservabilityAdmin.OrganizationCentralizationRuleLogsEncryptionConfigurationEncryptionStrategy EncryptionStrategy;
        /// <summary>
        /// KMS Key ARN belonging to the primary destination account and region, to encrypt newly created central log groups in the primary destination.
        /// </summary>
        public readonly string? KmsKeyArn;

        [OutputConstructor]
        private OrganizationCentralizationRuleLogsEncryptionConfiguration(
            Pulumi.AwsNative.ObservabilityAdmin.OrganizationCentralizationRuleLogsEncryptionConfigurationEncryptionConflictResolutionStrategy? encryptionConflictResolutionStrategy,

            Pulumi.AwsNative.ObservabilityAdmin.OrganizationCentralizationRuleLogsEncryptionConfigurationEncryptionStrategy encryptionStrategy,

            string? kmsKeyArn)
        {
            EncryptionConflictResolutionStrategy = encryptionConflictResolutionStrategy;
            EncryptionStrategy = encryptionStrategy;
            KmsKeyArn = kmsKeyArn;
        }
    }
}
