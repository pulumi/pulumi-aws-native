// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ecs.Outputs
{

    /// <summary>
    /// The deployment circuit breaker can only be used for services using the rolling update (``ECS``) deployment type.
    ///   The *deployment circuit breaker* determines whether a service deployment will fail if the service can't reach a steady state. If it is turned on, a service deployment will transition to a failed state and stop launching new tasks. You can also configure Amazon ECS to roll back your service to the last completed deployment after a failure. For more information, see [Rolling update](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html) in the *Amazon Elastic Container Service Developer Guide*.
    ///  For more information about API failure reasons, see [API failure reasons](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html) in the *Amazon Elastic Container Service Developer Guide*.
    /// </summary>
    [OutputType]
    public sealed class ServiceDeploymentCircuitBreaker
    {
        /// <summary>
        /// Determines whether to use the deployment circuit breaker logic for the service.
        /// </summary>
        public readonly bool Enable;
        /// <summary>
        /// Determines whether to configure Amazon ECS to roll back the service if a service deployment fails. If rollback is on, when a service deployment fails, the service is rolled back to the last deployment that completed successfully.
        /// </summary>
        public readonly bool Rollback;

        [OutputConstructor]
        private ServiceDeploymentCircuitBreaker(
            bool enable,

            bool rollback)
        {
            Enable = enable;
            Rollback = rollback;
        }
    }
}
