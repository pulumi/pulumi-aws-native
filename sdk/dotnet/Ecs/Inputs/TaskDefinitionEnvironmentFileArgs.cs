// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ecs.Inputs
{

    /// <summary>
    /// A list of files containing the environment variables to pass to a container. You can specify up to ten environment files. The file must have a ``.env`` file extension. Each line in an environment file should contain an environment variable in ``VARIABLE=VALUE`` format. Lines beginning with ``#`` are treated as comments and are ignored.
    ///  If there are environment variables specified using the ``environment`` parameter in a container definition, they take precedence over the variables contained within an environment file. If multiple environment files are specified that contain the same variable, they're processed from the top down. We recommend that you use unique variable names. For more information, see [Specifying environment variables](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html) in the *Amazon Elastic Container Service Developer Guide*.
    ///  You must use the following platforms for the Fargate launch type:
    ///   +  Linux platform version ``1.4.0`` or la
    /// </summary>
    public sealed class TaskDefinitionEnvironmentFileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The file type to use. The only supported value is ``s3``.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment variable file.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public TaskDefinitionEnvironmentFileArgs()
        {
        }
        public static new TaskDefinitionEnvironmentFileArgs Empty => new TaskDefinitionEnvironmentFileArgs();
    }
}
