// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ecs.Inputs
{

    public sealed class ServiceDeploymentLifecycleHookArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the hook target. Currently, only Lambda function ARNs are supported.
        /// 
        /// You must provide this parameter when configuring a deployment lifecycle hook.
        /// </summary>
        [Input("hookTargetArn", required: true)]
        public Input<string> HookTargetArn { get; set; } = null!;

        [Input("lifecycleStages", required: true)]
        private InputList<Pulumi.AwsNative.Ecs.ServiceDeploymentLifecycleHookLifecycleStagesItem>? _lifecycleStages;

        /// <summary>
        /// The lifecycle stages at which to run the hook. Choose from these valid values:
        /// 
        /// - RECONCILE_SERVICE
        /// 
        /// The reconciliation stage that only happens when you start a new service deployment with more than 1 service revision in an ACTIVE state.
        /// 
        /// You can use a lifecycle hook for this stage.
        /// - PRE_SCALE_UP
        /// 
        /// The green service revision has not started. The blue service revision is handling 100% of the production traffic. There is no test traffic.
        /// 
        /// You can use a lifecycle hook for this stage.
        /// - POST_SCALE_UP
        /// 
        /// The green service revision has started. The blue service revision is handling 100% of the production traffic. There is no test traffic.
        /// 
        /// You can use a lifecycle hook for this stage.
        /// - TEST_TRAFFIC_SHIFT
        /// 
        /// The blue and green service revisions are running. The blue service revision handles 100% of the production traffic. The green service revision is migrating from 0% to 100% of test traffic.
        /// 
        /// You can use a lifecycle hook for this stage.
        /// - POST_TEST_TRAFFIC_SHIFT
        /// 
        /// The test traffic shift is complete. The green service revision handles 100% of the test traffic.
        /// 
        /// You can use a lifecycle hook for this stage.
        /// - PRODUCTION_TRAFFIC_SHIFT
        /// 
        /// Production traffic is shifting to the green service revision. The green service revision is migrating from 0% to 100% of production traffic.
        /// 
        /// You can use a lifecycle hook for this stage.
        /// - POST_PRODUCTION_TRAFFIC_SHIFT
        /// 
        /// The production traffic shift is complete.
        /// 
        /// You can use a lifecycle hook for this stage.
        /// 
        /// You must provide this parameter when configuring a deployment lifecycle hook.
        /// </summary>
        public InputList<Pulumi.AwsNative.Ecs.ServiceDeploymentLifecycleHookLifecycleStagesItem> LifecycleStages
        {
            get => _lifecycleStages ?? (_lifecycleStages = new InputList<Pulumi.AwsNative.Ecs.ServiceDeploymentLifecycleHookLifecycleStagesItem>());
            set => _lifecycleStages = value;
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that grants Amazon ECS permission to call Lambda functions on your behalf.
        /// 
        /// For more information, see [Permissions required for Lambda functions in Amazon ECS blue/green deployments](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/blue-green-permissions.html) in the *Amazon Elastic Container Service Developer Guide* .
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        public ServiceDeploymentLifecycleHookArgs()
        {
        }
        public static new ServiceDeploymentLifecycleHookArgs Empty => new ServiceDeploymentLifecycleHookArgs();
    }
}
