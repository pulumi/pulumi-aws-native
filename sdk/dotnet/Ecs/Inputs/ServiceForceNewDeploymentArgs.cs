// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ecs.Inputs
{

    public sealed class ServiceForceNewDeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines whether to force a new deployment of the service. By default, deployments aren't forced. You can use this option to start a new deployment with no service definition changes. For example, you can update a service's tasks to use a newer Docker image with the same image/tag combination ( `my_image:latest` ) or to roll Fargate tasks onto a newer platform version.
        /// </summary>
        [Input("enableForceNewDeployment", required: true)]
        public Input<bool> EnableForceNewDeployment { get; set; } = null!;

        /// <summary>
        /// When you change the `ForceNewDeploymentNonce` value in your template, it signals Amazon ECS to start a new deployment even though no other service parameters have changed. The value must be a unique, time- varying value like a timestamp, random string, or sequence number. Use this property when you want to ensure your tasks pick up the latest version of a Docker image that uses the same tag but has been updated in the registry.
        /// </summary>
        [Input("forceNewDeploymentNonce")]
        public Input<string>? ForceNewDeploymentNonce { get; set; }

        public ServiceForceNewDeploymentArgs()
        {
        }
        public static new ServiceForceNewDeploymentArgs Empty => new ServiceForceNewDeploymentArgs();
    }
}
