// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ecs.Inputs
{

    /// <summary>
    /// The advanced settings for a load balancer used in blue/green deployments. Specify the alternate target group, listener rules, and IAM role required for traffic shifting during blue/green deployments. For more information, see [Required resources for Amazon ECS blue/green deployments](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/blue-green-deployment-implementation.html) in the *Amazon Elastic Container Service Developer Guide*.
    /// </summary>
    public sealed class ServiceAdvancedConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the alternate target group for Amazon ECS blue/green deployments.
        /// </summary>
        [Input("alternateTargetGroupArn", required: true)]
        public Input<string> AlternateTargetGroupArn { get; set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) that that identifies the production listener rule (in the case of an Application Load Balancer) or listener (in the case for an Network Load Balancer) for routing production traffic.
        /// </summary>
        [Input("productionListenerRule")]
        public Input<string>? ProductionListenerRule { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that grants Amazon ECS permission to call the Elastic Load Balancing APIs for you.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) that identifies ) that identifies the test listener rule (in the case of an Application Load Balancer) or listener (in the case for an Network Load Balancer) for routing test traffic.
        /// </summary>
        [Input("testListenerRule")]
        public Input<string>? TestListenerRule { get; set; }

        public ServiceAdvancedConfigurationArgs()
        {
        }
        public static new ServiceAdvancedConfigurationArgs Empty => new ServiceAdvancedConfigurationArgs();
    }
}
