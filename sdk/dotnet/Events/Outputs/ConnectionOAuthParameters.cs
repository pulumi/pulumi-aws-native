// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Events.Outputs
{

    [OutputType]
    public sealed class ConnectionOAuthParameters
    {
        /// <summary>
        /// The URL to the authorization endpoint when OAuth is specified as the authorization type.
        /// </summary>
        public readonly string AuthorizationEndpoint;
        /// <summary>
        /// The client parameters for OAuth authorization.
        /// </summary>
        public readonly Outputs.ConnectionClientParameters ClientParameters;
        /// <summary>
        /// The method to use for the authorization request.
        /// </summary>
        public readonly Pulumi.AwsNative.Events.ConnectionOAuthParametersHttpMethod HttpMethod;
        /// <summary>
        /// Details about the additional parameters to use for the connection.
        /// </summary>
        public readonly Outputs.ConnectionHttpParameters? OAuthHttpParameters;

        [OutputConstructor]
        private ConnectionOAuthParameters(
            string authorizationEndpoint,

            Outputs.ConnectionClientParameters clientParameters,

            Pulumi.AwsNative.Events.ConnectionOAuthParametersHttpMethod httpMethod,

            Outputs.ConnectionHttpParameters? oAuthHttpParameters)
        {
            AuthorizationEndpoint = authorizationEndpoint;
            ClientParameters = clientParameters;
            HttpMethod = httpMethod;
            OAuthHttpParameters = oAuthHttpParameters;
        }
    }
}
