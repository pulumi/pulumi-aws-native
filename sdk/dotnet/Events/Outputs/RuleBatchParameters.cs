// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Events.Outputs
{

    [OutputType]
    public sealed class RuleBatchParameters
    {
        /// <summary>
        /// The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job.
        /// </summary>
        public readonly Outputs.RuleBatchArrayProperties? ArrayProperties;
        /// <summary>
        /// The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.
        /// </summary>
        public readonly string JobDefinition;
        /// <summary>
        /// The name to use for this execution of the job, if the target is an AWS Batch job.
        /// </summary>
        public readonly string JobName;
        /// <summary>
        /// The retry strategy to use for failed jobs, if the target is an AWS Batch job. The retry strategy is the number of times to retry the failed job execution. Valid values are 1â€“10. When you specify a retry strategy here, it overrides the retry strategy defined in the job definition.
        /// </summary>
        public readonly Outputs.RuleBatchRetryStrategy? RetryStrategy;

        [OutputConstructor]
        private RuleBatchParameters(
            Outputs.RuleBatchArrayProperties? arrayProperties,

            string jobDefinition,

            string jobName,

            Outputs.RuleBatchRetryStrategy? retryStrategy)
        {
            ArrayProperties = arrayProperties;
            JobDefinition = jobDefinition;
            JobName = jobName;
            RetryStrategy = retryStrategy;
        }
    }
}
