// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Events.Inputs
{

    public sealed class RuleInputTransformerArgs : global::Pulumi.ResourceArgs
    {
        [Input("inputPathsMap")]
        private InputMap<string>? _inputPathsMap;

        /// <summary>
        /// Map of JSON paths to be extracted from the event. You can then insert these in the template in `InputTemplate` to produce the output you want to be sent to the target.
        /// 
        /// `InputPathsMap` is an array key-value pairs, where each value is a valid JSON path. You can have as many as 100 key-value pairs. You must use JSON dot notation, not bracket notation.
        /// 
        /// The keys cannot start with " AWS ."
        /// </summary>
        public InputMap<string> InputPathsMap
        {
            get => _inputPathsMap ?? (_inputPathsMap = new InputMap<string>());
            set => _inputPathsMap = value;
        }

        /// <summary>
        /// Input template where you specify placeholders that will be filled with the values of the keys from `InputPathsMap` to customize the data sent to the target. Enclose each `InputPathsMaps` value in brackets: &lt; *value* &gt;
        /// 
        /// If `InputTemplate` is a JSON object (surrounded by curly braces), the following restrictions apply:
        /// 
        /// - The placeholder cannot be used as an object key.
        /// 
        /// The following example shows the syntax for using `InputPathsMap` and `InputTemplate` .
        /// 
        /// `"InputTransformer":`
        /// 
        /// `{`
        /// 
        /// `"InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},`
        /// 
        /// `"InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"`
        /// 
        /// `}`
        /// 
        /// To have the `InputTemplate` include quote marks within a JSON string, escape each quote marks with a slash, as in the following example:
        /// 
        /// `"InputTransformer":`
        /// 
        /// `{`
        /// 
        /// `"InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},`
        /// 
        /// `"InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""`
        /// 
        /// `}`
        /// 
        /// The `InputTemplate` can also be valid JSON with varibles in quotes or out, as in the following example:
        /// 
        /// `"InputTransformer":`
        /// 
        /// `{`
        /// 
        /// `"InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},`
        /// 
        /// `"InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt; is in state \"&lt;status&gt;\""}'`
        /// 
        /// `}`
        /// </summary>
        [Input("inputTemplate", required: true)]
        public Input<string> InputTemplate { get; set; } = null!;

        public RuleInputTransformerArgs()
        {
        }
        public static new RuleInputTransformerArgs Empty => new RuleInputTransformerArgs();
    }
}
