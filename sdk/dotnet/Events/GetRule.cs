// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Events
{
    public static class GetRule
    {
        /// <summary>
        /// Resource Type definition for AWS::Events::Rule
        /// </summary>
        public static Task<GetRuleResult> InvokeAsync(GetRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRuleResult>("aws-native:events:getRule", args ?? new GetRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Events::Rule
        /// </summary>
        public static Output<GetRuleResult> Invoke(GetRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleResult>("aws-native:events:getRule", args ?? new GetRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the rule, such as arn:aws:events:us-east-2:123456789012:rule/example.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetRuleArgs()
        {
        }
        public static new GetRuleArgs Empty => new GetRuleArgs();
    }

    public sealed class GetRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the rule, such as arn:aws:events:us-east-2:123456789012:rule/example.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetRuleInvokeArgs()
        {
        }
        public static new GetRuleInvokeArgs Empty => new GetRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRuleResult
    {
        /// <summary>
        /// The ARN of the rule, such as arn:aws:events:us-east-2:123456789012:rule/example.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The description of the rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.
        /// </summary>
        public readonly string? EventBusName;
        /// <summary>
        /// The event pattern of the rule. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide.
        /// </summary>
        public readonly string? EventPattern;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the role that is used for target invocation.
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)". For more information, see Creating an Amazon EventBridge rule that runs on a schedule.
        /// </summary>
        public readonly string? ScheduleExpression;
        /// <summary>
        /// The state of the rule.
        /// </summary>
        public readonly Pulumi.AwsNative.Events.RuleState? State;
        /// <summary>
        /// Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.
        /// Targets are the resources that are invoked when a rule is triggered.
        /// </summary>
        public readonly ImmutableArray<Outputs.RuleTarget> Targets;

        [OutputConstructor]
        private GetRuleResult(
            string? arn,

            string? description,

            string? eventBusName,

            string? eventPattern,

            string? roleArn,

            string? scheduleExpression,

            Pulumi.AwsNative.Events.RuleState? state,

            ImmutableArray<Outputs.RuleTarget> targets)
        {
            Arn = arn;
            Description = description;
            EventBusName = eventBusName;
            EventPattern = eventPattern;
            RoleArn = roleArn;
            ScheduleExpression = scheduleExpression;
            State = state;
            Targets = targets;
        }
    }
}
