// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Events
{
    /// <summary>
    /// Resource Type definition for AWS::Events::Rule
    /// </summary>
    [AwsNativeResourceType("aws-native:events:Rule")]
    public partial class Rule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the rule, such as arn:aws:events:us-east-2:123456789012:rule/example.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The description of the rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.
        /// </summary>
        [Output("eventBusName")]
        public Output<string?> EventBusName { get; private set; } = null!;

        /// <summary>
        /// The event pattern of the rule. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide.
        /// </summary>
        [Output("eventPattern")]
        public Output<string?> EventPattern { get; private set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the role that is used for target invocation.
        /// </summary>
        [Output("roleArn")]
        public Output<string?> RoleArn { get; private set; } = null!;

        /// <summary>
        /// The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)". For more information, see Creating an Amazon EventBridge rule that runs on a schedule.
        /// </summary>
        [Output("scheduleExpression")]
        public Output<string?> ScheduleExpression { get; private set; } = null!;

        /// <summary>
        /// The state of the rule.
        /// </summary>
        [Output("state")]
        public Output<Pulumi.AwsNative.Events.RuleState?> State { get; private set; } = null!;

        /// <summary>
        /// Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.
        /// Targets are the resources that are invoked when a rule is triggered.
        /// </summary>
        [Output("targets")]
        public Output<ImmutableArray<Outputs.RuleTarget>> Targets { get; private set; } = null!;


        /// <summary>
        /// Create a Rule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Rule(string name, RuleArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:events:Rule", name, args ?? new RuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Rule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:events:Rule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Rule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Rule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Rule(name, id, options);
        }
    }

    public sealed class RuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.
        /// </summary>
        [Input("eventBusName")]
        public Input<string>? EventBusName { get; set; }

        /// <summary>
        /// The event pattern of the rule. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide.
        /// </summary>
        [Input("eventPattern")]
        public Input<string>? EventPattern { get; set; }

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the role that is used for target invocation.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)". For more information, see Creating an Amazon EventBridge rule that runs on a schedule.
        /// </summary>
        [Input("scheduleExpression")]
        public Input<string>? ScheduleExpression { get; set; }

        /// <summary>
        /// The state of the rule.
        /// </summary>
        [Input("state")]
        public Input<Pulumi.AwsNative.Events.RuleState>? State { get; set; }

        [Input("targets")]
        private InputList<Inputs.RuleTargetArgs>? _targets;

        /// <summary>
        /// Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.
        /// Targets are the resources that are invoked when a rule is triggered.
        /// </summary>
        public InputList<Inputs.RuleTargetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.RuleTargetArgs>());
            set => _targets = value;
        }

        public RuleArgs()
        {
        }
        public static new RuleArgs Empty => new RuleArgs();
    }
}
