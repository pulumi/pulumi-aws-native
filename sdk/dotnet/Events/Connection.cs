// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Events
{
    /// <summary>
    /// Resource Type definition for AWS::Events::Connection.
    /// 
    /// ## Example Usage
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var pagerDutyAPIKeyParam = config.Require("pagerDutyAPIKeyParam");
    ///     var myConnection = new AwsNative.Events.Connection("myConnection", new()
    ///     {
    ///         AuthorizationType = AwsNative.Events.ConnectionAuthorizationType.ApiKey,
    ///         Description = "Connection to PagerDuty API",
    ///         AuthParameters = new AwsNative.Events.Inputs.ConnectionAuthParametersArgs
    ///         {
    ///             ApiKeyAuthParameters = new AwsNative.Events.Inputs.ConnectionApiKeyAuthParametersArgs
    ///             {
    ///                 ApiKeyName = "PagerDuty Authorization",
    ///                 ApiKeyValue = pagerDutyAPIKeyParam,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var myApiDestination = new AwsNative.Events.ApiDestination("myApiDestination", new()
    ///     {
    ///         ConnectionArn = myConnection.Arn,
    ///         Description = "API Destination to send events to PagerDuty",
    ///         HttpMethod = AwsNative.Events.ApiDestinationHttpMethod.Post,
    ///         InvocationEndpoint = "https://events.pagerduty.com/v2/enqueue",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// </summary>
    [AwsNativeResourceType("aws-native:events:Connection")]
    public partial class Connection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The arn of the connection resource.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The arn of the connection resource to be used in IAM policies.
        /// </summary>
        [Output("arnForPolicy")]
        public Output<string> ArnForPolicy { get; private set; } = null!;

        /// <summary>
        /// The authorization parameters to use to authorize with the endpoint.
        /// 
        /// You must include only authorization parameters for the `AuthorizationType` you specify.
        /// </summary>
        [Output("authParameters")]
        public Output<Outputs.ConnectionAuthParameters?> AuthParameters { get; private set; } = null!;

        /// <summary>
        /// The type of authorization to use for the connection.
        /// 
        /// &gt; OAUTH tokens are refreshed when a 401 or 407 response is returned.
        /// </summary>
        [Output("authorizationType")]
        public Output<Pulumi.AwsNative.Events.ConnectionAuthorizationType?> AuthorizationType { get; private set; } = null!;

        /// <summary>
        /// Description of the connection.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The private resource the HTTP request will be sent to.
        /// </summary>
        [Output("invocationConnectivityParameters")]
        public Output<Outputs.InvocationConnectivityParametersProperties?> InvocationConnectivityParameters { get; private set; } = null!;

        /// <summary>
        /// Name of the connection.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The arn of the secrets manager secret created in the customer account.
        /// </summary>
        [Output("secretArn")]
        public Output<string> SecretArn { get; private set; } = null!;


        /// <summary>
        /// Create a Connection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Connection(string name, ConnectionArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:events:Connection", name, args ?? new ConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Connection(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:events:Connection", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Connection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Connection Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Connection(name, id, options);
        }
    }

    public sealed class ConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The authorization parameters to use to authorize with the endpoint.
        /// 
        /// You must include only authorization parameters for the `AuthorizationType` you specify.
        /// </summary>
        [Input("authParameters")]
        public Input<Inputs.ConnectionAuthParametersArgs>? AuthParameters { get; set; }

        /// <summary>
        /// The type of authorization to use for the connection.
        /// 
        /// &gt; OAUTH tokens are refreshed when a 401 or 407 response is returned.
        /// </summary>
        [Input("authorizationType")]
        public Input<Pulumi.AwsNative.Events.ConnectionAuthorizationType>? AuthorizationType { get; set; }

        /// <summary>
        /// Description of the connection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The private resource the HTTP request will be sent to.
        /// </summary>
        [Input("invocationConnectivityParameters")]
        public Input<Inputs.InvocationConnectivityParametersPropertiesArgs>? InvocationConnectivityParameters { get; set; }

        /// <summary>
        /// Name of the connection.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ConnectionArgs()
        {
        }
        public static new ConnectionArgs Empty => new ConnectionArgs();
    }
}
