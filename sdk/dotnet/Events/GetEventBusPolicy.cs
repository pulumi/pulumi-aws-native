// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Events
{
    public static class GetEventBusPolicy
    {
        /// <summary>
        /// Resource Type definition for AWS::Events::EventBusPolicy
        /// </summary>
        public static Task<GetEventBusPolicyResult> InvokeAsync(GetEventBusPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventBusPolicyResult>("aws-native:events:getEventBusPolicy", args ?? new GetEventBusPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Events::EventBusPolicy
        /// </summary>
        public static Output<GetEventBusPolicyResult> Invoke(GetEventBusPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventBusPolicyResult>("aws-native:events:getEventBusPolicy", args ?? new GetEventBusPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Events::EventBusPolicy
        /// </summary>
        public static Output<GetEventBusPolicyResult> Invoke(GetEventBusPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventBusPolicyResult>("aws-native:events:getEventBusPolicy", args ?? new GetEventBusPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventBusPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the event bus associated with the rule. If you omit this, the default event bus is used.
        /// </summary>
        [Input("eventBusName", required: true)]
        public string EventBusName { get; set; } = null!;

        /// <summary>
        /// An identifier string for the external account that you are granting permissions to
        /// </summary>
        [Input("statementId", required: true)]
        public string StatementId { get; set; } = null!;

        public GetEventBusPolicyArgs()
        {
        }
        public static new GetEventBusPolicyArgs Empty => new GetEventBusPolicyArgs();
    }

    public sealed class GetEventBusPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the event bus associated with the rule. If you omit this, the default event bus is used.
        /// </summary>
        [Input("eventBusName", required: true)]
        public Input<string> EventBusName { get; set; } = null!;

        /// <summary>
        /// An identifier string for the external account that you are granting permissions to
        /// </summary>
        [Input("statementId", required: true)]
        public Input<string> StatementId { get; set; } = null!;

        public GetEventBusPolicyInvokeArgs()
        {
        }
        public static new GetEventBusPolicyInvokeArgs Empty => new GetEventBusPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventBusPolicyResult
    {
        /// <summary>
        /// A JSON string that describes the permission policy statement. You can include a Policy parameter in the request instead of using the StatementId, Action, Principal, or Condition parameters.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Events::EventBusPolicy` for more information about the expected schema for this property.
        /// </summary>
        public readonly object? Statement;

        [OutputConstructor]
        private GetEventBusPolicyResult(object? statement)
        {
            Statement = statement;
        }
    }
}
