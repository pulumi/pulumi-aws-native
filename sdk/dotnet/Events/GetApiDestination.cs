// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Events
{
    public static class GetApiDestination
    {
        /// <summary>
        /// Resource Type definition for AWS::Events::ApiDestination.
        /// </summary>
        public static Task<GetApiDestinationResult> InvokeAsync(GetApiDestinationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiDestinationResult>("aws-native:events:getApiDestination", args ?? new GetApiDestinationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Events::ApiDestination.
        /// </summary>
        public static Output<GetApiDestinationResult> Invoke(GetApiDestinationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiDestinationResult>("aws-native:events:getApiDestination", args ?? new GetApiDestinationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Events::ApiDestination.
        /// </summary>
        public static Output<GetApiDestinationResult> Invoke(GetApiDestinationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiDestinationResult>("aws-native:events:getApiDestination", args ?? new GetApiDestinationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiDestinationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the apiDestination.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetApiDestinationArgs()
        {
        }
        public static new GetApiDestinationArgs Empty => new GetApiDestinationArgs();
    }

    public sealed class GetApiDestinationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the apiDestination.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetApiDestinationInvokeArgs()
        {
        }
        public static new GetApiDestinationInvokeArgs Empty => new GetApiDestinationInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiDestinationResult
    {
        /// <summary>
        /// The arn of the api destination.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The arn of the connection.
        /// </summary>
        public readonly string? ConnectionArn;
        /// <summary>
        /// A description for the API destination to create.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The method to use for the request to the HTTP invocation endpoint.
        /// </summary>
        public readonly Pulumi.AwsNative.Events.ApiDestinationHttpMethod? HttpMethod;
        /// <summary>
        /// Url endpoint to invoke.
        /// </summary>
        public readonly string? InvocationEndpoint;
        /// <summary>
        /// The maximum number of requests per second to send to the HTTP invocation endpoint.
        /// </summary>
        public readonly int? InvocationRateLimitPerSecond;

        [OutputConstructor]
        private GetApiDestinationResult(
            string? arn,

            string? connectionArn,

            string? description,

            Pulumi.AwsNative.Events.ApiDestinationHttpMethod? httpMethod,

            string? invocationEndpoint,

            int? invocationRateLimitPerSecond)
        {
            Arn = arn;
            ConnectionArn = connectionArn;
            Description = description;
            HttpMethod = httpMethod;
            InvocationEndpoint = invocationEndpoint;
            InvocationRateLimitPerSecond = invocationRateLimitPerSecond;
        }
    }
}
