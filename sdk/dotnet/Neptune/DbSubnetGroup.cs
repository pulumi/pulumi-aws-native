// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Neptune
{
    /// <summary>
    /// The AWS::Neptune::DBSubnetGroup type creates an Amazon Neptune DB subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same AWS Region.
    /// </summary>
    [AwsNativeResourceType("aws-native:neptune:DbSubnetGroup")]
    public partial class DbSubnetGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description for the DB subnet group.
        /// </summary>
        [Output("dbSubnetGroupDescription")]
        public Output<string> DbSubnetGroupDescription { get; private set; } = null!;

        /// <summary>
        /// The name for the DB subnet group. This value is stored as a lowercase string.
        /// 
        /// Constraints: Must contain no more than 255 lowercase alphanumeric characters or hyphens. Must not be "Default".
        /// 
        /// Example: mysubnetgroup
        /// </summary>
        [Output("dbSubnetGroupName")]
        public Output<string?> DbSubnetGroupName { get; private set; } = null!;

        /// <summary>
        /// The Amazon EC2 subnet IDs for the DB subnet group.
        /// </summary>
        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        /// <summary>
        /// An optional array of key-value pairs to apply to this DB subnet group.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DbSubnetGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbSubnetGroup(string name, DbSubnetGroupArgs args, CustomResourceOptions? options = null)
            : base("aws-native:neptune:DbSubnetGroup", name, args ?? new DbSubnetGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbSubnetGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:neptune:DbSubnetGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "dbSubnetGroupName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbSubnetGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbSubnetGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DbSubnetGroup(name, id, options);
        }
    }

    public sealed class DbSubnetGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description for the DB subnet group.
        /// </summary>
        [Input("dbSubnetGroupDescription", required: true)]
        public Input<string> DbSubnetGroupDescription { get; set; } = null!;

        /// <summary>
        /// The name for the DB subnet group. This value is stored as a lowercase string.
        /// 
        /// Constraints: Must contain no more than 255 lowercase alphanumeric characters or hyphens. Must not be "Default".
        /// 
        /// Example: mysubnetgroup
        /// </summary>
        [Input("dbSubnetGroupName")]
        public Input<string>? DbSubnetGroupName { get; set; }

        [Input("subnetIds", required: true)]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// The Amazon EC2 subnet IDs for the DB subnet group.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An optional array of key-value pairs to apply to this DB subnet group.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public DbSubnetGroupArgs()
        {
        }
        public static new DbSubnetGroupArgs Empty => new DbSubnetGroupArgs();
    }
}
