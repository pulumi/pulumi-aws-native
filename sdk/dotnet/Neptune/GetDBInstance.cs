// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Neptune
{
    public static class GetDBInstance
    {
        /// <summary>
        /// Resource Type definition for AWS::Neptune::DBInstance
        /// </summary>
        public static Task<GetDBInstanceResult> InvokeAsync(GetDBInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDBInstanceResult>("aws-native:neptune:getDBInstance", args ?? new GetDBInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Neptune::DBInstance
        /// </summary>
        public static Output<GetDBInstanceResult> Invoke(GetDBInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDBInstanceResult>("aws-native:neptune:getDBInstance", args ?? new GetDBInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDBInstanceArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDBInstanceArgs()
        {
        }
        public static new GetDBInstanceArgs Empty => new GetDBInstanceArgs();
    }

    public sealed class GetDBInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDBInstanceInvokeArgs()
        {
        }
        public static new GetDBInstanceInvokeArgs Empty => new GetDBInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDBInstanceResult
    {
        public readonly bool? AllowMajorVersionUpgrade;
        public readonly bool? AutoMinorVersionUpgrade;
        public readonly string? DbInstanceClass;
        public readonly string? DbParameterGroupName;
        public readonly string? Endpoint;
        public readonly string? Id;
        public readonly string? Port;
        public readonly string? PreferredMaintenanceWindow;
        public readonly ImmutableArray<Outputs.DBInstanceTag> Tags;

        [OutputConstructor]
        private GetDBInstanceResult(
            bool? allowMajorVersionUpgrade,

            bool? autoMinorVersionUpgrade,

            string? dbInstanceClass,

            string? dbParameterGroupName,

            string? endpoint,

            string? id,

            string? port,

            string? preferredMaintenanceWindow,

            ImmutableArray<Outputs.DBInstanceTag> tags)
        {
            AllowMajorVersionUpgrade = allowMajorVersionUpgrade;
            AutoMinorVersionUpgrade = autoMinorVersionUpgrade;
            DbInstanceClass = dbInstanceClass;
            DbParameterGroupName = dbParameterGroupName;
            Endpoint = endpoint;
            Id = id;
            Port = port;
            PreferredMaintenanceWindow = preferredMaintenanceWindow;
            Tags = tags;
        }
    }
}
