// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Neptune
{
    /// <summary>
    /// The AWS::Neptune::DBCluster resource creates an Amazon Neptune DB cluster.
    /// </summary>
    [AwsNativeResourceType("aws-native:neptune:DBCluster")]
    public partial class DBCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.
        /// </summary>
        [Output("associatedRoles")]
        public Output<ImmutableArray<Outputs.DBClusterRole>> AssociatedRoles { get; private set; } = null!;

        /// <summary>
        /// Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.
        /// </summary>
        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        /// <summary>
        /// Specifies the number of days for which automatic DB snapshots are retained.
        /// </summary>
        [Output("backupRetentionPeriod")]
        public Output<int?> BackupRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// The resource id for the DB cluster. For example: `cluster-ABCD1234EFGH5678IJKL90MNOP`. The cluster ID uniquely identifies the cluster and is used in things like IAM authentication policies.
        /// </summary>
        [Output("clusterResourceId")]
        public Output<string> ClusterResourceId { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default behaviour is not to copy them.
        /// </summary>
        [Output("copyTagsToSnapshot")]
        public Output<bool?> CopyTagsToSnapshot { get; private set; } = null!;

        /// <summary>
        /// The DB cluster identifier. Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster stored as a lowercase string.
        /// </summary>
        [Output("dbClusterIdentifier")]
        public Output<string?> DbClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// Provides the name of the DB cluster parameter group.
        /// </summary>
        [Output("dbClusterParameterGroupName")]
        public Output<string?> DbClusterParameterGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the DB parameter group to apply to all instances of the DB cluster. Used only in case of a major EngineVersion upgrade request.
        /// </summary>
        [Output("dbInstanceParameterGroupName")]
        public Output<string?> DbInstanceParameterGroupName { get; private set; } = null!;

        /// <summary>
        /// Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.
        /// </summary>
        [Output("dbSubnetGroupName")]
        public Output<string?> DbSubnetGroupName { get; private set; } = null!;

        /// <summary>
        /// Indicates whether or not the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled.
        /// </summary>
        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of log types that are enabled for export to CloudWatch Logs.
        /// </summary>
        [Output("enableCloudwatchLogsExports")]
        public Output<ImmutableArray<string>> EnableCloudwatchLogsExports { get; private set; } = null!;

        /// <summary>
        /// The connection endpoint for the DB cluster. For example: mystack-mydbcluster-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Indicates the database engine version.
        /// </summary>
        [Output("engineVersion")]
        public Output<string?> EngineVersion { get; private set; } = null!;

        /// <summary>
        /// True if mapping of Amazon Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
        /// </summary>
        [Output("iamAuthEnabled")]
        public Output<bool?> IamAuthEnabled { get; private set; } = null!;

        /// <summary>
        /// If `StorageEncrypted` is true, the Amazon KMS key identifier for the encrypted DB cluster.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// Specifies the port that the database engine is listening on.
        /// </summary>
        [Output("port")]
        public Output<string> Port { get; private set; } = null!;

        /// <summary>
        /// Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod.
        /// </summary>
        [Output("preferredBackupWindow")]
        public Output<string?> PreferredBackupWindow { get; private set; } = null!;

        /// <summary>
        /// Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        /// </summary>
        [Output("preferredMaintenanceWindow")]
        public Output<string?> PreferredMaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// The reader endpoint for the DB cluster. For example: mystack-mydbcluster-ro-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com
        /// </summary>
        [Output("readEndpoint")]
        public Output<string> ReadEndpoint { get; private set; } = null!;

        /// <summary>
        /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
        /// 
        /// If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.
        /// 
        /// If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
        /// </summary>
        [Output("restoreToTime")]
        public Output<string?> RestoreToTime { get; private set; } = null!;

        /// <summary>
        /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
        /// 
        /// If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.
        /// 
        /// If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
        /// </summary>
        [Output("restoreType")]
        public Output<string?> RestoreType { get; private set; } = null!;

        /// <summary>
        /// Contains the scaling configuration used by the Neptune Serverless Instances within this DB cluster.
        /// </summary>
        [Output("serverlessScalingConfiguration")]
        public Output<Outputs.DBClusterServerlessScalingConfiguration?> ServerlessScalingConfiguration { get; private set; } = null!;

        /// <summary>
        /// Specifies the identifier for a DB cluster snapshot. Must match the identifier of an existing snapshot.
        /// 
        /// After you restore a DB cluster using a SnapshotIdentifier, you must specify the same SnapshotIdentifier for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed.
        /// 
        /// However, if you don't specify the SnapshotIdentifier, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, the DB cluster is restored from the snapshot specified by the SnapshotIdentifier, and the original DB cluster is deleted.
        /// </summary>
        [Output("snapshotIdentifier")]
        public Output<string?> SnapshotIdentifier { get; private set; } = null!;

        /// <summary>
        /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
        /// 
        /// If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.
        /// 
        /// If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
        /// </summary>
        [Output("sourceDbClusterIdentifier")]
        public Output<string?> SourceDbClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the DB cluster is encrypted.
        /// 
        /// If you specify the `DBClusterIdentifier`, `DBSnapshotIdentifier`, or `SourceDBInstanceIdentifier` property, don't specify this property. The value is inherited from the cluster, snapshot, or source DB instance. If you specify the KmsKeyId property, you must enable encryption.
        /// 
        /// If you specify the KmsKeyId, you must enable encryption by setting StorageEncrypted to true.
        /// </summary>
        [Output("storageEncrypted")]
        public Output<bool?> StorageEncrypted { get; private set; } = null!;

        /// <summary>
        /// The tags assigned to this cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DBClusterTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
        /// 
        /// If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.
        /// 
        /// If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
        /// </summary>
        [Output("useLatestRestorableTime")]
        public Output<bool?> UseLatestRestorableTime { get; private set; } = null!;

        /// <summary>
        /// Provides a list of VPC security groups that the DB cluster belongs to.
        /// </summary>
        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;


        /// <summary>
        /// Create a DBCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DBCluster(string name, DBClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:neptune:DBCluster", name, args ?? new DBClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DBCluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:neptune:DBCluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DBCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DBCluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DBCluster(name, id, options);
        }
    }

    public sealed class DBClusterArgs : global::Pulumi.ResourceArgs
    {
        [Input("associatedRoles")]
        private InputList<Inputs.DBClusterRoleArgs>? _associatedRoles;

        /// <summary>
        /// Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.
        /// </summary>
        public InputList<Inputs.DBClusterRoleArgs> AssociatedRoles
        {
            get => _associatedRoles ?? (_associatedRoles = new InputList<Inputs.DBClusterRoleArgs>());
            set => _associatedRoles = value;
        }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        /// <summary>
        /// Specifies the number of days for which automatic DB snapshots are retained.
        /// </summary>
        [Input("backupRetentionPeriod")]
        public Input<int>? BackupRetentionPeriod { get; set; }

        /// <summary>
        /// A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default behaviour is not to copy them.
        /// </summary>
        [Input("copyTagsToSnapshot")]
        public Input<bool>? CopyTagsToSnapshot { get; set; }

        /// <summary>
        /// The DB cluster identifier. Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster stored as a lowercase string.
        /// </summary>
        [Input("dbClusterIdentifier")]
        public Input<string>? DbClusterIdentifier { get; set; }

        /// <summary>
        /// Provides the name of the DB cluster parameter group.
        /// </summary>
        [Input("dbClusterParameterGroupName")]
        public Input<string>? DbClusterParameterGroupName { get; set; }

        /// <summary>
        /// The name of the DB parameter group to apply to all instances of the DB cluster. Used only in case of a major EngineVersion upgrade request.
        /// </summary>
        [Input("dbInstanceParameterGroupName")]
        public Input<string>? DbInstanceParameterGroupName { get; set; }

        /// <summary>
        /// Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.
        /// </summary>
        [Input("dbSubnetGroupName")]
        public Input<string>? DbSubnetGroupName { get; set; }

        /// <summary>
        /// Indicates whether or not the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        [Input("enableCloudwatchLogsExports")]
        private InputList<string>? _enableCloudwatchLogsExports;

        /// <summary>
        /// Specifies a list of log types that are enabled for export to CloudWatch Logs.
        /// </summary>
        public InputList<string> EnableCloudwatchLogsExports
        {
            get => _enableCloudwatchLogsExports ?? (_enableCloudwatchLogsExports = new InputList<string>());
            set => _enableCloudwatchLogsExports = value;
        }

        /// <summary>
        /// Indicates the database engine version.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// True if mapping of Amazon Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
        /// </summary>
        [Input("iamAuthEnabled")]
        public Input<bool>? IamAuthEnabled { get; set; }

        /// <summary>
        /// If `StorageEncrypted` is true, the Amazon KMS key identifier for the encrypted DB cluster.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod.
        /// </summary>
        [Input("preferredBackupWindow")]
        public Input<string>? PreferredBackupWindow { get; set; }

        /// <summary>
        /// Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        /// <summary>
        /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
        /// 
        /// If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.
        /// 
        /// If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
        /// </summary>
        [Input("restoreToTime")]
        public Input<string>? RestoreToTime { get; set; }

        /// <summary>
        /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
        /// 
        /// If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.
        /// 
        /// If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
        /// </summary>
        [Input("restoreType")]
        public Input<string>? RestoreType { get; set; }

        /// <summary>
        /// Contains the scaling configuration used by the Neptune Serverless Instances within this DB cluster.
        /// </summary>
        [Input("serverlessScalingConfiguration")]
        public Input<Inputs.DBClusterServerlessScalingConfigurationArgs>? ServerlessScalingConfiguration { get; set; }

        /// <summary>
        /// Specifies the identifier for a DB cluster snapshot. Must match the identifier of an existing snapshot.
        /// 
        /// After you restore a DB cluster using a SnapshotIdentifier, you must specify the same SnapshotIdentifier for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed.
        /// 
        /// However, if you don't specify the SnapshotIdentifier, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, the DB cluster is restored from the snapshot specified by the SnapshotIdentifier, and the original DB cluster is deleted.
        /// </summary>
        [Input("snapshotIdentifier")]
        public Input<string>? SnapshotIdentifier { get; set; }

        /// <summary>
        /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
        /// 
        /// If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.
        /// 
        /// If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
        /// </summary>
        [Input("sourceDbClusterIdentifier")]
        public Input<string>? SourceDbClusterIdentifier { get; set; }

        /// <summary>
        /// Indicates whether the DB cluster is encrypted.
        /// 
        /// If you specify the `DBClusterIdentifier`, `DBSnapshotIdentifier`, or `SourceDBInstanceIdentifier` property, don't specify this property. The value is inherited from the cluster, snapshot, or source DB instance. If you specify the KmsKeyId property, you must enable encryption.
        /// 
        /// If you specify the KmsKeyId, you must enable encryption by setting StorageEncrypted to true.
        /// </summary>
        [Input("storageEncrypted")]
        public Input<bool>? StorageEncrypted { get; set; }

        [Input("tags")]
        private InputList<Inputs.DBClusterTagArgs>? _tags;

        /// <summary>
        /// The tags assigned to this cluster.
        /// </summary>
        public InputList<Inputs.DBClusterTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DBClusterTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
        /// 
        /// If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.
        /// 
        /// If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
        /// </summary>
        [Input("useLatestRestorableTime")]
        public Input<bool>? UseLatestRestorableTime { get; set; }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;

        /// <summary>
        /// Provides a list of VPC security groups that the DB cluster belongs to.
        /// </summary>
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public DBClusterArgs()
        {
        }
        public static new DBClusterArgs Empty => new DBClusterArgs();
    }
}
