// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Omics
{
    /// <summary>
    /// Resource Type definition for AWS::Omics::SequenceStore
    /// </summary>
    [AwsNativeResourceType("aws-native:omics:SequenceStore")]
    public partial class SequenceStore : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Location of the access logs.
        /// </summary>
        [Output("accessLogLocation")]
        public Output<string?> AccessLogLocation { get; private set; } = null!;

        /// <summary>
        /// The store's ARN.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// When the store was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// A description for the store.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The algorithm family of the ETag.
        /// </summary>
        [Output("eTagAlgorithmFamily")]
        public Output<Pulumi.AwsNative.Omics.SequenceStoreETagAlgorithmFamily?> ETagAlgorithmFamily { get; private set; } = null!;

        /// <summary>
        /// An S3 location that is used to store files that have failed a direct upload.
        /// </summary>
        [Output("fallbackLocation")]
        public Output<string?> FallbackLocation { get; private set; } = null!;

        /// <summary>
        /// A name for the store.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The tags keys to propagate to the S3 objects associated with read sets in the sequence store.
        /// </summary>
        [Output("propagatedSetLevelTags")]
        public Output<ImmutableArray<string>> PropagatedSetLevelTags { get; private set; } = null!;

        /// <summary>
        /// This is ARN of the access point associated with the S3 bucket storing read sets.
        /// </summary>
        [Output("s3AccessPointArn")]
        public Output<string> S3AccessPointArn { get; private set; } = null!;

        /// <summary>
        /// The resource policy that controls S3 access on the store
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Omics::SequenceStore` for more information about the expected schema for this property.
        /// </summary>
        [Output("s3AccessPolicy")]
        public Output<object?> S3AccessPolicy { get; private set; } = null!;

        /// <summary>
        /// The S3 URI of the sequence store.
        /// </summary>
        [Output("s3Uri")]
        public Output<string> S3Uri { get; private set; } = null!;

        /// <summary>
        /// The store's ID.
        /// </summary>
        [Output("sequenceStoreId")]
        public Output<string> SequenceStoreId { get; private set; } = null!;

        /// <summary>
        /// Server-side encryption (SSE) settings for the store.
        /// </summary>
        [Output("sseConfig")]
        public Output<Outputs.SequenceStoreSseConfig?> SseConfig { get; private set; } = null!;

        /// <summary>
        /// Status of the sequence store.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Omics.SequenceStoreStatus> Status { get; private set; } = null!;

        /// <summary>
        /// The status message of the sequence store.
        /// </summary>
        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;

        /// <summary>
        /// Tags for the store.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The last-updated time of the sequence store.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a SequenceStore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SequenceStore(string name, SequenceStoreArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:omics:SequenceStore", name, args ?? new SequenceStoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SequenceStore(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:omics:SequenceStore", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "eTagAlgorithmFamily",
                    "sseConfig",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SequenceStore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SequenceStore Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SequenceStore(name, id, options);
        }
    }

    public sealed class SequenceStoreArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Location of the access logs.
        /// </summary>
        [Input("accessLogLocation")]
        public Input<string>? AccessLogLocation { get; set; }

        /// <summary>
        /// A description for the store.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The algorithm family of the ETag.
        /// </summary>
        [Input("eTagAlgorithmFamily")]
        public Input<Pulumi.AwsNative.Omics.SequenceStoreETagAlgorithmFamily>? ETagAlgorithmFamily { get; set; }

        /// <summary>
        /// An S3 location that is used to store files that have failed a direct upload.
        /// </summary>
        [Input("fallbackLocation")]
        public Input<string>? FallbackLocation { get; set; }

        /// <summary>
        /// A name for the store.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("propagatedSetLevelTags")]
        private InputList<string>? _propagatedSetLevelTags;

        /// <summary>
        /// The tags keys to propagate to the S3 objects associated with read sets in the sequence store.
        /// </summary>
        public InputList<string> PropagatedSetLevelTags
        {
            get => _propagatedSetLevelTags ?? (_propagatedSetLevelTags = new InputList<string>());
            set => _propagatedSetLevelTags = value;
        }

        /// <summary>
        /// The resource policy that controls S3 access on the store
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Omics::SequenceStore` for more information about the expected schema for this property.
        /// </summary>
        [Input("s3AccessPolicy")]
        public Input<object>? S3AccessPolicy { get; set; }

        /// <summary>
        /// Server-side encryption (SSE) settings for the store.
        /// </summary>
        [Input("sseConfig")]
        public Input<Inputs.SequenceStoreSseConfigArgs>? SseConfig { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags for the store.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SequenceStoreArgs()
        {
        }
        public static new SequenceStoreArgs Empty => new SequenceStoreArgs();
    }
}
