// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Omics
{
    public static class GetWorkflowVersion
    {
        /// <summary>
        /// Definition of AWS::Omics::WorkflowVersion Resource Type.
        /// </summary>
        public static Task<GetWorkflowVersionResult> InvokeAsync(GetWorkflowVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkflowVersionResult>("aws-native:omics:getWorkflowVersion", args ?? new GetWorkflowVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Omics::WorkflowVersion Resource Type.
        /// </summary>
        public static Output<GetWorkflowVersionResult> Invoke(GetWorkflowVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkflowVersionResult>("aws-native:omics:getWorkflowVersion", args ?? new GetWorkflowVersionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Omics::WorkflowVersion Resource Type.
        /// </summary>
        public static Output<GetWorkflowVersionResult> Invoke(GetWorkflowVersionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkflowVersionResult>("aws-native:omics:getWorkflowVersion", args ?? new GetWorkflowVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkflowVersionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of the workflow version.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetWorkflowVersionArgs()
        {
        }
        public static new GetWorkflowVersionArgs Empty => new GetWorkflowVersionArgs();
    }

    public sealed class GetWorkflowVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of the workflow version.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetWorkflowVersionInvokeArgs()
        {
        }
        public static new GetWorkflowVersionInvokeArgs Empty => new GetWorkflowVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkflowVersionResult
    {
        /// <summary>
        /// ARN of the workflow version.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The creation time of the workflow version.
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// The description of the workflow version.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The status of the workflow version.
        /// </summary>
        public readonly Pulumi.AwsNative.Omics.WorkflowVersionWorkflowStatus? Status;
        public readonly double? StorageCapacity;
        public readonly Pulumi.AwsNative.Omics.WorkflowVersionStorageType? StorageType;
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the workflow version.
        /// </summary>
        public readonly Pulumi.AwsNative.Omics.WorkflowVersionWorkflowType? Type;
        public readonly string? Uuid;

        [OutputConstructor]
        private GetWorkflowVersionResult(
            string? arn,

            string? creationTime,

            string? description,

            Pulumi.AwsNative.Omics.WorkflowVersionWorkflowStatus? status,

            double? storageCapacity,

            Pulumi.AwsNative.Omics.WorkflowVersionStorageType? storageType,

            ImmutableDictionary<string, string>? tags,

            Pulumi.AwsNative.Omics.WorkflowVersionWorkflowType? type,

            string? uuid)
        {
            Arn = arn;
            CreationTime = creationTime;
            Description = description;
            Status = status;
            StorageCapacity = storageCapacity;
            StorageType = storageType;
            Tags = tags;
            Type = type;
            Uuid = uuid;
        }
    }
}
