// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Omics
{
    /// <summary>
    /// Definition of AWS::Omics::WorkflowVersion Resource Type.
    /// </summary>
    [AwsNativeResourceType("aws-native:omics:WorkflowVersion")]
    public partial class WorkflowVersion : global::Pulumi.CustomResource
    {
        [Output("accelerators")]
        public Output<Pulumi.AwsNative.Omics.WorkflowVersionAccelerators?> Accelerators { get; private set; } = null!;

        /// <summary>
        /// ARN of the workflow version.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("containerRegistryMap")]
        public Output<Outputs.WorkflowVersionContainerRegistryMap?> ContainerRegistryMap { get; private set; } = null!;

        [Output("containerRegistryMapUri")]
        public Output<string?> ContainerRegistryMapUri { get; private set; } = null!;

        /// <summary>
        /// The creation time of the workflow version.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// Contains information about a source code repository that hosts the workflow definition files.
        /// </summary>
        [Output("definitionRepository")]
        public Output<Outputs.WorkflowVersionDefinitionRepository?> DefinitionRepository { get; private set; } = null!;

        [Output("definitionUri")]
        public Output<string?> DefinitionUri { get; private set; } = null!;

        /// <summary>
        /// The description of the workflow version.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("engine")]
        public Output<Pulumi.AwsNative.Omics.WorkflowVersionWorkflowEngine?> Engine { get; private set; } = null!;

        [Output("main")]
        public Output<string?> Main { get; private set; } = null!;

        [Output("parameterTemplate")]
        public Output<ImmutableDictionary<string, Outputs.WorkflowVersionWorkflowParameter>?> ParameterTemplate { get; private set; } = null!;

        /// <summary>
        /// Path to the primary workflow parameter template JSON file inside the repository
        /// </summary>
        [Output("parameterTemplatePath")]
        public Output<string?> ParameterTemplatePath { get; private set; } = null!;

        /// <summary>
        /// The markdown content for the workflow's README file. This provides documentation and usage information for users of the workflow.
        /// </summary>
        [Output("readmeMarkdown")]
        public Output<string?> ReadmeMarkdown { get; private set; } = null!;

        /// <summary>
        /// The path to the workflow README markdown file within the repository. This file provides documentation and usage information for the workflow. If not specified, the README.md file from the root directory of the repository will be used.
        /// </summary>
        [Output("readmePath")]
        public Output<string?> ReadmePath { get; private set; } = null!;

        /// <summary>
        /// The S3 URI of the README file for the workflow. This file provides documentation and usage information for the workflow. The S3 URI must begin with s3://USER-OWNED-BUCKET/. The requester must have access to the S3 bucket and object. The max README content length is 500 KiB.
        /// </summary>
        [Output("readmeUri")]
        public Output<string?> ReadmeUri { get; private set; } = null!;

        /// <summary>
        /// The status of the workflow version.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Omics.WorkflowVersionWorkflowStatus> Status { get; private set; } = null!;

        [Output("storageCapacity")]
        public Output<double?> StorageCapacity { get; private set; } = null!;

        [Output("storageType")]
        public Output<Pulumi.AwsNative.Omics.WorkflowVersionStorageType?> StorageType { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the workflow version.
        /// </summary>
        [Output("type")]
        public Output<Pulumi.AwsNative.Omics.WorkflowVersionWorkflowType> Type { get; private set; } = null!;

        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;

        /// <summary>
        /// The name of the workflow version.
        /// </summary>
        [Output("versionName")]
        public Output<string> VersionName { get; private set; } = null!;

        [Output("workflowBucketOwnerId")]
        public Output<string?> WorkflowBucketOwnerId { get; private set; } = null!;

        /// <summary>
        /// The workflow's ID.
        /// </summary>
        [Output("workflowId")]
        public Output<string> WorkflowId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkflowVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkflowVersion(string name, WorkflowVersionArgs args, CustomResourceOptions? options = null)
            : base("aws-native:omics:WorkflowVersion", name, args ?? new WorkflowVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkflowVersion(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:omics:WorkflowVersion", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "accelerators",
                    "containerRegistryMap",
                    "containerRegistryMapUri",
                    "definitionRepository",
                    "definitionUri",
                    "engine",
                    "main",
                    "parameterTemplate.*",
                    "parameterTemplatePath",
                    "readmePath",
                    "readmeUri",
                    "versionName",
                    "workflowBucketOwnerId",
                    "workflowId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkflowVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkflowVersion Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WorkflowVersion(name, id, options);
        }
    }

    public sealed class WorkflowVersionArgs : global::Pulumi.ResourceArgs
    {
        [Input("accelerators")]
        public Input<Pulumi.AwsNative.Omics.WorkflowVersionAccelerators>? Accelerators { get; set; }

        [Input("containerRegistryMap")]
        public Input<Inputs.WorkflowVersionContainerRegistryMapArgs>? ContainerRegistryMap { get; set; }

        [Input("containerRegistryMapUri")]
        public Input<string>? ContainerRegistryMapUri { get; set; }

        /// <summary>
        /// Contains information about a source code repository that hosts the workflow definition files.
        /// </summary>
        [Input("definitionRepository")]
        public Input<Inputs.WorkflowVersionDefinitionRepositoryArgs>? DefinitionRepository { get; set; }

        [Input("definitionUri")]
        public Input<string>? DefinitionUri { get; set; }

        /// <summary>
        /// The description of the workflow version.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("engine")]
        public Input<Pulumi.AwsNative.Omics.WorkflowVersionWorkflowEngine>? Engine { get; set; }

        [Input("main")]
        public Input<string>? Main { get; set; }

        [Input("parameterTemplate")]
        private InputMap<Inputs.WorkflowVersionWorkflowParameterArgs>? _parameterTemplate;
        public InputMap<Inputs.WorkflowVersionWorkflowParameterArgs> ParameterTemplate
        {
            get => _parameterTemplate ?? (_parameterTemplate = new InputMap<Inputs.WorkflowVersionWorkflowParameterArgs>());
            set => _parameterTemplate = value;
        }

        /// <summary>
        /// Path to the primary workflow parameter template JSON file inside the repository
        /// </summary>
        [Input("parameterTemplatePath")]
        public Input<string>? ParameterTemplatePath { get; set; }

        /// <summary>
        /// The markdown content for the workflow's README file. This provides documentation and usage information for users of the workflow.
        /// </summary>
        [Input("readmeMarkdown")]
        public Input<string>? ReadmeMarkdown { get; set; }

        /// <summary>
        /// The path to the workflow README markdown file within the repository. This file provides documentation and usage information for the workflow. If not specified, the README.md file from the root directory of the repository will be used.
        /// </summary>
        [Input("readmePath")]
        public Input<string>? ReadmePath { get; set; }

        /// <summary>
        /// The S3 URI of the README file for the workflow. This file provides documentation and usage information for the workflow. The S3 URI must begin with s3://USER-OWNED-BUCKET/. The requester must have access to the S3 bucket and object. The max README content length is 500 KiB.
        /// </summary>
        [Input("readmeUri")]
        public Input<string>? ReadmeUri { get; set; }

        [Input("storageCapacity")]
        public Input<double>? StorageCapacity { get; set; }

        [Input("storageType")]
        public Input<Pulumi.AwsNative.Omics.WorkflowVersionStorageType>? StorageType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the workflow version.
        /// </summary>
        [Input("versionName")]
        public Input<string>? VersionName { get; set; }

        [Input("workflowBucketOwnerId")]
        public Input<string>? WorkflowBucketOwnerId { get; set; }

        /// <summary>
        /// The workflow's ID.
        /// </summary>
        [Input("workflowId", required: true)]
        public Input<string> WorkflowId { get; set; } = null!;

        public WorkflowVersionArgs()
        {
        }
        public static new WorkflowVersionArgs Empty => new WorkflowVersionArgs();
    }
}
