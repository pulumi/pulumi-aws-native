// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Omics
{
    /// <summary>
    /// Definition of AWS::Omics::Workflow Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:omics:Workflow")]
    public partial class Workflow : global::Pulumi.CustomResource
    {
        [Output("accelerators")]
        public Output<Pulumi.AwsNative.Omics.WorkflowAccelerators?> Accelerators { get; private set; } = null!;

        /// <summary>
        /// The ARN for the workflow.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The workflow's ID.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// When the workflow was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        [Output("definitionRepository")]
        public Output<Outputs.WorkflowDefinitionRepository?> DefinitionRepository { get; private set; } = null!;

        /// <summary>
        /// The URI of a definition for the workflow.
        /// </summary>
        [Output("definitionUri")]
        public Output<string?> DefinitionUri { get; private set; } = null!;

        /// <summary>
        /// The parameter's description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// An engine for the workflow.
        /// </summary>
        [Output("engine")]
        public Output<Pulumi.AwsNative.Omics.WorkflowEngine?> Engine { get; private set; } = null!;

        /// <summary>
        /// The path of the main definition file for the workflow.
        /// </summary>
        [Output("main")]
        public Output<string?> Main { get; private set; } = null!;

        /// <summary>
        /// The workflow's name.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The workflow's parameter template.
        /// </summary>
        [Output("parameterTemplate")]
        public Output<ImmutableDictionary<string, Outputs.WorkflowParameter>?> ParameterTemplate { get; private set; } = null!;

        /// <summary>
        /// Path to the primary workflow parameter template JSON file inside the repository
        /// </summary>
        [Output("parameterTemplatePath")]
        public Output<string?> ParameterTemplatePath { get; private set; } = null!;

        /// <summary>
        /// The markdown content for the workflow's README file. This provides documentation and usage information for users of the workflow.
        /// </summary>
        [Output("readmeMarkdown")]
        public Output<string?> ReadmeMarkdown { get; private set; } = null!;

        /// <summary>
        /// The path to the workflow README markdown file within the repository. This file provides documentation and usage information for the workflow. If not specified, the README.md file from the root directory of the repository will be used.
        /// </summary>
        [Output("readmePath")]
        public Output<string?> ReadmePath { get; private set; } = null!;

        /// <summary>
        /// The S3 URI of the README file for the workflow. This file provides documentation and usage information for the workflow. The S3 URI must begin with s3://USER-OWNED-BUCKET/. The requester must have access to the S3 bucket and object. The max README content length is 500 KiB.
        /// </summary>
        [Output("readmeUri")]
        public Output<string?> ReadmeUri { get; private set; } = null!;

        /// <summary>
        /// The workflow's status.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Omics.WorkflowStatus> Status { get; private set; } = null!;

        /// <summary>
        /// The default static storage capacity (in gibibytes) for runs that use this workflow or workflow version. The `storageCapacity` can be overwritten at run time. The storage capacity is not required for runs with a `DYNAMIC` storage type.
        /// </summary>
        [Output("storageCapacity")]
        public Output<double?> StorageCapacity { get; private set; } = null!;

        [Output("storageType")]
        public Output<Pulumi.AwsNative.Omics.WorkflowStorageType?> StorageType { get; private set; } = null!;

        /// <summary>
        /// Tags for the workflow.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The workflow's type.
        /// </summary>
        [Output("type")]
        public Output<Pulumi.AwsNative.Omics.WorkflowType> Type { get; private set; } = null!;

        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;

        /// <summary>
        /// Optional workflow bucket owner ID to verify the workflow bucket
        /// </summary>
        [Output("workflowBucketOwnerId")]
        public Output<string?> WorkflowBucketOwnerId { get; private set; } = null!;


        /// <summary>
        /// Create a Workflow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workflow(string name, WorkflowArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:omics:Workflow", name, args ?? new WorkflowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workflow(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:omics:Workflow", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "accelerators",
                    "definitionRepository",
                    "definitionUri",
                    "engine",
                    "main",
                    "parameterTemplate.*",
                    "parameterTemplatePath",
                    "readmePath",
                    "readmeUri",
                    "storageCapacity",
                    "workflowBucketOwnerId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workflow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workflow Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Workflow(name, id, options);
        }
    }

    public sealed class WorkflowArgs : global::Pulumi.ResourceArgs
    {
        [Input("accelerators")]
        public Input<Pulumi.AwsNative.Omics.WorkflowAccelerators>? Accelerators { get; set; }

        [Input("definitionRepository")]
        public Input<Inputs.WorkflowDefinitionRepositoryArgs>? DefinitionRepository { get; set; }

        /// <summary>
        /// The URI of a definition for the workflow.
        /// </summary>
        [Input("definitionUri")]
        public Input<string>? DefinitionUri { get; set; }

        /// <summary>
        /// The parameter's description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// An engine for the workflow.
        /// </summary>
        [Input("engine")]
        public Input<Pulumi.AwsNative.Omics.WorkflowEngine>? Engine { get; set; }

        /// <summary>
        /// The path of the main definition file for the workflow.
        /// </summary>
        [Input("main")]
        public Input<string>? Main { get; set; }

        /// <summary>
        /// The workflow's name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameterTemplate")]
        private InputMap<Inputs.WorkflowParameterArgs>? _parameterTemplate;

        /// <summary>
        /// The workflow's parameter template.
        /// </summary>
        public InputMap<Inputs.WorkflowParameterArgs> ParameterTemplate
        {
            get => _parameterTemplate ?? (_parameterTemplate = new InputMap<Inputs.WorkflowParameterArgs>());
            set => _parameterTemplate = value;
        }

        /// <summary>
        /// Path to the primary workflow parameter template JSON file inside the repository
        /// </summary>
        [Input("parameterTemplatePath")]
        public Input<string>? ParameterTemplatePath { get; set; }

        /// <summary>
        /// The markdown content for the workflow's README file. This provides documentation and usage information for users of the workflow.
        /// </summary>
        [Input("readmeMarkdown")]
        public Input<string>? ReadmeMarkdown { get; set; }

        /// <summary>
        /// The path to the workflow README markdown file within the repository. This file provides documentation and usage information for the workflow. If not specified, the README.md file from the root directory of the repository will be used.
        /// </summary>
        [Input("readmePath")]
        public Input<string>? ReadmePath { get; set; }

        /// <summary>
        /// The S3 URI of the README file for the workflow. This file provides documentation and usage information for the workflow. The S3 URI must begin with s3://USER-OWNED-BUCKET/. The requester must have access to the S3 bucket and object. The max README content length is 500 KiB.
        /// </summary>
        [Input("readmeUri")]
        public Input<string>? ReadmeUri { get; set; }

        /// <summary>
        /// The default static storage capacity (in gibibytes) for runs that use this workflow or workflow version. The `storageCapacity` can be overwritten at run time. The storage capacity is not required for runs with a `DYNAMIC` storage type.
        /// </summary>
        [Input("storageCapacity")]
        public Input<double>? StorageCapacity { get; set; }

        [Input("storageType")]
        public Input<Pulumi.AwsNative.Omics.WorkflowStorageType>? StorageType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags for the workflow.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Optional workflow bucket owner ID to verify the workflow bucket
        /// </summary>
        [Input("workflowBucketOwnerId")]
        public Input<string>? WorkflowBucketOwnerId { get; set; }

        public WorkflowArgs()
        {
        }
        public static new WorkflowArgs Empty => new WorkflowArgs();
    }
}
