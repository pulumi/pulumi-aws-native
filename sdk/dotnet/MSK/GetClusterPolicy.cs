// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MSK
{
    public static class GetClusterPolicy
    {
        /// <summary>
        /// Resource Type definition for AWS::MSK::ClusterPolicy
        /// </summary>
        public static Task<GetClusterPolicyResult> InvokeAsync(GetClusterPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterPolicyResult>("aws-native:msk:getClusterPolicy", args ?? new GetClusterPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::MSK::ClusterPolicy
        /// </summary>
        public static Output<GetClusterPolicyResult> Invoke(GetClusterPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterPolicyResult>("aws-native:msk:getClusterPolicy", args ?? new GetClusterPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The arn of the cluster for the resource policy.
        /// </summary>
        [Input("clusterArn", required: true)]
        public string ClusterArn { get; set; } = null!;

        public GetClusterPolicyArgs()
        {
        }
        public static new GetClusterPolicyArgs Empty => new GetClusterPolicyArgs();
    }

    public sealed class GetClusterPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The arn of the cluster for the resource policy.
        /// </summary>
        [Input("clusterArn", required: true)]
        public Input<string> ClusterArn { get; set; } = null!;

        public GetClusterPolicyInvokeArgs()
        {
        }
        public static new GetClusterPolicyInvokeArgs Empty => new GetClusterPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterPolicyResult
    {
        /// <summary>
        /// The current version of the policy attached to the specified cluster
        /// </summary>
        public readonly string? CurrentVersion;
        /// <summary>
        /// A policy document containing permissions to add to the specified cluster.
        /// </summary>
        public readonly object? Policy;

        [OutputConstructor]
        private GetClusterPolicyResult(
            string? currentVersion,

            object? policy)
        {
            CurrentVersion = currentVersion;
            Policy = policy;
        }
    }
}
