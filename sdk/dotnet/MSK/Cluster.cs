// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MSK
{
    /// <summary>
    /// Resource Type definition for AWS::MSK::Cluster
    /// </summary>
    [Obsolete(@"Cluster is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:msk:Cluster")]
    public partial class Cluster : Pulumi.CustomResource
    {
        [Output("brokerNodeGroupInfo")]
        public Output<Outputs.ClusterBrokerNodeGroupInfo> BrokerNodeGroupInfo { get; private set; } = null!;

        [Output("clientAuthentication")]
        public Output<Outputs.ClusterClientAuthentication?> ClientAuthentication { get; private set; } = null!;

        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        [Output("configurationInfo")]
        public Output<Outputs.ClusterConfigurationInfo?> ConfigurationInfo { get; private set; } = null!;

        [Output("encryptionInfo")]
        public Output<Outputs.ClusterEncryptionInfo?> EncryptionInfo { get; private set; } = null!;

        [Output("enhancedMonitoring")]
        public Output<string?> EnhancedMonitoring { get; private set; } = null!;

        [Output("kafkaVersion")]
        public Output<string> KafkaVersion { get; private set; } = null!;

        [Output("loggingInfo")]
        public Output<Outputs.ClusterLoggingInfo?> LoggingInfo { get; private set; } = null!;

        [Output("numberOfBrokerNodes")]
        public Output<int> NumberOfBrokerNodes { get; private set; } = null!;

        [Output("openMonitoring")]
        public Output<Outputs.ClusterOpenMonitoring?> OpenMonitoring { get; private set; } = null!;

        [Output("tags")]
        public Output<object?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("aws-native:msk:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:msk:Cluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        [Input("brokerNodeGroupInfo", required: true)]
        public Input<Inputs.ClusterBrokerNodeGroupInfoArgs> BrokerNodeGroupInfo { get; set; } = null!;

        [Input("clientAuthentication")]
        public Input<Inputs.ClusterClientAuthenticationArgs>? ClientAuthentication { get; set; }

        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        [Input("configurationInfo")]
        public Input<Inputs.ClusterConfigurationInfoArgs>? ConfigurationInfo { get; set; }

        [Input("encryptionInfo")]
        public Input<Inputs.ClusterEncryptionInfoArgs>? EncryptionInfo { get; set; }

        [Input("enhancedMonitoring")]
        public Input<string>? EnhancedMonitoring { get; set; }

        [Input("kafkaVersion", required: true)]
        public Input<string> KafkaVersion { get; set; } = null!;

        [Input("loggingInfo")]
        public Input<Inputs.ClusterLoggingInfoArgs>? LoggingInfo { get; set; }

        [Input("numberOfBrokerNodes", required: true)]
        public Input<int> NumberOfBrokerNodes { get; set; } = null!;

        [Input("openMonitoring")]
        public Input<Inputs.ClusterOpenMonitoringArgs>? OpenMonitoring { get; set; }

        [Input("tags")]
        public Input<object>? Tags { get; set; }

        public ClusterArgs()
        {
        }
    }
}
