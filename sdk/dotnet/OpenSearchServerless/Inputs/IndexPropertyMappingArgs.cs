// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.OpenSearchServerless.Inputs
{

    public sealed class IndexPropertyMappingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Dimension size for vector fields, defines the number of dimensions in the vector
        /// </summary>
        [Input("dimension")]
        public Input<int>? Dimension { get; set; }

        /// <summary>
        /// Whether a field should be indexed
        /// </summary>
        [Input("index")]
        public Input<bool>? Index { get; set; }

        /// <summary>
        /// Configuration for k-NN search method
        /// </summary>
        [Input("method")]
        public Input<Inputs.IndexPropertyMappingMethodPropertiesArgs>? Method { get; set; }

        [Input("properties")]
        private InputMap<Inputs.IndexPropertyMappingArgs>? _properties;

        /// <summary>
        /// Nested fields within an object or nested field type
        /// </summary>
        public InputMap<Inputs.IndexPropertyMappingArgs> Properties
        {
            get => _properties ?? (_properties = new InputMap<Inputs.IndexPropertyMappingArgs>());
            set => _properties = value;
        }

        /// <summary>
        /// The field data type. Must be a valid OpenSearch field type.
        /// </summary>
        [Input("type", required: true)]
        public Input<Pulumi.AwsNative.OpenSearchServerless.IndexPropertyMappingType> Type { get; set; } = null!;

        /// <summary>
        /// Default value for the field when not specified in a document
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public IndexPropertyMappingArgs()
        {
        }
        public static new IndexPropertyMappingArgs Empty => new IndexPropertyMappingArgs();
    }
}
