// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.OpenSearchServerless
{
    /// <summary>
    /// Amazon OpenSearchServerless security policy resource
    /// 
    /// ## Example Usage
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSecurityPolicy = new AwsNative.OpenSearchServerless.SecurityPolicy("testSecurityPolicy", new()
    ///     {
    ///         Name = "logs-encryption-policy",
    ///         Type = AwsNative.OpenSearchServerless.SecurityPolicyType.Encryption,
    ///         Description = "Encryption policy for test collections",
    ///         Policy = "{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/logs*\"]}],\"AWSOwnedKey\":true}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSecurityPolicy = new AwsNative.OpenSearchServerless.SecurityPolicy("testSecurityPolicy", new()
    ///     {
    ///         Name = "logs-encryption-policy",
    ///         Type = AwsNative.OpenSearchServerless.SecurityPolicyType.Encryption,
    ///         Description = "Encryption policy for test collections",
    ///         Policy = "{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/logs*\"]}],\"AWSOwnedKey\":true}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var securityPolicy = new AwsNative.OpenSearchServerless.SecurityPolicy("securityPolicy", new()
    ///     {
    ///         Name = "logs-network-policy",
    ///         Type = AwsNative.OpenSearchServerless.SecurityPolicyType.Network,
    ///         Description = "Network policy for test collections",
    ///         Policy = "[{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/logs*\"]}, {\"ResourceType\":\"dashboard\",\"Resource\":[\"collection/logs*\"]}],\"AllowFromPublic\":true}]",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var securityPolicy = new AwsNative.OpenSearchServerless.SecurityPolicy("securityPolicy", new()
    ///     {
    ///         Name = "logs-network-policy",
    ///         Type = AwsNative.OpenSearchServerless.SecurityPolicyType.Network,
    ///         Description = "Network policy for test collections",
    ///         Policy = "[{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/logs*\"]}, {\"ResourceType\":\"dashboard\",\"Resource\":[\"collection/logs*\"]}],\"AllowFromPublic\":true}]",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// </summary>
    [AwsNativeResourceType("aws-native:opensearchserverless:SecurityPolicy")]
    public partial class SecurityPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the policy
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the policy
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The JSON policy document that is the content for the policy
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;

        /// <summary>
        /// The type of security policy. Can be either `encryption` or `network` .
        /// </summary>
        [Output("type")]
        public Output<Pulumi.AwsNative.OpenSearchServerless.SecurityPolicyType> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityPolicy(string name, SecurityPolicyArgs args, CustomResourceOptions? options = null)
            : base("aws-native:opensearchserverless:SecurityPolicy", name, args ?? new SecurityPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:opensearchserverless:SecurityPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                    "type",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SecurityPolicy(name, id, options);
        }
    }

    public sealed class SecurityPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the policy
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The JSON policy document that is the content for the policy
        /// </summary>
        [Input("policy", required: true)]
        public Input<string> Policy { get; set; } = null!;

        /// <summary>
        /// The type of security policy. Can be either `encryption` or `network` .
        /// </summary>
        [Input("type", required: true)]
        public Input<Pulumi.AwsNative.OpenSearchServerless.SecurityPolicyType> Type { get; set; } = null!;

        public SecurityPolicyArgs()
        {
        }
        public static new SecurityPolicyArgs Empty => new SecurityPolicyArgs();
    }
}
