// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3ObjectLambda.Outputs
{

    /// <summary>
    /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html
    /// </summary>
    [OutputType]
    public sealed class AccessPointObjectLambdaConfiguration
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration-allowedfeatures
        /// </summary>
        public readonly ImmutableArray<string> AllowedFeatures;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration-cloudwatchmetricsenabled
        /// </summary>
        public readonly bool? CloudWatchMetricsEnabled;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration-supportingaccesspoint
        /// </summary>
        public readonly string SupportingAccessPoint;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3objectlambda-accesspoint-objectlambdaconfiguration.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration-transformationconfigurations
        /// </summary>
        public readonly ImmutableArray<Outputs.AccessPointTransformationConfiguration> TransformationConfigurations;

        [OutputConstructor]
        private AccessPointObjectLambdaConfiguration(
            ImmutableArray<string> allowedFeatures,

            bool? cloudWatchMetricsEnabled,

            string supportingAccessPoint,

            ImmutableArray<Outputs.AccessPointTransformationConfiguration> transformationConfigurations)
        {
            AllowedFeatures = allowedFeatures;
            CloudWatchMetricsEnabled = cloudWatchMetricsEnabled;
            SupportingAccessPoint = supportingAccessPoint;
            TransformationConfigurations = transformationConfigurations;
        }
    }
}
