// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataBrew.Outputs
{

    [OutputType]
    public sealed class JobDataCatalogOutput
    {
        /// <summary>
        /// The unique identifier of the AWS account that holds the Data Catalog that stores the data.
        /// </summary>
        public readonly string? CatalogId;
        /// <summary>
        /// The name of a database in the Data Catalog.
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// Represents options that specify how and where DataBrew writes the database output generated by recipe jobs.
        /// </summary>
        public readonly Outputs.JobDatabaseTableOutputOptions? DatabaseOptions;
        /// <summary>
        /// A value that, if true, means that any data in the location specified for output is overwritten with new output. Not supported with DatabaseOptions.
        /// </summary>
        public readonly bool? Overwrite;
        /// <summary>
        /// Represents options that specify how and where DataBrew writes the Amazon S3 output generated by recipe jobs.
        /// </summary>
        public readonly Outputs.JobS3TableOutputOptions? S3Options;
        /// <summary>
        /// The name of a table in the Data Catalog.
        /// </summary>
        public readonly string TableName;

        [OutputConstructor]
        private JobDataCatalogOutput(
            string? catalogId,

            string databaseName,

            Outputs.JobDatabaseTableOutputOptions? databaseOptions,

            bool? overwrite,

            Outputs.JobS3TableOutputOptions? s3Options,

            string tableName)
        {
            CatalogId = catalogId;
            DatabaseName = databaseName;
            DatabaseOptions = databaseOptions;
            Overwrite = overwrite;
            S3Options = s3Options;
            TableName = tableName;
        }
    }
}
