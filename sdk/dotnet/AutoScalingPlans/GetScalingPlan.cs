// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AutoScalingPlans
{
    public static class GetScalingPlan
    {
        /// <summary>
        /// Resource Type definition for AWS::AutoScalingPlans::ScalingPlan
        /// </summary>
        public static Task<GetScalingPlanResult> InvokeAsync(GetScalingPlanArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScalingPlanResult>("aws-native:autoscalingplans:getScalingPlan", args ?? new GetScalingPlanArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AutoScalingPlans::ScalingPlan
        /// </summary>
        public static Output<GetScalingPlanResult> Invoke(GetScalingPlanInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetScalingPlanResult>("aws-native:autoscalingplans:getScalingPlan", args ?? new GetScalingPlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScalingPlanArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetScalingPlanArgs()
        {
        }
    }

    public sealed class GetScalingPlanInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetScalingPlanInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScalingPlanResult
    {
        public readonly Outputs.ScalingPlanApplicationSource? ApplicationSource;
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.ScalingPlanScalingInstruction> ScalingInstructions;
        public readonly string? ScalingPlanName;
        public readonly string? ScalingPlanVersion;

        [OutputConstructor]
        private GetScalingPlanResult(
            Outputs.ScalingPlanApplicationSource? applicationSource,

            string? id,

            ImmutableArray<Outputs.ScalingPlanScalingInstruction> scalingInstructions,

            string? scalingPlanName,

            string? scalingPlanVersion)
        {
            ApplicationSource = applicationSource;
            Id = id;
            ScalingInstructions = scalingInstructions;
            ScalingPlanName = scalingPlanName;
            ScalingPlanVersion = scalingPlanVersion;
        }
    }
}
