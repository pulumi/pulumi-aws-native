// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DMS
{
    /// <summary>
    /// Resource Type definition for AWS::DMS::Endpoint
    /// </summary>
    [Obsolete(@"Endpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:dms:Endpoint")]
    public partial class Endpoint : Pulumi.CustomResource
    {
        [Output("certificateArn")]
        public Output<string?> CertificateArn { get; private set; } = null!;

        [Output("databaseName")]
        public Output<string?> DatabaseName { get; private set; } = null!;

        [Output("docDbSettings")]
        public Output<Outputs.EndpointDocDbSettings?> DocDbSettings { get; private set; } = null!;

        [Output("dynamoDbSettings")]
        public Output<Outputs.EndpointDynamoDbSettings?> DynamoDbSettings { get; private set; } = null!;

        [Output("elasticsearchSettings")]
        public Output<Outputs.EndpointElasticsearchSettings?> ElasticsearchSettings { get; private set; } = null!;

        [Output("endpointIdentifier")]
        public Output<string?> EndpointIdentifier { get; private set; } = null!;

        [Output("endpointType")]
        public Output<string> EndpointType { get; private set; } = null!;

        [Output("engineName")]
        public Output<string> EngineName { get; private set; } = null!;

        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        [Output("extraConnectionAttributes")]
        public Output<string?> ExtraConnectionAttributes { get; private set; } = null!;

        [Output("ibmDb2Settings")]
        public Output<Outputs.EndpointIbmDb2Settings?> IbmDb2Settings { get; private set; } = null!;

        [Output("kafkaSettings")]
        public Output<Outputs.EndpointKafkaSettings?> KafkaSettings { get; private set; } = null!;

        [Output("kinesisSettings")]
        public Output<Outputs.EndpointKinesisSettings?> KinesisSettings { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        [Output("microsoftSqlServerSettings")]
        public Output<Outputs.EndpointMicrosoftSqlServerSettings?> MicrosoftSqlServerSettings { get; private set; } = null!;

        [Output("mongoDbSettings")]
        public Output<Outputs.EndpointMongoDbSettings?> MongoDbSettings { get; private set; } = null!;

        [Output("mySqlSettings")]
        public Output<Outputs.EndpointMySqlSettings?> MySqlSettings { get; private set; } = null!;

        [Output("neptuneSettings")]
        public Output<Outputs.EndpointNeptuneSettings?> NeptuneSettings { get; private set; } = null!;

        [Output("oracleSettings")]
        public Output<Outputs.EndpointOracleSettings?> OracleSettings { get; private set; } = null!;

        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        [Output("postgreSqlSettings")]
        public Output<Outputs.EndpointPostgreSqlSettings?> PostgreSqlSettings { get; private set; } = null!;

        [Output("redisSettings")]
        public Output<Outputs.EndpointRedisSettings?> RedisSettings { get; private set; } = null!;

        [Output("redshiftSettings")]
        public Output<Outputs.EndpointRedshiftSettings?> RedshiftSettings { get; private set; } = null!;

        [Output("resourceIdentifier")]
        public Output<string?> ResourceIdentifier { get; private set; } = null!;

        [Output("s3Settings")]
        public Output<Outputs.EndpointS3Settings?> S3Settings { get; private set; } = null!;

        [Output("serverName")]
        public Output<string?> ServerName { get; private set; } = null!;

        [Output("sslMode")]
        public Output<string?> SslMode { get; private set; } = null!;

        [Output("sybaseSettings")]
        public Output<Outputs.EndpointSybaseSettings?> SybaseSettings { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.EndpointTag>> Tags { get; private set; } = null!;

        [Output("username")]
        public Output<string?> Username { get; private set; } = null!;


        /// <summary>
        /// Create a Endpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Endpoint(string name, EndpointArgs args, CustomResourceOptions? options = null)
            : base("aws-native:dms:Endpoint", name, args ?? new EndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Endpoint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:dms:Endpoint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Endpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Endpoint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Endpoint(name, id, options);
        }
    }

    public sealed class EndpointArgs : Pulumi.ResourceArgs
    {
        [Input("certificateArn")]
        public Input<string>? CertificateArn { get; set; }

        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        [Input("docDbSettings")]
        public Input<Inputs.EndpointDocDbSettingsArgs>? DocDbSettings { get; set; }

        [Input("dynamoDbSettings")]
        public Input<Inputs.EndpointDynamoDbSettingsArgs>? DynamoDbSettings { get; set; }

        [Input("elasticsearchSettings")]
        public Input<Inputs.EndpointElasticsearchSettingsArgs>? ElasticsearchSettings { get; set; }

        [Input("endpointIdentifier")]
        public Input<string>? EndpointIdentifier { get; set; }

        [Input("endpointType", required: true)]
        public Input<string> EndpointType { get; set; } = null!;

        [Input("engineName", required: true)]
        public Input<string> EngineName { get; set; } = null!;

        [Input("extraConnectionAttributes")]
        public Input<string>? ExtraConnectionAttributes { get; set; }

        [Input("ibmDb2Settings")]
        public Input<Inputs.EndpointIbmDb2SettingsArgs>? IbmDb2Settings { get; set; }

        [Input("kafkaSettings")]
        public Input<Inputs.EndpointKafkaSettingsArgs>? KafkaSettings { get; set; }

        [Input("kinesisSettings")]
        public Input<Inputs.EndpointKinesisSettingsArgs>? KinesisSettings { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("microsoftSqlServerSettings")]
        public Input<Inputs.EndpointMicrosoftSqlServerSettingsArgs>? MicrosoftSqlServerSettings { get; set; }

        [Input("mongoDbSettings")]
        public Input<Inputs.EndpointMongoDbSettingsArgs>? MongoDbSettings { get; set; }

        [Input("mySqlSettings")]
        public Input<Inputs.EndpointMySqlSettingsArgs>? MySqlSettings { get; set; }

        [Input("neptuneSettings")]
        public Input<Inputs.EndpointNeptuneSettingsArgs>? NeptuneSettings { get; set; }

        [Input("oracleSettings")]
        public Input<Inputs.EndpointOracleSettingsArgs>? OracleSettings { get; set; }

        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("postgreSqlSettings")]
        public Input<Inputs.EndpointPostgreSqlSettingsArgs>? PostgreSqlSettings { get; set; }

        [Input("redisSettings")]
        public Input<Inputs.EndpointRedisSettingsArgs>? RedisSettings { get; set; }

        [Input("redshiftSettings")]
        public Input<Inputs.EndpointRedshiftSettingsArgs>? RedshiftSettings { get; set; }

        [Input("resourceIdentifier")]
        public Input<string>? ResourceIdentifier { get; set; }

        [Input("s3Settings")]
        public Input<Inputs.EndpointS3SettingsArgs>? S3Settings { get; set; }

        [Input("serverName")]
        public Input<string>? ServerName { get; set; }

        [Input("sslMode")]
        public Input<string>? SslMode { get; set; }

        [Input("sybaseSettings")]
        public Input<Inputs.EndpointSybaseSettingsArgs>? SybaseSettings { get; set; }

        [Input("tags")]
        private InputList<Inputs.EndpointTagArgs>? _tags;
        public InputList<Inputs.EndpointTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.EndpointTagArgs>());
            set => _tags = value;
        }

        [Input("username")]
        public Input<string>? Username { get; set; }

        public EndpointArgs()
        {
        }
    }
}
