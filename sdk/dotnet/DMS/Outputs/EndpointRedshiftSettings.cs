// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DMS.Outputs
{

    [OutputType]
    public sealed class EndpointRedshiftSettings
    {
        public readonly bool? AcceptAnyDate;
        public readonly string? AfterConnectScript;
        public readonly string? BucketFolder;
        public readonly string? BucketName;
        public readonly bool? CaseSensitiveNames;
        public readonly bool? CompUpdate;
        public readonly int? ConnectionTimeout;
        public readonly string? DateFormat;
        public readonly bool? EmptyAsNull;
        public readonly string? EncryptionMode;
        public readonly bool? ExplicitIds;
        public readonly int? FileTransferUploadStreams;
        public readonly int? LoadTimeout;
        public readonly int? MaxFileSize;
        public readonly bool? RemoveQuotes;
        public readonly string? ReplaceChars;
        public readonly string? ReplaceInvalidChars;
        public readonly string? SecretsManagerAccessRoleArn;
        public readonly string? SecretsManagerSecretId;
        public readonly string? ServerSideEncryptionKmsKeyId;
        public readonly string? ServiceAccessRoleArn;
        public readonly string? TimeFormat;
        public readonly bool? TrimBlanks;
        public readonly bool? TruncateColumns;
        public readonly int? WriteBufferSize;

        [OutputConstructor]
        private EndpointRedshiftSettings(
            bool? acceptAnyDate,

            string? afterConnectScript,

            string? bucketFolder,

            string? bucketName,

            bool? caseSensitiveNames,

            bool? compUpdate,

            int? connectionTimeout,

            string? dateFormat,

            bool? emptyAsNull,

            string? encryptionMode,

            bool? explicitIds,

            int? fileTransferUploadStreams,

            int? loadTimeout,

            int? maxFileSize,

            bool? removeQuotes,

            string? replaceChars,

            string? replaceInvalidChars,

            string? secretsManagerAccessRoleArn,

            string? secretsManagerSecretId,

            string? serverSideEncryptionKmsKeyId,

            string? serviceAccessRoleArn,

            string? timeFormat,

            bool? trimBlanks,

            bool? truncateColumns,

            int? writeBufferSize)
        {
            AcceptAnyDate = acceptAnyDate;
            AfterConnectScript = afterConnectScript;
            BucketFolder = bucketFolder;
            BucketName = bucketName;
            CaseSensitiveNames = caseSensitiveNames;
            CompUpdate = compUpdate;
            ConnectionTimeout = connectionTimeout;
            DateFormat = dateFormat;
            EmptyAsNull = emptyAsNull;
            EncryptionMode = encryptionMode;
            ExplicitIds = explicitIds;
            FileTransferUploadStreams = fileTransferUploadStreams;
            LoadTimeout = loadTimeout;
            MaxFileSize = maxFileSize;
            RemoveQuotes = removeQuotes;
            ReplaceChars = replaceChars;
            ReplaceInvalidChars = replaceInvalidChars;
            SecretsManagerAccessRoleArn = secretsManagerAccessRoleArn;
            SecretsManagerSecretId = secretsManagerSecretId;
            ServerSideEncryptionKmsKeyId = serverSideEncryptionKmsKeyId;
            ServiceAccessRoleArn = serviceAccessRoleArn;
            TimeFormat = timeFormat;
            TrimBlanks = trimBlanks;
            TruncateColumns = truncateColumns;
            WriteBufferSize = writeBufferSize;
        }
    }
}
