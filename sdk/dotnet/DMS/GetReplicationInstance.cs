// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DMS
{
    public static class GetReplicationInstance
    {
        /// <summary>
        /// Resource Type definition for AWS::DMS::ReplicationInstance
        /// </summary>
        public static Task<GetReplicationInstanceResult> InvokeAsync(GetReplicationInstanceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetReplicationInstanceResult>("aws-native:dms:getReplicationInstance", args ?? new GetReplicationInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::DMS::ReplicationInstance
        /// </summary>
        public static Output<GetReplicationInstanceResult> Invoke(GetReplicationInstanceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetReplicationInstanceResult>("aws-native:dms:getReplicationInstance", args ?? new GetReplicationInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReplicationInstanceArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetReplicationInstanceArgs()
        {
        }
    }

    public sealed class GetReplicationInstanceInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetReplicationInstanceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetReplicationInstanceResult
    {
        public readonly int? AllocatedStorage;
        public readonly bool? AllowMajorVersionUpgrade;
        public readonly bool? AutoMinorVersionUpgrade;
        public readonly string? AvailabilityZone;
        public readonly string? EngineVersion;
        public readonly string? Id;
        public readonly bool? MultiAZ;
        public readonly string? PreferredMaintenanceWindow;
        public readonly string? ReplicationInstanceClass;
        public readonly string? ReplicationInstanceIdentifier;
        public readonly string? ReplicationInstancePrivateIpAddresses;
        public readonly string? ReplicationInstancePublicIpAddresses;
        public readonly ImmutableArray<string> VpcSecurityGroupIds;

        [OutputConstructor]
        private GetReplicationInstanceResult(
            int? allocatedStorage,

            bool? allowMajorVersionUpgrade,

            bool? autoMinorVersionUpgrade,

            string? availabilityZone,

            string? engineVersion,

            string? id,

            bool? multiAZ,

            string? preferredMaintenanceWindow,

            string? replicationInstanceClass,

            string? replicationInstanceIdentifier,

            string? replicationInstancePrivateIpAddresses,

            string? replicationInstancePublicIpAddresses,

            ImmutableArray<string> vpcSecurityGroupIds)
        {
            AllocatedStorage = allocatedStorage;
            AllowMajorVersionUpgrade = allowMajorVersionUpgrade;
            AutoMinorVersionUpgrade = autoMinorVersionUpgrade;
            AvailabilityZone = availabilityZone;
            EngineVersion = engineVersion;
            Id = id;
            MultiAZ = multiAZ;
            PreferredMaintenanceWindow = preferredMaintenanceWindow;
            ReplicationInstanceClass = replicationInstanceClass;
            ReplicationInstanceIdentifier = replicationInstanceIdentifier;
            ReplicationInstancePrivateIpAddresses = replicationInstancePrivateIpAddresses;
            ReplicationInstancePublicIpAddresses = replicationInstancePublicIpAddresses;
            VpcSecurityGroupIds = vpcSecurityGroupIds;
        }
    }
}
