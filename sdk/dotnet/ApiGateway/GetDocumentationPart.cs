// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway
{
    public static class GetDocumentationPart
    {
        /// <summary>
        /// Resource Type definition for AWS::ApiGateway::DocumentationPart
        /// </summary>
        public static Task<GetDocumentationPartResult> InvokeAsync(GetDocumentationPartArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDocumentationPartResult>("aws-native:apigateway:getDocumentationPart", args ?? new GetDocumentationPartArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApiGateway::DocumentationPart
        /// </summary>
        public static Output<GetDocumentationPartResult> Invoke(GetDocumentationPartInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDocumentationPartResult>("aws-native:apigateway:getDocumentationPart", args ?? new GetDocumentationPartInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDocumentationPartArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the documentation Part.
        /// </summary>
        [Input("documentationPartId", required: true)]
        public string DocumentationPartId { get; set; } = null!;

        /// <summary>
        /// Identifier of the targeted API entity
        /// </summary>
        [Input("restApiId", required: true)]
        public string RestApiId { get; set; } = null!;

        public GetDocumentationPartArgs()
        {
        }
        public static new GetDocumentationPartArgs Empty => new GetDocumentationPartArgs();
    }

    public sealed class GetDocumentationPartInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the documentation Part.
        /// </summary>
        [Input("documentationPartId", required: true)]
        public Input<string> DocumentationPartId { get; set; } = null!;

        /// <summary>
        /// Identifier of the targeted API entity
        /// </summary>
        [Input("restApiId", required: true)]
        public Input<string> RestApiId { get; set; } = null!;

        public GetDocumentationPartInvokeArgs()
        {
        }
        public static new GetDocumentationPartInvokeArgs Empty => new GetDocumentationPartInvokeArgs();
    }


    [OutputType]
    public sealed class GetDocumentationPartResult
    {
        /// <summary>
        /// The identifier of the documentation Part.
        /// </summary>
        public readonly string? DocumentationPartId;
        /// <summary>
        /// The documentation content map of the targeted API entity.
        /// </summary>
        public readonly string? Properties;

        [OutputConstructor]
        private GetDocumentationPartResult(
            string? documentationPartId,

            string? properties)
        {
            DocumentationPartId = documentationPartId;
            Properties = properties;
        }
    }
}
