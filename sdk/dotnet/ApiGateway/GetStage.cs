// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway
{
    public static class GetStage
    {
        /// <summary>
        /// The ``AWS::ApiGateway::Stage`` resource creates a stage for a deployment.
        /// </summary>
        public static Task<GetStageResult> InvokeAsync(GetStageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStageResult>("aws-native:apigateway:getStage", args ?? new GetStageArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::ApiGateway::Stage`` resource creates a stage for a deployment.
        /// </summary>
        public static Output<GetStageResult> Invoke(GetStageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStageResult>("aws-native:apigateway:getStage", args ?? new GetStageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The string identifier of the associated RestApi.
        /// </summary>
        [Input("restApiId", required: true)]
        public string RestApiId { get; set; } = null!;

        /// <summary>
        /// The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to API Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.
        /// </summary>
        [Input("stageName", required: true)]
        public string StageName { get; set; } = null!;

        public GetStageArgs()
        {
        }
        public static new GetStageArgs Empty => new GetStageArgs();
    }

    public sealed class GetStageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The string identifier of the associated RestApi.
        /// </summary>
        [Input("restApiId", required: true)]
        public Input<string> RestApiId { get; set; } = null!;

        /// <summary>
        /// The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to API Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.
        /// </summary>
        [Input("stageName", required: true)]
        public Input<string> StageName { get; set; } = null!;

        public GetStageInvokeArgs()
        {
        }
        public static new GetStageInvokeArgs Empty => new GetStageInvokeArgs();
    }


    [OutputType]
    public sealed class GetStageResult
    {
        /// <summary>
        /// Access log settings, including the access log format and access log destination ARN.
        /// </summary>
        public readonly Outputs.StageAccessLogSetting? AccessLogSetting;
        /// <summary>
        /// Specifies whether a cache cluster is enabled for the stage.
        /// </summary>
        public readonly bool? CacheClusterEnabled;
        /// <summary>
        /// The stage's cache capacity in GB. For more information about choosing a cache size, see [Enabling API caching to enhance responsiveness](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html).
        /// </summary>
        public readonly string? CacheClusterSize;
        /// <summary>
        /// Settings for the canary deployment in this stage.
        /// </summary>
        public readonly Outputs.StageCanarySetting? CanarySetting;
        /// <summary>
        /// The identifier of a client certificate for an API stage.
        /// </summary>
        public readonly string? ClientCertificateId;
        /// <summary>
        /// The identifier of the Deployment that the stage points to.
        /// </summary>
        public readonly string? DeploymentId;
        /// <summary>
        /// The stage's description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The version of the associated API documentation.
        /// </summary>
        public readonly string? DocumentationVersion;
        /// <summary>
        /// A map that defines the method settings for a Stage resource. Keys (designated as ``/{method_setting_key`` below) are method paths defined as ``{resource_path}/{http_method}`` for an individual method override, or ``/\*/\*`` for overriding all methods in the stage.
        /// </summary>
        public readonly ImmutableArray<Outputs.StageMethodSetting> MethodSettings;
        /// <summary>
        /// The collection of tags. Each tag element is associated with a given resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.StageTag> Tags;
        /// <summary>
        /// Specifies whether active tracing with X-ray is enabled for the Stage.
        /// </summary>
        public readonly bool? TracingEnabled;
        /// <summary>
        /// A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value. Variable names are limited to alphanumeric characters. Values must match the following regular expression: ``[A-Za-z0-9-._~:/?#&amp;=,]+``.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Variables;

        [OutputConstructor]
        private GetStageResult(
            Outputs.StageAccessLogSetting? accessLogSetting,

            bool? cacheClusterEnabled,

            string? cacheClusterSize,

            Outputs.StageCanarySetting? canarySetting,

            string? clientCertificateId,

            string? deploymentId,

            string? description,

            string? documentationVersion,

            ImmutableArray<Outputs.StageMethodSetting> methodSettings,

            ImmutableArray<Outputs.StageTag> tags,

            bool? tracingEnabled,

            ImmutableDictionary<string, string>? variables)
        {
            AccessLogSetting = accessLogSetting;
            CacheClusterEnabled = cacheClusterEnabled;
            CacheClusterSize = cacheClusterSize;
            CanarySetting = canarySetting;
            ClientCertificateId = clientCertificateId;
            DeploymentId = deploymentId;
            Description = description;
            DocumentationVersion = documentationVersion;
            MethodSettings = methodSettings;
            Tags = tags;
            TracingEnabled = tracingEnabled;
            Variables = variables;
        }
    }
}
