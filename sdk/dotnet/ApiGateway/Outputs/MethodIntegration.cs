// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway.Outputs
{

    [OutputType]
    public sealed class MethodIntegration
    {
        /// <summary>
        /// A list of request parameters whose values API Gateway caches.
        /// </summary>
        public readonly ImmutableArray<string> CacheKeyParameters;
        /// <summary>
        /// An API-specific tag group of related cached parameters.
        /// </summary>
        public readonly string? CacheNamespace;
        /// <summary>
        /// The ID of the VpcLink used for the integration when connectionType=VPC_LINK, otherwise undefined.
        /// </summary>
        public readonly string? ConnectionId;
        /// <summary>
        /// The type of the network connection to the integration endpoint.
        /// </summary>
        public readonly Pulumi.AwsNative.ApiGateway.MethodIntegrationConnectionType? ConnectionType;
        /// <summary>
        /// Specifies how to handle request payload content type conversions.
        /// </summary>
        public readonly Pulumi.AwsNative.ApiGateway.MethodIntegrationContentHandling? ContentHandling;
        /// <summary>
        /// The credentials that are required for the integration.
        /// </summary>
        public readonly string? Credentials;
        /// <summary>
        /// The integration's HTTP method type.
        /// </summary>
        public readonly string? IntegrationHttpMethod;
        /// <summary>
        /// The response that API Gateway provides after a method's backend completes processing a request.
        /// </summary>
        public readonly ImmutableArray<Outputs.MethodIntegrationResponse> IntegrationResponses;
        /// <summary>
        /// Indicates when API Gateway passes requests to the targeted backend.
        /// </summary>
        public readonly Pulumi.AwsNative.ApiGateway.MethodIntegrationPassthroughBehavior? PassthroughBehavior;
        /// <summary>
        /// The request parameters that API Gateway sends with the backend request.
        /// </summary>
        public readonly object? RequestParameters;
        /// <summary>
        /// A map of Apache Velocity templates that are applied on the request payload.
        /// </summary>
        public readonly object? RequestTemplates;
        /// <summary>
        /// Custom timeout between 50 and 29,000 milliseconds.
        /// </summary>
        public readonly int? TimeoutInMillis;
        /// <summary>
        /// The type of backend that your method is running.
        /// </summary>
        public readonly Pulumi.AwsNative.ApiGateway.MethodIntegrationType Type;
        /// <summary>
        /// The Uniform Resource Identifier (URI) for the integration.
        /// </summary>
        public readonly string? Uri;

        [OutputConstructor]
        private MethodIntegration(
            ImmutableArray<string> cacheKeyParameters,

            string? cacheNamespace,

            string? connectionId,

            Pulumi.AwsNative.ApiGateway.MethodIntegrationConnectionType? connectionType,

            Pulumi.AwsNative.ApiGateway.MethodIntegrationContentHandling? contentHandling,

            string? credentials,

            string? integrationHttpMethod,

            ImmutableArray<Outputs.MethodIntegrationResponse> integrationResponses,

            Pulumi.AwsNative.ApiGateway.MethodIntegrationPassthroughBehavior? passthroughBehavior,

            object? requestParameters,

            object? requestTemplates,

            int? timeoutInMillis,

            Pulumi.AwsNative.ApiGateway.MethodIntegrationType type,

            string? uri)
        {
            CacheKeyParameters = cacheKeyParameters;
            CacheNamespace = cacheNamespace;
            ConnectionId = connectionId;
            ConnectionType = connectionType;
            ContentHandling = contentHandling;
            Credentials = credentials;
            IntegrationHttpMethod = integrationHttpMethod;
            IntegrationResponses = integrationResponses;
            PassthroughBehavior = passthroughBehavior;
            RequestParameters = requestParameters;
            RequestTemplates = requestTemplates;
            TimeoutInMillis = timeoutInMillis;
            Type = type;
            Uri = uri;
        }
    }
}
