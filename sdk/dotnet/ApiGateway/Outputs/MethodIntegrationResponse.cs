// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway.Outputs
{

    [OutputType]
    public sealed class MethodIntegrationResponse
    {
        /// <summary>
        /// Specifies how to handle request payload content type conversions.
        /// </summary>
        public readonly Pulumi.AwsNative.ApiGateway.MethodIntegrationResponseContentHandling? ContentHandling;
        /// <summary>
        /// The response parameters from the backend response that API Gateway sends to the method response.
        /// </summary>
        public readonly object? ResponseParameters;
        /// <summary>
        /// The templates that are used to transform the integration response body. Specify templates as key-value pairs (string-to-string mappings), with a content type as the key and a template as the value.
        /// </summary>
        public readonly object? ResponseTemplates;
        /// <summary>
        /// A regular expression that specifies which error strings or status codes from the backend map to the integration response.
        /// </summary>
        public readonly string? SelectionPattern;
        /// <summary>
        /// The status code that API Gateway uses to map the integration response to a MethodResponse status code.
        /// </summary>
        public readonly string StatusCode;

        [OutputConstructor]
        private MethodIntegrationResponse(
            Pulumi.AwsNative.ApiGateway.MethodIntegrationResponseContentHandling? contentHandling,

            object? responseParameters,

            object? responseTemplates,

            string? selectionPattern,

            string statusCode)
        {
            ContentHandling = contentHandling;
            ResponseParameters = responseParameters;
            ResponseTemplates = responseTemplates;
            SelectionPattern = selectionPattern;
            StatusCode = statusCode;
        }
    }
}
