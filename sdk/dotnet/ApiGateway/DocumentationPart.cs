// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway
{
    /// <summary>
    /// The ``AWS::ApiGateway::DocumentationPart`` resource creates a documentation part for an API. For more information, see [Representation of API Documentation in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api-content-representation.html) in the *API Gateway Developer Guide*.
    /// </summary>
    [AwsNativeResourceType("aws-native:apigateway:DocumentationPart")]
    public partial class DocumentationPart : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identifier of the documentation Part.
        /// </summary>
        [Output("documentationPartId")]
        public Output<string> DocumentationPartId { get; private set; } = null!;

        /// <summary>
        /// The location of the targeted API entity of the to-be-created documentation part.
        /// </summary>
        [Output("location")]
        public Output<Outputs.DocumentationPartLocation> Location { get; private set; } = null!;

        /// <summary>
        /// The new documentation content map of the targeted API entity. Enclosed key-value pairs are API-specific, but only OpenAPI-compliant key-value pairs can be exported and, hence, published.
        /// </summary>
        [Output("properties")]
        public Output<string> Properties { get; private set; } = null!;

        /// <summary>
        /// The string identifier of the associated RestApi.
        /// </summary>
        [Output("restApiId")]
        public Output<string> RestApiId { get; private set; } = null!;


        /// <summary>
        /// Create a DocumentationPart resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DocumentationPart(string name, DocumentationPartArgs args, CustomResourceOptions? options = null)
            : base("aws-native:apigateway:DocumentationPart", name, args ?? new DocumentationPartArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DocumentationPart(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:apigateway:DocumentationPart", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "restApiId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DocumentationPart resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DocumentationPart Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DocumentationPart(name, id, options);
        }
    }

    public sealed class DocumentationPartArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The location of the targeted API entity of the to-be-created documentation part.
        /// </summary>
        [Input("location", required: true)]
        public Input<Inputs.DocumentationPartLocationArgs> Location { get; set; } = null!;

        /// <summary>
        /// The new documentation content map of the targeted API entity. Enclosed key-value pairs are API-specific, but only OpenAPI-compliant key-value pairs can be exported and, hence, published.
        /// </summary>
        [Input("properties", required: true)]
        public Input<string> Properties { get; set; } = null!;

        /// <summary>
        /// The string identifier of the associated RestApi.
        /// </summary>
        [Input("restApiId", required: true)]
        public Input<string> RestApiId { get; set; } = null!;

        public DocumentationPartArgs()
        {
        }
        public static new DocumentationPartArgs Empty => new DocumentationPartArgs();
    }
}
