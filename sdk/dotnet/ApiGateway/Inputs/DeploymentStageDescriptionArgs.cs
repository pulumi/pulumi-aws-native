// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway.Inputs
{

    /// <summary>
    /// ``StageDescription`` is a property of the [AWS::ApiGateway::Deployment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html) resource that configures a deployment stage.
    /// </summary>
    public sealed class DeploymentStageDescriptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies settings for logging access in this stage.
        /// </summary>
        [Input("accessLogSetting")]
        public Input<Inputs.DeploymentAccessLogSettingArgs>? AccessLogSetting { get; set; }

        /// <summary>
        /// Specifies whether a cache cluster is enabled for the stage.
        /// </summary>
        [Input("cacheClusterEnabled")]
        public Input<bool>? CacheClusterEnabled { get; set; }

        /// <summary>
        /// The size of the stage's cache cluster. For more information, see [cacheClusterSize](https://docs.aws.amazon.com/apigateway/latest/api/API_CreateStage.html#apigw-CreateStage-request-cacheClusterSize) in the *API Gateway API Reference*.
        /// </summary>
        [Input("cacheClusterSize")]
        public Input<string>? CacheClusterSize { get; set; }

        /// <summary>
        /// Indicates whether the cached responses are encrypted.
        /// </summary>
        [Input("cacheDataEncrypted")]
        public Input<bool>? CacheDataEncrypted { get; set; }

        /// <summary>
        /// The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
        /// </summary>
        [Input("cacheTtlInSeconds")]
        public Input<int>? CacheTtlInSeconds { get; set; }

        /// <summary>
        /// Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses. For more information, see [Enable API Gateway Caching in a Stage to Enhance API Performance](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html) in the *API Gateway Developer Guide*.
        /// </summary>
        [Input("cachingEnabled")]
        public Input<bool>? CachingEnabled { get; set; }

        /// <summary>
        /// Specifies settings for the canary deployment in this stage.
        /// </summary>
        [Input("canarySetting")]
        public Input<Inputs.DeploymentCanarySettingArgs>? CanarySetting { get; set; }

        /// <summary>
        /// The identifier of the client certificate that API Gateway uses to call your integration endpoints in the stage.
        /// </summary>
        [Input("clientCertificateId")]
        public Input<string>? ClientCertificateId { get; set; }

        /// <summary>
        /// Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
        /// </summary>
        [Input("dataTraceEnabled")]
        public Input<bool>? DataTraceEnabled { get; set; }

        /// <summary>
        /// A description of the purpose of the stage.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The version identifier of the API documentation snapshot.
        /// </summary>
        [Input("documentationVersion")]
        public Input<string>? DocumentationVersion { get; set; }

        /// <summary>
        /// The logging level for this method. For valid values, see the ``loggingLevel`` property of the [MethodSetting](https://docs.aws.amazon.com/apigateway/latest/api/API_MethodSetting.html) resource in the *Amazon API Gateway API Reference*.
        /// </summary>
        [Input("loggingLevel")]
        public Input<string>? LoggingLevel { get; set; }

        [Input("methodSettings")]
        private InputList<Inputs.DeploymentMethodSettingArgs>? _methodSettings;

        /// <summary>
        /// Configures settings for all of the stage's methods.
        /// </summary>
        public InputList<Inputs.DeploymentMethodSettingArgs> MethodSettings
        {
            get => _methodSettings ?? (_methodSettings = new InputList<Inputs.DeploymentMethodSettingArgs>());
            set => _methodSettings = value;
        }

        /// <summary>
        /// Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
        /// </summary>
        [Input("metricsEnabled")]
        public Input<bool>? MetricsEnabled { get; set; }

        [Input("tags")]
        private InputList<Inputs.DeploymentTagArgs>? _tags;

        /// <summary>
        /// An array of arbitrary tags (key-value pairs) to associate with the stage.
        /// </summary>
        public InputList<Inputs.DeploymentTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DeploymentTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The target request burst rate limit. This allows more requests through for a period of time than the target rate limit. For more information, see [Manage API Request Throttling](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html) in the *API Gateway Developer Guide*.
        /// </summary>
        [Input("throttlingBurstLimit")]
        public Input<int>? ThrottlingBurstLimit { get; set; }

        /// <summary>
        /// The target request steady-state rate limit. For more information, see [Manage API Request Throttling](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html) in the *API Gateway Developer Guide*.
        /// </summary>
        [Input("throttlingRateLimit")]
        public Input<double>? ThrottlingRateLimit { get; set; }

        /// <summary>
        /// Specifies whether active tracing with X-ray is enabled for this stage.
        ///  For more information, see [Trace API Gateway API Execution with X-Ray](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-xray.html) in the *API Gateway Developer Guide*.
        /// </summary>
        [Input("tracingEnabled")]
        public Input<bool>? TracingEnabled { get; set; }

        [Input("variables")]
        private InputMap<string>? _variables;

        /// <summary>
        /// A map that defines the stage variables. Variable names must consist of alphanumeric characters, and the values must match the following regular expression: ``[A-Za-z0-9-._~:/?#&amp;=,]+``.
        /// </summary>
        public InputMap<string> Variables
        {
            get => _variables ?? (_variables = new InputMap<string>());
            set => _variables = value;
        }

        public DeploymentStageDescriptionArgs()
        {
        }
        public static new DeploymentStageDescriptionArgs Empty => new DeploymentStageDescriptionArgs();
    }
}
