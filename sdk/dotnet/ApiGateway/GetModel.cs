// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway
{
    public static class GetModel
    {
        /// <summary>
        /// The ``AWS::ApiGateway::Model`` resource defines the structure of a request or response payload for an API method.
        /// </summary>
        public static Task<GetModelResult> InvokeAsync(GetModelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelResult>("aws-native:apigateway:getModel", args ?? new GetModelArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::ApiGateway::Model`` resource defines the structure of a request or response payload for an API method.
        /// </summary>
        public static Output<GetModelResult> Invoke(GetModelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelResult>("aws-native:apigateway:getModel", args ?? new GetModelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A name for the model. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the model name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
        ///   If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The string identifier of the associated RestApi.
        /// </summary>
        [Input("restApiId", required: true)]
        public string RestApiId { get; set; } = null!;

        public GetModelArgs()
        {
        }
        public static new GetModelArgs Empty => new GetModelArgs();
    }

    public sealed class GetModelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A name for the model. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the model name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
        ///   If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The string identifier of the associated RestApi.
        /// </summary>
        [Input("restApiId", required: true)]
        public Input<string> RestApiId { get; set; } = null!;

        public GetModelInvokeArgs()
        {
        }
        public static new GetModelInvokeArgs Empty => new GetModelInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelResult
    {
        /// <summary>
        /// The description of the model.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The schema for the model. For ``application/json`` models, this should be JSON schema draft 4 model. Do not include "\*/" characters in the description of any properties because such "\*/" characters may be interpreted as the closing marker for comments in some languages, such as Java or JavaScript, causing the installation of your API's SDK generated by API Gateway to fail.
        /// </summary>
        public readonly object? Schema;

        [OutputConstructor]
        private GetModelResult(
            string? description,

            object? schema)
        {
            Description = description;
            Schema = schema;
        }
    }
}
