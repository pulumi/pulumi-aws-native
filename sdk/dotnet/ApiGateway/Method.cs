// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway
{
    /// <summary>
    /// The ``AWS::ApiGateway::Method`` resource creates API Gateway methods that define the parameters and body that clients must send in their requests.
    /// </summary>
    [AwsNativeResourceType("aws-native:apigateway:Method")]
    public partial class Method : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A boolean flag specifying whether a valid ApiKey is required to invoke this method.
        /// </summary>
        [Output("apiKeyRequired")]
        public Output<bool?> ApiKeyRequired { get; private set; } = null!;

        /// <summary>
        /// A list of authorization scopes configured on the method. The scopes are used with a ``COGNITO_USER_POOLS`` authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
        /// </summary>
        [Output("authorizationScopes")]
        public Output<ImmutableArray<string>> AuthorizationScopes { get; private set; } = null!;

        /// <summary>
        /// The method's authorization type. This parameter is required. For valid values, see [Method](https://docs.aws.amazon.com/apigateway/latest/api/API_Method.html) in the *API Gateway API Reference*.
        ///   If you specify the ``AuthorizerId`` property, specify ``CUSTOM`` or ``COGNITO_USER_POOLS`` for this property.
        /// </summary>
        [Output("authorizationType")]
        public Output<Pulumi.AwsNative.ApiGateway.MethodAuthorizationType?> AuthorizationType { get; private set; } = null!;

        /// <summary>
        /// The identifier of an authorizer to use on this method. The method's authorization type must be ``CUSTOM`` or ``COGNITO_USER_POOLS``.
        /// </summary>
        [Output("authorizerId")]
        public Output<string?> AuthorizerId { get; private set; } = null!;

        /// <summary>
        /// The method's HTTP verb.
        /// </summary>
        [Output("httpMethod")]
        public Output<string> HttpMethod { get; private set; } = null!;

        /// <summary>
        /// Represents an ``HTTP``, ``HTTP_PROXY``, ``AWS``, ``AWS_PROXY``, or Mock integration.
        /// </summary>
        [Output("integration")]
        public Output<Outputs.MethodIntegration?> Integration { get; private set; } = null!;

        /// <summary>
        /// Gets a method response associated with a given HTTP status code.
        /// </summary>
        [Output("methodResponses")]
        public Output<ImmutableArray<Outputs.MethodResponse>> MethodResponses { get; private set; } = null!;

        /// <summary>
        /// A human-friendly operation identifier for the method. For example, you can assign the ``operationName`` of ``ListPets`` for the ``GET /pets`` method in the ``PetStore`` example.
        /// </summary>
        [Output("operationName")]
        public Output<string?> OperationName { get; private set; } = null!;

        /// <summary>
        /// A key-value map specifying data schemas, represented by Model resources, (as the mapped value) of the request payloads of given content types (as the mapping key).
        /// </summary>
        [Output("requestModels")]
        public Output<ImmutableDictionary<string, string>?> RequestModels { get; private set; } = null!;

        /// <summary>
        /// A key-value map defining required or optional method request parameters that can be accepted by API Gateway. A key is a method request parameter name matching the pattern of ``method.request.{location}.{name}``, where ``location`` is ``querystring``, ``path``, or ``header`` and ``name`` is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (``true``) or optional (``false``). The method request parameter names defined here are available in Integration to be mapped to integration request parameters or templates.
        /// </summary>
        [Output("requestParameters")]
        public Output<ImmutableDictionary<string, bool>?> RequestParameters { get; private set; } = null!;

        /// <summary>
        /// The identifier of a RequestValidator for request validation.
        /// </summary>
        [Output("requestValidatorId")]
        public Output<string?> RequestValidatorId { get; private set; } = null!;

        /// <summary>
        /// The Resource identifier for the MethodResponse resource.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// The string identifier of the associated RestApi.
        /// </summary>
        [Output("restApiId")]
        public Output<string> RestApiId { get; private set; } = null!;


        /// <summary>
        /// Create a Method resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Method(string name, MethodArgs args, CustomResourceOptions? options = null)
            : base("aws-native:apigateway:Method", name, args ?? new MethodArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Method(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:apigateway:Method", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "httpMethod",
                    "resourceId",
                    "restApiId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Method resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Method Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Method(name, id, options);
        }
    }

    public sealed class MethodArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A boolean flag specifying whether a valid ApiKey is required to invoke this method.
        /// </summary>
        [Input("apiKeyRequired")]
        public Input<bool>? ApiKeyRequired { get; set; }

        [Input("authorizationScopes")]
        private InputList<string>? _authorizationScopes;

        /// <summary>
        /// A list of authorization scopes configured on the method. The scopes are used with a ``COGNITO_USER_POOLS`` authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
        /// </summary>
        public InputList<string> AuthorizationScopes
        {
            get => _authorizationScopes ?? (_authorizationScopes = new InputList<string>());
            set => _authorizationScopes = value;
        }

        /// <summary>
        /// The method's authorization type. This parameter is required. For valid values, see [Method](https://docs.aws.amazon.com/apigateway/latest/api/API_Method.html) in the *API Gateway API Reference*.
        ///   If you specify the ``AuthorizerId`` property, specify ``CUSTOM`` or ``COGNITO_USER_POOLS`` for this property.
        /// </summary>
        [Input("authorizationType")]
        public Input<Pulumi.AwsNative.ApiGateway.MethodAuthorizationType>? AuthorizationType { get; set; }

        /// <summary>
        /// The identifier of an authorizer to use on this method. The method's authorization type must be ``CUSTOM`` or ``COGNITO_USER_POOLS``.
        /// </summary>
        [Input("authorizerId")]
        public Input<string>? AuthorizerId { get; set; }

        /// <summary>
        /// The method's HTTP verb.
        /// </summary>
        [Input("httpMethod", required: true)]
        public Input<string> HttpMethod { get; set; } = null!;

        /// <summary>
        /// Represents an ``HTTP``, ``HTTP_PROXY``, ``AWS``, ``AWS_PROXY``, or Mock integration.
        /// </summary>
        [Input("integration")]
        public Input<Inputs.MethodIntegrationArgs>? Integration { get; set; }

        [Input("methodResponses")]
        private InputList<Inputs.MethodResponseArgs>? _methodResponses;

        /// <summary>
        /// Gets a method response associated with a given HTTP status code.
        /// </summary>
        public InputList<Inputs.MethodResponseArgs> MethodResponses
        {
            get => _methodResponses ?? (_methodResponses = new InputList<Inputs.MethodResponseArgs>());
            set => _methodResponses = value;
        }

        /// <summary>
        /// A human-friendly operation identifier for the method. For example, you can assign the ``operationName`` of ``ListPets`` for the ``GET /pets`` method in the ``PetStore`` example.
        /// </summary>
        [Input("operationName")]
        public Input<string>? OperationName { get; set; }

        [Input("requestModels")]
        private InputMap<string>? _requestModels;

        /// <summary>
        /// A key-value map specifying data schemas, represented by Model resources, (as the mapped value) of the request payloads of given content types (as the mapping key).
        /// </summary>
        public InputMap<string> RequestModels
        {
            get => _requestModels ?? (_requestModels = new InputMap<string>());
            set => _requestModels = value;
        }

        [Input("requestParameters")]
        private InputMap<bool>? _requestParameters;

        /// <summary>
        /// A key-value map defining required or optional method request parameters that can be accepted by API Gateway. A key is a method request parameter name matching the pattern of ``method.request.{location}.{name}``, where ``location`` is ``querystring``, ``path``, or ``header`` and ``name`` is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (``true``) or optional (``false``). The method request parameter names defined here are available in Integration to be mapped to integration request parameters or templates.
        /// </summary>
        public InputMap<bool> RequestParameters
        {
            get => _requestParameters ?? (_requestParameters = new InputMap<bool>());
            set => _requestParameters = value;
        }

        /// <summary>
        /// The identifier of a RequestValidator for request validation.
        /// </summary>
        [Input("requestValidatorId")]
        public Input<string>? RequestValidatorId { get; set; }

        /// <summary>
        /// The Resource identifier for the MethodResponse resource.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// The string identifier of the associated RestApi.
        /// </summary>
        [Input("restApiId", required: true)]
        public Input<string> RestApiId { get; set; } = null!;

        public MethodArgs()
        {
        }
        public static new MethodArgs Empty => new MethodArgs();
    }
}
