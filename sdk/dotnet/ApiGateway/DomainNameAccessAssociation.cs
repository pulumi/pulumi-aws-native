// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway
{
    /// <summary>
    /// Resource Type definition for AWS::ApiGateway::DomainNameAccessAssociation.
    /// </summary>
    [AwsNativeResourceType("aws-native:apigateway:DomainNameAccessAssociation")]
    public partial class DomainNameAccessAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The source of the domain name access association resource.
        /// </summary>
        [Output("accessAssociationSource")]
        public Output<string> AccessAssociationSource { get; private set; } = null!;

        /// <summary>
        /// The source type of the domain name access association resource.
        /// </summary>
        [Output("accessAssociationSourceType")]
        public Output<Pulumi.AwsNative.ApiGateway.DomainNameAccessAssociationAccessAssociationSourceType> AccessAssociationSourceType { get; private set; } = null!;

        /// <summary>
        /// The amazon resource name (ARN) of the domain name access association resource.
        /// </summary>
        [Output("domainNameAccessAssociationArn")]
        public Output<string> DomainNameAccessAssociationArn { get; private set; } = null!;

        /// <summary>
        /// The amazon resource name (ARN) of the domain name resource.
        /// </summary>
        [Output("domainNameArn")]
        public Output<string> DomainNameArn { get; private set; } = null!;

        /// <summary>
        /// An array of arbitrary tags (key-value pairs) to associate with the domainname access association.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.CreateOnlyTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DomainNameAccessAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainNameAccessAssociation(string name, DomainNameAccessAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:apigateway:DomainNameAccessAssociation", name, args ?? new DomainNameAccessAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainNameAccessAssociation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:apigateway:DomainNameAccessAssociation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "accessAssociationSource",
                    "accessAssociationSourceType",
                    "domainNameArn",
                    "tags[*]",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainNameAccessAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainNameAccessAssociation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DomainNameAccessAssociation(name, id, options);
        }
    }

    public sealed class DomainNameAccessAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The source of the domain name access association resource.
        /// </summary>
        [Input("accessAssociationSource", required: true)]
        public Input<string> AccessAssociationSource { get; set; } = null!;

        /// <summary>
        /// The source type of the domain name access association resource.
        /// </summary>
        [Input("accessAssociationSourceType", required: true)]
        public Input<Pulumi.AwsNative.ApiGateway.DomainNameAccessAssociationAccessAssociationSourceType> AccessAssociationSourceType { get; set; } = null!;

        /// <summary>
        /// The amazon resource name (ARN) of the domain name resource.
        /// </summary>
        [Input("domainNameArn", required: true)]
        public Input<string> DomainNameArn { get; set; } = null!;

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs>? _tags;

        /// <summary>
        /// An array of arbitrary tags (key-value pairs) to associate with the domainname access association.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs>());
            set => _tags = value;
        }

        public DomainNameAccessAssociationArgs()
        {
        }
        public static new DomainNameAccessAssociationArgs Empty => new DomainNameAccessAssociationArgs();
    }
}
