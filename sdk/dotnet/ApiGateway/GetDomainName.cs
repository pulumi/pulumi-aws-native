// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGateway
{
    public static class GetDomainName
    {
        /// <summary>
        /// The ``AWS::ApiGateway::DomainName`` resource specifies a public custom domain name for your API in API Gateway.
        ///  To create a custom domain name for private APIs, use [AWS::ApiGateway::DomainNameV2](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html).
        ///  You can use a custom domain name to provide a URL that's more intuitive and easier to recall. For more information about using custom domain names, see [Set up Custom Domain Name for an API in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html) in the *API Gateway Developer Guide*.
        /// </summary>
        public static Task<GetDomainNameResult> InvokeAsync(GetDomainNameArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainNameResult>("aws-native:apigateway:getDomainName", args ?? new GetDomainNameArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::ApiGateway::DomainName`` resource specifies a public custom domain name for your API in API Gateway.
        ///  To create a custom domain name for private APIs, use [AWS::ApiGateway::DomainNameV2](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html).
        ///  You can use a custom domain name to provide a URL that's more intuitive and easier to recall. For more information about using custom domain names, see [Set up Custom Domain Name for an API in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html) in the *API Gateway Developer Guide*.
        /// </summary>
        public static Output<GetDomainNameResult> Invoke(GetDomainNameInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainNameResult>("aws-native:apigateway:getDomainName", args ?? new GetDomainNameInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::ApiGateway::DomainName`` resource specifies a public custom domain name for your API in API Gateway.
        ///  To create a custom domain name for private APIs, use [AWS::ApiGateway::DomainNameV2](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html).
        ///  You can use a custom domain name to provide a URL that's more intuitive and easier to recall. For more information about using custom domain names, see [Set up Custom Domain Name for an API in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html) in the *API Gateway Developer Guide*.
        /// </summary>
        public static Output<GetDomainNameResult> Invoke(GetDomainNameInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainNameResult>("aws-native:apigateway:getDomainName", args ?? new GetDomainNameInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainNameArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The custom domain name as an API host name, for example, `my-api.example.com` .
        /// </summary>
        [Input("domainName", required: true)]
        public string DomainNameValue { get; set; } = null!;

        public GetDomainNameArgs()
        {
        }
        public static new GetDomainNameArgs Empty => new GetDomainNameArgs();
    }

    public sealed class GetDomainNameInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The custom domain name as an API host name, for example, `my-api.example.com` .
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        public GetDomainNameInvokeArgs()
        {
        }
        public static new GetDomainNameInvokeArgs Empty => new GetDomainNameInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainNameResult
    {
        /// <summary>
        /// The reference to an AWS -managed certificate that will be used by edge-optimized endpoint or private endpoint for this domain name. AWS Certificate Manager is the only supported source.
        /// </summary>
        public readonly string? CertificateArn;
        /// <summary>
        /// The Amazon CloudFront distribution domain name that's mapped to the custom domain name. This is only applicable for endpoints whose type is `EDGE` .
        /// 
        /// Example: `d111111abcdef8.cloudfront.net`
        /// </summary>
        public readonly string? DistributionDomainName;
        /// <summary>
        /// The region-agnostic Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The only valid value is `Z2FDTNDATAQYW2` for all regions.
        /// </summary>
        public readonly string? DistributionHostedZoneId;
        /// <summary>
        /// The ARN of the domain name.
        /// </summary>
        public readonly string? DomainNameArn;
        /// <summary>
        /// The endpoint configuration of this DomainName showing the endpoint types and IP address types of the domain name.
        /// </summary>
        public readonly Outputs.DomainNameEndpointConfiguration? EndpointConfiguration;
        /// <summary>
        /// The mutual TLS authentication configuration for a custom domain name. If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API.
        /// </summary>
        public readonly Outputs.DomainNameMutualTlsAuthentication? MutualTlsAuthentication;
        /// <summary>
        /// The ARN of the public certificate issued by ACM to validate ownership of your custom domain. Only required when configuring mutual TLS and using an ACM imported or private CA certificate ARN as the RegionalCertificateArn.
        /// </summary>
        public readonly string? OwnershipVerificationCertificateArn;
        /// <summary>
        /// The reference to an AWS -managed certificate that will be used for validating the regional domain name. AWS Certificate Manager is the only supported source.
        /// </summary>
        public readonly string? RegionalCertificateArn;
        /// <summary>
        /// The domain name associated with the regional endpoint for this custom domain name. You set up this association by adding a DNS record that points the custom domain name to this regional domain name.
        /// </summary>
        public readonly string? RegionalDomainName;
        /// <summary>
        /// The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint.
        /// </summary>
        public readonly string? RegionalHostedZoneId;
        /// <summary>
        /// The routing mode for this domain name. The routing mode determines how API Gateway sends traffic from your custom domain name to your public APIs.
        /// </summary>
        public readonly Pulumi.AwsNative.ApiGateway.DomainNameRoutingMode? RoutingMode;
        /// <summary>
        /// The Transport Layer Security (TLS) version + cipher suite for this DomainName. The valid values are `TLS_1_0` and `TLS_1_2` .
        /// </summary>
        public readonly string? SecurityPolicy;
        /// <summary>
        /// The collection of tags. Each tag element is associated with a given resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetDomainNameResult(
            string? certificateArn,

            string? distributionDomainName,

            string? distributionHostedZoneId,

            string? domainNameArn,

            Outputs.DomainNameEndpointConfiguration? endpointConfiguration,

            Outputs.DomainNameMutualTlsAuthentication? mutualTlsAuthentication,

            string? ownershipVerificationCertificateArn,

            string? regionalCertificateArn,

            string? regionalDomainName,

            string? regionalHostedZoneId,

            Pulumi.AwsNative.ApiGateway.DomainNameRoutingMode? routingMode,

            string? securityPolicy,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            CertificateArn = certificateArn;
            DistributionDomainName = distributionDomainName;
            DistributionHostedZoneId = distributionHostedZoneId;
            DomainNameArn = domainNameArn;
            EndpointConfiguration = endpointConfiguration;
            MutualTlsAuthentication = mutualTlsAuthentication;
            OwnershipVerificationCertificateArn = ownershipVerificationCertificateArn;
            RegionalCertificateArn = regionalCertificateArn;
            RegionalDomainName = regionalDomainName;
            RegionalHostedZoneId = regionalHostedZoneId;
            RoutingMode = routingMode;
            SecurityPolicy = securityPolicy;
            Tags = tags;
        }
    }
}
