// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.M2
{
    public static class GetEnvironment
    {
        /// <summary>
        /// Represents a runtime environment that can run migrated mainframe applications.
        /// </summary>
        public static Task<GetEnvironmentResult> InvokeAsync(GetEnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentResult>("aws-native:m2:getEnvironment", args ?? new GetEnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// Represents a runtime environment that can run migrated mainframe applications.
        /// </summary>
        public static Output<GetEnvironmentResult> Invoke(GetEnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentResult>("aws-native:m2:getEnvironment", args ?? new GetEnvironmentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Represents a runtime environment that can run migrated mainframe applications.
        /// </summary>
        public static Output<GetEnvironmentResult> Invoke(GetEnvironmentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentResult>("aws-native:m2:getEnvironment", args ?? new GetEnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the runtime environment.
        /// </summary>
        [Input("environmentArn", required: true)]
        public string EnvironmentArn { get; set; } = null!;

        public GetEnvironmentArgs()
        {
        }
        public static new GetEnvironmentArgs Empty => new GetEnvironmentArgs();
    }

    public sealed class GetEnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the runtime environment.
        /// </summary>
        [Input("environmentArn", required: true)]
        public Input<string> EnvironmentArn { get; set; } = null!;

        public GetEnvironmentInvokeArgs()
        {
        }
        public static new GetEnvironmentInvokeArgs Empty => new GetEnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnvironmentResult
    {
        /// <summary>
        /// The version of the runtime engine for the environment.
        /// </summary>
        public readonly string? EngineVersion;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the runtime environment.
        /// </summary>
        public readonly string? EnvironmentArn;
        /// <summary>
        /// The unique identifier of the environment.
        /// </summary>
        public readonly string? EnvironmentId;
        /// <summary>
        /// &gt; AWS Mainframe Modernization Service (Managed Runtime Environment experience) will no longer be open to new customers starting on November 7, 2025. If you would like to use the service, please sign up prior to November 7, 2025. For capabilities similar to AWS Mainframe Modernization Service (Managed Runtime Environment experience) explore AWS Mainframe Modernization Service (Self-Managed Experience). Existing customers can continue to use the service as normal. For more information, see [AWS Mainframe Modernization availability change](https://docs.aws.amazon.com/m2/latest/userguide/mainframe-modernization-availability-change.html) . 
        /// 
        /// Defines the details of a high availability configuration.
        /// </summary>
        public readonly Outputs.EnvironmentHighAvailabilityConfig? HighAvailabilityConfig;
        /// <summary>
        /// The type of instance underlying the environment.
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// Configures a desired maintenance window for the environment. If you do not provide a value, a random system-generated value will be assigned.
        /// </summary>
        public readonly string? PreferredMaintenanceWindow;
        /// <summary>
        /// Tags associated to this environment.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetEnvironmentResult(
            string? engineVersion,

            string? environmentArn,

            string? environmentId,

            Outputs.EnvironmentHighAvailabilityConfig? highAvailabilityConfig,

            string? instanceType,

            string? preferredMaintenanceWindow,

            ImmutableDictionary<string, string>? tags)
        {
            EngineVersion = engineVersion;
            EnvironmentArn = environmentArn;
            EnvironmentId = environmentId;
            HighAvailabilityConfig = highAvailabilityConfig;
            InstanceType = instanceType;
            PreferredMaintenanceWindow = preferredMaintenanceWindow;
            Tags = tags;
        }
    }
}
