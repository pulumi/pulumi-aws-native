// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RDS
{
    public static class GetDBInstance
    {
        /// <summary>
        /// Resource Type definition for AWS::RDS::DBInstance
        /// </summary>
        public static Task<GetDBInstanceResult> InvokeAsync(GetDBInstanceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDBInstanceResult>("aws-native:rds:getDBInstance", args ?? new GetDBInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::RDS::DBInstance
        /// </summary>
        public static Output<GetDBInstanceResult> Invoke(GetDBInstanceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDBInstanceResult>("aws-native:rds:getDBInstance", args ?? new GetDBInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDBInstanceArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDBInstanceArgs()
        {
        }
    }

    public sealed class GetDBInstanceInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDBInstanceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDBInstanceResult
    {
        public readonly string? AllocatedStorage;
        public readonly bool? AllowMajorVersionUpgrade;
        public readonly ImmutableArray<Outputs.DBInstanceRole> AssociatedRoles;
        public readonly bool? AutoMinorVersionUpgrade;
        public readonly int? BackupRetentionPeriod;
        public readonly string? CACertificateIdentifier;
        public readonly bool? CopyTagsToSnapshot;
        public readonly string? DBInstanceClass;
        public readonly string? DBParameterGroupName;
        public readonly ImmutableArray<string> DBSecurityGroups;
        public readonly bool? DeleteAutomatedBackups;
        public readonly bool? DeletionProtection;
        public readonly string? Domain;
        public readonly string? DomainIAMRoleName;
        public readonly ImmutableArray<string> EnableCloudwatchLogsExports;
        public readonly bool? EnableIAMDatabaseAuthentication;
        public readonly bool? EnablePerformanceInsights;
        public readonly string? EndpointAddress;
        public readonly string? EndpointPort;
        public readonly string? Engine;
        public readonly string? EngineVersion;
        public readonly string? Id;
        public readonly int? Iops;
        public readonly string? LicenseModel;
        public readonly string? MasterUserPassword;
        public readonly int? MaxAllocatedStorage;
        public readonly int? MonitoringInterval;
        public readonly string? MonitoringRoleArn;
        public readonly bool? MultiAZ;
        public readonly string? OptionGroupName;
        public readonly string? PerformanceInsightsKMSKeyId;
        public readonly int? PerformanceInsightsRetentionPeriod;
        public readonly string? PreferredBackupWindow;
        public readonly string? PreferredMaintenanceWindow;
        public readonly ImmutableArray<Outputs.DBInstanceProcessorFeature> ProcessorFeatures;
        public readonly int? PromotionTier;
        public readonly string? StorageType;
        public readonly ImmutableArray<Outputs.DBInstanceTag> Tags;
        public readonly bool? UseDefaultProcessorFeatures;
        public readonly ImmutableArray<string> VPCSecurityGroups;

        [OutputConstructor]
        private GetDBInstanceResult(
            string? allocatedStorage,

            bool? allowMajorVersionUpgrade,

            ImmutableArray<Outputs.DBInstanceRole> associatedRoles,

            bool? autoMinorVersionUpgrade,

            int? backupRetentionPeriod,

            string? cACertificateIdentifier,

            bool? copyTagsToSnapshot,

            string? dBInstanceClass,

            string? dBParameterGroupName,

            ImmutableArray<string> dBSecurityGroups,

            bool? deleteAutomatedBackups,

            bool? deletionProtection,

            string? domain,

            string? domainIAMRoleName,

            ImmutableArray<string> enableCloudwatchLogsExports,

            bool? enableIAMDatabaseAuthentication,

            bool? enablePerformanceInsights,

            string? endpointAddress,

            string? endpointPort,

            string? engine,

            string? engineVersion,

            string? id,

            int? iops,

            string? licenseModel,

            string? masterUserPassword,

            int? maxAllocatedStorage,

            int? monitoringInterval,

            string? monitoringRoleArn,

            bool? multiAZ,

            string? optionGroupName,

            string? performanceInsightsKMSKeyId,

            int? performanceInsightsRetentionPeriod,

            string? preferredBackupWindow,

            string? preferredMaintenanceWindow,

            ImmutableArray<Outputs.DBInstanceProcessorFeature> processorFeatures,

            int? promotionTier,

            string? storageType,

            ImmutableArray<Outputs.DBInstanceTag> tags,

            bool? useDefaultProcessorFeatures,

            ImmutableArray<string> vPCSecurityGroups)
        {
            AllocatedStorage = allocatedStorage;
            AllowMajorVersionUpgrade = allowMajorVersionUpgrade;
            AssociatedRoles = associatedRoles;
            AutoMinorVersionUpgrade = autoMinorVersionUpgrade;
            BackupRetentionPeriod = backupRetentionPeriod;
            CACertificateIdentifier = cACertificateIdentifier;
            CopyTagsToSnapshot = copyTagsToSnapshot;
            DBInstanceClass = dBInstanceClass;
            DBParameterGroupName = dBParameterGroupName;
            DBSecurityGroups = dBSecurityGroups;
            DeleteAutomatedBackups = deleteAutomatedBackups;
            DeletionProtection = deletionProtection;
            Domain = domain;
            DomainIAMRoleName = domainIAMRoleName;
            EnableCloudwatchLogsExports = enableCloudwatchLogsExports;
            EnableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication;
            EnablePerformanceInsights = enablePerformanceInsights;
            EndpointAddress = endpointAddress;
            EndpointPort = endpointPort;
            Engine = engine;
            EngineVersion = engineVersion;
            Id = id;
            Iops = iops;
            LicenseModel = licenseModel;
            MasterUserPassword = masterUserPassword;
            MaxAllocatedStorage = maxAllocatedStorage;
            MonitoringInterval = monitoringInterval;
            MonitoringRoleArn = monitoringRoleArn;
            MultiAZ = multiAZ;
            OptionGroupName = optionGroupName;
            PerformanceInsightsKMSKeyId = performanceInsightsKMSKeyId;
            PerformanceInsightsRetentionPeriod = performanceInsightsRetentionPeriod;
            PreferredBackupWindow = preferredBackupWindow;
            PreferredMaintenanceWindow = preferredMaintenanceWindow;
            ProcessorFeatures = processorFeatures;
            PromotionTier = promotionTier;
            StorageType = storageType;
            Tags = tags;
            UseDefaultProcessorFeatures = useDefaultProcessorFeatures;
            VPCSecurityGroups = vPCSecurityGroups;
        }
    }
}
