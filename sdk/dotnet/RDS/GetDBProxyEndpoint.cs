// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RDS
{
    public static class GetDBProxyEndpoint
    {
        /// <summary>
        /// Resource schema for AWS::RDS::DBProxyEndpoint.
        /// </summary>
        public static Task<GetDBProxyEndpointResult> InvokeAsync(GetDBProxyEndpointArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDBProxyEndpointResult>("aws-native:rds:getDBProxyEndpoint", args ?? new GetDBProxyEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::RDS::DBProxyEndpoint.
        /// </summary>
        public static Output<GetDBProxyEndpointResult> Invoke(GetDBProxyEndpointInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDBProxyEndpointResult>("aws-native:rds:getDBProxyEndpoint", args ?? new GetDBProxyEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDBProxyEndpointArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier for the DB proxy endpoint. This name must be unique for all DB proxy endpoints owned by your AWS account in the specified AWS Region.
        /// </summary>
        [Input("dBProxyEndpointName", required: true)]
        public string DBProxyEndpointName { get; set; } = null!;

        public GetDBProxyEndpointArgs()
        {
        }
    }

    public sealed class GetDBProxyEndpointInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier for the DB proxy endpoint. This name must be unique for all DB proxy endpoints owned by your AWS account in the specified AWS Region.
        /// </summary>
        [Input("dBProxyEndpointName", required: true)]
        public Input<string> DBProxyEndpointName { get; set; } = null!;

        public GetDBProxyEndpointInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDBProxyEndpointResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the DB proxy endpoint.
        /// </summary>
        public readonly string? DBProxyEndpointArn;
        /// <summary>
        /// The endpoint that you can use to connect to the DB proxy. You include the endpoint value in the connection string for a database client application.
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// A value that indicates whether this endpoint is the default endpoint for the associated DB proxy. Default DB proxy endpoints always have read/write capability. Other endpoints that you associate with the DB proxy can be either read/write or read-only.
        /// </summary>
        public readonly bool? IsDefault;
        /// <summary>
        /// An optional set of key-value pairs to associate arbitrary data of your choosing with the DB proxy endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.DBProxyEndpointTagFormat> Tags;
        /// <summary>
        /// VPC ID to associate with the new DB proxy endpoint.
        /// </summary>
        public readonly string? VpcId;
        /// <summary>
        /// VPC security group IDs to associate with the new DB proxy endpoint.
        /// </summary>
        public readonly ImmutableArray<string> VpcSecurityGroupIds;

        [OutputConstructor]
        private GetDBProxyEndpointResult(
            string? dBProxyEndpointArn,

            string? endpoint,

            bool? isDefault,

            ImmutableArray<Outputs.DBProxyEndpointTagFormat> tags,

            string? vpcId,

            ImmutableArray<string> vpcSecurityGroupIds)
        {
            DBProxyEndpointArn = dBProxyEndpointArn;
            Endpoint = endpoint;
            IsDefault = isDefault;
            Tags = tags;
            VpcId = vpcId;
            VpcSecurityGroupIds = vpcSecurityGroupIds;
        }
    }
}
