// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RDS
{
    /// <summary>
    /// The AWS::RDS::DBInstance resource creates an Amazon RDS DB instance.
    /// </summary>
    [AwsNativeResourceType("aws-native:rds:DBInstance")]
    public partial class DBInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The amount of storage (in gigabytes) to be initially allocated for the database instance.
        /// </summary>
        [Output("allocatedStorage")]
        public Output<string?> AllocatedStorage { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.
        /// </summary>
        [Output("allowMajorVersionUpgrade")]
        public Output<bool?> AllowMajorVersionUpgrade { get; private set; } = null!;

        /// <summary>
        /// The AWS Identity and Access Management (IAM) roles associated with the DB instance.
        /// </summary>
        [Output("associatedRoles")]
        public Output<ImmutableArray<Outputs.DBInstanceRole>> AssociatedRoles { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.
        /// </summary>
        [Output("autoMinorVersionUpgrade")]
        public Output<bool?> AutoMinorVersionUpgrade { get; private set; } = null!;

        /// <summary>
        /// The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string?> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.
        /// </summary>
        [Output("backupRetentionPeriod")]
        public Output<int?> BackupRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// The identifier of the CA certificate for this DB instance.
        /// </summary>
        [Output("cACertificateIdentifier")]
        public Output<string?> CACertificateIdentifier { get; private set; } = null!;

        /// <summary>
        /// For supported engines, indicates that the DB instance should be associated with the specified character set.
        /// </summary>
        [Output("characterSetName")]
        public Output<string?> CharacterSetName { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.
        /// </summary>
        [Output("copyTagsToSnapshot")]
        public Output<bool?> CopyTagsToSnapshot { get; private set; } = null!;

        /// <summary>
        /// The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:
        ///  * The profile must exist in your account.
        ///  * The profile must have an IAM role that Amazon EC2 has permissions to assume.
        ///  * The instance profile name and the associated IAM role name must start with the prefix AWSRDSCustom .
        /// For the list of permissions required for the IAM role, see Configure IAM and your VPC in the Amazon RDS User Guide .
        /// 
        /// This setting is required for RDS Custom.
        /// </summary>
        [Output("customIAMInstanceProfile")]
        public Output<string?> CustomIAMInstanceProfile { get; private set; } = null!;

        /// <summary>
        /// The identifier of the DB cluster that the instance will belong to.
        /// </summary>
        [Output("dBClusterIdentifier")]
        public Output<string?> DBClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// The identifier for the RDS for MySQL Multi-AZ DB cluster snapshot to restore from. For more information on Multi-AZ DB clusters, see Multi-AZ deployments with two readable standby DB instances in the Amazon RDS User Guide .
        /// 
        /// Constraints:
        ///  * Must match the identifier of an existing Multi-AZ DB cluster snapshot.
        ///  * Can't be specified when DBSnapshotIdentifier is specified.
        ///  * Must be specified when DBSnapshotIdentifier isn't specified.
        ///  * If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the DBClusterSnapshotIdentifier must be the ARN of the shared snapshot.
        ///  * Can't be the identifier of an Aurora DB cluster snapshot.
        ///  * Can't be the identifier of an RDS for PostgreSQL Multi-AZ DB cluster snapshot.
        /// </summary>
        [Output("dBClusterSnapshotIdentifier")]
        public Output<string?> DBClusterSnapshotIdentifier { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) for the DB instance.
        /// </summary>
        [Output("dBInstanceArn")]
        public Output<string> DBInstanceArn { get; private set; } = null!;

        /// <summary>
        /// The compute and memory capacity of the DB instance, for example, db.m4.large. Not all DB instance classes are available in all AWS Regions, or for all database engines.
        /// </summary>
        [Output("dBInstanceClass")]
        public Output<string?> DBInstanceClass { get; private set; } = null!;

        /// <summary>
        /// A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance.
        /// </summary>
        [Output("dBInstanceIdentifier")]
        public Output<string?> DBInstanceIdentifier { get; private set; } = null!;

        /// <summary>
        /// The meaning of this parameter differs according to the database engine you use.
        /// </summary>
        [Output("dBName")]
        public Output<string?> DBName { get; private set; } = null!;

        /// <summary>
        /// The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.
        /// </summary>
        [Output("dBParameterGroupName")]
        public Output<string?> DBParameterGroupName { get; private set; } = null!;

        /// <summary>
        /// A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.
        /// </summary>
        [Output("dBSecurityGroups")]
        public Output<ImmutableArray<string>> DBSecurityGroups { get; private set; } = null!;

        /// <summary>
        /// The name or Amazon Resource Name (ARN) of the DB snapshot that's used to restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the snapshot.
        /// </summary>
        [Output("dBSnapshotIdentifier")]
        public Output<string?> DBSnapshotIdentifier { get; private set; } = null!;

        /// <summary>
        /// A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new VPC.
        /// </summary>
        [Output("dBSubnetGroupName")]
        public Output<string?> DBSubnetGroupName { get; private set; } = null!;

        /// <summary>
        /// The Oracle system ID (Oracle SID) for a container database (CDB). The Oracle SID is also the name of the CDB. This setting is valid for RDS Custom only.
        /// </summary>
        [Output("dBSystemId")]
        public Output<string> DBSystemId { get; private set; } = null!;

        /// <summary>
        /// The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.
        /// </summary>
        [Output("dbiResourceId")]
        public Output<string> DbiResourceId { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.
        /// </summary>
        [Output("deleteAutomatedBackups")]
        public Output<bool?> DeleteAutomatedBackups { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
        /// </summary>
        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.
        /// </summary>
        [Output("domain")]
        public Output<string?> Domain { get; private set; } = null!;

        /// <summary>
        /// Specify the name of the IAM role to be used when making API calls to the Directory Service.
        /// </summary>
        [Output("domainIAMRoleName")]
        public Output<string?> DomainIAMRoleName { get; private set; } = null!;

        /// <summary>
        /// The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used.
        /// </summary>
        [Output("enableCloudwatchLogsExports")]
        public Output<ImmutableArray<string>> EnableCloudwatchLogsExports { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.
        /// </summary>
        [Output("enableIAMDatabaseAuthentication")]
        public Output<bool?> EnableIAMDatabaseAuthentication { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether to enable Performance Insights for the DB instance.
        /// </summary>
        [Output("enablePerformanceInsights")]
        public Output<bool?> EnablePerformanceInsights { get; private set; } = null!;

        /// <summary>
        /// Specifies the connection endpoint.
        /// </summary>
        [Output("endpoint")]
        public Output<Outputs.DBInstanceEndpoint?> Endpoint { get; private set; } = null!;

        /// <summary>
        /// The name of the database engine that you want to use for this DB instance.
        /// </summary>
        [Output("engine")]
        public Output<string?> Engine { get; private set; } = null!;

        /// <summary>
        /// The version number of the database engine to use.
        /// </summary>
        [Output("engineVersion")]
        public Output<string?> EngineVersion { get; private set; } = null!;

        /// <summary>
        /// The number of I/O operations per second (IOPS) that the database provisions.
        /// </summary>
        [Output("iops")]
        public Output<int?> Iops { get; private set; } = null!;

        /// <summary>
        /// The ARN of the AWS Key Management Service (AWS KMS) master key that's used to encrypt the DB instance.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// License model information for this DB instance.
        /// </summary>
        [Output("licenseModel")]
        public Output<string?> LicenseModel { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether to manage the master user password with AWS Secrets Manager.
        /// </summary>
        [Output("manageMasterUserPassword")]
        public Output<bool?> ManageMasterUserPassword { get; private set; } = null!;

        /// <summary>
        /// The password for the master user.
        /// </summary>
        [Output("masterUserPassword")]
        public Output<string?> MasterUserPassword { get; private set; } = null!;

        /// <summary>
        /// Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
        /// </summary>
        [Output("masterUserSecret")]
        public Output<Outputs.DBInstanceMasterUserSecret?> MasterUserSecret { get; private set; } = null!;

        /// <summary>
        /// The master user name for the DB instance.
        /// </summary>
        [Output("masterUsername")]
        public Output<string?> MasterUsername { get; private set; } = null!;

        /// <summary>
        /// The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
        /// </summary>
        [Output("maxAllocatedStorage")]
        public Output<int?> MaxAllocatedStorage { get; private set; } = null!;

        /// <summary>
        /// The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.
        /// </summary>
        [Output("monitoringInterval")]
        public Output<int?> MonitoringInterval { get; private set; } = null!;

        /// <summary>
        /// The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs.
        /// </summary>
        [Output("monitoringRoleArn")]
        public Output<string?> MonitoringRoleArn { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the database instance is a multiple Availability Zone deployment.
        /// </summary>
        [Output("multiAZ")]
        public Output<bool?> MultiAZ { get; private set; } = null!;

        /// <summary>
        /// The name of the NCHAR character set for the Oracle DB instance. This parameter doesn't apply to RDS Custom.
        /// </summary>
        [Output("ncharCharacterSetName")]
        public Output<string?> NcharCharacterSetName { get; private set; } = null!;

        /// <summary>
        /// The network type of the DB cluster.
        /// </summary>
        [Output("networkType")]
        public Output<string?> NetworkType { get; private set; } = null!;

        /// <summary>
        /// Indicates that the DB instance should be associated with the specified option group.
        /// </summary>
        [Output("optionGroupName")]
        public Output<string?> OptionGroupName { get; private set; } = null!;

        /// <summary>
        /// The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.
        /// </summary>
        [Output("performanceInsightsKMSKeyId")]
        public Output<string?> PerformanceInsightsKMSKeyId { get; private set; } = null!;

        /// <summary>
        /// The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).
        /// </summary>
        [Output("performanceInsightsRetentionPeriod")]
        public Output<int?> PerformanceInsightsRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// The port number on which the database accepts connections.
        /// </summary>
        [Output("port")]
        public Output<string?> Port { get; private set; } = null!;

        /// <summary>
        /// The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter.
        /// </summary>
        [Output("preferredBackupWindow")]
        public Output<string?> PreferredBackupWindow { get; private set; } = null!;

        /// <summary>
        /// he weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        /// </summary>
        [Output("preferredMaintenanceWindow")]
        public Output<string?> PreferredMaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
        /// </summary>
        [Output("processorFeatures")]
        public Output<ImmutableArray<Outputs.DBInstanceProcessorFeature>> ProcessorFeatures { get; private set; } = null!;

        /// <summary>
        /// A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance.
        /// </summary>
        [Output("promotionTier")]
        public Output<int?> PromotionTier { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that resolves to a private IP address.
        /// </summary>
        [Output("publiclyAccessible")]
        public Output<bool?> PubliclyAccessible { get; private set; } = null!;

        /// <summary>
        /// The open mode of an Oracle read replica. The default is open-read-only.
        /// </summary>
        [Output("replicaMode")]
        public Output<string?> ReplicaMode { get; private set; } = null!;

        /// <summary>
        /// The date and time to restore from.
        /// </summary>
        [Output("restoreTime")]
        public Output<string?> RestoreTime { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the replicated automated backups from which to restore.
        /// </summary>
        [Output("sourceDBInstanceAutomatedBackupsArn")]
        public Output<string?> SourceDBInstanceAutomatedBackupsArn { get; private set; } = null!;

        /// <summary>
        /// If you want to create a Read Replica DB instance, specify the ID of the source DB instance. Each DB instance can have a limited number of Read Replicas.
        /// </summary>
        [Output("sourceDBInstanceIdentifier")]
        public Output<string?> SourceDBInstanceIdentifier { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the source DB instance from which to restore.
        /// </summary>
        [Output("sourceDbiResourceId")]
        public Output<string?> SourceDbiResourceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the region that contains the source DB instance for the Read Replica.
        /// </summary>
        [Output("sourceRegion")]
        public Output<string?> SourceRegion { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted.
        /// </summary>
        [Output("storageEncrypted")]
        public Output<bool?> StorageEncrypted { get; private set; } = null!;

        /// <summary>
        /// Specifies the storage throughput for the DB instance.
        /// </summary>
        [Output("storageThroughput")]
        public Output<int?> StorageThroughput { get; private set; } = null!;

        /// <summary>
        /// Specifies the storage type to be associated with the DB instance.
        /// </summary>
        [Output("storageType")]
        public Output<string?> StorageType { get; private set; } = null!;

        /// <summary>
        /// Tags to assign to the DB instance.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DBInstanceTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The ARN from the key store with which to associate the instance for TDE encryption.
        /// </summary>
        [Output("tdeCredentialArn")]
        public Output<string?> TdeCredentialArn { get; private set; } = null!;

        /// <summary>
        /// The password for the given ARN from the key store in order to access the device.
        /// </summary>
        [Output("tdeCredentialPassword")]
        public Output<string?> TdeCredentialPassword { get; private set; } = null!;

        /// <summary>
        /// The time zone of the DB instance. The time zone parameter is currently supported only by Microsoft SQL Server.
        /// </summary>
        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether the DB instance class of the DB instance uses its default processor features.
        /// </summary>
        [Output("useDefaultProcessorFeatures")]
        public Output<bool?> UseDefaultProcessorFeatures { get; private set; } = null!;

        /// <summary>
        /// A value that indicates whether the DB instance is restored from the latest backup time. By default, the DB instance isn't restored from the latest backup time.
        /// </summary>
        [Output("useLatestRestorableTime")]
        public Output<bool?> UseLatestRestorableTime { get; private set; } = null!;

        /// <summary>
        /// A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of existing VPC security groups and references to AWS::EC2::SecurityGroup resources created in the template.
        /// </summary>
        [Output("vPCSecurityGroups")]
        public Output<ImmutableArray<string>> VPCSecurityGroups { get; private set; } = null!;


        /// <summary>
        /// Create a DBInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DBInstance(string name, DBInstanceArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:rds:DBInstance", name, args ?? new DBInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DBInstance(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:rds:DBInstance", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DBInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DBInstance Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DBInstance(name, id, options);
        }
    }

    public sealed class DBInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The amount of storage (in gigabytes) to be initially allocated for the database instance.
        /// </summary>
        [Input("allocatedStorage")]
        public Input<string>? AllocatedStorage { get; set; }

        /// <summary>
        /// A value that indicates whether major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.
        /// </summary>
        [Input("allowMajorVersionUpgrade")]
        public Input<bool>? AllowMajorVersionUpgrade { get; set; }

        [Input("associatedRoles")]
        private InputList<Inputs.DBInstanceRoleArgs>? _associatedRoles;

        /// <summary>
        /// The AWS Identity and Access Management (IAM) roles associated with the DB instance.
        /// </summary>
        public InputList<Inputs.DBInstanceRoleArgs> AssociatedRoles
        {
            get => _associatedRoles ?? (_associatedRoles = new InputList<Inputs.DBInstanceRoleArgs>());
            set => _associatedRoles = value;
        }

        /// <summary>
        /// A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.
        /// </summary>
        [Input("autoMinorVersionUpgrade")]
        public Input<bool>? AutoMinorVersionUpgrade { get; set; }

        /// <summary>
        /// The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.
        /// </summary>
        [Input("backupRetentionPeriod")]
        public Input<int>? BackupRetentionPeriod { get; set; }

        /// <summary>
        /// The identifier of the CA certificate for this DB instance.
        /// </summary>
        [Input("cACertificateIdentifier")]
        public Input<string>? CACertificateIdentifier { get; set; }

        /// <summary>
        /// For supported engines, indicates that the DB instance should be associated with the specified character set.
        /// </summary>
        [Input("characterSetName")]
        public Input<string>? CharacterSetName { get; set; }

        /// <summary>
        /// A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.
        /// </summary>
        [Input("copyTagsToSnapshot")]
        public Input<bool>? CopyTagsToSnapshot { get; set; }

        /// <summary>
        /// The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:
        ///  * The profile must exist in your account.
        ///  * The profile must have an IAM role that Amazon EC2 has permissions to assume.
        ///  * The instance profile name and the associated IAM role name must start with the prefix AWSRDSCustom .
        /// For the list of permissions required for the IAM role, see Configure IAM and your VPC in the Amazon RDS User Guide .
        /// 
        /// This setting is required for RDS Custom.
        /// </summary>
        [Input("customIAMInstanceProfile")]
        public Input<string>? CustomIAMInstanceProfile { get; set; }

        /// <summary>
        /// The identifier of the DB cluster that the instance will belong to.
        /// </summary>
        [Input("dBClusterIdentifier")]
        public Input<string>? DBClusterIdentifier { get; set; }

        /// <summary>
        /// The identifier for the RDS for MySQL Multi-AZ DB cluster snapshot to restore from. For more information on Multi-AZ DB clusters, see Multi-AZ deployments with two readable standby DB instances in the Amazon RDS User Guide .
        /// 
        /// Constraints:
        ///  * Must match the identifier of an existing Multi-AZ DB cluster snapshot.
        ///  * Can't be specified when DBSnapshotIdentifier is specified.
        ///  * Must be specified when DBSnapshotIdentifier isn't specified.
        ///  * If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the DBClusterSnapshotIdentifier must be the ARN of the shared snapshot.
        ///  * Can't be the identifier of an Aurora DB cluster snapshot.
        ///  * Can't be the identifier of an RDS for PostgreSQL Multi-AZ DB cluster snapshot.
        /// </summary>
        [Input("dBClusterSnapshotIdentifier")]
        public Input<string>? DBClusterSnapshotIdentifier { get; set; }

        /// <summary>
        /// The compute and memory capacity of the DB instance, for example, db.m4.large. Not all DB instance classes are available in all AWS Regions, or for all database engines.
        /// </summary>
        [Input("dBInstanceClass")]
        public Input<string>? DBInstanceClass { get; set; }

        /// <summary>
        /// A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance.
        /// </summary>
        [Input("dBInstanceIdentifier")]
        public Input<string>? DBInstanceIdentifier { get; set; }

        /// <summary>
        /// The meaning of this parameter differs according to the database engine you use.
        /// </summary>
        [Input("dBName")]
        public Input<string>? DBName { get; set; }

        /// <summary>
        /// The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.
        /// </summary>
        [Input("dBParameterGroupName")]
        public Input<string>? DBParameterGroupName { get; set; }

        [Input("dBSecurityGroups")]
        private InputList<string>? _dBSecurityGroups;

        /// <summary>
        /// A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.
        /// </summary>
        public InputList<string> DBSecurityGroups
        {
            get => _dBSecurityGroups ?? (_dBSecurityGroups = new InputList<string>());
            set => _dBSecurityGroups = value;
        }

        /// <summary>
        /// The name or Amazon Resource Name (ARN) of the DB snapshot that's used to restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the snapshot.
        /// </summary>
        [Input("dBSnapshotIdentifier")]
        public Input<string>? DBSnapshotIdentifier { get; set; }

        /// <summary>
        /// A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new VPC.
        /// </summary>
        [Input("dBSubnetGroupName")]
        public Input<string>? DBSubnetGroupName { get; set; }

        /// <summary>
        /// A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.
        /// </summary>
        [Input("deleteAutomatedBackups")]
        public Input<bool>? DeleteAutomatedBackups { get; set; }

        /// <summary>
        /// A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Specify the name of the IAM role to be used when making API calls to the Directory Service.
        /// </summary>
        [Input("domainIAMRoleName")]
        public Input<string>? DomainIAMRoleName { get; set; }

        [Input("enableCloudwatchLogsExports")]
        private InputList<string>? _enableCloudwatchLogsExports;

        /// <summary>
        /// The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used.
        /// </summary>
        public InputList<string> EnableCloudwatchLogsExports
        {
            get => _enableCloudwatchLogsExports ?? (_enableCloudwatchLogsExports = new InputList<string>());
            set => _enableCloudwatchLogsExports = value;
        }

        /// <summary>
        /// A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.
        /// </summary>
        [Input("enableIAMDatabaseAuthentication")]
        public Input<bool>? EnableIAMDatabaseAuthentication { get; set; }

        /// <summary>
        /// A value that indicates whether to enable Performance Insights for the DB instance.
        /// </summary>
        [Input("enablePerformanceInsights")]
        public Input<bool>? EnablePerformanceInsights { get; set; }

        /// <summary>
        /// Specifies the connection endpoint.
        /// </summary>
        [Input("endpoint")]
        public Input<Inputs.DBInstanceEndpointArgs>? Endpoint { get; set; }

        /// <summary>
        /// The name of the database engine that you want to use for this DB instance.
        /// </summary>
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        /// <summary>
        /// The version number of the database engine to use.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// The number of I/O operations per second (IOPS) that the database provisions.
        /// </summary>
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        /// <summary>
        /// The ARN of the AWS Key Management Service (AWS KMS) master key that's used to encrypt the DB instance.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// License model information for this DB instance.
        /// </summary>
        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        /// <summary>
        /// A value that indicates whether to manage the master user password with AWS Secrets Manager.
        /// </summary>
        [Input("manageMasterUserPassword")]
        public Input<bool>? ManageMasterUserPassword { get; set; }

        /// <summary>
        /// The password for the master user.
        /// </summary>
        [Input("masterUserPassword")]
        public Input<string>? MasterUserPassword { get; set; }

        /// <summary>
        /// Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
        /// </summary>
        [Input("masterUserSecret")]
        public Input<Inputs.DBInstanceMasterUserSecretArgs>? MasterUserSecret { get; set; }

        /// <summary>
        /// The master user name for the DB instance.
        /// </summary>
        [Input("masterUsername")]
        public Input<string>? MasterUsername { get; set; }

        /// <summary>
        /// The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
        /// </summary>
        [Input("maxAllocatedStorage")]
        public Input<int>? MaxAllocatedStorage { get; set; }

        /// <summary>
        /// The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.
        /// </summary>
        [Input("monitoringInterval")]
        public Input<int>? MonitoringInterval { get; set; }

        /// <summary>
        /// The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs.
        /// </summary>
        [Input("monitoringRoleArn")]
        public Input<string>? MonitoringRoleArn { get; set; }

        /// <summary>
        /// Specifies whether the database instance is a multiple Availability Zone deployment.
        /// </summary>
        [Input("multiAZ")]
        public Input<bool>? MultiAZ { get; set; }

        /// <summary>
        /// The name of the NCHAR character set for the Oracle DB instance. This parameter doesn't apply to RDS Custom.
        /// </summary>
        [Input("ncharCharacterSetName")]
        public Input<string>? NcharCharacterSetName { get; set; }

        /// <summary>
        /// The network type of the DB cluster.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// Indicates that the DB instance should be associated with the specified option group.
        /// </summary>
        [Input("optionGroupName")]
        public Input<string>? OptionGroupName { get; set; }

        /// <summary>
        /// The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.
        /// </summary>
        [Input("performanceInsightsKMSKeyId")]
        public Input<string>? PerformanceInsightsKMSKeyId { get; set; }

        /// <summary>
        /// The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).
        /// </summary>
        [Input("performanceInsightsRetentionPeriod")]
        public Input<int>? PerformanceInsightsRetentionPeriod { get; set; }

        /// <summary>
        /// The port number on which the database accepts connections.
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter.
        /// </summary>
        [Input("preferredBackupWindow")]
        public Input<string>? PreferredBackupWindow { get; set; }

        /// <summary>
        /// he weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        [Input("processorFeatures")]
        private InputList<Inputs.DBInstanceProcessorFeatureArgs>? _processorFeatures;

        /// <summary>
        /// The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
        /// </summary>
        public InputList<Inputs.DBInstanceProcessorFeatureArgs> ProcessorFeatures
        {
            get => _processorFeatures ?? (_processorFeatures = new InputList<Inputs.DBInstanceProcessorFeatureArgs>());
            set => _processorFeatures = value;
        }

        /// <summary>
        /// A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance.
        /// </summary>
        [Input("promotionTier")]
        public Input<int>? PromotionTier { get; set; }

        /// <summary>
        /// Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that resolves to a private IP address.
        /// </summary>
        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        /// <summary>
        /// The open mode of an Oracle read replica. The default is open-read-only.
        /// </summary>
        [Input("replicaMode")]
        public Input<string>? ReplicaMode { get; set; }

        /// <summary>
        /// The date and time to restore from.
        /// </summary>
        [Input("restoreTime")]
        public Input<string>? RestoreTime { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the replicated automated backups from which to restore.
        /// </summary>
        [Input("sourceDBInstanceAutomatedBackupsArn")]
        public Input<string>? SourceDBInstanceAutomatedBackupsArn { get; set; }

        /// <summary>
        /// If you want to create a Read Replica DB instance, specify the ID of the source DB instance. Each DB instance can have a limited number of Read Replicas.
        /// </summary>
        [Input("sourceDBInstanceIdentifier")]
        public Input<string>? SourceDBInstanceIdentifier { get; set; }

        /// <summary>
        /// The resource ID of the source DB instance from which to restore.
        /// </summary>
        [Input("sourceDbiResourceId")]
        public Input<string>? SourceDbiResourceId { get; set; }

        /// <summary>
        /// The ID of the region that contains the source DB instance for the Read Replica.
        /// </summary>
        [Input("sourceRegion")]
        public Input<string>? SourceRegion { get; set; }

        /// <summary>
        /// A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted.
        /// </summary>
        [Input("storageEncrypted")]
        public Input<bool>? StorageEncrypted { get; set; }

        /// <summary>
        /// Specifies the storage throughput for the DB instance.
        /// </summary>
        [Input("storageThroughput")]
        public Input<int>? StorageThroughput { get; set; }

        /// <summary>
        /// Specifies the storage type to be associated with the DB instance.
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("tags")]
        private InputList<Inputs.DBInstanceTagArgs>? _tags;

        /// <summary>
        /// Tags to assign to the DB instance.
        /// </summary>
        public InputList<Inputs.DBInstanceTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DBInstanceTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The ARN from the key store with which to associate the instance for TDE encryption.
        /// </summary>
        [Input("tdeCredentialArn")]
        public Input<string>? TdeCredentialArn { get; set; }

        /// <summary>
        /// The password for the given ARN from the key store in order to access the device.
        /// </summary>
        [Input("tdeCredentialPassword")]
        public Input<string>? TdeCredentialPassword { get; set; }

        /// <summary>
        /// The time zone of the DB instance. The time zone parameter is currently supported only by Microsoft SQL Server.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// A value that indicates whether the DB instance class of the DB instance uses its default processor features.
        /// </summary>
        [Input("useDefaultProcessorFeatures")]
        public Input<bool>? UseDefaultProcessorFeatures { get; set; }

        /// <summary>
        /// A value that indicates whether the DB instance is restored from the latest backup time. By default, the DB instance isn't restored from the latest backup time.
        /// </summary>
        [Input("useLatestRestorableTime")]
        public Input<bool>? UseLatestRestorableTime { get; set; }

        [Input("vPCSecurityGroups")]
        private InputList<string>? _vPCSecurityGroups;

        /// <summary>
        /// A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of existing VPC security groups and references to AWS::EC2::SecurityGroup resources created in the template.
        /// </summary>
        public InputList<string> VPCSecurityGroups
        {
            get => _vPCSecurityGroups ?? (_vPCSecurityGroups = new InputList<string>());
            set => _vPCSecurityGroups = value;
        }

        public DBInstanceArgs()
        {
        }
        public static new DBInstanceArgs Empty => new DBInstanceArgs();
    }
}
