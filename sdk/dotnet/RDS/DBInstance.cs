// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RDS
{
    /// <summary>
    /// Resource Type definition for AWS::RDS::DBInstance
    /// </summary>
    [Obsolete(@"DBInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:rds:DBInstance")]
    public partial class DBInstance : Pulumi.CustomResource
    {
        [Output("allocatedStorage")]
        public Output<string?> AllocatedStorage { get; private set; } = null!;

        [Output("allowMajorVersionUpgrade")]
        public Output<bool?> AllowMajorVersionUpgrade { get; private set; } = null!;

        [Output("associatedRoles")]
        public Output<ImmutableArray<Outputs.DBInstanceDBInstanceRole>> AssociatedRoles { get; private set; } = null!;

        [Output("autoMinorVersionUpgrade")]
        public Output<bool?> AutoMinorVersionUpgrade { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string?> AvailabilityZone { get; private set; } = null!;

        [Output("backupRetentionPeriod")]
        public Output<int?> BackupRetentionPeriod { get; private set; } = null!;

        [Output("cACertificateIdentifier")]
        public Output<string?> CACertificateIdentifier { get; private set; } = null!;

        [Output("characterSetName")]
        public Output<string?> CharacterSetName { get; private set; } = null!;

        [Output("copyTagsToSnapshot")]
        public Output<bool?> CopyTagsToSnapshot { get; private set; } = null!;

        [Output("dBClusterIdentifier")]
        public Output<string?> DBClusterIdentifier { get; private set; } = null!;

        [Output("dBInstanceClass")]
        public Output<string> DBInstanceClass { get; private set; } = null!;

        [Output("dBInstanceIdentifier")]
        public Output<string?> DBInstanceIdentifier { get; private set; } = null!;

        [Output("dBName")]
        public Output<string?> DBName { get; private set; } = null!;

        [Output("dBParameterGroupName")]
        public Output<string?> DBParameterGroupName { get; private set; } = null!;

        [Output("dBSecurityGroups")]
        public Output<ImmutableArray<string>> DBSecurityGroups { get; private set; } = null!;

        [Output("dBSnapshotIdentifier")]
        public Output<string?> DBSnapshotIdentifier { get; private set; } = null!;

        [Output("dBSubnetGroupName")]
        public Output<string?> DBSubnetGroupName { get; private set; } = null!;

        [Output("deleteAutomatedBackups")]
        public Output<bool?> DeleteAutomatedBackups { get; private set; } = null!;

        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        [Output("domain")]
        public Output<string?> Domain { get; private set; } = null!;

        [Output("domainIAMRoleName")]
        public Output<string?> DomainIAMRoleName { get; private set; } = null!;

        [Output("enableCloudwatchLogsExports")]
        public Output<ImmutableArray<string>> EnableCloudwatchLogsExports { get; private set; } = null!;

        [Output("enableIAMDatabaseAuthentication")]
        public Output<bool?> EnableIAMDatabaseAuthentication { get; private set; } = null!;

        [Output("enablePerformanceInsights")]
        public Output<bool?> EnablePerformanceInsights { get; private set; } = null!;

        [Output("endpointAddress")]
        public Output<string?> EndpointAddress { get; private set; } = null!;

        [Output("endpointPort")]
        public Output<string?> EndpointPort { get; private set; } = null!;

        [Output("engine")]
        public Output<string?> Engine { get; private set; } = null!;

        [Output("engineVersion")]
        public Output<string?> EngineVersion { get; private set; } = null!;

        [Output("iops")]
        public Output<int?> Iops { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        [Output("licenseModel")]
        public Output<string?> LicenseModel { get; private set; } = null!;

        [Output("masterUserPassword")]
        public Output<string?> MasterUserPassword { get; private set; } = null!;

        [Output("masterUsername")]
        public Output<string?> MasterUsername { get; private set; } = null!;

        [Output("maxAllocatedStorage")]
        public Output<int?> MaxAllocatedStorage { get; private set; } = null!;

        [Output("monitoringInterval")]
        public Output<int?> MonitoringInterval { get; private set; } = null!;

        [Output("monitoringRoleArn")]
        public Output<string?> MonitoringRoleArn { get; private set; } = null!;

        [Output("multiAZ")]
        public Output<bool?> MultiAZ { get; private set; } = null!;

        [Output("optionGroupName")]
        public Output<string?> OptionGroupName { get; private set; } = null!;

        [Output("performanceInsightsKMSKeyId")]
        public Output<string?> PerformanceInsightsKMSKeyId { get; private set; } = null!;

        [Output("performanceInsightsRetentionPeriod")]
        public Output<int?> PerformanceInsightsRetentionPeriod { get; private set; } = null!;

        [Output("port")]
        public Output<string?> Port { get; private set; } = null!;

        [Output("preferredBackupWindow")]
        public Output<string?> PreferredBackupWindow { get; private set; } = null!;

        [Output("preferredMaintenanceWindow")]
        public Output<string?> PreferredMaintenanceWindow { get; private set; } = null!;

        [Output("processorFeatures")]
        public Output<ImmutableArray<Outputs.DBInstanceProcessorFeature>> ProcessorFeatures { get; private set; } = null!;

        [Output("promotionTier")]
        public Output<int?> PromotionTier { get; private set; } = null!;

        [Output("publiclyAccessible")]
        public Output<bool?> PubliclyAccessible { get; private set; } = null!;

        [Output("sourceDBInstanceIdentifier")]
        public Output<string?> SourceDBInstanceIdentifier { get; private set; } = null!;

        [Output("sourceRegion")]
        public Output<string?> SourceRegion { get; private set; } = null!;

        [Output("storageEncrypted")]
        public Output<bool?> StorageEncrypted { get; private set; } = null!;

        [Output("storageType")]
        public Output<string?> StorageType { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.DBInstanceTag>> Tags { get; private set; } = null!;

        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;

        [Output("useDefaultProcessorFeatures")]
        public Output<bool?> UseDefaultProcessorFeatures { get; private set; } = null!;

        [Output("vPCSecurityGroups")]
        public Output<ImmutableArray<string>> VPCSecurityGroups { get; private set; } = null!;


        /// <summary>
        /// Create a DBInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DBInstance(string name, DBInstanceArgs args, CustomResourceOptions? options = null)
            : base("aws-native:rds:DBInstance", name, args ?? new DBInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DBInstance(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:rds:DBInstance", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DBInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DBInstance Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DBInstance(name, id, options);
        }
    }

    public sealed class DBInstanceArgs : Pulumi.ResourceArgs
    {
        [Input("allocatedStorage")]
        public Input<string>? AllocatedStorage { get; set; }

        [Input("allowMajorVersionUpgrade")]
        public Input<bool>? AllowMajorVersionUpgrade { get; set; }

        [Input("associatedRoles")]
        private InputList<Inputs.DBInstanceDBInstanceRoleArgs>? _associatedRoles;
        public InputList<Inputs.DBInstanceDBInstanceRoleArgs> AssociatedRoles
        {
            get => _associatedRoles ?? (_associatedRoles = new InputList<Inputs.DBInstanceDBInstanceRoleArgs>());
            set => _associatedRoles = value;
        }

        [Input("autoMinorVersionUpgrade")]
        public Input<bool>? AutoMinorVersionUpgrade { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("backupRetentionPeriod")]
        public Input<int>? BackupRetentionPeriod { get; set; }

        [Input("cACertificateIdentifier")]
        public Input<string>? CACertificateIdentifier { get; set; }

        [Input("characterSetName")]
        public Input<string>? CharacterSetName { get; set; }

        [Input("copyTagsToSnapshot")]
        public Input<bool>? CopyTagsToSnapshot { get; set; }

        [Input("dBClusterIdentifier")]
        public Input<string>? DBClusterIdentifier { get; set; }

        [Input("dBInstanceClass", required: true)]
        public Input<string> DBInstanceClass { get; set; } = null!;

        [Input("dBInstanceIdentifier")]
        public Input<string>? DBInstanceIdentifier { get; set; }

        [Input("dBName")]
        public Input<string>? DBName { get; set; }

        [Input("dBParameterGroupName")]
        public Input<string>? DBParameterGroupName { get; set; }

        [Input("dBSecurityGroups")]
        private InputList<string>? _dBSecurityGroups;
        public InputList<string> DBSecurityGroups
        {
            get => _dBSecurityGroups ?? (_dBSecurityGroups = new InputList<string>());
            set => _dBSecurityGroups = value;
        }

        [Input("dBSnapshotIdentifier")]
        public Input<string>? DBSnapshotIdentifier { get; set; }

        [Input("dBSubnetGroupName")]
        public Input<string>? DBSubnetGroupName { get; set; }

        [Input("deleteAutomatedBackups")]
        public Input<bool>? DeleteAutomatedBackups { get; set; }

        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("domainIAMRoleName")]
        public Input<string>? DomainIAMRoleName { get; set; }

        [Input("enableCloudwatchLogsExports")]
        private InputList<string>? _enableCloudwatchLogsExports;
        public InputList<string> EnableCloudwatchLogsExports
        {
            get => _enableCloudwatchLogsExports ?? (_enableCloudwatchLogsExports = new InputList<string>());
            set => _enableCloudwatchLogsExports = value;
        }

        [Input("enableIAMDatabaseAuthentication")]
        public Input<bool>? EnableIAMDatabaseAuthentication { get; set; }

        [Input("enablePerformanceInsights")]
        public Input<bool>? EnablePerformanceInsights { get; set; }

        [Input("endpointAddress")]
        public Input<string>? EndpointAddress { get; set; }

        [Input("endpointPort")]
        public Input<string>? EndpointPort { get; set; }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        [Input("masterUserPassword")]
        public Input<string>? MasterUserPassword { get; set; }

        [Input("masterUsername")]
        public Input<string>? MasterUsername { get; set; }

        [Input("maxAllocatedStorage")]
        public Input<int>? MaxAllocatedStorage { get; set; }

        [Input("monitoringInterval")]
        public Input<int>? MonitoringInterval { get; set; }

        [Input("monitoringRoleArn")]
        public Input<string>? MonitoringRoleArn { get; set; }

        [Input("multiAZ")]
        public Input<bool>? MultiAZ { get; set; }

        [Input("optionGroupName")]
        public Input<string>? OptionGroupName { get; set; }

        [Input("performanceInsightsKMSKeyId")]
        public Input<string>? PerformanceInsightsKMSKeyId { get; set; }

        [Input("performanceInsightsRetentionPeriod")]
        public Input<int>? PerformanceInsightsRetentionPeriod { get; set; }

        [Input("port")]
        public Input<string>? Port { get; set; }

        [Input("preferredBackupWindow")]
        public Input<string>? PreferredBackupWindow { get; set; }

        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        [Input("processorFeatures")]
        private InputList<Inputs.DBInstanceProcessorFeatureArgs>? _processorFeatures;
        public InputList<Inputs.DBInstanceProcessorFeatureArgs> ProcessorFeatures
        {
            get => _processorFeatures ?? (_processorFeatures = new InputList<Inputs.DBInstanceProcessorFeatureArgs>());
            set => _processorFeatures = value;
        }

        [Input("promotionTier")]
        public Input<int>? PromotionTier { get; set; }

        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("sourceDBInstanceIdentifier")]
        public Input<string>? SourceDBInstanceIdentifier { get; set; }

        [Input("sourceRegion")]
        public Input<string>? SourceRegion { get; set; }

        [Input("storageEncrypted")]
        public Input<bool>? StorageEncrypted { get; set; }

        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("tags")]
        private InputList<Inputs.DBInstanceTagArgs>? _tags;
        public InputList<Inputs.DBInstanceTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DBInstanceTagArgs>());
            set => _tags = value;
        }

        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        [Input("useDefaultProcessorFeatures")]
        public Input<bool>? UseDefaultProcessorFeatures { get; set; }

        [Input("vPCSecurityGroups")]
        private InputList<string>? _vPCSecurityGroups;
        public InputList<string> VPCSecurityGroups
        {
            get => _vPCSecurityGroups ?? (_vPCSecurityGroups = new InputList<string>());
            set => _vPCSecurityGroups = value;
        }

        public DBInstanceArgs()
        {
        }
    }
}
