// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RDS
{
    public static class GetDBSubnetGroup
    {
        /// <summary>
        /// The AWS::RDS::DBSubnetGroup resource creates a database subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.
        /// </summary>
        public static Task<GetDBSubnetGroupResult> InvokeAsync(GetDBSubnetGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDBSubnetGroupResult>("aws-native:rds:getDBSubnetGroup", args ?? new GetDBSubnetGroupArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::RDS::DBSubnetGroup resource creates a database subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.
        /// </summary>
        public static Output<GetDBSubnetGroupResult> Invoke(GetDBSubnetGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDBSubnetGroupResult>("aws-native:rds:getDBSubnetGroup", args ?? new GetDBSubnetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDBSubnetGroupArgs : Pulumi.InvokeArgs
    {
        [Input("dBSubnetGroupName", required: true)]
        public string DBSubnetGroupName { get; set; } = null!;

        public GetDBSubnetGroupArgs()
        {
        }
    }

    public sealed class GetDBSubnetGroupInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("dBSubnetGroupName", required: true)]
        public Input<string> DBSubnetGroupName { get; set; } = null!;

        public GetDBSubnetGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDBSubnetGroupResult
    {
        public readonly string? DBSubnetGroupDescription;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.DBSubnetGroupTag> Tags;

        [OutputConstructor]
        private GetDBSubnetGroupResult(
            string? dBSubnetGroupDescription,

            ImmutableArray<Outputs.DBSubnetGroupTag> tags)
        {
            DBSubnetGroupDescription = dBSubnetGroupDescription;
            Tags = tags;
        }
    }
}
