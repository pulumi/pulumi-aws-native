// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RDS
{
    public static class GetGlobalCluster
    {
        /// <summary>
        /// Resource Type definition for AWS::RDS::GlobalCluster
        /// </summary>
        public static Task<GetGlobalClusterResult> InvokeAsync(GetGlobalClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGlobalClusterResult>("aws-native:rds:getGlobalCluster", args ?? new GetGlobalClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::RDS::GlobalCluster
        /// </summary>
        public static Output<GetGlobalClusterResult> Invoke(GetGlobalClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGlobalClusterResult>("aws-native:rds:getGlobalCluster", args ?? new GetGlobalClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGlobalClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string.
        /// </summary>
        [Input("globalClusterIdentifier", required: true)]
        public string GlobalClusterIdentifier { get; set; } = null!;

        public GetGlobalClusterArgs()
        {
        }
        public static new GetGlobalClusterArgs Empty => new GetGlobalClusterArgs();
    }

    public sealed class GetGlobalClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string.
        /// </summary>
        [Input("globalClusterIdentifier", required: true)]
        public Input<string> GlobalClusterIdentifier { get; set; } = null!;

        public GetGlobalClusterInvokeArgs()
        {
        }
        public static new GetGlobalClusterInvokeArgs Empty => new GetGlobalClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetGlobalClusterResult
    {
        /// <summary>
        /// The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled.
        /// </summary>
        public readonly bool? DeletionProtection;
        /// <summary>
        /// The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.
        /// </summary>
        public readonly string? EngineVersion;

        [OutputConstructor]
        private GetGlobalClusterResult(
            bool? deletionProtection,

            string? engineVersion)
        {
            DeletionProtection = deletionProtection;
            EngineVersion = engineVersion;
        }
    }
}
