// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RDS
{
    public static class GetOptionGroup
    {
        /// <summary>
        /// The AWS::RDS::OptionGroup resource creates an option group, to enable and configure features that are specific to a particular DB engine.
        /// </summary>
        public static Task<GetOptionGroupResult> InvokeAsync(GetOptionGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOptionGroupResult>("aws-native:rds:getOptionGroup", args ?? new GetOptionGroupArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::RDS::OptionGroup resource creates an option group, to enable and configure features that are specific to a particular DB engine.
        /// </summary>
        public static Output<GetOptionGroupResult> Invoke(GetOptionGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOptionGroupResult>("aws-native:rds:getOptionGroup", args ?? new GetOptionGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOptionGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the option group.
        /// </summary>
        [Input("optionGroupName", required: true)]
        public string OptionGroupName { get; set; } = null!;

        public GetOptionGroupArgs()
        {
        }
        public static new GetOptionGroupArgs Empty => new GetOptionGroupArgs();
    }

    public sealed class GetOptionGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the option group.
        /// </summary>
        [Input("optionGroupName", required: true)]
        public Input<string> OptionGroupName { get; set; } = null!;

        public GetOptionGroupInvokeArgs()
        {
        }
        public static new GetOptionGroupInvokeArgs Empty => new GetOptionGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetOptionGroupResult
    {
        /// <summary>
        /// Indicates what options are available in the option group.
        /// </summary>
        public readonly ImmutableArray<Outputs.OptionGroupOptionConfiguration> OptionConfigurations;
        /// <summary>
        /// Specifies the name of the option group.
        /// </summary>
        public readonly string? OptionGroupName;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.OptionGroupTag> Tags;

        [OutputConstructor]
        private GetOptionGroupResult(
            ImmutableArray<Outputs.OptionGroupOptionConfiguration> optionConfigurations,

            string? optionGroupName,

            ImmutableArray<Outputs.OptionGroupTag> tags)
        {
            OptionConfigurations = optionConfigurations;
            OptionGroupName = optionGroupName;
            Tags = tags;
        }
    }
}
