// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SimSpaceWeaver
{
    public static class GetSimulation
    {
        /// <summary>
        /// AWS::SimSpaceWeaver::Simulation resource creates an AWS Simulation.
        /// </summary>
        public static Task<GetSimulationResult> InvokeAsync(GetSimulationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSimulationResult>("aws-native:simspaceweaver:getSimulation", args ?? new GetSimulationArgs(), options.WithDefaults());

        /// <summary>
        /// AWS::SimSpaceWeaver::Simulation resource creates an AWS Simulation.
        /// </summary>
        public static Output<GetSimulationResult> Invoke(GetSimulationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSimulationResult>("aws-native:simspaceweaver:getSimulation", args ?? new GetSimulationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSimulationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the simulation.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetSimulationArgs()
        {
        }
        public static new GetSimulationArgs Empty => new GetSimulationArgs();
    }

    public sealed class GetSimulationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the simulation.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetSimulationInvokeArgs()
        {
        }
        public static new GetSimulationInvokeArgs Empty => new GetSimulationInvokeArgs();
    }


    [OutputType]
    public sealed class GetSimulationResult
    {
        /// <summary>
        /// Json object with all simulation details
        /// </summary>
        public readonly string? DescribePayload;
        /// <summary>
        /// Role ARN.
        /// </summary>
        public readonly string? RoleArn;
        public readonly Outputs.SimulationS3Location? SchemaS3Location;

        [OutputConstructor]
        private GetSimulationResult(
            string? describePayload,

            string? roleArn,

            Outputs.SimulationS3Location? schemaS3Location)
        {
            DescribePayload = describePayload;
            RoleArn = roleArn;
            SchemaS3Location = schemaS3Location;
        }
    }
}
