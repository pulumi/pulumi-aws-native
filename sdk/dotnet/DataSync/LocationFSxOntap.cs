// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataSync
{
    /// <summary>
    /// Resource schema for AWS::DataSync::LocationFSxONTAP.
    /// </summary>
    [AwsNativeResourceType("aws-native:datasync:LocationFSxOntap")]
    public partial class LocationFSxOntap : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the FSx ONAP file system.
        /// </summary>
        [Output("fsxFilesystemArn")]
        public Output<string> FsxFilesystemArn { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon FSx ONTAP file system location that is created.
        /// </summary>
        [Output("locationArn")]
        public Output<string> LocationArn { get; private set; } = null!;

        /// <summary>
        /// The URL of the FSx ONTAP file system that was described.
        /// </summary>
        [Output("locationUri")]
        public Output<string> LocationUri { get; private set; } = null!;

        [Output("protocol")]
        public Output<Outputs.LocationFSxOntapProtocol?> Protocol { get; private set; } = null!;

        /// <summary>
        /// The ARNs of the security groups that are to use to configure the FSx ONTAP file system.
        /// </summary>
        [Output("securityGroupArns")]
        public Output<ImmutableArray<string>> SecurityGroupArns { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) for the FSx ONTAP SVM.
        /// </summary>
        [Output("storageVirtualMachineArn")]
        public Output<string> StorageVirtualMachineArn { get; private set; } = null!;

        /// <summary>
        /// A subdirectory in the location's path.
        /// </summary>
        [Output("subdirectory")]
        public Output<string?> Subdirectory { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.LocationFSxOntapTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a LocationFSxOntap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LocationFSxOntap(string name, LocationFSxOntapArgs args, CustomResourceOptions? options = null)
            : base("aws-native:datasync:LocationFSxOntap", name, args ?? new LocationFSxOntapArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LocationFSxOntap(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:datasync:LocationFSxOntap", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LocationFSxOntap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LocationFSxOntap Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LocationFSxOntap(name, id, options);
        }
    }

    public sealed class LocationFSxOntapArgs : global::Pulumi.ResourceArgs
    {
        [Input("protocol")]
        public Input<Inputs.LocationFSxOntapProtocolArgs>? Protocol { get; set; }

        [Input("securityGroupArns", required: true)]
        private InputList<string>? _securityGroupArns;

        /// <summary>
        /// The ARNs of the security groups that are to use to configure the FSx ONTAP file system.
        /// </summary>
        public InputList<string> SecurityGroupArns
        {
            get => _securityGroupArns ?? (_securityGroupArns = new InputList<string>());
            set => _securityGroupArns = value;
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) for the FSx ONTAP SVM.
        /// </summary>
        [Input("storageVirtualMachineArn", required: true)]
        public Input<string> StorageVirtualMachineArn { get; set; } = null!;

        /// <summary>
        /// A subdirectory in the location's path.
        /// </summary>
        [Input("subdirectory")]
        public Input<string>? Subdirectory { get; set; }

        [Input("tags")]
        private InputList<Inputs.LocationFSxOntapTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.LocationFSxOntapTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.LocationFSxOntapTagArgs>());
            set => _tags = value;
        }

        public LocationFSxOntapArgs()
        {
        }
        public static new LocationFSxOntapArgs Empty => new LocationFSxOntapArgs();
    }
}
