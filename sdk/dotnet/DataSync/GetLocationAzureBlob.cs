// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataSync
{
    public static class GetLocationAzureBlob
    {
        /// <summary>
        /// Resource Type definition for AWS::DataSync::LocationAzureBlob.
        /// </summary>
        public static Task<GetLocationAzureBlobResult> InvokeAsync(GetLocationAzureBlobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocationAzureBlobResult>("aws-native:datasync:getLocationAzureBlob", args ?? new GetLocationAzureBlobArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::DataSync::LocationAzureBlob.
        /// </summary>
        public static Output<GetLocationAzureBlobResult> Invoke(GetLocationAzureBlobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationAzureBlobResult>("aws-native:datasync:getLocationAzureBlob", args ?? new GetLocationAzureBlobInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::DataSync::LocationAzureBlob.
        /// </summary>
        public static Output<GetLocationAzureBlobResult> Invoke(GetLocationAzureBlobInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationAzureBlobResult>("aws-native:datasync:getLocationAzureBlob", args ?? new GetLocationAzureBlobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocationAzureBlobArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
        /// </summary>
        [Input("locationArn", required: true)]
        public string LocationArn { get; set; } = null!;

        public GetLocationAzureBlobArgs()
        {
        }
        public static new GetLocationAzureBlobArgs Empty => new GetLocationAzureBlobArgs();
    }

    public sealed class GetLocationAzureBlobInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
        /// </summary>
        [Input("locationArn", required: true)]
        public Input<string> LocationArn { get; set; } = null!;

        public GetLocationAzureBlobInvokeArgs()
        {
        }
        public static new GetLocationAzureBlobInvokeArgs Empty => new GetLocationAzureBlobInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocationAzureBlobResult
    {
        /// <summary>
        /// Specifies the Amazon Resource Name (ARN) of the DataSync agent that can connect with your Azure Blob Storage container. If you are setting up an agentless cross-cloud transfer, you do not need to specify a value for this parameter.
        /// </summary>
        public readonly ImmutableArray<string> AgentArns;
        /// <summary>
        /// Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
        /// </summary>
        public readonly Pulumi.AwsNative.DataSync.LocationAzureBlobAzureAccessTier? AzureAccessTier;
        /// <summary>
        /// The specific authentication type that you want DataSync to use to access your Azure Blob Container.
        /// </summary>
        public readonly Pulumi.AwsNative.DataSync.LocationAzureBlobAzureBlobAuthenticationType? AzureBlobAuthenticationType;
        /// <summary>
        /// Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
        /// </summary>
        public readonly Pulumi.AwsNative.DataSync.LocationAzureBlobAzureBlobType? AzureBlobType;
        /// <summary>
        /// Specifies configuration information for a DataSync-managed secret, such as an authentication token or secret key that DataSync uses to access a specific storage location, with a customer-managed AWS KMS key .
        /// 
        /// &gt; You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
        /// </summary>
        public readonly Outputs.LocationAzureBlobCmkSecretConfig? CmkSecretConfig;
        /// <summary>
        /// Specifies configuration information for a customer-managed Secrets Manager secret where a storage location authentication token or secret key is stored in plain text. This configuration includes the secret ARN, and the ARN for an IAM role that provides access to the secret.
        /// 
        /// &gt; You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
        /// </summary>
        public readonly Outputs.LocationAzureBlobCustomSecretConfig? CustomSecretConfig;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
        /// </summary>
        public readonly string? LocationArn;
        /// <summary>
        /// The URL of the Azure Blob Location that was described.
        /// </summary>
        public readonly string? LocationUri;
        public readonly Outputs.LocationAzureBlobManagedSecretConfig? ManagedSecretConfig;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetLocationAzureBlobResult(
            ImmutableArray<string> agentArns,

            Pulumi.AwsNative.DataSync.LocationAzureBlobAzureAccessTier? azureAccessTier,

            Pulumi.AwsNative.DataSync.LocationAzureBlobAzureBlobAuthenticationType? azureBlobAuthenticationType,

            Pulumi.AwsNative.DataSync.LocationAzureBlobAzureBlobType? azureBlobType,

            Outputs.LocationAzureBlobCmkSecretConfig? cmkSecretConfig,

            Outputs.LocationAzureBlobCustomSecretConfig? customSecretConfig,

            string? locationArn,

            string? locationUri,

            Outputs.LocationAzureBlobManagedSecretConfig? managedSecretConfig,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            AgentArns = agentArns;
            AzureAccessTier = azureAccessTier;
            AzureBlobAuthenticationType = azureBlobAuthenticationType;
            AzureBlobType = azureBlobType;
            CmkSecretConfig = cmkSecretConfig;
            CustomSecretConfig = customSecretConfig;
            LocationArn = locationArn;
            LocationUri = locationUri;
            ManagedSecretConfig = managedSecretConfig;
            Tags = tags;
        }
    }
}
