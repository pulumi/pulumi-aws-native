// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataSync
{
    public static class GetLocationSmb
    {
        /// <summary>
        /// Resource Type definition for AWS::DataSync::LocationSMB.
        /// </summary>
        public static Task<GetLocationSmbResult> InvokeAsync(GetLocationSmbArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocationSmbResult>("aws-native:datasync:getLocationSmb", args ?? new GetLocationSmbArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::DataSync::LocationSMB.
        /// </summary>
        public static Output<GetLocationSmbResult> Invoke(GetLocationSmbInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationSmbResult>("aws-native:datasync:getLocationSmb", args ?? new GetLocationSmbInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::DataSync::LocationSMB.
        /// </summary>
        public static Output<GetLocationSmbResult> Invoke(GetLocationSmbInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationSmbResult>("aws-native:datasync:getLocationSmb", args ?? new GetLocationSmbInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocationSmbArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the SMB location that is created.
        /// </summary>
        [Input("locationArn", required: true)]
        public string LocationArn { get; set; } = null!;

        public GetLocationSmbArgs()
        {
        }
        public static new GetLocationSmbArgs Empty => new GetLocationSmbArgs();
    }

    public sealed class GetLocationSmbInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the SMB location that is created.
        /// </summary>
        [Input("locationArn", required: true)]
        public Input<string> LocationArn { get; set; } = null!;

        public GetLocationSmbInvokeArgs()
        {
        }
        public static new GetLocationSmbInvokeArgs Empty => new GetLocationSmbInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocationSmbResult
    {
        /// <summary>
        /// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
        /// </summary>
        public readonly ImmutableArray<string> AgentArns;
        /// <summary>
        /// The authentication mode used to determine identity of user.
        /// </summary>
        public readonly Pulumi.AwsNative.DataSync.LocationSmbAuthenticationType? AuthenticationType;
        /// <summary>
        /// Specifies configuration information for a DataSync-managed secret, such as an authentication token or secret key that DataSync uses to access a specific storage location, with a customer-managed AWS KMS key .
        /// 
        /// &gt; You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
        /// </summary>
        public readonly Outputs.LocationSmbCmkSecretConfig? CmkSecretConfig;
        /// <summary>
        /// Specifies configuration information for a customer-managed Secrets Manager secret where a storage location authentication token or secret key is stored in plain text. This configuration includes the secret ARN, and the ARN for an IAM role that provides access to the secret.
        /// 
        /// &gt; You can use either `CmkSecretConfig` or `CustomSecretConfig` to provide credentials for a `CreateLocation` request. Do not provide both parameters for the same request.
        /// </summary>
        public readonly Outputs.LocationSmbCustomSecretConfig? CustomSecretConfig;
        /// <summary>
        /// Specifies the IPv4 addresses for the DNS servers that your SMB file server belongs to. This parameter applies only if AuthenticationType is set to KERBEROS. If you have multiple domains in your environment, configuring this parameter makes sure that DataSync connects to the right SMB file server.
        /// </summary>
        public readonly ImmutableArray<string> DnsIpAddresses;
        /// <summary>
        /// The name of the Windows domain that the SMB server belongs to.
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// Specifies a service principal name (SPN), which is an identity in your Kerberos realm that has permission to access the files, folders, and file metadata in your SMB file server. SPNs are case sensitive and must include a prepended cifs/. For example, an SPN might look like cifs/kerberosuser@EXAMPLE.COM. Your task execution will fail if the SPN that you provide for this parameter doesn't match exactly what's in your keytab or krb5.conf files.
        /// </summary>
        public readonly string? KerberosPrincipal;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the SMB location that is created.
        /// </summary>
        public readonly string? LocationArn;
        /// <summary>
        /// The URL of the SMB location that was described.
        /// </summary>
        public readonly string? LocationUri;
        public readonly Outputs.LocationSmbManagedSecretConfig? ManagedSecretConfig;
        /// <summary>
        /// Specifies the version of the SMB protocol that DataSync uses to access your SMB file server.
        /// </summary>
        public readonly Outputs.LocationSmbMountOptions? MountOptions;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The user who can mount the share, has the permissions to access files and folders in the SMB share.
        /// </summary>
        public readonly string? User;

        [OutputConstructor]
        private GetLocationSmbResult(
            ImmutableArray<string> agentArns,

            Pulumi.AwsNative.DataSync.LocationSmbAuthenticationType? authenticationType,

            Outputs.LocationSmbCmkSecretConfig? cmkSecretConfig,

            Outputs.LocationSmbCustomSecretConfig? customSecretConfig,

            ImmutableArray<string> dnsIpAddresses,

            string? domain,

            string? kerberosPrincipal,

            string? locationArn,

            string? locationUri,

            Outputs.LocationSmbManagedSecretConfig? managedSecretConfig,

            Outputs.LocationSmbMountOptions? mountOptions,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            string? user)
        {
            AgentArns = agentArns;
            AuthenticationType = authenticationType;
            CmkSecretConfig = cmkSecretConfig;
            CustomSecretConfig = customSecretConfig;
            DnsIpAddresses = dnsIpAddresses;
            Domain = domain;
            KerberosPrincipal = kerberosPrincipal;
            LocationArn = locationArn;
            LocationUri = locationUri;
            ManagedSecretConfig = managedSecretConfig;
            MountOptions = mountOptions;
            Tags = tags;
            User = user;
        }
    }
}
