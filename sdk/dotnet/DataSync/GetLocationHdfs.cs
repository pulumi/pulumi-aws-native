// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataSync
{
    public static class GetLocationHdfs
    {
        /// <summary>
        /// Resource schema for AWS::DataSync::LocationHDFS.
        /// </summary>
        public static Task<GetLocationHdfsResult> InvokeAsync(GetLocationHdfsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocationHdfsResult>("aws-native:datasync:getLocationHdfs", args ?? new GetLocationHdfsArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::DataSync::LocationHDFS.
        /// </summary>
        public static Output<GetLocationHdfsResult> Invoke(GetLocationHdfsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationHdfsResult>("aws-native:datasync:getLocationHdfs", args ?? new GetLocationHdfsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocationHdfsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the HDFS location.
        /// </summary>
        [Input("locationArn", required: true)]
        public string LocationArn { get; set; } = null!;

        public GetLocationHdfsArgs()
        {
        }
        public static new GetLocationHdfsArgs Empty => new GetLocationHdfsArgs();
    }

    public sealed class GetLocationHdfsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the HDFS location.
        /// </summary>
        [Input("locationArn", required: true)]
        public Input<string> LocationArn { get; set; } = null!;

        public GetLocationHdfsInvokeArgs()
        {
        }
        public static new GetLocationHdfsInvokeArgs Empty => new GetLocationHdfsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocationHdfsResult
    {
        /// <summary>
        /// ARN(s) of the agent(s) to use for an HDFS location.
        /// </summary>
        public readonly ImmutableArray<string> AgentArns;
        /// <summary>
        /// The authentication mode used to determine identity of user.
        /// </summary>
        public readonly Pulumi.AwsNative.DataSync.LocationHdfsAuthenticationType? AuthenticationType;
        /// <summary>
        /// Size of chunks (blocks) in bytes that the data is divided into when stored in the HDFS cluster.
        /// </summary>
        public readonly int? BlockSize;
        /// <summary>
        /// The unique identity, or principal, to which Kerberos can assign tickets.
        /// </summary>
        public readonly string? KerberosPrincipal;
        /// <summary>
        /// The identifier for the Key Management Server where the encryption keys that encrypt data inside HDFS clusters are stored.
        /// </summary>
        public readonly string? KmsKeyProviderUri;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the HDFS location.
        /// </summary>
        public readonly string? LocationArn;
        /// <summary>
        /// The URL of the HDFS location that was described.
        /// </summary>
        public readonly string? LocationUri;
        /// <summary>
        /// An array of Name Node(s) of the HDFS location.
        /// </summary>
        public readonly ImmutableArray<Outputs.LocationHdfsNameNode> NameNodes;
        public readonly Outputs.LocationHdfsQopConfiguration? QopConfiguration;
        /// <summary>
        /// Number of copies of each block that exists inside the HDFS cluster.
        /// </summary>
        public readonly int? ReplicationFactor;
        /// <summary>
        /// The user name that has read and write permissions on the specified HDFS cluster.
        /// </summary>
        public readonly string? SimpleUser;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetLocationHdfsResult(
            ImmutableArray<string> agentArns,

            Pulumi.AwsNative.DataSync.LocationHdfsAuthenticationType? authenticationType,

            int? blockSize,

            string? kerberosPrincipal,

            string? kmsKeyProviderUri,

            string? locationArn,

            string? locationUri,

            ImmutableArray<Outputs.LocationHdfsNameNode> nameNodes,

            Outputs.LocationHdfsQopConfiguration? qopConfiguration,

            int? replicationFactor,

            string? simpleUser,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            AgentArns = agentArns;
            AuthenticationType = authenticationType;
            BlockSize = blockSize;
            KerberosPrincipal = kerberosPrincipal;
            KmsKeyProviderUri = kmsKeyProviderUri;
            LocationArn = locationArn;
            LocationUri = locationUri;
            NameNodes = nameNodes;
            QopConfiguration = qopConfiguration;
            ReplicationFactor = replicationFactor;
            SimpleUser = simpleUser;
            Tags = tags;
        }
    }
}
