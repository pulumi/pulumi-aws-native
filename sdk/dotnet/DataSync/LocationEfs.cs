// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataSync
{
    /// <summary>
    /// Resource schema for AWS::DataSync::LocationEFS.
    /// </summary>
    [AwsNativeResourceType("aws-native:datasync:LocationEfs")]
    public partial class LocationEfs : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
        /// </summary>
        [Output("accessPointArn")]
        public Output<string?> AccessPointArn { get; private set; } = null!;

        [Output("ec2Config")]
        public Output<Outputs.LocationEfsEc2Config> Ec2Config { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) for the Amazon EFS file system.
        /// </summary>
        [Output("efsFilesystemArn")]
        public Output<string?> EfsFilesystemArn { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
        /// </summary>
        [Output("fileSystemAccessRoleArn")]
        public Output<string?> FileSystemAccessRoleArn { get; private set; } = null!;

        /// <summary>
        /// Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
        /// </summary>
        [Output("inTransitEncryption")]
        public Output<Pulumi.AwsNative.DataSync.LocationEfsInTransitEncryption?> InTransitEncryption { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon EFS file system location that is created.
        /// </summary>
        [Output("locationArn")]
        public Output<string> LocationArn { get; private set; } = null!;

        /// <summary>
        /// The URL of the EFS location that was described.
        /// </summary>
        [Output("locationUri")]
        public Output<string> LocationUri { get; private set; } = null!;

        /// <summary>
        /// A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
        /// </summary>
        [Output("subdirectory")]
        public Output<string?> Subdirectory { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.LocationEfsTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a LocationEfs resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LocationEfs(string name, LocationEfsArgs args, CustomResourceOptions? options = null)
            : base("aws-native:datasync:LocationEfs", name, args ?? new LocationEfsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LocationEfs(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:datasync:LocationEfs", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LocationEfs resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LocationEfs Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LocationEfs(name, id, options);
        }
    }

    public sealed class LocationEfsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
        /// </summary>
        [Input("accessPointArn")]
        public Input<string>? AccessPointArn { get; set; }

        [Input("ec2Config", required: true)]
        public Input<Inputs.LocationEfsEc2ConfigArgs> Ec2Config { get; set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) for the Amazon EFS file system.
        /// </summary>
        [Input("efsFilesystemArn")]
        public Input<string>? EfsFilesystemArn { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
        /// </summary>
        [Input("fileSystemAccessRoleArn")]
        public Input<string>? FileSystemAccessRoleArn { get; set; }

        /// <summary>
        /// Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
        /// </summary>
        [Input("inTransitEncryption")]
        public Input<Pulumi.AwsNative.DataSync.LocationEfsInTransitEncryption>? InTransitEncryption { get; set; }

        /// <summary>
        /// A subdirectory in the location's path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
        /// </summary>
        [Input("subdirectory")]
        public Input<string>? Subdirectory { get; set; }

        [Input("tags")]
        private InputList<Inputs.LocationEfsTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.LocationEfsTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.LocationEfsTagArgs>());
            set => _tags = value;
        }

        public LocationEfsArgs()
        {
        }
        public static new LocationEfsArgs Empty => new LocationEfsArgs();
    }
}
