// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataSync
{
    public static class GetLocationEFS
    {
        /// <summary>
        /// Resource schema for AWS::DataSync::LocationEFS.
        /// </summary>
        public static Task<GetLocationEFSResult> InvokeAsync(GetLocationEFSArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLocationEFSResult>("aws-native:datasync:getLocationEFS", args ?? new GetLocationEFSArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::DataSync::LocationEFS.
        /// </summary>
        public static Output<GetLocationEFSResult> Invoke(GetLocationEFSInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetLocationEFSResult>("aws-native:datasync:getLocationEFS", args ?? new GetLocationEFSInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocationEFSArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon EFS file system location that is created.
        /// </summary>
        [Input("locationArn", required: true)]
        public string LocationArn { get; set; } = null!;

        public GetLocationEFSArgs()
        {
        }
        public static new GetLocationEFSArgs Empty => new GetLocationEFSArgs();
    }

    public sealed class GetLocationEFSInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon EFS file system location that is created.
        /// </summary>
        [Input("locationArn", required: true)]
        public Input<string> LocationArn { get; set; } = null!;

        public GetLocationEFSInvokeArgs()
        {
        }
        public static new GetLocationEFSInvokeArgs Empty => new GetLocationEFSInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocationEFSResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
        /// </summary>
        public readonly string? AccessPointArn;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
        /// </summary>
        public readonly string? FileSystemAccessRoleArn;
        /// <summary>
        /// Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
        /// </summary>
        public readonly Pulumi.AwsNative.DataSync.LocationEFSInTransitEncryption? InTransitEncryption;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon EFS file system location that is created.
        /// </summary>
        public readonly string? LocationArn;
        /// <summary>
        /// The URL of the EFS location that was described.
        /// </summary>
        public readonly string? LocationUri;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.LocationEFSTag> Tags;

        [OutputConstructor]
        private GetLocationEFSResult(
            string? accessPointArn,

            string? fileSystemAccessRoleArn,

            Pulumi.AwsNative.DataSync.LocationEFSInTransitEncryption? inTransitEncryption,

            string? locationArn,

            string? locationUri,

            ImmutableArray<Outputs.LocationEFSTag> tags)
        {
            AccessPointArn = accessPointArn;
            FileSystemAccessRoleArn = fileSystemAccessRoleArn;
            InTransitEncryption = inTransitEncryption;
            LocationArn = locationArn;
            LocationUri = locationUri;
            Tags = tags;
        }
    }
}
