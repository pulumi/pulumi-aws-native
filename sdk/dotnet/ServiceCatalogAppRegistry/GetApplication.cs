// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ServiceCatalogAppRegistry
{
    public static class GetApplication
    {
        /// <summary>
        /// Resource Schema for AWS::ServiceCatalogAppRegistry::Application
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("aws-native:servicecatalogappregistry:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Schema for AWS::ServiceCatalogAppRegistry::Application
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("aws-native:servicecatalogappregistry:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
    }

    public sealed class GetApplicationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        public readonly string? Arn;
        /// <summary>
        /// The description of the application. 
        /// </summary>
        public readonly string? Description;
        public readonly string? Id;
        /// <summary>
        /// The name of the application. 
        /// </summary>
        public readonly string? Name;
        public readonly Outputs.ApplicationTags? Tags;

        [OutputConstructor]
        private GetApplicationResult(
            string? arn,

            string? description,

            string? id,

            string? name,

            Outputs.ApplicationTags? tags)
        {
            Arn = arn;
            Description = description;
            Id = id;
            Name = name;
            Tags = tags;
        }
    }
}
