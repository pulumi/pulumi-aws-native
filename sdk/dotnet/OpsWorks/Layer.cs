// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.OpsWorks
{
    /// <summary>
    /// Resource Type definition for AWS::OpsWorks::Layer
    /// </summary>
    [Obsolete(@"Layer is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:opsworks:Layer")]
    public partial class Layer : Pulumi.CustomResource
    {
        [Output("attributes")]
        public Output<object?> Attributes { get; private set; } = null!;

        [Output("autoAssignElasticIps")]
        public Output<bool> AutoAssignElasticIps { get; private set; } = null!;

        [Output("autoAssignPublicIps")]
        public Output<bool> AutoAssignPublicIps { get; private set; } = null!;

        [Output("customInstanceProfileArn")]
        public Output<string?> CustomInstanceProfileArn { get; private set; } = null!;

        [Output("customJson")]
        public Output<object?> CustomJson { get; private set; } = null!;

        [Output("customRecipes")]
        public Output<Outputs.LayerRecipes?> CustomRecipes { get; private set; } = null!;

        [Output("customSecurityGroupIds")]
        public Output<ImmutableArray<string>> CustomSecurityGroupIds { get; private set; } = null!;

        [Output("enableAutoHealing")]
        public Output<bool> EnableAutoHealing { get; private set; } = null!;

        [Output("installUpdatesOnBoot")]
        public Output<bool?> InstallUpdatesOnBoot { get; private set; } = null!;

        [Output("lifecycleEventConfiguration")]
        public Output<Outputs.LayerLifecycleEventConfiguration?> LifecycleEventConfiguration { get; private set; } = null!;

        [Output("loadBasedAutoScaling")]
        public Output<Outputs.LayerLoadBasedAutoScaling?> LoadBasedAutoScaling { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("packages")]
        public Output<ImmutableArray<string>> Packages { get; private set; } = null!;

        [Output("shortname")]
        public Output<string> Shortname { get; private set; } = null!;

        [Output("stackId")]
        public Output<string> StackId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.LayerTag>> Tags { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("useEbsOptimizedInstances")]
        public Output<bool?> UseEbsOptimizedInstances { get; private set; } = null!;

        [Output("volumeConfigurations")]
        public Output<ImmutableArray<Outputs.LayerVolumeConfiguration>> VolumeConfigurations { get; private set; } = null!;


        /// <summary>
        /// Create a Layer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Layer(string name, LayerArgs args, CustomResourceOptions? options = null)
            : base("aws-native:opsworks:Layer", name, args ?? new LayerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Layer(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:opsworks:Layer", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Layer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Layer Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Layer(name, id, options);
        }
    }

    public sealed class LayerArgs : Pulumi.ResourceArgs
    {
        [Input("attributes")]
        public Input<object>? Attributes { get; set; }

        [Input("autoAssignElasticIps", required: true)]
        public Input<bool> AutoAssignElasticIps { get; set; } = null!;

        [Input("autoAssignPublicIps", required: true)]
        public Input<bool> AutoAssignPublicIps { get; set; } = null!;

        [Input("customInstanceProfileArn")]
        public Input<string>? CustomInstanceProfileArn { get; set; }

        [Input("customJson")]
        public Input<object>? CustomJson { get; set; }

        [Input("customRecipes")]
        public Input<Inputs.LayerRecipesArgs>? CustomRecipes { get; set; }

        [Input("customSecurityGroupIds")]
        private InputList<string>? _customSecurityGroupIds;
        public InputList<string> CustomSecurityGroupIds
        {
            get => _customSecurityGroupIds ?? (_customSecurityGroupIds = new InputList<string>());
            set => _customSecurityGroupIds = value;
        }

        [Input("enableAutoHealing", required: true)]
        public Input<bool> EnableAutoHealing { get; set; } = null!;

        [Input("installUpdatesOnBoot")]
        public Input<bool>? InstallUpdatesOnBoot { get; set; }

        [Input("lifecycleEventConfiguration")]
        public Input<Inputs.LayerLifecycleEventConfigurationArgs>? LifecycleEventConfiguration { get; set; }

        [Input("loadBasedAutoScaling")]
        public Input<Inputs.LayerLoadBasedAutoScalingArgs>? LoadBasedAutoScaling { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("packages")]
        private InputList<string>? _packages;
        public InputList<string> Packages
        {
            get => _packages ?? (_packages = new InputList<string>());
            set => _packages = value;
        }

        [Input("shortname", required: true)]
        public Input<string> Shortname { get; set; } = null!;

        [Input("stackId", required: true)]
        public Input<string> StackId { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.LayerTagArgs>? _tags;
        public InputList<Inputs.LayerTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.LayerTagArgs>());
            set => _tags = value;
        }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("useEbsOptimizedInstances")]
        public Input<bool>? UseEbsOptimizedInstances { get; set; }

        [Input("volumeConfigurations")]
        private InputList<Inputs.LayerVolumeConfigurationArgs>? _volumeConfigurations;
        public InputList<Inputs.LayerVolumeConfigurationArgs> VolumeConfigurations
        {
            get => _volumeConfigurations ?? (_volumeConfigurations = new InputList<Inputs.LayerVolumeConfigurationArgs>());
            set => _volumeConfigurations = value;
        }

        public LayerArgs()
        {
        }
    }
}
