// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoTWireless
{
    /// <summary>
    /// Wireless Device Import Tasks
    /// </summary>
    [Obsolete(@"WirelessDeviceImportTask is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:iotwireless:WirelessDeviceImportTask")]
    public partial class WirelessDeviceImportTask : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Arn for Wireless Device Import Task, Returned upon successful start.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// CreationDate for import task
        /// </summary>
        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        /// <summary>
        /// Destination Name for import task
        /// </summary>
        [Output("destinationName")]
        public Output<string> DestinationName { get; private set; } = null!;

        /// <summary>
        /// Failed Imported Devices Count
        /// </summary>
        [Output("failedImportedDevicesCount")]
        public Output<int> FailedImportedDevicesCount { get; private set; } = null!;

        /// <summary>
        /// Initialized Imported Devices Count
        /// </summary>
        [Output("initializedImportedDevicesCount")]
        public Output<int> InitializedImportedDevicesCount { get; private set; } = null!;

        /// <summary>
        /// Onboarded Imported Devices Count
        /// </summary>
        [Output("onboardedImportedDevicesCount")]
        public Output<int> OnboardedImportedDevicesCount { get; private set; } = null!;

        /// <summary>
        /// Pending Imported Devices Count
        /// </summary>
        [Output("pendingImportedDevicesCount")]
        public Output<int> PendingImportedDevicesCount { get; private set; } = null!;

        /// <summary>
        /// sidewalk contain file for created device and role
        /// </summary>
        [Output("sidewalk")]
        public Output<Outputs.SidewalkProperties> Sidewalk { get; private set; } = null!;

        /// <summary>
        /// Status for import task
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.IoTWireless.WirelessDeviceImportTaskStatus> Status { get; private set; } = null!;

        /// <summary>
        /// StatusReason for import task
        /// </summary>
        [Output("statusReason")]
        public Output<string> StatusReason { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.WirelessDeviceImportTaskTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a WirelessDeviceImportTask resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WirelessDeviceImportTask(string name, WirelessDeviceImportTaskArgs args, CustomResourceOptions? options = null)
            : base("aws-native:iotwireless:WirelessDeviceImportTask", name, args ?? new WirelessDeviceImportTaskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WirelessDeviceImportTask(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:iotwireless:WirelessDeviceImportTask", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WirelessDeviceImportTask resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WirelessDeviceImportTask Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WirelessDeviceImportTask(name, id, options);
        }
    }

    public sealed class WirelessDeviceImportTaskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Destination Name for import task
        /// </summary>
        [Input("destinationName", required: true)]
        public Input<string> DestinationName { get; set; } = null!;

        /// <summary>
        /// sidewalk contain file for created device and role
        /// </summary>
        [Input("sidewalk", required: true)]
        public Input<Inputs.SidewalkPropertiesArgs> Sidewalk { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.WirelessDeviceImportTaskTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.WirelessDeviceImportTaskTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.WirelessDeviceImportTaskTagArgs>());
            set => _tags = value;
        }

        public WirelessDeviceImportTaskArgs()
        {
        }
        public static new WirelessDeviceImportTaskArgs Empty => new WirelessDeviceImportTaskArgs();
    }
}
