// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecretsManager
{
    /// <summary>
    /// Resource Type definition for AWS::SecretsManager::SecretTargetAttachment
    /// </summary>
    [AwsNativeResourceType("aws-native:secretsmanager:SecretTargetAttachment")]
    public partial class SecretTargetAttachment : global::Pulumi.CustomResource
    {
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// The ARN or name of the secret. To reference a secret also created in this template, use the see [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function with the secret's logical ID. This field is unique for each target attachment definition.
        /// </summary>
        [Output("secretId")]
        public Output<string> SecretId { get; private set; } = null!;

        /// <summary>
        /// The ID of the database or cluster.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        /// <summary>
        /// A string that defines the type of service or database associated with the secret. This value instructs Secrets Manager how to update the secret with the details of the service or database. This value must be one of the following:
        /// 
        /// - AWS::RDS::DBInstance
        /// - AWS::RDS::DBCluster
        /// - AWS::Redshift::Cluster
        /// - AWS::RedshiftServerless::Namespace
        /// - AWS::DocDB::DBInstance
        /// - AWS::DocDB::DBCluster
        /// - AWS::DocDBElastic::Cluster
        /// </summary>
        [Output("targetType")]
        public Output<string> TargetType { get; private set; } = null!;


        /// <summary>
        /// Create a SecretTargetAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecretTargetAttachment(string name, SecretTargetAttachmentArgs args, CustomResourceOptions? options = null)
            : base("aws-native:secretsmanager:SecretTargetAttachment", name, args ?? new SecretTargetAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecretTargetAttachment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:secretsmanager:SecretTargetAttachment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "secretId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecretTargetAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecretTargetAttachment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SecretTargetAttachment(name, id, options);
        }
    }

    public sealed class SecretTargetAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN or name of the secret. To reference a secret also created in this template, use the see [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) function with the secret's logical ID. This field is unique for each target attachment definition.
        /// </summary>
        [Input("secretId", required: true)]
        public Input<string> SecretId { get; set; } = null!;

        /// <summary>
        /// The ID of the database or cluster.
        /// </summary>
        [Input("targetId", required: true)]
        public Input<string> TargetId { get; set; } = null!;

        /// <summary>
        /// A string that defines the type of service or database associated with the secret. This value instructs Secrets Manager how to update the secret with the details of the service or database. This value must be one of the following:
        /// 
        /// - AWS::RDS::DBInstance
        /// - AWS::RDS::DBCluster
        /// - AWS::Redshift::Cluster
        /// - AWS::RedshiftServerless::Namespace
        /// - AWS::DocDB::DBInstance
        /// - AWS::DocDB::DBCluster
        /// - AWS::DocDBElastic::Cluster
        /// </summary>
        [Input("targetType", required: true)]
        public Input<string> TargetType { get; set; } = null!;

        public SecretTargetAttachmentArgs()
        {
        }
        public static new SecretTargetAttachmentArgs Empty => new SecretTargetAttachmentArgs();
    }
}
