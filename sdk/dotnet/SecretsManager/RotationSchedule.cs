// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecretsManager
{
    /// <summary>
    /// Resource Type definition for AWS::SecretsManager::RotationSchedule
    /// </summary>
    [Obsolete(@"RotationSchedule is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:secretsmanager:RotationSchedule")]
    public partial class RotationSchedule : global::Pulumi.CustomResource
    {
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        [Output("hostedRotationLambda")]
        public Output<Outputs.RotationScheduleHostedRotationLambda?> HostedRotationLambda { get; private set; } = null!;

        [Output("rotateImmediatelyOnUpdate")]
        public Output<bool?> RotateImmediatelyOnUpdate { get; private set; } = null!;

        [Output("rotationLambdaArn")]
        public Output<string?> RotationLambdaArn { get; private set; } = null!;

        [Output("rotationRules")]
        public Output<Outputs.RotationScheduleRotationRules?> RotationRules { get; private set; } = null!;

        [Output("secretId")]
        public Output<string> SecretId { get; private set; } = null!;


        /// <summary>
        /// Create a RotationSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RotationSchedule(string name, RotationScheduleArgs args, CustomResourceOptions? options = null)
            : base("aws-native:secretsmanager:RotationSchedule", name, args ?? new RotationScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RotationSchedule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:secretsmanager:RotationSchedule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "secretId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RotationSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RotationSchedule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RotationSchedule(name, id, options);
        }
    }

    public sealed class RotationScheduleArgs : global::Pulumi.ResourceArgs
    {
        [Input("hostedRotationLambda")]
        public Input<Inputs.RotationScheduleHostedRotationLambdaArgs>? HostedRotationLambda { get; set; }

        [Input("rotateImmediatelyOnUpdate")]
        public Input<bool>? RotateImmediatelyOnUpdate { get; set; }

        [Input("rotationLambdaArn")]
        public Input<string>? RotationLambdaArn { get; set; }

        [Input("rotationRules")]
        public Input<Inputs.RotationScheduleRotationRulesArgs>? RotationRules { get; set; }

        [Input("secretId", required: true)]
        public Input<string> SecretId { get; set; } = null!;

        public RotationScheduleArgs()
        {
        }
        public static new RotationScheduleArgs Empty => new RotationScheduleArgs();
    }
}
