// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecretsManager
{
    public static class GetSecret
    {
        /// <summary>
        /// Resource Type definition for AWS::SecretsManager::Secret
        /// </summary>
        public static Task<GetSecretResult> InvokeAsync(GetSecretArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecretResult>("aws-native:secretsmanager:getSecret", args ?? new GetSecretArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SecretsManager::Secret
        /// </summary>
        public static Output<GetSecretResult> Invoke(GetSecretInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSecretResult>("aws-native:secretsmanager:getSecret", args ?? new GetSecretInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSecretArgs()
        {
        }
    }

    public sealed class GetSecretInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSecretInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecretResult
    {
        public readonly string? Description;
        public readonly Outputs.SecretGenerateSecretString? GenerateSecretString;
        public readonly string? Id;
        public readonly string? KmsKeyId;
        public readonly ImmutableArray<Outputs.SecretReplicaRegion> ReplicaRegions;
        public readonly string? SecretString;
        public readonly ImmutableArray<Outputs.SecretTag> Tags;

        [OutputConstructor]
        private GetSecretResult(
            string? description,

            Outputs.SecretGenerateSecretString? generateSecretString,

            string? id,

            string? kmsKeyId,

            ImmutableArray<Outputs.SecretReplicaRegion> replicaRegions,

            string? secretString,

            ImmutableArray<Outputs.SecretTag> tags)
        {
            Description = description;
            GenerateSecretString = generateSecretString;
            Id = id;
            KmsKeyId = kmsKeyId;
            ReplicaRegions = replicaRegions;
            SecretString = secretString;
            Tags = tags;
        }
    }
}
