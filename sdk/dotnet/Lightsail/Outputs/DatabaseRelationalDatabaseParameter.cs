// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lightsail.Outputs
{

    /// <summary>
    /// Describes the parameters of the database.
    /// </summary>
    [OutputType]
    public sealed class DatabaseRelationalDatabaseParameter
    {
        /// <summary>
        /// Specifies the valid range of values for the parameter.
        /// </summary>
        public readonly string? AllowedValues;
        /// <summary>
        /// Indicates when parameter updates are applied. Can be immediate or pending-reboot.
        /// </summary>
        public readonly string? ApplyMethod;
        /// <summary>
        /// Specifies the engine-specific parameter type.
        /// </summary>
        public readonly string? ApplyType;
        /// <summary>
        /// Specifies the valid data type for the parameter.
        /// </summary>
        public readonly string? DataType;
        /// <summary>
        /// Provides a description of the parameter.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A Boolean value indicating whether the parameter can be modified.
        /// </summary>
        public readonly bool? IsModifiable;
        /// <summary>
        /// Specifies the name of the parameter.
        /// </summary>
        public readonly string? ParameterName;
        /// <summary>
        /// Specifies the value of the parameter.
        /// </summary>
        public readonly string? ParameterValue;

        [OutputConstructor]
        private DatabaseRelationalDatabaseParameter(
            string? allowedValues,

            string? applyMethod,

            string? applyType,

            string? dataType,

            string? description,

            bool? isModifiable,

            string? parameterName,

            string? parameterValue)
        {
            AllowedValues = allowedValues;
            ApplyMethod = applyMethod;
            ApplyType = applyType;
            DataType = dataType;
            Description = description;
            IsModifiable = isModifiable;
            ParameterName = parameterName;
            ParameterValue = parameterValue;
        }
    }
}
