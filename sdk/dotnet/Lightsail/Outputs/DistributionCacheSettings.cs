// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lightsail.Outputs
{

    /// <summary>
    /// Describes the cache settings of an Amazon Lightsail content delivery network (CDN) distribution.
    /// </summary>
    [OutputType]
    public sealed class DistributionCacheSettings
    {
        /// <summary>
        /// The HTTP methods that are processed and forwarded to the distribution's origin.
        /// </summary>
        public readonly string? AllowedHTTPMethods;
        /// <summary>
        /// The HTTP method responses that are cached by your distribution.
        /// </summary>
        public readonly string? CachedHTTPMethods;
        /// <summary>
        /// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
        /// </summary>
        public readonly int? DefaultTTL;
        /// <summary>
        /// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded.
        /// </summary>
        public readonly Outputs.DistributionCookieObject? ForwardedCookies;
        /// <summary>
        /// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded.
        /// </summary>
        public readonly Outputs.DistributionHeaderObject? ForwardedHeaders;
        /// <summary>
        /// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded.
        /// </summary>
        public readonly Outputs.DistributionQueryStringObject? ForwardedQueryStrings;
        /// <summary>
        /// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
        /// </summary>
        public readonly int? MaximumTTL;
        /// <summary>
        /// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
        /// </summary>
        public readonly int? MinimumTTL;

        [OutputConstructor]
        private DistributionCacheSettings(
            string? allowedHTTPMethods,

            string? cachedHTTPMethods,

            int? defaultTTL,

            Outputs.DistributionCookieObject? forwardedCookies,

            Outputs.DistributionHeaderObject? forwardedHeaders,

            Outputs.DistributionQueryStringObject? forwardedQueryStrings,

            int? maximumTTL,

            int? minimumTTL)
        {
            AllowedHTTPMethods = allowedHTTPMethods;
            CachedHTTPMethods = cachedHTTPMethods;
            DefaultTTL = defaultTTL;
            ForwardedCookies = forwardedCookies;
            ForwardedHeaders = forwardedHeaders;
            ForwardedQueryStrings = forwardedQueryStrings;
            MaximumTTL = maximumTTL;
            MinimumTTL = minimumTTL;
        }
    }
}
