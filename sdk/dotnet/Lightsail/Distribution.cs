// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lightsail
{
    /// <summary>
    /// Resource Type definition for AWS::Lightsail::Distribution
    /// </summary>
    [Obsolete(@"Distribution is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:lightsail:Distribution")]
    public partial class Distribution : Pulumi.CustomResource
    {
        /// <summary>
        /// Indicates whether the bundle that is currently applied to your distribution, specified using the distributionName parameter, can be changed to another bundle.
        /// </summary>
        [Output("ableToUpdateBundle")]
        public Output<bool> AbleToUpdateBundle { get; private set; } = null!;

        /// <summary>
        /// The bundle ID to use for the distribution.
        /// </summary>
        [Output("bundleId")]
        public Output<string> BundleId { get; private set; } = null!;

        /// <summary>
        /// An object that describes the cache behavior settings for the distribution.
        /// </summary>
        [Output("cacheBehaviorSettings")]
        public Output<Outputs.DistributionCacheSettings?> CacheBehaviorSettings { get; private set; } = null!;

        /// <summary>
        /// An array of objects that describe the per-path cache behavior for the distribution.
        /// </summary>
        [Output("cacheBehaviors")]
        public Output<ImmutableArray<Outputs.DistributionCacheBehaviorPerPath>> CacheBehaviors { get; private set; } = null!;

        /// <summary>
        /// The certificate attached to the Distribution.
        /// </summary>
        [Output("certificateName")]
        public Output<string?> CertificateName { get; private set; } = null!;

        /// <summary>
        /// An object that describes the default cache behavior for the distribution.
        /// </summary>
        [Output("defaultCacheBehavior")]
        public Output<Outputs.DistributionCacheBehavior> DefaultCacheBehavior { get; private set; } = null!;

        [Output("distributionArn")]
        public Output<string> DistributionArn { get; private set; } = null!;

        /// <summary>
        /// The name for the distribution.
        /// </summary>
        [Output("distributionName")]
        public Output<string> DistributionName { get; private set; } = null!;

        /// <summary>
        /// The IP address type for the distribution.
        /// </summary>
        [Output("ipAddressType")]
        public Output<string?> IpAddressType { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the distribution is enabled.
        /// </summary>
        [Output("isEnabled")]
        public Output<bool?> IsEnabled { get; private set; } = null!;

        /// <summary>
        /// An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
        /// </summary>
        [Output("origin")]
        public Output<Outputs.DistributionInputOrigin> Origin { get; private set; } = null!;

        /// <summary>
        /// The status of the distribution.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.DistributionTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Distribution resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Distribution(string name, DistributionArgs args, CustomResourceOptions? options = null)
            : base("aws-native:lightsail:Distribution", name, args ?? new DistributionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Distribution(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:lightsail:Distribution", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Distribution resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Distribution Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Distribution(name, id, options);
        }
    }

    public sealed class DistributionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bundle ID to use for the distribution.
        /// </summary>
        [Input("bundleId", required: true)]
        public Input<string> BundleId { get; set; } = null!;

        /// <summary>
        /// An object that describes the cache behavior settings for the distribution.
        /// </summary>
        [Input("cacheBehaviorSettings")]
        public Input<Inputs.DistributionCacheSettingsArgs>? CacheBehaviorSettings { get; set; }

        [Input("cacheBehaviors")]
        private InputList<Inputs.DistributionCacheBehaviorPerPathArgs>? _cacheBehaviors;

        /// <summary>
        /// An array of objects that describe the per-path cache behavior for the distribution.
        /// </summary>
        public InputList<Inputs.DistributionCacheBehaviorPerPathArgs> CacheBehaviors
        {
            get => _cacheBehaviors ?? (_cacheBehaviors = new InputList<Inputs.DistributionCacheBehaviorPerPathArgs>());
            set => _cacheBehaviors = value;
        }

        /// <summary>
        /// The certificate attached to the Distribution.
        /// </summary>
        [Input("certificateName")]
        public Input<string>? CertificateName { get; set; }

        /// <summary>
        /// An object that describes the default cache behavior for the distribution.
        /// </summary>
        [Input("defaultCacheBehavior", required: true)]
        public Input<Inputs.DistributionCacheBehaviorArgs> DefaultCacheBehavior { get; set; } = null!;

        /// <summary>
        /// The name for the distribution.
        /// </summary>
        [Input("distributionName")]
        public Input<string>? DistributionName { get; set; }

        /// <summary>
        /// The IP address type for the distribution.
        /// </summary>
        [Input("ipAddressType")]
        public Input<string>? IpAddressType { get; set; }

        /// <summary>
        /// Indicates whether the distribution is enabled.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
        /// </summary>
        [Input("origin", required: true)]
        public Input<Inputs.DistributionInputOriginArgs> Origin { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.DistributionTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.DistributionTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DistributionTagArgs>());
            set => _tags = value;
        }

        public DistributionArgs()
        {
        }
    }
}
