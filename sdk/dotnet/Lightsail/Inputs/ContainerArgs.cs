// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lightsail.Inputs
{

    /// <summary>
    /// Describes the settings of a container that will be launched, or that is launched, to an Amazon Lightsail container service.
    /// </summary>
    public sealed class ContainerArgs : Pulumi.ResourceArgs
    {
        [Input("command")]
        private InputList<string>? _command;

        /// <summary>
        /// The launch command for the container.
        /// </summary>
        public InputList<string> Command
        {
            get => _command ?? (_command = new InputList<string>());
            set => _command = value;
        }

        /// <summary>
        /// The name of the container.
        /// </summary>
        [Input("containerName")]
        public Input<string>? ContainerName { get; set; }

        [Input("environment")]
        private InputList<Inputs.ContainerEnvironmentVariableArgs>? _environment;

        /// <summary>
        /// The environment variables of the container.
        /// </summary>
        public InputList<Inputs.ContainerEnvironmentVariableArgs> Environment
        {
            get => _environment ?? (_environment = new InputList<Inputs.ContainerEnvironmentVariableArgs>());
            set => _environment = value;
        }

        /// <summary>
        /// The name of the image used for the container.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        [Input("ports")]
        private InputList<Inputs.ContainerPortInfoArgs>? _ports;

        /// <summary>
        /// The open firewall ports of the container.
        /// </summary>
        public InputList<Inputs.ContainerPortInfoArgs> Ports
        {
            get => _ports ?? (_ports = new InputList<Inputs.ContainerPortInfoArgs>());
            set => _ports = value;
        }

        public ContainerArgs()
        {
        }
    }
}
