// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Lightsail
{
    public static class GetLoadBalancerTlsCertificate
    {
        /// <summary>
        /// Resource Type definition for AWS::Lightsail::LoadBalancerTlsCertificate
        /// </summary>
        public static Task<GetLoadBalancerTlsCertificateResult> InvokeAsync(GetLoadBalancerTlsCertificateArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLoadBalancerTlsCertificateResult>("aws-native:lightsail:getLoadBalancerTlsCertificate", args ?? new GetLoadBalancerTlsCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Lightsail::LoadBalancerTlsCertificate
        /// </summary>
        public static Output<GetLoadBalancerTlsCertificateResult> Invoke(GetLoadBalancerTlsCertificateInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetLoadBalancerTlsCertificateResult>("aws-native:lightsail:getLoadBalancerTlsCertificate", args ?? new GetLoadBalancerTlsCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoadBalancerTlsCertificateArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The SSL/TLS certificate name.
        /// </summary>
        [Input("certificateName", required: true)]
        public string CertificateName { get; set; } = null!;

        /// <summary>
        /// The name of your load balancer.
        /// </summary>
        [Input("loadBalancerName", required: true)]
        public string LoadBalancerName { get; set; } = null!;

        public GetLoadBalancerTlsCertificateArgs()
        {
        }
    }

    public sealed class GetLoadBalancerTlsCertificateInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The SSL/TLS certificate name.
        /// </summary>
        [Input("certificateName", required: true)]
        public Input<string> CertificateName { get; set; } = null!;

        /// <summary>
        /// The name of your load balancer.
        /// </summary>
        [Input("loadBalancerName", required: true)]
        public Input<string> LoadBalancerName { get; set; } = null!;

        public GetLoadBalancerTlsCertificateInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLoadBalancerTlsCertificateResult
    {
        /// <summary>
        /// A Boolean value that indicates whether HTTPS redirection is enabled for the load balancer.
        /// </summary>
        public readonly bool? HttpsRedirectionEnabled;
        /// <summary>
        /// When true, the SSL/TLS certificate is attached to the Lightsail load balancer.
        /// </summary>
        public readonly bool? IsAttached;
        public readonly string? LoadBalancerTlsCertificateArn;
        /// <summary>
        /// The validation status of the SSL/TLS certificate.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetLoadBalancerTlsCertificateResult(
            bool? httpsRedirectionEnabled,

            bool? isAttached,

            string? loadBalancerTlsCertificateArn,

            string? status)
        {
            HttpsRedirectionEnabled = httpsRedirectionEnabled;
            IsAttached = isAttached;
            LoadBalancerTlsCertificateArn = loadBalancerTlsCertificateArn;
            Status = status;
        }
    }
}
