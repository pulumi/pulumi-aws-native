// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.Lightsail
{
    /// <summary>
    /// Status of the Addon
    /// </summary>
    [EnumType]
    public readonly struct DiskAddOnStatus : IEquatable<DiskAddOnStatus>
    {
        private readonly string _value;

        private DiskAddOnStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static DiskAddOnStatus Enabling { get; } = new DiskAddOnStatus("Enabling");
        public static DiskAddOnStatus Disabling { get; } = new DiskAddOnStatus("Disabling");
        public static DiskAddOnStatus Enabled { get; } = new DiskAddOnStatus("Enabled");
        public static DiskAddOnStatus Terminating { get; } = new DiskAddOnStatus("Terminating");
        public static DiskAddOnStatus Terminated { get; } = new DiskAddOnStatus("Terminated");
        public static DiskAddOnStatus Disabled { get; } = new DiskAddOnStatus("Disabled");
        public static DiskAddOnStatus Failed { get; } = new DiskAddOnStatus("Failed");

        public static bool operator ==(DiskAddOnStatus left, DiskAddOnStatus right) => left.Equals(right);
        public static bool operator !=(DiskAddOnStatus left, DiskAddOnStatus right) => !left.Equals(right);

        public static explicit operator string(DiskAddOnStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DiskAddOnStatus other && Equals(other);
        public bool Equals(DiskAddOnStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Status of the Addon
    /// </summary>
    [EnumType]
    public readonly struct InstanceAddOnStatus : IEquatable<InstanceAddOnStatus>
    {
        private readonly string _value;

        private InstanceAddOnStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static InstanceAddOnStatus Enabling { get; } = new InstanceAddOnStatus("Enabling");
        public static InstanceAddOnStatus Disabling { get; } = new InstanceAddOnStatus("Disabling");
        public static InstanceAddOnStatus Enabled { get; } = new InstanceAddOnStatus("Enabled");
        public static InstanceAddOnStatus Terminating { get; } = new InstanceAddOnStatus("Terminating");
        public static InstanceAddOnStatus Terminated { get; } = new InstanceAddOnStatus("Terminated");
        public static InstanceAddOnStatus Disabled { get; } = new InstanceAddOnStatus("Disabled");
        public static InstanceAddOnStatus Failed { get; } = new InstanceAddOnStatus("Failed");

        public static bool operator ==(InstanceAddOnStatus left, InstanceAddOnStatus right) => left.Equals(right);
        public static bool operator !=(InstanceAddOnStatus left, InstanceAddOnStatus right) => !left.Equals(right);

        public static explicit operator string(InstanceAddOnStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is InstanceAddOnStatus other && Equals(other);
        public bool Equals(InstanceAddOnStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
