// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaPackage.Outputs
{

    /// <summary>
    /// An HTTP Live Streaming (HLS) packaging configuration.
    /// </summary>
    [OutputType]
    public sealed class PackagingConfigurationHlsPackage
    {
        /// <summary>
        /// Parameters for encrypting content.
        /// </summary>
        public readonly Outputs.PackagingConfigurationHlsEncryption? Encryption;
        /// <summary>
        /// A list of HLS manifest configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.PackagingConfigurationHlsManifest> HlsManifests;
        /// <summary>
        /// When enabled, MediaPackage passes through digital video broadcasting (DVB) subtitles into the output.
        /// </summary>
        public readonly bool? IncludeDvbSubtitles;
        /// <summary>
        /// Duration (in seconds) of each fragment. Actual fragments are rounded to the nearest multiple of the source fragment duration.
        /// </summary>
        public readonly int? SegmentDurationSeconds;
        /// <summary>
        /// When enabled, audio streams will be placed in rendition groups in the output.
        /// </summary>
        public readonly bool? UseAudioRenditionGroup;

        [OutputConstructor]
        private PackagingConfigurationHlsPackage(
            Outputs.PackagingConfigurationHlsEncryption? encryption,

            ImmutableArray<Outputs.PackagingConfigurationHlsManifest> hlsManifests,

            bool? includeDvbSubtitles,

            int? segmentDurationSeconds,

            bool? useAudioRenditionGroup)
        {
            Encryption = encryption;
            HlsManifests = hlsManifests;
            IncludeDvbSubtitles = includeDvbSubtitles;
            SegmentDurationSeconds = segmentDurationSeconds;
            UseAudioRenditionGroup = useAudioRenditionGroup;
        }
    }
}
