// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaPackage.Outputs
{

    /// <summary>
    /// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
    /// </summary>
    [OutputType]
    public sealed class OriginEndpointSpekeKeyProvider
    {
        /// <summary>
        /// An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service.
        /// </summary>
        public readonly string? CertificateArn;
        /// <summary>
        /// Use `encryptionContractConfiguration` to configure one or more content encryption keys for your endpoints that use SPEKE Version 2.0. The encryption contract defines the content keys used to encrypt the audio and video tracks in your stream. To configure the encryption contract, specify which audio and video encryption presets to use. For more information about these presets, see [SPEKE Version 2.0 Presets](https://docs.aws.amazon.com/mediapackage/latest/ug/drm-content-speke-v2-presets.html) .
        /// 
        /// Note the following considerations when using `encryptionContractConfiguration` :
        /// 
        /// - You can use `encryptionContractConfiguration` for DASH endpoints that use SPEKE Version 2.0. SPEKE Version 2.0 relies on the CPIX Version 2.3 specification.
        /// - You cannot combine an `UNENCRYPTED` preset with `UNENCRYPTED` or `SHARED` presets across `presetSpeke20Audio` and `presetSpeke20Video` .
        /// - When you use a `SHARED` preset, you must use it for both `presetSpeke20Audio` and `presetSpeke20Video` .
        /// </summary>
        public readonly Outputs.OriginEndpointEncryptionContractConfiguration? EncryptionContractConfiguration;
        /// <summary>
        /// The resource ID to include in key requests.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service.
        /// </summary>
        public readonly string RoleArn;
        /// <summary>
        /// The system IDs to include in key requests.
        /// </summary>
        public readonly ImmutableArray<string> SystemIds;
        /// <summary>
        /// The URL of the external key provider service.
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private OriginEndpointSpekeKeyProvider(
            string? certificateArn,

            Outputs.OriginEndpointEncryptionContractConfiguration? encryptionContractConfiguration,

            string resourceId,

            string roleArn,

            ImmutableArray<string> systemIds,

            string url)
        {
            CertificateArn = certificateArn;
            EncryptionContractConfiguration = encryptionContractConfiguration;
            ResourceId = resourceId;
            RoleArn = roleArn;
            SystemIds = systemIds;
            Url = url;
        }
    }
}
