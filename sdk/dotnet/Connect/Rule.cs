// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Connect
{
    /// <summary>
    /// Resource Type definition for AWS:Connect::Rule
    /// </summary>
    [AwsNativeResourceType("aws-native:connect:Rule")]
    public partial class Rule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of actions that will be executed when a rule is triggered.
        /// </summary>
        [Output("actions")]
        public Output<Outputs.RuleActions> Actions { get; private set; } = null!;

        /// <summary>
        /// The conditions of a rule.
        /// </summary>
        [Output("function")]
        public Output<string> Function { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the instance.
        /// </summary>
        [Output("instanceArn")]
        public Output<string> InstanceArn { get; private set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The publish status of a rule, either draft or published.
        /// </summary>
        [Output("publishStatus")]
        public Output<Pulumi.AwsNative.Connect.RulePublishStatus> PublishStatus { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the rule.
        /// </summary>
        [Output("ruleArn")]
        public Output<string> RuleArn { get; private set; } = null!;

        /// <summary>
        /// One or more tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.RuleTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The event source that triggers the rule.
        /// </summary>
        [Output("triggerEventSource")]
        public Output<Outputs.RuleTriggerEventSource> TriggerEventSource { get; private set; } = null!;


        /// <summary>
        /// Create a Rule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Rule(string name, RuleArgs args, CustomResourceOptions? options = null)
            : base("aws-native:connect:Rule", name, args ?? new RuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Rule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:connect:Rule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "instanceArn",
                    "triggerEventSource",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Rule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Rule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Rule(name, id, options);
        }
    }

    public sealed class RuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The list of actions that will be executed when a rule is triggered.
        /// </summary>
        [Input("actions", required: true)]
        public Input<Inputs.RuleActionsArgs> Actions { get; set; } = null!;

        /// <summary>
        /// The conditions of a rule.
        /// </summary>
        [Input("function", required: true)]
        public Input<string> Function { get; set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the instance.
        /// </summary>
        [Input("instanceArn", required: true)]
        public Input<string> InstanceArn { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The publish status of a rule, either draft or published.
        /// </summary>
        [Input("publishStatus", required: true)]
        public Input<Pulumi.AwsNative.Connect.RulePublishStatus> PublishStatus { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.RuleTagArgs>? _tags;

        /// <summary>
        /// One or more tags.
        /// </summary>
        public InputList<Inputs.RuleTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.RuleTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The event source that triggers the rule.
        /// </summary>
        [Input("triggerEventSource", required: true)]
        public Input<Inputs.RuleTriggerEventSourceArgs> TriggerEventSource { get; set; } = null!;

        public RuleArgs()
        {
        }
        public static new RuleArgs Empty => new RuleArgs();
    }
}
