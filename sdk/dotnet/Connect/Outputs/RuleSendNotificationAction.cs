// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Connect.Outputs
{

    /// <summary>
    /// Information about the send notification action.
    /// </summary>
    [OutputType]
    public sealed class RuleSendNotificationAction
    {
        /// <summary>
        /// Notification content. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// Content type format.
        ///  *Allowed value*: ``PLAIN_TEXT``
        /// </summary>
        public readonly Pulumi.AwsNative.Connect.RuleSendNotificationActionContentType ContentType;
        /// <summary>
        /// Notification delivery method.
        ///  *Allowed value*: ``EMAIL``
        /// </summary>
        public readonly Pulumi.AwsNative.Connect.RuleSendNotificationActionDeliveryMethod DeliveryMethod;
        /// <summary>
        /// Notification recipient.
        /// </summary>
        public readonly Outputs.RuleNotificationRecipientType Recipient;
        /// <summary>
        /// The subject of the email if the delivery method is ``EMAIL``. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
        /// </summary>
        public readonly string? Subject;

        [OutputConstructor]
        private RuleSendNotificationAction(
            string content,

            Pulumi.AwsNative.Connect.RuleSendNotificationActionContentType contentType,

            Pulumi.AwsNative.Connect.RuleSendNotificationActionDeliveryMethod deliveryMethod,

            Outputs.RuleNotificationRecipientType recipient,

            string? subject)
        {
            Content = content;
            ContentType = contentType;
            DeliveryMethod = deliveryMethod;
            Recipient = recipient;
            Subject = subject;
        }
    }
}
