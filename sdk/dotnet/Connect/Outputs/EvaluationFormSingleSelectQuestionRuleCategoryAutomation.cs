// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Connect.Outputs
{

    /// <summary>
    /// Information about the automation option based on a rule category for a single select question.
    ///   *Length Constraints*: Minimum length of 1. Maximum length of 50.
    /// </summary>
    [OutputType]
    public sealed class EvaluationFormSingleSelectQuestionRuleCategoryAutomation
    {
        /// <summary>
        /// The category name, as defined in Rules.
        ///   *Minimum*: 1
        ///   *Maximum*: 50
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// The condition to apply for the automation option. If the condition is PRESENT, then the option is applied when the contact data includes the category. Similarly, if the condition is NOT_PRESENT, then the option is applied when the contact data does not include the category.
        ///   *Allowed values*: ``PRESENT`` | ``NOT_PRESENT`` 
        ///   *Maximum*: 50
        /// </summary>
        public readonly Pulumi.AwsNative.Connect.EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition Condition;
        /// <summary>
        /// The identifier of the answer option. An identifier must be unique within the question.
        ///   *Length Constraints*: Minimum length of 1. Maximum length of 40.
        /// </summary>
        public readonly string OptionRefId;

        [OutputConstructor]
        private EvaluationFormSingleSelectQuestionRuleCategoryAutomation(
            string category,

            Pulumi.AwsNative.Connect.EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition condition,

            string optionRefId)
        {
            Category = category;
            Condition = condition;
            OptionRefId = optionRefId;
        }
    }
}
