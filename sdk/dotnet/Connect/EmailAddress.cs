// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Connect
{
    /// <summary>
    /// Resource Type definition for AWS::Connect::EmailAddress
    /// </summary>
    [AwsNativeResourceType("aws-native:connect:EmailAddress")]
    public partial class EmailAddress : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of alias configurations for the email address
        /// </summary>
        [Output("aliasConfigurations")]
        public Output<ImmutableArray<Outputs.EmailAddressAliasConfiguration>> AliasConfigurations { get; private set; } = null!;

        /// <summary>
        /// A description for the email address.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name for the email address.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Email address to be created for this instance
        /// </summary>
        [Output("emailAddress")]
        public Output<string> EmailAddressValue { get; private set; } = null!;

        /// <summary>
        /// The identifier of the email address.
        /// </summary>
        [Output("emailAddressArn")]
        public Output<string> EmailAddressArn { get; private set; } = null!;

        /// <summary>
        /// The identifier of the Amazon Connect instance.
        /// </summary>
        [Output("instanceArn")]
        public Output<string> InstanceArn { get; private set; } = null!;

        /// <summary>
        /// One or more tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a EmailAddress resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EmailAddress(string name, EmailAddressArgs args, CustomResourceOptions? options = null)
            : base("aws-native:connect:EmailAddress", name, args ?? new EmailAddressArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EmailAddress(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:connect:EmailAddress", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "emailAddress",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EmailAddress resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EmailAddress Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new EmailAddress(name, id, options);
        }
    }

    public sealed class EmailAddressArgs : global::Pulumi.ResourceArgs
    {
        [Input("aliasConfigurations")]
        private InputList<Inputs.EmailAddressAliasConfigurationArgs>? _aliasConfigurations;

        /// <summary>
        /// List of alias configurations for the email address
        /// </summary>
        public InputList<Inputs.EmailAddressAliasConfigurationArgs> AliasConfigurations
        {
            get => _aliasConfigurations ?? (_aliasConfigurations = new InputList<Inputs.EmailAddressAliasConfigurationArgs>());
            set => _aliasConfigurations = value;
        }

        /// <summary>
        /// A description for the email address.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name for the email address.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Email address to be created for this instance
        /// </summary>
        [Input("emailAddress", required: true)]
        public Input<string> EmailAddressValue { get; set; } = null!;

        /// <summary>
        /// The identifier of the Amazon Connect instance.
        /// </summary>
        [Input("instanceArn", required: true)]
        public Input<string> InstanceArn { get; set; } = null!;

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// One or more tags.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public EmailAddressArgs()
        {
        }
        public static new EmailAddressArgs Empty => new EmailAddressArgs();
    }
}
