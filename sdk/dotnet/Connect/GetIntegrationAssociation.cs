// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Connect
{
    public static class GetIntegrationAssociation
    {
        /// <summary>
        /// Resource Type definition for AWS::Connect::IntegrationAssociation
        /// </summary>
        public static Task<GetIntegrationAssociationResult> InvokeAsync(GetIntegrationAssociationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIntegrationAssociationResult>("aws-native:connect:getIntegrationAssociation", args ?? new GetIntegrationAssociationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Connect::IntegrationAssociation
        /// </summary>
        public static Output<GetIntegrationAssociationResult> Invoke(GetIntegrationAssociationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIntegrationAssociationResult>("aws-native:connect:getIntegrationAssociation", args ?? new GetIntegrationAssociationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIntegrationAssociationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the instance.
        /// 
        /// *Minimum* : `1`
        /// 
        /// *Maximum* : `100`
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// ARN of the integration being associated with the instance.
        /// 
        /// *Minimum* : `1`
        /// 
        /// *Maximum* : `140`
        /// </summary>
        [Input("integrationArn", required: true)]
        public string IntegrationArn { get; set; } = null!;

        /// <summary>
        /// Specifies the integration type to be associated with the instance.
        /// 
        /// *Allowed Values* : `LEX_BOT` | `LAMBDA_FUNCTION`
        /// </summary>
        [Input("integrationType", required: true)]
        public Pulumi.AwsNative.Connect.IntegrationAssociationIntegrationType IntegrationType { get; set; }

        public GetIntegrationAssociationArgs()
        {
        }
        public static new GetIntegrationAssociationArgs Empty => new GetIntegrationAssociationArgs();
    }

    public sealed class GetIntegrationAssociationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the instance.
        /// 
        /// *Minimum* : `1`
        /// 
        /// *Maximum* : `100`
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// ARN of the integration being associated with the instance.
        /// 
        /// *Minimum* : `1`
        /// 
        /// *Maximum* : `140`
        /// </summary>
        [Input("integrationArn", required: true)]
        public Input<string> IntegrationArn { get; set; } = null!;

        /// <summary>
        /// Specifies the integration type to be associated with the instance.
        /// 
        /// *Allowed Values* : `LEX_BOT` | `LAMBDA_FUNCTION`
        /// </summary>
        [Input("integrationType", required: true)]
        public Input<Pulumi.AwsNative.Connect.IntegrationAssociationIntegrationType> IntegrationType { get; set; } = null!;

        public GetIntegrationAssociationInvokeArgs()
        {
        }
        public static new GetIntegrationAssociationInvokeArgs Empty => new GetIntegrationAssociationInvokeArgs();
    }


    [OutputType]
    public sealed class GetIntegrationAssociationResult
    {
        /// <summary>
        /// Identifier of the association with an Amazon Connect instance.
        /// </summary>
        public readonly string? IntegrationAssociationId;

        [OutputConstructor]
        private GetIntegrationAssociationResult(string? integrationAssociationId)
        {
            IntegrationAssociationId = integrationAssociationId;
        }
    }
}
