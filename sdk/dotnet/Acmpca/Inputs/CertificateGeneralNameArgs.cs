// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Acmpca.Inputs
{

    /// <summary>
    /// Contains information about the certificate subject. The certificate can be one issued by your private certificate authority (CA) or it can be your private CA certificate. The Subject field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The Subject must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate. The DN must be unique for each entity, but your private CA can issue more than one certificate with the same DN to the same entity.
    /// </summary>
    public sealed class CertificateGeneralNameArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contains information about the certificate subject. The certificate can be one issued by your private certificate authority (CA) or it can be your private CA certificate. The Subject field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The Subject must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate. The DN must be unique for each entity, but your private CA can issue more than one certificate with the same DN to the same entity.
        /// </summary>
        [Input("directoryName")]
        public Input<Inputs.CertificateSubjectArgs>? DirectoryName { get; set; }

        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        [Input("ediPartyName")]
        public Input<Inputs.CertificateEdiPartyNameArgs>? EdiPartyName { get; set; }

        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("otherName")]
        public Input<Inputs.CertificateOtherNameArgs>? OtherName { get; set; }

        [Input("registeredId")]
        public Input<string>? RegisteredId { get; set; }

        [Input("rfc822Name")]
        public Input<string>? Rfc822Name { get; set; }

        [Input("uniformResourceIdentifier")]
        public Input<string>? UniformResourceIdentifier { get; set; }

        public CertificateGeneralNameArgs()
        {
        }
        public static new CertificateGeneralNameArgs Empty => new CertificateGeneralNameArgs();
    }
}
