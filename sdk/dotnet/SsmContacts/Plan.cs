// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SsmContacts
{
    /// <summary>
    /// Engagement Plan for a SSM Incident Manager Contact.
    /// </summary>
    [AwsNativeResourceType("aws-native:ssmcontacts:Plan")]
    public partial class Plan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the contact.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Contact ID for the AWS SSM Incident Manager Contact to associate the plan.
        /// </summary>
        [Output("contactId")]
        public Output<string?> ContactId { get; private set; } = null!;

        /// <summary>
        /// Rotation Ids to associate with Oncall Contact for engagement.
        /// </summary>
        [Output("rotationIds")]
        public Output<ImmutableArray<string>> RotationIds { get; private set; } = null!;

        /// <summary>
        /// The stages that an escalation plan or engagement plan engages contacts and contact methods in.
        /// </summary>
        [Output("stages")]
        public Output<ImmutableArray<Outputs.PlanStage>> Stages { get; private set; } = null!;


        /// <summary>
        /// Create a Plan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Plan(string name, PlanArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:ssmcontacts:Plan", name, args ?? new PlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Plan(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ssmcontacts:Plan", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Plan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Plan Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Plan(name, id, options);
        }
    }

    public sealed class PlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contact ID for the AWS SSM Incident Manager Contact to associate the plan.
        /// </summary>
        [Input("contactId")]
        public Input<string>? ContactId { get; set; }

        [Input("rotationIds")]
        private InputList<string>? _rotationIds;

        /// <summary>
        /// Rotation Ids to associate with Oncall Contact for engagement.
        /// </summary>
        public InputList<string> RotationIds
        {
            get => _rotationIds ?? (_rotationIds = new InputList<string>());
            set => _rotationIds = value;
        }

        [Input("stages")]
        private InputList<Inputs.PlanStageArgs>? _stages;

        /// <summary>
        /// The stages that an escalation plan or engagement plan engages contacts and contact methods in.
        /// </summary>
        public InputList<Inputs.PlanStageArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.PlanStageArgs>());
            set => _stages = value;
        }

        public PlanArgs()
        {
        }
        public static new PlanArgs Empty => new PlanArgs();
    }
}
