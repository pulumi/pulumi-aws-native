// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SsmContacts.Inputs
{

    /// <summary>
    /// Information about when an on-call rotation is in effect and how long the rotation period lasts.
    /// </summary>
    public sealed class RotationRecurrenceSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("dailySettings")]
        private InputList<string>? _dailySettings;

        /// <summary>
        /// Information about on-call rotations that recur daily.
        /// </summary>
        public InputList<string> DailySettings
        {
            get => _dailySettings ?? (_dailySettings = new InputList<string>());
            set => _dailySettings = value;
        }

        [Input("monthlySettings")]
        private InputList<Inputs.RotationMonthlySettingArgs>? _monthlySettings;

        /// <summary>
        /// Information about on-call rotations that recur monthly.
        /// </summary>
        public InputList<Inputs.RotationMonthlySettingArgs> MonthlySettings
        {
            get => _monthlySettings ?? (_monthlySettings = new InputList<Inputs.RotationMonthlySettingArgs>());
            set => _monthlySettings = value;
        }

        /// <summary>
        /// Number of Oncalls per shift.
        /// </summary>
        [Input("numberOfOnCalls")]
        public Input<int>? NumberOfOnCalls { get; set; }

        /// <summary>
        /// The number of days, weeks, or months a single rotation lasts.
        /// </summary>
        [Input("recurrenceMultiplier")]
        public Input<int>? RecurrenceMultiplier { get; set; }

        [Input("shiftCoverages")]
        private InputList<Inputs.RotationShiftCoverageArgs>? _shiftCoverages;

        /// <summary>
        /// Information about the days of the week included in on-call rotation coverage.
        /// </summary>
        public InputList<Inputs.RotationShiftCoverageArgs> ShiftCoverages
        {
            get => _shiftCoverages ?? (_shiftCoverages = new InputList<Inputs.RotationShiftCoverageArgs>());
            set => _shiftCoverages = value;
        }

        [Input("weeklySettings")]
        private InputList<Inputs.RotationWeeklySettingArgs>? _weeklySettings;

        /// <summary>
        /// Information about on-call rotations that recur weekly.
        /// </summary>
        public InputList<Inputs.RotationWeeklySettingArgs> WeeklySettings
        {
            get => _weeklySettings ?? (_weeklySettings = new InputList<Inputs.RotationWeeklySettingArgs>());
            set => _weeklySettings = value;
        }

        public RotationRecurrenceSettingsArgs()
        {
        }
        public static new RotationRecurrenceSettingsArgs Empty => new RotationRecurrenceSettingsArgs();
    }
}
