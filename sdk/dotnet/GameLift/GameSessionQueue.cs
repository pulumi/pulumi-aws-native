// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift
{
    /// <summary>
    /// The AWS::GameLift::GameSessionQueue resource creates an Amazon GameLift (GameLift) game session queue.
    /// 
    /// ## Example Usage
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var queue = new AwsNative.GameLift.GameSessionQueue("queue", new()
    ///     {
    ///         Name = "MyGameSessionQueue",
    ///         TimeoutInSeconds = 60,
    ///         NotificationTarget = "arn:aws:sns:us-west-2:111122223333:My_Placement_SNS_Topic",
    ///         Destinations = new[]
    ///         {
    ///             new AwsNative.GameLift.Inputs.GameSessionQueueDestinationArgs
    ///             {
    ///                 DestinationArn = "arn:aws:gamelift:us-west-2:012345678912:fleet/fleet-id",
    ///             },
    ///             new AwsNative.GameLift.Inputs.GameSessionQueueDestinationArgs
    ///             {
    ///                 DestinationArn = "arn:aws:gamelift:us-west-2:012345678912:alias/alias-id",
    ///             },
    ///         },
    ///         PlayerLatencyPolicies = new[]
    ///         {
    ///             new AwsNative.GameLift.Inputs.GameSessionQueuePlayerLatencyPolicyArgs
    ///             {
    ///                 MaximumIndividualPlayerLatencyMilliseconds = 1000,
    ///                 PolicyDurationSeconds = 60,
    ///             },
    ///         },
    ///         PriorityConfiguration = new AwsNative.GameLift.Inputs.GameSessionQueuePriorityConfigurationArgs
    ///         {
    ///             LocationOrder = new[]
    ///             {
    ///                 "us-west-2",
    ///                 "us-east-1",
    ///             },
    ///             PriorityOrder = new[]
    ///             {
    ///                 AwsNative.GameLift.GameSessionQueuePriorityOrderItem.Cost,
    ///                 AwsNative.GameLift.GameSessionQueuePriorityOrderItem.Latency,
    ///                 AwsNative.GameLift.GameSessionQueuePriorityOrderItem.Location,
    ///                 AwsNative.GameLift.GameSessionQueuePriorityOrderItem.Destination,
    ///             },
    ///         },
    ///         FilterConfiguration = new AwsNative.GameLift.Inputs.GameSessionQueueFilterConfigurationArgs
    ///         {
    ///             AllowedLocations = new[]
    ///             {
    ///                 "us-east-1",
    ///                 "us-west-2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var queueResource = new AwsNative.GameLift.GameSessionQueue("queueResource", new()
    ///     {
    ///         Name = "MyGameSessionQueue",
    ///     });
    /// 
    ///     var matchmakingRuleSetResource = new AwsNative.GameLift.MatchmakingRuleSet("matchmakingRuleSetResource", new()
    ///     {
    ///         Name = "MyRuleSet",
    ///         RuleSetBody = "{\"name\": \"MyMatchmakingRuleSet\",\"ruleLanguageVersion\": \"1.0\", \"teams\": [{\"name\": \"MyTeam\",\"minPlayers\": 1,\"maxPlayers\": 20}]}",
    ///     });
    /// 
    ///     var matchmakingConfigurationResource = new AwsNative.GameLift.MatchmakingConfiguration("matchmakingConfigurationResource", new()
    ///     {
    ///         Name = "MyMatchmakingConfiguration",
    ///         AcceptanceRequired = true,
    ///         AcceptanceTimeoutSeconds = 60,
    ///         AdditionalPlayerCount = 8,
    ///         BackfillMode = AwsNative.GameLift.MatchmakingConfigurationBackfillMode.Automatic,
    ///         CustomEventData = "MyCustomEventData",
    ///         Description = "A basic matchmaking configuration for a GameLift-hosted game",
    ///         FlexMatchMode = AwsNative.GameLift.MatchmakingConfigurationFlexMatchMode.WithQueue,
    ///         GameSessionData = "MyGameSessionData",
    ///         GameProperties = new[]
    ///         {
    ///             new AwsNative.GameLift.Inputs.MatchmakingConfigurationGamePropertyArgs
    ///             {
    ///                 Key = "level",
    ///                 Value = "10",
    ///             },
    ///             new AwsNative.GameLift.Inputs.MatchmakingConfigurationGamePropertyArgs
    ///             {
    ///                 Key = "gameMode",
    ///                 Value = "hard",
    ///             },
    ///         },
    ///         GameSessionQueueArns = new[]
    ///         {
    ///             queueResource.Arn,
    ///         },
    ///         RequestTimeoutSeconds = 100,
    ///         RuleSetName = matchmakingRuleSetResource.Id,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             queueResource,
    ///             matchmakingRuleSetResource,
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// </summary>
    [AwsNativeResourceType("aws-native:gamelift:GameSessionQueue")]
    public partial class GameSessionQueue : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift game session queue resource and uniquely identifies it.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Information that is added to all events that are related to this game session queue.
        /// </summary>
        [Output("customEventData")]
        public Output<string?> CustomEventData { get; private set; } = null!;

        /// <summary>
        /// A list of fleets and/or fleet aliases that can be used to fulfill game session placement requests in the queue.
        /// </summary>
        [Output("destinations")]
        public Output<ImmutableArray<Outputs.GameSessionQueueDestination>> Destinations { get; private set; } = null!;

        /// <summary>
        /// A list of locations where a queue is allowed to place new game sessions.
        /// </summary>
        [Output("filterConfiguration")]
        public Output<Outputs.GameSessionQueueFilterConfiguration?> FilterConfiguration { get; private set; } = null!;

        /// <summary>
        /// A descriptive label that is associated with game session queue. Queue names must be unique within each Region.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An SNS topic ARN that is set up to receive game session placement notifications.
        /// </summary>
        [Output("notificationTarget")]
        public Output<string?> NotificationTarget { get; private set; } = null!;

        /// <summary>
        /// A set of policies that act as a sliding cap on player latency.
        /// </summary>
        [Output("playerLatencyPolicies")]
        public Output<ImmutableArray<Outputs.GameSessionQueuePlayerLatencyPolicy>> PlayerLatencyPolicies { get; private set; } = null!;

        /// <summary>
        /// Custom settings to use when prioritizing destinations and locations for game session placements.
        /// </summary>
        [Output("priorityConfiguration")]
        public Output<Outputs.GameSessionQueuePriorityConfiguration?> PriorityConfiguration { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The maximum time, in seconds, that a new game session placement request remains in the queue.
        /// </summary>
        [Output("timeoutInSeconds")]
        public Output<int?> TimeoutInSeconds { get; private set; } = null!;


        /// <summary>
        /// Create a GameSessionQueue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GameSessionQueue(string name, GameSessionQueueArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:gamelift:GameSessionQueue", name, args ?? new GameSessionQueueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GameSessionQueue(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:gamelift:GameSessionQueue", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GameSessionQueue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GameSessionQueue Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GameSessionQueue(name, id, options);
        }
    }

    public sealed class GameSessionQueueArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Information that is added to all events that are related to this game session queue.
        /// </summary>
        [Input("customEventData")]
        public Input<string>? CustomEventData { get; set; }

        [Input("destinations")]
        private InputList<Inputs.GameSessionQueueDestinationArgs>? _destinations;

        /// <summary>
        /// A list of fleets and/or fleet aliases that can be used to fulfill game session placement requests in the queue.
        /// </summary>
        public InputList<Inputs.GameSessionQueueDestinationArgs> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<Inputs.GameSessionQueueDestinationArgs>());
            set => _destinations = value;
        }

        /// <summary>
        /// A list of locations where a queue is allowed to place new game sessions.
        /// </summary>
        [Input("filterConfiguration")]
        public Input<Inputs.GameSessionQueueFilterConfigurationArgs>? FilterConfiguration { get; set; }

        /// <summary>
        /// A descriptive label that is associated with game session queue. Queue names must be unique within each Region.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An SNS topic ARN that is set up to receive game session placement notifications.
        /// </summary>
        [Input("notificationTarget")]
        public Input<string>? NotificationTarget { get; set; }

        [Input("playerLatencyPolicies")]
        private InputList<Inputs.GameSessionQueuePlayerLatencyPolicyArgs>? _playerLatencyPolicies;

        /// <summary>
        /// A set of policies that act as a sliding cap on player latency.
        /// </summary>
        public InputList<Inputs.GameSessionQueuePlayerLatencyPolicyArgs> PlayerLatencyPolicies
        {
            get => _playerLatencyPolicies ?? (_playerLatencyPolicies = new InputList<Inputs.GameSessionQueuePlayerLatencyPolicyArgs>());
            set => _playerLatencyPolicies = value;
        }

        /// <summary>
        /// Custom settings to use when prioritizing destinations and locations for game session placements.
        /// </summary>
        [Input("priorityConfiguration")]
        public Input<Inputs.GameSessionQueuePriorityConfigurationArgs>? PriorityConfiguration { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The maximum time, in seconds, that a new game session placement request remains in the queue.
        /// </summary>
        [Input("timeoutInSeconds")]
        public Input<int>? TimeoutInSeconds { get; set; }

        public GameSessionQueueArgs()
        {
        }
        public static new GameSessionQueueArgs Empty => new GameSessionQueueArgs();
    }
}
