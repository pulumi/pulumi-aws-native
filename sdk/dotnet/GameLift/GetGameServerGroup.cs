// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift
{
    public static class GetGameServerGroup
    {
        /// <summary>
        /// The AWS::GameLift::GameServerGroup resource creates an Amazon GameLift (GameLift) GameServerGroup.
        /// </summary>
        public static Task<GetGameServerGroupResult> InvokeAsync(GetGameServerGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGameServerGroupResult>("aws-native:gamelift:getGameServerGroup", args ?? new GetGameServerGroupArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::GameLift::GameServerGroup resource creates an Amazon GameLift (GameLift) GameServerGroup.
        /// </summary>
        public static Output<GetGameServerGroupResult> Invoke(GetGameServerGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGameServerGroupResult>("aws-native:gamelift:getGameServerGroup", args ?? new GetGameServerGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGameServerGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A generated unique ID for the game server group.
        /// </summary>
        [Input("gameServerGroupArn", required: true)]
        public string GameServerGroupArn { get; set; } = null!;

        public GetGameServerGroupArgs()
        {
        }
        public static new GetGameServerGroupArgs Empty => new GetGameServerGroupArgs();
    }

    public sealed class GetGameServerGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A generated unique ID for the game server group.
        /// </summary>
        [Input("gameServerGroupArn", required: true)]
        public Input<string> GameServerGroupArn { get; set; } = null!;

        public GetGameServerGroupInvokeArgs()
        {
        }
        public static new GetGameServerGroupInvokeArgs Empty => new GetGameServerGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetGameServerGroupResult
    {
        /// <summary>
        /// A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.
        /// </summary>
        public readonly string? AutoScalingGroupArn;
        /// <summary>
        /// The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.GameServerGroupBalancingStrategy? BalancingStrategy;
        /// <summary>
        /// A generated unique ID for the game server group.
        /// </summary>
        public readonly string? GameServerGroupArn;
        /// <summary>
        /// An identifier for the new game server group.
        /// </summary>
        public readonly string? GameServerGroupName;
        /// <summary>
        /// A flag that indicates whether instances in the game server group are protected from early termination.
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.GameServerGroupGameServerProtectionPolicy? GameServerProtectionPolicy;
        /// <summary>
        /// A set of EC2 instance types to use when creating instances in the group.
        /// </summary>
        public readonly ImmutableArray<Outputs.GameServerGroupInstanceDefinition> InstanceDefinitions;
        /// <summary>
        /// The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
        /// </summary>
        public readonly string? RoleArn;

        [OutputConstructor]
        private GetGameServerGroupResult(
            string? autoScalingGroupArn,

            Pulumi.AwsNative.GameLift.GameServerGroupBalancingStrategy? balancingStrategy,

            string? gameServerGroupArn,

            string? gameServerGroupName,

            Pulumi.AwsNative.GameLift.GameServerGroupGameServerProtectionPolicy? gameServerProtectionPolicy,

            ImmutableArray<Outputs.GameServerGroupInstanceDefinition> instanceDefinitions,

            string? roleArn)
        {
            AutoScalingGroupArn = autoScalingGroupArn;
            BalancingStrategy = balancingStrategy;
            GameServerGroupArn = gameServerGroupArn;
            GameServerGroupName = gameServerGroupName;
            GameServerProtectionPolicy = gameServerProtectionPolicy;
            InstanceDefinitions = instanceDefinitions;
            RoleArn = roleArn;
        }
    }
}
