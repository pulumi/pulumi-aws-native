// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift
{
    public static class GetContainerGroupDefinition
    {
        /// <summary>
        /// The AWS::GameLift::ContainerGroupDefinition resource creates an Amazon GameLift container group definition.
        /// </summary>
        public static Task<GetContainerGroupDefinitionResult> InvokeAsync(GetContainerGroupDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerGroupDefinitionResult>("aws-native:gamelift:getContainerGroupDefinition", args ?? new GetContainerGroupDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::GameLift::ContainerGroupDefinition resource creates an Amazon GameLift container group definition.
        /// </summary>
        public static Output<GetContainerGroupDefinitionResult> Invoke(GetContainerGroupDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerGroupDefinitionResult>("aws-native:gamelift:getContainerGroupDefinition", args ?? new GetContainerGroupDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerGroupDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A descriptive label for the container group definition.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetContainerGroupDefinitionArgs()
        {
        }
        public static new GetContainerGroupDefinitionArgs Empty => new GetContainerGroupDefinitionArgs();
    }

    public sealed class GetContainerGroupDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A descriptive label for the container group definition.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetContainerGroupDefinitionInvokeArgs()
        {
        }
        public static new GetContainerGroupDefinitionInvokeArgs Empty => new GetContainerGroupDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerGroupDefinitionResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container group resource and uniquely identifies it across all AWS Regions.
        /// </summary>
        public readonly string? ContainerGroupDefinitionArn;
        /// <summary>
        /// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// The definition for the game server container in this group. This property is used only when the container group type is `GAME_SERVER` . This container definition specifies a container image with the game server build.
        /// </summary>
        public readonly Outputs.ContainerGroupDefinitionGameServerContainerDefinition? GameServerContainerDefinition;
        /// <summary>
        /// The operating system of the container group
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.ContainerGroupDefinitionOperatingSystem? OperatingSystem;
        /// <summary>
        /// A specific ContainerGroupDefinition version to be updated
        /// </summary>
        public readonly int? SourceVersionNumber;
        /// <summary>
        /// A string indicating ContainerGroupDefinition status.
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.ContainerGroupDefinitionStatus? Status;
        /// <summary>
        /// A string indicating the reason for ContainerGroupDefinition status.
        /// </summary>
        public readonly string? StatusReason;
        /// <summary>
        /// A collection of support container definitions that define the containers in this group.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContainerGroupDefinitionSupportContainerDefinition> SupportContainerDefinitions;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// The total memory limit of container groups following this definition in MiB
        /// </summary>
        public readonly int? TotalMemoryLimitMebibytes;
        /// <summary>
        /// The total amount of virtual CPUs on the container group definition
        /// </summary>
        public readonly double? TotalVcpuLimit;
        /// <summary>
        /// The description of this version
        /// </summary>
        public readonly string? VersionDescription;
        /// <summary>
        /// The version of this ContainerGroupDefinition
        /// </summary>
        public readonly int? VersionNumber;

        [OutputConstructor]
        private GetContainerGroupDefinitionResult(
            string? containerGroupDefinitionArn,

            string? creationTime,

            Outputs.ContainerGroupDefinitionGameServerContainerDefinition? gameServerContainerDefinition,

            Pulumi.AwsNative.GameLift.ContainerGroupDefinitionOperatingSystem? operatingSystem,

            int? sourceVersionNumber,

            Pulumi.AwsNative.GameLift.ContainerGroupDefinitionStatus? status,

            string? statusReason,

            ImmutableArray<Outputs.ContainerGroupDefinitionSupportContainerDefinition> supportContainerDefinitions,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            int? totalMemoryLimitMebibytes,

            double? totalVcpuLimit,

            string? versionDescription,

            int? versionNumber)
        {
            ContainerGroupDefinitionArn = containerGroupDefinitionArn;
            CreationTime = creationTime;
            GameServerContainerDefinition = gameServerContainerDefinition;
            OperatingSystem = operatingSystem;
            SourceVersionNumber = sourceVersionNumber;
            Status = status;
            StatusReason = statusReason;
            SupportContainerDefinitions = supportContainerDefinitions;
            Tags = tags;
            TotalMemoryLimitMebibytes = totalMemoryLimitMebibytes;
            TotalVcpuLimit = totalVcpuLimit;
            VersionDescription = versionDescription;
            VersionNumber = versionNumber;
        }
    }
}
