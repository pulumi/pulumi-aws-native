// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift
{
    /// <summary>
    /// The AWS::GameLift::ContainerFleet resource creates an Amazon GameLift (GameLift) container fleet to host game servers.
    /// </summary>
    [AwsNativeResourceType("aws-native:gamelift:ContainerFleet")]
    public partial class ContainerFleet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
        /// </summary>
        [Output("billingType")]
        public Output<Pulumi.AwsNative.GameLift.ContainerFleetBillingType?> BillingType { get; private set; } = null!;

        /// <summary>
        /// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// Set of rules for processing a deployment for a container fleet update.
        /// </summary>
        [Output("deploymentConfiguration")]
        public Output<Outputs.ContainerFleetDeploymentConfiguration?> DeploymentConfiguration { get; private set; } = null!;

        [Output("deploymentDetails")]
        public Output<Outputs.ContainerFleetDeploymentDetails> DeploymentDetails { get; private set; } = null!;

        /// <summary>
        /// A human-readable description of a fleet.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container fleet resource and uniquely identifies it across all AWS Regions.
        /// </summary>
        [Output("fleetArn")]
        public Output<string> FleetArn { get; private set; } = null!;

        /// <summary>
        /// Unique fleet ID
        /// </summary>
        [Output("fleetId")]
        public Output<string> FleetId { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
        /// </summary>
        [Output("fleetRoleArn")]
        public Output<string> FleetRoleArn { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the game server container group definition. This field will be empty if GameServerContainerGroupDefinitionName is not specified.
        /// </summary>
        [Output("gameServerContainerGroupDefinitionArn")]
        public Output<string> GameServerContainerGroupDefinitionArn { get; private set; } = null!;

        /// <summary>
        /// The name of the container group definition that will be created per game server. You must specify GAME_SERVER container group. You have the option to also specify one PER_INSTANCE container group.
        /// </summary>
        [Output("gameServerContainerGroupDefinitionName")]
        public Output<string?> GameServerContainerGroupDefinitionName { get; private set; } = null!;

        /// <summary>
        /// The number of desired game server container groups per instance, a number between 1-5000.
        /// </summary>
        [Output("gameServerContainerGroupsPerInstance")]
        public Output<int?> GameServerContainerGroupsPerInstance { get; private set; } = null!;

        /// <summary>
        /// A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
        /// </summary>
        [Output("gameSessionCreationLimitPolicy")]
        public Output<Outputs.ContainerFleetGameSessionCreationLimitPolicy?> GameSessionCreationLimitPolicy { get; private set; } = null!;

        /// <summary>
        /// The set of port numbers to open on each instance in a container fleet. Connection ports are used by inbound traffic to connect with processes that are running in containers on the fleet.
        /// </summary>
        [Output("instanceConnectionPortRange")]
        public Output<Outputs.ContainerFleetConnectionPortRange?> InstanceConnectionPortRange { get; private set; } = null!;

        /// <summary>
        /// A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
        /// </summary>
        [Output("instanceInboundPermissions")]
        public Output<ImmutableArray<Outputs.ContainerFleetIpPermission>> InstanceInboundPermissions { get; private set; } = null!;

        /// <summary>
        /// The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions.
        /// </summary>
        [Output("instanceType")]
        public Output<string?> InstanceType { get; private set; } = null!;

        [Output("locations")]
        public Output<ImmutableArray<Outputs.ContainerFleetLocationConfiguration>> Locations { get; private set; } = null!;

        /// <summary>
        /// The method that is used to collect container logs for the fleet. Amazon GameLift Servers saves all standard output for each container in logs, including game session logs.
        /// 
        /// - `CLOUDWATCH` -- Send logs to an Amazon CloudWatch log group that you define. Each container emits a log stream, which is organized in the log group.
        /// - `S3` -- Store logs in an Amazon S3 bucket that you define.
        /// - `NONE` -- Don't collect container logs.
        /// </summary>
        [Output("logConfiguration")]
        public Output<Outputs.ContainerFleetLogConfiguration?> LogConfiguration { get; private set; } = null!;

        /// <summary>
        /// The maximum number of game server container groups per instance, a number between 1-5000.
        /// </summary>
        [Output("maximumGameServerContainerGroupsPerInstance")]
        public Output<int> MaximumGameServerContainerGroupsPerInstance { get; private set; } = null!;

        /// <summary>
        /// The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
        /// </summary>
        [Output("metricGroups")]
        public Output<ImmutableArray<string>> MetricGroups { get; private set; } = null!;

        /// <summary>
        /// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
        /// </summary>
        [Output("newGameSessionProtectionPolicy")]
        public Output<Pulumi.AwsNative.GameLift.ContainerFleetNewGameSessionProtectionPolicy?> NewGameSessionProtectionPolicy { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the per instance container group definition. This field will be empty if PerInstanceContainerGroupDefinitionName is not specified.
        /// </summary>
        [Output("perInstanceContainerGroupDefinitionArn")]
        public Output<string> PerInstanceContainerGroupDefinitionArn { get; private set; } = null!;

        /// <summary>
        /// The name of the container group definition that will be created per instance. This field is optional if you specify GameServerContainerGroupDefinitionName.
        /// </summary>
        [Output("perInstanceContainerGroupDefinitionName")]
        public Output<string?> PerInstanceContainerGroupDefinitionName { get; private set; } = null!;

        /// <summary>
        /// A list of rules that control how a fleet is scaled.
        /// </summary>
        [Output("scalingPolicies")]
        public Output<ImmutableArray<Outputs.ContainerFleetScalingPolicy>> ScalingPolicies { get; private set; } = null!;

        /// <summary>
        /// The current status of the container fleet.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.GameLift.ContainerFleetStatus> Status { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerFleet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerFleet(string name, ContainerFleetArgs args, CustomResourceOptions? options = null)
            : base("aws-native:gamelift:ContainerFleet", name, args ?? new ContainerFleetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerFleet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:gamelift:ContainerFleet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "billingType",
                    "instanceType",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerFleet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerFleet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ContainerFleet(name, id, options);
        }
    }

    public sealed class ContainerFleetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
        /// </summary>
        [Input("billingType")]
        public Input<Pulumi.AwsNative.GameLift.ContainerFleetBillingType>? BillingType { get; set; }

        /// <summary>
        /// Set of rules for processing a deployment for a container fleet update.
        /// </summary>
        [Input("deploymentConfiguration")]
        public Input<Inputs.ContainerFleetDeploymentConfigurationArgs>? DeploymentConfiguration { get; set; }

        /// <summary>
        /// A human-readable description of a fleet.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
        /// </summary>
        [Input("fleetRoleArn", required: true)]
        public Input<string> FleetRoleArn { get; set; } = null!;

        /// <summary>
        /// The name of the container group definition that will be created per game server. You must specify GAME_SERVER container group. You have the option to also specify one PER_INSTANCE container group.
        /// </summary>
        [Input("gameServerContainerGroupDefinitionName")]
        public Input<string>? GameServerContainerGroupDefinitionName { get; set; }

        /// <summary>
        /// The number of desired game server container groups per instance, a number between 1-5000.
        /// </summary>
        [Input("gameServerContainerGroupsPerInstance")]
        public Input<int>? GameServerContainerGroupsPerInstance { get; set; }

        /// <summary>
        /// A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
        /// </summary>
        [Input("gameSessionCreationLimitPolicy")]
        public Input<Inputs.ContainerFleetGameSessionCreationLimitPolicyArgs>? GameSessionCreationLimitPolicy { get; set; }

        /// <summary>
        /// The set of port numbers to open on each instance in a container fleet. Connection ports are used by inbound traffic to connect with processes that are running in containers on the fleet.
        /// </summary>
        [Input("instanceConnectionPortRange")]
        public Input<Inputs.ContainerFleetConnectionPortRangeArgs>? InstanceConnectionPortRange { get; set; }

        [Input("instanceInboundPermissions")]
        private InputList<Inputs.ContainerFleetIpPermissionArgs>? _instanceInboundPermissions;

        /// <summary>
        /// A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
        /// </summary>
        public InputList<Inputs.ContainerFleetIpPermissionArgs> InstanceInboundPermissions
        {
            get => _instanceInboundPermissions ?? (_instanceInboundPermissions = new InputList<Inputs.ContainerFleetIpPermissionArgs>());
            set => _instanceInboundPermissions = value;
        }

        /// <summary>
        /// The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("locations")]
        private InputList<Inputs.ContainerFleetLocationConfigurationArgs>? _locations;
        public InputList<Inputs.ContainerFleetLocationConfigurationArgs> Locations
        {
            get => _locations ?? (_locations = new InputList<Inputs.ContainerFleetLocationConfigurationArgs>());
            set => _locations = value;
        }

        /// <summary>
        /// The method that is used to collect container logs for the fleet. Amazon GameLift Servers saves all standard output for each container in logs, including game session logs.
        /// 
        /// - `CLOUDWATCH` -- Send logs to an Amazon CloudWatch log group that you define. Each container emits a log stream, which is organized in the log group.
        /// - `S3` -- Store logs in an Amazon S3 bucket that you define.
        /// - `NONE` -- Don't collect container logs.
        /// </summary>
        [Input("logConfiguration")]
        public Input<Inputs.ContainerFleetLogConfigurationArgs>? LogConfiguration { get; set; }

        [Input("metricGroups")]
        private InputList<string>? _metricGroups;

        /// <summary>
        /// The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
        /// </summary>
        public InputList<string> MetricGroups
        {
            get => _metricGroups ?? (_metricGroups = new InputList<string>());
            set => _metricGroups = value;
        }

        /// <summary>
        /// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
        /// </summary>
        [Input("newGameSessionProtectionPolicy")]
        public Input<Pulumi.AwsNative.GameLift.ContainerFleetNewGameSessionProtectionPolicy>? NewGameSessionProtectionPolicy { get; set; }

        /// <summary>
        /// The name of the container group definition that will be created per instance. This field is optional if you specify GameServerContainerGroupDefinitionName.
        /// </summary>
        [Input("perInstanceContainerGroupDefinitionName")]
        public Input<string>? PerInstanceContainerGroupDefinitionName { get; set; }

        [Input("scalingPolicies")]
        private InputList<Inputs.ContainerFleetScalingPolicyArgs>? _scalingPolicies;

        /// <summary>
        /// A list of rules that control how a fleet is scaled.
        /// </summary>
        public InputList<Inputs.ContainerFleetScalingPolicyArgs> ScalingPolicies
        {
            get => _scalingPolicies ?? (_scalingPolicies = new InputList<Inputs.ContainerFleetScalingPolicyArgs>());
            set => _scalingPolicies = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public ContainerFleetArgs()
        {
        }
        public static new ContainerFleetArgs Empty => new ContainerFleetArgs();
    }
}
