// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift.Outputs
{

    /// <summary>
    /// A policy the location and provider of logs from the fleet.
    /// </summary>
    [OutputType]
    public sealed class ContainerFleetLogConfiguration
    {
        /// <summary>
        /// The type of log collection to use for a fleet.
        /// 
        /// - `CLOUDWATCH` -- (default value) Send logs to an Amazon CloudWatch log group that you define. Each container emits a log stream, which is organized in the log group.
        /// - `S3` -- Store logs in an Amazon S3 bucket that you define. This bucket must reside in the fleet's home AWS Region.
        /// - `NONE` -- Don't collect container logs.
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.ContainerFleetLogDestination? LogDestination;
        /// <summary>
        /// If log destination is CLOUDWATCH, logs are sent to the specified log group in Amazon CloudWatch.
        /// </summary>
        public readonly string? LogGroupArn;
        /// <summary>
        /// The name of the S3 bucket to pull logs from if S3 is the LogDestination
        /// </summary>
        public readonly string? S3BucketName;

        [OutputConstructor]
        private ContainerFleetLogConfiguration(
            Pulumi.AwsNative.GameLift.ContainerFleetLogDestination? logDestination,

            string? logGroupArn,

            string? s3BucketName)
        {
            LogDestination = logDestination;
            LogGroupArn = logGroupArn;
            S3BucketName = s3BucketName;
        }
    }
}
