// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift.Outputs
{

    /// <summary>
    /// A policy that limits the number of game sessions a player can create on the same fleet. This optional policy gives game owners control over how players can consume available game server resources. A resource creation policy makes the following statement: "An individual player can create a maximum number of new game sessions within a specified time period".
    /// 
    /// The policy is evaluated when a player tries to create a new game session. For example, assume you have a policy of 10 new game sessions and a time period of 60 minutes. On receiving a CreateGameSession request, Amazon GameLift checks that the player (identified by CreatorId) has created fewer than 10 game sessions in the past 60 minutes.
    /// </summary>
    [OutputType]
    public sealed class FleetResourceCreationLimitPolicy
    {
        /// <summary>
        /// The maximum number of game sessions that an individual can create during the policy period.
        /// </summary>
        public readonly int? NewGameSessionsPerCreator;
        /// <summary>
        /// The time span used in evaluating the resource creation limit policy.
        /// </summary>
        public readonly int? PolicyPeriodInMinutes;

        [OutputConstructor]
        private FleetResourceCreationLimitPolicy(
            int? newGameSessionsPerCreator,

            int? policyPeriodInMinutes)
        {
            NewGameSessionsPerCreator = newGameSessionsPerCreator;
            PolicyPeriodInMinutes = policyPeriodInMinutes;
        }
    }
}
