// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift.Outputs
{

    /// <summary>
    /// Specifies how the process manager checks the health of containers.
    /// </summary>
    [OutputType]
    public sealed class ContainerGroupDefinitionContainerHealthCheck
    {
        /// <summary>
        /// A string array representing the command that the container runs to determine if it is healthy.
        /// </summary>
        public readonly ImmutableArray<string> Command;
        /// <summary>
        /// How often (in seconds) the health is checked.
        /// </summary>
        public readonly int? Interval;
        /// <summary>
        /// How many times the process manager will retry the command after a timeout. (The first run of the command does not count as a retry.)
        /// </summary>
        public readonly int? Retries;
        /// <summary>
        /// The optional grace period (in seconds) to give a container time to boostrap before teh health check is declared failed.
        /// </summary>
        public readonly int? StartPeriod;
        /// <summary>
        /// How many seconds the process manager allows the command to run before canceling it.
        /// </summary>
        public readonly int? Timeout;

        [OutputConstructor]
        private ContainerGroupDefinitionContainerHealthCheck(
            ImmutableArray<string> command,

            int? interval,

            int? retries,

            int? startPeriod,

            int? timeout)
        {
            Command = command;
            Interval = interval;
            Retries = retries;
            StartPeriod = startPeriod;
            Timeout = timeout;
        }
    }
}
