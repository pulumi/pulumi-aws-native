// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift.Outputs
{

    /// <summary>
    /// Provides details about how to drain old tasks and replace them with new updated tasks.
    /// </summary>
    [OutputType]
    public sealed class ContainerFleetDeploymentConfiguration
    {
        /// <summary>
        /// The strategy to apply in case of impairment; defaults to MAINTAIN.
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.ContainerFleetDeploymentConfigurationImpairmentStrategy? ImpairmentStrategy;
        /// <summary>
        /// The minimum percentage of healthy required; defaults to 75.
        /// </summary>
        public readonly int? MinimumHealthyPercentage;
        /// <summary>
        /// The protection strategy for deployment on the container fleet; defaults to WITH_PROTECTION.
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.ContainerFleetDeploymentConfigurationProtectionStrategy? ProtectionStrategy;

        [OutputConstructor]
        private ContainerFleetDeploymentConfiguration(
            Pulumi.AwsNative.GameLift.ContainerFleetDeploymentConfigurationImpairmentStrategy? impairmentStrategy,

            int? minimumHealthyPercentage,

            Pulumi.AwsNative.GameLift.ContainerFleetDeploymentConfigurationProtectionStrategy? protectionStrategy)
        {
            ImpairmentStrategy = impairmentStrategy;
            MinimumHealthyPercentage = minimumHealthyPercentage;
            ProtectionStrategy = protectionStrategy;
        }
    }
}
