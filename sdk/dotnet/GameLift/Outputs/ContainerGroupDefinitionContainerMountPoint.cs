// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift.Outputs
{

    /// <summary>
    /// Defines the mount point configuration within a container.
    /// </summary>
    [OutputType]
    public sealed class ContainerGroupDefinitionContainerMountPoint
    {
        /// <summary>
        /// The access permissions for the mounted path.
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.ContainerGroupDefinitionContainerMountPointAccessLevel? AccessLevel;
        /// <summary>
        /// The path inside the container where the mount is accessible.
        /// </summary>
        public readonly string? ContainerPath;
        /// <summary>
        /// The path on the host that will be mounted in the container.
        /// </summary>
        public readonly string InstancePath;

        [OutputConstructor]
        private ContainerGroupDefinitionContainerMountPoint(
            Pulumi.AwsNative.GameLift.ContainerGroupDefinitionContainerMountPointAccessLevel? accessLevel,

            string? containerPath,

            string instancePath)
        {
            AccessLevel = accessLevel;
            ContainerPath = containerPath;
            InstancePath = instancePath;
        }
    }
}
