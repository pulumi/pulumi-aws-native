// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift.Outputs
{

    /// <summary>
    /// Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
    /// </summary>
    [OutputType]
    public sealed class GameServerGroupAutoScalingPolicy
    {
        /// <summary>
        /// Length of time, in seconds, it takes for a new instance to start new game server processes and register with Amazon GameLift Servers FleetIQ. Specifying a warm-up time can be useful, particularly with game servers that take a long time to start up, because it avoids prematurely starting new instances.
        /// </summary>
        public readonly double? EstimatedInstanceWarmup;
        /// <summary>
        /// Settings for a target-based scaling policy applied to Auto Scaling group. These settings are used to create a target-based policy that tracks the GameLift FleetIQ metric `PercentUtilizedGameServers` and specifies a target value for the metric. As player usage changes, the policy triggers to adjust the game server group capacity so that the metric returns to the target value.
        /// </summary>
        public readonly Outputs.GameServerGroupTargetTrackingConfiguration TargetTrackingConfiguration;

        [OutputConstructor]
        private GameServerGroupAutoScalingPolicy(
            double? estimatedInstanceWarmup,

            Outputs.GameServerGroupTargetTrackingConfiguration targetTrackingConfiguration)
        {
            EstimatedInstanceWarmup = estimatedInstanceWarmup;
            TargetTrackingConfiguration = targetTrackingConfiguration;
        }
    }
}
