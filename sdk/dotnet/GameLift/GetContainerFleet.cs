// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift
{
    public static class GetContainerFleet
    {
        /// <summary>
        /// The AWS::GameLift::ContainerFleet resource creates an Amazon GameLift (GameLift) container fleet to host game servers.
        /// </summary>
        public static Task<GetContainerFleetResult> InvokeAsync(GetContainerFleetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerFleetResult>("aws-native:gamelift:getContainerFleet", args ?? new GetContainerFleetArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::GameLift::ContainerFleet resource creates an Amazon GameLift (GameLift) container fleet to host game servers.
        /// </summary>
        public static Output<GetContainerFleetResult> Invoke(GetContainerFleetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerFleetResult>("aws-native:gamelift:getContainerFleet", args ?? new GetContainerFleetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::GameLift::ContainerFleet resource creates an Amazon GameLift (GameLift) container fleet to host game servers.
        /// </summary>
        public static Output<GetContainerFleetResult> Invoke(GetContainerFleetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerFleetResult>("aws-native:gamelift:getContainerFleet", args ?? new GetContainerFleetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerFleetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique fleet ID
        /// </summary>
        [Input("fleetId", required: true)]
        public string FleetId { get; set; } = null!;

        public GetContainerFleetArgs()
        {
        }
        public static new GetContainerFleetArgs Empty => new GetContainerFleetArgs();
    }

    public sealed class GetContainerFleetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique fleet ID
        /// </summary>
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        public GetContainerFleetInvokeArgs()
        {
        }
        public static new GetContainerFleetInvokeArgs Empty => new GetContainerFleetInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerFleetResult
    {
        /// <summary>
        /// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
        /// </summary>
        public readonly string? CreationTime;
        public readonly Outputs.ContainerFleetDeploymentDetails? DeploymentDetails;
        /// <summary>
        /// A human-readable description of a fleet.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container fleet resource and uniquely identifies it across all AWS Regions.
        /// </summary>
        public readonly string? FleetArn;
        /// <summary>
        /// Unique fleet ID
        /// </summary>
        public readonly string? FleetId;
        /// <summary>
        /// A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
        /// </summary>
        public readonly string? FleetRoleArn;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the game server container group definition. This field will be empty if GameServerContainerGroupDefinitionName is not specified.
        /// </summary>
        public readonly string? GameServerContainerGroupDefinitionArn;
        /// <summary>
        /// A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
        /// </summary>
        public readonly Outputs.ContainerFleetGameSessionCreationLimitPolicy? GameSessionCreationLimitPolicy;
        /// <summary>
        /// The set of port numbers to open on each instance in a container fleet. Connection ports are used by inbound traffic to connect with processes that are running in containers on the fleet.
        /// </summary>
        public readonly Outputs.ContainerFleetConnectionPortRange? InstanceConnectionPortRange;
        /// <summary>
        /// A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContainerFleetIpPermission> InstanceInboundPermissions;
        /// <summary>
        /// The method that is used to collect container logs for the fleet. Amazon GameLift saves all standard output for each container in logs, including game session logs.
        /// 
        /// - `CLOUDWATCH` -- Send logs to an Amazon CloudWatch log group that you define. Each container emits a log stream, which is organized in the log group.
        /// - `S3` -- Store logs in an Amazon S3 bucket that you define.
        /// - `NONE` -- Don't collect container logs.
        /// </summary>
        public readonly Outputs.ContainerFleetLogConfiguration? LogConfiguration;
        /// <summary>
        /// The maximum number of game server container groups per instance, a number between 1-5000.
        /// </summary>
        public readonly int? MaximumGameServerContainerGroupsPerInstance;
        /// <summary>
        /// The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
        /// </summary>
        public readonly ImmutableArray<string> MetricGroups;
        /// <summary>
        /// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.ContainerFleetNewGameSessionProtectionPolicy? NewGameSessionProtectionPolicy;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the per instance container group definition. This field will be empty if PerInstanceContainerGroupDefinitionName is not specified.
        /// </summary>
        public readonly string? PerInstanceContainerGroupDefinitionArn;
        /// <summary>
        /// The current status of the container fleet.
        /// </summary>
        public readonly Pulumi.AwsNative.GameLift.ContainerFleetStatus? Status;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetContainerFleetResult(
            string? creationTime,

            Outputs.ContainerFleetDeploymentDetails? deploymentDetails,

            string? description,

            string? fleetArn,

            string? fleetId,

            string? fleetRoleArn,

            string? gameServerContainerGroupDefinitionArn,

            Outputs.ContainerFleetGameSessionCreationLimitPolicy? gameSessionCreationLimitPolicy,

            Outputs.ContainerFleetConnectionPortRange? instanceConnectionPortRange,

            ImmutableArray<Outputs.ContainerFleetIpPermission> instanceInboundPermissions,

            Outputs.ContainerFleetLogConfiguration? logConfiguration,

            int? maximumGameServerContainerGroupsPerInstance,

            ImmutableArray<string> metricGroups,

            Pulumi.AwsNative.GameLift.ContainerFleetNewGameSessionProtectionPolicy? newGameSessionProtectionPolicy,

            string? perInstanceContainerGroupDefinitionArn,

            Pulumi.AwsNative.GameLift.ContainerFleetStatus? status,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            CreationTime = creationTime;
            DeploymentDetails = deploymentDetails;
            Description = description;
            FleetArn = fleetArn;
            FleetId = fleetId;
            FleetRoleArn = fleetRoleArn;
            GameServerContainerGroupDefinitionArn = gameServerContainerGroupDefinitionArn;
            GameSessionCreationLimitPolicy = gameSessionCreationLimitPolicy;
            InstanceConnectionPortRange = instanceConnectionPortRange;
            InstanceInboundPermissions = instanceInboundPermissions;
            LogConfiguration = logConfiguration;
            MaximumGameServerContainerGroupsPerInstance = maximumGameServerContainerGroupsPerInstance;
            MetricGroups = metricGroups;
            NewGameSessionProtectionPolicy = newGameSessionProtectionPolicy;
            PerInstanceContainerGroupDefinitionArn = perInstanceContainerGroupDefinitionArn;
            Status = status;
            Tags = tags;
        }
    }
}
