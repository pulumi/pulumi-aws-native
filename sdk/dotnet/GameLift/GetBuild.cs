// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift
{
    public static class GetBuild
    {
        /// <summary>
        /// Resource Type definition for AWS::GameLift::Build
        /// </summary>
        public static Task<GetBuildResult> InvokeAsync(GetBuildArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBuildResult>("aws-native:gamelift:getBuild", args ?? new GetBuildArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::GameLift::Build
        /// </summary>
        public static Output<GetBuildResult> Invoke(GetBuildInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBuildResult>("aws-native:gamelift:getBuild", args ?? new GetBuildInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBuildArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
        /// </summary>
        [Input("buildId", required: true)]
        public string BuildId { get; set; } = null!;

        public GetBuildArgs()
        {
        }
        public static new GetBuildArgs Empty => new GetBuildArgs();
    }

    public sealed class GetBuildInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
        /// </summary>
        [Input("buildId", required: true)]
        public Input<string> BuildId { get; set; } = null!;

        public GetBuildInvokeArgs()
        {
        }
        public static new GetBuildInvokeArgs Empty => new GetBuildInvokeArgs();
    }


    [OutputType]
    public sealed class GetBuildResult
    {
        /// <summary>
        /// A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
        /// </summary>
        public readonly string? BuildId;
        /// <summary>
        /// A descriptive label that is associated with a build. Build names do not need to be unique.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Version information that is associated with this build. Version strings do not need to be unique.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetBuildResult(
            string? buildId,

            string? name,

            string? version)
        {
            BuildId = buildId;
            Name = name;
            Version = version;
        }
    }
}
