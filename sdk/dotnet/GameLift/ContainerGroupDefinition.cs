// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift
{
    /// <summary>
    /// The AWS::GameLift::ContainerGroupDefinition resource creates an Amazon GameLift container group definition.
    /// </summary>
    [AwsNativeResourceType("aws-native:gamelift:ContainerGroupDefinition")]
    public partial class ContainerGroupDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container group resource and uniquely identifies it across all AWS Regions.
        /// </summary>
        [Output("containerGroupDefinitionArn")]
        public Output<string> ContainerGroupDefinitionArn { get; private set; } = null!;

        /// <summary>
        /// The scope of the container group
        /// </summary>
        [Output("containerGroupType")]
        public Output<Pulumi.AwsNative.GameLift.ContainerGroupDefinitionContainerGroupType?> ContainerGroupType { get; private set; } = null!;

        /// <summary>
        /// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The definition for the game server container in this group. This property is used only when the container group type is `GAME_SERVER` . This container definition specifies a container image with the game server build.
        /// </summary>
        [Output("gameServerContainerDefinition")]
        public Output<Outputs.ContainerGroupDefinitionGameServerContainerDefinition?> GameServerContainerDefinition { get; private set; } = null!;

        /// <summary>
        /// A descriptive label for the container group definition.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The operating system of the container group
        /// </summary>
        [Output("operatingSystem")]
        public Output<Pulumi.AwsNative.GameLift.ContainerGroupDefinitionOperatingSystem> OperatingSystem { get; private set; } = null!;

        /// <summary>
        /// A specific ContainerGroupDefinition version to be updated
        /// </summary>
        [Output("sourceVersionNumber")]
        public Output<int?> SourceVersionNumber { get; private set; } = null!;

        /// <summary>
        /// A string indicating ContainerGroupDefinition status.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.GameLift.ContainerGroupDefinitionStatus> Status { get; private set; } = null!;

        /// <summary>
        /// A string indicating the reason for ContainerGroupDefinition status.
        /// </summary>
        [Output("statusReason")]
        public Output<string> StatusReason { get; private set; } = null!;

        /// <summary>
        /// A collection of support container definitions that define the containers in this group.
        /// </summary>
        [Output("supportContainerDefinitions")]
        public Output<ImmutableArray<Outputs.ContainerGroupDefinitionSupportContainerDefinition>> SupportContainerDefinitions { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The total memory limit of container groups following this definition in MiB
        /// </summary>
        [Output("totalMemoryLimitMebibytes")]
        public Output<int> TotalMemoryLimitMebibytes { get; private set; } = null!;

        /// <summary>
        /// The total amount of virtual CPUs on the container group definition
        /// </summary>
        [Output("totalVcpuLimit")]
        public Output<double> TotalVcpuLimit { get; private set; } = null!;

        /// <summary>
        /// The description of this version
        /// </summary>
        [Output("versionDescription")]
        public Output<string?> VersionDescription { get; private set; } = null!;

        /// <summary>
        /// The version of this ContainerGroupDefinition
        /// </summary>
        [Output("versionNumber")]
        public Output<int> VersionNumber { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerGroupDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerGroupDefinition(string name, ContainerGroupDefinitionArgs args, CustomResourceOptions? options = null)
            : base("aws-native:gamelift:ContainerGroupDefinition", name, args ?? new ContainerGroupDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerGroupDefinition(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:gamelift:ContainerGroupDefinition", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "containerGroupType",
                    "name",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerGroupDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerGroupDefinition Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ContainerGroupDefinition(name, id, options);
        }
    }

    public sealed class ContainerGroupDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of the container group
        /// </summary>
        [Input("containerGroupType")]
        public Input<Pulumi.AwsNative.GameLift.ContainerGroupDefinitionContainerGroupType>? ContainerGroupType { get; set; }

        /// <summary>
        /// The definition for the game server container in this group. This property is used only when the container group type is `GAME_SERVER` . This container definition specifies a container image with the game server build.
        /// </summary>
        [Input("gameServerContainerDefinition")]
        public Input<Inputs.ContainerGroupDefinitionGameServerContainerDefinitionArgs>? GameServerContainerDefinition { get; set; }

        /// <summary>
        /// A descriptive label for the container group definition.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The operating system of the container group
        /// </summary>
        [Input("operatingSystem", required: true)]
        public Input<Pulumi.AwsNative.GameLift.ContainerGroupDefinitionOperatingSystem> OperatingSystem { get; set; } = null!;

        /// <summary>
        /// A specific ContainerGroupDefinition version to be updated
        /// </summary>
        [Input("sourceVersionNumber")]
        public Input<int>? SourceVersionNumber { get; set; }

        [Input("supportContainerDefinitions")]
        private InputList<Inputs.ContainerGroupDefinitionSupportContainerDefinitionArgs>? _supportContainerDefinitions;

        /// <summary>
        /// A collection of support container definitions that define the containers in this group.
        /// </summary>
        public InputList<Inputs.ContainerGroupDefinitionSupportContainerDefinitionArgs> SupportContainerDefinitions
        {
            get => _supportContainerDefinitions ?? (_supportContainerDefinitions = new InputList<Inputs.ContainerGroupDefinitionSupportContainerDefinitionArgs>());
            set => _supportContainerDefinitions = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The total memory limit of container groups following this definition in MiB
        /// </summary>
        [Input("totalMemoryLimitMebibytes", required: true)]
        public Input<int> TotalMemoryLimitMebibytes { get; set; } = null!;

        /// <summary>
        /// The total amount of virtual CPUs on the container group definition
        /// </summary>
        [Input("totalVcpuLimit", required: true)]
        public Input<double> TotalVcpuLimit { get; set; } = null!;

        /// <summary>
        /// The description of this version
        /// </summary>
        [Input("versionDescription")]
        public Input<string>? VersionDescription { get; set; }

        public ContainerGroupDefinitionArgs()
        {
        }
        public static new ContainerGroupDefinitionArgs Empty => new ContainerGroupDefinitionArgs();
    }
}
