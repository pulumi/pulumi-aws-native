// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLift.Inputs
{

    /// <summary>
    /// Current resource capacity settings in a specified fleet or location. The location value might refer to a fleet's remote location or its home Region.
    /// </summary>
    public sealed class ContainerFleetLocationCapacityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of EC2 instances you want to maintain in the specified fleet location. This value must fall between the minimum and maximum size limits. If any auto-scaling policy is defined for the container fleet, the desired instance will only be applied once during fleet creation and will be ignored in updates to avoid conflicts with auto-scaling. During updates with any auto-scaling policy defined, if current desired instance is lower than the new MinSize, it will be increased to the new MinSize; if current desired instance is larger than the new MaxSize, it will be decreased to the new MaxSize.
        /// </summary>
        [Input("desiredEc2Instances", required: true)]
        public Input<int> DesiredEc2Instances { get; set; } = null!;

        /// <summary>
        /// The maximum value that is allowed for the fleet's instance count for a location.
        /// </summary>
        [Input("maxSize", required: true)]
        public Input<int> MaxSize { get; set; } = null!;

        /// <summary>
        /// The minimum value allowed for the fleet's instance count for a location.
        /// </summary>
        [Input("minSize", required: true)]
        public Input<int> MinSize { get; set; } = null!;

        public ContainerFleetLocationCapacityArgs()
        {
        }
        public static new ContainerFleetLocationCapacityArgs Empty => new ContainerFleetLocationCapacityArgs();
    }
}
