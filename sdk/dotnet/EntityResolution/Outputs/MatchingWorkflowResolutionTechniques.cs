// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EntityResolution.Outputs
{

    [OutputType]
    public sealed class MatchingWorkflowResolutionTechniques
    {
        /// <summary>
        /// The properties of the provider service.
        /// </summary>
        public readonly Outputs.MatchingWorkflowProviderProperties? ProviderProperties;
        /// <summary>
        /// The type of matching workflow to create. Specify one of the following types:
        /// 
        /// - `RULE_MATCHING` : Match records using configurable rule-based criteria
        /// - `ML_MATCHING` : Match records using machine learning models
        /// - `PROVIDER` : Match records using a third-party matching provider
        /// </summary>
        public readonly Pulumi.AwsNative.EntityResolution.MatchingWorkflowResolutionType? ResolutionType;
        /// <summary>
        /// An object which defines the list of matching rules to run and has a field `rules` , which is a list of rule objects.
        /// </summary>
        public readonly Outputs.MatchingWorkflowRuleBasedProperties? RuleBasedProperties;
        /// <summary>
        /// An object containing the `rules` for a matching workflow.
        /// </summary>
        public readonly Outputs.MatchingWorkflowRuleConditionProperties? RuleConditionProperties;

        [OutputConstructor]
        private MatchingWorkflowResolutionTechniques(
            Outputs.MatchingWorkflowProviderProperties? providerProperties,

            Pulumi.AwsNative.EntityResolution.MatchingWorkflowResolutionType? resolutionType,

            Outputs.MatchingWorkflowRuleBasedProperties? ruleBasedProperties,

            Outputs.MatchingWorkflowRuleConditionProperties? ruleConditionProperties)
        {
            ProviderProperties = providerProperties;
            ResolutionType = resolutionType;
            RuleBasedProperties = ruleBasedProperties;
            RuleConditionProperties = ruleConditionProperties;
        }
    }
}
