// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EntityResolution.Outputs
{

    [OutputType]
    public sealed class IdNamespaceNamespaceRuleBasedProperties
    {
        /// <summary>
        /// The comparison type. You can either choose `ONE_TO_ONE` or `MANY_TO_MANY` as the `attributeMatchingModel` .
        /// 
        /// If you choose `MANY_TO_MANY` , the system can match attributes across the sub-types of an attribute type. For example, if the value of the `Email` field of Profile A matches the value of `BusinessEmail` field of Profile B, the two profiles are matched on the `Email` attribute type.
        /// 
        /// If you choose `ONE_TO_ONE` , the system can only match attributes if the sub-types are an exact match. For example, for the `Email` attribute type, the system will only consider it a match if the value of the `Email` field of Profile A matches the value of the `Email` field of Profile B.
        /// </summary>
        public readonly Pulumi.AwsNative.EntityResolution.IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel? AttributeMatchingModel;
        /// <summary>
        /// The comparison type. You can either choose `ONE_TO_ONE` or `MANY_TO_MANY` as the `attributeMatchingModel` .
        /// 
        /// If you choose `MANY_TO_MANY` , the system can match attributes across the sub-types of an attribute type. For example, if the value of the `Email` field of Profile A matches the value of `BusinessEmail` field of Profile B, the two profiles are matched on the `Email` attribute type.
        /// 
        /// If you choose `ONE_TO_ONE` , the system can only match attributes if the sub-types are an exact match. For example, for the `Email` attribute type, the system will only consider it a match if the value of the `Email` field of Profile A matches the value of the `Email` field of Profile B.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.EntityResolution.IdNamespaceRecordMatchingModel> RecordMatchingModels;
        /// <summary>
        /// The sets of rules you can use in an ID mapping workflow. The limitations specified for the source and target must be compatible.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.EntityResolution.IdNamespaceRuleDefinitionType> RuleDefinitionTypes;
        /// <summary>
        /// The rules for the ID namespace.
        /// </summary>
        public readonly ImmutableArray<Outputs.IdNamespaceRule> Rules;

        [OutputConstructor]
        private IdNamespaceNamespaceRuleBasedProperties(
            Pulumi.AwsNative.EntityResolution.IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel? attributeMatchingModel,

            ImmutableArray<Pulumi.AwsNative.EntityResolution.IdNamespaceRecordMatchingModel> recordMatchingModels,

            ImmutableArray<Pulumi.AwsNative.EntityResolution.IdNamespaceRuleDefinitionType> ruleDefinitionTypes,

            ImmutableArray<Outputs.IdNamespaceRule> rules)
        {
            AttributeMatchingModel = attributeMatchingModel;
            RecordMatchingModels = recordMatchingModels;
            RuleDefinitionTypes = ruleDefinitionTypes;
            Rules = rules;
        }
    }
}
