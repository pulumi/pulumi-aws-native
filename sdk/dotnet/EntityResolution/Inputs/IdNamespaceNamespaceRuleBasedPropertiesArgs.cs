// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EntityResolution.Inputs
{

    public sealed class IdNamespaceNamespaceRuleBasedPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The comparison type. You can either choose `ONE_TO_ONE` or `MANY_TO_MANY` as the `attributeMatchingModel` .
        /// 
        /// If you choose `ONE_TO_ONE` , the system can only match attributes if the sub-types are an exact match. For example, for the `Email` attribute type, the system will only consider it a match if the value of the `Email` field of Profile A matches the value of the `Email` field of Profile B.
        /// 
        /// If you choose `MANY_TO_MANY` , the system can match attributes across the sub-types of an attribute type. For example, if the value of the `Email` field of Profile A matches the value of `BusinessEmail` field of Profile B, the two profiles are matched on the `Email` attribute type.
        /// </summary>
        [Input("attributeMatchingModel")]
        public Input<Pulumi.AwsNative.EntityResolution.IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel>? AttributeMatchingModel { get; set; }

        [Input("recordMatchingModels")]
        private InputList<Pulumi.AwsNative.EntityResolution.IdNamespaceRecordMatchingModel>? _recordMatchingModels;

        /// <summary>
        /// The type of matching record that is allowed to be used in an ID mapping workflow.
        /// 
        /// If the value is set to `ONE_SOURCE_TO_ONE_TARGET` , only one record in the source is matched to one record in the target.
        /// 
        /// If the value is set to `MANY_SOURCE_TO_ONE_TARGET` , all matching records in the source are matched to one record in the target.
        /// </summary>
        public InputList<Pulumi.AwsNative.EntityResolution.IdNamespaceRecordMatchingModel> RecordMatchingModels
        {
            get => _recordMatchingModels ?? (_recordMatchingModels = new InputList<Pulumi.AwsNative.EntityResolution.IdNamespaceRecordMatchingModel>());
            set => _recordMatchingModels = value;
        }

        [Input("ruleDefinitionTypes")]
        private InputList<Pulumi.AwsNative.EntityResolution.IdNamespaceRuleDefinitionType>? _ruleDefinitionTypes;

        /// <summary>
        /// The sets of rules you can use in an ID mapping workflow. The limitations specified for the source and target must be compatible.
        /// </summary>
        public InputList<Pulumi.AwsNative.EntityResolution.IdNamespaceRuleDefinitionType> RuleDefinitionTypes
        {
            get => _ruleDefinitionTypes ?? (_ruleDefinitionTypes = new InputList<Pulumi.AwsNative.EntityResolution.IdNamespaceRuleDefinitionType>());
            set => _ruleDefinitionTypes = value;
        }

        [Input("rules")]
        private InputList<Inputs.IdNamespaceRuleArgs>? _rules;

        /// <summary>
        /// The rules for the ID namespace.
        /// </summary>
        public InputList<Inputs.IdNamespaceRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.IdNamespaceRuleArgs>());
            set => _rules = value;
        }

        public IdNamespaceNamespaceRuleBasedPropertiesArgs()
        {
        }
        public static new IdNamespaceNamespaceRuleBasedPropertiesArgs Empty => new IdNamespaceNamespaceRuleBasedPropertiesArgs();
    }
}
