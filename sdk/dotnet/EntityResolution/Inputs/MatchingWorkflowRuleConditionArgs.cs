// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EntityResolution.Inputs
{

    public sealed class MatchingWorkflowRuleConditionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A statement that specifies the conditions for a matching rule.
        /// 
        /// If your data is accurate, use an Exact matching function: `Exact` or `ExactManyToMany` .
        /// 
        /// If your data has variations in spelling or pronunciation, use a Fuzzy matching function: `Cosine` , `Levenshtein` , or `Soundex` .
        /// 
        /// Use operators if you want to combine ( `AND` ), separate ( `OR` ), or group matching functions `(...)` .
        /// 
        /// For example: `(Cosine(a, 10) AND Exact(b, true)) OR ExactManyToMany(c, d)`
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// A name for the matching rule.
        /// 
        /// For example: `Rule1`
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        public MatchingWorkflowRuleConditionArgs()
        {
        }
        public static new MatchingWorkflowRuleConditionArgs Empty => new MatchingWorkflowRuleConditionArgs();
    }
}
