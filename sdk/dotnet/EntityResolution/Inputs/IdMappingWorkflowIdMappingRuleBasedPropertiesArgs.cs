// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EntityResolution.Inputs
{

    public sealed class IdMappingWorkflowIdMappingRuleBasedPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The comparison type. You can either choose `ONE_TO_ONE` or `MANY_TO_MANY` as the `attributeMatchingModel` .
        /// 
        /// If you choose `MANY_TO_MANY` , the system can match attributes across the sub-types of an attribute type. For example, if the value of the `Email` field of Profile A matches the value of the `BusinessEmail` field of Profile B, the two profiles are matched on the `Email` attribute type.
        /// 
        /// If you choose `ONE_TO_ONE` , the system can only match attributes if the sub-types are an exact match. For example, for the `Email` attribute type, the system will only consider it a match if the value of the `Email` field of Profile A matches the value of the `Email` field of Profile B.
        /// </summary>
        [Input("attributeMatchingModel", required: true)]
        public Input<Pulumi.AwsNative.EntityResolution.IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel> AttributeMatchingModel { get; set; } = null!;

        /// <summary>
        /// The type of matching record that is allowed to be used in an ID mapping workflow.
        /// 
        /// If the value is set to `ONE_SOURCE_TO_ONE_TARGET` , only one record in the source can be matched to the same record in the target.
        /// 
        /// If the value is set to `MANY_SOURCE_TO_ONE_TARGET` , multiple records in the source can be matched to one record in the target.
        /// </summary>
        [Input("recordMatchingModel", required: true)]
        public Input<Pulumi.AwsNative.EntityResolution.IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel> RecordMatchingModel { get; set; } = null!;

        /// <summary>
        /// The set of rules you can use in an ID mapping workflow. The limitations specified for the source or target to define the match rules must be compatible.
        /// </summary>
        [Input("ruleDefinitionType")]
        public Input<Pulumi.AwsNative.EntityResolution.IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType>? RuleDefinitionType { get; set; }

        [Input("rules")]
        private InputList<Inputs.IdMappingWorkflowRuleArgs>? _rules;

        /// <summary>
        /// The rules that can be used for ID mapping.
        /// </summary>
        public InputList<Inputs.IdMappingWorkflowRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.IdMappingWorkflowRuleArgs>());
            set => _rules = value;
        }

        public IdMappingWorkflowIdMappingRuleBasedPropertiesArgs()
        {
        }
        public static new IdMappingWorkflowIdMappingRuleBasedPropertiesArgs Empty => new IdMappingWorkflowIdMappingRuleBasedPropertiesArgs();
    }
}
