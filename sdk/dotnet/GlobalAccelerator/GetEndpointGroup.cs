// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GlobalAccelerator
{
    public static class GetEndpointGroup
    {
        /// <summary>
        /// Resource Type definition for AWS::GlobalAccelerator::EndpointGroup
        /// </summary>
        public static Task<GetEndpointGroupResult> InvokeAsync(GetEndpointGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEndpointGroupResult>("aws-native:globalaccelerator:getEndpointGroup", args ?? new GetEndpointGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::GlobalAccelerator::EndpointGroup
        /// </summary>
        public static Output<GetEndpointGroupResult> Invoke(GetEndpointGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEndpointGroupResult>("aws-native:globalaccelerator:getEndpointGroup", args ?? new GetEndpointGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEndpointGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the endpoint group
        /// </summary>
        [Input("endpointGroupArn", required: true)]
        public string EndpointGroupArn { get; set; } = null!;

        public GetEndpointGroupArgs()
        {
        }
    }

    public sealed class GetEndpointGroupInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the endpoint group
        /// </summary>
        [Input("endpointGroupArn", required: true)]
        public Input<string> EndpointGroupArn { get; set; } = null!;

        public GetEndpointGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEndpointGroupResult
    {
        /// <summary>
        /// The list of endpoint objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.EndpointGroupEndpointConfiguration> EndpointConfigurations;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the endpoint group
        /// </summary>
        public readonly string? EndpointGroupArn;
        /// <summary>
        /// The time in seconds between each health check for an endpoint. Must be a value of 10 or 30
        /// </summary>
        public readonly int? HealthCheckIntervalSeconds;
        public readonly string? HealthCheckPath;
        /// <summary>
        /// The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
        /// </summary>
        public readonly int? HealthCheckPort;
        /// <summary>
        /// The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
        /// </summary>
        public readonly Pulumi.AwsNative.GlobalAccelerator.EndpointGroupHealthCheckProtocol? HealthCheckProtocol;
        public readonly ImmutableArray<Outputs.EndpointGroupPortOverride> PortOverrides;
        /// <summary>
        /// The number of consecutive health checks required to set the state of the endpoint to unhealthy.
        /// </summary>
        public readonly int? ThresholdCount;
        /// <summary>
        /// The percentage of traffic to sent to an AWS Region
        /// </summary>
        public readonly double? TrafficDialPercentage;

        [OutputConstructor]
        private GetEndpointGroupResult(
            ImmutableArray<Outputs.EndpointGroupEndpointConfiguration> endpointConfigurations,

            string? endpointGroupArn,

            int? healthCheckIntervalSeconds,

            string? healthCheckPath,

            int? healthCheckPort,

            Pulumi.AwsNative.GlobalAccelerator.EndpointGroupHealthCheckProtocol? healthCheckProtocol,

            ImmutableArray<Outputs.EndpointGroupPortOverride> portOverrides,

            int? thresholdCount,

            double? trafficDialPercentage)
        {
            EndpointConfigurations = endpointConfigurations;
            EndpointGroupArn = endpointGroupArn;
            HealthCheckIntervalSeconds = healthCheckIntervalSeconds;
            HealthCheckPath = healthCheckPath;
            HealthCheckPort = healthCheckPort;
            HealthCheckProtocol = healthCheckProtocol;
            PortOverrides = portOverrides;
            ThresholdCount = thresholdCount;
            TrafficDialPercentage = trafficDialPercentage;
        }
    }
}
