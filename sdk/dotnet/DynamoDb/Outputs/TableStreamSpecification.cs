// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DynamoDb.Outputs
{

    /// <summary>
    /// Represents the DynamoDB Streams configuration for a table in DynamoDB.
    /// </summary>
    [OutputType]
    public sealed class TableStreamSpecification
    {
        /// <summary>
        /// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource.
        ///  In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// </summary>
        public readonly Outputs.TableResourcePolicy? ResourcePolicy;
        /// <summary>
        /// When an item in the table is modified, ``StreamViewType`` determines what information is written to the stream for this table. Valid values for ``StreamViewType`` are:
        ///   +   ``KEYS_ONLY`` - Only the key attributes of the modified item are written to the stream.
        ///   +   ``NEW_IMAGE`` - The entire item, as it appears after it was modified, is written to the stream.
        ///   +   ``OLD_IMAGE`` - The entire item, as it appeared before it was modified, is written to the stream.
        ///   +   ``NEW_AND_OLD_IMAGES`` - Both the new and the old item images of the item are written to the stream.
        /// </summary>
        public readonly string StreamViewType;

        [OutputConstructor]
        private TableStreamSpecification(
            Outputs.TableResourcePolicy? resourcePolicy,

            string streamViewType)
        {
            ResourcePolicy = resourcePolicy;
            StreamViewType = streamViewType;
        }
    }
}
