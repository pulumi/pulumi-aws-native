// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DynamoDb.Outputs
{

    [OutputType]
    public sealed class GlobalTableLocalSecondaryIndex
    {
        /// <summary>
        /// The name of the local secondary index. The name must be unique among all other indexes on this table.
        /// </summary>
        public readonly string IndexName;
        /// <summary>
        /// Represents *a single element* of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index.
        /// 
        /// A `KeySchemaElement` represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one `KeySchemaElement` (for the partition key). A composite primary key would require one `KeySchemaElement` for the partition key, and another `KeySchemaElement` for the sort key.
        /// 
        /// A `KeySchemaElement` must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map.
        /// </summary>
        public readonly ImmutableArray<Outputs.GlobalTableKeySchema> KeySchema;
        /// <summary>
        /// Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.
        /// </summary>
        public readonly Outputs.GlobalTableProjection Projection;

        [OutputConstructor]
        private GlobalTableLocalSecondaryIndex(
            string indexName,

            ImmutableArray<Outputs.GlobalTableKeySchema> keySchema,

            Outputs.GlobalTableProjection projection)
        {
            IndexName = indexName;
            KeySchema = keySchema;
            Projection = projection;
        }
    }
}
