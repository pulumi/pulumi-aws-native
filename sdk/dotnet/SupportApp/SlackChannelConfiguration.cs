// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SupportApp
{
    /// <summary>
    /// An AWS Support App resource that creates, updates, lists and deletes Slack channel configurations.
    /// </summary>
    [AwsNativeResourceType("aws-native:supportapp:SlackChannelConfiguration")]
    public partial class SlackChannelConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The channel ID in Slack, which identifies a channel within a workspace.
        /// </summary>
        [Output("channelId")]
        public Output<string> ChannelId { get; private set; } = null!;

        /// <summary>
        /// The channel name in Slack.
        /// </summary>
        [Output("channelName")]
        public Output<string?> ChannelName { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of an IAM role that grants the AWS Support App access to perform operations for AWS services.
        /// </summary>
        [Output("channelRoleArn")]
        public Output<string> ChannelRoleArn { get; private set; } = null!;

        /// <summary>
        /// Whether to notify when a correspondence is added to a case.
        /// </summary>
        [Output("notifyOnAddCorrespondenceToCase")]
        public Output<bool?> NotifyOnAddCorrespondenceToCase { get; private set; } = null!;

        /// <summary>
        /// The severity level of a support case that a customer wants to get notified for.
        /// </summary>
        [Output("notifyOnCaseSeverity")]
        public Output<Pulumi.AwsNative.SupportApp.SlackChannelConfigurationNotifyOnCaseSeverity> NotifyOnCaseSeverity { get; private set; } = null!;

        /// <summary>
        /// Whether to notify when a case is created or reopened.
        /// </summary>
        [Output("notifyOnCreateOrReopenCase")]
        public Output<bool?> NotifyOnCreateOrReopenCase { get; private set; } = null!;

        /// <summary>
        /// Whether to notify when a case is resolved.
        /// </summary>
        [Output("notifyOnResolveCase")]
        public Output<bool?> NotifyOnResolveCase { get; private set; } = null!;

        /// <summary>
        /// The team ID in Slack, which uniquely identifies a workspace.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;


        /// <summary>
        /// Create a SlackChannelConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SlackChannelConfiguration(string name, SlackChannelConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:supportapp:SlackChannelConfiguration", name, args ?? new SlackChannelConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SlackChannelConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:supportapp:SlackChannelConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SlackChannelConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SlackChannelConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SlackChannelConfiguration(name, id, options);
        }
    }

    public sealed class SlackChannelConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The channel ID in Slack, which identifies a channel within a workspace.
        /// </summary>
        [Input("channelId", required: true)]
        public Input<string> ChannelId { get; set; } = null!;

        /// <summary>
        /// The channel name in Slack.
        /// </summary>
        [Input("channelName")]
        public Input<string>? ChannelName { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of an IAM role that grants the AWS Support App access to perform operations for AWS services.
        /// </summary>
        [Input("channelRoleArn", required: true)]
        public Input<string> ChannelRoleArn { get; set; } = null!;

        /// <summary>
        /// Whether to notify when a correspondence is added to a case.
        /// </summary>
        [Input("notifyOnAddCorrespondenceToCase")]
        public Input<bool>? NotifyOnAddCorrespondenceToCase { get; set; }

        /// <summary>
        /// The severity level of a support case that a customer wants to get notified for.
        /// </summary>
        [Input("notifyOnCaseSeverity", required: true)]
        public Input<Pulumi.AwsNative.SupportApp.SlackChannelConfigurationNotifyOnCaseSeverity> NotifyOnCaseSeverity { get; set; } = null!;

        /// <summary>
        /// Whether to notify when a case is created or reopened.
        /// </summary>
        [Input("notifyOnCreateOrReopenCase")]
        public Input<bool>? NotifyOnCreateOrReopenCase { get; set; }

        /// <summary>
        /// Whether to notify when a case is resolved.
        /// </summary>
        [Input("notifyOnResolveCase")]
        public Input<bool>? NotifyOnResolveCase { get; set; }

        /// <summary>
        /// The team ID in Slack, which uniquely identifies a workspace.
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        public SlackChannelConfigurationArgs()
        {
        }
        public static new SlackChannelConfigurationArgs Empty => new SlackChannelConfigurationArgs();
    }
}
