// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SupportApp
{
    public static class GetSlackChannelConfiguration
    {
        /// <summary>
        /// An AWS Support App resource that creates, updates, lists and deletes Slack channel configurations.
        /// </summary>
        public static Task<GetSlackChannelConfigurationResult> InvokeAsync(GetSlackChannelConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSlackChannelConfigurationResult>("aws-native:supportapp:getSlackChannelConfiguration", args ?? new GetSlackChannelConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// An AWS Support App resource that creates, updates, lists and deletes Slack channel configurations.
        /// </summary>
        public static Output<GetSlackChannelConfigurationResult> Invoke(GetSlackChannelConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSlackChannelConfigurationResult>("aws-native:supportapp:getSlackChannelConfiguration", args ?? new GetSlackChannelConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSlackChannelConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The channel ID in Slack, which identifies a channel within a workspace.
        /// </summary>
        [Input("channelId", required: true)]
        public string ChannelId { get; set; } = null!;

        /// <summary>
        /// The team ID in Slack, which uniquely identifies a workspace.
        /// </summary>
        [Input("teamId", required: true)]
        public string TeamId { get; set; } = null!;

        public GetSlackChannelConfigurationArgs()
        {
        }
        public static new GetSlackChannelConfigurationArgs Empty => new GetSlackChannelConfigurationArgs();
    }

    public sealed class GetSlackChannelConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The channel ID in Slack, which identifies a channel within a workspace.
        /// </summary>
        [Input("channelId", required: true)]
        public Input<string> ChannelId { get; set; } = null!;

        /// <summary>
        /// The team ID in Slack, which uniquely identifies a workspace.
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        public GetSlackChannelConfigurationInvokeArgs()
        {
        }
        public static new GetSlackChannelConfigurationInvokeArgs Empty => new GetSlackChannelConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetSlackChannelConfigurationResult
    {
        /// <summary>
        /// The channel name in Slack.
        /// </summary>
        public readonly string? ChannelName;
        /// <summary>
        /// The Amazon Resource Name (ARN) of an IAM role that grants the AWS Support App access to perform operations for AWS services.
        /// </summary>
        public readonly string? ChannelRoleArn;
        /// <summary>
        /// Whether to notify when a correspondence is added to a case.
        /// </summary>
        public readonly bool? NotifyOnAddCorrespondenceToCase;
        /// <summary>
        /// The severity level of a support case that a customer wants to get notified for.
        /// </summary>
        public readonly Pulumi.AwsNative.SupportApp.SlackChannelConfigurationNotifyOnCaseSeverity? NotifyOnCaseSeverity;
        /// <summary>
        /// Whether to notify when a case is created or reopened.
        /// </summary>
        public readonly bool? NotifyOnCreateOrReopenCase;
        /// <summary>
        /// Whether to notify when a case is resolved.
        /// </summary>
        public readonly bool? NotifyOnResolveCase;

        [OutputConstructor]
        private GetSlackChannelConfigurationResult(
            string? channelName,

            string? channelRoleArn,

            bool? notifyOnAddCorrespondenceToCase,

            Pulumi.AwsNative.SupportApp.SlackChannelConfigurationNotifyOnCaseSeverity? notifyOnCaseSeverity,

            bool? notifyOnCreateOrReopenCase,

            bool? notifyOnResolveCase)
        {
            ChannelName = channelName;
            ChannelRoleArn = channelRoleArn;
            NotifyOnAddCorrespondenceToCase = notifyOnAddCorrespondenceToCase;
            NotifyOnCaseSeverity = notifyOnCaseSeverity;
            NotifyOnCreateOrReopenCase = notifyOnCreateOrReopenCase;
            NotifyOnResolveCase = notifyOnResolveCase;
        }
    }
}
