// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SupportApp
{
    /// <summary>
    /// An AWS Support App resource that creates, updates, lists, and deletes Slack workspace configurations.
    /// </summary>
    [AwsNativeResourceType("aws-native:supportapp:SlackWorkspaceConfiguration")]
    public partial class SlackWorkspaceConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The team ID in Slack, which uniquely identifies a workspace.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;

        /// <summary>
        /// An identifier used to update an existing Slack workspace configuration in AWS CloudFormation.
        /// </summary>
        [Output("versionId")]
        public Output<string?> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a SlackWorkspaceConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SlackWorkspaceConfiguration(string name, SlackWorkspaceConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:supportapp:SlackWorkspaceConfiguration", name, args ?? new SlackWorkspaceConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SlackWorkspaceConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:supportapp:SlackWorkspaceConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "teamId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SlackWorkspaceConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SlackWorkspaceConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SlackWorkspaceConfiguration(name, id, options);
        }
    }

    public sealed class SlackWorkspaceConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The team ID in Slack, which uniquely identifies a workspace.
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        /// <summary>
        /// An identifier used to update an existing Slack workspace configuration in AWS CloudFormation.
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public SlackWorkspaceConfigurationArgs()
        {
        }
        public static new SlackWorkspaceConfigurationArgs Empty => new SlackWorkspaceConfigurationArgs();
    }
}
