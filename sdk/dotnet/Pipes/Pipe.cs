// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pipes
{
    /// <summary>
    /// Definition of AWS::Pipes::Pipe Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:pipes:Pipe")]
    public partial class Pipe : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        [Output("currentState")]
        public Output<Pulumi.AwsNative.Pipes.PipeState> CurrentState { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("desiredState")]
        public Output<Pulumi.AwsNative.Pipes.PipeRequestedPipeState?> DesiredState { get; private set; } = null!;

        [Output("enrichment")]
        public Output<string?> Enrichment { get; private set; } = null!;

        [Output("enrichmentParameters")]
        public Output<Outputs.PipeEnrichmentParameters?> EnrichmentParameters { get; private set; } = null!;

        [Output("lastModifiedTime")]
        public Output<string> LastModifiedTime { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        [Output("sourceParameters")]
        public Output<Outputs.PipeSourceParameters?> SourceParameters { get; private set; } = null!;

        [Output("stateReason")]
        public Output<string> StateReason { get; private set; } = null!;

        [Output("tags")]
        public Output<Outputs.PipeTagMap?> Tags { get; private set; } = null!;

        [Output("target")]
        public Output<string> Target { get; private set; } = null!;

        [Output("targetParameters")]
        public Output<Outputs.PipeTargetParameters?> TargetParameters { get; private set; } = null!;


        /// <summary>
        /// Create a Pipe resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Pipe(string name, PipeArgs args, CustomResourceOptions? options = null)
            : base("aws-native:pipes:Pipe", name, args ?? new PipeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Pipe(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:pipes:Pipe", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "name",
                    "source",
                    "sourceParameters.activeMqBrokerParameters.queueName",
                    "sourceParameters.dynamoDbStreamParameters.startingPosition",
                    "sourceParameters.kinesisStreamParameters.startingPosition",
                    "sourceParameters.kinesisStreamParameters.startingPositionTimestamp",
                    "sourceParameters.managedStreamingKafkaParameters.consumerGroupId",
                    "sourceParameters.managedStreamingKafkaParameters.startingPosition",
                    "sourceParameters.managedStreamingKafkaParameters.topicName",
                    "sourceParameters.rabbitMqBrokerParameters.queueName",
                    "sourceParameters.rabbitMqBrokerParameters.virtualHost",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Pipe resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Pipe Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Pipe(name, id, options);
        }
    }

    public sealed class PipeArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("desiredState")]
        public Input<Pulumi.AwsNative.Pipes.PipeRequestedPipeState>? DesiredState { get; set; }

        [Input("enrichment")]
        public Input<string>? Enrichment { get; set; }

        [Input("enrichmentParameters")]
        public Input<Inputs.PipeEnrichmentParametersArgs>? EnrichmentParameters { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        [Input("sourceParameters")]
        public Input<Inputs.PipeSourceParametersArgs>? SourceParameters { get; set; }

        [Input("tags")]
        public Input<Inputs.PipeTagMapArgs>? Tags { get; set; }

        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        [Input("targetParameters")]
        public Input<Inputs.PipeTargetParametersArgs>? TargetParameters { get; set; }

        public PipeArgs()
        {
        }
        public static new PipeArgs Empty => new PipeArgs();
    }
}
