// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pipes.Inputs
{

    public sealed class PipeMultiMeasureMappingArgs : global::Pulumi.ResourceArgs
    {
        [Input("multiMeasureAttributeMappings", required: true)]
        private InputList<Inputs.PipeMultiMeasureAttributeMappingArgs>? _multiMeasureAttributeMappings;

        /// <summary>
        /// Mappings that represent multiple source event fields mapped to measures in the same Timestream for LiveAnalytics record.
        /// </summary>
        public InputList<Inputs.PipeMultiMeasureAttributeMappingArgs> MultiMeasureAttributeMappings
        {
            get => _multiMeasureAttributeMappings ?? (_multiMeasureAttributeMappings = new InputList<Inputs.PipeMultiMeasureAttributeMappingArgs>());
            set => _multiMeasureAttributeMappings = value;
        }

        /// <summary>
        /// The name of the multiple measurements per record (multi-measure).
        /// </summary>
        [Input("multiMeasureName", required: true)]
        public Input<string> MultiMeasureName { get; set; } = null!;

        public PipeMultiMeasureMappingArgs()
        {
        }
        public static new PipeMultiMeasureMappingArgs Empty => new PipeMultiMeasureMappingArgs();
    }
}
