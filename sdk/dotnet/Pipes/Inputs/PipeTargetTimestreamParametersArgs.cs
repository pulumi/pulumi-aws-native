// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pipes.Inputs
{

    public sealed class PipeTargetTimestreamParametersArgs : global::Pulumi.ResourceArgs
    {
        [Input("dimensionMappings", required: true)]
        private InputList<Inputs.PipeDimensionMappingArgs>? _dimensionMappings;
        public InputList<Inputs.PipeDimensionMappingArgs> DimensionMappings
        {
            get => _dimensionMappings ?? (_dimensionMappings = new InputList<Inputs.PipeDimensionMappingArgs>());
            set => _dimensionMappings = value;
        }

        [Input("epochTimeUnit")]
        public Input<Pulumi.AwsNative.Pipes.PipeEpochTimeUnit>? EpochTimeUnit { get; set; }

        [Input("multiMeasureMappings")]
        private InputList<Inputs.PipeMultiMeasureMappingArgs>? _multiMeasureMappings;
        public InputList<Inputs.PipeMultiMeasureMappingArgs> MultiMeasureMappings
        {
            get => _multiMeasureMappings ?? (_multiMeasureMappings = new InputList<Inputs.PipeMultiMeasureMappingArgs>());
            set => _multiMeasureMappings = value;
        }

        [Input("singleMeasureMappings")]
        private InputList<Inputs.PipeSingleMeasureMappingArgs>? _singleMeasureMappings;
        public InputList<Inputs.PipeSingleMeasureMappingArgs> SingleMeasureMappings
        {
            get => _singleMeasureMappings ?? (_singleMeasureMappings = new InputList<Inputs.PipeSingleMeasureMappingArgs>());
            set => _singleMeasureMappings = value;
        }

        [Input("timeFieldType")]
        public Input<Pulumi.AwsNative.Pipes.PipeTimeFieldType>? TimeFieldType { get; set; }

        [Input("timeValue", required: true)]
        public Input<string> TimeValue { get; set; } = null!;

        [Input("timestampFormat")]
        public Input<string>? TimestampFormat { get; set; }

        [Input("versionValue", required: true)]
        public Input<string> VersionValue { get; set; } = null!;

        public PipeTargetTimestreamParametersArgs()
        {
        }
        public static new PipeTargetTimestreamParametersArgs Empty => new PipeTargetTimestreamParametersArgs();
    }
}
