// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pipes.Inputs
{

    public sealed class PipeTargetRedshiftDataParametersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Redshift Database
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// Database user name
        /// </summary>
        [Input("dbUser")]
        public Input<string>? DbUser { get; set; }

        /// <summary>
        /// Optional SecretManager ARN which stores the database credentials
        /// </summary>
        [Input("secretManagerArn")]
        public Input<string>? SecretManagerArn { get; set; }

        [Input("sqls", required: true)]
        private InputList<string>? _sqls;

        /// <summary>
        /// A list of SQLs.
        /// </summary>
        public InputList<string> Sqls
        {
            get => _sqls ?? (_sqls = new InputList<string>());
            set => _sqls = value;
        }

        /// <summary>
        /// A name for Redshift DataAPI statement which can be used as filter of ListStatement.
        /// </summary>
        [Input("statementName")]
        public Input<string>? StatementName { get; set; }

        [Input("withEvent")]
        public Input<bool>? WithEvent { get; set; }

        public PipeTargetRedshiftDataParametersArgs()
        {
        }
        public static new PipeTargetRedshiftDataParametersArgs Empty => new PipeTargetRedshiftDataParametersArgs();
    }
}
