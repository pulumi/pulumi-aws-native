// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Pipes.Outputs
{

    [OutputType]
    public sealed class PipeEcsTaskOverride
    {
        /// <summary>
        /// The overrides that are sent to a container. An empty container override can be passed in. An example of an empty container override is `{"containerOverrides": [ ] }` . If a non-empty container override is specified, the `name` parameter must be included.
        /// </summary>
        public readonly ImmutableArray<Outputs.PipeEcsContainerOverride> ContainerOverrides;
        /// <summary>
        /// The cpu override for the task.
        /// </summary>
        public readonly string? Cpu;
        /// <summary>
        /// The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on Fargate. For more information, see [Fargate task storage](https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html) in the *Amazon ECS User Guide for Fargate* .
        /// 
        /// &gt; This parameter is only supported for tasks hosted on Fargate using Linux platform version `1.4.0` or later. This parameter is not supported for Windows containers on Fargate.
        /// </summary>
        public readonly Outputs.PipeEcsEphemeralStorage? EphemeralStorage;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the task execution IAM role override for the task. For more information, see [Amazon ECS task execution IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html) in the *Amazon Elastic Container Service Developer Guide* .
        /// </summary>
        public readonly string? ExecutionRoleArn;
        /// <summary>
        /// Details on an Elastic Inference accelerator task override. This parameter is used to override the Elastic Inference accelerator specified in the task definition. For more information, see [Working with Amazon Elastic Inference on Amazon ECS](https://docs.aws.amazon.com/AmazonECS/latest/userguide/ecs-inference.html) in the *Amazon Elastic Container Service Developer Guide* .
        /// </summary>
        public readonly ImmutableArray<Outputs.PipeEcsInferenceAcceleratorOverride> InferenceAcceleratorOverrides;
        /// <summary>
        /// The memory override for the task.
        /// </summary>
        public readonly string? Memory;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role. For more information, see [IAM Role for Tasks](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html) in the *Amazon Elastic Container Service Developer Guide* .
        /// </summary>
        public readonly string? TaskRoleArn;

        [OutputConstructor]
        private PipeEcsTaskOverride(
            ImmutableArray<Outputs.PipeEcsContainerOverride> containerOverrides,

            string? cpu,

            Outputs.PipeEcsEphemeralStorage? ephemeralStorage,

            string? executionRoleArn,

            ImmutableArray<Outputs.PipeEcsInferenceAcceleratorOverride> inferenceAcceleratorOverrides,

            string? memory,

            string? taskRoleArn)
        {
            ContainerOverrides = containerOverrides;
            Cpu = cpu;
            EphemeralStorage = ephemeralStorage;
            ExecutionRoleArn = executionRoleArn;
            InferenceAcceleratorOverrides = inferenceAcceleratorOverrides;
            Memory = memory;
            TaskRoleArn = taskRoleArn;
        }
    }
}
