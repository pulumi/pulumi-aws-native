// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaLive
{
    /// <summary>
    /// Resource schema for AWS::MediaLive::Multiplex
    /// </summary>
    [AwsNativeResourceType("aws-native:medialive:Multiplex")]
    public partial class Multiplex : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The unique arn of the multiplex.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A list of availability zones for the multiplex.
        /// </summary>
        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        /// <summary>
        /// The unique id of the multiplex.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// A list of the multiplex output destinations.
        /// </summary>
        [Output("destinations")]
        public Output<ImmutableArray<Outputs.MultiplexOutputDestination>> Destinations { get; private set; } = null!;

        /// <summary>
        /// Configuration for a multiplex event.
        /// </summary>
        [Output("multiplexSettings")]
        public Output<Outputs.MultiplexSettings> MultiplexSettings { get; private set; } = null!;

        /// <summary>
        /// Name of multiplex.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of currently healthy pipelines.
        /// </summary>
        [Output("pipelinesRunningCount")]
        public Output<int> PipelinesRunningCount { get; private set; } = null!;

        /// <summary>
        /// The number of programs in the multiplex.
        /// </summary>
        [Output("programCount")]
        public Output<int> ProgramCount { get; private set; } = null!;

        [Output("state")]
        public Output<Pulumi.AwsNative.MediaLive.MultiplexState> State { get; private set; } = null!;

        /// <summary>
        /// A collection of key-value pairs.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Multiplex resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Multiplex(string name, MultiplexArgs args, CustomResourceOptions? options = null)
            : base("aws-native:medialive:Multiplex", name, args ?? new MultiplexArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Multiplex(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:medialive:Multiplex", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "availabilityZones[*]",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Multiplex resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Multiplex Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Multiplex(name, id, options);
        }
    }

    public sealed class MultiplexArgs : global::Pulumi.ResourceArgs
    {
        [Input("availabilityZones", required: true)]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// A list of availability zones for the multiplex.
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("destinations")]
        private InputList<Inputs.MultiplexOutputDestinationArgs>? _destinations;

        /// <summary>
        /// A list of the multiplex output destinations.
        /// </summary>
        public InputList<Inputs.MultiplexOutputDestinationArgs> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<Inputs.MultiplexOutputDestinationArgs>());
            set => _destinations = value;
        }

        /// <summary>
        /// Configuration for a multiplex event.
        /// </summary>
        [Input("multiplexSettings", required: true)]
        public Input<Inputs.MultiplexSettingsArgs> MultiplexSettings { get; set; } = null!;

        /// <summary>
        /// Name of multiplex.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A collection of key-value pairs.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public MultiplexArgs()
        {
        }
        public static new MultiplexArgs Empty => new MultiplexArgs();
    }
}
