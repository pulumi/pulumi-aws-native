// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaLive
{
    public static class GetSdiSource
    {
        /// <summary>
        /// Definition of AWS::MediaLive::SdiSource Resource Type
        /// </summary>
        public static Task<GetSdiSourceResult> InvokeAsync(GetSdiSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSdiSourceResult>("aws-native:medialive:getSdiSource", args ?? new GetSdiSourceArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::MediaLive::SdiSource Resource Type
        /// </summary>
        public static Output<GetSdiSourceResult> Invoke(GetSdiSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSdiSourceResult>("aws-native:medialive:getSdiSource", args ?? new GetSdiSourceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::MediaLive::SdiSource Resource Type
        /// </summary>
        public static Output<GetSdiSourceResult> Invoke(GetSdiSourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSdiSourceResult>("aws-native:medialive:getSdiSource", args ?? new GetSdiSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSdiSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the SdiSource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSdiSourceArgs()
        {
        }
        public static new GetSdiSourceArgs Empty => new GetSdiSourceArgs();
    }

    public sealed class GetSdiSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the SdiSource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSdiSourceInvokeArgs()
        {
        }
        public static new GetSdiSourceInvokeArgs Empty => new GetSdiSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSdiSourceResult
    {
        /// <summary>
        /// The unique arn of the SdiSource.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The unique identifier of the SdiSource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The list of inputs currently using this SDI source.
        /// </summary>
        public readonly ImmutableArray<string> Inputs;
        public readonly Pulumi.AwsNative.MediaLive.SdiSourceMode? Mode;
        /// <summary>
        /// The name of the SdiSource.
        /// </summary>
        public readonly string? Name;
        public readonly Pulumi.AwsNative.MediaLive.SdiSourceState? State;
        /// <summary>
        /// A collection of key-value pairs.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        public readonly Pulumi.AwsNative.MediaLive.SdiSourceType? Type;

        [OutputConstructor]
        private GetSdiSourceResult(
            string? arn,

            string? id,

            ImmutableArray<string> inputs,

            Pulumi.AwsNative.MediaLive.SdiSourceMode? mode,

            string? name,

            Pulumi.AwsNative.MediaLive.SdiSourceState? state,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            Pulumi.AwsNative.MediaLive.SdiSourceType? type)
        {
            Arn = arn;
            Id = id;
            Inputs = inputs;
            Mode = mode;
            Name = name;
            State = state;
            Tags = tags;
            Type = type;
        }
    }
}
