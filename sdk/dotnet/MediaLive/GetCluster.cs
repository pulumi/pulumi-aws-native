// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaLive
{
    public static class GetCluster
    {
        /// <summary>
        /// Definition of AWS::MediaLive::Cluster Resource Type
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("aws-native:medialive:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::MediaLive::Cluster Resource Type
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws-native:medialive:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::MediaLive::Cluster Resource Type
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws-native:medialive:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID of the Cluster.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetClusterArgs()
        {
        }
        public static new GetClusterArgs Empty => new GetClusterArgs();
    }

    public sealed class GetClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID of the Cluster.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetClusterInvokeArgs()
        {
        }
        public static new GetClusterInvokeArgs Empty => new GetClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The ARN of the Cluster.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The MediaLive Channels that are currently running on Nodes in this Cluster.
        /// </summary>
        public readonly ImmutableArray<string> ChannelIds;
        /// <summary>
        /// The unique ID of the Cluster.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The user-specified name of the Cluster to be created.
        /// </summary>
        public readonly string? Name;
        public readonly Outputs.ClusterNetworkSettings? NetworkSettings;
        public readonly Pulumi.AwsNative.MediaLive.ClusterState? State;
        /// <summary>
        /// A collection of key-value pairs.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetClusterResult(
            string? arn,

            ImmutableArray<string> channelIds,

            string? id,

            string? name,

            Outputs.ClusterNetworkSettings? networkSettings,

            Pulumi.AwsNative.MediaLive.ClusterState? state,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            ChannelIds = channelIds;
            Id = id;
            Name = name;
            NetworkSettings = networkSettings;
            State = state;
            Tags = tags;
        }
    }
}
