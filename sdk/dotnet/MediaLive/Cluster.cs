// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaLive
{
    /// <summary>
    /// Definition of AWS::MediaLive::Cluster Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:medialive:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the Cluster.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the Cluster.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// The MediaLive Channels that are currently running on Nodes in this Cluster.
        /// </summary>
        [Output("channelIds")]
        public Output<ImmutableArray<string>> ChannelIds { get; private set; } = null!;

        [Output("clusterType")]
        public Output<Pulumi.AwsNative.MediaLive.ClusterType?> ClusterType { get; private set; } = null!;

        /// <summary>
        /// The IAM role your nodes will use.
        /// </summary>
        [Output("instanceRoleArn")]
        public Output<string?> InstanceRoleArn { get; private set; } = null!;

        /// <summary>
        /// The user-specified name of the Cluster to be created.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("networkSettings")]
        public Output<Outputs.ClusterNetworkSettings?> NetworkSettings { get; private set; } = null!;

        [Output("state")]
        public Output<Pulumi.AwsNative.MediaLive.ClusterState> State { get; private set; } = null!;

        /// <summary>
        /// A collection of key-value pairs.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:medialive:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:medialive:Cluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "clusterType",
                    "instanceRoleArn",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        [Input("clusterType")]
        public Input<Pulumi.AwsNative.MediaLive.ClusterType>? ClusterType { get; set; }

        /// <summary>
        /// The IAM role your nodes will use.
        /// </summary>
        [Input("instanceRoleArn")]
        public Input<string>? InstanceRoleArn { get; set; }

        /// <summary>
        /// The user-specified name of the Cluster to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkSettings")]
        public Input<Inputs.ClusterNetworkSettingsArgs>? NetworkSettings { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// A collection of key-value pairs.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }
}
