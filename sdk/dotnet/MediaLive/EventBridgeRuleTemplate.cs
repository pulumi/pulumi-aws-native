// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaLive
{
    /// <summary>
    /// Definition of AWS::MediaLive::EventBridgeRuleTemplate Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:medialive:EventBridgeRuleTemplate")]
    public partial class EventBridgeRuleTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An eventbridge rule template's ARN (Amazon Resource Name)
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// An eventbridge rule template's id. AWS provided templates have ids that start with `aws-`
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// Placeholder documentation for __timestampIso8601
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// A resource's optional description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
        /// </summary>
        [Output("eventTargets")]
        public Output<ImmutableArray<Outputs.EventBridgeRuleTemplateTarget>> EventTargets { get; private set; } = null!;

        [Output("eventType")]
        public Output<Pulumi.AwsNative.MediaLive.EventBridgeRuleTemplateEventType> EventType { get; private set; } = null!;

        /// <summary>
        /// An eventbridge rule template group's id. AWS provided template groups have ids that start with `aws-`
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// An eventbridge rule template group's identifier. Can be either be its id or current name.
        /// </summary>
        [Output("groupIdentifier")]
        public Output<string> GroupIdentifier { get; private set; } = null!;

        /// <summary>
        /// Placeholder documentation for __string
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// Placeholder documentation for __timestampIso8601
        /// </summary>
        [Output("modifiedAt")]
        public Output<string> ModifiedAt { get; private set; } = null!;

        /// <summary>
        /// A resource's name. Names must be unique within the scope of a resource type in a specific region.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a EventBridgeRuleTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EventBridgeRuleTemplate(string name, EventBridgeRuleTemplateArgs args, CustomResourceOptions? options = null)
            : base("aws-native:medialive:EventBridgeRuleTemplate", name, args ?? new EventBridgeRuleTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EventBridgeRuleTemplate(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:medialive:EventBridgeRuleTemplate", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "tags.*",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EventBridgeRuleTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EventBridgeRuleTemplate Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new EventBridgeRuleTemplate(name, id, options);
        }
    }

    public sealed class EventBridgeRuleTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A resource's optional description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("eventTargets")]
        private InputList<Inputs.EventBridgeRuleTemplateTargetArgs>? _eventTargets;

        /// <summary>
        /// Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
        /// </summary>
        public InputList<Inputs.EventBridgeRuleTemplateTargetArgs> EventTargets
        {
            get => _eventTargets ?? (_eventTargets = new InputList<Inputs.EventBridgeRuleTemplateTargetArgs>());
            set => _eventTargets = value;
        }

        [Input("eventType", required: true)]
        public Input<Pulumi.AwsNative.MediaLive.EventBridgeRuleTemplateEventType> EventType { get; set; } = null!;

        /// <summary>
        /// An eventbridge rule template group's identifier. Can be either be its id or current name.
        /// </summary>
        [Input("groupIdentifier", required: true)]
        public Input<string> GroupIdentifier { get; set; } = null!;

        /// <summary>
        /// A resource's name. Names must be unique within the scope of a resource type in a specific region.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public EventBridgeRuleTemplateArgs()
        {
        }
        public static new EventBridgeRuleTemplateArgs Empty => new EventBridgeRuleTemplateArgs();
    }
}
