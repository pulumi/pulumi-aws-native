// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaLive
{
    public static class GetChannelPlacementGroup
    {
        /// <summary>
        /// Definition of AWS::MediaLive::ChannelPlacementGroup Resource Type
        /// </summary>
        public static Task<GetChannelPlacementGroupResult> InvokeAsync(GetChannelPlacementGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetChannelPlacementGroupResult>("aws-native:medialive:getChannelPlacementGroup", args ?? new GetChannelPlacementGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::MediaLive::ChannelPlacementGroup Resource Type
        /// </summary>
        public static Output<GetChannelPlacementGroupResult> Invoke(GetChannelPlacementGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetChannelPlacementGroupResult>("aws-native:medialive:getChannelPlacementGroup", args ?? new GetChannelPlacementGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetChannelPlacementGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the cluster the node is on.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// Unique internal identifier.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetChannelPlacementGroupArgs()
        {
        }
        public static new GetChannelPlacementGroupArgs Empty => new GetChannelPlacementGroupArgs();
    }

    public sealed class GetChannelPlacementGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the cluster the node is on.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// Unique internal identifier.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetChannelPlacementGroupInvokeArgs()
        {
        }
        public static new GetChannelPlacementGroupInvokeArgs Empty => new GetChannelPlacementGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetChannelPlacementGroupResult
    {
        /// <summary>
        /// The ARN of the channel placement group.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// List of channel IDs added to the channel placement group.
        /// </summary>
        public readonly ImmutableArray<string> Channels;
        /// <summary>
        /// Unique internal identifier.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the channel placement group.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of nodes added to the channel placement group
        /// </summary>
        public readonly ImmutableArray<string> Nodes;
        public readonly Pulumi.AwsNative.MediaLive.ChannelPlacementGroupState? State;
        /// <summary>
        /// A collection of key-value pairs.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetChannelPlacementGroupResult(
            string? arn,

            ImmutableArray<string> channels,

            string? id,

            string? name,

            ImmutableArray<string> nodes,

            Pulumi.AwsNative.MediaLive.ChannelPlacementGroupState? state,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            Channels = channels;
            Id = id;
            Name = name;
            Nodes = nodes;
            State = state;
            Tags = tags;
        }
    }
}
