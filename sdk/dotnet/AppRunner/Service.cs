// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppRunner
{
    /// <summary>
    /// The AWS::AppRunner::Service resource specifies an AppRunner Service.
    /// </summary>
    [AwsNativeResourceType("aws-native:apprunner:Service")]
    public partial class Service : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Autoscaling configuration ARN
        /// </summary>
        [Output("autoScalingConfigurationArn")]
        public Output<string?> AutoScalingConfigurationArn { get; private set; } = null!;

        /// <summary>
        /// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed key .
        /// </summary>
        [Output("encryptionConfiguration")]
        public Output<Outputs.ServiceEncryptionConfiguration?> EncryptionConfiguration { get; private set; } = null!;

        /// <summary>
        /// The settings for the health check that AWS App Runner performs to monitor the health of the App Runner service.
        /// </summary>
        [Output("healthCheckConfiguration")]
        public Output<Outputs.ServiceHealthCheckConfiguration?> HealthCheckConfiguration { get; private set; } = null!;

        /// <summary>
        /// The runtime configuration of instances (scaling units) of your service.
        /// </summary>
        [Output("instanceConfiguration")]
        public Output<Outputs.ServiceInstanceConfiguration?> InstanceConfiguration { get; private set; } = null!;

        /// <summary>
        /// Configuration settings related to network traffic of the web application that the App Runner service runs.
        /// </summary>
        [Output("networkConfiguration")]
        public Output<Outputs.ServiceNetworkConfiguration?> NetworkConfiguration { get; private set; } = null!;

        /// <summary>
        /// The observability configuration of your service.
        /// </summary>
        [Output("observabilityConfiguration")]
        public Output<Outputs.ServiceObservabilityConfiguration?> ObservabilityConfiguration { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the AppRunner Service.
        /// </summary>
        [Output("serviceArn")]
        public Output<string> ServiceArn { get; private set; } = null!;

        /// <summary>
        /// The AppRunner Service Id
        /// </summary>
        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;

        /// <summary>
        /// The AppRunner Service Name.
        /// </summary>
        [Output("serviceName")]
        public Output<string?> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The Service Url of the AppRunner Service.
        /// </summary>
        [Output("serviceUrl")]
        public Output<string> ServiceUrl { get; private set; } = null!;

        /// <summary>
        /// The source to deploy to the App Runner service. It can be a code or an image repository.
        /// </summary>
        [Output("sourceConfiguration")]
        public Output<Outputs.ServiceSourceConfiguration> SourceConfiguration { get; private set; } = null!;

        /// <summary>
        /// AppRunner Service status.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// An optional list of metadata items that you can associate with the App Runner service resource. A tag is a key-value pair.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.CreateOnlyTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Service resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Service(string name, ServiceArgs args, CustomResourceOptions? options = null)
            : base("aws-native:apprunner:Service", name, args ?? new ServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Service(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:apprunner:Service", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "encryptionConfiguration",
                    "serviceName",
                    "tags[*]",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Service resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Service Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Service(name, id, options);
        }
    }

    public sealed class ServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Autoscaling configuration ARN
        /// </summary>
        [Input("autoScalingConfigurationArn")]
        public Input<string>? AutoScalingConfigurationArn { get; set; }

        /// <summary>
        /// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed key .
        /// </summary>
        [Input("encryptionConfiguration")]
        public Input<Inputs.ServiceEncryptionConfigurationArgs>? EncryptionConfiguration { get; set; }

        /// <summary>
        /// The settings for the health check that AWS App Runner performs to monitor the health of the App Runner service.
        /// </summary>
        [Input("healthCheckConfiguration")]
        public Input<Inputs.ServiceHealthCheckConfigurationArgs>? HealthCheckConfiguration { get; set; }

        /// <summary>
        /// The runtime configuration of instances (scaling units) of your service.
        /// </summary>
        [Input("instanceConfiguration")]
        public Input<Inputs.ServiceInstanceConfigurationArgs>? InstanceConfiguration { get; set; }

        /// <summary>
        /// Configuration settings related to network traffic of the web application that the App Runner service runs.
        /// </summary>
        [Input("networkConfiguration")]
        public Input<Inputs.ServiceNetworkConfigurationArgs>? NetworkConfiguration { get; set; }

        /// <summary>
        /// The observability configuration of your service.
        /// </summary>
        [Input("observabilityConfiguration")]
        public Input<Inputs.ServiceObservabilityConfigurationArgs>? ObservabilityConfiguration { get; set; }

        /// <summary>
        /// The AppRunner Service Name.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The source to deploy to the App Runner service. It can be a code or an image repository.
        /// </summary>
        [Input("sourceConfiguration", required: true)]
        public Input<Inputs.ServiceSourceConfigurationArgs> SourceConfiguration { get; set; } = null!;

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs>? _tags;

        /// <summary>
        /// An optional list of metadata items that you can associate with the App Runner service resource. A tag is a key-value pair.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.CreateOnlyTagArgs>());
            set => _tags = value;
        }

        public ServiceArgs()
        {
        }
        public static new ServiceArgs Empty => new ServiceArgs();
    }
}
