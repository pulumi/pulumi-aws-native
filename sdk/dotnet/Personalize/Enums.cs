// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.Personalize
{
    /// <summary>
    /// The domain of a Domain dataset group.
    /// </summary>
    [EnumType]
    public readonly struct DatasetGroupDomain : IEquatable<DatasetGroupDomain>
    {
        private readonly string _value;

        private DatasetGroupDomain(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static DatasetGroupDomain Ecommerce { get; } = new DatasetGroupDomain("ECOMMERCE");
        public static DatasetGroupDomain VideoOnDemand { get; } = new DatasetGroupDomain("VIDEO_ON_DEMAND");

        public static bool operator ==(DatasetGroupDomain left, DatasetGroupDomain right) => left.Equals(right);
        public static bool operator !=(DatasetGroupDomain left, DatasetGroupDomain right) => !left.Equals(right);

        public static explicit operator string(DatasetGroupDomain value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DatasetGroupDomain other && Equals(other);
        public bool Equals(DatasetGroupDomain other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The type of dataset
    /// </summary>
    [EnumType]
    public readonly struct DatasetType : IEquatable<DatasetType>
    {
        private readonly string _value;

        private DatasetType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static DatasetType Interactions { get; } = new DatasetType("Interactions");
        public static DatasetType Items { get; } = new DatasetType("Items");
        public static DatasetType Users { get; } = new DatasetType("Users");

        public static bool operator ==(DatasetType left, DatasetType right) => left.Equals(right);
        public static bool operator !=(DatasetType left, DatasetType right) => !left.Equals(right);

        public static explicit operator string(DatasetType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DatasetType other && Equals(other);
        public bool Equals(DatasetType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The domain of a Domain dataset group.
    /// </summary>
    [EnumType]
    public readonly struct SchemaDomain : IEquatable<SchemaDomain>
    {
        private readonly string _value;

        private SchemaDomain(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static SchemaDomain Ecommerce { get; } = new SchemaDomain("ECOMMERCE");
        public static SchemaDomain VideoOnDemand { get; } = new SchemaDomain("VIDEO_ON_DEMAND");

        public static bool operator ==(SchemaDomain left, SchemaDomain right) => left.Equals(right);
        public static bool operator !=(SchemaDomain left, SchemaDomain right) => !left.Equals(right);

        public static explicit operator string(SchemaDomain value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SchemaDomain other && Equals(other);
        public bool Equals(SchemaDomain other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The type of the metric. Valid values are Maximize and Minimize.
    /// </summary>
    [EnumType]
    public readonly struct SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType : IEquatable<SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType>
    {
        private readonly string _value;

        private SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType Maximize { get; } = new SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType("Maximize");
        public static SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType Minimize { get; } = new SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType("Minimize");

        public static bool operator ==(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType left, SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType right) => left.Equals(right);
        public static bool operator !=(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType left, SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType right) => !left.Equals(right);

        public static explicit operator string(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType other && Equals(other);
        public bool Equals(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
