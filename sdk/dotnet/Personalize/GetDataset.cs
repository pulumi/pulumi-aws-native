// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Personalize
{
    public static class GetDataset
    {
        /// <summary>
        /// Resource schema for AWS::Personalize::Dataset.
        /// </summary>
        public static Task<GetDatasetResult> InvokeAsync(GetDatasetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatasetResult>("aws-native:personalize:getDataset", args ?? new GetDatasetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Personalize::Dataset.
        /// </summary>
        public static Output<GetDatasetResult> Invoke(GetDatasetInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDatasetResult>("aws-native:personalize:getDataset", args ?? new GetDatasetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatasetArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the dataset
        /// </summary>
        [Input("datasetArn", required: true)]
        public string DatasetArn { get; set; } = null!;

        public GetDatasetArgs()
        {
        }
    }

    public sealed class GetDatasetInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the dataset
        /// </summary>
        [Input("datasetArn", required: true)]
        public Input<string> DatasetArn { get; set; } = null!;

        public GetDatasetInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatasetResult
    {
        /// <summary>
        /// The ARN of the dataset
        /// </summary>
        public readonly string? DatasetArn;
        public readonly Outputs.DatasetImportJob? DatasetImportJob;

        [OutputConstructor]
        private GetDatasetResult(
            string? datasetArn,

            Outputs.DatasetImportJob? datasetImportJob)
        {
            DatasetArn = datasetArn;
            DatasetImportJob = datasetImportJob;
        }
    }
}
