// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGatewayV2
{
    public static class GetIntegrationResponse
    {
        /// <summary>
        /// Resource Type definition for AWS::ApiGatewayV2::IntegrationResponse
        /// </summary>
        public static Task<GetIntegrationResponseResult> InvokeAsync(GetIntegrationResponseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIntegrationResponseResult>("aws-native:apigatewayv2:getIntegrationResponse", args ?? new GetIntegrationResponseArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ApiGatewayV2::IntegrationResponse
        /// </summary>
        public static Output<GetIntegrationResponseResult> Invoke(GetIntegrationResponseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetIntegrationResponseResult>("aws-native:apigatewayv2:getIntegrationResponse", args ?? new GetIntegrationResponseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIntegrationResponseArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetIntegrationResponseArgs()
        {
        }
    }

    public sealed class GetIntegrationResponseInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetIntegrationResponseInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIntegrationResponseResult
    {
        public readonly string? ApiId;
        public readonly string? ContentHandlingStrategy;
        public readonly string? Id;
        public readonly string? IntegrationId;
        public readonly string? IntegrationResponseKey;
        public readonly object? ResponseParameters;
        public readonly object? ResponseTemplates;
        public readonly string? TemplateSelectionExpression;

        [OutputConstructor]
        private GetIntegrationResponseResult(
            string? apiId,

            string? contentHandlingStrategy,

            string? id,

            string? integrationId,

            string? integrationResponseKey,

            object? responseParameters,

            object? responseTemplates,

            string? templateSelectionExpression)
        {
            ApiId = apiId;
            ContentHandlingStrategy = contentHandlingStrategy;
            Id = id;
            IntegrationId = integrationId;
            IntegrationResponseKey = integrationResponseKey;
            ResponseParameters = responseParameters;
            ResponseTemplates = responseTemplates;
            TemplateSelectionExpression = templateSelectionExpression;
        }
    }
}
