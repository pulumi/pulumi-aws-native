// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGatewayV2
{
    public static class GetRoutingRule
    {
        /// <summary>
        /// Schema for AWS::ApiGatewayV2::RoutingRule
        /// </summary>
        public static Task<GetRoutingRuleResult> InvokeAsync(GetRoutingRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutingRuleResult>("aws-native:apigatewayv2:getRoutingRule", args ?? new GetRoutingRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Schema for AWS::ApiGatewayV2::RoutingRule
        /// </summary>
        public static Output<GetRoutingRuleResult> Invoke(GetRoutingRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingRuleResult>("aws-native:apigatewayv2:getRoutingRule", args ?? new GetRoutingRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Schema for AWS::ApiGatewayV2::RoutingRule
        /// </summary>
        public static Output<GetRoutingRuleResult> Invoke(GetRoutingRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingRuleResult>("aws-native:apigatewayv2:getRoutingRule", args ?? new GetRoutingRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutingRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the resource.
        /// </summary>
        [Input("routingRuleArn", required: true)]
        public string RoutingRuleArn { get; set; } = null!;

        public GetRoutingRuleArgs()
        {
        }
        public static new GetRoutingRuleArgs Empty => new GetRoutingRuleArgs();
    }

    public sealed class GetRoutingRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the resource.
        /// </summary>
        [Input("routingRuleArn", required: true)]
        public Input<string> RoutingRuleArn { get; set; } = null!;

        public GetRoutingRuleInvokeArgs()
        {
        }
        public static new GetRoutingRuleInvokeArgs Empty => new GetRoutingRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutingRuleResult
    {
        /// <summary>
        /// The resulting action based on matching a routing rules condition. Only InvokeApi is supported.
        /// </summary>
        public readonly ImmutableArray<Outputs.RoutingRuleAction> Actions;
        /// <summary>
        /// The conditions of the routing rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.RoutingRuleCondition> Conditions;
        /// <summary>
        /// The order in which API Gateway evaluates a rule. Priority is evaluated from the lowest value to the highest value. Rules can't have the same priority. Priority values 1-1,000,000 are supported.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// Amazon Resource Name (ARN) of the resource.
        /// </summary>
        public readonly string? RoutingRuleArn;
        /// <summary>
        /// RoutingRule Id generated by service
        /// </summary>
        public readonly string? RoutingRuleId;

        [OutputConstructor]
        private GetRoutingRuleResult(
            ImmutableArray<Outputs.RoutingRuleAction> actions,

            ImmutableArray<Outputs.RoutingRuleCondition> conditions,

            int? priority,

            string? routingRuleArn,

            string? routingRuleId)
        {
            Actions = actions;
            Conditions = conditions;
            Priority = priority;
            RoutingRuleArn = routingRuleArn;
            RoutingRuleId = routingRuleId;
        }
    }
}
