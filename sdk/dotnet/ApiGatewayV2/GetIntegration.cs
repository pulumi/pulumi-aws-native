// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGatewayV2
{
    public static class GetIntegration
    {
        /// <summary>
        /// An example resource schema demonstrating some basic constructs and validation rules.
        /// </summary>
        public static Task<GetIntegrationResult> InvokeAsync(GetIntegrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIntegrationResult>("aws-native:apigatewayv2:getIntegration", args ?? new GetIntegrationArgs(), options.WithDefaults());

        /// <summary>
        /// An example resource schema demonstrating some basic constructs and validation rules.
        /// </summary>
        public static Output<GetIntegrationResult> Invoke(GetIntegrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIntegrationResult>("aws-native:apigatewayv2:getIntegration", args ?? new GetIntegrationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// An example resource schema demonstrating some basic constructs and validation rules.
        /// </summary>
        public static Output<GetIntegrationResult> Invoke(GetIntegrationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIntegrationResult>("aws-native:apigatewayv2:getIntegration", args ?? new GetIntegrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIntegrationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The API identifier.
        /// </summary>
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        /// <summary>
        /// The integration ID.
        /// </summary>
        [Input("integrationId", required: true)]
        public string IntegrationId { get; set; } = null!;

        public GetIntegrationArgs()
        {
        }
        public static new GetIntegrationArgs Empty => new GetIntegrationArgs();
    }

    public sealed class GetIntegrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The API identifier.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        /// <summary>
        /// The integration ID.
        /// </summary>
        [Input("integrationId", required: true)]
        public Input<string> IntegrationId { get; set; } = null!;

        public GetIntegrationInvokeArgs()
        {
        }
        public static new GetIntegrationInvokeArgs Empty => new GetIntegrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetIntegrationResult
    {
        /// <summary>
        /// The ID of the VPC link for a private integration. Supported only for HTTP APIs.
        /// </summary>
        public readonly string? ConnectionId;
        /// <summary>
        /// The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.
        /// </summary>
        public readonly string? ConnectionType;
        /// <summary>
        /// Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT.
        /// </summary>
        public readonly string? ContentHandlingStrategy;
        /// <summary>
        /// Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, don't specify this parameter.
        /// </summary>
        public readonly string? CredentialsArn;
        /// <summary>
        /// The description of the integration.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The integration ID.
        /// </summary>
        public readonly string? IntegrationId;
        /// <summary>
        /// Specifies the integration's HTTP method type.
        /// </summary>
        public readonly string? IntegrationMethod;
        /// <summary>
        /// Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS service action to invoke.
        /// </summary>
        public readonly string? IntegrationSubtype;
        /// <summary>
        /// The integration type of an integration.
        /// </summary>
        public readonly string? IntegrationType;
        /// <summary>
        /// For a Lambda integration, specify the URI of a Lambda function. For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
        /// </summary>
        public readonly string? IntegrationUri;
        /// <summary>
        /// Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
        /// </summary>
        public readonly string? PassthroughBehavior;
        /// <summary>
        /// Specifies the format of the payload sent to an integration. Required for HTTP APIs. For HTTP APIs, supported values for Lambda proxy integrations are 1.0 and 2.0 For all other integrations, 1.0 is the only supported value.
        /// </summary>
        public readonly string? PayloadFormatVersion;
        /// <summary>
        /// A key-value map specifying parameters.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? RequestParameters;
        /// <summary>
        /// A map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? RequestTemplates;
        /// <summary>
        /// Parameters that transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.IntegrationResponseParameterMap>? ResponseParameters;
        /// <summary>
        /// The template selection expression for the integration. Supported only for WebSocket APIs.
        /// </summary>
        public readonly string? TemplateSelectionExpression;
        /// <summary>
        /// Custom timeout between 50 and 29000 milliseconds for WebSocket APIs and between 50 and 30000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
        /// </summary>
        public readonly int? TimeoutInMillis;
        /// <summary>
        /// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
        /// </summary>
        public readonly Outputs.IntegrationTlsConfig? TlsConfig;

        [OutputConstructor]
        private GetIntegrationResult(
            string? connectionId,

            string? connectionType,

            string? contentHandlingStrategy,

            string? credentialsArn,

            string? description,

            string? integrationId,

            string? integrationMethod,

            string? integrationSubtype,

            string? integrationType,

            string? integrationUri,

            string? passthroughBehavior,

            string? payloadFormatVersion,

            ImmutableDictionary<string, string>? requestParameters,

            ImmutableDictionary<string, string>? requestTemplates,

            ImmutableDictionary<string, Outputs.IntegrationResponseParameterMap>? responseParameters,

            string? templateSelectionExpression,

            int? timeoutInMillis,

            Outputs.IntegrationTlsConfig? tlsConfig)
        {
            ConnectionId = connectionId;
            ConnectionType = connectionType;
            ContentHandlingStrategy = contentHandlingStrategy;
            CredentialsArn = credentialsArn;
            Description = description;
            IntegrationId = integrationId;
            IntegrationMethod = integrationMethod;
            IntegrationSubtype = integrationSubtype;
            IntegrationType = integrationType;
            IntegrationUri = integrationUri;
            PassthroughBehavior = passthroughBehavior;
            PayloadFormatVersion = payloadFormatVersion;
            RequestParameters = requestParameters;
            RequestTemplates = requestTemplates;
            ResponseParameters = responseParameters;
            TemplateSelectionExpression = templateSelectionExpression;
            TimeoutInMillis = timeoutInMillis;
            TlsConfig = tlsConfig;
        }
    }
}
