// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGatewayV2
{
    /// <summary>
    /// Resource Type definition for AWS::ApiGatewayV2::Api
    /// </summary>
    [Obsolete(@"Api is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:apigatewayv2:Api")]
    public partial class Api : Pulumi.CustomResource
    {
        [Output("apiEndpoint")]
        public Output<string> ApiEndpoint { get; private set; } = null!;

        [Output("apiKeySelectionExpression")]
        public Output<string?> ApiKeySelectionExpression { get; private set; } = null!;

        [Output("basePath")]
        public Output<string?> BasePath { get; private set; } = null!;

        [Output("body")]
        public Output<object?> Body { get; private set; } = null!;

        [Output("bodyS3Location")]
        public Output<Outputs.ApiBodyS3Location?> BodyS3Location { get; private set; } = null!;

        [Output("corsConfiguration")]
        public Output<Outputs.ApiCors?> CorsConfiguration { get; private set; } = null!;

        [Output("credentialsArn")]
        public Output<string?> CredentialsArn { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("disableExecuteApiEndpoint")]
        public Output<bool?> DisableExecuteApiEndpoint { get; private set; } = null!;

        [Output("disableSchemaValidation")]
        public Output<bool?> DisableSchemaValidation { get; private set; } = null!;

        [Output("failOnWarnings")]
        public Output<bool?> FailOnWarnings { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("protocolType")]
        public Output<string?> ProtocolType { get; private set; } = null!;

        [Output("routeKey")]
        public Output<string?> RouteKey { get; private set; } = null!;

        [Output("routeSelectionExpression")]
        public Output<string?> RouteSelectionExpression { get; private set; } = null!;

        [Output("tags")]
        public Output<object?> Tags { get; private set; } = null!;

        [Output("target")]
        public Output<string?> Target { get; private set; } = null!;

        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Api resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Api(string name, ApiArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:apigatewayv2:Api", name, args ?? new ApiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Api(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:apigatewayv2:Api", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Api resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Api Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Api(name, id, options);
        }
    }

    public sealed class ApiArgs : Pulumi.ResourceArgs
    {
        [Input("apiKeySelectionExpression")]
        public Input<string>? ApiKeySelectionExpression { get; set; }

        [Input("basePath")]
        public Input<string>? BasePath { get; set; }

        [Input("body")]
        public Input<object>? Body { get; set; }

        [Input("bodyS3Location")]
        public Input<Inputs.ApiBodyS3LocationArgs>? BodyS3Location { get; set; }

        [Input("corsConfiguration")]
        public Input<Inputs.ApiCorsArgs>? CorsConfiguration { get; set; }

        [Input("credentialsArn")]
        public Input<string>? CredentialsArn { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disableExecuteApiEndpoint")]
        public Input<bool>? DisableExecuteApiEndpoint { get; set; }

        [Input("disableSchemaValidation")]
        public Input<bool>? DisableSchemaValidation { get; set; }

        [Input("failOnWarnings")]
        public Input<bool>? FailOnWarnings { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("protocolType")]
        public Input<string>? ProtocolType { get; set; }

        [Input("routeKey")]
        public Input<string>? RouteKey { get; set; }

        [Input("routeSelectionExpression")]
        public Input<string>? RouteSelectionExpression { get; set; }

        [Input("tags")]
        public Input<object>? Tags { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public ApiArgs()
        {
        }
    }
}
