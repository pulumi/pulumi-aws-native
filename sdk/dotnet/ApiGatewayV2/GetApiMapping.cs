// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGatewayV2
{
    public static class GetApiMapping
    {
        /// <summary>
        /// Schema for AWS::ApiGatewayV2::ApiMapping
        /// </summary>
        public static Task<GetApiMappingResult> InvokeAsync(GetApiMappingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiMappingResult>("aws-native:apigatewayv2:getApiMapping", args ?? new GetApiMappingArgs(), options.WithDefaults());

        /// <summary>
        /// Schema for AWS::ApiGatewayV2::ApiMapping
        /// </summary>
        public static Output<GetApiMappingResult> Invoke(GetApiMappingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiMappingResult>("aws-native:apigatewayv2:getApiMapping", args ?? new GetApiMappingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiMappingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Api Mapping Id generated by service
        /// </summary>
        [Input("apiMappingId", required: true)]
        public string ApiMappingId { get; set; } = null!;

        /// <summary>
        /// The domain name
        /// </summary>
        [Input("domainName", required: true)]
        public string DomainName { get; set; } = null!;

        public GetApiMappingArgs()
        {
        }
        public static new GetApiMappingArgs Empty => new GetApiMappingArgs();
    }

    public sealed class GetApiMappingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Api Mapping Id generated by service
        /// </summary>
        [Input("apiMappingId", required: true)]
        public Input<string> ApiMappingId { get; set; } = null!;

        /// <summary>
        /// The domain name
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        public GetApiMappingInvokeArgs()
        {
        }
        public static new GetApiMappingInvokeArgs Empty => new GetApiMappingInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiMappingResult
    {
        /// <summary>
        /// The API identifier
        /// </summary>
        public readonly string? ApiId;
        /// <summary>
        /// Api Mapping Id generated by service
        /// </summary>
        public readonly string? ApiMappingId;
        /// <summary>
        /// The API mapping key
        /// </summary>
        public readonly string? ApiMappingKey;
        /// <summary>
        /// The API stage
        /// </summary>
        public readonly string? Stage;

        [OutputConstructor]
        private GetApiMappingResult(
            string? apiId,

            string? apiMappingId,

            string? apiMappingKey,

            string? stage)
        {
            ApiId = apiId;
            ApiMappingId = apiMappingId;
            ApiMappingKey = apiMappingKey;
            Stage = stage;
        }
    }
}
