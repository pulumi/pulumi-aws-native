// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGatewayV2
{
    /// <summary>
    /// An example resource schema demonstrating some basic constructs and validation rules.
    /// </summary>
    [AwsNativeResourceType("aws-native:apigatewayv2:Integration")]
    public partial class Integration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The API identifier.
        /// </summary>
        [Output("apiId")]
        public Output<string> ApiId { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC link for a private integration. Supported only for HTTP APIs.
        /// </summary>
        [Output("connectionId")]
        public Output<string?> ConnectionId { get; private set; } = null!;

        /// <summary>
        /// The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.
        /// </summary>
        [Output("connectionType")]
        public Output<string?> ConnectionType { get; private set; } = null!;

        /// <summary>
        /// Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT.
        /// </summary>
        [Output("contentHandlingStrategy")]
        public Output<string?> ContentHandlingStrategy { get; private set; } = null!;

        /// <summary>
        /// Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, don't specify this parameter.
        /// </summary>
        [Output("credentialsArn")]
        public Output<string?> CredentialsArn { get; private set; } = null!;

        /// <summary>
        /// The description of the integration.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The integration ID.
        /// </summary>
        [Output("integrationId")]
        public Output<string> IntegrationId { get; private set; } = null!;

        /// <summary>
        /// Specifies the integration's HTTP method type.
        /// </summary>
        [Output("integrationMethod")]
        public Output<string?> IntegrationMethod { get; private set; } = null!;

        /// <summary>
        /// Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS service action to invoke.
        /// </summary>
        [Output("integrationSubtype")]
        public Output<string?> IntegrationSubtype { get; private set; } = null!;

        /// <summary>
        /// The integration type of an integration.
        /// </summary>
        [Output("integrationType")]
        public Output<string> IntegrationType { get; private set; } = null!;

        /// <summary>
        /// For a Lambda integration, specify the URI of a Lambda function. For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
        /// </summary>
        [Output("integrationUri")]
        public Output<string?> IntegrationUri { get; private set; } = null!;

        /// <summary>
        /// Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
        /// </summary>
        [Output("passthroughBehavior")]
        public Output<string?> PassthroughBehavior { get; private set; } = null!;

        /// <summary>
        /// Specifies the format of the payload sent to an integration. Required for HTTP APIs. For HTTP APIs, supported values for Lambda proxy integrations are 1.0 and 2.0 For all other integrations, 1.0 is the only supported value.
        /// </summary>
        [Output("payloadFormatVersion")]
        public Output<string?> PayloadFormatVersion { get; private set; } = null!;

        /// <summary>
        /// A key-value map specifying parameters.
        /// </summary>
        [Output("requestParameters")]
        public Output<ImmutableDictionary<string, string>?> RequestParameters { get; private set; } = null!;

        /// <summary>
        /// A map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
        /// </summary>
        [Output("requestTemplates")]
        public Output<ImmutableDictionary<string, string>?> RequestTemplates { get; private set; } = null!;

        /// <summary>
        /// Parameters that transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
        /// </summary>
        [Output("responseParameters")]
        public Output<ImmutableDictionary<string, Outputs.IntegrationResponseParameterMap>?> ResponseParameters { get; private set; } = null!;

        /// <summary>
        /// The template selection expression for the integration. Supported only for WebSocket APIs.
        /// </summary>
        [Output("templateSelectionExpression")]
        public Output<string?> TemplateSelectionExpression { get; private set; } = null!;

        /// <summary>
        /// Custom timeout between 50 and 29000 milliseconds for WebSocket APIs and between 50 and 30000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
        /// </summary>
        [Output("timeoutInMillis")]
        public Output<int?> TimeoutInMillis { get; private set; } = null!;

        /// <summary>
        /// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
        /// </summary>
        [Output("tlsConfig")]
        public Output<Outputs.IntegrationTlsConfig?> TlsConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Integration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Integration(string name, IntegrationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:apigatewayv2:Integration", name, args ?? new IntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Integration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:apigatewayv2:Integration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "apiId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Integration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Integration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Integration(name, id, options);
        }
    }

    public sealed class IntegrationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The API identifier.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        /// <summary>
        /// The ID of the VPC link for a private integration. Supported only for HTTP APIs.
        /// </summary>
        [Input("connectionId")]
        public Input<string>? ConnectionId { get; set; }

        /// <summary>
        /// The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.
        /// </summary>
        [Input("connectionType")]
        public Input<string>? ConnectionType { get; set; }

        /// <summary>
        /// Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT.
        /// </summary>
        [Input("contentHandlingStrategy")]
        public Input<string>? ContentHandlingStrategy { get; set; }

        /// <summary>
        /// Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, don't specify this parameter.
        /// </summary>
        [Input("credentialsArn")]
        public Input<string>? CredentialsArn { get; set; }

        /// <summary>
        /// The description of the integration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the integration's HTTP method type.
        /// </summary>
        [Input("integrationMethod")]
        public Input<string>? IntegrationMethod { get; set; }

        /// <summary>
        /// Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS service action to invoke.
        /// </summary>
        [Input("integrationSubtype")]
        public Input<string>? IntegrationSubtype { get; set; }

        /// <summary>
        /// The integration type of an integration.
        /// </summary>
        [Input("integrationType", required: true)]
        public Input<string> IntegrationType { get; set; } = null!;

        /// <summary>
        /// For a Lambda integration, specify the URI of a Lambda function. For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
        /// </summary>
        [Input("integrationUri")]
        public Input<string>? IntegrationUri { get; set; }

        /// <summary>
        /// Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
        /// </summary>
        [Input("passthroughBehavior")]
        public Input<string>? PassthroughBehavior { get; set; }

        /// <summary>
        /// Specifies the format of the payload sent to an integration. Required for HTTP APIs. For HTTP APIs, supported values for Lambda proxy integrations are 1.0 and 2.0 For all other integrations, 1.0 is the only supported value.
        /// </summary>
        [Input("payloadFormatVersion")]
        public Input<string>? PayloadFormatVersion { get; set; }

        [Input("requestParameters")]
        private InputMap<string>? _requestParameters;

        /// <summary>
        /// A key-value map specifying parameters.
        /// </summary>
        public InputMap<string> RequestParameters
        {
            get => _requestParameters ?? (_requestParameters = new InputMap<string>());
            set => _requestParameters = value;
        }

        [Input("requestTemplates")]
        private InputMap<string>? _requestTemplates;

        /// <summary>
        /// A map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
        /// </summary>
        public InputMap<string> RequestTemplates
        {
            get => _requestTemplates ?? (_requestTemplates = new InputMap<string>());
            set => _requestTemplates = value;
        }

        [Input("responseParameters")]
        private InputMap<Inputs.IntegrationResponseParameterMapArgs>? _responseParameters;

        /// <summary>
        /// Parameters that transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
        /// </summary>
        public InputMap<Inputs.IntegrationResponseParameterMapArgs> ResponseParameters
        {
            get => _responseParameters ?? (_responseParameters = new InputMap<Inputs.IntegrationResponseParameterMapArgs>());
            set => _responseParameters = value;
        }

        /// <summary>
        /// The template selection expression for the integration. Supported only for WebSocket APIs.
        /// </summary>
        [Input("templateSelectionExpression")]
        public Input<string>? TemplateSelectionExpression { get; set; }

        /// <summary>
        /// Custom timeout between 50 and 29000 milliseconds for WebSocket APIs and between 50 and 30000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
        /// </summary>
        [Input("timeoutInMillis")]
        public Input<int>? TimeoutInMillis { get; set; }

        /// <summary>
        /// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
        /// </summary>
        [Input("tlsConfig")]
        public Input<Inputs.IntegrationTlsConfigArgs>? TlsConfig { get; set; }

        public IntegrationArgs()
        {
        }
        public static new IntegrationArgs Empty => new IntegrationArgs();
    }
}
