// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGatewayV2
{
    /// <summary>
    /// Resource Type definition for AWS::ApiGatewayV2::Integration
    /// </summary>
    [Obsolete(@"Integration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:apigatewayv2:Integration")]
    public partial class Integration : Pulumi.CustomResource
    {
        [Output("apiId")]
        public Output<string> ApiId { get; private set; } = null!;

        [Output("connectionId")]
        public Output<string?> ConnectionId { get; private set; } = null!;

        [Output("connectionType")]
        public Output<string?> ConnectionType { get; private set; } = null!;

        [Output("contentHandlingStrategy")]
        public Output<string?> ContentHandlingStrategy { get; private set; } = null!;

        [Output("credentialsArn")]
        public Output<string?> CredentialsArn { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("integrationMethod")]
        public Output<string?> IntegrationMethod { get; private set; } = null!;

        [Output("integrationSubtype")]
        public Output<string?> IntegrationSubtype { get; private set; } = null!;

        [Output("integrationType")]
        public Output<string> IntegrationType { get; private set; } = null!;

        [Output("integrationUri")]
        public Output<string?> IntegrationUri { get; private set; } = null!;

        [Output("passthroughBehavior")]
        public Output<string?> PassthroughBehavior { get; private set; } = null!;

        [Output("payloadFormatVersion")]
        public Output<string?> PayloadFormatVersion { get; private set; } = null!;

        [Output("requestParameters")]
        public Output<object?> RequestParameters { get; private set; } = null!;

        [Output("requestTemplates")]
        public Output<object?> RequestTemplates { get; private set; } = null!;

        [Output("responseParameters")]
        public Output<object?> ResponseParameters { get; private set; } = null!;

        [Output("templateSelectionExpression")]
        public Output<string?> TemplateSelectionExpression { get; private set; } = null!;

        [Output("timeoutInMillis")]
        public Output<int?> TimeoutInMillis { get; private set; } = null!;

        [Output("tlsConfig")]
        public Output<Outputs.IntegrationTlsConfig?> TlsConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Integration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Integration(string name, IntegrationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:apigatewayv2:Integration", name, args ?? new IntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Integration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:apigatewayv2:Integration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Integration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Integration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Integration(name, id, options);
        }
    }

    public sealed class IntegrationArgs : Pulumi.ResourceArgs
    {
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        [Input("connectionId")]
        public Input<string>? ConnectionId { get; set; }

        [Input("connectionType")]
        public Input<string>? ConnectionType { get; set; }

        [Input("contentHandlingStrategy")]
        public Input<string>? ContentHandlingStrategy { get; set; }

        [Input("credentialsArn")]
        public Input<string>? CredentialsArn { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("integrationMethod")]
        public Input<string>? IntegrationMethod { get; set; }

        [Input("integrationSubtype")]
        public Input<string>? IntegrationSubtype { get; set; }

        [Input("integrationType", required: true)]
        public Input<string> IntegrationType { get; set; } = null!;

        [Input("integrationUri")]
        public Input<string>? IntegrationUri { get; set; }

        [Input("passthroughBehavior")]
        public Input<string>? PassthroughBehavior { get; set; }

        [Input("payloadFormatVersion")]
        public Input<string>? PayloadFormatVersion { get; set; }

        [Input("requestParameters")]
        public Input<object>? RequestParameters { get; set; }

        [Input("requestTemplates")]
        public Input<object>? RequestTemplates { get; set; }

        [Input("responseParameters")]
        public Input<object>? ResponseParameters { get; set; }

        [Input("templateSelectionExpression")]
        public Input<string>? TemplateSelectionExpression { get; set; }

        [Input("timeoutInMillis")]
        public Input<int>? TimeoutInMillis { get; set; }

        [Input("tlsConfig")]
        public Input<Inputs.IntegrationTlsConfigArgs>? TlsConfig { get; set; }

        public IntegrationArgs()
        {
        }
    }
}
