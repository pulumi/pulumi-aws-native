// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ApiGatewayV2
{
    /// <summary>
    /// The ``AWS::ApiGatewayV2::DomainName`` resource specifies a custom domain name for your API in Amazon API Gateway (API Gateway).
    ///  You can use a custom domain name to provide a URL that's more intuitive and easier to recall. For more information about using custom domain names, see [Set up Custom Domain Name for an API in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html) in the *API Gateway Developer Guide*.
    /// </summary>
    [AwsNativeResourceType("aws-native:apigatewayv2:DomainName")]
    public partial class DomainName : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The custom domain name for your API in Amazon API Gateway. Uppercase letters are not supported.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainNameValue { get; private set; } = null!;

        /// <summary>
        /// The domain name configurations.
        /// </summary>
        [Output("domainNameConfigurations")]
        public Output<ImmutableArray<Outputs.DomainNameConfiguration>> DomainNameConfigurations { get; private set; } = null!;

        /// <summary>
        /// The mutual TLS authentication configuration for a custom domain name.
        /// </summary>
        [Output("mutualTlsAuthentication")]
        public Output<Outputs.DomainNameMutualTlsAuthentication?> MutualTlsAuthentication { get; private set; } = null!;

        [Output("regionalDomainName")]
        public Output<string> RegionalDomainName { get; private set; } = null!;

        [Output("regionalHostedZoneId")]
        public Output<string> RegionalHostedZoneId { get; private set; } = null!;

        /// <summary>
        /// The collection of tags associated with a domain name.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DomainName resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainName(string name, DomainNameArgs args, CustomResourceOptions? options = null)
            : base("aws-native:apigatewayv2:DomainName", name, args ?? new DomainNameArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainName(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:apigatewayv2:DomainName", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "domainName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainName resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainName Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DomainName(name, id, options);
        }
    }

    public sealed class DomainNameArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The custom domain name for your API in Amazon API Gateway. Uppercase letters are not supported.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainNameValue { get; set; } = null!;

        [Input("domainNameConfigurations")]
        private InputList<Inputs.DomainNameConfigurationArgs>? _domainNameConfigurations;

        /// <summary>
        /// The domain name configurations.
        /// </summary>
        public InputList<Inputs.DomainNameConfigurationArgs> DomainNameConfigurations
        {
            get => _domainNameConfigurations ?? (_domainNameConfigurations = new InputList<Inputs.DomainNameConfigurationArgs>());
            set => _domainNameConfigurations = value;
        }

        /// <summary>
        /// The mutual TLS authentication configuration for a custom domain name.
        /// </summary>
        [Input("mutualTlsAuthentication")]
        public Input<Inputs.DomainNameMutualTlsAuthenticationArgs>? MutualTlsAuthentication { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The collection of tags associated with a domain name.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DomainNameArgs()
        {
        }
        public static new DomainNameArgs Empty => new DomainNameArgs();
    }
}
