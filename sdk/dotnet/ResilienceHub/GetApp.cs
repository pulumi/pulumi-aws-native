// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ResilienceHub
{
    public static class GetApp
    {
        /// <summary>
        /// Resource Type Definition for AWS::ResilienceHub::App.
        /// </summary>
        public static Task<GetAppResult> InvokeAsync(GetAppArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppResult>("aws-native:resiliencehub:getApp", args ?? new GetAppArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type Definition for AWS::ResilienceHub::App.
        /// </summary>
        public static Output<GetAppResult> Invoke(GetAppInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppResult>("aws-native:resiliencehub:getApp", args ?? new GetAppInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the App.
        /// </summary>
        [Input("appArn", required: true)]
        public string AppArn { get; set; } = null!;

        public GetAppArgs()
        {
        }
        public static new GetAppArgs Empty => new GetAppArgs();
    }

    public sealed class GetAppInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the App.
        /// </summary>
        [Input("appArn", required: true)]
        public Input<string> AppArn { get; set; } = null!;

        public GetAppInvokeArgs()
        {
        }
        public static new GetAppInvokeArgs Empty => new GetAppInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppResult
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the App.
        /// </summary>
        public readonly string? AppArn;
        /// <summary>
        /// Assessment execution schedule.
        /// </summary>
        public readonly Pulumi.AwsNative.ResilienceHub.AppAssessmentSchedule? AppAssessmentSchedule;
        /// <summary>
        /// A string containing full ResilienceHub app template body.
        /// </summary>
        public readonly string? AppTemplateBody;
        /// <summary>
        /// App description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Indicates if compliance drifts (deviations) were detected while running an assessment for your application.
        /// </summary>
        public readonly Pulumi.AwsNative.ResilienceHub.AppDriftStatus? DriftStatus;
        /// <summary>
        /// The list of events you would like to subscribe and get notification for.
        /// </summary>
        public readonly ImmutableArray<Outputs.AppEventSubscription> EventSubscriptions;
        public readonly Outputs.AppPermissionModel? PermissionModel;
        /// <summary>
        /// Amazon Resource Name (ARN) of the Resiliency Policy.
        /// </summary>
        public readonly string? ResiliencyPolicyArn;
        /// <summary>
        /// An array of ResourceMapping objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.AppResourceMapping> ResourceMappings;
        public readonly Outputs.AppTagMap? Tags;

        [OutputConstructor]
        private GetAppResult(
            string? appArn,

            Pulumi.AwsNative.ResilienceHub.AppAssessmentSchedule? appAssessmentSchedule,

            string? appTemplateBody,

            string? description,

            Pulumi.AwsNative.ResilienceHub.AppDriftStatus? driftStatus,

            ImmutableArray<Outputs.AppEventSubscription> eventSubscriptions,

            Outputs.AppPermissionModel? permissionModel,

            string? resiliencyPolicyArn,

            ImmutableArray<Outputs.AppResourceMapping> resourceMappings,

            Outputs.AppTagMap? tags)
        {
            AppArn = appArn;
            AppAssessmentSchedule = appAssessmentSchedule;
            AppTemplateBody = appTemplateBody;
            Description = description;
            DriftStatus = driftStatus;
            EventSubscriptions = eventSubscriptions;
            PermissionModel = permissionModel;
            ResiliencyPolicyArn = resiliencyPolicyArn;
            ResourceMappings = resourceMappings;
            Tags = tags;
        }
    }
}
