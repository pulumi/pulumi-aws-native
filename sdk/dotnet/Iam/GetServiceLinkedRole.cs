// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Iam
{
    public static class GetServiceLinkedRole
    {
        /// <summary>
        /// Resource Type definition for AWS::IAM::ServiceLinkedRole
        /// </summary>
        public static Task<GetServiceLinkedRoleResult> InvokeAsync(GetServiceLinkedRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceLinkedRoleResult>("aws-native:iam:getServiceLinkedRole", args ?? new GetServiceLinkedRoleArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::IAM::ServiceLinkedRole
        /// </summary>
        public static Output<GetServiceLinkedRoleResult> Invoke(GetServiceLinkedRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceLinkedRoleResult>("aws-native:iam:getServiceLinkedRole", args ?? new GetServiceLinkedRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceLinkedRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the role.
        /// </summary>
        [Input("roleName", required: true)]
        public string RoleName { get; set; } = null!;

        public GetServiceLinkedRoleArgs()
        {
        }
        public static new GetServiceLinkedRoleArgs Empty => new GetServiceLinkedRoleArgs();
    }

    public sealed class GetServiceLinkedRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the role.
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        public GetServiceLinkedRoleInvokeArgs()
        {
        }
        public static new GetServiceLinkedRoleInvokeArgs Empty => new GetServiceLinkedRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceLinkedRoleResult
    {
        /// <summary>
        /// The description of the role.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The name of the role.
        /// </summary>
        public readonly string? RoleName;

        [OutputConstructor]
        private GetServiceLinkedRoleResult(
            string? description,

            string? roleName)
        {
            Description = description;
            RoleName = roleName;
        }
    }
}
