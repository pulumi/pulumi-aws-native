// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Iam
{
    /// <summary>
    /// Adds or updates an inline policy document that is embedded in the specified IAM group.
    ///  A group can also have managed policies attached to it. To attach a managed policy to a group, use [AWS::IAM::Group](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html). To create a new managed policy, use [AWS::IAM::ManagedPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html). For information about policies, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
    ///  For information about the maximum number of inline policies that you can embed in a group, see [IAM and quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html) in the *IAM User Guide*.
    /// </summary>
    [AwsNativeResourceType("aws-native:iam:GroupPolicy")]
    public partial class GroupPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the group to associate the policy with.
        ///  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.
        /// </summary>
        [Output("groupName")]
        public Output<string> GroupName { get; private set; } = null!;

        /// <summary>
        /// The policy document.
        ///  You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
        ///  The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
        ///   +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
        ///   +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
        ///   +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::IAM::GroupPolicy` for more information about the expected schema for this property.
        /// </summary>
        [Output("policyDocument")]
        public Output<object?> PolicyDocument { get; private set; } = null!;

        /// <summary>
        /// The name of the policy document.
        ///  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
        /// </summary>
        [Output("policyName")]
        public Output<string> PolicyName { get; private set; } = null!;


        /// <summary>
        /// Create a GroupPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupPolicy(string name, GroupPolicyArgs args, CustomResourceOptions? options = null)
            : base("aws-native:iam:GroupPolicy", name, args ?? new GroupPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:iam:GroupPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "groupName",
                    "policyName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GroupPolicy(name, id, options);
        }
    }

    public sealed class GroupPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the group to associate the policy with.
        ///  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// The policy document.
        ///  You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
        ///  The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
        ///   +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
        ///   +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
        ///   +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::IAM::GroupPolicy` for more information about the expected schema for this property.
        /// </summary>
        [Input("policyDocument")]
        public Input<object>? PolicyDocument { get; set; }

        /// <summary>
        /// The name of the policy document.
        ///  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
        /// </summary>
        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        public GroupPolicyArgs()
        {
        }
        public static new GroupPolicyArgs Empty => new GroupPolicyArgs();
    }
}
