// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Iam
{
    public static class GetUserPolicy
    {
        /// <summary>
        /// Schema for IAM User Policy
        /// </summary>
        public static Task<GetUserPolicyResult> InvokeAsync(GetUserPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserPolicyResult>("aws-native:iam:getUserPolicy", args ?? new GetUserPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Schema for IAM User Policy
        /// </summary>
        public static Output<GetUserPolicyResult> Invoke(GetUserPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserPolicyResult>("aws-native:iam:getUserPolicy", args ?? new GetUserPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the policy document.
        /// </summary>
        [Input("policyName", required: true)]
        public string PolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the user to associate the policy with.
        /// </summary>
        [Input("userName", required: true)]
        public string UserName { get; set; } = null!;

        public GetUserPolicyArgs()
        {
        }
        public static new GetUserPolicyArgs Empty => new GetUserPolicyArgs();
    }

    public sealed class GetUserPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the policy document.
        /// </summary>
        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        /// <summary>
        /// The name of the user to associate the policy with.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public GetUserPolicyInvokeArgs()
        {
        }
        public static new GetUserPolicyInvokeArgs Empty => new GetUserPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserPolicyResult
    {
        /// <summary>
        /// The policy document.
        /// </summary>
        public readonly object? PolicyDocument;

        [OutputConstructor]
        private GetUserPolicyResult(object? policyDocument)
        {
            PolicyDocument = policyDocument;
        }
    }
}
