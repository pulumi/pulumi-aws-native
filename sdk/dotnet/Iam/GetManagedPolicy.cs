// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Iam
{
    public static class GetManagedPolicy
    {
        /// <summary>
        /// Creates a new managed policy for your AWS-account.
        ///  This operation creates a policy version with a version identifier of ``v1`` and sets v1 as the policy's default version. For more information about policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the *IAM User Guide*.
        ///  As a best practice, you can validate your IAM policies. To learn more, see [Validating IAM policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html) in the *IAM User Guide*.
        ///  For more information about managed policies in general, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
        /// </summary>
        public static Task<GetManagedPolicyResult> InvokeAsync(GetManagedPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedPolicyResult>("aws-native:iam:getManagedPolicy", args ?? new GetManagedPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Creates a new managed policy for your AWS-account.
        ///  This operation creates a policy version with a version identifier of ``v1`` and sets v1 as the policy's default version. For more information about policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the *IAM User Guide*.
        ///  As a best practice, you can validate your IAM policies. To learn more, see [Validating IAM policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html) in the *IAM User Guide*.
        ///  For more information about managed policies in general, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
        /// </summary>
        public static Output<GetManagedPolicyResult> Invoke(GetManagedPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedPolicyResult>("aws-native:iam:getManagedPolicy", args ?? new GetManagedPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Creates a new managed policy for your AWS-account.
        ///  This operation creates a policy version with a version identifier of ``v1`` and sets v1 as the policy's default version. For more information about policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the *IAM User Guide*.
        ///  As a best practice, you can validate your IAM policies. To learn more, see [Validating IAM policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html) in the *IAM User Guide*.
        ///  For more information about managed policies in general, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
        /// </summary>
        public static Output<GetManagedPolicyResult> Invoke(GetManagedPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedPolicyResult>("aws-native:iam:getManagedPolicy", args ?? new GetManagedPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("policyArn", required: true)]
        public string PolicyArn { get; set; } = null!;

        public GetManagedPolicyArgs()
        {
        }
        public static new GetManagedPolicyArgs Empty => new GetManagedPolicyArgs();
    }

    public sealed class GetManagedPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("policyArn", required: true)]
        public Input<string> PolicyArn { get; set; } = null!;

        public GetManagedPolicyInvokeArgs()
        {
        }
        public static new GetManagedPolicyInvokeArgs Empty => new GetManagedPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedPolicyResult
    {
        public readonly int? AttachmentCount;
        public readonly string? CreateDate;
        public readonly string? DefaultVersionId;
        /// <summary>
        /// The name (friendly name, not ARN) of the group to attach the policy to.
        ///  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
        /// </summary>
        public readonly ImmutableArray<string> Groups;
        public readonly bool? IsAttachable;
        public readonly int? PermissionsBoundaryUsageCount;
        public readonly string? PolicyArn;
        /// <summary>
        /// The JSON policy document that you want to use as the content for the new policy.
        ///  You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
        ///  The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see [IAM and character quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).
        ///  To learn more about JSON policy grammar, see [Grammar of the IAM JSON policy language](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html) in the *IAM User Guide*. 
        ///  The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
        ///   +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
        ///   +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
        ///   +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::IAM::ManagedPolicy` for more information about the expected schema for this property.
        /// </summary>
        public readonly object? PolicyDocument;
        public readonly string? PolicyId;
        /// <summary>
        /// The name (friendly name, not ARN) of the role to attach the policy to.
        ///  This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
        ///   If an external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn`` attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
        /// </summary>
        public readonly ImmutableArray<string> Roles;
        public readonly string? UpdateDate;
        /// <summary>
        /// The name (friendly name, not ARN) of the IAM user to attach the policy to.
        ///  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
        /// </summary>
        public readonly ImmutableArray<string> Users;

        [OutputConstructor]
        private GetManagedPolicyResult(
            int? attachmentCount,

            string? createDate,

            string? defaultVersionId,

            ImmutableArray<string> groups,

            bool? isAttachable,

            int? permissionsBoundaryUsageCount,

            string? policyArn,

            object? policyDocument,

            string? policyId,

            ImmutableArray<string> roles,

            string? updateDate,

            ImmutableArray<string> users)
        {
            AttachmentCount = attachmentCount;
            CreateDate = createDate;
            DefaultVersionId = defaultVersionId;
            Groups = groups;
            IsAttachable = isAttachable;
            PermissionsBoundaryUsageCount = permissionsBoundaryUsageCount;
            PolicyArn = policyArn;
            PolicyDocument = policyDocument;
            PolicyId = policyId;
            Roles = roles;
            UpdateDate = updateDate;
            Users = users;
        }
    }
}
