// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Iam
{
    public static class GetUser
    {
        /// <summary>
        /// Resource Type definition for AWS::IAM::User
        /// </summary>
        public static Task<GetUserResult> InvokeAsync(GetUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("aws-native:iam:getUser", args ?? new GetUserArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::IAM::User
        /// </summary>
        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("aws-native:iam:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The friendly name identifying the user.
        /// </summary>
        [Input("userName", required: true)]
        public string UserName { get; set; } = null!;

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The friendly name identifying the user.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see IAM Identifiers in the IAM User Guide.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// A list of group names to which you want to add the user.
        /// </summary>
        public readonly ImmutableArray<string> Groups;
        /// <summary>
        /// Creates a password for the specified IAM user. A password allows an IAM user to access AWS services through the AWS Management Console.
        /// </summary>
        public readonly Outputs.UserLoginProfile? LoginProfile;
        /// <summary>
        /// A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
        /// </summary>
        public readonly ImmutableArray<string> ManagedPolicyArns;
        /// <summary>
        /// The path to the user. For more information about paths, see IAM identifiers in the IAM User Guide. The ARN of the policy used to set the permissions boundary for the user.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// The ARN of the policy that is used to set the permissions boundary for the user.
        /// </summary>
        public readonly string? PermissionsBoundary;
        /// <summary>
        /// Adds or updates an inline policy document that is embedded in the specified IAM role.
        /// </summary>
        public readonly ImmutableArray<Outputs.UserPolicy> Policies;
        /// <summary>
        /// A list of tags that are associated with the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetUserResult(
            string? arn,

            ImmutableArray<string> groups,

            Outputs.UserLoginProfile? loginProfile,

            ImmutableArray<string> managedPolicyArns,

            string? path,

            string? permissionsBoundary,

            ImmutableArray<Outputs.UserPolicy> policies,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            Groups = groups;
            LoginProfile = loginProfile;
            ManagedPolicyArns = managedPolicyArns;
            Path = path;
            PermissionsBoundary = permissionsBoundary;
            Policies = policies;
            Tags = tags;
        }
    }
}
