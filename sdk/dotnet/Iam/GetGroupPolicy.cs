// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Iam
{
    public static class GetGroupPolicy
    {
        /// <summary>
        /// Schema for IAM Group Policy
        /// </summary>
        public static Task<GetGroupPolicyResult> InvokeAsync(GetGroupPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupPolicyResult>("aws-native:iam:getGroupPolicy", args ?? new GetGroupPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Schema for IAM Group Policy
        /// </summary>
        public static Output<GetGroupPolicyResult> Invoke(GetGroupPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupPolicyResult>("aws-native:iam:getGroupPolicy", args ?? new GetGroupPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the group to associate the policy with.
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        /// <summary>
        /// The name of the policy document.
        /// </summary>
        [Input("policyName", required: true)]
        public string PolicyName { get; set; } = null!;

        public GetGroupPolicyArgs()
        {
        }
        public static new GetGroupPolicyArgs Empty => new GetGroupPolicyArgs();
    }

    public sealed class GetGroupPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the group to associate the policy with.
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// The name of the policy document.
        /// </summary>
        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        public GetGroupPolicyInvokeArgs()
        {
        }
        public static new GetGroupPolicyInvokeArgs Empty => new GetGroupPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupPolicyResult
    {
        /// <summary>
        /// The policy document.
        /// </summary>
        public readonly object? PolicyDocument;

        [OutputConstructor]
        private GetGroupPolicyResult(object? policyDocument)
        {
            PolicyDocument = policyDocument;
        }
    }
}
