// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityHub
{
    /// <summary>
    /// The AWS::SecurityHub::Hub resource represents the implementation of the AWS Security Hub service in your account. One hub resource is created for each Region in which you enable Security Hub.
    /// </summary>
    [AwsNativeResourceType("aws-native:securityhub:Hub")]
    public partial class Hub : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An ARN is automatically created for the customer.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Whether to automatically enable new controls when they are added to standards that are enabled
        /// </summary>
        [Output("autoEnableControls")]
        public Output<bool?> AutoEnableControls { get; private set; } = null!;

        /// <summary>
        /// This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
        /// </summary>
        [Output("controlFindingGenerator")]
        public Output<string?> ControlFindingGenerator { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the security standards that Security Hub has designated as automatically enabled.
        /// </summary>
        [Output("enableDefaultStandards")]
        public Output<bool?> EnableDefaultStandards { get; private set; } = null!;

        /// <summary>
        /// The date and time when Security Hub was enabled in the account.
        /// </summary>
        [Output("subscribedAt")]
        public Output<string> SubscribedAt { get; private set; } = null!;

        [Output("tags")]
        public Output<Outputs.HubTags?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Hub resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Hub(string name, HubArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:Hub", name, args ?? new HubArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Hub(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:Hub", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Hub resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Hub Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Hub(name, id, options);
        }
    }

    public sealed class HubArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to automatically enable new controls when they are added to standards that are enabled
        /// </summary>
        [Input("autoEnableControls")]
        public Input<bool>? AutoEnableControls { get; set; }

        /// <summary>
        /// This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
        /// </summary>
        [Input("controlFindingGenerator")]
        public Input<string>? ControlFindingGenerator { get; set; }

        /// <summary>
        /// Whether to enable the security standards that Security Hub has designated as automatically enabled.
        /// </summary>
        [Input("enableDefaultStandards")]
        public Input<bool>? EnableDefaultStandards { get; set; }

        [Input("tags")]
        public Input<Inputs.HubTagsArgs>? Tags { get; set; }

        public HubArgs()
        {
        }
        public static new HubArgs Empty => new HubArgs();
    }
}
