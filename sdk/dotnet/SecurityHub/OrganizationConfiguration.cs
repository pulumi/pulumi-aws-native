// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityHub
{
    /// <summary>
    /// The AWS::SecurityHub::OrganizationConfiguration resource represents the configuration of your organization in Security Hub. Only the Security Hub administrator account can create Organization Configuration resource in each region and can opt-in to Central Configuration only in the aggregation region of FindingAggregator.
    /// </summary>
    [AwsNativeResourceType("aws-native:securityhub:OrganizationConfiguration")]
    public partial class OrganizationConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to automatically enable Security Hub in new member accounts when they join the organization.
        /// </summary>
        [Output("autoEnable")]
        public Output<bool> AutoEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
        /// </summary>
        [Output("autoEnableStandards")]
        public Output<Pulumi.AwsNative.SecurityHub.OrganizationConfigurationAutoEnableStandards?> AutoEnableStandards { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the organization uses local or central configuration.
        /// </summary>
        [Output("configurationType")]
        public Output<Pulumi.AwsNative.SecurityHub.OrganizationConfigurationConfigurationType?> ConfigurationType { get; private set; } = null!;

        /// <summary>
        /// Whether the maximum number of allowed member accounts are already associated with the Security Hub administrator account.
        /// </summary>
        [Output("memberAccountLimitReached")]
        public Output<bool> MemberAccountLimitReached { get; private set; } = null!;

        /// <summary>
        /// The identifier of the OrganizationConfiguration being created and assigned as the unique identifier.
        /// </summary>
        [Output("organizationConfigurationIdentifier")]
        public Output<string> OrganizationConfigurationIdentifier { get; private set; } = null!;

        /// <summary>
        /// Describes whether central configuration could be enabled as the ConfigurationType for the organization.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.SecurityHub.OrganizationConfigurationStatus> Status { get; private set; } = null!;

        /// <summary>
        /// Provides an explanation if the value of Status is equal to FAILED when ConfigurationType is equal to CENTRAL.
        /// </summary>
        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationConfiguration(string name, OrganizationConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:OrganizationConfiguration", name, args ?? new OrganizationConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:OrganizationConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new OrganizationConfiguration(name, id, options);
        }
    }

    public sealed class OrganizationConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to automatically enable Security Hub in new member accounts when they join the organization.
        /// </summary>
        [Input("autoEnable", required: true)]
        public Input<bool> AutoEnable { get; set; } = null!;

        /// <summary>
        /// Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
        /// </summary>
        [Input("autoEnableStandards")]
        public Input<Pulumi.AwsNative.SecurityHub.OrganizationConfigurationAutoEnableStandards>? AutoEnableStandards { get; set; }

        /// <summary>
        /// Indicates whether the organization uses local or central configuration.
        /// </summary>
        [Input("configurationType")]
        public Input<Pulumi.AwsNative.SecurityHub.OrganizationConfigurationConfigurationType>? ConfigurationType { get; set; }

        public OrganizationConfigurationArgs()
        {
        }
        public static new OrganizationConfigurationArgs Empty => new OrganizationConfigurationArgs();
    }
}
