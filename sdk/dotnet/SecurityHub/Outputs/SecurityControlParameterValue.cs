// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityHub.Outputs
{

    [OutputType]
    public sealed class SecurityControlParameterValue
    {
        /// <summary>
        /// A control parameter that is a boolean.
        /// </summary>
        public readonly bool? Boolean;
        /// <summary>
        /// A control parameter that is a double.
        /// </summary>
        public readonly double? Double;
        /// <summary>
        /// A control parameter that is a enum.
        /// </summary>
        public readonly string? Enum;
        /// <summary>
        /// A control parameter that is a list of enums.
        /// </summary>
        public readonly ImmutableArray<string> EnumList;
        /// <summary>
        /// A control parameter that is a integer.
        /// </summary>
        public readonly int? Integer;
        /// <summary>
        /// A control parameter that is a list of integers.
        /// </summary>
        public readonly ImmutableArray<int> IntegerList;
        /// <summary>
        /// A control parameter that is a string.
        /// </summary>
        public readonly string? String;
        /// <summary>
        /// A control parameter that is a list of strings.
        /// </summary>
        public readonly ImmutableArray<string> StringList;

        [OutputConstructor]
        private SecurityControlParameterValue(
            bool? boolean,

            double? @double,

            string? @enum,

            ImmutableArray<string> enumList,

            int? integer,

            ImmutableArray<int> integerList,

            string? @string,

            ImmutableArray<string> stringList)
        {
            Boolean = boolean;
            Double = @double;
            Enum = @enum;
            EnumList = enumList;
            Integer = integer;
            IntegerList = integerList;
            String = @string;
            StringList = stringList;
        }
    }
}
