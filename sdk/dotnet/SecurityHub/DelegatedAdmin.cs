// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityHub
{
    /// <summary>
    /// The AWS::SecurityHub::DelegatedAdmin resource represents the AWS Security Hub delegated admin account in your organization. One delegated admin resource is allowed to create for the organization in each region in which you configure the AdminAccountId.
    /// </summary>
    [AwsNativeResourceType("aws-native:securityhub:DelegatedAdmin")]
    public partial class DelegatedAdmin : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Web Services account identifier of the account to designate as the Security Hub administrator account
        /// </summary>
        [Output("adminAccountId")]
        public Output<string> AdminAccountId { get; private set; } = null!;

        /// <summary>
        /// The identifier of the DelegatedAdmin being created and assigned as the unique identifier
        /// </summary>
        [Output("delegatedAdminIdentifier")]
        public Output<string> DelegatedAdminIdentifier { get; private set; } = null!;

        /// <summary>
        /// The current status of the Security Hub administrator account. Indicates whether the account is currently enabled as a Security Hub administrator
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.SecurityHub.DelegatedAdminStatus> Status { get; private set; } = null!;


        /// <summary>
        /// Create a DelegatedAdmin resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DelegatedAdmin(string name, DelegatedAdminArgs args, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:DelegatedAdmin", name, args ?? new DelegatedAdminArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DelegatedAdmin(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:DelegatedAdmin", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "adminAccountId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DelegatedAdmin resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DelegatedAdmin Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DelegatedAdmin(name, id, options);
        }
    }

    public sealed class DelegatedAdminArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Web Services account identifier of the account to designate as the Security Hub administrator account
        /// </summary>
        [Input("adminAccountId", required: true)]
        public Input<string> AdminAccountId { get; set; } = null!;

        public DelegatedAdminArgs()
        {
        }
        public static new DelegatedAdminArgs Empty => new DelegatedAdminArgs();
    }
}
