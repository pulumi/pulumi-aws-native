// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityHub
{
    /// <summary>
    /// The AWS::SecurityHub::ConfigurationPolicy resource represents the Central Configuration Policy in your account.
    /// </summary>
    [AwsNativeResourceType("aws-native:securityhub:ConfigurationPolicy")]
    public partial class ConfigurationPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the configuration policy.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The universally unique identifier (UUID) of the configuration policy.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// An object that defines how AWS Security Hub is configured. It includes whether Security Hub is enabled or disabled, a list of enabled security standards, a list of enabled or disabled security controls, and a list of custom parameter values for specified controls. If you provide a list of security controls that are enabled in the configuration policy, Security Hub disables all other controls (including newly released controls). If you provide a list of security controls that are disabled in the configuration policy, Security Hub enables all other controls (including newly released controls).
        /// </summary>
        [Output("configurationPolicy")]
        public Output<Outputs.ConfigurationPolicyPolicy> ConfigurationPolicyValue { get; private set; } = null!;

        /// <summary>
        /// The date and time, in UTC and ISO 8601 format.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The description of the configuration policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the configuration policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the service that the configuration policy applies to is enabled in the policy.
        /// </summary>
        [Output("serviceEnabled")]
        public Output<bool> ServiceEnabled { get; private set; } = null!;

        /// <summary>
        /// User-defined tags associated with a configuration policy. For more information, see [Tagging AWS Security Hub resources](https://docs.aws.amazon.com/securityhub/latest/userguide/tagging-resources.html) in the *Security Hub user guide* .
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The date and time, in UTC and ISO 8601 format.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationPolicy(string name, ConfigurationPolicyArgs args, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:ConfigurationPolicy", name, args ?? new ConfigurationPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:ConfigurationPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ConfigurationPolicy(name, id, options);
        }
    }

    public sealed class ConfigurationPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An object that defines how AWS Security Hub is configured. It includes whether Security Hub is enabled or disabled, a list of enabled security standards, a list of enabled or disabled security controls, and a list of custom parameter values for specified controls. If you provide a list of security controls that are enabled in the configuration policy, Security Hub disables all other controls (including newly released controls). If you provide a list of security controls that are disabled in the configuration policy, Security Hub enables all other controls (including newly released controls).
        /// </summary>
        [Input("configurationPolicy", required: true)]
        public Input<Inputs.ConfigurationPolicyPolicyArgs> ConfigurationPolicyValue { get; set; } = null!;

        /// <summary>
        /// The description of the configuration policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the configuration policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// User-defined tags associated with a configuration policy. For more information, see [Tagging AWS Security Hub resources](https://docs.aws.amazon.com/securityhub/latest/userguide/tagging-resources.html) in the *Security Hub user guide* .
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ConfigurationPolicyArgs()
        {
        }
        public static new ConfigurationPolicyArgs Empty => new ConfigurationPolicyArgs();
    }
}
