// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityHub
{
    /// <summary>
    /// The ``AWS::SecurityHub::Standard`` resource specifies the enablement of a security standard. The standard is identified by the ``StandardsArn`` property. To view a list of ASH standards and their Amazon Resource Names (ARNs), use the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation.
    ///  You must create a separate ``AWS::SecurityHub::Standard`` resource for each standard that you want to enable.
    ///  For more information about ASH standards, see [standards reference](https://docs.aws.amazon.com/securityhub/latest/userguide/standards-reference.html) in the *User Guide*.
    /// </summary>
    [AwsNativeResourceType("aws-native:securityhub:Standard")]
    public partial class Standard : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies which controls are to be disabled in a standard. 
        ///  *Maximum*: ``100``
        /// </summary>
        [Output("disabledStandardsControls")]
        public Output<ImmutableArray<Outputs.StandardsControl>> DisabledStandardsControls { get; private set; } = null!;

        /// <summary>
        /// The ARN of the standard that you want to enable. To view a list of available ASH standards and their ARNs, use the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation.
        /// </summary>
        [Output("standardsArn")]
        public Output<string> StandardsArn { get; private set; } = null!;

        [Output("standardsSubscriptionArn")]
        public Output<string> StandardsSubscriptionArn { get; private set; } = null!;


        /// <summary>
        /// Create a Standard resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Standard(string name, StandardArgs args, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:Standard", name, args ?? new StandardArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Standard(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:Standard", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "standardsArn",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Standard resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Standard Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Standard(name, id, options);
        }
    }

    public sealed class StandardArgs : global::Pulumi.ResourceArgs
    {
        [Input("disabledStandardsControls")]
        private InputList<Inputs.StandardsControlArgs>? _disabledStandardsControls;

        /// <summary>
        /// Specifies which controls are to be disabled in a standard. 
        ///  *Maximum*: ``100``
        /// </summary>
        public InputList<Inputs.StandardsControlArgs> DisabledStandardsControls
        {
            get => _disabledStandardsControls ?? (_disabledStandardsControls = new InputList<Inputs.StandardsControlArgs>());
            set => _disabledStandardsControls = value;
        }

        /// <summary>
        /// The ARN of the standard that you want to enable. To view a list of available ASH standards and their ARNs, use the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation.
        /// </summary>
        [Input("standardsArn", required: true)]
        public Input<string> StandardsArn { get; set; } = null!;

        public StandardArgs()
        {
        }
        public static new StandardArgs Empty => new StandardArgs();
    }
}
