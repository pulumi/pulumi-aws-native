// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityHub
{
    public static class GetConfigurationPolicy
    {
        /// <summary>
        /// The AWS::SecurityHub::ConfigurationPolicy resource represents the Central Configuration Policy in your account.
        /// </summary>
        public static Task<GetConfigurationPolicyResult> InvokeAsync(GetConfigurationPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationPolicyResult>("aws-native:securityhub:getConfigurationPolicy", args ?? new GetConfigurationPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::SecurityHub::ConfigurationPolicy resource represents the Central Configuration Policy in your account.
        /// </summary>
        public static Output<GetConfigurationPolicyResult> Invoke(GetConfigurationPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationPolicyResult>("aws-native:securityhub:getConfigurationPolicy", args ?? new GetConfigurationPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the configuration policy.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetConfigurationPolicyArgs()
        {
        }
        public static new GetConfigurationPolicyArgs Empty => new GetConfigurationPolicyArgs();
    }

    public sealed class GetConfigurationPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the configuration policy.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetConfigurationPolicyInvokeArgs()
        {
        }
        public static new GetConfigurationPolicyInvokeArgs Empty => new GetConfigurationPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigurationPolicyResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the configuration policy.
        /// </summary>
        public readonly string? Arn;
        public readonly Outputs.ConfigurationPolicyPolicy? ConfigurationPolicyValue;
        /// <summary>
        /// The date and time, in UTC and ISO 8601 format.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The description of the configuration policy.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The universally unique identifier (UUID) of the configuration policy.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the configuration policy.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Indicates whether the service that the configuration policy applies to is enabled in the policy.
        /// </summary>
        public readonly bool? ServiceEnabled;
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The date and time, in UTC and ISO 8601 format.
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetConfigurationPolicyResult(
            string? arn,

            Outputs.ConfigurationPolicyPolicy? configurationPolicy,

            string? createdAt,

            string? description,

            string? id,

            string? name,

            bool? serviceEnabled,

            ImmutableDictionary<string, string>? tags,

            string? updatedAt)
        {
            Arn = arn;
            ConfigurationPolicyValue = configurationPolicy;
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Name = name;
            ServiceEnabled = serviceEnabled;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
