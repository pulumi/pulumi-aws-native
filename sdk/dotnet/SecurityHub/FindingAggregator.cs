// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityHub
{
    /// <summary>
    /// The AWS::SecurityHub::FindingAggregator resource represents the AWS Security Hub Finding Aggregator in your account. One finding aggregator resource is created for each account in non opt-in region in which you configure region linking mode.
    /// </summary>
    [AwsNativeResourceType("aws-native:securityhub:FindingAggregator")]
    public partial class FindingAggregator : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The aggregation Region of the FindingAggregator
        /// </summary>
        [Output("findingAggregationRegion")]
        public Output<string> FindingAggregationRegion { get; private set; } = null!;

        /// <summary>
        /// The ARN of the FindingAggregator being created and assigned as the unique identifier
        /// </summary>
        [Output("findingAggregatorArn")]
        public Output<string> FindingAggregatorArn { get; private set; } = null!;

        /// <summary>
        /// Indicates whether to link all Regions, all Regions except for a list of excluded Regions, or a list of included Regions
        /// </summary>
        [Output("regionLinkingMode")]
        public Output<Pulumi.AwsNative.SecurityHub.FindingAggregatorRegionLinkingMode> RegionLinkingMode { get; private set; } = null!;

        /// <summary>
        /// The list of excluded Regions or included Regions
        /// </summary>
        [Output("regions")]
        public Output<ImmutableArray<string>> Regions { get; private set; } = null!;


        /// <summary>
        /// Create a FindingAggregator resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FindingAggregator(string name, FindingAggregatorArgs args, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:FindingAggregator", name, args ?? new FindingAggregatorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FindingAggregator(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:FindingAggregator", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FindingAggregator resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FindingAggregator Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FindingAggregator(name, id, options);
        }
    }

    public sealed class FindingAggregatorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether to link all Regions, all Regions except for a list of excluded Regions, or a list of included Regions
        /// </summary>
        [Input("regionLinkingMode", required: true)]
        public Input<Pulumi.AwsNative.SecurityHub.FindingAggregatorRegionLinkingMode> RegionLinkingMode { get; set; } = null!;

        [Input("regions")]
        private InputList<string>? _regions;

        /// <summary>
        /// The list of excluded Regions or included Regions
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        public FindingAggregatorArgs()
        {
        }
        public static new FindingAggregatorArgs Empty => new FindingAggregatorArgs();
    }
}
