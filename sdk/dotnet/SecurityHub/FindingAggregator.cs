// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SecurityHub
{
    /// <summary>
    /// The ``AWS::SecurityHub::FindingAggregator`` resource enables cross-Region aggregation. When cross-Region aggregation is enabled, you can aggregate findings, finding updates, insights, control compliance statuses, and security scores from one or more linked Regions to a single aggregation Region. You can then view and manage all of this data from the aggregation Region. For more details about cross-Region aggregation, see [Cross-Region aggregation](https://docs.aws.amazon.com/securityhub/latest/userguide/finding-aggregation.html) in the *User Guide*
    ///  This resource must be created in the Region that you want to designate as your aggregation Region.
    ///  Cross-Region aggregation is also a prerequisite for using [central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html) in ASH.
    /// </summary>
    [AwsNativeResourceType("aws-native:securityhub:FindingAggregator")]
    public partial class FindingAggregator : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The home Region. Findings generated in linked Regions are replicated and sent to the home Region.
        /// </summary>
        [Output("findingAggregationRegion")]
        public Output<string> FindingAggregationRegion { get; private set; } = null!;

        /// <summary>
        /// The ARN of the finding aggregator. You use the finding aggregator ARN to retrieve details for, update, and delete the finding aggregator.
        /// </summary>
        [Output("findingAggregatorArn")]
        public Output<string> FindingAggregatorArn { get; private set; } = null!;

        /// <summary>
        /// Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
        ///  The selected option also determines how to use the Regions provided in the Regions list.
        ///  In CFN, the options for this property are as follows:
        ///   +  ``ALL_REGIONS`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
        ///   +  ``ALL_REGIONS_EXCEPT_SPECIFIED`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the ``Regions`` parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
        ///   +  ``SPECIFIED_REGIONS`` - Indicates to aggregate findings only from the Regions listed in the ``Regions`` parameter. Security Hub does not automatically aggregate findings from new Regions.
        /// </summary>
        [Output("regionLinkingMode")]
        public Output<Pulumi.AwsNative.SecurityHub.FindingAggregatorRegionLinkingMode> RegionLinkingMode { get; private set; } = null!;

        /// <summary>
        /// If ``RegionLinkingMode`` is ``ALL_REGIONS_EXCEPT_SPECIFIED``, then this is a space-separated list of Regions that do not aggregate findings to the aggregation Region.
        ///  If ``RegionLinkingMode`` is ``SPECIFIED_REGIONS``, then this is a space-separated list of Regions that do aggregate findings to the aggregation Region.
        /// </summary>
        [Output("regions")]
        public Output<ImmutableArray<string>> Regions { get; private set; } = null!;


        /// <summary>
        /// Create a FindingAggregator resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FindingAggregator(string name, FindingAggregatorArgs args, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:FindingAggregator", name, args ?? new FindingAggregatorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FindingAggregator(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:securityhub:FindingAggregator", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FindingAggregator resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FindingAggregator Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FindingAggregator(name, id, options);
        }
    }

    public sealed class FindingAggregatorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
        ///  The selected option also determines how to use the Regions provided in the Regions list.
        ///  In CFN, the options for this property are as follows:
        ///   +  ``ALL_REGIONS`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
        ///   +  ``ALL_REGIONS_EXCEPT_SPECIFIED`` - Indicates to aggregate findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the ``Regions`` parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
        ///   +  ``SPECIFIED_REGIONS`` - Indicates to aggregate findings only from the Regions listed in the ``Regions`` parameter. Security Hub does not automatically aggregate findings from new Regions.
        /// </summary>
        [Input("regionLinkingMode", required: true)]
        public Input<Pulumi.AwsNative.SecurityHub.FindingAggregatorRegionLinkingMode> RegionLinkingMode { get; set; } = null!;

        [Input("regions")]
        private InputList<string>? _regions;

        /// <summary>
        /// If ``RegionLinkingMode`` is ``ALL_REGIONS_EXCEPT_SPECIFIED``, then this is a space-separated list of Regions that do not aggregate findings to the aggregation Region.
        ///  If ``RegionLinkingMode`` is ``SPECIFIED_REGIONS``, then this is a space-separated list of Regions that do aggregate findings to the aggregation Region.
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        public FindingAggregatorArgs()
        {
        }
        public static new FindingAggregatorArgs Empty => new FindingAggregatorArgs();
    }
}
