// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Evs
{
    /// <summary>
    /// An environment created within the EVS service
    /// </summary>
    [AwsNativeResourceType("aws-native:evs:Environment")]
    public partial class Environment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A check on the environment to identify instance health and VMware VCF licensing issues. For example:
        /// 
        /// `{ "checks": [ { "type": "KEY_REUSE", "result": "PASSED" }, { "type": "KEY_COVERAGE", "result": "PASSED" }, { "type": "REACHABILITY", "result": "PASSED" }, { "type": "HOST_COUNT", "result": "PASSED" } ] }`
        /// </summary>
        [Output("checks")]
        public Output<ImmutableArray<Outputs.EnvironmentCheck>> Checks { get; private set; } = null!;

        /// <summary>
        /// The connectivity configuration for the environment. Amazon EVS requires that you specify two route server peer IDs. During environment creation, the route server endpoints peer with the NSX uplink VLAN for connectivity to the NSX overlay network.
        /// </summary>
        [Output("connectivityInfo")]
        public Output<Outputs.ConnectivityInfoProperties> ConnectivityInfo { get; private set; } = null!;

        /// <summary>
        /// The date and time that the environment was created. For example: `1749081600.000` .
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The VCF credentials that are stored as Amazon EVS managed secrets in AWS Secrets Manager. Amazon EVS stores credentials that are needed to install vCenter Server, NSX, and SDDC Manager. For example:
        /// 
        /// `{ [ { "secretArn": "arn:aws:secretsmanager:us-east-1:000000000000:secret:evs!env-1234567890_vCenterAdmin-MnTMEi" }, { "secretArn": "arn:aws:secretsmanager:us-east-1:000000000000:secret:evs!env-1234567890_vCenterRoot-87VyCF" }, { "secretArn": "arn:aws:secretsmanager:us-east-1:000000000000:secret:evs!env-1234567890_NSXRoot-SR3k43" }, { "secretArn": "arn:aws:secretsmanager:us-east-1:000000000000:secret:evs!env-1234567890_NSXAdmin-L5LUiD" }, { "secretArn": "arn:aws:secretsmanager:us-east-1:000000000000:secret:evs!env-1234567890_NSXAudit-Q2oW46" }, { "secretArn": "arn:aws:secretsmanager:us-east-1:000000000000:secret:evs!env-1234567890_SDDCManagerRoot-bFulOq" }, { "secretArn": "arn:aws:secretsmanager:us-east-1:000000000000:secret:evs!env-1234567890_SDDCManagerVCF-Ec3gES" }, { "secretArn": "arn:aws:secretsmanager:us-east-1:000000000000:secret:evs!env-1234567890_SDDCManagerAdmin-JMTAAb" } ] }`
        /// </summary>
        [Output("credentials")]
        public Output<ImmutableArray<Outputs.EnvironmentSecret>> Credentials { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) that is associated with the environment. For example: `arn:aws:evs:us-east-1:000000000000:environment/env-1234567890` .
        /// </summary>
        [Output("environmentArn")]
        public Output<string> EnvironmentArn { get; private set; } = null!;

        /// <summary>
        /// The unique ID for the environment. For example: `env-1234567890` .
        /// </summary>
        [Output("environmentId")]
        public Output<string> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// The name of an EVS environment
        /// </summary>
        [Output("environmentName")]
        public Output<string?> EnvironmentName { get; private set; } = null!;

        /// <summary>
        /// The state of an environment. For example: `CREATED` .
        /// </summary>
        [Output("environmentState")]
        public Output<Pulumi.AwsNative.Evs.EnvironmentState> EnvironmentState { get; private set; } = null!;

        /// <summary>
        /// The initial hosts for environment only required upon creation. Modification after creation will have no effect
        /// </summary>
        [Output("hosts")]
        public Output<ImmutableArray<Outputs.EnvironmentHostInfoForCreate>> Hosts { get; private set; } = null!;

        /// <summary>
        /// The initial Vlan configuration only required upon creation. Modification after creation will have no effect
        /// </summary>
        [Output("initialVlans")]
        public Output<Outputs.InitialVlansProperties?> InitialVlans { get; private set; } = null!;

        /// <summary>
        /// The AWS KMS key ID that AWS Secrets Manager uses to encrypt secrets that are associated with the environment. These secrets contain the VCF credentials that are needed to install vCenter Server, NSX, and SDDC Manager.
        /// 
        /// By default, Amazon EVS use the AWS Secrets Manager managed key `aws/secretsmanager` . You can also specify a customer managed key.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// The license information for an EVS environment
        /// </summary>
        [Output("licenseInfo")]
        public Output<Outputs.LicenseInfoProperties> LicenseInfo { get; private set; } = null!;

        /// <summary>
        /// The date and time that the environment was modified. For example: `1749081600.000` .
        /// </summary>
        [Output("modifiedAt")]
        public Output<string> ModifiedAt { get; private set; } = null!;

        /// <summary>
        /// The security groups that allow traffic between the Amazon EVS control plane and your VPC for service access. If a security group is not specified, Amazon EVS uses the default security group in your account for service access.
        /// </summary>
        [Output("serviceAccessSecurityGroups")]
        public Output<Outputs.ServiceAccessSecurityGroupsProperties?> ServiceAccessSecurityGroups { get; private set; } = null!;

        /// <summary>
        /// The subnet that is used to establish connectivity between the Amazon EVS control plane and VPC. Amazon EVS uses this subnet to perform validations and create the environment.
        /// </summary>
        [Output("serviceAccessSubnetId")]
        public Output<string> ServiceAccessSubnetId { get; private set; } = null!;

        /// <summary>
        /// The Broadcom Site ID that is associated with your Amazon EVS environment. Amazon EVS uses the Broadcom Site ID that you provide to meet Broadcom VCF license usage reporting requirements for Amazon EVS.
        /// </summary>
        [Output("siteId")]
        public Output<string> SiteId { get; private set; } = null!;

        /// <summary>
        /// A detailed description of the `environmentState` of an environment. For example: `Environment successfully created` .
        /// </summary>
        [Output("stateDetails")]
        public Output<string> StateDetails { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Customer confirmation that the customer has purchased and will continue to maintain the required number of VCF software licenses to cover all physical processor cores in the Amazon EVS environment. Information about your VCF software in Amazon EVS will be shared with Broadcom to verify license compliance.
        /// </summary>
        [Output("termsAccepted")]
        public Output<bool> TermsAccepted { get; private set; } = null!;

        /// <summary>
        /// The DNS hostnames to be used by the VCF management appliances in your environment.
        /// 
        /// For environment creation to be successful, each hostname entry must resolve to a domain name that you've registered in your DNS service of choice and configured in the DHCP option set of your VPC. DNS hostnames cannot be changed after environment creation has started.
        /// </summary>
        [Output("vcfHostnames")]
        public Output<Outputs.VcfHostnamesProperties> VcfHostnames { get; private set; } = null!;

        /// <summary>
        /// The VCF version of the environment.
        /// </summary>
        [Output("vcfVersion")]
        public Output<Pulumi.AwsNative.Evs.EnvironmentVcfVersion> VcfVersion { get; private set; } = null!;

        /// <summary>
        /// The VPC associated with the environment.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a Environment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Environment(string name, EnvironmentArgs args, CustomResourceOptions? options = null)
            : base("aws-native:evs:Environment", name, args ?? new EnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Environment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:evs:Environment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "connectivityInfo",
                    "environmentName",
                    "kmsKeyId",
                    "licenseInfo",
                    "serviceAccessSecurityGroups",
                    "serviceAccessSubnetId",
                    "siteId",
                    "termsAccepted",
                    "vcfHostnames",
                    "vcfVersion",
                    "vpcId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Environment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Environment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Environment(name, id, options);
        }
    }

    public sealed class EnvironmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The connectivity configuration for the environment. Amazon EVS requires that you specify two route server peer IDs. During environment creation, the route server endpoints peer with the NSX uplink VLAN for connectivity to the NSX overlay network.
        /// </summary>
        [Input("connectivityInfo", required: true)]
        public Input<Inputs.ConnectivityInfoPropertiesArgs> ConnectivityInfo { get; set; } = null!;

        /// <summary>
        /// The name of an EVS environment
        /// </summary>
        [Input("environmentName")]
        public Input<string>? EnvironmentName { get; set; }

        [Input("hosts")]
        private InputList<Inputs.EnvironmentHostInfoForCreateArgs>? _hosts;

        /// <summary>
        /// The initial hosts for environment only required upon creation. Modification after creation will have no effect
        /// </summary>
        public InputList<Inputs.EnvironmentHostInfoForCreateArgs> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<Inputs.EnvironmentHostInfoForCreateArgs>());
            set => _hosts = value;
        }

        /// <summary>
        /// The initial Vlan configuration only required upon creation. Modification after creation will have no effect
        /// </summary>
        [Input("initialVlans")]
        public Input<Inputs.InitialVlansPropertiesArgs>? InitialVlans { get; set; }

        /// <summary>
        /// The AWS KMS key ID that AWS Secrets Manager uses to encrypt secrets that are associated with the environment. These secrets contain the VCF credentials that are needed to install vCenter Server, NSX, and SDDC Manager.
        /// 
        /// By default, Amazon EVS use the AWS Secrets Manager managed key `aws/secretsmanager` . You can also specify a customer managed key.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// The license information for an EVS environment
        /// </summary>
        [Input("licenseInfo", required: true)]
        public Input<Inputs.LicenseInfoPropertiesArgs> LicenseInfo { get; set; } = null!;

        /// <summary>
        /// The security groups that allow traffic between the Amazon EVS control plane and your VPC for service access. If a security group is not specified, Amazon EVS uses the default security group in your account for service access.
        /// </summary>
        [Input("serviceAccessSecurityGroups")]
        public Input<Inputs.ServiceAccessSecurityGroupsPropertiesArgs>? ServiceAccessSecurityGroups { get; set; }

        /// <summary>
        /// The subnet that is used to establish connectivity between the Amazon EVS control plane and VPC. Amazon EVS uses this subnet to perform validations and create the environment.
        /// </summary>
        [Input("serviceAccessSubnetId", required: true)]
        public Input<string> ServiceAccessSubnetId { get; set; } = null!;

        /// <summary>
        /// The Broadcom Site ID that is associated with your Amazon EVS environment. Amazon EVS uses the Broadcom Site ID that you provide to meet Broadcom VCF license usage reporting requirements for Amazon EVS.
        /// </summary>
        [Input("siteId", required: true)]
        public Input<string> SiteId { get; set; } = null!;

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Customer confirmation that the customer has purchased and will continue to maintain the required number of VCF software licenses to cover all physical processor cores in the Amazon EVS environment. Information about your VCF software in Amazon EVS will be shared with Broadcom to verify license compliance.
        /// </summary>
        [Input("termsAccepted", required: true)]
        public Input<bool> TermsAccepted { get; set; } = null!;

        /// <summary>
        /// The DNS hostnames to be used by the VCF management appliances in your environment.
        /// 
        /// For environment creation to be successful, each hostname entry must resolve to a domain name that you've registered in your DNS service of choice and configured in the DHCP option set of your VPC. DNS hostnames cannot be changed after environment creation has started.
        /// </summary>
        [Input("vcfHostnames", required: true)]
        public Input<Inputs.VcfHostnamesPropertiesArgs> VcfHostnames { get; set; } = null!;

        /// <summary>
        /// The VCF version of the environment.
        /// </summary>
        [Input("vcfVersion", required: true)]
        public Input<Pulumi.AwsNative.Evs.EnvironmentVcfVersion> VcfVersion { get; set; } = null!;

        /// <summary>
        /// The VPC associated with the environment.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public EnvironmentArgs()
        {
        }
        public static new EnvironmentArgs Empty => new EnvironmentArgs();
    }
}
