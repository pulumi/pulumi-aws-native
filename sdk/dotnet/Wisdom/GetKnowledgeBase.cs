// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Wisdom
{
    public static class GetKnowledgeBase
    {
        /// <summary>
        /// Definition of AWS::Wisdom::KnowledgeBase Resource Type
        /// </summary>
        public static Task<GetKnowledgeBaseResult> InvokeAsync(GetKnowledgeBaseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKnowledgeBaseResult>("aws-native:wisdom:getKnowledgeBase", args ?? new GetKnowledgeBaseArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Wisdom::KnowledgeBase Resource Type
        /// </summary>
        public static Output<GetKnowledgeBaseResult> Invoke(GetKnowledgeBaseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetKnowledgeBaseResult>("aws-native:wisdom:getKnowledgeBase", args ?? new GetKnowledgeBaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKnowledgeBaseArgs : Pulumi.InvokeArgs
    {
        [Input("knowledgeBaseId", required: true)]
        public string KnowledgeBaseId { get; set; } = null!;

        public GetKnowledgeBaseArgs()
        {
        }
    }

    public sealed class GetKnowledgeBaseInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("knowledgeBaseId", required: true)]
        public Input<string> KnowledgeBaseId { get; set; } = null!;

        public GetKnowledgeBaseInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKnowledgeBaseResult
    {
        public readonly string? KnowledgeBaseArn;
        public readonly string? KnowledgeBaseId;
        public readonly Outputs.KnowledgeBaseRenderingConfiguration? RenderingConfiguration;

        [OutputConstructor]
        private GetKnowledgeBaseResult(
            string? knowledgeBaseArn,

            string? knowledgeBaseId,

            Outputs.KnowledgeBaseRenderingConfiguration? renderingConfiguration)
        {
            KnowledgeBaseArn = knowledgeBaseArn;
            KnowledgeBaseId = knowledgeBaseId;
            RenderingConfiguration = renderingConfiguration;
        }
    }
}
