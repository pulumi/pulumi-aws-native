// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmplifyUIBuilder
{
    public static class GetTheme
    {
        /// <summary>
        /// Definition of AWS::AmplifyUIBuilder::Theme Resource Type
        /// </summary>
        public static Task<GetThemeResult> InvokeAsync(GetThemeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetThemeResult>("aws-native:amplifyuibuilder:getTheme", args ?? new GetThemeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::AmplifyUIBuilder::Theme Resource Type
        /// </summary>
        public static Output<GetThemeResult> Invoke(GetThemeInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetThemeResult>("aws-native:amplifyuibuilder:getTheme", args ?? new GetThemeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetThemeArgs : Pulumi.InvokeArgs
    {
        [Input("appId")]
        public string? AppId { get; set; }

        [Input("environmentName")]
        public string? EnvironmentName { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        public GetThemeArgs()
        {
        }
    }

    public sealed class GetThemeInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        [Input("environmentName")]
        public Input<string>? EnvironmentName { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetThemeInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetThemeResult
    {
        public readonly string? AppId;
        public readonly string? CreatedAt;
        public readonly string? EnvironmentName;
        public readonly string? Id;
        public readonly string? ModifiedAt;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.ThemeValues> Overrides;
        public readonly ImmutableArray<Outputs.ThemeValues> Values;

        [OutputConstructor]
        private GetThemeResult(
            string? appId,

            string? createdAt,

            string? environmentName,

            string? id,

            string? modifiedAt,

            string? name,

            ImmutableArray<Outputs.ThemeValues> overrides,

            ImmutableArray<Outputs.ThemeValues> values)
        {
            AppId = appId;
            CreatedAt = createdAt;
            EnvironmentName = environmentName;
            Id = id;
            ModifiedAt = modifiedAt;
            Name = name;
            Overrides = overrides;
            Values = values;
        }
    }
}
