// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFormation
{
    /// <summary>
    /// The AWS::CloudFormation::Stack resource nests a stack as a resource in a top-level template.
    /// </summary>
    [AwsNativeResourceType("aws-native:cloudformation:Stack")]
    public partial class Stack : global::Pulumi.CustomResource
    {
        [Output("capabilities")]
        public Output<ImmutableArray<Pulumi.AwsNative.CloudFormation.StackCapabilitiesItem>> Capabilities { get; private set; } = null!;

        [Output("changeSetId")]
        public Output<string> ChangeSetId { get; private set; } = null!;

        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("disableRollback")]
        public Output<bool?> DisableRollback { get; private set; } = null!;

        [Output("enableTerminationProtection")]
        public Output<bool?> EnableTerminationProtection { get; private set; } = null!;

        [Output("lastUpdateTime")]
        public Output<string> LastUpdateTime { get; private set; } = null!;

        [Output("notificationArns")]
        public Output<ImmutableArray<string>> NotificationArns { get; private set; } = null!;

        [Output("outputs")]
        public Output<ImmutableArray<Outputs.StackOutput>> Outputs { get; private set; } = null!;

        [Output("parameters")]
        public Output<ImmutableDictionary<string, string>?> Parameters { get; private set; } = null!;

        [Output("parentId")]
        public Output<string> ParentId { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string?> RoleArn { get; private set; } = null!;

        [Output("rootId")]
        public Output<string> RootId { get; private set; } = null!;

        [Output("stackId")]
        public Output<string> StackId { get; private set; } = null!;

        [Output("stackName")]
        public Output<string> StackName { get; private set; } = null!;

        [Output("stackPolicyBody")]
        public Output<object?> StackPolicyBody { get; private set; } = null!;

        [Output("stackPolicyUrl")]
        public Output<string?> StackPolicyUrl { get; private set; } = null!;

        [Output("stackStatus")]
        public Output<Pulumi.AwsNative.CloudFormation.StackStatus> StackStatus { get; private set; } = null!;

        [Output("stackStatusReason")]
        public Output<string?> StackStatusReason { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.StackTag>> Tags { get; private set; } = null!;

        [Output("templateBody")]
        public Output<object?> TemplateBody { get; private set; } = null!;

        [Output("templateUrl")]
        public Output<string?> TemplateUrl { get; private set; } = null!;

        [Output("timeoutInMinutes")]
        public Output<int?> TimeoutInMinutes { get; private set; } = null!;


        /// <summary>
        /// Create a Stack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Stack(string name, StackArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:cloudformation:Stack", name, args ?? new StackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Stack(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cloudformation:Stack", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "stackName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Stack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Stack Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Stack(name, id, options);
        }
    }

    public sealed class StackArgs : global::Pulumi.ResourceArgs
    {
        [Input("capabilities")]
        private InputList<Pulumi.AwsNative.CloudFormation.StackCapabilitiesItem>? _capabilities;
        public InputList<Pulumi.AwsNative.CloudFormation.StackCapabilitiesItem> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<Pulumi.AwsNative.CloudFormation.StackCapabilitiesItem>());
            set => _capabilities = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disableRollback")]
        public Input<bool>? DisableRollback { get; set; }

        [Input("enableTerminationProtection")]
        public Input<bool>? EnableTerminationProtection { get; set; }

        [Input("notificationArns")]
        private InputList<string>? _notificationArns;
        public InputList<string> NotificationArns
        {
            get => _notificationArns ?? (_notificationArns = new InputList<string>());
            set => _notificationArns = value;
        }

        [Input("parameters")]
        private InputMap<string>? _parameters;
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("stackName")]
        public Input<string>? StackName { get; set; }

        [Input("stackPolicyBody")]
        public Input<object>? StackPolicyBody { get; set; }

        [Input("stackPolicyUrl")]
        public Input<string>? StackPolicyUrl { get; set; }

        [Input("stackStatusReason")]
        public Input<string>? StackStatusReason { get; set; }

        [Input("tags")]
        private InputList<Inputs.StackTagArgs>? _tags;
        public InputList<Inputs.StackTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.StackTagArgs>());
            set => _tags = value;
        }

        [Input("templateBody")]
        public Input<object>? TemplateBody { get; set; }

        [Input("templateUrl")]
        public Input<string>? TemplateUrl { get; set; }

        [Input("timeoutInMinutes")]
        public Input<int>? TimeoutInMinutes { get; set; }

        public StackArgs()
        {
        }
        public static new StackArgs Empty => new StackArgs();
    }
}
