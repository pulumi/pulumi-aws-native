// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFormation
{
    public static class GetStack
    {
        /// <summary>
        /// The AWS::CloudFormation::Stack resource nests a stack as a resource in a top-level template.
        /// </summary>
        public static Task<GetStackResult> InvokeAsync(GetStackArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStackResult>("aws-native:cloudformation:getStack", args ?? new GetStackArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::CloudFormation::Stack resource nests a stack as a resource in a top-level template.
        /// </summary>
        public static Output<GetStackResult> Invoke(GetStackInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStackResult>("aws-native:cloudformation:getStack", args ?? new GetStackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStackArgs : global::Pulumi.InvokeArgs
    {
        [Input("stackId", required: true)]
        public string StackId { get; set; } = null!;

        public GetStackArgs()
        {
        }
        public static new GetStackArgs Empty => new GetStackArgs();
    }

    public sealed class GetStackInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("stackId", required: true)]
        public Input<string> StackId { get; set; } = null!;

        public GetStackInvokeArgs()
        {
        }
        public static new GetStackInvokeArgs Empty => new GetStackInvokeArgs();
    }


    [OutputType]
    public sealed class GetStackResult
    {
        public readonly ImmutableArray<Pulumi.AwsNative.CloudFormation.StackCapabilitiesItem> Capabilities;
        public readonly string? ChangeSetId;
        public readonly string? CreationTime;
        public readonly string? Description;
        public readonly bool? DisableRollback;
        public readonly bool? EnableTerminationProtection;
        public readonly string? LastUpdateTime;
        public readonly ImmutableArray<string> NotificationArns;
        public readonly ImmutableArray<Outputs.StackOutput> Outputs;
        public readonly object? Parameters;
        public readonly string? ParentId;
        public readonly string? RoleArn;
        public readonly string? RootId;
        public readonly string? StackId;
        public readonly object? StackPolicyBody;
        public readonly Pulumi.AwsNative.CloudFormation.StackStatus? StackStatus;
        public readonly string? StackStatusReason;
        public readonly ImmutableArray<Outputs.StackTag> Tags;
        public readonly object? TemplateBody;
        public readonly int? TimeoutInMinutes;

        [OutputConstructor]
        private GetStackResult(
            ImmutableArray<Pulumi.AwsNative.CloudFormation.StackCapabilitiesItem> capabilities,

            string? changeSetId,

            string? creationTime,

            string? description,

            bool? disableRollback,

            bool? enableTerminationProtection,

            string? lastUpdateTime,

            ImmutableArray<string> notificationArns,

            ImmutableArray<Outputs.StackOutput> outputs,

            object? parameters,

            string? parentId,

            string? roleArn,

            string? rootId,

            string? stackId,

            object? stackPolicyBody,

            Pulumi.AwsNative.CloudFormation.StackStatus? stackStatus,

            string? stackStatusReason,

            ImmutableArray<Outputs.StackTag> tags,

            object? templateBody,

            int? timeoutInMinutes)
        {
            Capabilities = capabilities;
            ChangeSetId = changeSetId;
            CreationTime = creationTime;
            Description = description;
            DisableRollback = disableRollback;
            EnableTerminationProtection = enableTerminationProtection;
            LastUpdateTime = lastUpdateTime;
            NotificationArns = notificationArns;
            Outputs = outputs;
            Parameters = parameters;
            ParentId = parentId;
            RoleArn = roleArn;
            RootId = rootId;
            StackId = stackId;
            StackPolicyBody = stackPolicyBody;
            StackStatus = stackStatus;
            StackStatusReason = stackStatusReason;
            Tags = tags;
            TemplateBody = templateBody;
            TimeoutInMinutes = timeoutInMinutes;
        }
    }
}
