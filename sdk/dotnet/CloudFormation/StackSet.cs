// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFormation
{
    /// <summary>
    /// StackSet as a resource provides one-click experience for provisioning a StackSet and StackInstances
    /// </summary>
    [AwsNativeResourceType("aws-native:cloudformation:StackSet")]
    public partial class StackSet : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.
        /// </summary>
        [Output("administrationRoleARN")]
        public Output<string?> AdministrationRoleARN { get; private set; } = null!;

        /// <summary>
        /// Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
        /// </summary>
        [Output("autoDeployment")]
        public Output<Outputs.StackSetAutoDeployment?> AutoDeployment { get; private set; } = null!;

        /// <summary>
        /// Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
        /// </summary>
        [Output("callAs")]
        public Output<Pulumi.AwsNative.CloudFormation.StackSetCallAs?> CallAs { get; private set; } = null!;

        /// <summary>
        /// In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.
        /// </summary>
        [Output("capabilities")]
        public Output<ImmutableArray<Pulumi.AwsNative.CloudFormation.StackSetCapability>> Capabilities { get; private set; } = null!;

        /// <summary>
        /// A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
        /// </summary>
        [Output("executionRoleName")]
        public Output<string?> ExecutionRoleName { get; private set; } = null!;

        /// <summary>
        /// Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
        /// </summary>
        [Output("managedExecution")]
        public Output<Outputs.ManagedExecutionProperties?> ManagedExecution { get; private set; } = null!;

        [Output("operationPreferences")]
        public Output<Outputs.StackSetOperationPreferences?> OperationPreferences { get; private set; } = null!;

        /// <summary>
        /// The input parameters for the stack set template.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableArray<Outputs.StackSetParameter>> Parameters { get; private set; } = null!;

        /// <summary>
        /// Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
        /// </summary>
        [Output("permissionModel")]
        public Output<Pulumi.AwsNative.CloudFormation.StackSetPermissionModel> PermissionModel { get; private set; } = null!;

        /// <summary>
        /// A group of stack instances with parameters in some specific accounts and regions.
        /// </summary>
        [Output("stackInstancesGroup")]
        public Output<ImmutableArray<Outputs.StackSetStackInstances>> StackInstancesGroup { get; private set; } = null!;

        /// <summary>
        /// The ID of the stack set that you're creating.
        /// </summary>
        [Output("stackSetId")]
        public Output<string> StackSetId { get; private set; } = null!;

        /// <summary>
        /// The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
        /// </summary>
        [Output("stackSetName")]
        public Output<string> StackSetName { get; private set; } = null!;

        /// <summary>
        /// The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.StackSetTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
        /// </summary>
        [Output("templateBody")]
        public Output<string?> TemplateBody { get; private set; } = null!;

        /// <summary>
        /// Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket.
        /// </summary>
        [Output("templateURL")]
        public Output<string?> TemplateURL { get; private set; } = null!;


        /// <summary>
        /// Create a StackSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StackSet(string name, StackSetArgs args, CustomResourceOptions? options = null)
            : base("aws-native:cloudformation:StackSet", name, args ?? new StackSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StackSet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cloudformation:StackSet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StackSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StackSet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StackSet(name, id, options);
        }
    }

    public sealed class StackSetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.
        /// </summary>
        [Input("administrationRoleARN")]
        public Input<string>? AdministrationRoleARN { get; set; }

        /// <summary>
        /// Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
        /// </summary>
        [Input("autoDeployment")]
        public Input<Inputs.StackSetAutoDeploymentArgs>? AutoDeployment { get; set; }

        /// <summary>
        /// Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
        /// </summary>
        [Input("callAs")]
        public Input<Pulumi.AwsNative.CloudFormation.StackSetCallAs>? CallAs { get; set; }

        [Input("capabilities")]
        private InputList<Pulumi.AwsNative.CloudFormation.StackSetCapability>? _capabilities;

        /// <summary>
        /// In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.
        /// </summary>
        public InputList<Pulumi.AwsNative.CloudFormation.StackSetCapability> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<Pulumi.AwsNative.CloudFormation.StackSetCapability>());
            set => _capabilities = value;
        }

        /// <summary>
        /// A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
        /// </summary>
        [Input("executionRoleName")]
        public Input<string>? ExecutionRoleName { get; set; }

        /// <summary>
        /// Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
        /// </summary>
        [Input("managedExecution")]
        public Input<Inputs.ManagedExecutionPropertiesArgs>? ManagedExecution { get; set; }

        [Input("operationPreferences")]
        public Input<Inputs.StackSetOperationPreferencesArgs>? OperationPreferences { get; set; }

        [Input("parameters")]
        private InputList<Inputs.StackSetParameterArgs>? _parameters;

        /// <summary>
        /// The input parameters for the stack set template.
        /// </summary>
        public InputList<Inputs.StackSetParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.StackSetParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
        /// </summary>
        [Input("permissionModel", required: true)]
        public Input<Pulumi.AwsNative.CloudFormation.StackSetPermissionModel> PermissionModel { get; set; } = null!;

        [Input("stackInstancesGroup")]
        private InputList<Inputs.StackSetStackInstancesArgs>? _stackInstancesGroup;

        /// <summary>
        /// A group of stack instances with parameters in some specific accounts and regions.
        /// </summary>
        public InputList<Inputs.StackSetStackInstancesArgs> StackInstancesGroup
        {
            get => _stackInstancesGroup ?? (_stackInstancesGroup = new InputList<Inputs.StackSetStackInstancesArgs>());
            set => _stackInstancesGroup = value;
        }

        /// <summary>
        /// The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
        /// </summary>
        [Input("stackSetName")]
        public Input<string>? StackSetName { get; set; }

        [Input("tags")]
        private InputList<Inputs.StackSetTagArgs>? _tags;

        /// <summary>
        /// The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
        /// </summary>
        public InputList<Inputs.StackSetTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.StackSetTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
        /// </summary>
        [Input("templateBody")]
        public Input<string>? TemplateBody { get; set; }

        /// <summary>
        /// Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket.
        /// </summary>
        [Input("templateURL")]
        public Input<string>? TemplateURL { get; set; }

        public StackSetArgs()
        {
        }
    }
}
