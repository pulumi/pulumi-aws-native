// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFormation
{
    /// <summary>
    /// Test and Publish a resource that has been registered in the CloudFormation Registry.
    /// </summary>
    [AwsNativeResourceType("aws-native:cloudformation:PublicTypeVersion")]
    public partial class PublicTypeVersion : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Number (ARN) of the extension.
        /// </summary>
        [Output("arn")]
        public Output<string?> Arn { get; private set; } = null!;

        /// <summary>
        /// A url to the S3 bucket where logs for the testType run will be available
        /// </summary>
        [Output("logDeliveryBucket")]
        public Output<string?> LogDeliveryBucket { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Number (ARN) assigned to the public extension upon publication
        /// </summary>
        [Output("publicTypeArn")]
        public Output<string> PublicTypeArn { get; private set; } = null!;

        /// <summary>
        /// The version number of a public third-party extension
        /// </summary>
        [Output("publicVersionNumber")]
        public Output<string?> PublicVersionNumber { get; private set; } = null!;

        /// <summary>
        /// The publisher id assigned by CloudFormation for publishing in this region.
        /// </summary>
        [Output("publisherId")]
        public Output<string> PublisherId { get; private set; } = null!;

        /// <summary>
        /// The kind of extension
        /// </summary>
        [Output("type")]
        public Output<Pulumi.AwsNative.CloudFormation.PublicTypeVersionType?> Type { get; private set; } = null!;

        /// <summary>
        /// The name of the type being registered.
        /// 
        /// We recommend that type names adhere to the following pattern: company_or_organization::service::type.
        /// </summary>
        [Output("typeName")]
        public Output<string?> TypeName { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Number (ARN) of the extension with the versionId.
        /// </summary>
        [Output("typeVersionArn")]
        public Output<string> TypeVersionArn { get; private set; } = null!;


        /// <summary>
        /// Create a PublicTypeVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PublicTypeVersion(string name, PublicTypeVersionArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:cloudformation:PublicTypeVersion", name, args ?? new PublicTypeVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PublicTypeVersion(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cloudformation:PublicTypeVersion", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PublicTypeVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PublicTypeVersion Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PublicTypeVersion(name, id, options);
        }
    }

    public sealed class PublicTypeVersionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Number (ARN) of the extension.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// A url to the S3 bucket where logs for the testType run will be available
        /// </summary>
        [Input("logDeliveryBucket")]
        public Input<string>? LogDeliveryBucket { get; set; }

        /// <summary>
        /// The version number of a public third-party extension
        /// </summary>
        [Input("publicVersionNumber")]
        public Input<string>? PublicVersionNumber { get; set; }

        /// <summary>
        /// The kind of extension
        /// </summary>
        [Input("type")]
        public Input<Pulumi.AwsNative.CloudFormation.PublicTypeVersionType>? Type { get; set; }

        /// <summary>
        /// The name of the type being registered.
        /// 
        /// We recommend that type names adhere to the following pattern: company_or_organization::service::type.
        /// </summary>
        [Input("typeName")]
        public Input<string>? TypeName { get; set; }

        public PublicTypeVersionArgs()
        {
        }
    }
}
