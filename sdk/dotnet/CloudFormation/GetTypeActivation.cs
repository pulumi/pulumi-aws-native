// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFormation
{
    public static class GetTypeActivation
    {
        /// <summary>
        /// Enable a resource that has been published in the CloudFormation Registry.
        /// </summary>
        public static Task<GetTypeActivationResult> InvokeAsync(GetTypeActivationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTypeActivationResult>("aws-native:cloudformation:getTypeActivation", args ?? new GetTypeActivationArgs(), options.WithDefaults());

        /// <summary>
        /// Enable a resource that has been published in the CloudFormation Registry.
        /// </summary>
        public static Output<GetTypeActivationResult> Invoke(GetTypeActivationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTypeActivationResult>("aws-native:cloudformation:getTypeActivation", args ?? new GetTypeActivationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTypeActivationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the extension.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetTypeActivationArgs()
        {
        }
        public static new GetTypeActivationArgs Empty => new GetTypeActivationArgs();
    }

    public sealed class GetTypeActivationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the extension.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetTypeActivationInvokeArgs()
        {
        }
        public static new GetTypeActivationInvokeArgs Empty => new GetTypeActivationInvokeArgs();
    }


    [OutputType]
    public sealed class GetTypeActivationResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the extension.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The Amazon Resource Number (ARN) assigned to the public extension upon publication
        /// </summary>
        public readonly string? PublicTypeArn;
        /// <summary>
        /// The publisher id assigned by CloudFormation for publishing in this region.
        /// </summary>
        public readonly string? PublisherId;
        /// <summary>
        /// The name of the type being registered.
        /// 
        /// We recommend that type names adhere to the following pattern: company_or_organization::service::type.
        /// </summary>
        public readonly string? TypeName;
        /// <summary>
        /// An alias to assign to the public extension in this account and region. If you specify an alias for the extension, you must then use the alias to refer to the extension in your templates.
        /// </summary>
        public readonly string? TypeNameAlias;

        [OutputConstructor]
        private GetTypeActivationResult(
            string? arn,

            string? publicTypeArn,

            string? publisherId,

            string? typeName,

            string? typeNameAlias)
        {
            Arn = arn;
            PublicTypeArn = publicTypeArn;
            PublisherId = publisherId;
            TypeName = typeName;
            TypeNameAlias = typeNameAlias;
        }
    }
}
