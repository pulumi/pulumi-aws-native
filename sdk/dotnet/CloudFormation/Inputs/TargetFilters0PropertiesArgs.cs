// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFormation.Inputs
{

    /// <summary>
    /// Attribute to specify which targets should invoke the hook
    /// </summary>
    public sealed class TargetFilters0PropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Pulumi.AwsNative.CloudFormation.LambdaHookAction>? _actions;

        /// <summary>
        /// List of actions that the hook is going to target
        /// </summary>
        public InputList<Pulumi.AwsNative.CloudFormation.LambdaHookAction> Actions
        {
            get => _actions ?? (_actions = new InputList<Pulumi.AwsNative.CloudFormation.LambdaHookAction>());
            set => _actions = value;
        }

        [Input("invocationPoints")]
        private InputList<Pulumi.AwsNative.CloudFormation.LambdaHookInvocationPoint>? _invocationPoints;

        /// <summary>
        /// List of invocation points that the hook is going to target
        /// </summary>
        public InputList<Pulumi.AwsNative.CloudFormation.LambdaHookInvocationPoint> InvocationPoints
        {
            get => _invocationPoints ?? (_invocationPoints = new InputList<Pulumi.AwsNative.CloudFormation.LambdaHookInvocationPoint>());
            set => _invocationPoints = value;
        }

        [Input("targetNames")]
        private InputList<string>? _targetNames;

        /// <summary>
        /// List of type names that the hook is going to target
        /// </summary>
        public InputList<string> TargetNames
        {
            get => _targetNames ?? (_targetNames = new InputList<string>());
            set => _targetNames = value;
        }

        public TargetFilters0PropertiesArgs()
        {
        }
        public static new TargetFilters0PropertiesArgs Empty => new TargetFilters0PropertiesArgs();
    }
}
