// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFormation
{
    /// <summary>
    /// Set a version as default version for a hook in CloudFormation Registry.
    /// </summary>
    [AwsNativeResourceType("aws-native:cloudformation:HookDefaultVersion")]
    public partial class HookDefaultVersion : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a HookDefaultVersion
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The name of the type being registered.
        /// 
        /// We recommend that type names adhere to the following pattern: company_or_organization::service::type.
        /// </summary>
        [Output("typeName")]
        public Output<string?> TypeName { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the type version.
        /// </summary>
        [Output("typeVersionArn")]
        public Output<string?> TypeVersionArn { get; private set; } = null!;

        /// <summary>
        /// The ID of an existing version of the hook to set as the default.
        /// </summary>
        [Output("versionId")]
        public Output<string?> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a HookDefaultVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HookDefaultVersion(string name, HookDefaultVersionArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:cloudformation:HookDefaultVersion", name, args ?? new HookDefaultVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HookDefaultVersion(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cloudformation:HookDefaultVersion", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HookDefaultVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HookDefaultVersion Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new HookDefaultVersion(name, id, options);
        }
    }

    public sealed class HookDefaultVersionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the type being registered.
        /// 
        /// We recommend that type names adhere to the following pattern: company_or_organization::service::type.
        /// </summary>
        [Input("typeName")]
        public Input<string>? TypeName { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the type version.
        /// </summary>
        [Input("typeVersionArn")]
        public Input<string>? TypeVersionArn { get; set; }

        /// <summary>
        /// The ID of an existing version of the hook to set as the default.
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public HookDefaultVersionArgs()
        {
        }
    }
}
