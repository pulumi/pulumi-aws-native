// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Deadline
{
    public static class GetLimit
    {
        /// <summary>
        /// Definition of AWS::Deadline::Limit Resource Type
        /// </summary>
        public static Task<GetLimitResult> InvokeAsync(GetLimitArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLimitResult>("aws-native:deadline:getLimit", args ?? new GetLimitArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Deadline::Limit Resource Type
        /// </summary>
        public static Output<GetLimitResult> Invoke(GetLimitInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLimitResult>("aws-native:deadline:getLimit", args ?? new GetLimitInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Deadline::Limit Resource Type
        /// </summary>
        public static Output<GetLimitResult> Invoke(GetLimitInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLimitResult>("aws-native:deadline:getLimit", args ?? new GetLimitInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLimitArgs : global::Pulumi.InvokeArgs
    {
        [Input("farmId", required: true)]
        public string FarmId { get; set; } = null!;

        [Input("limitId", required: true)]
        public string LimitId { get; set; } = null!;

        public GetLimitArgs()
        {
        }
        public static new GetLimitArgs Empty => new GetLimitArgs();
    }

    public sealed class GetLimitInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("farmId", required: true)]
        public Input<string> FarmId { get; set; } = null!;

        [Input("limitId", required: true)]
        public Input<string> LimitId { get; set; } = null!;

        public GetLimitInvokeArgs()
        {
        }
        public static new GetLimitInvokeArgs Empty => new GetLimitInvokeArgs();
    }


    [OutputType]
    public sealed class GetLimitResult
    {
        public readonly int? CurrentCount;
        public readonly string? Description;
        public readonly string? DisplayName;
        public readonly string? LimitId;
        public readonly int? MaxCount;

        [OutputConstructor]
        private GetLimitResult(
            int? currentCount,

            string? description,

            string? displayName,

            string? limitId,

            int? maxCount)
        {
            CurrentCount = currentCount;
            Description = description;
            DisplayName = displayName;
            LimitId = limitId;
            MaxCount = maxCount;
        }
    }
}
