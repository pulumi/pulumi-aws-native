// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Deadline
{
    /// <summary>
    /// Definition of AWS::Deadline::LicenseEndpoint Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:deadline:LicenseEndpoint")]
    public partial class LicenseEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the license endpoint.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The DNS name of the license server endpoint.
        /// </summary>
        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        /// <summary>
        /// The license endpoint ID.
        /// </summary>
        [Output("licenseEndpointId")]
        public Output<string> LicenseEndpointId { get; private set; } = null!;

        /// <summary>
        /// The identifier of the Amazon EC2 security group that controls access to the license endpoint.
        /// </summary>
        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// The status of the license endpoint.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.Deadline.LicenseEndpointStatus> Status { get; private set; } = null!;

        /// <summary>
        /// The status message of the license endpoint.
        /// </summary>
        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;

        /// <summary>
        /// Identifies the VPC subnets that can connect to a license endpoint.
        /// </summary>
        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The VCP(virtual private cloud) ID associated with the license endpoint.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a LicenseEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LicenseEndpoint(string name, LicenseEndpointArgs args, CustomResourceOptions? options = null)
            : base("aws-native:deadline:LicenseEndpoint", name, args ?? new LicenseEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LicenseEndpoint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:deadline:LicenseEndpoint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "securityGroupIds[*]",
                    "subnetIds[*]",
                    "vpcId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LicenseEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LicenseEndpoint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LicenseEndpoint(name, id, options);
        }
    }

    public sealed class LicenseEndpointArgs : global::Pulumi.ResourceArgs
    {
        [Input("securityGroupIds", required: true)]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// The identifier of the Amazon EC2 security group that controls access to the license endpoint.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("subnetIds", required: true)]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// Identifies the VPC subnets that can connect to a license endpoint.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The VCP(virtual private cloud) ID associated with the license endpoint.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public LicenseEndpointArgs()
        {
        }
        public static new LicenseEndpointArgs Empty => new LicenseEndpointArgs();
    }
}
