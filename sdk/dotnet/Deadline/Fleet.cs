// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Deadline
{
    /// <summary>
    /// Definition of AWS::Deadline::Fleet Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:deadline:Fleet")]
    public partial class Fleet : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("capabilities")]
        public Output<Outputs.FleetCapabilities> Capabilities { get; private set; } = null!;

        [Output("configuration")]
        public Output<Union<Outputs.FleetConfiguration0Properties, Outputs.FleetConfiguration1Properties>> Configuration { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("farmId")]
        public Output<string?> FarmId { get; private set; } = null!;

        [Output("fleetId")]
        public Output<string> FleetId { get; private set; } = null!;

        [Output("maxWorkerCount")]
        public Output<int> MaxWorkerCount { get; private set; } = null!;

        [Output("minWorkerCount")]
        public Output<int?> MinWorkerCount { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("status")]
        public Output<Pulumi.AwsNative.Deadline.FleetStatus> Status { get; private set; } = null!;

        [Output("workerCount")]
        public Output<int> WorkerCount { get; private set; } = null!;


        /// <summary>
        /// Create a Fleet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Fleet(string name, FleetArgs args, CustomResourceOptions? options = null)
            : base("aws-native:deadline:Fleet", name, args ?? new FleetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Fleet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:deadline:Fleet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "farmId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Fleet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Fleet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Fleet(name, id, options);
        }
    }

    public sealed class FleetArgs : global::Pulumi.ResourceArgs
    {
        [Input("configuration", required: true)]
        public InputUnion<Inputs.FleetConfiguration0PropertiesArgs, Inputs.FleetConfiguration1PropertiesArgs> Configuration { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("farmId")]
        public Input<string>? FarmId { get; set; }

        [Input("maxWorkerCount", required: true)]
        public Input<int> MaxWorkerCount { get; set; } = null!;

        [Input("minWorkerCount")]
        public Input<int>? MinWorkerCount { get; set; }

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        public FleetArgs()
        {
        }
        public static new FleetArgs Empty => new FleetArgs();
    }
}
