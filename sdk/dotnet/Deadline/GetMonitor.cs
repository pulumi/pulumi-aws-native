// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Deadline
{
    public static class GetMonitor
    {
        /// <summary>
        /// Definition of AWS::Deadline::Monitor Resource Type
        /// </summary>
        public static Task<GetMonitorResult> InvokeAsync(GetMonitorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMonitorResult>("aws-native:deadline:getMonitor", args ?? new GetMonitorArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Deadline::Monitor Resource Type
        /// </summary>
        public static Output<GetMonitorResult> Invoke(GetMonitorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitorResult>("aws-native:deadline:getMonitor", args ?? new GetMonitorInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Deadline::Monitor Resource Type
        /// </summary>
        public static Output<GetMonitorResult> Invoke(GetMonitorInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMonitorResult>("aws-native:deadline:getMonitor", args ?? new GetMonitorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMonitorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the monitor.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetMonitorArgs()
        {
        }
        public static new GetMonitorArgs Empty => new GetMonitorArgs();
    }

    public sealed class GetMonitorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the monitor.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetMonitorInvokeArgs()
        {
        }
        public static new GetMonitorInvokeArgs Empty => new GetMonitorInvokeArgs();
    }


    [OutputType]
    public sealed class GetMonitorResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the monitor.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The name of the monitor that displays on the Deadline Cloud console.
        /// 
        /// &gt; This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The Amazon Resource Name (ARN) that the IAM Identity Center assigned to the monitor when it was created.
        /// </summary>
        public readonly string? IdentityCenterApplicationArn;
        /// <summary>
        /// The unique identifier for the monitor.
        /// </summary>
        public readonly string? MonitorId;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role for the monitor. Users of the monitor use this role to access Deadline Cloud resources.
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// The subdomain used for the monitor URL. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.
        /// </summary>
        public readonly string? Subdomain;
        /// <summary>
        /// The complete URL of the monitor. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private GetMonitorResult(
            string? arn,

            string? displayName,

            string? identityCenterApplicationArn,

            string? monitorId,

            string? roleArn,

            string? subdomain,

            string? url)
        {
            Arn = arn;
            DisplayName = displayName;
            IdentityCenterApplicationArn = identityCenterApplicationArn;
            MonitorId = monitorId;
            RoleArn = roleArn;
            Subdomain = subdomain;
            Url = url;
        }
    }
}
