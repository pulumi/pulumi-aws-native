// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataZone
{
    public static class GetPolicyGrant
    {
        /// <summary>
        /// Policy Grant in AWS DataZone is an explicit authorization assignment that allows a specific principal (user, group, or project) to perform particular actions (such as creating glossary terms, managing projects, or accessing resources) on governed resources within a certain scope (like a Domain Unit or Project). Policy Grants are essentially the mechanism by which DataZone enforces fine-grained, role-based access control beyond what is possible through AWS IAM alone.
        /// </summary>
        public static Task<GetPolicyGrantResult> InvokeAsync(GetPolicyGrantArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyGrantResult>("aws-native:datazone:getPolicyGrant", args ?? new GetPolicyGrantArgs(), options.WithDefaults());

        /// <summary>
        /// Policy Grant in AWS DataZone is an explicit authorization assignment that allows a specific principal (user, group, or project) to perform particular actions (such as creating glossary terms, managing projects, or accessing resources) on governed resources within a certain scope (like a Domain Unit or Project). Policy Grants are essentially the mechanism by which DataZone enforces fine-grained, role-based access control beyond what is possible through AWS IAM alone.
        /// </summary>
        public static Output<GetPolicyGrantResult> Invoke(GetPolicyGrantInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyGrantResult>("aws-native:datazone:getPolicyGrant", args ?? new GetPolicyGrantInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Policy Grant in AWS DataZone is an explicit authorization assignment that allows a specific principal (user, group, or project) to perform particular actions (such as creating glossary terms, managing projects, or accessing resources) on governed resources within a certain scope (like a Domain Unit or Project). Policy Grants are essentially the mechanism by which DataZone enforces fine-grained, role-based access control beyond what is possible through AWS IAM alone.
        /// </summary>
        public static Output<GetPolicyGrantResult> Invoke(GetPolicyGrantInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyGrantResult>("aws-native:datazone:getPolicyGrant", args ?? new GetPolicyGrantInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyGrantArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the domain where you want to add a policy grant.
        /// </summary>
        [Input("domainIdentifier", required: true)]
        public string DomainIdentifier { get; set; } = null!;

        /// <summary>
        /// The ID of the entity (resource) to which you want to add a policy grant.
        /// </summary>
        [Input("entityIdentifier", required: true)]
        public string EntityIdentifier { get; set; } = null!;

        /// <summary>
        /// The type of entity (resource) to which the grant is added.
        /// </summary>
        [Input("entityType", required: true)]
        public Pulumi.AwsNative.DataZone.PolicyGrantTargetEntityType EntityType { get; set; }

        /// <summary>
        /// The unique identifier of the policy grant returned by the AddPolicyGrant API
        /// </summary>
        [Input("grantId", required: true)]
        public string GrantId { get; set; } = null!;

        /// <summary>
        /// The type of policy that you want to grant.
        /// </summary>
        [Input("policyType", required: true)]
        public Pulumi.AwsNative.DataZone.PolicyGrantManagedPolicyType PolicyType { get; set; }

        public GetPolicyGrantArgs()
        {
        }
        public static new GetPolicyGrantArgs Empty => new GetPolicyGrantArgs();
    }

    public sealed class GetPolicyGrantInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the domain where you want to add a policy grant.
        /// </summary>
        [Input("domainIdentifier", required: true)]
        public Input<string> DomainIdentifier { get; set; } = null!;

        /// <summary>
        /// The ID of the entity (resource) to which you want to add a policy grant.
        /// </summary>
        [Input("entityIdentifier", required: true)]
        public Input<string> EntityIdentifier { get; set; } = null!;

        /// <summary>
        /// The type of entity (resource) to which the grant is added.
        /// </summary>
        [Input("entityType", required: true)]
        public Input<Pulumi.AwsNative.DataZone.PolicyGrantTargetEntityType> EntityType { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the policy grant returned by the AddPolicyGrant API
        /// </summary>
        [Input("grantId", required: true)]
        public Input<string> GrantId { get; set; } = null!;

        /// <summary>
        /// The type of policy that you want to grant.
        /// </summary>
        [Input("policyType", required: true)]
        public Input<Pulumi.AwsNative.DataZone.PolicyGrantManagedPolicyType> PolicyType { get; set; } = null!;

        public GetPolicyGrantInvokeArgs()
        {
        }
        public static new GetPolicyGrantInvokeArgs Empty => new GetPolicyGrantInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyGrantResult
    {
        /// <summary>
        /// Specifies the timestamp at which policy grant member was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// Specifies the user who created the policy grant member.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// The unique identifier of the policy grant returned by the AddPolicyGrant API
        /// </summary>
        public readonly string? GrantId;

        [OutputConstructor]
        private GetPolicyGrantResult(
            string? createdAt,

            string? createdBy,

            string? grantId)
        {
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            GrantId = grantId;
        }
    }
}
