// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataZone
{
    public static class GetGroupProfile
    {
        /// <summary>
        /// Group profiles represent groups of Amazon DataZone users. Groups can be manually created, or mapped to Active Directory groups of enterprise customers. In Amazon DataZone, groups serve two purposes. First, a group can map to a team of users in the organizational chart, and thus reduce the administrative work of a Amazon DataZone project owner when there are new employees joining or leaving a team. Second, corporate administrators use Active Directory groups to manage and update user statuses and so Amazon DataZone domain administrators can use these group memberships to implement Amazon DataZone domain policies.
        /// </summary>
        public static Task<GetGroupProfileResult> InvokeAsync(GetGroupProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupProfileResult>("aws-native:datazone:getGroupProfile", args ?? new GetGroupProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Group profiles represent groups of Amazon DataZone users. Groups can be manually created, or mapped to Active Directory groups of enterprise customers. In Amazon DataZone, groups serve two purposes. First, a group can map to a team of users in the organizational chart, and thus reduce the administrative work of a Amazon DataZone project owner when there are new employees joining or leaving a team. Second, corporate administrators use Active Directory groups to manage and update user statuses and so Amazon DataZone domain administrators can use these group memberships to implement Amazon DataZone domain policies.
        /// </summary>
        public static Output<GetGroupProfileResult> Invoke(GetGroupProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupProfileResult>("aws-native:datazone:getGroupProfile", args ?? new GetGroupProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the Amazon DataZone domain in which the group profile is created.
        /// </summary>
        [Input("domainId", required: true)]
        public string DomainId { get; set; } = null!;

        /// <summary>
        /// The ID of the Amazon DataZone group profile.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetGroupProfileArgs()
        {
        }
        public static new GetGroupProfileArgs Empty => new GetGroupProfileArgs();
    }

    public sealed class GetGroupProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of the Amazon DataZone domain in which the group profile is created.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        /// <summary>
        /// The ID of the Amazon DataZone group profile.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetGroupProfileInvokeArgs()
        {
        }
        public static new GetGroupProfileInvokeArgs Empty => new GetGroupProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupProfileResult
    {
        /// <summary>
        /// The identifier of the Amazon DataZone domain in which the group profile is created.
        /// </summary>
        public readonly string? DomainId;
        /// <summary>
        /// The group-name of the Group Profile.
        /// </summary>
        public readonly string? GroupName;
        /// <summary>
        /// The ID of the Amazon DataZone group profile.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The status of a group profile.
        /// </summary>
        public readonly Pulumi.AwsNative.DataZone.GroupProfileStatus? Status;

        [OutputConstructor]
        private GetGroupProfileResult(
            string? domainId,

            string? groupName,

            string? id,

            Pulumi.AwsNative.DataZone.GroupProfileStatus? status)
        {
            DomainId = domainId;
            GroupName = groupName;
            Id = id;
            Status = status;
        }
    }
}
