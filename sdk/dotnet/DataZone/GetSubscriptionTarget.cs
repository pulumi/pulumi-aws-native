// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataZone
{
    public static class GetSubscriptionTarget
    {
        /// <summary>
        /// Subscription targets enables one to access the data to which you have subscribed in your projects.
        /// </summary>
        public static Task<GetSubscriptionTargetResult> InvokeAsync(GetSubscriptionTargetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionTargetResult>("aws-native:datazone:getSubscriptionTarget", args ?? new GetSubscriptionTargetArgs(), options.WithDefaults());

        /// <summary>
        /// Subscription targets enables one to access the data to which you have subscribed in your projects.
        /// </summary>
        public static Output<GetSubscriptionTargetResult> Invoke(GetSubscriptionTargetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionTargetResult>("aws-native:datazone:getSubscriptionTarget", args ?? new GetSubscriptionTargetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionTargetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Amazon DataZone domain in which subscription target is created.
        /// </summary>
        [Input("domainId", required: true)]
        public string DomainId { get; set; } = null!;

        /// <summary>
        /// The ID of the environment in which subscription target is created.
        /// </summary>
        [Input("environmentId", required: true)]
        public string EnvironmentId { get; set; } = null!;

        /// <summary>
        /// The ID of the subscription target.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSubscriptionTargetArgs()
        {
        }
        public static new GetSubscriptionTargetArgs Empty => new GetSubscriptionTargetArgs();
    }

    public sealed class GetSubscriptionTargetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Amazon DataZone domain in which subscription target is created.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        /// <summary>
        /// The ID of the environment in which subscription target is created.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        /// <summary>
        /// The ID of the subscription target.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSubscriptionTargetInvokeArgs()
        {
        }
        public static new GetSubscriptionTargetInvokeArgs Empty => new GetSubscriptionTargetInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionTargetResult
    {
        /// <summary>
        /// The asset types that can be included in the subscription target.
        /// </summary>
        public readonly ImmutableArray<string> ApplicableAssetTypes;
        /// <summary>
        /// The authorized principals of the subscription target.
        /// </summary>
        public readonly ImmutableArray<string> AuthorizedPrincipals;
        /// <summary>
        /// The timestamp of when the subscription target was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The Amazon DataZone user who created the subscription target.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// The ID of the Amazon DataZone domain in which subscription target is created.
        /// </summary>
        public readonly string? DomainId;
        /// <summary>
        /// The ID of the environment in which subscription target is created.
        /// </summary>
        public readonly string? EnvironmentId;
        /// <summary>
        /// The ID of the subscription target.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The manage access role that is used to create the subscription target.
        /// </summary>
        public readonly string? ManageAccessRole;
        /// <summary>
        /// The name of the subscription target.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The identifier of the project specified in the subscription target.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// The provider of the subscription target.
        /// </summary>
        public readonly string? Provider;
        /// <summary>
        /// The configuration of the subscription target.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubscriptionTargetForm> SubscriptionTargetConfig;
        /// <summary>
        /// The timestamp of when the subscription target was updated.
        /// </summary>
        public readonly string? UpdatedAt;
        /// <summary>
        /// The Amazon DataZone user who updated the subscription target.
        /// </summary>
        public readonly string? UpdatedBy;

        [OutputConstructor]
        private GetSubscriptionTargetResult(
            ImmutableArray<string> applicableAssetTypes,

            ImmutableArray<string> authorizedPrincipals,

            string? createdAt,

            string? createdBy,

            string? domainId,

            string? environmentId,

            string? id,

            string? manageAccessRole,

            string? name,

            string? projectId,

            string? provider,

            ImmutableArray<Outputs.SubscriptionTargetForm> subscriptionTargetConfig,

            string? updatedAt,

            string? updatedBy)
        {
            ApplicableAssetTypes = applicableAssetTypes;
            AuthorizedPrincipals = authorizedPrincipals;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            DomainId = domainId;
            EnvironmentId = environmentId;
            Id = id;
            ManageAccessRole = manageAccessRole;
            Name = name;
            ProjectId = projectId;
            Provider = provider;
            SubscriptionTargetConfig = subscriptionTargetConfig;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
        }
    }
}
