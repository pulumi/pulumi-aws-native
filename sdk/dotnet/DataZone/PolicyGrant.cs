// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataZone
{
    /// <summary>
    /// Policy Grant in AWS DataZone is an explicit authorization assignment that allows a specific principal (user, group, or project) to perform particular actions (such as creating glossary terms, managing projects, or accessing resources) on governed resources within a certain scope (like a Domain Unit or Project). Policy Grants are essentially the mechanism by which DataZone enforces fine-grained, role-based access control beyond what is possible through AWS IAM alone.
    /// </summary>
    [AwsNativeResourceType("aws-native:datazone:PolicyGrant")]
    public partial class PolicyGrant : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the timestamp at which policy grant member was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Specifies the user who created the policy grant member.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        [Output("detail")]
        public Output<object?> Detail { get; private set; } = null!;

        [Output("domainIdentifier")]
        public Output<string> DomainIdentifier { get; private set; } = null!;

        [Output("entityIdentifier")]
        public Output<string> EntityIdentifier { get; private set; } = null!;

        [Output("entityType")]
        public Output<Pulumi.AwsNative.DataZone.PolicyGrantTargetEntityType> EntityType { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the policy grant returned by the AddPolicyGrant API
        /// </summary>
        [Output("grantId")]
        public Output<string> GrantId { get; private set; } = null!;

        [Output("policyType")]
        public Output<string> PolicyType { get; private set; } = null!;

        [Output("principal")]
        public Output<object?> Principal { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyGrant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyGrant(string name, PolicyGrantArgs args, CustomResourceOptions? options = null)
            : base("aws-native:datazone:PolicyGrant", name, args ?? new PolicyGrantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyGrant(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:datazone:PolicyGrant", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "detail",
                    "domainIdentifier",
                    "entityIdentifier",
                    "entityType",
                    "policyType",
                    "principal",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyGrant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyGrant Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PolicyGrant(name, id, options);
        }
    }

    public sealed class PolicyGrantArgs : global::Pulumi.ResourceArgs
    {
        [Input("detail")]
        public object? Detail { get; set; }

        [Input("domainIdentifier", required: true)]
        public Input<string> DomainIdentifier { get; set; } = null!;

        [Input("entityIdentifier", required: true)]
        public Input<string> EntityIdentifier { get; set; } = null!;

        [Input("entityType", required: true)]
        public Input<Pulumi.AwsNative.DataZone.PolicyGrantTargetEntityType> EntityType { get; set; } = null!;

        [Input("policyType", required: true)]
        public Input<string> PolicyType { get; set; } = null!;

        [Input("principal")]
        public object? Principal { get; set; }

        public PolicyGrantArgs()
        {
        }
        public static new PolicyGrantArgs Empty => new PolicyGrantArgs();
    }
}
