// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataZone
{
    /// <summary>
    /// Definition of AWS::DataZone::EnvironmentBlueprintConfiguration Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:datazone:EnvironmentBlueprintConfiguration")]
    public partial class EnvironmentBlueprintConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp of when an environment blueprint was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The identifier of the Amazon DataZone domain in which an environment blueprint exists.
        /// </summary>
        [Output("domainId")]
        public Output<string> DomainId { get; private set; } = null!;

        /// <summary>
        /// The identifier of the Amazon DataZone domain in which an environment blueprint exists.
        /// </summary>
        [Output("domainIdentifier")]
        public Output<string> DomainIdentifier { get; private set; } = null!;

        /// <summary>
        /// The enabled AWS Regions specified in a blueprint configuration.
        /// </summary>
        [Output("enabledRegions")]
        public Output<ImmutableArray<string>> EnabledRegions { get; private set; } = null!;

        /// <summary>
        /// The identifier of the environment blueprint. This identifier should be used when creating environment profiles.
        /// </summary>
        [Output("environmentBlueprintId")]
        public Output<string> EnvironmentBlueprintId { get; private set; } = null!;

        /// <summary>
        /// The identifier of the environment blueprint.
        /// 
        /// In the current release, only the following values are supported: `DefaultDataLake` and `DefaultDataWarehouse` .
        /// </summary>
        [Output("environmentBlueprintIdentifier")]
        public Output<string> EnvironmentBlueprintIdentifier { get; private set; } = null!;

        /// <summary>
        /// The ARN of the manage access role.
        /// </summary>
        [Output("manageAccessRoleArn")]
        public Output<string?> ManageAccessRoleArn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the provisioning role.
        /// </summary>
        [Output("provisioningRoleArn")]
        public Output<string?> ProvisioningRoleArn { get; private set; } = null!;

        /// <summary>
        /// The regional parameters of the environment blueprint.
        /// </summary>
        [Output("regionalParameters")]
        public Output<ImmutableArray<Outputs.EnvironmentBlueprintConfigurationRegionalParameter>> RegionalParameters { get; private set; } = null!;

        /// <summary>
        /// The timestamp of when the environment blueprint was updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a EnvironmentBlueprintConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnvironmentBlueprintConfiguration(string name, EnvironmentBlueprintConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:datazone:EnvironmentBlueprintConfiguration", name, args ?? new EnvironmentBlueprintConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnvironmentBlueprintConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:datazone:EnvironmentBlueprintConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "domainIdentifier",
                    "environmentBlueprintIdentifier",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnvironmentBlueprintConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnvironmentBlueprintConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new EnvironmentBlueprintConfiguration(name, id, options);
        }
    }

    public sealed class EnvironmentBlueprintConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier of the Amazon DataZone domain in which an environment blueprint exists.
        /// </summary>
        [Input("domainIdentifier", required: true)]
        public Input<string> DomainIdentifier { get; set; } = null!;

        [Input("enabledRegions", required: true)]
        private InputList<string>? _enabledRegions;

        /// <summary>
        /// The enabled AWS Regions specified in a blueprint configuration.
        /// </summary>
        public InputList<string> EnabledRegions
        {
            get => _enabledRegions ?? (_enabledRegions = new InputList<string>());
            set => _enabledRegions = value;
        }

        /// <summary>
        /// The identifier of the environment blueprint.
        /// 
        /// In the current release, only the following values are supported: `DefaultDataLake` and `DefaultDataWarehouse` .
        /// </summary>
        [Input("environmentBlueprintIdentifier", required: true)]
        public Input<string> EnvironmentBlueprintIdentifier { get; set; } = null!;

        /// <summary>
        /// The ARN of the manage access role.
        /// </summary>
        [Input("manageAccessRoleArn")]
        public Input<string>? ManageAccessRoleArn { get; set; }

        /// <summary>
        /// The ARN of the provisioning role.
        /// </summary>
        [Input("provisioningRoleArn")]
        public Input<string>? ProvisioningRoleArn { get; set; }

        [Input("regionalParameters")]
        private InputList<Inputs.EnvironmentBlueprintConfigurationRegionalParameterArgs>? _regionalParameters;

        /// <summary>
        /// The regional parameters of the environment blueprint.
        /// </summary>
        public InputList<Inputs.EnvironmentBlueprintConfigurationRegionalParameterArgs> RegionalParameters
        {
            get => _regionalParameters ?? (_regionalParameters = new InputList<Inputs.EnvironmentBlueprintConfigurationRegionalParameterArgs>());
            set => _regionalParameters = value;
        }

        public EnvironmentBlueprintConfigurationArgs()
        {
        }
        public static new EnvironmentBlueprintConfigurationArgs Empty => new EnvironmentBlueprintConfigurationArgs();
    }
}
