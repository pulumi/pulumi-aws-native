// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataZone
{
    /// <summary>
    /// A user profile represents Amazon DataZone users. Amazon DataZone supports both IAM roles and SSO identities to interact with the Amazon DataZone Management Console and the data portal for different purposes. Domain administrators use IAM roles to perform the initial administrative domain-related work in the Amazon DataZone Management Console, including creating new Amazon DataZone domains, configuring metadata form types, and implementing policies. Data workers use their SSO corporate identities via Identity Center to log into the Amazon DataZone Data Portal and access projects where they have memberships.
    /// </summary>
    [AwsNativeResourceType("aws-native:datazone:UserProfile")]
    public partial class UserProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Amazon DataZone user profile.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        [Output("details")]
        public Output<Union<Outputs.UserProfileDetails0Properties, Outputs.UserProfileDetails1Properties>> Details { get; private set; } = null!;

        /// <summary>
        /// The identifier of the Amazon DataZone domain in which the user profile is created.
        /// </summary>
        [Output("domainId")]
        public Output<string> DomainId { get; private set; } = null!;

        /// <summary>
        /// The identifier of the Amazon DataZone domain in which the user profile would be created.
        /// </summary>
        [Output("domainIdentifier")]
        public Output<string> DomainIdentifier { get; private set; } = null!;

        /// <summary>
        /// The status of the user profile.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.AwsNative.DataZone.UserProfileStatus?> Status { get; private set; } = null!;

        /// <summary>
        /// The type of the user profile.
        /// </summary>
        [Output("type")]
        public Output<Pulumi.AwsNative.DataZone.UserProfileType> Type { get; private set; } = null!;

        /// <summary>
        /// The ID of the user.
        /// </summary>
        [Output("userIdentifier")]
        public Output<string> UserIdentifier { get; private set; } = null!;

        /// <summary>
        /// The user type of the user for which the user profile is created.
        /// </summary>
        [Output("userType")]
        public Output<Pulumi.AwsNative.DataZone.UserProfileUserType?> UserType { get; private set; } = null!;


        /// <summary>
        /// Create a UserProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserProfile(string name, UserProfileArgs args, CustomResourceOptions? options = null)
            : base("aws-native:datazone:UserProfile", name, args ?? new UserProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserProfile(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:datazone:UserProfile", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "domainIdentifier",
                    "userIdentifier",
                    "userType",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserProfile Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new UserProfile(name, id, options);
        }
    }

    public sealed class UserProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier of the Amazon DataZone domain in which the user profile would be created.
        /// </summary>
        [Input("domainIdentifier", required: true)]
        public Input<string> DomainIdentifier { get; set; } = null!;

        /// <summary>
        /// The status of the user profile.
        /// </summary>
        [Input("status")]
        public Input<Pulumi.AwsNative.DataZone.UserProfileStatus>? Status { get; set; }

        /// <summary>
        /// The ID of the user.
        /// </summary>
        [Input("userIdentifier", required: true)]
        public Input<string> UserIdentifier { get; set; } = null!;

        /// <summary>
        /// The user type of the user for which the user profile is created.
        /// </summary>
        [Input("userType")]
        public Input<Pulumi.AwsNative.DataZone.UserProfileUserType>? UserType { get; set; }

        public UserProfileArgs()
        {
        }
        public static new UserProfileArgs Empty => new UserProfileArgs();
    }
}
