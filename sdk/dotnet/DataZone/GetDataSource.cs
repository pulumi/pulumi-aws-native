// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataZone
{
    public static class GetDataSource
    {
        /// <summary>
        /// Definition of AWS::DataZone::DataSource Resource Type
        /// </summary>
        public static Task<GetDataSourceResult> InvokeAsync(GetDataSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataSourceResult>("aws-native:datazone:getDataSource", args ?? new GetDataSourceArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::DataZone::DataSource Resource Type
        /// </summary>
        public static Output<GetDataSourceResult> Invoke(GetDataSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceResult>("aws-native:datazone:getDataSource", args ?? new GetDataSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Amazon DataZone domain where the data source is created.
        /// </summary>
        [Input("domainId", required: true)]
        public string DomainId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the data source.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDataSourceArgs()
        {
        }
        public static new GetDataSourceArgs Empty => new GetDataSourceArgs();
    }

    public sealed class GetDataSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Amazon DataZone domain where the data source is created.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the data source.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDataSourceInvokeArgs()
        {
        }
        public static new GetDataSourceInvokeArgs Empty => new GetDataSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataSourceResult
    {
        /// <summary>
        /// The timestamp of when the data source was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The description of the data source.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The ID of the Amazon DataZone domain where the data source is created.
        /// </summary>
        public readonly string? DomainId;
        /// <summary>
        /// Specifies whether the data source is enabled.
        /// </summary>
        public readonly Pulumi.AwsNative.DataZone.DataSourceEnableSetting? EnableSetting;
        /// <summary>
        /// The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
        /// </summary>
        public readonly string? EnvironmentId;
        /// <summary>
        /// The unique identifier of the data source.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The number of assets created by the data source during its last run.
        /// </summary>
        public readonly double? LastRunAssetCount;
        /// <summary>
        /// The timestamp that specifies when the data source was last run.
        /// </summary>
        public readonly string? LastRunAt;
        /// <summary>
        /// The status of the last run of this data source.
        /// </summary>
        public readonly string? LastRunStatus;
        /// <summary>
        /// The name of the data source.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The ID of the Amazon DataZone project to which the data source is added.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.
        /// </summary>
        public readonly bool? PublishOnImport;
        /// <summary>
        /// Specifies whether the business name generation is to be enabled for this data source.
        /// </summary>
        public readonly Outputs.DataSourceRecommendationConfiguration? Recommendation;
        /// <summary>
        /// The schedule of the data source runs.
        /// </summary>
        public readonly Outputs.DataSourceScheduleConfiguration? Schedule;
        /// <summary>
        /// The status of the data source.
        /// </summary>
        public readonly Pulumi.AwsNative.DataZone.DataSourceStatus? Status;
        /// <summary>
        /// The timestamp of when this data source was updated.
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private GetDataSourceResult(
            string? createdAt,

            string? description,

            string? domainId,

            Pulumi.AwsNative.DataZone.DataSourceEnableSetting? enableSetting,

            string? environmentId,

            string? id,

            double? lastRunAssetCount,

            string? lastRunAt,

            string? lastRunStatus,

            string? name,

            string? projectId,

            bool? publishOnImport,

            Outputs.DataSourceRecommendationConfiguration? recommendation,

            Outputs.DataSourceScheduleConfiguration? schedule,

            Pulumi.AwsNative.DataZone.DataSourceStatus? status,

            string? updatedAt)
        {
            CreatedAt = createdAt;
            Description = description;
            DomainId = domainId;
            EnableSetting = enableSetting;
            EnvironmentId = environmentId;
            Id = id;
            LastRunAssetCount = lastRunAssetCount;
            LastRunAt = lastRunAt;
            LastRunStatus = lastRunStatus;
            Name = name;
            ProjectId = projectId;
            PublishOnImport = publishOnImport;
            Recommendation = recommendation;
            Schedule = schedule;
            Status = status;
            UpdatedAt = updatedAt;
        }
    }
}
