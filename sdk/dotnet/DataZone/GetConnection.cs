// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataZone
{
    public static class GetConnection
    {
        /// <summary>
        /// Connections enables users to connect their DataZone resources (domains, projects, and environments) to external resources/services (data, compute, etc)
        /// </summary>
        public static Task<GetConnectionResult> InvokeAsync(GetConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectionResult>("aws-native:datazone:getConnection", args ?? new GetConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Connections enables users to connect their DataZone resources (domains, projects, and environments) to external resources/services (data, compute, etc)
        /// </summary>
        public static Output<GetConnectionResult> Invoke(GetConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionResult>("aws-native:datazone:getConnection", args ?? new GetConnectionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Connections enables users to connect their DataZone resources (domains, projects, and environments) to external resources/services (data, compute, etc)
        /// </summary>
        public static Output<GetConnectionResult> Invoke(GetConnectionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionResult>("aws-native:datazone:getConnection", args ?? new GetConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the connection.
        /// </summary>
        [Input("connectionId", required: true)]
        public string ConnectionId { get; set; } = null!;

        /// <summary>
        /// The ID of the domain in which the connection is created.
        /// </summary>
        [Input("domainId", required: true)]
        public string DomainId { get; set; } = null!;

        public GetConnectionArgs()
        {
        }
        public static new GetConnectionArgs Empty => new GetConnectionArgs();
    }

    public sealed class GetConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the connection.
        /// </summary>
        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        /// <summary>
        /// The ID of the domain in which the connection is created.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        public GetConnectionInvokeArgs()
        {
        }
        public static new GetConnectionInvokeArgs Empty => new GetConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectionResult
    {
        /// <summary>
        /// The ID of the connection.
        /// </summary>
        public readonly string? ConnectionId;
        /// <summary>
        /// The description of the connection.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The ID of the domain in which the connection is created.
        /// </summary>
        public readonly string? DomainId;
        /// <summary>
        /// The ID of the domain unit in which the connection is created.
        /// </summary>
        public readonly string? DomainUnitId;
        /// <summary>
        /// The ID of the environment in which the connection is created.
        /// </summary>
        public readonly string? EnvironmentId;
        /// <summary>
        /// The role of the user in the environment.
        /// </summary>
        public readonly string? EnvironmentUserRole;
        /// <summary>
        /// The ID of the project in which the connection is created.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// The type of the connection.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetConnectionResult(
            string? connectionId,

            string? description,

            string? domainId,

            string? domainUnitId,

            string? environmentId,

            string? environmentUserRole,

            string? projectId,

            string? type)
        {
            ConnectionId = connectionId;
            Description = description;
            DomainId = domainId;
            DomainUnitId = domainUnitId;
            EnvironmentId = environmentId;
            EnvironmentUserRole = environmentUserRole;
            ProjectId = projectId;
            Type = type;
        }
    }
}
