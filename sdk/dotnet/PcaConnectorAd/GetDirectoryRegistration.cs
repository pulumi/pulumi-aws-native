// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.PcaConnectorAd
{
    public static class GetDirectoryRegistration
    {
        /// <summary>
        /// Definition of AWS::PCAConnectorAD::DirectoryRegistration Resource Type
        /// </summary>
        public static Task<GetDirectoryRegistrationResult> InvokeAsync(GetDirectoryRegistrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDirectoryRegistrationResult>("aws-native:pcaconnectorad:getDirectoryRegistration", args ?? new GetDirectoryRegistrationArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::PCAConnectorAD::DirectoryRegistration Resource Type
        /// </summary>
        public static Output<GetDirectoryRegistrationResult> Invoke(GetDirectoryRegistrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDirectoryRegistrationResult>("aws-native:pcaconnectorad:getDirectoryRegistration", args ?? new GetDirectoryRegistrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDirectoryRegistrationArgs : global::Pulumi.InvokeArgs
    {
        [Input("directoryRegistrationArn", required: true)]
        public string DirectoryRegistrationArn { get; set; } = null!;

        public GetDirectoryRegistrationArgs()
        {
        }
        public static new GetDirectoryRegistrationArgs Empty => new GetDirectoryRegistrationArgs();
    }

    public sealed class GetDirectoryRegistrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("directoryRegistrationArn", required: true)]
        public Input<string> DirectoryRegistrationArn { get; set; } = null!;

        public GetDirectoryRegistrationInvokeArgs()
        {
        }
        public static new GetDirectoryRegistrationInvokeArgs Empty => new GetDirectoryRegistrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetDirectoryRegistrationResult
    {
        public readonly string? DirectoryRegistrationArn;

        [OutputConstructor]
        private GetDirectoryRegistrationResult(string? directoryRegistrationArn)
        {
            DirectoryRegistrationArn = directoryRegistrationArn;
        }
    }
}
