// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Detective
{
    public static class GetGraph
    {
        /// <summary>
        /// Resource schema for AWS::Detective::Graph
        /// </summary>
        public static Task<GetGraphResult> InvokeAsync(GetGraphArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGraphResult>("aws-native:detective:getGraph", args ?? new GetGraphArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Detective::Graph
        /// </summary>
        public static Output<GetGraphResult> Invoke(GetGraphInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGraphResult>("aws-native:detective:getGraph", args ?? new GetGraphInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGraphArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Detective graph ARN
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetGraphArgs()
        {
        }
    }

    public sealed class GetGraphInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Detective graph ARN
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetGraphInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGraphResult
    {
        /// <summary>
        /// The Detective graph ARN
        /// </summary>
        public readonly string? Arn;
        public readonly ImmutableArray<Outputs.GraphTag> Tags;

        [OutputConstructor]
        private GetGraphResult(
            string? arn,

            ImmutableArray<Outputs.GraphTag> tags)
        {
            Arn = arn;
            Tags = tags;
        }
    }
}
