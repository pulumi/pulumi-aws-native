// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetCapacityReservation
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::CapacityReservation
        /// </summary>
        public static Task<GetCapacityReservationResult> InvokeAsync(GetCapacityReservationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCapacityReservationResult>("aws-native:ec2:getCapacityReservation", args ?? new GetCapacityReservationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::CapacityReservation
        /// </summary>
        public static Output<GetCapacityReservationResult> Invoke(GetCapacityReservationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCapacityReservationResult>("aws-native:ec2:getCapacityReservation", args ?? new GetCapacityReservationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::CapacityReservation
        /// </summary>
        public static Output<GetCapacityReservationResult> Invoke(GetCapacityReservationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCapacityReservationResult>("aws-native:ec2:getCapacityReservation", args ?? new GetCapacityReservationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCapacityReservationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Capacity Reservation.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetCapacityReservationArgs()
        {
        }
        public static new GetCapacityReservationArgs Empty => new GetCapacityReservationArgs();
    }

    public sealed class GetCapacityReservationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Capacity Reservation.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetCapacityReservationInvokeArgs()
        {
        }
        public static new GetCapacityReservationInvokeArgs Empty => new GetCapacityReservationInvokeArgs();
    }


    [OutputType]
    public sealed class GetCapacityReservationResult
    {
        /// <summary>
        /// Returns the remaining capacity, which indicates the number of instances that can be launched in the Capacity Reservation. For example: `9` .
        /// </summary>
        public readonly int? AvailableInstanceCount;
        /// <summary>
        /// The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to `expired` when it reaches its end date and time.
        /// 
        /// You must provide an `EndDate` value if `EndDateType` is `limited` . Omit `EndDate` if `EndDateType` is `unlimited` .
        /// 
        /// If the `EndDateType` is `limited` , the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.
        /// 
        /// If you are requesting a future-dated Capacity Reservation, you can't specify an end date and time that is within the commitment duration.
        /// </summary>
        public readonly string? EndDate;
        /// <summary>
        /// Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:
        /// 
        /// - `unlimited` - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an `EndDate` if the `EndDateType` is `unlimited` .
        /// - `limited` - The Capacity Reservation expires automatically at a specified date and time. You must provide an `EndDate` value if the `EndDateType` value is `limited` .
        /// </summary>
        public readonly string? EndDateType;
        /// <summary>
        /// The ID of the Capacity Reservation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The number of instances for which to reserve capacity.
        /// 
        /// &gt; You can request future-dated Capacity Reservations for an instance count with a minimum of 100 VPUs. For example, if you request a future-dated Capacity Reservation for `m5.xlarge` instances, you must request at least 25 instances ( *25 * m5.xlarge = 100 vCPUs* ). 
        /// 
        /// Valid range: 1 - 1000
        /// </summary>
        public readonly int? InstanceCount;
        /// <summary>
        /// Indicates the type of instance launches that the Capacity Reservation accepts. The options include:
        /// 
        /// - `open` - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.
        /// - `targeted` - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.
        /// 
        /// &gt; If you are requesting a future-dated Capacity Reservation, you must specify `targeted` . 
        /// 
        /// Default: `open`
        /// </summary>
        public readonly string? InstanceMatchCriteria;
        /// <summary>
        /// Returns the total number of instances for which the Capacity Reservation reserves capacity. For example: `15` .
        /// </summary>
        public readonly int? TotalInstanceCount;

        [OutputConstructor]
        private GetCapacityReservationResult(
            int? availableInstanceCount,

            string? endDate,

            string? endDateType,

            string? id,

            int? instanceCount,

            string? instanceMatchCriteria,

            int? totalInstanceCount)
        {
            AvailableInstanceCount = availableInstanceCount;
            EndDate = endDate;
            EndDateType = endDateType;
            Id = id;
            InstanceCount = instanceCount;
            InstanceMatchCriteria = instanceMatchCriteria;
            TotalInstanceCount = totalInstanceCount;
        }
    }
}
