// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetRouteServerPeer
    {
        /// <summary>
        /// VPC Route Server Peer
        /// </summary>
        public static Task<GetRouteServerPeerResult> InvokeAsync(GetRouteServerPeerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRouteServerPeerResult>("aws-native:ec2:getRouteServerPeer", args ?? new GetRouteServerPeerArgs(), options.WithDefaults());

        /// <summary>
        /// VPC Route Server Peer
        /// </summary>
        public static Output<GetRouteServerPeerResult> Invoke(GetRouteServerPeerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouteServerPeerResult>("aws-native:ec2:getRouteServerPeer", args ?? new GetRouteServerPeerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// VPC Route Server Peer
        /// </summary>
        public static Output<GetRouteServerPeerResult> Invoke(GetRouteServerPeerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouteServerPeerResult>("aws-native:ec2:getRouteServerPeer", args ?? new GetRouteServerPeerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRouteServerPeerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Route Server Peer.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRouteServerPeerArgs()
        {
        }
        public static new GetRouteServerPeerArgs Empty => new GetRouteServerPeerArgs();
    }

    public sealed class GetRouteServerPeerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Route Server Peer.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRouteServerPeerInvokeArgs()
        {
        }
        public static new GetRouteServerPeerInvokeArgs Empty => new GetRouteServerPeerInvokeArgs();
    }


    [OutputType]
    public sealed class GetRouteServerPeerResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Route Server Peer.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Elastic Network Interface IP address owned by the Route Server Endpoint
        /// </summary>
        public readonly string? EndpointEniAddress;
        /// <summary>
        /// Elastic Network Interface ID owned by the Route Server Endpoint
        /// </summary>
        public readonly string? EndpointEniId;
        /// <summary>
        /// The ID of the Route Server Peer.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Route Server ID
        /// </summary>
        public readonly string? RouteServerId;
        /// <summary>
        /// Subnet ID
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// VPC ID
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private GetRouteServerPeerResult(
            string? arn,

            string? endpointEniAddress,

            string? endpointEniId,

            string? id,

            string? routeServerId,

            string? subnetId,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            string? vpcId)
        {
            Arn = arn;
            EndpointEniAddress = endpointEniAddress;
            EndpointEniId = endpointEniId;
            Id = id;
            RouteServerId = routeServerId;
            SubnetId = subnetId;
            Tags = tags;
            VpcId = vpcId;
        }
    }
}
