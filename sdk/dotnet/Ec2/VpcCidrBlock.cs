// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    /// <summary>
    /// Resource Type definition for AWS::EC2::VPCCidrBlock
    /// </summary>
    [AwsNativeResourceType("aws-native:ec2:VpcCidrBlock")]
    public partial class VpcCidrBlock : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.
        /// </summary>
        [Output("amazonProvidedIpv6CidrBlock")]
        public Output<bool?> AmazonProvidedIpv6CidrBlock { get; private set; } = null!;

        /// <summary>
        /// The Id of the VPC associated CIDR Block.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// An IPv4 CIDR block to associate with the VPC.
        /// </summary>
        [Output("cidrBlock")]
        public Output<string?> CidrBlock { get; private set; } = null!;

        /// <summary>
        /// The IP Source of an IPv6 VPC CIDR Block.
        /// </summary>
        [Output("ipSource")]
        public Output<string> IpSource { get; private set; } = null!;

        /// <summary>
        /// The ID of the IPv4 IPAM pool to Associate a CIDR from to a VPC.
        /// </summary>
        [Output("ipv4IpamPoolId")]
        public Output<string?> Ipv4IpamPoolId { get; private set; } = null!;

        /// <summary>
        /// The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool.
        /// </summary>
        [Output("ipv4NetmaskLength")]
        public Output<int?> Ipv4NetmaskLength { get; private set; } = null!;

        /// <summary>
        /// The value denoting whether an IPv6 VPC CIDR Block is public or private.
        /// </summary>
        [Output("ipv6AddressAttribute")]
        public Output<string> Ipv6AddressAttribute { get; private set; } = null!;

        /// <summary>
        /// An IPv6 CIDR block from the IPv6 address pool.
        /// </summary>
        [Output("ipv6CidrBlock")]
        public Output<string?> Ipv6CidrBlock { get; private set; } = null!;

        /// <summary>
        /// The ID of the IPv6 IPAM pool to Associate a CIDR from to a VPC.
        /// </summary>
        [Output("ipv6IpamPoolId")]
        public Output<string?> Ipv6IpamPoolId { get; private set; } = null!;

        /// <summary>
        /// The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool.
        /// </summary>
        [Output("ipv6NetmaskLength")]
        public Output<int?> Ipv6NetmaskLength { get; private set; } = null!;

        /// <summary>
        /// The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
        /// </summary>
        [Output("ipv6Pool")]
        public Output<string?> Ipv6Pool { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcCidrBlock resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcCidrBlock(string name, VpcCidrBlockArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ec2:VpcCidrBlock", name, args ?? new VpcCidrBlockArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcCidrBlock(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ec2:VpcCidrBlock", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "amazonProvidedIpv6CidrBlock",
                    "cidrBlock",
                    "ipv4IpamPoolId",
                    "ipv4NetmaskLength",
                    "ipv6CidrBlock",
                    "ipv6IpamPoolId",
                    "ipv6NetmaskLength",
                    "ipv6Pool",
                    "vpcId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcCidrBlock resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcCidrBlock Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VpcCidrBlock(name, id, options);
        }
    }

    public sealed class VpcCidrBlockArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.
        /// </summary>
        [Input("amazonProvidedIpv6CidrBlock")]
        public Input<bool>? AmazonProvidedIpv6CidrBlock { get; set; }

        /// <summary>
        /// An IPv4 CIDR block to associate with the VPC.
        /// </summary>
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        /// <summary>
        /// The ID of the IPv4 IPAM pool to Associate a CIDR from to a VPC.
        /// </summary>
        [Input("ipv4IpamPoolId")]
        public Input<string>? Ipv4IpamPoolId { get; set; }

        /// <summary>
        /// The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool.
        /// </summary>
        [Input("ipv4NetmaskLength")]
        public Input<int>? Ipv4NetmaskLength { get; set; }

        /// <summary>
        /// An IPv6 CIDR block from the IPv6 address pool.
        /// </summary>
        [Input("ipv6CidrBlock")]
        public Input<string>? Ipv6CidrBlock { get; set; }

        /// <summary>
        /// The ID of the IPv6 IPAM pool to Associate a CIDR from to a VPC.
        /// </summary>
        [Input("ipv6IpamPoolId")]
        public Input<string>? Ipv6IpamPoolId { get; set; }

        /// <summary>
        /// The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool.
        /// </summary>
        [Input("ipv6NetmaskLength")]
        public Input<int>? Ipv6NetmaskLength { get; set; }

        /// <summary>
        /// The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
        /// </summary>
        [Input("ipv6Pool")]
        public Input<string>? Ipv6Pool { get; set; }

        /// <summary>
        /// The ID of the VPC.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public VpcCidrBlockArgs()
        {
        }
        public static new VpcCidrBlockArgs Empty => new VpcCidrBlockArgs();
    }
}
