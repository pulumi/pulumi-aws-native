// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetEc2Fleet
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::EC2Fleet
        /// </summary>
        public static Task<GetEc2FleetResult> InvokeAsync(GetEc2FleetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEc2FleetResult>("aws-native:ec2:getEc2Fleet", args ?? new GetEc2FleetArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::EC2Fleet
        /// </summary>
        public static Output<GetEc2FleetResult> Invoke(GetEc2FleetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEc2FleetResult>("aws-native:ec2:getEc2Fleet", args ?? new GetEc2FleetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEc2FleetArgs : global::Pulumi.InvokeArgs
    {
        [Input("fleetId", required: true)]
        public string FleetId { get; set; } = null!;

        public GetEc2FleetArgs()
        {
        }
        public static new GetEc2FleetArgs Empty => new GetEc2FleetArgs();
    }

    public sealed class GetEc2FleetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("fleetId", required: true)]
        public Input<string> FleetId { get; set; } = null!;

        public GetEc2FleetInvokeArgs()
        {
        }
        public static new GetEc2FleetInvokeArgs Empty => new GetEc2FleetInvokeArgs();
    }


    [OutputType]
    public sealed class GetEc2FleetResult
    {
        public readonly string? Context;
        public readonly Pulumi.AwsNative.Ec2.Ec2FleetExcessCapacityTerminationPolicy? ExcessCapacityTerminationPolicy;
        public readonly string? FleetId;
        public readonly Outputs.Ec2FleetTargetCapacitySpecificationRequest? TargetCapacitySpecification;

        [OutputConstructor]
        private GetEc2FleetResult(
            string? context,

            Pulumi.AwsNative.Ec2.Ec2FleetExcessCapacityTerminationPolicy? excessCapacityTerminationPolicy,

            string? fleetId,

            Outputs.Ec2FleetTargetCapacitySpecificationRequest? targetCapacitySpecification)
        {
            Context = context;
            ExcessCapacityTerminationPolicy = excessCapacityTerminationPolicy;
            FleetId = fleetId;
            TargetCapacitySpecification = targetCapacitySpecification;
        }
    }
}
