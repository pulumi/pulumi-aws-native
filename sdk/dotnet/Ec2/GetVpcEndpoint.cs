// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetVpcEndpoint
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCEndpoint
        /// </summary>
        public static Task<GetVpcEndpointResult> InvokeAsync(GetVpcEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcEndpointResult>("aws-native:ec2:getVpcEndpoint", args ?? new GetVpcEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCEndpoint
        /// </summary>
        public static Output<GetVpcEndpointResult> Invoke(GetVpcEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcEndpointResult>("aws-native:ec2:getVpcEndpoint", args ?? new GetVpcEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcEndpointArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetVpcEndpointArgs()
        {
        }
        public static new GetVpcEndpointArgs Empty => new GetVpcEndpointArgs();
    }

    public sealed class GetVpcEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetVpcEndpointInvokeArgs()
        {
        }
        public static new GetVpcEndpointInvokeArgs Empty => new GetVpcEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcEndpointResult
    {
        public readonly string? CreationTimestamp;
        public readonly ImmutableArray<string> DnsEntries;
        public readonly string? Id;
        public readonly ImmutableArray<string> NetworkInterfaceIds;
        /// <summary>
        /// A policy to attach to the endpoint that controls access to the service.
        /// </summary>
        public readonly string? PolicyDocument;
        /// <summary>
        /// Indicate whether to associate a private hosted zone with the specified VPC.
        /// </summary>
        public readonly bool? PrivateDnsEnabled;
        /// <summary>
        /// One or more route table IDs.
        /// </summary>
        public readonly ImmutableArray<string> RouteTableIds;
        /// <summary>
        /// The ID of one or more security groups to associate with the endpoint network interface.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// The ID of one or more subnets in which to create an endpoint network interface.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;

        [OutputConstructor]
        private GetVpcEndpointResult(
            string? creationTimestamp,

            ImmutableArray<string> dnsEntries,

            string? id,

            ImmutableArray<string> networkInterfaceIds,

            string? policyDocument,

            bool? privateDnsEnabled,

            ImmutableArray<string> routeTableIds,

            ImmutableArray<string> securityGroupIds,

            ImmutableArray<string> subnetIds)
        {
            CreationTimestamp = creationTimestamp;
            DnsEntries = dnsEntries;
            Id = id;
            NetworkInterfaceIds = networkInterfaceIds;
            PolicyDocument = policyDocument;
            PrivateDnsEnabled = privateDnsEnabled;
            RouteTableIds = routeTableIds;
            SecurityGroupIds = securityGroupIds;
            SubnetIds = subnetIds;
        }
    }
}
