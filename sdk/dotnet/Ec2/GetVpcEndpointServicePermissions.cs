// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetVpcEndpointServicePermissions
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCEndpointServicePermissions
        /// </summary>
        public static Task<GetVpcEndpointServicePermissionsResult> InvokeAsync(GetVpcEndpointServicePermissionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcEndpointServicePermissionsResult>("aws-native:ec2:getVpcEndpointServicePermissions", args ?? new GetVpcEndpointServicePermissionsArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCEndpointServicePermissions
        /// </summary>
        public static Output<GetVpcEndpointServicePermissionsResult> Invoke(GetVpcEndpointServicePermissionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcEndpointServicePermissionsResult>("aws-native:ec2:getVpcEndpointServicePermissions", args ?? new GetVpcEndpointServicePermissionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcEndpointServicePermissionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service.
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetVpcEndpointServicePermissionsArgs()
        {
        }
        public static new GetVpcEndpointServicePermissionsArgs Empty => new GetVpcEndpointServicePermissionsArgs();
    }

    public sealed class GetVpcEndpointServicePermissionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetVpcEndpointServicePermissionsInvokeArgs()
        {
        }
        public static new GetVpcEndpointServicePermissionsInvokeArgs Empty => new GetVpcEndpointServicePermissionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcEndpointServicePermissionsResult
    {
        /// <summary>
        /// The Amazon Resource Names (ARN) of one or more principals (for example, users, IAM roles, and AWS accounts ). Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked.
        /// </summary>
        public readonly ImmutableArray<string> AllowedPrincipals;

        [OutputConstructor]
        private GetVpcEndpointServicePermissionsResult(ImmutableArray<string> allowedPrincipals)
        {
            AllowedPrincipals = allowedPrincipals;
        }
    }
}
