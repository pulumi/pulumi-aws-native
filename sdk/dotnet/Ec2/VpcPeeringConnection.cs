// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    /// <summary>
    /// Resource Type definition for AWS::EC2::VPCPeeringConnection
    /// </summary>
    [AwsNativeResourceType("aws-native:ec2:VpcPeeringConnection")]
    public partial class VpcPeeringConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The AWS account ID of the owner of the accepter VPC.
        /// </summary>
        [Output("peerOwnerId")]
        public Output<string?> PeerOwnerId { get; private set; } = null!;

        /// <summary>
        /// The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.
        /// </summary>
        [Output("peerRegion")]
        public Output<string?> PeerRegion { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account.
        /// </summary>
        [Output("peerRoleArn")]
        public Output<string?> PeerRoleArn { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.
        /// </summary>
        [Output("peerVpcId")]
        public Output<string> PeerVpcId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.VpcPeeringConnectionTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcPeeringConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcPeeringConnection(string name, VpcPeeringConnectionArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ec2:VpcPeeringConnection", name, args ?? new VpcPeeringConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcPeeringConnection(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ec2:VpcPeeringConnection", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcPeeringConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcPeeringConnection Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VpcPeeringConnection(name, id, options);
        }
    }

    public sealed class VpcPeeringConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AWS account ID of the owner of the accepter VPC.
        /// </summary>
        [Input("peerOwnerId")]
        public Input<string>? PeerOwnerId { get; set; }

        /// <summary>
        /// The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.
        /// </summary>
        [Input("peerRegion")]
        public Input<string>? PeerRegion { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account.
        /// </summary>
        [Input("peerRoleArn")]
        public Input<string>? PeerRoleArn { get; set; }

        /// <summary>
        /// The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.
        /// </summary>
        [Input("peerVpcId", required: true)]
        public Input<string> PeerVpcId { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.VpcPeeringConnectionTagArgs>? _tags;
        public InputList<Inputs.VpcPeeringConnectionTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.VpcPeeringConnectionTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the VPC.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public VpcPeeringConnectionArgs()
        {
        }
        public static new VpcPeeringConnectionArgs Empty => new VpcPeeringConnectionArgs();
    }
}
