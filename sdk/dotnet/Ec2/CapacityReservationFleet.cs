// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    /// <summary>
    /// Resource Type definition for AWS::EC2::CapacityReservationFleet
    /// 
    /// ## Example Usage
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var ec2CapacityReservationFleetCanary = new AwsNative.Ec2.CapacityReservationFleet("ec2CapacityReservationFleetCanary", new()
    ///     {
    ///         AllocationStrategy = "prioritized",
    ///         InstanceTypeSpecifications = new[]
    ///         {
    ///             new AwsNative.Ec2.Inputs.CapacityReservationFleetInstanceTypeSpecificationArgs
    ///             {
    ///                 InstanceType = "c4.large",
    ///                 InstancePlatform = "Linux/UNIX",
    ///                 AvailabilityZone = "us-east-1a",
    ///                 Weight = 1,
    ///                 Priority = 1,
    ///             },
    ///             new AwsNative.Ec2.Inputs.CapacityReservationFleetInstanceTypeSpecificationArgs
    ///             {
    ///                 InstanceType = "c5.large",
    ///                 InstancePlatform = "Linux/UNIX",
    ///                 AvailabilityZone = "us-east-1a",
    ///                 Weight = 1,
    ///                 Priority = 2,
    ///             },
    ///         },
    ///         Tenancy = AwsNative.Ec2.CapacityReservationFleetTenancy.Default,
    ///         TotalTargetCapacity = 2,
    ///         InstanceMatchCriteria = AwsNative.Ec2.CapacityReservationFleetInstanceMatchCriteria.Open,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// </summary>
    [AwsNativeResourceType("aws-native:ec2:CapacityReservationFleet")]
    public partial class CapacityReservationFleet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use. Currently, only the `prioritized` allocation strategy is supported. For more information, see [Allocation strategy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#allocation-strategy) in the *Amazon EC2 User Guide* .
        /// 
        /// Valid values: `prioritized`
        /// </summary>
        [Output("allocationStrategy")]
        public Output<string?> AllocationStrategy { get; private set; } = null!;

        /// <summary>
        /// The ID of the Capacity Reservation Fleet.
        /// </summary>
        [Output("capacityReservationFleetId")]
        public Output<string> CapacityReservationFleetId { get; private set; } = null!;

        /// <summary>
        /// The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to `expired` and all of the Capacity Reservations in the Fleet expire.
        /// 
        /// The Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify `5/31/2019` , `13:30:55` , the Capacity Reservation Fleet is guaranteed to expire between `13:30:55` and `14:30:55` on `5/31/2019` .
        /// </summary>
        [Output("endDate")]
        public Output<string?> EndDate { get; private set; } = null!;

        /// <summary>
        /// Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.
        /// 
        /// Currently, Capacity Reservation Fleets support `open` instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.
        /// </summary>
        [Output("instanceMatchCriteria")]
        public Output<Pulumi.AwsNative.Ec2.CapacityReservationFleetInstanceMatchCriteria?> InstanceMatchCriteria { get; private set; } = null!;

        /// <summary>
        /// Information about the instance types for which to reserve the capacity.
        /// </summary>
        [Output("instanceTypeSpecifications")]
        public Output<ImmutableArray<Outputs.CapacityReservationFleetInstanceTypeSpecification>> InstanceTypeSpecifications { get; private set; } = null!;

        /// <summary>
        /// Used to add an end date to a Capacity Reservation Fleet that has no end date and time. To add an end date to a Capacity Reservation Fleet, specify `true` for this paramater and specify the end date and time (in UTC time format) for the *EndDate* parameter.
        /// </summary>
        [Output("noRemoveEndDate")]
        public Output<bool?> NoRemoveEndDate { get; private set; } = null!;

        /// <summary>
        /// Used to remove an end date from a Capacity Reservation Fleet that is configured to end automatically at a specific date and time. To remove the end date from a Capacity Reservation Fleet, specify `true` for this paramater and omit the *EndDate* parameter.
        /// </summary>
        [Output("removeEndDate")]
        public Output<bool?> RemoveEndDate { get; private set; } = null!;

        /// <summary>
        /// The tags to assign to the Capacity Reservation Fleet. The tags are automatically assigned to the Capacity Reservations in the Fleet.
        /// </summary>
        [Output("tagSpecifications")]
        public Output<ImmutableArray<Outputs.CapacityReservationFleetTagSpecification>> TagSpecifications { get; private set; } = null!;

        /// <summary>
        /// Indicates the tenancy of the Capacity Reservation Fleet. All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:
        /// 
        /// - `default` - The Capacity Reservation Fleet is created on hardware that is shared with other AWS accounts .
        /// - `dedicated` - The Capacity Reservations are created on single-tenant hardware that is dedicated to a single AWS account .
        /// </summary>
        [Output("tenancy")]
        public Output<Pulumi.AwsNative.Ec2.CapacityReservationFleetTenancy?> Tenancy { get; private set; } = null!;

        /// <summary>
        /// The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the *Amazon EC2 User Guide* .
        /// </summary>
        [Output("totalTargetCapacity")]
        public Output<int?> TotalTargetCapacity { get; private set; } = null!;


        /// <summary>
        /// Create a CapacityReservationFleet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CapacityReservationFleet(string name, CapacityReservationFleetArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:ec2:CapacityReservationFleet", name, args ?? new CapacityReservationFleetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CapacityReservationFleet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ec2:CapacityReservationFleet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "allocationStrategy",
                    "endDate",
                    "instanceMatchCriteria",
                    "instanceTypeSpecifications[*]",
                    "tagSpecifications[*]",
                    "tenancy",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CapacityReservationFleet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CapacityReservationFleet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CapacityReservationFleet(name, id, options);
        }
    }

    public sealed class CapacityReservationFleetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use. Currently, only the `prioritized` allocation strategy is supported. For more information, see [Allocation strategy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#allocation-strategy) in the *Amazon EC2 User Guide* .
        /// 
        /// Valid values: `prioritized`
        /// </summary>
        [Input("allocationStrategy")]
        public Input<string>? AllocationStrategy { get; set; }

        /// <summary>
        /// The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to `expired` and all of the Capacity Reservations in the Fleet expire.
        /// 
        /// The Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify `5/31/2019` , `13:30:55` , the Capacity Reservation Fleet is guaranteed to expire between `13:30:55` and `14:30:55` on `5/31/2019` .
        /// </summary>
        [Input("endDate")]
        public Input<string>? EndDate { get; set; }

        /// <summary>
        /// Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.
        /// 
        /// Currently, Capacity Reservation Fleets support `open` instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.
        /// </summary>
        [Input("instanceMatchCriteria")]
        public Input<Pulumi.AwsNative.Ec2.CapacityReservationFleetInstanceMatchCriteria>? InstanceMatchCriteria { get; set; }

        [Input("instanceTypeSpecifications")]
        private InputList<Inputs.CapacityReservationFleetInstanceTypeSpecificationArgs>? _instanceTypeSpecifications;

        /// <summary>
        /// Information about the instance types for which to reserve the capacity.
        /// </summary>
        public InputList<Inputs.CapacityReservationFleetInstanceTypeSpecificationArgs> InstanceTypeSpecifications
        {
            get => _instanceTypeSpecifications ?? (_instanceTypeSpecifications = new InputList<Inputs.CapacityReservationFleetInstanceTypeSpecificationArgs>());
            set => _instanceTypeSpecifications = value;
        }

        /// <summary>
        /// Used to add an end date to a Capacity Reservation Fleet that has no end date and time. To add an end date to a Capacity Reservation Fleet, specify `true` for this paramater and specify the end date and time (in UTC time format) for the *EndDate* parameter.
        /// </summary>
        [Input("noRemoveEndDate")]
        public Input<bool>? NoRemoveEndDate { get; set; }

        /// <summary>
        /// Used to remove an end date from a Capacity Reservation Fleet that is configured to end automatically at a specific date and time. To remove the end date from a Capacity Reservation Fleet, specify `true` for this paramater and omit the *EndDate* parameter.
        /// </summary>
        [Input("removeEndDate")]
        public Input<bool>? RemoveEndDate { get; set; }

        [Input("tagSpecifications")]
        private InputList<Inputs.CapacityReservationFleetTagSpecificationArgs>? _tagSpecifications;

        /// <summary>
        /// The tags to assign to the Capacity Reservation Fleet. The tags are automatically assigned to the Capacity Reservations in the Fleet.
        /// </summary>
        public InputList<Inputs.CapacityReservationFleetTagSpecificationArgs> TagSpecifications
        {
            get => _tagSpecifications ?? (_tagSpecifications = new InputList<Inputs.CapacityReservationFleetTagSpecificationArgs>());
            set => _tagSpecifications = value;
        }

        /// <summary>
        /// Indicates the tenancy of the Capacity Reservation Fleet. All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:
        /// 
        /// - `default` - The Capacity Reservation Fleet is created on hardware that is shared with other AWS accounts .
        /// - `dedicated` - The Capacity Reservations are created on single-tenant hardware that is dedicated to a single AWS account .
        /// </summary>
        [Input("tenancy")]
        public Input<Pulumi.AwsNative.Ec2.CapacityReservationFleetTenancy>? Tenancy { get; set; }

        /// <summary>
        /// The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the *Amazon EC2 User Guide* .
        /// </summary>
        [Input("totalTargetCapacity")]
        public Input<int>? TotalTargetCapacity { get; set; }

        public CapacityReservationFleetArgs()
        {
        }
        public static new CapacityReservationFleetArgs Empty => new CapacityReservationFleetArgs();
    }
}
