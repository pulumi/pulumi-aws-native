// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetNetworkInterfaceAttachment
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::NetworkInterfaceAttachment
        /// </summary>
        public static Task<GetNetworkInterfaceAttachmentResult> InvokeAsync(GetNetworkInterfaceAttachmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkInterfaceAttachmentResult>("aws-native:ec2:getNetworkInterfaceAttachment", args ?? new GetNetworkInterfaceAttachmentArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::NetworkInterfaceAttachment
        /// </summary>
        public static Output<GetNetworkInterfaceAttachmentResult> Invoke(GetNetworkInterfaceAttachmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkInterfaceAttachmentResult>("aws-native:ec2:getNetworkInterfaceAttachment", args ?? new GetNetworkInterfaceAttachmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkInterfaceAttachmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the network interface attachment.
        /// </summary>
        [Input("attachmentId", required: true)]
        public string AttachmentId { get; set; } = null!;

        public GetNetworkInterfaceAttachmentArgs()
        {
        }
        public static new GetNetworkInterfaceAttachmentArgs Empty => new GetNetworkInterfaceAttachmentArgs();
    }

    public sealed class GetNetworkInterfaceAttachmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the network interface attachment.
        /// </summary>
        [Input("attachmentId", required: true)]
        public Input<string> AttachmentId { get; set; } = null!;

        public GetNetworkInterfaceAttachmentInvokeArgs()
        {
        }
        public static new GetNetworkInterfaceAttachmentInvokeArgs Empty => new GetNetworkInterfaceAttachmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkInterfaceAttachmentResult
    {
        /// <summary>
        /// The ID of the network interface attachment.
        /// </summary>
        public readonly string? AttachmentId;
        /// <summary>
        /// Whether to delete the network interface when the instance terminates. By default, this value is set to true.
        /// </summary>
        public readonly bool? DeleteOnTermination;
        /// <summary>
        /// ENA Express uses AWS Scalable Reliable Datagram (SRD) technology to increase the maximum bandwidth used per stream and minimize tail latency of network traffic between EC2 instances. With ENA Express, you can communicate between two EC2 instances in the same subnet within the same account, or in different accounts. Both sending and receiving instances must have ENA Express enabled.
        /// 
        /// To improve the reliability of network packet delivery, ENA Express reorders network packets on the receiving end by default. However, some UDP-based applications are designed to handle network packets that are out of order to reduce the overhead for packet delivery at the network layer. When ENA Express is enabled, you can specify whether UDP network traffic uses it.
        /// </summary>
        public readonly Outputs.NetworkInterfaceAttachmentEnaSrdSpecification? EnaSrdSpecification;

        [OutputConstructor]
        private GetNetworkInterfaceAttachmentResult(
            string? attachmentId,

            bool? deleteOnTermination,

            Outputs.NetworkInterfaceAttachmentEnaSrdSpecification? enaSrdSpecification)
        {
            AttachmentId = attachmentId;
            DeleteOnTermination = deleteOnTermination;
            EnaSrdSpecification = enaSrdSpecification;
        }
    }
}
