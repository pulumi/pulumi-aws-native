// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    /// <summary>
    /// Resource Type definition for AWS::EC2::VPCEndpointConnectionNotification
    /// </summary>
    [AwsNativeResourceType("aws-native:ec2:VpcEndpointConnectionNotification")]
    public partial class VpcEndpointConnectionNotification : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The endpoint events for which to receive notifications.
        /// </summary>
        [Output("connectionEvents")]
        public Output<ImmutableArray<string>> ConnectionEvents { get; private set; } = null!;

        /// <summary>
        /// The ARN of the SNS topic for the notifications.
        /// </summary>
        [Output("connectionNotificationArn")]
        public Output<string> ConnectionNotificationArn { get; private set; } = null!;

        /// <summary>
        /// The ID of the endpoint service.
        /// </summary>
        [Output("serviceId")]
        public Output<string?> ServiceId { get; private set; } = null!;

        /// <summary>
        /// VPC Endpoint Connection ID generated by service
        /// </summary>
        [Output("vpcEndpointConnectionNotificationId")]
        public Output<string> VpcEndpointConnectionNotificationId { get; private set; } = null!;

        /// <summary>
        /// The ID of the endpoint.
        /// </summary>
        [Output("vpcEndpointId")]
        public Output<string?> VpcEndpointId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcEndpointConnectionNotification resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcEndpointConnectionNotification(string name, VpcEndpointConnectionNotificationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ec2:VpcEndpointConnectionNotification", name, args ?? new VpcEndpointConnectionNotificationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcEndpointConnectionNotification(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ec2:VpcEndpointConnectionNotification", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "serviceId",
                    "vpcEndpointId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcEndpointConnectionNotification resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcEndpointConnectionNotification Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VpcEndpointConnectionNotification(name, id, options);
        }
    }

    public sealed class VpcEndpointConnectionNotificationArgs : global::Pulumi.ResourceArgs
    {
        [Input("connectionEvents", required: true)]
        private InputList<string>? _connectionEvents;

        /// <summary>
        /// The endpoint events for which to receive notifications.
        /// </summary>
        public InputList<string> ConnectionEvents
        {
            get => _connectionEvents ?? (_connectionEvents = new InputList<string>());
            set => _connectionEvents = value;
        }

        /// <summary>
        /// The ARN of the SNS topic for the notifications.
        /// </summary>
        [Input("connectionNotificationArn", required: true)]
        public Input<string> ConnectionNotificationArn { get; set; } = null!;

        /// <summary>
        /// The ID of the endpoint service.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        /// <summary>
        /// The ID of the endpoint.
        /// </summary>
        [Input("vpcEndpointId")]
        public Input<string>? VpcEndpointId { get; set; }

        public VpcEndpointConnectionNotificationArgs()
        {
        }
        public static new VpcEndpointConnectionNotificationArgs Empty => new VpcEndpointConnectionNotificationArgs();
    }
}
