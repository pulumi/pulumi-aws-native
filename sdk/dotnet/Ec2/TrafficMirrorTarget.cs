// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    /// <summary>
    /// The description of the Traffic Mirror target.
    /// </summary>
    [AwsNativeResourceType("aws-native:ec2:TrafficMirrorTarget")]
    public partial class TrafficMirrorTarget : global::Pulumi.CustomResource
    {
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// The description of the Traffic Mirror target.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the Gateway Load Balancer endpoint.
        /// </summary>
        [Output("gatewayLoadBalancerEndpointId")]
        public Output<string?> GatewayLoadBalancerEndpointId { get; private set; } = null!;

        /// <summary>
        /// The network interface ID that is associated with the target.
        /// </summary>
        [Output("networkInterfaceId")]
        public Output<string?> NetworkInterfaceId { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.
        /// </summary>
        [Output("networkLoadBalancerArn")]
        public Output<string?> NetworkLoadBalancerArn { get; private set; } = null!;

        /// <summary>
        ///  The tags to assign to the Traffic Mirror target.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a TrafficMirrorTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrafficMirrorTarget(string name, TrafficMirrorTargetArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:ec2:TrafficMirrorTarget", name, args ?? new TrafficMirrorTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrafficMirrorTarget(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ec2:TrafficMirrorTarget", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "description",
                    "gatewayLoadBalancerEndpointId",
                    "networkInterfaceId",
                    "networkLoadBalancerArn",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrafficMirrorTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrafficMirrorTarget Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new TrafficMirrorTarget(name, id, options);
        }
    }

    public sealed class TrafficMirrorTargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Traffic Mirror target.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the Gateway Load Balancer endpoint.
        /// </summary>
        [Input("gatewayLoadBalancerEndpointId")]
        public Input<string>? GatewayLoadBalancerEndpointId { get; set; }

        /// <summary>
        /// The network interface ID that is associated with the target.
        /// </summary>
        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.
        /// </summary>
        [Input("networkLoadBalancerArn")]
        public Input<string>? NetworkLoadBalancerArn { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        ///  The tags to assign to the Traffic Mirror target.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public TrafficMirrorTargetArgs()
        {
        }
        public static new TrafficMirrorTargetArgs Empty => new TrafficMirrorTargetArgs();
    }
}
