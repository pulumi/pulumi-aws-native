// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2.Outputs
{

    [OutputType]
    public sealed class Ec2FleetFleetLaunchTemplateOverridesRequest
    {
        /// <summary>
        /// The Availability Zone in which to launch the instances.
        /// </summary>
        public readonly string? AvailabilityZone;
        /// <summary>
        /// The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.
        /// 
        /// You must specify `VCpuCount` and `MemoryMiB` . All other attributes are optional. Any unspecified optional attribute is set to its default.
        /// 
        /// When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.
        /// 
        /// To limit the list of instance types from which Amazon EC2 can identify matching instance types, you can use one of the following parameters, but not both in the same request:
        /// 
        /// - `AllowedInstanceTypes` - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.
        /// - `ExcludedInstanceTypes` - The instance types to exclude from the list, even if they match your specified attributes.
        /// 
        /// &gt; If you specify `InstanceRequirements` , you can't specify `InstanceType` .
        /// &gt; 
        /// &gt; Attribute-based instance type selection is only supported when using Auto Scaling groups, EC2 Fleet, and Spot Fleet to launch instances. If you plan to use the launch template in the [launch instance wizard](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance-wizard.html) , or with the [RunInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) API or [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) AWS CloudFormation resource, you can't specify `InstanceRequirements` . 
        /// 
        /// For more information, see [Attribute-based instance type selection for EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html) , [Attribute-based instance type selection for Spot Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html) , and [Spot placement score](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html) in the *Amazon EC2 User Guide* .
        /// </summary>
        public readonly Outputs.Ec2FleetInstanceRequirementsRequest? InstanceRequirements;
        /// <summary>
        /// The instance type.
        /// 
        /// `mac1.metal` is not supported as a launch template override.
        /// 
        /// &gt; If you specify `InstanceType` , you can't specify `InstanceRequirements` .
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.
        /// 
        /// &gt; If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.
        /// </summary>
        public readonly string? MaxPrice;
        /// <summary>
        /// Describes the placement of an instance.
        /// </summary>
        public readonly Outputs.Ec2FleetPlacement? Placement;
        /// <summary>
        /// The priority for the launch template override. The highest priority is launched first.
        /// 
        /// If the On-Demand `AllocationStrategy` is set to `prioritized` , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.
        /// 
        /// If the Spot `AllocationStrategy` is set to `capacity-optimized-prioritized` , EC2 Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.
        /// 
        /// Valid values are whole numbers starting at `0` . The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. You can set the same priority for different launch template overrides.
        /// </summary>
        public readonly double? Priority;
        /// <summary>
        /// The IDs of the subnets in which to launch the instances. Separate multiple subnet IDs using commas (for example, `subnet-1234abcdeexample1, subnet-0987cdef6example2` ). A request of type `instant` can have only one subnet ID.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The number of units provided by the specified instance type.
        /// 
        /// &gt; When specifying weights, the price used in the `lowest-price` and `price-capacity-optimized` allocation strategies is per *unit* hour (where the instance price is divided by the specified weight). However, if all the specified weights are above the requested `TargetCapacity` , resulting in only 1 instance being launched, the price used is per *instance* hour.
        /// </summary>
        public readonly double? WeightedCapacity;

        [OutputConstructor]
        private Ec2FleetFleetLaunchTemplateOverridesRequest(
            string? availabilityZone,

            Outputs.Ec2FleetInstanceRequirementsRequest? instanceRequirements,

            string? instanceType,

            string? maxPrice,

            Outputs.Ec2FleetPlacement? placement,

            double? priority,

            string? subnetId,

            double? weightedCapacity)
        {
            AvailabilityZone = availabilityZone;
            InstanceRequirements = instanceRequirements;
            InstanceType = instanceType;
            MaxPrice = maxPrice;
            Placement = placement;
            Priority = priority;
            SubnetId = subnetId;
            WeightedCapacity = weightedCapacity;
        }
    }
}
