// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2.Outputs
{

    [OutputType]
    public sealed class NetworkInsightsAnalysisAnalysisRouteTableRoute
    {
        /// <summary>
        /// The destination IPv4 address, in CIDR notation.
        /// </summary>
        public readonly string? DestinationCidr;
        /// <summary>
        /// The prefix of the AWS service.
        /// </summary>
        public readonly string? DestinationPrefixListId;
        /// <summary>
        /// The ID of an egress-only internet gateway.
        /// </summary>
        public readonly string? EgressOnlyInternetGatewayId;
        /// <summary>
        /// The ID of the gateway, such as an internet gateway or virtual private gateway.
        /// </summary>
        public readonly string? GatewayId;
        /// <summary>
        /// The ID of the instance, such as a NAT instance.
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// The ID of a NAT gateway.
        /// </summary>
        public readonly string? NatGatewayId;
        /// <summary>
        /// The ID of a network interface.
        /// </summary>
        public readonly string? NetworkInterfaceId;
        /// <summary>
        /// Describes how the route was created. The following are the possible values:
        /// 
        /// - CreateRouteTable - The route was automatically created when the route table was created.
        /// - CreateRoute - The route was manually added to the route table.
        /// - EnableVgwRoutePropagation - The route was propagated by route propagation.
        /// </summary>
        public readonly string? Origin;
        /// <summary>
        /// The state. The following are the possible values:
        /// 
        /// - active
        /// - blackhole
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The ID of a transit gateway.
        /// </summary>
        public readonly string? TransitGatewayId;
        /// <summary>
        /// The ID of a VPC peering connection.
        /// </summary>
        public readonly string? VpcPeeringConnectionId;

        [OutputConstructor]
        private NetworkInsightsAnalysisAnalysisRouteTableRoute(
            string? destinationCidr,

            string? destinationPrefixListId,

            string? egressOnlyInternetGatewayId,

            string? gatewayId,

            string? instanceId,

            string? natGatewayId,

            string? networkInterfaceId,

            string? origin,

            string? state,

            string? transitGatewayId,

            string? vpcPeeringConnectionId)
        {
            DestinationCidr = destinationCidr;
            DestinationPrefixListId = destinationPrefixListId;
            EgressOnlyInternetGatewayId = egressOnlyInternetGatewayId;
            GatewayId = gatewayId;
            InstanceId = instanceId;
            NatGatewayId = natGatewayId;
            NetworkInterfaceId = networkInterfaceId;
            Origin = origin;
            State = state;
            TransitGatewayId = transitGatewayId;
            VpcPeeringConnectionId = vpcPeeringConnectionId;
        }
    }
}
