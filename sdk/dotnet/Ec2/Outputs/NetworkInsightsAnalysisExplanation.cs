// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2.Outputs
{

    [OutputType]
    public sealed class NetworkInsightsAnalysisExplanation
    {
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? Acl;
        /// <summary>
        /// Describes a network access control (ACL) rule.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisAclRule? AclRule;
        /// <summary>
        /// The IPv4 address, in CIDR notation.
        /// </summary>
        public readonly string? Address;
        /// <summary>
        /// The IPv4 addresses, in CIDR notation.
        /// </summary>
        public readonly ImmutableArray<string> Addresses;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? AttachedTo;
        /// <summary>
        /// The Availability Zones.
        /// </summary>
        public readonly ImmutableArray<string> AvailabilityZones;
        /// <summary>
        /// The CIDR ranges.
        /// </summary>
        public readonly ImmutableArray<string> Cidrs;
        /// <summary>
        /// Describes a load balancer listener.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisLoadBalancerListener? ClassicLoadBalancerListener;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? Component;
        /// <summary>
        /// The AWS account for the component.
        /// </summary>
        public readonly string? ComponentAccount;
        /// <summary>
        /// The Region for the component.
        /// </summary>
        public readonly string? ComponentRegion;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? CustomerGateway;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? Destination;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? DestinationVpc;
        /// <summary>
        /// The direction. The following are the possible values:
        /// 
        /// - egress
        /// - ingress
        /// </summary>
        public readonly string? Direction;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? ElasticLoadBalancerListener;
        /// <summary>
        /// The explanation code.
        /// </summary>
        public readonly string? ExplanationCode;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? IngressRouteTable;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? InternetGateway;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the load balancer.
        /// </summary>
        public readonly string? LoadBalancerArn;
        /// <summary>
        /// The listener port of the load balancer.
        /// </summary>
        public readonly int? LoadBalancerListenerPort;
        /// <summary>
        /// Describes a load balancer target.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisLoadBalancerTarget? LoadBalancerTarget;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? LoadBalancerTargetGroup;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisAnalysisComponent> LoadBalancerTargetGroups;
        /// <summary>
        /// The target port.
        /// </summary>
        public readonly int? LoadBalancerTargetPort;
        /// <summary>
        /// The missing component.
        /// </summary>
        public readonly string? MissingComponent;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? NatGateway;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? NetworkInterface;
        /// <summary>
        /// The packet field.
        /// </summary>
        public readonly string? PacketField;
        /// <summary>
        /// The port.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Describes a range of ports.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisPortRange> PortRanges;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? PrefixList;
        /// <summary>
        /// The protocols.
        /// </summary>
        public readonly ImmutableArray<string> Protocols;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? RouteTable;
        /// <summary>
        /// Describes a route table route.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisRouteTableRoute? RouteTableRoute;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? SecurityGroup;
        /// <summary>
        /// Describes a security group rule.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisSecurityGroupRule? SecurityGroupRule;
        /// <summary>
        /// The security groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisAnalysisComponent> SecurityGroups;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? SourceVpc;
        /// <summary>
        /// The state.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? Subnet;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? SubnetRouteTable;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? TransitGateway;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? TransitGatewayAttachment;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? TransitGatewayRouteTable;
        /// <summary>
        /// Describes a route in a transit gateway route table.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisTransitGatewayRouteTableRoute? TransitGatewayRouteTableRoute;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? Vpc;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? VpcEndpoint;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? VpcPeeringConnection;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? VpnConnection;
        /// <summary>
        /// Describes a path component.
        /// </summary>
        public readonly Outputs.NetworkInsightsAnalysisAnalysisComponent? VpnGateway;

        [OutputConstructor]
        private NetworkInsightsAnalysisExplanation(
            Outputs.NetworkInsightsAnalysisAnalysisComponent? acl,

            Outputs.NetworkInsightsAnalysisAnalysisAclRule? aclRule,

            string? address,

            ImmutableArray<string> addresses,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? attachedTo,

            ImmutableArray<string> availabilityZones,

            ImmutableArray<string> cidrs,

            Outputs.NetworkInsightsAnalysisAnalysisLoadBalancerListener? classicLoadBalancerListener,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? component,

            string? componentAccount,

            string? componentRegion,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? customerGateway,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? destination,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? destinationVpc,

            string? direction,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? elasticLoadBalancerListener,

            string? explanationCode,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? ingressRouteTable,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? internetGateway,

            string? loadBalancerArn,

            int? loadBalancerListenerPort,

            Outputs.NetworkInsightsAnalysisAnalysisLoadBalancerTarget? loadBalancerTarget,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? loadBalancerTargetGroup,

            ImmutableArray<Outputs.NetworkInsightsAnalysisAnalysisComponent> loadBalancerTargetGroups,

            int? loadBalancerTargetPort,

            string? missingComponent,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? natGateway,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? networkInterface,

            string? packetField,

            int? port,

            ImmutableArray<Outputs.NetworkInsightsAnalysisPortRange> portRanges,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? prefixList,

            ImmutableArray<string> protocols,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? routeTable,

            Outputs.NetworkInsightsAnalysisAnalysisRouteTableRoute? routeTableRoute,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? securityGroup,

            Outputs.NetworkInsightsAnalysisAnalysisSecurityGroupRule? securityGroupRule,

            ImmutableArray<Outputs.NetworkInsightsAnalysisAnalysisComponent> securityGroups,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? sourceVpc,

            string? state,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? subnet,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? subnetRouteTable,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? transitGateway,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? transitGatewayAttachment,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? transitGatewayRouteTable,

            Outputs.NetworkInsightsAnalysisTransitGatewayRouteTableRoute? transitGatewayRouteTableRoute,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? vpc,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? vpcEndpoint,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? vpcPeeringConnection,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? vpnConnection,

            Outputs.NetworkInsightsAnalysisAnalysisComponent? vpnGateway)
        {
            Acl = acl;
            AclRule = aclRule;
            Address = address;
            Addresses = addresses;
            AttachedTo = attachedTo;
            AvailabilityZones = availabilityZones;
            Cidrs = cidrs;
            ClassicLoadBalancerListener = classicLoadBalancerListener;
            Component = component;
            ComponentAccount = componentAccount;
            ComponentRegion = componentRegion;
            CustomerGateway = customerGateway;
            Destination = destination;
            DestinationVpc = destinationVpc;
            Direction = direction;
            ElasticLoadBalancerListener = elasticLoadBalancerListener;
            ExplanationCode = explanationCode;
            IngressRouteTable = ingressRouteTable;
            InternetGateway = internetGateway;
            LoadBalancerArn = loadBalancerArn;
            LoadBalancerListenerPort = loadBalancerListenerPort;
            LoadBalancerTarget = loadBalancerTarget;
            LoadBalancerTargetGroup = loadBalancerTargetGroup;
            LoadBalancerTargetGroups = loadBalancerTargetGroups;
            LoadBalancerTargetPort = loadBalancerTargetPort;
            MissingComponent = missingComponent;
            NatGateway = natGateway;
            NetworkInterface = networkInterface;
            PacketField = packetField;
            Port = port;
            PortRanges = portRanges;
            PrefixList = prefixList;
            Protocols = protocols;
            RouteTable = routeTable;
            RouteTableRoute = routeTableRoute;
            SecurityGroup = securityGroup;
            SecurityGroupRule = securityGroupRule;
            SecurityGroups = securityGroups;
            SourceVpc = sourceVpc;
            State = state;
            Subnet = subnet;
            SubnetRouteTable = subnetRouteTable;
            TransitGateway = transitGateway;
            TransitGatewayAttachment = transitGatewayAttachment;
            TransitGatewayRouteTable = transitGatewayRouteTable;
            TransitGatewayRouteTableRoute = transitGatewayRouteTableRoute;
            Vpc = vpc;
            VpcEndpoint = vpcEndpoint;
            VpcPeeringConnection = vpcPeeringConnection;
            VpnConnection = vpnConnection;
            VpnGateway = vpnGateway;
        }
    }
}
