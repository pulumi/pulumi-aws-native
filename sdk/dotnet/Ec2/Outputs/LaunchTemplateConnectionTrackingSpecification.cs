// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2.Outputs
{

    /// <summary>
    /// A security group connection tracking specification that enables you to set the idle timeout for connection tracking on an Elastic network interface. For more information, see [Connection tracking timeouts](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-connection-tracking.html#connection-tracking-timeouts) in the *Amazon Elastic Compute Cloud User Guide*.
    /// </summary>
    [OutputType]
    public sealed class LaunchTemplateConnectionTrackingSpecification
    {
        /// <summary>
        /// Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days). Default: 432000 seconds. Recommended: Less than 432000 seconds.
        /// </summary>
        public readonly int? TcpEstablishedTimeout;
        /// <summary>
        /// Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction. Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.
        /// </summary>
        public readonly int? UdpStreamTimeout;
        /// <summary>
        /// Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.
        /// </summary>
        public readonly int? UdpTimeout;

        [OutputConstructor]
        private LaunchTemplateConnectionTrackingSpecification(
            int? tcpEstablishedTimeout,

            int? udpStreamTimeout,

            int? udpTimeout)
        {
            TcpEstablishedTimeout = tcpEstablishedTimeout;
            UdpStreamTimeout = udpStreamTimeout;
            UdpTimeout = udpTimeout;
        }
    }
}
