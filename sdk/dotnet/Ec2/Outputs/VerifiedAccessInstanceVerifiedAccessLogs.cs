// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2.Outputs
{

    /// <summary>
    /// The configuration options for AWS Verified Access instances.
    /// </summary>
    [OutputType]
    public sealed class VerifiedAccessInstanceVerifiedAccessLogs
    {
        /// <summary>
        /// Sends Verified Access logs to CloudWatch Logs.
        /// </summary>
        public readonly Outputs.VerifiedAccessInstanceVerifiedAccessLogsCloudWatchLogsProperties? CloudWatchLogs;
        /// <summary>
        /// Include claims from trust providers in Verified Access logs.
        /// </summary>
        public readonly bool? IncludeTrustContext;
        /// <summary>
        /// Sends Verified Access logs to Kinesis.
        /// </summary>
        public readonly Outputs.VerifiedAccessInstanceVerifiedAccessLogsKinesisDataFirehoseProperties? KinesisDataFirehose;
        /// <summary>
        /// Select log version for Verified Access logs.
        /// </summary>
        public readonly string? LogVersion;
        /// <summary>
        /// Sends Verified Access logs to Amazon S3.
        /// </summary>
        public readonly Outputs.VerifiedAccessInstanceVerifiedAccessLogsS3Properties? S3;

        [OutputConstructor]
        private VerifiedAccessInstanceVerifiedAccessLogs(
            Outputs.VerifiedAccessInstanceVerifiedAccessLogsCloudWatchLogsProperties? cloudWatchLogs,

            bool? includeTrustContext,

            Outputs.VerifiedAccessInstanceVerifiedAccessLogsKinesisDataFirehoseProperties? kinesisDataFirehose,

            string? logVersion,

            Outputs.VerifiedAccessInstanceVerifiedAccessLogsS3Properties? s3)
        {
            CloudWatchLogs = cloudWatchLogs;
            IncludeTrustContext = includeTrustContext;
            KinesisDataFirehose = kinesisDataFirehose;
            LogVersion = logVersion;
            S3 = s3;
        }
    }
}
