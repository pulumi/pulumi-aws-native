// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2.Outputs
{

    [OutputType]
    public sealed class SpotFleetLaunchSpecification
    {
        /// <summary>
        /// One or more block devices that are mapped to the Spot Instances. You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.
        /// </summary>
        public readonly ImmutableArray<Outputs.SpotFleetBlockDeviceMapping> BlockDeviceMappings;
        /// <summary>
        /// Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
        /// 
        /// Default: `false`
        /// </summary>
        public readonly bool? EbsOptimized;
        /// <summary>
        /// The IAM instance profile.
        /// </summary>
        public readonly Outputs.SpotFleetIamInstanceProfileSpecification? IamInstanceProfile;
        /// <summary>
        /// The ID of the AMI.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.
        /// 
        /// &gt; If you specify `InstanceRequirements` , you can't specify `InstanceType` .
        /// </summary>
        public readonly Outputs.SpotFleetInstanceRequirementsRequest? InstanceRequirements;
        /// <summary>
        /// The instance type.
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// The ID of the kernel.
        /// </summary>
        public readonly string? KernelId;
        /// <summary>
        /// The name of the key pair.
        /// </summary>
        public readonly string? KeyName;
        /// <summary>
        /// Enable or disable monitoring for the instances.
        /// </summary>
        public readonly Outputs.SpotFleetMonitoring? Monitoring;
        /// <summary>
        /// The network interfaces.
        /// </summary>
        public readonly ImmutableArray<Outputs.SpotFleetInstanceNetworkInterfaceSpecification> NetworkInterfaces;
        /// <summary>
        /// The placement information.
        /// </summary>
        public readonly Outputs.SpotFleetSpotPlacement? Placement;
        /// <summary>
        /// The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.
        /// </summary>
        public readonly string? RamdiskId;
        /// <summary>
        /// The security groups.
        /// 
        /// If you specify a network interface, you must specify any security groups as part of the network interface instead of using this parameter.
        /// </summary>
        public readonly ImmutableArray<Outputs.SpotFleetGroupIdentifier> SecurityGroups;
        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.
        /// 
        /// &gt; If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.
        /// </summary>
        public readonly string? SpotPrice;
        /// <summary>
        /// The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, "subnet-1234abcdeexample1, subnet-0987cdef6example2".
        /// 
        /// If you specify a network interface, you must specify any subnets as part of the network interface instead of using this parameter.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The tags to apply during creation.
        /// </summary>
        public readonly ImmutableArray<Outputs.SpotFleetTagSpecification> TagSpecifications;
        /// <summary>
        /// The base64-encoded user data that instances use when starting up. User data is limited to 16 KB.
        /// </summary>
        public readonly string? UserData;
        /// <summary>
        /// The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.
        /// 
        /// If the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.
        /// </summary>
        public readonly double? WeightedCapacity;

        [OutputConstructor]
        private SpotFleetLaunchSpecification(
            ImmutableArray<Outputs.SpotFleetBlockDeviceMapping> blockDeviceMappings,

            bool? ebsOptimized,

            Outputs.SpotFleetIamInstanceProfileSpecification? iamInstanceProfile,

            string imageId,

            Outputs.SpotFleetInstanceRequirementsRequest? instanceRequirements,

            string? instanceType,

            string? kernelId,

            string? keyName,

            Outputs.SpotFleetMonitoring? monitoring,

            ImmutableArray<Outputs.SpotFleetInstanceNetworkInterfaceSpecification> networkInterfaces,

            Outputs.SpotFleetSpotPlacement? placement,

            string? ramdiskId,

            ImmutableArray<Outputs.SpotFleetGroupIdentifier> securityGroups,

            string? spotPrice,

            string? subnetId,

            ImmutableArray<Outputs.SpotFleetTagSpecification> tagSpecifications,

            string? userData,

            double? weightedCapacity)
        {
            BlockDeviceMappings = blockDeviceMappings;
            EbsOptimized = ebsOptimized;
            IamInstanceProfile = iamInstanceProfile;
            ImageId = imageId;
            InstanceRequirements = instanceRequirements;
            InstanceType = instanceType;
            KernelId = kernelId;
            KeyName = keyName;
            Monitoring = monitoring;
            NetworkInterfaces = networkInterfaces;
            Placement = placement;
            RamdiskId = ramdiskId;
            SecurityGroups = securityGroups;
            SpotPrice = spotPrice;
            SubnetId = subnetId;
            TagSpecifications = tagSpecifications;
            UserData = userData;
            WeightedCapacity = weightedCapacity;
        }
    }
}
