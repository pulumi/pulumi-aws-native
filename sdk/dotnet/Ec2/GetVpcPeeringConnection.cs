// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetVpcPeeringConnection
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCPeeringConnection
        /// </summary>
        public static Task<GetVpcPeeringConnectionResult> InvokeAsync(GetVpcPeeringConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcPeeringConnectionResult>("aws-native:ec2:getVpcPeeringConnection", args ?? new GetVpcPeeringConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCPeeringConnection
        /// </summary>
        public static Output<GetVpcPeeringConnectionResult> Invoke(GetVpcPeeringConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcPeeringConnectionResult>("aws-native:ec2:getVpcPeeringConnection", args ?? new GetVpcPeeringConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcPeeringConnectionArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetVpcPeeringConnectionArgs()
        {
        }
        public static new GetVpcPeeringConnectionArgs Empty => new GetVpcPeeringConnectionArgs();
    }

    public sealed class GetVpcPeeringConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetVpcPeeringConnectionInvokeArgs()
        {
        }
        public static new GetVpcPeeringConnectionInvokeArgs Empty => new GetVpcPeeringConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcPeeringConnectionResult
    {
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.VpcPeeringConnectionTag> Tags;

        [OutputConstructor]
        private GetVpcPeeringConnectionResult(
            string? id,

            ImmutableArray<Outputs.VpcPeeringConnectionTag> tags)
        {
            Id = id;
            Tags = tags;
        }
    }
}
