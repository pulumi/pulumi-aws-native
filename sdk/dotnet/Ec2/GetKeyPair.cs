// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetKeyPair
    {
        /// <summary>
        /// Specifies a key pair for use with an EC2long instance as follows:
        ///   +  To import an existing key pair, include the ``PublicKeyMaterial`` property.
        ///   +  To create a new key pair, omit the ``PublicKeyMaterial`` property.
        ///   
        ///  When you import an existing key pair, you specify the public key material for the key. We assume that you have the private key material for the key. CFNlong does not create or return the private key material when you import a key pair.
        ///  When you create a new key pair, the private key is saved to SYSlong Parameter Store, using a parameter with the following name: ``/ec2/keypair/{key_pair_id}``. For more information about retrieving private key, and the required permissions, see [Create a key pair using](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-key-pairs.html#create-key-pair-cloudformation) in the *User Guide*.
        ///  When CFN deletes a key pair that was created or imported by a stack, it also deletes the parameter that was used to store the private key material in Parameter Store.
        /// </summary>
        public static Task<GetKeyPairResult> InvokeAsync(GetKeyPairArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKeyPairResult>("aws-native:ec2:getKeyPair", args ?? new GetKeyPairArgs(), options.WithDefaults());

        /// <summary>
        /// Specifies a key pair for use with an EC2long instance as follows:
        ///   +  To import an existing key pair, include the ``PublicKeyMaterial`` property.
        ///   +  To create a new key pair, omit the ``PublicKeyMaterial`` property.
        ///   
        ///  When you import an existing key pair, you specify the public key material for the key. We assume that you have the private key material for the key. CFNlong does not create or return the private key material when you import a key pair.
        ///  When you create a new key pair, the private key is saved to SYSlong Parameter Store, using a parameter with the following name: ``/ec2/keypair/{key_pair_id}``. For more information about retrieving private key, and the required permissions, see [Create a key pair using](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-key-pairs.html#create-key-pair-cloudformation) in the *User Guide*.
        ///  When CFN deletes a key pair that was created or imported by a stack, it also deletes the parameter that was used to store the private key material in Parameter Store.
        /// </summary>
        public static Output<GetKeyPairResult> Invoke(GetKeyPairInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeyPairResult>("aws-native:ec2:getKeyPair", args ?? new GetKeyPairInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKeyPairArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique name for the key pair.
        ///  Constraints: Up to 255 ASCII characters
        /// </summary>
        [Input("keyName", required: true)]
        public string KeyName { get; set; } = null!;

        public GetKeyPairArgs()
        {
        }
        public static new GetKeyPairArgs Empty => new GetKeyPairArgs();
    }

    public sealed class GetKeyPairInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique name for the key pair.
        ///  Constraints: Up to 255 ASCII characters
        /// </summary>
        [Input("keyName", required: true)]
        public Input<string> KeyName { get; set; } = null!;

        public GetKeyPairInvokeArgs()
        {
        }
        public static new GetKeyPairInvokeArgs Empty => new GetKeyPairInvokeArgs();
    }


    [OutputType]
    public sealed class GetKeyPairResult
    {
        public readonly string? KeyFingerprint;
        public readonly string? KeyPairId;

        [OutputConstructor]
        private GetKeyPairResult(
            string? keyFingerprint,

            string? keyPairId)
        {
            KeyFingerprint = keyFingerprint;
            KeyPairId = keyPairId;
        }
    }
}
