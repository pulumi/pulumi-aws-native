// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetIpamPool
    {
        /// <summary>
        /// Resource Schema of AWS::EC2::IPAMPool Type
        /// </summary>
        public static Task<GetIpamPoolResult> InvokeAsync(GetIpamPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpamPoolResult>("aws-native:ec2:getIpamPool", args ?? new GetIpamPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Schema of AWS::EC2::IPAMPool Type
        /// </summary>
        public static Output<GetIpamPoolResult> Invoke(GetIpamPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpamPoolResult>("aws-native:ec2:getIpamPool", args ?? new GetIpamPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpamPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of the IPAM Pool.
        /// </summary>
        [Input("ipamPoolId", required: true)]
        public string IpamPoolId { get; set; } = null!;

        public GetIpamPoolArgs()
        {
        }
        public static new GetIpamPoolArgs Empty => new GetIpamPoolArgs();
    }

    public sealed class GetIpamPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of the IPAM Pool.
        /// </summary>
        [Input("ipamPoolId", required: true)]
        public Input<string> IpamPoolId { get; set; } = null!;

        public GetIpamPoolInvokeArgs()
        {
        }
        public static new GetIpamPoolInvokeArgs Empty => new GetIpamPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpamPoolResult
    {
        /// <summary>
        /// The default netmask length for allocations made from this pool. This value is used when the netmask length of an allocation isn't specified.
        /// </summary>
        public readonly int? AllocationDefaultNetmaskLength;
        /// <summary>
        /// The maximum allowed netmask length for allocations made from this pool.
        /// </summary>
        public readonly int? AllocationMaxNetmaskLength;
        /// <summary>
        /// The minimum allowed netmask length for allocations made from this pool.
        /// </summary>
        public readonly int? AllocationMinNetmaskLength;
        /// <summary>
        /// When specified, an allocation will not be allowed unless a resource has a matching set of tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpamPoolTag> AllocationResourceTags;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IPAM Pool.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Determines what to do if IPAM discovers resources that haven't been assigned an allocation. If set to true, an allocation will be made automatically.
        /// </summary>
        public readonly bool? AutoImport;
        public readonly string? Description;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IPAM this pool is a part of.
        /// </summary>
        public readonly string? IpamArn;
        /// <summary>
        /// Id of the IPAM Pool.
        /// </summary>
        public readonly string? IpamPoolId;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the scope this pool is a part of.
        /// </summary>
        public readonly string? IpamScopeArn;
        /// <summary>
        /// Determines whether this scope contains publicly routable space or space for a private network
        /// </summary>
        public readonly Pulumi.AwsNative.Ec2.IpamPoolIpamScopeType? IpamScopeType;
        /// <summary>
        /// The depth of this pool in the source pool hierarchy.
        /// </summary>
        public readonly int? PoolDepth;
        /// <summary>
        /// A list of cidrs representing the address space available for allocation in this pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpamPoolProvisionedCidr> ProvisionedCidrs;
        /// <summary>
        /// The state of this pool. This can be one of the following values: "create-in-progress", "create-complete", "modify-in-progress", "modify-complete", "delete-in-progress", or "delete-complete"
        /// </summary>
        public readonly Pulumi.AwsNative.Ec2.IpamPoolState? State;
        /// <summary>
        /// An explanation of how the pool arrived at it current state.
        /// </summary>
        public readonly string? StateMessage;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpamPoolTag> Tags;

        [OutputConstructor]
        private GetIpamPoolResult(
            int? allocationDefaultNetmaskLength,

            int? allocationMaxNetmaskLength,

            int? allocationMinNetmaskLength,

            ImmutableArray<Outputs.IpamPoolTag> allocationResourceTags,

            string? arn,

            bool? autoImport,

            string? description,

            string? ipamArn,

            string? ipamPoolId,

            string? ipamScopeArn,

            Pulumi.AwsNative.Ec2.IpamPoolIpamScopeType? ipamScopeType,

            int? poolDepth,

            ImmutableArray<Outputs.IpamPoolProvisionedCidr> provisionedCidrs,

            Pulumi.AwsNative.Ec2.IpamPoolState? state,

            string? stateMessage,

            ImmutableArray<Outputs.IpamPoolTag> tags)
        {
            AllocationDefaultNetmaskLength = allocationDefaultNetmaskLength;
            AllocationMaxNetmaskLength = allocationMaxNetmaskLength;
            AllocationMinNetmaskLength = allocationMinNetmaskLength;
            AllocationResourceTags = allocationResourceTags;
            Arn = arn;
            AutoImport = autoImport;
            Description = description;
            IpamArn = ipamArn;
            IpamPoolId = ipamPoolId;
            IpamScopeArn = ipamScopeArn;
            IpamScopeType = ipamScopeType;
            PoolDepth = poolDepth;
            ProvisionedCidrs = provisionedCidrs;
            State = state;
            StateMessage = stateMessage;
            Tags = tags;
        }
    }
}
